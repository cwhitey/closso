// Compiled by ClojureScript 0.0-2665 {:static-fns true}
goog.provide('cljs.core');
goog.require('goog.string.StringBuffer');
goog.require('goog.array');
goog.require('goog.object');
goog.require('goog.string');
cljs.core._STAR_clojurescript_version_STAR_ = "0.0-2665";
cljs.core._STAR_unchecked_if_STAR_ = false;
if(typeof cljs.core._STAR_print_fn_STAR_ !== 'undefined'){
} else {
/**
* Each runtime environment provides a different way to print output.
* Whatever function *print-fn* is bound to will be passed any
* Strings which should be printed.
*/
cljs.core._STAR_print_fn_STAR_ = (function _STAR_print_fn_STAR_(_){
throw (new Error("No *print-fn* fn set for evaluation environment"));
});
}
/**
* Set *print-fn* to f.
*/
cljs.core.set_print_fn_BANG_ = (function set_print_fn_BANG_(f){
return cljs.core._STAR_print_fn_STAR_ = f;
});
cljs.core._STAR_flush_on_newline_STAR_ = true;
cljs.core._STAR_print_newline_STAR_ = true;
cljs.core._STAR_print_readably_STAR_ = true;
cljs.core._STAR_print_meta_STAR_ = false;
cljs.core._STAR_print_dup_STAR_ = false;
cljs.core._STAR_print_length_STAR_ = null;
cljs.core._STAR_print_level_STAR_ = null;
if(typeof cljs.core._STAR_loaded_libs_STAR_ !== 'undefined'){
} else {
cljs.core._STAR_loaded_libs_STAR_ = null;
}
cljs.core.pr_opts = (function pr_opts(){
return new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null,"flush-on-newline","flush-on-newline",-151457939),cljs.core._STAR_flush_on_newline_STAR_,new cljs.core.Keyword(null,"readably","readably",1129599760),cljs.core._STAR_print_readably_STAR_,new cljs.core.Keyword(null,"meta","meta",1499536964),cljs.core._STAR_print_meta_STAR_,new cljs.core.Keyword(null,"dup","dup",556298533),cljs.core._STAR_print_dup_STAR_,new cljs.core.Keyword(null,"print-length","print-length",1931866356),cljs.core._STAR_print_length_STAR_], null);
});
/**
* Set *print-fn* to console.log
*/
cljs.core.enable_console_print_BANG_ = (function enable_console_print_BANG_(){
cljs.core._STAR_print_newline_STAR_ = false;

return cljs.core._STAR_print_fn_STAR_ = (function() { 
var G__25819__delegate = function (args){
return console.log.apply(console,(function (){var G__25818 = args;
return (cljs.core.into_array.cljs$core$IFn$_invoke$arity$1 ? cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(G__25818) : cljs.core.into_array.call(null,G__25818));
})());
};
var G__25819 = function (var_args){
var args = null;
if (arguments.length > 0) {
var G__25820__i = 0, G__25820__a = new Array(arguments.length -  0);
while (G__25820__i < G__25820__a.length) {G__25820__a[G__25820__i] = arguments[G__25820__i + 0]; ++G__25820__i;}
  args = new cljs.core.IndexedSeq(G__25820__a,0);
} 
return G__25819__delegate.call(this,args);};
G__25819.cljs$lang$maxFixedArity = 0;
G__25819.cljs$lang$applyTo = (function (arglist__25821){
var args = cljs.core.seq(arglist__25821);
return G__25819__delegate(args);
});
G__25819.cljs$core$IFn$_invoke$arity$variadic = G__25819__delegate;
return G__25819;
})()
;
});
/**
* Internal - do not use!
*/
cljs.core.truth_ = (function truth_(x){
return (x != null && x !== false);
});
cljs.core.not_native = null;

/**
* Tests if 2 arguments are the same object
*/
cljs.core.identical_QMARK_ = (function identical_QMARK_(x,y){
return (x === y);
});
/**
* Returns true if x is nil, false otherwise.
*/
cljs.core.nil_QMARK_ = (function nil_QMARK_(x){
return (x == null);
});
cljs.core.array_QMARK_ = (function array_QMARK_(x){
return x instanceof Array;
});
cljs.core.number_QMARK_ = (function number_QMARK_(n){
return typeof n === 'number';
});
/**
* Returns true if x is logical false, false otherwise.
*/
cljs.core.not = (function not(x){
if(cljs.core.truth_(x)){
return false;
} else {
return true;
}
});
/**
* Returns true if x is not nil, false otherwise.
*/
cljs.core.some_QMARK_ = (function some_QMARK_(x){
return !((x == null));
});
cljs.core.object_QMARK_ = (function object_QMARK_(x){
if(!((x == null))){
return (x.constructor === Object);
} else {
return false;
}
});
cljs.core.string_QMARK_ = (function string_QMARK_(x){
var G__25823 = x;
return goog.isString(G__25823);
});
/**
* Internal - do not use!
*/
cljs.core.native_satisfies_QMARK_ = (function native_satisfies_QMARK_(p,x){
var x__$1 = (((x == null))?null:x);
if((p[(function (){var G__25825 = x__$1;
return goog.typeOf(G__25825);
})()])){
return true;
} else {
if((p["_"])){
return true;
} else {
return false;

}
}
});
cljs.core.is_proto_ = (function is_proto_(x){
return (x.constructor.prototype === x);
});
/**
* When compiled for a command-line target, whatever
* function *main-fn* is set to will be called with the command-line
* argv as arguments
*/
cljs.core._STAR_main_cli_fn_STAR_ = null;
cljs.core.type = (function type(x){
if((x == null)){
return null;
} else {
return x.constructor;
}
});
cljs.core.missing_protocol = (function missing_protocol(proto,obj){
var ty = cljs.core.type(obj);
var ty__$1 = (cljs.core.truth_((function (){var and__24260__auto__ = ty;
if(cljs.core.truth_(and__24260__auto__)){
return ty.cljs$lang$type;
} else {
return and__24260__auto__;
}
})())?ty.cljs$lang$ctorStr:(function (){var G__25827 = obj;
return goog.typeOf(G__25827);
})());
return (new Error(["No protocol method ",proto," defined for type ",ty__$1,": ",obj].join("")));
});
cljs.core.type__GT_str = (function type__GT_str(ty){
var temp__4124__auto__ = ty.cljs$lang$ctorStr;
if(cljs.core.truth_(temp__4124__auto__)){
var s = temp__4124__auto__;
return s;
} else {
return [cljs.core.str(ty)].join('');
}
});
if((typeof Symbol !== 'undefined') && (((function (){var G__25829 = Symbol;
return goog.typeOf(G__25829);
})() === "function"))){
cljs.core.ITER_SYMBOL = Symbol.iterator;
} else {
cljs.core.ITER_SYMBOL = "@@iterator";
}
cljs.core.make_array = (function() {
var make_array = null;
var make_array__1 = (function (size){
return (new Array(size));
});
var make_array__2 = (function (type,size){
return make_array.cljs$core$IFn$_invoke$arity$1(size);
});
make_array = function(type,size){
switch(arguments.length){
case 1:
return make_array__1.call(this,type);
case 2:
return make_array__2.call(this,type,size);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
make_array.cljs$core$IFn$_invoke$arity$1 = make_array__1;
make_array.cljs$core$IFn$_invoke$arity$2 = make_array__2;
return make_array;
})()
;
/**
* Returns a javascript array, cloned from the passed in array
*/
cljs.core.aclone = (function aclone(arr){
var len = arr.length;
var new_arr = (new Array(len));
var n__25159__auto___25831 = len;
var i_25832 = (0);
while(true){
if((i_25832 < n__25159__auto___25831)){
(new_arr[i_25832] = (arr[i_25832]));

var G__25833 = (i_25832 + (1));
i_25832 = G__25833;
continue;
} else {
}
break;
}

return new_arr;
});
/**
* Creates a new javascript array.
* @param {...*} var_args
*/
cljs.core.array = (function array(var_args){
var a = (new Array(arguments.length));
var i = (0);
while(true){
if((i < a.length)){
(a[i] = (arguments[i]));

var G__25834 = (i + (1));
i = G__25834;
continue;
} else {
return a;
}
break;
}
});
/**
* Returns the value at the index.
* @param {...*} var_args
*/
cljs.core.aget = (function() {
var aget = null;
var aget__2 = (function (array,i){
return (array[i]);
});
var aget__3 = (function() { 
var G__25843__delegate = function (array,i,idxs){
var G__25840 = aget;
var G__25841 = aget.cljs$core$IFn$_invoke$arity$2(array,i);
var G__25842 = idxs;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$3 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$3(G__25840,G__25841,G__25842) : cljs.core.apply.call(null,G__25840,G__25841,G__25842));
};
var G__25843 = function (array,i,var_args){
var idxs = null;
if (arguments.length > 2) {
var G__25844__i = 0, G__25844__a = new Array(arguments.length -  2);
while (G__25844__i < G__25844__a.length) {G__25844__a[G__25844__i] = arguments[G__25844__i + 2]; ++G__25844__i;}
  idxs = new cljs.core.IndexedSeq(G__25844__a,0);
} 
return G__25843__delegate.call(this,array,i,idxs);};
G__25843.cljs$lang$maxFixedArity = 2;
G__25843.cljs$lang$applyTo = (function (arglist__25845){
var array = cljs.core.first(arglist__25845);
arglist__25845 = cljs.core.next(arglist__25845);
var i = cljs.core.first(arglist__25845);
var idxs = cljs.core.rest(arglist__25845);
return G__25843__delegate(array,i,idxs);
});
G__25843.cljs$core$IFn$_invoke$arity$variadic = G__25843__delegate;
return G__25843;
})()
;
aget = function(array,i,var_args){
var idxs = var_args;
switch(arguments.length){
case 2:
return aget__2.call(this,array,i);
default:
var G__25846 = null;
if (arguments.length > 2) {
var G__25847__i = 0, G__25847__a = new Array(arguments.length -  2);
while (G__25847__i < G__25847__a.length) {G__25847__a[G__25847__i] = arguments[G__25847__i + 2]; ++G__25847__i;}
G__25846 = new cljs.core.IndexedSeq(G__25847__a,0);
}
return aget__3.cljs$core$IFn$_invoke$arity$variadic(array,i, G__25846);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
aget.cljs$lang$maxFixedArity = 2;
aget.cljs$lang$applyTo = aget__3.cljs$lang$applyTo;
aget.cljs$core$IFn$_invoke$arity$2 = aget__2;
aget.cljs$core$IFn$_invoke$arity$variadic = aget__3.cljs$core$IFn$_invoke$arity$variadic;
return aget;
})()
;
/**
* Sets the value at the index.
* @param {...*} var_args
*/
cljs.core.aset = (function() {
var aset = null;
var aset__3 = (function (array,i,val){
return (array[i] = val);
});
var aset__4 = (function() { 
var G__25856__delegate = function (array,idx,idx2,idxv){
var G__25852 = aset;
var G__25853 = (array[idx]);
var G__25854 = idx2;
var G__25855 = idxv;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$4 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$4(G__25852,G__25853,G__25854,G__25855) : cljs.core.apply.call(null,G__25852,G__25853,G__25854,G__25855));
};
var G__25856 = function (array,idx,idx2,var_args){
var idxv = null;
if (arguments.length > 3) {
var G__25857__i = 0, G__25857__a = new Array(arguments.length -  3);
while (G__25857__i < G__25857__a.length) {G__25857__a[G__25857__i] = arguments[G__25857__i + 3]; ++G__25857__i;}
  idxv = new cljs.core.IndexedSeq(G__25857__a,0);
} 
return G__25856__delegate.call(this,array,idx,idx2,idxv);};
G__25856.cljs$lang$maxFixedArity = 3;
G__25856.cljs$lang$applyTo = (function (arglist__25858){
var array = cljs.core.first(arglist__25858);
arglist__25858 = cljs.core.next(arglist__25858);
var idx = cljs.core.first(arglist__25858);
arglist__25858 = cljs.core.next(arglist__25858);
var idx2 = cljs.core.first(arglist__25858);
var idxv = cljs.core.rest(arglist__25858);
return G__25856__delegate(array,idx,idx2,idxv);
});
G__25856.cljs$core$IFn$_invoke$arity$variadic = G__25856__delegate;
return G__25856;
})()
;
aset = function(array,idx,idx2,var_args){
var idxv = var_args;
switch(arguments.length){
case 3:
return aset__3.call(this,array,idx,idx2);
default:
var G__25859 = null;
if (arguments.length > 3) {
var G__25860__i = 0, G__25860__a = new Array(arguments.length -  3);
while (G__25860__i < G__25860__a.length) {G__25860__a[G__25860__i] = arguments[G__25860__i + 3]; ++G__25860__i;}
G__25859 = new cljs.core.IndexedSeq(G__25860__a,0);
}
return aset__4.cljs$core$IFn$_invoke$arity$variadic(array,idx,idx2, G__25859);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
aset.cljs$lang$maxFixedArity = 3;
aset.cljs$lang$applyTo = aset__4.cljs$lang$applyTo;
aset.cljs$core$IFn$_invoke$arity$3 = aset__3;
aset.cljs$core$IFn$_invoke$arity$variadic = aset__4.cljs$core$IFn$_invoke$arity$variadic;
return aset;
})()
;
/**
* Returns the length of the array. Works on arrays of all types.
*/
cljs.core.alength = (function alength(array){
return array.length;
});
cljs.core.into_array = (function() {
var into_array = null;
var into_array__1 = (function (aseq){
return into_array.cljs$core$IFn$_invoke$arity$2(null,aseq);
});
var into_array__2 = (function (type,aseq){
var G__25866 = (function (a,x){
a.push(x);

return a;
});
var G__25867 = [];
var G__25868 = aseq;
return (cljs.core.reduce.cljs$core$IFn$_invoke$arity$3 ? cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(G__25866,G__25867,G__25868) : cljs.core.reduce.call(null,G__25866,G__25867,G__25868));
});
into_array = function(type,aseq){
switch(arguments.length){
case 1:
return into_array__1.call(this,type);
case 2:
return into_array__2.call(this,type,aseq);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
into_array.cljs$core$IFn$_invoke$arity$1 = into_array__1;
into_array.cljs$core$IFn$_invoke$arity$2 = into_array__2;
return into_array;
})()
;
/**
* Invoke JavaScript object method via string. Needed when the
* string is not a valid unquoted property name.
* @param {...*} var_args
*/
cljs.core.js_invoke = (function() { 
var js_invoke__delegate = function (obj,s,args){
return (obj[s]).apply(obj,cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(args));
};
var js_invoke = function (obj,s,var_args){
var args = null;
if (arguments.length > 2) {
var G__25869__i = 0, G__25869__a = new Array(arguments.length -  2);
while (G__25869__i < G__25869__a.length) {G__25869__a[G__25869__i] = arguments[G__25869__i + 2]; ++G__25869__i;}
  args = new cljs.core.IndexedSeq(G__25869__a,0);
} 
return js_invoke__delegate.call(this,obj,s,args);};
js_invoke.cljs$lang$maxFixedArity = 2;
js_invoke.cljs$lang$applyTo = (function (arglist__25870){
var obj = cljs.core.first(arglist__25870);
arglist__25870 = cljs.core.next(arglist__25870);
var s = cljs.core.first(arglist__25870);
var args = cljs.core.rest(arglist__25870);
return js_invoke__delegate(obj,s,args);
});
js_invoke.cljs$core$IFn$_invoke$arity$variadic = js_invoke__delegate;
return js_invoke;
})()
;

cljs.core.Fn = (function (){var obj25872 = {};
return obj25872;
})();


cljs.core.IFn = (function (){var obj25874 = {};
return obj25874;
})();

cljs.core._invoke = (function() {
var _invoke = null;
var _invoke__1 = (function (this$){
if((function (){var and__24260__auto__ = this$;
if(and__24260__auto__){
return this$.cljs$core$IFn$_invoke$arity$1;
} else {
return and__24260__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$1(this$);
} else {
var x__24916__auto__ = (((this$ == null))?null:this$);
return (function (){var or__24272__auto__ = (cljs.core._invoke[(function (){var G__25920 = x__24916__auto__;
return goog.typeOf(G__25920);
})()]);
if(or__24272__auto__){
return or__24272__auto__;
} else {
var or__24272__auto____$1 = (cljs.core._invoke["_"]);
if(or__24272__auto____$1){
return or__24272__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$);
}
});
var _invoke__2 = (function (this$,a){
if((function (){var and__24260__auto__ = this$;
if(and__24260__auto__){
return this$.cljs$core$IFn$_invoke$arity$2;
} else {
return and__24260__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$2(this$,a);
} else {
var x__24916__auto__ = (((this$ == null))?null:this$);
return (function (){var or__24272__auto__ = (cljs.core._invoke[(function (){var G__25922 = x__24916__auto__;
return goog.typeOf(G__25922);
})()]);
if(or__24272__auto__){
return or__24272__auto__;
} else {
var or__24272__auto____$1 = (cljs.core._invoke["_"]);
if(or__24272__auto____$1){
return or__24272__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a);
}
});
var _invoke__3 = (function (this$,a,b){
if((function (){var and__24260__auto__ = this$;
if(and__24260__auto__){
return this$.cljs$core$IFn$_invoke$arity$3;
} else {
return and__24260__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$3(this$,a,b);
} else {
var x__24916__auto__ = (((this$ == null))?null:this$);
return (function (){var or__24272__auto__ = (cljs.core._invoke[(function (){var G__25924 = x__24916__auto__;
return goog.typeOf(G__25924);
})()]);
if(or__24272__auto__){
return or__24272__auto__;
} else {
var or__24272__auto____$1 = (cljs.core._invoke["_"]);
if(or__24272__auto____$1){
return or__24272__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b);
}
});
var _invoke__4 = (function (this$,a,b,c){
if((function (){var and__24260__auto__ = this$;
if(and__24260__auto__){
return this$.cljs$core$IFn$_invoke$arity$4;
} else {
return and__24260__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$4(this$,a,b,c);
} else {
var x__24916__auto__ = (((this$ == null))?null:this$);
return (function (){var or__24272__auto__ = (cljs.core._invoke[(function (){var G__25926 = x__24916__auto__;
return goog.typeOf(G__25926);
})()]);
if(or__24272__auto__){
return or__24272__auto__;
} else {
var or__24272__auto____$1 = (cljs.core._invoke["_"]);
if(or__24272__auto____$1){
return or__24272__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c);
}
});
var _invoke__5 = (function (this$,a,b,c,d){
if((function (){var and__24260__auto__ = this$;
if(and__24260__auto__){
return this$.cljs$core$IFn$_invoke$arity$5;
} else {
return and__24260__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$5(this$,a,b,c,d);
} else {
var x__24916__auto__ = (((this$ == null))?null:this$);
return (function (){var or__24272__auto__ = (cljs.core._invoke[(function (){var G__25928 = x__24916__auto__;
return goog.typeOf(G__25928);
})()]);
if(or__24272__auto__){
return or__24272__auto__;
} else {
var or__24272__auto____$1 = (cljs.core._invoke["_"]);
if(or__24272__auto____$1){
return or__24272__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d);
}
});
var _invoke__6 = (function (this$,a,b,c,d,e){
if((function (){var and__24260__auto__ = this$;
if(and__24260__auto__){
return this$.cljs$core$IFn$_invoke$arity$6;
} else {
return and__24260__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$6(this$,a,b,c,d,e);
} else {
var x__24916__auto__ = (((this$ == null))?null:this$);
return (function (){var or__24272__auto__ = (cljs.core._invoke[(function (){var G__25930 = x__24916__auto__;
return goog.typeOf(G__25930);
})()]);
if(or__24272__auto__){
return or__24272__auto__;
} else {
var or__24272__auto____$1 = (cljs.core._invoke["_"]);
if(or__24272__auto____$1){
return or__24272__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e);
}
});
var _invoke__7 = (function (this$,a,b,c,d,e,f){
if((function (){var and__24260__auto__ = this$;
if(and__24260__auto__){
return this$.cljs$core$IFn$_invoke$arity$7;
} else {
return and__24260__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$7(this$,a,b,c,d,e,f);
} else {
var x__24916__auto__ = (((this$ == null))?null:this$);
return (function (){var or__24272__auto__ = (cljs.core._invoke[(function (){var G__25932 = x__24916__auto__;
return goog.typeOf(G__25932);
})()]);
if(or__24272__auto__){
return or__24272__auto__;
} else {
var or__24272__auto____$1 = (cljs.core._invoke["_"]);
if(or__24272__auto____$1){
return or__24272__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f);
}
});
var _invoke__8 = (function (this$,a,b,c,d,e,f,g){
if((function (){var and__24260__auto__ = this$;
if(and__24260__auto__){
return this$.cljs$core$IFn$_invoke$arity$8;
} else {
return and__24260__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$8(this$,a,b,c,d,e,f,g);
} else {
var x__24916__auto__ = (((this$ == null))?null:this$);
return (function (){var or__24272__auto__ = (cljs.core._invoke[(function (){var G__25934 = x__24916__auto__;
return goog.typeOf(G__25934);
})()]);
if(or__24272__auto__){
return or__24272__auto__;
} else {
var or__24272__auto____$1 = (cljs.core._invoke["_"]);
if(or__24272__auto____$1){
return or__24272__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g);
}
});
var _invoke__9 = (function (this$,a,b,c,d,e,f,g,h){
if((function (){var and__24260__auto__ = this$;
if(and__24260__auto__){
return this$.cljs$core$IFn$_invoke$arity$9;
} else {
return and__24260__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$9(this$,a,b,c,d,e,f,g,h);
} else {
var x__24916__auto__ = (((this$ == null))?null:this$);
return (function (){var or__24272__auto__ = (cljs.core._invoke[(function (){var G__25936 = x__24916__auto__;
return goog.typeOf(G__25936);
})()]);
if(or__24272__auto__){
return or__24272__auto__;
} else {
var or__24272__auto____$1 = (cljs.core._invoke["_"]);
if(or__24272__auto____$1){
return or__24272__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h);
}
});
var _invoke__10 = (function (this$,a,b,c,d,e,f,g,h,i){
if((function (){var and__24260__auto__ = this$;
if(and__24260__auto__){
return this$.cljs$core$IFn$_invoke$arity$10;
} else {
return and__24260__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$10(this$,a,b,c,d,e,f,g,h,i);
} else {
var x__24916__auto__ = (((this$ == null))?null:this$);
return (function (){var or__24272__auto__ = (cljs.core._invoke[(function (){var G__25938 = x__24916__auto__;
return goog.typeOf(G__25938);
})()]);
if(or__24272__auto__){
return or__24272__auto__;
} else {
var or__24272__auto____$1 = (cljs.core._invoke["_"]);
if(or__24272__auto____$1){
return or__24272__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i);
}
});
var _invoke__11 = (function (this$,a,b,c,d,e,f,g,h,i,j){
if((function (){var and__24260__auto__ = this$;
if(and__24260__auto__){
return this$.cljs$core$IFn$_invoke$arity$11;
} else {
return and__24260__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$11(this$,a,b,c,d,e,f,g,h,i,j);
} else {
var x__24916__auto__ = (((this$ == null))?null:this$);
return (function (){var or__24272__auto__ = (cljs.core._invoke[(function (){var G__25940 = x__24916__auto__;
return goog.typeOf(G__25940);
})()]);
if(or__24272__auto__){
return or__24272__auto__;
} else {
var or__24272__auto____$1 = (cljs.core._invoke["_"]);
if(or__24272__auto____$1){
return or__24272__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j);
}
});
var _invoke__12 = (function (this$,a,b,c,d,e,f,g,h,i,j,k){
if((function (){var and__24260__auto__ = this$;
if(and__24260__auto__){
return this$.cljs$core$IFn$_invoke$arity$12;
} else {
return and__24260__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$12(this$,a,b,c,d,e,f,g,h,i,j,k);
} else {
var x__24916__auto__ = (((this$ == null))?null:this$);
return (function (){var or__24272__auto__ = (cljs.core._invoke[(function (){var G__25942 = x__24916__auto__;
return goog.typeOf(G__25942);
})()]);
if(or__24272__auto__){
return or__24272__auto__;
} else {
var or__24272__auto____$1 = (cljs.core._invoke["_"]);
if(or__24272__auto____$1){
return or__24272__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k);
}
});
var _invoke__13 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l){
if((function (){var and__24260__auto__ = this$;
if(and__24260__auto__){
return this$.cljs$core$IFn$_invoke$arity$13;
} else {
return and__24260__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$13(this$,a,b,c,d,e,f,g,h,i,j,k,l);
} else {
var x__24916__auto__ = (((this$ == null))?null:this$);
return (function (){var or__24272__auto__ = (cljs.core._invoke[(function (){var G__25944 = x__24916__auto__;
return goog.typeOf(G__25944);
})()]);
if(or__24272__auto__){
return or__24272__auto__;
} else {
var or__24272__auto____$1 = (cljs.core._invoke["_"]);
if(or__24272__auto____$1){
return or__24272__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l);
}
});
var _invoke__14 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m){
if((function (){var and__24260__auto__ = this$;
if(and__24260__auto__){
return this$.cljs$core$IFn$_invoke$arity$14;
} else {
return and__24260__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$14(this$,a,b,c,d,e,f,g,h,i,j,k,l,m);
} else {
var x__24916__auto__ = (((this$ == null))?null:this$);
return (function (){var or__24272__auto__ = (cljs.core._invoke[(function (){var G__25946 = x__24916__auto__;
return goog.typeOf(G__25946);
})()]);
if(or__24272__auto__){
return or__24272__auto__;
} else {
var or__24272__auto____$1 = (cljs.core._invoke["_"]);
if(or__24272__auto____$1){
return or__24272__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m);
}
});
var _invoke__15 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n){
if((function (){var and__24260__auto__ = this$;
if(and__24260__auto__){
return this$.cljs$core$IFn$_invoke$arity$15;
} else {
return and__24260__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$15(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
} else {
var x__24916__auto__ = (((this$ == null))?null:this$);
return (function (){var or__24272__auto__ = (cljs.core._invoke[(function (){var G__25948 = x__24916__auto__;
return goog.typeOf(G__25948);
})()]);
if(or__24272__auto__){
return or__24272__auto__;
} else {
var or__24272__auto____$1 = (cljs.core._invoke["_"]);
if(or__24272__auto____$1){
return or__24272__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
}
});
var _invoke__16 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
if((function (){var and__24260__auto__ = this$;
if(and__24260__auto__){
return this$.cljs$core$IFn$_invoke$arity$16;
} else {
return and__24260__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$16(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
} else {
var x__24916__auto__ = (((this$ == null))?null:this$);
return (function (){var or__24272__auto__ = (cljs.core._invoke[(function (){var G__25950 = x__24916__auto__;
return goog.typeOf(G__25950);
})()]);
if(or__24272__auto__){
return or__24272__auto__;
} else {
var or__24272__auto____$1 = (cljs.core._invoke["_"]);
if(or__24272__auto____$1){
return or__24272__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
}
});
var _invoke__17 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
if((function (){var and__24260__auto__ = this$;
if(and__24260__auto__){
return this$.cljs$core$IFn$_invoke$arity$17;
} else {
return and__24260__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$17(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
} else {
var x__24916__auto__ = (((this$ == null))?null:this$);
return (function (){var or__24272__auto__ = (cljs.core._invoke[(function (){var G__25952 = x__24916__auto__;
return goog.typeOf(G__25952);
})()]);
if(or__24272__auto__){
return or__24272__auto__;
} else {
var or__24272__auto____$1 = (cljs.core._invoke["_"]);
if(or__24272__auto____$1){
return or__24272__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
}
});
var _invoke__18 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
if((function (){var and__24260__auto__ = this$;
if(and__24260__auto__){
return this$.cljs$core$IFn$_invoke$arity$18;
} else {
return and__24260__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$18(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
} else {
var x__24916__auto__ = (((this$ == null))?null:this$);
return (function (){var or__24272__auto__ = (cljs.core._invoke[(function (){var G__25954 = x__24916__auto__;
return goog.typeOf(G__25954);
})()]);
if(or__24272__auto__){
return or__24272__auto__;
} else {
var or__24272__auto____$1 = (cljs.core._invoke["_"]);
if(or__24272__auto____$1){
return or__24272__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
}
});
var _invoke__19 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
if((function (){var and__24260__auto__ = this$;
if(and__24260__auto__){
return this$.cljs$core$IFn$_invoke$arity$19;
} else {
return and__24260__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$19(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
} else {
var x__24916__auto__ = (((this$ == null))?null:this$);
return (function (){var or__24272__auto__ = (cljs.core._invoke[(function (){var G__25956 = x__24916__auto__;
return goog.typeOf(G__25956);
})()]);
if(or__24272__auto__){
return or__24272__auto__;
} else {
var or__24272__auto____$1 = (cljs.core._invoke["_"]);
if(or__24272__auto____$1){
return or__24272__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
}
});
var _invoke__20 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
if((function (){var and__24260__auto__ = this$;
if(and__24260__auto__){
return this$.cljs$core$IFn$_invoke$arity$20;
} else {
return and__24260__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$20(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
} else {
var x__24916__auto__ = (((this$ == null))?null:this$);
return (function (){var or__24272__auto__ = (cljs.core._invoke[(function (){var G__25958 = x__24916__auto__;
return goog.typeOf(G__25958);
})()]);
if(or__24272__auto__){
return or__24272__auto__;
} else {
var or__24272__auto____$1 = (cljs.core._invoke["_"]);
if(or__24272__auto____$1){
return or__24272__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
}
});
var _invoke__21 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
if((function (){var and__24260__auto__ = this$;
if(and__24260__auto__){
return this$.cljs$core$IFn$_invoke$arity$21;
} else {
return and__24260__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$21(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
} else {
var x__24916__auto__ = (((this$ == null))?null:this$);
return (function (){var or__24272__auto__ = (cljs.core._invoke[(function (){var G__25960 = x__24916__auto__;
return goog.typeOf(G__25960);
})()]);
if(or__24272__auto__){
return or__24272__auto__;
} else {
var or__24272__auto____$1 = (cljs.core._invoke["_"]);
if(or__24272__auto____$1){
return or__24272__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
}
});
var _invoke__22 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
if((function (){var and__24260__auto__ = this$;
if(and__24260__auto__){
return this$.cljs$core$IFn$_invoke$arity$22;
} else {
return and__24260__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$22(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest);
} else {
var x__24916__auto__ = (((this$ == null))?null:this$);
return (function (){var or__24272__auto__ = (cljs.core._invoke[(function (){var G__25962 = x__24916__auto__;
return goog.typeOf(G__25962);
})()]);
if(or__24272__auto__){
return or__24272__auto__;
} else {
var or__24272__auto____$1 = (cljs.core._invoke["_"]);
if(or__24272__auto____$1){
return or__24272__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest);
}
});
_invoke = function(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
switch(arguments.length){
case 1:
return _invoke__1.call(this,this$);
case 2:
return _invoke__2.call(this,this$,a);
case 3:
return _invoke__3.call(this,this$,a,b);
case 4:
return _invoke__4.call(this,this$,a,b,c);
case 5:
return _invoke__5.call(this,this$,a,b,c,d);
case 6:
return _invoke__6.call(this,this$,a,b,c,d,e);
case 7:
return _invoke__7.call(this,this$,a,b,c,d,e,f);
case 8:
return _invoke__8.call(this,this$,a,b,c,d,e,f,g);
case 9:
return _invoke__9.call(this,this$,a,b,c,d,e,f,g,h);
case 10:
return _invoke__10.call(this,this$,a,b,c,d,e,f,g,h,i);
case 11:
return _invoke__11.call(this,this$,a,b,c,d,e,f,g,h,i,j);
case 12:
return _invoke__12.call(this,this$,a,b,c,d,e,f,g,h,i,j,k);
case 13:
return _invoke__13.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l);
case 14:
return _invoke__14.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m);
case 15:
return _invoke__15.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
case 16:
return _invoke__16.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
case 17:
return _invoke__17.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
case 18:
return _invoke__18.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
case 19:
return _invoke__19.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
case 20:
return _invoke__20.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
case 21:
return _invoke__21.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
case 22:
return _invoke__22.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_invoke.cljs$core$IFn$_invoke$arity$1 = _invoke__1;
_invoke.cljs$core$IFn$_invoke$arity$2 = _invoke__2;
_invoke.cljs$core$IFn$_invoke$arity$3 = _invoke__3;
_invoke.cljs$core$IFn$_invoke$arity$4 = _invoke__4;
_invoke.cljs$core$IFn$_invoke$arity$5 = _invoke__5;
_invoke.cljs$core$IFn$_invoke$arity$6 = _invoke__6;
_invoke.cljs$core$IFn$_invoke$arity$7 = _invoke__7;
_invoke.cljs$core$IFn$_invoke$arity$8 = _invoke__8;
_invoke.cljs$core$IFn$_invoke$arity$9 = _invoke__9;
_invoke.cljs$core$IFn$_invoke$arity$10 = _invoke__10;
_invoke.cljs$core$IFn$_invoke$arity$11 = _invoke__11;
_invoke.cljs$core$IFn$_invoke$arity$12 = _invoke__12;
_invoke.cljs$core$IFn$_invoke$arity$13 = _invoke__13;
_invoke.cljs$core$IFn$_invoke$arity$14 = _invoke__14;
_invoke.cljs$core$IFn$_invoke$arity$15 = _invoke__15;
_invoke.cljs$core$IFn$_invoke$arity$16 = _invoke__16;
_invoke.cljs$core$IFn$_invoke$arity$17 = _invoke__17;
_invoke.cljs$core$IFn$_invoke$arity$18 = _invoke__18;
_invoke.cljs$core$IFn$_invoke$arity$19 = _invoke__19;
_invoke.cljs$core$IFn$_invoke$arity$20 = _invoke__20;
_invoke.cljs$core$IFn$_invoke$arity$21 = _invoke__21;
_invoke.cljs$core$IFn$_invoke$arity$22 = _invoke__22;
return _invoke;
})()
;


cljs.core.ICloneable = (function (){var obj25964 = {};
return obj25964;
})();

cljs.core._clone = (function _clone(value){
if((function (){var and__24260__auto__ = value;
if(and__24260__auto__){
return value.cljs$core$ICloneable$_clone$arity$1;
} else {
return and__24260__auto__;
}
})()){
return value.cljs$core$ICloneable$_clone$arity$1(value);
} else {
var x__24916__auto__ = (((value == null))?null:value);
return (function (){var or__24272__auto__ = (cljs.core._clone[(function (){var G__25968 = x__24916__auto__;
return goog.typeOf(G__25968);
})()]);
if(or__24272__auto__){
return or__24272__auto__;
} else {
var or__24272__auto____$1 = (cljs.core._clone["_"]);
if(or__24272__auto____$1){
return or__24272__auto____$1;
} else {
throw cljs.core.missing_protocol("ICloneable.-clone",value);
}
}
})().call(null,value);
}
});


cljs.core.ICounted = (function (){var obj25970 = {};
return obj25970;
})();

cljs.core._count = (function _count(coll){
if((function (){var and__24260__auto__ = coll;
if(and__24260__auto__){
return coll.cljs$core$ICounted$_count$arity$1;
} else {
return and__24260__auto__;
}
})()){
return coll.cljs$core$ICounted$_count$arity$1(coll);
} else {
var x__24916__auto__ = (((coll == null))?null:coll);
return (function (){var or__24272__auto__ = (cljs.core._count[(function (){var G__25974 = x__24916__auto__;
return goog.typeOf(G__25974);
})()]);
if(or__24272__auto__){
return or__24272__auto__;
} else {
var or__24272__auto____$1 = (cljs.core._count["_"]);
if(or__24272__auto____$1){
return or__24272__auto____$1;
} else {
throw cljs.core.missing_protocol("ICounted.-count",coll);
}
}
})().call(null,coll);
}
});


cljs.core.IEmptyableCollection = (function (){var obj25976 = {};
return obj25976;
})();

cljs.core._empty = (function _empty(coll){
if((function (){var and__24260__auto__ = coll;
if(and__24260__auto__){
return coll.cljs$core$IEmptyableCollection$_empty$arity$1;
} else {
return and__24260__auto__;
}
})()){
return coll.cljs$core$IEmptyableCollection$_empty$arity$1(coll);
} else {
var x__24916__auto__ = (((coll == null))?null:coll);
return (function (){var or__24272__auto__ = (cljs.core._empty[(function (){var G__25980 = x__24916__auto__;
return goog.typeOf(G__25980);
})()]);
if(or__24272__auto__){
return or__24272__auto__;
} else {
var or__24272__auto____$1 = (cljs.core._empty["_"]);
if(or__24272__auto____$1){
return or__24272__auto____$1;
} else {
throw cljs.core.missing_protocol("IEmptyableCollection.-empty",coll);
}
}
})().call(null,coll);
}
});


cljs.core.ICollection = (function (){var obj25982 = {};
return obj25982;
})();

cljs.core._conj = (function _conj(coll,o){
if((function (){var and__24260__auto__ = coll;
if(and__24260__auto__){
return coll.cljs$core$ICollection$_conj$arity$2;
} else {
return and__24260__auto__;
}
})()){
return coll.cljs$core$ICollection$_conj$arity$2(coll,o);
} else {
var x__24916__auto__ = (((coll == null))?null:coll);
return (function (){var or__24272__auto__ = (cljs.core._conj[(function (){var G__25986 = x__24916__auto__;
return goog.typeOf(G__25986);
})()]);
if(or__24272__auto__){
return or__24272__auto__;
} else {
var or__24272__auto____$1 = (cljs.core._conj["_"]);
if(or__24272__auto____$1){
return or__24272__auto____$1;
} else {
throw cljs.core.missing_protocol("ICollection.-conj",coll);
}
}
})().call(null,coll,o);
}
});


cljs.core.IIndexed = (function (){var obj25988 = {};
return obj25988;
})();

cljs.core._nth = (function() {
var _nth = null;
var _nth__2 = (function (coll,n){
if((function (){var and__24260__auto__ = coll;
if(and__24260__auto__){
return coll.cljs$core$IIndexed$_nth$arity$2;
} else {
return and__24260__auto__;
}
})()){
return coll.cljs$core$IIndexed$_nth$arity$2(coll,n);
} else {
var x__24916__auto__ = (((coll == null))?null:coll);
return (function (){var or__24272__auto__ = (cljs.core._nth[(function (){var G__25994 = x__24916__auto__;
return goog.typeOf(G__25994);
})()]);
if(or__24272__auto__){
return or__24272__auto__;
} else {
var or__24272__auto____$1 = (cljs.core._nth["_"]);
if(or__24272__auto____$1){
return or__24272__auto____$1;
} else {
throw cljs.core.missing_protocol("IIndexed.-nth",coll);
}
}
})().call(null,coll,n);
}
});
var _nth__3 = (function (coll,n,not_found){
if((function (){var and__24260__auto__ = coll;
if(and__24260__auto__){
return coll.cljs$core$IIndexed$_nth$arity$3;
} else {
return and__24260__auto__;
}
})()){
return coll.cljs$core$IIndexed$_nth$arity$3(coll,n,not_found);
} else {
var x__24916__auto__ = (((coll == null))?null:coll);
return (function (){var or__24272__auto__ = (cljs.core._nth[(function (){var G__25996 = x__24916__auto__;
return goog.typeOf(G__25996);
})()]);
if(or__24272__auto__){
return or__24272__auto__;
} else {
var or__24272__auto____$1 = (cljs.core._nth["_"]);
if(or__24272__auto____$1){
return or__24272__auto____$1;
} else {
throw cljs.core.missing_protocol("IIndexed.-nth",coll);
}
}
})().call(null,coll,n,not_found);
}
});
_nth = function(coll,n,not_found){
switch(arguments.length){
case 2:
return _nth__2.call(this,coll,n);
case 3:
return _nth__3.call(this,coll,n,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_nth.cljs$core$IFn$_invoke$arity$2 = _nth__2;
_nth.cljs$core$IFn$_invoke$arity$3 = _nth__3;
return _nth;
})()
;


cljs.core.ASeq = (function (){var obj25998 = {};
return obj25998;
})();


cljs.core.ISeq = (function (){var obj26000 = {};
return obj26000;
})();

cljs.core._first = (function _first(coll){
if((function (){var and__24260__auto__ = coll;
if(and__24260__auto__){
return coll.cljs$core$ISeq$_first$arity$1;
} else {
return and__24260__auto__;
}
})()){
return coll.cljs$core$ISeq$_first$arity$1(coll);
} else {
var x__24916__auto__ = (((coll == null))?null:coll);
return (function (){var or__24272__auto__ = (cljs.core._first[(function (){var G__26004 = x__24916__auto__;
return goog.typeOf(G__26004);
})()]);
if(or__24272__auto__){
return or__24272__auto__;
} else {
var or__24272__auto____$1 = (cljs.core._first["_"]);
if(or__24272__auto____$1){
return or__24272__auto____$1;
} else {
throw cljs.core.missing_protocol("ISeq.-first",coll);
}
}
})().call(null,coll);
}
});

cljs.core._rest = (function _rest(coll){
if((function (){var and__24260__auto__ = coll;
if(and__24260__auto__){
return coll.cljs$core$ISeq$_rest$arity$1;
} else {
return and__24260__auto__;
}
})()){
return coll.cljs$core$ISeq$_rest$arity$1(coll);
} else {
var x__24916__auto__ = (((coll == null))?null:coll);
return (function (){var or__24272__auto__ = (cljs.core._rest[(function (){var G__26008 = x__24916__auto__;
return goog.typeOf(G__26008);
})()]);
if(or__24272__auto__){
return or__24272__auto__;
} else {
var or__24272__auto____$1 = (cljs.core._rest["_"]);
if(or__24272__auto____$1){
return or__24272__auto____$1;
} else {
throw cljs.core.missing_protocol("ISeq.-rest",coll);
}
}
})().call(null,coll);
}
});


cljs.core.INext = (function (){var obj26010 = {};
return obj26010;
})();

cljs.core._next = (function _next(coll){
if((function (){var and__24260__auto__ = coll;
if(and__24260__auto__){
return coll.cljs$core$INext$_next$arity$1;
} else {
return and__24260__auto__;
}
})()){
return coll.cljs$core$INext$_next$arity$1(coll);
} else {
var x__24916__auto__ = (((coll == null))?null:coll);
return (function (){var or__24272__auto__ = (cljs.core._next[(function (){var G__26014 = x__24916__auto__;
return goog.typeOf(G__26014);
})()]);
if(or__24272__auto__){
return or__24272__auto__;
} else {
var or__24272__auto____$1 = (cljs.core._next["_"]);
if(or__24272__auto____$1){
return or__24272__auto____$1;
} else {
throw cljs.core.missing_protocol("INext.-next",coll);
}
}
})().call(null,coll);
}
});


cljs.core.ILookup = (function (){var obj26016 = {};
return obj26016;
})();

cljs.core._lookup = (function() {
var _lookup = null;
var _lookup__2 = (function (o,k){
if((function (){var and__24260__auto__ = o;
if(and__24260__auto__){
return o.cljs$core$ILookup$_lookup$arity$2;
} else {
return and__24260__auto__;
}
})()){
return o.cljs$core$ILookup$_lookup$arity$2(o,k);
} else {
var x__24916__auto__ = (((o == null))?null:o);
return (function (){var or__24272__auto__ = (cljs.core._lookup[(function (){var G__26022 = x__24916__auto__;
return goog.typeOf(G__26022);
})()]);
if(or__24272__auto__){
return or__24272__auto__;
} else {
var or__24272__auto____$1 = (cljs.core._lookup["_"]);
if(or__24272__auto____$1){
return or__24272__auto____$1;
} else {
throw cljs.core.missing_protocol("ILookup.-lookup",o);
}
}
})().call(null,o,k);
}
});
var _lookup__3 = (function (o,k,not_found){
if((function (){var and__24260__auto__ = o;
if(and__24260__auto__){
return o.cljs$core$ILookup$_lookup$arity$3;
} else {
return and__24260__auto__;
}
})()){
return o.cljs$core$ILookup$_lookup$arity$3(o,k,not_found);
} else {
var x__24916__auto__ = (((o == null))?null:o);
return (function (){var or__24272__auto__ = (cljs.core._lookup[(function (){var G__26024 = x__24916__auto__;
return goog.typeOf(G__26024);
})()]);
if(or__24272__auto__){
return or__24272__auto__;
} else {
var or__24272__auto____$1 = (cljs.core._lookup["_"]);
if(or__24272__auto____$1){
return or__24272__auto____$1;
} else {
throw cljs.core.missing_protocol("ILookup.-lookup",o);
}
}
})().call(null,o,k,not_found);
}
});
_lookup = function(o,k,not_found){
switch(arguments.length){
case 2:
return _lookup__2.call(this,o,k);
case 3:
return _lookup__3.call(this,o,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_lookup.cljs$core$IFn$_invoke$arity$2 = _lookup__2;
_lookup.cljs$core$IFn$_invoke$arity$3 = _lookup__3;
return _lookup;
})()
;


cljs.core.IAssociative = (function (){var obj26026 = {};
return obj26026;
})();

cljs.core._contains_key_QMARK_ = (function _contains_key_QMARK_(coll,k){
if((function (){var and__24260__auto__ = coll;
if(and__24260__auto__){
return coll.cljs$core$IAssociative$_contains_key_QMARK_$arity$2;
} else {
return and__24260__auto__;
}
})()){
return coll.cljs$core$IAssociative$_contains_key_QMARK_$arity$2(coll,k);
} else {
var x__24916__auto__ = (((coll == null))?null:coll);
return (function (){var or__24272__auto__ = (cljs.core._contains_key_QMARK_[(function (){var G__26030 = x__24916__auto__;
return goog.typeOf(G__26030);
})()]);
if(or__24272__auto__){
return or__24272__auto__;
} else {
var or__24272__auto____$1 = (cljs.core._contains_key_QMARK_["_"]);
if(or__24272__auto____$1){
return or__24272__auto____$1;
} else {
throw cljs.core.missing_protocol("IAssociative.-contains-key?",coll);
}
}
})().call(null,coll,k);
}
});

cljs.core._assoc = (function _assoc(coll,k,v){
if((function (){var and__24260__auto__ = coll;
if(and__24260__auto__){
return coll.cljs$core$IAssociative$_assoc$arity$3;
} else {
return and__24260__auto__;
}
})()){
return coll.cljs$core$IAssociative$_assoc$arity$3(coll,k,v);
} else {
var x__24916__auto__ = (((coll == null))?null:coll);
return (function (){var or__24272__auto__ = (cljs.core._assoc[(function (){var G__26034 = x__24916__auto__;
return goog.typeOf(G__26034);
})()]);
if(or__24272__auto__){
return or__24272__auto__;
} else {
var or__24272__auto____$1 = (cljs.core._assoc["_"]);
if(or__24272__auto____$1){
return or__24272__auto____$1;
} else {
throw cljs.core.missing_protocol("IAssociative.-assoc",coll);
}
}
})().call(null,coll,k,v);
}
});


cljs.core.IMap = (function (){var obj26036 = {};
return obj26036;
})();

cljs.core._dissoc = (function _dissoc(coll,k){
if((function (){var and__24260__auto__ = coll;
if(and__24260__auto__){
return coll.cljs$core$IMap$_dissoc$arity$2;
} else {
return and__24260__auto__;
}
})()){
return coll.cljs$core$IMap$_dissoc$arity$2(coll,k);
} else {
var x__24916__auto__ = (((coll == null))?null:coll);
return (function (){var or__24272__auto__ = (cljs.core._dissoc[(function (){var G__26040 = x__24916__auto__;
return goog.typeOf(G__26040);
})()]);
if(or__24272__auto__){
return or__24272__auto__;
} else {
var or__24272__auto____$1 = (cljs.core._dissoc["_"]);
if(or__24272__auto____$1){
return or__24272__auto____$1;
} else {
throw cljs.core.missing_protocol("IMap.-dissoc",coll);
}
}
})().call(null,coll,k);
}
});


cljs.core.IMapEntry = (function (){var obj26042 = {};
return obj26042;
})();

cljs.core._key = (function _key(coll){
if((function (){var and__24260__auto__ = coll;
if(and__24260__auto__){
return coll.cljs$core$IMapEntry$_key$arity$1;
} else {
return and__24260__auto__;
}
})()){
return coll.cljs$core$IMapEntry$_key$arity$1(coll);
} else {
var x__24916__auto__ = (((coll == null))?null:coll);
return (function (){var or__24272__auto__ = (cljs.core._key[(function (){var G__26046 = x__24916__auto__;
return goog.typeOf(G__26046);
})()]);
if(or__24272__auto__){
return or__24272__auto__;
} else {
var or__24272__auto____$1 = (cljs.core._key["_"]);
if(or__24272__auto____$1){
return or__24272__auto____$1;
} else {
throw cljs.core.missing_protocol("IMapEntry.-key",coll);
}
}
})().call(null,coll);
}
});

cljs.core._val = (function _val(coll){
if((function (){var and__24260__auto__ = coll;
if(and__24260__auto__){
return coll.cljs$core$IMapEntry$_val$arity$1;
} else {
return and__24260__auto__;
}
})()){
return coll.cljs$core$IMapEntry$_val$arity$1(coll);
} else {
var x__24916__auto__ = (((coll == null))?null:coll);
return (function (){var or__24272__auto__ = (cljs.core._val[(function (){var G__26050 = x__24916__auto__;
return goog.typeOf(G__26050);
})()]);
if(or__24272__auto__){
return or__24272__auto__;
} else {
var or__24272__auto____$1 = (cljs.core._val["_"]);
if(or__24272__auto____$1){
return or__24272__auto____$1;
} else {
throw cljs.core.missing_protocol("IMapEntry.-val",coll);
}
}
})().call(null,coll);
}
});


cljs.core.ISet = (function (){var obj26052 = {};
return obj26052;
})();

cljs.core._disjoin = (function _disjoin(coll,v){
if((function (){var and__24260__auto__ = coll;
if(and__24260__auto__){
return coll.cljs$core$ISet$_disjoin$arity$2;
} else {
return and__24260__auto__;
}
})()){
return coll.cljs$core$ISet$_disjoin$arity$2(coll,v);
} else {
var x__24916__auto__ = (((coll == null))?null:coll);
return (function (){var or__24272__auto__ = (cljs.core._disjoin[(function (){var G__26056 = x__24916__auto__;
return goog.typeOf(G__26056);
})()]);
if(or__24272__auto__){
return or__24272__auto__;
} else {
var or__24272__auto____$1 = (cljs.core._disjoin["_"]);
if(or__24272__auto____$1){
return or__24272__auto____$1;
} else {
throw cljs.core.missing_protocol("ISet.-disjoin",coll);
}
}
})().call(null,coll,v);
}
});


cljs.core.IStack = (function (){var obj26058 = {};
return obj26058;
})();

cljs.core._peek = (function _peek(coll){
if((function (){var and__24260__auto__ = coll;
if(and__24260__auto__){
return coll.cljs$core$IStack$_peek$arity$1;
} else {
return and__24260__auto__;
}
})()){
return coll.cljs$core$IStack$_peek$arity$1(coll);
} else {
var x__24916__auto__ = (((coll == null))?null:coll);
return (function (){var or__24272__auto__ = (cljs.core._peek[(function (){var G__26062 = x__24916__auto__;
return goog.typeOf(G__26062);
})()]);
if(or__24272__auto__){
return or__24272__auto__;
} else {
var or__24272__auto____$1 = (cljs.core._peek["_"]);
if(or__24272__auto____$1){
return or__24272__auto____$1;
} else {
throw cljs.core.missing_protocol("IStack.-peek",coll);
}
}
})().call(null,coll);
}
});

cljs.core._pop = (function _pop(coll){
if((function (){var and__24260__auto__ = coll;
if(and__24260__auto__){
return coll.cljs$core$IStack$_pop$arity$1;
} else {
return and__24260__auto__;
}
})()){
return coll.cljs$core$IStack$_pop$arity$1(coll);
} else {
var x__24916__auto__ = (((coll == null))?null:coll);
return (function (){var or__24272__auto__ = (cljs.core._pop[(function (){var G__26066 = x__24916__auto__;
return goog.typeOf(G__26066);
})()]);
if(or__24272__auto__){
return or__24272__auto__;
} else {
var or__24272__auto____$1 = (cljs.core._pop["_"]);
if(or__24272__auto____$1){
return or__24272__auto____$1;
} else {
throw cljs.core.missing_protocol("IStack.-pop",coll);
}
}
})().call(null,coll);
}
});


cljs.core.IVector = (function (){var obj26068 = {};
return obj26068;
})();

cljs.core._assoc_n = (function _assoc_n(coll,n,val){
if((function (){var and__24260__auto__ = coll;
if(and__24260__auto__){
return coll.cljs$core$IVector$_assoc_n$arity$3;
} else {
return and__24260__auto__;
}
})()){
return coll.cljs$core$IVector$_assoc_n$arity$3(coll,n,val);
} else {
var x__24916__auto__ = (((coll == null))?null:coll);
return (function (){var or__24272__auto__ = (cljs.core._assoc_n[(function (){var G__26072 = x__24916__auto__;
return goog.typeOf(G__26072);
})()]);
if(or__24272__auto__){
return or__24272__auto__;
} else {
var or__24272__auto____$1 = (cljs.core._assoc_n["_"]);
if(or__24272__auto____$1){
return or__24272__auto____$1;
} else {
throw cljs.core.missing_protocol("IVector.-assoc-n",coll);
}
}
})().call(null,coll,n,val);
}
});


cljs.core.IDeref = (function (){var obj26074 = {};
return obj26074;
})();

cljs.core._deref = (function _deref(o){
if((function (){var and__24260__auto__ = o;
if(and__24260__auto__){
return o.cljs$core$IDeref$_deref$arity$1;
} else {
return and__24260__auto__;
}
})()){
return o.cljs$core$IDeref$_deref$arity$1(o);
} else {
var x__24916__auto__ = (((o == null))?null:o);
return (function (){var or__24272__auto__ = (cljs.core._deref[(function (){var G__26078 = x__24916__auto__;
return goog.typeOf(G__26078);
})()]);
if(or__24272__auto__){
return or__24272__auto__;
} else {
var or__24272__auto____$1 = (cljs.core._deref["_"]);
if(or__24272__auto____$1){
return or__24272__auto____$1;
} else {
throw cljs.core.missing_protocol("IDeref.-deref",o);
}
}
})().call(null,o);
}
});


cljs.core.IDerefWithTimeout = (function (){var obj26080 = {};
return obj26080;
})();

cljs.core._deref_with_timeout = (function _deref_with_timeout(o,msec,timeout_val){
if((function (){var and__24260__auto__ = o;
if(and__24260__auto__){
return o.cljs$core$IDerefWithTimeout$_deref_with_timeout$arity$3;
} else {
return and__24260__auto__;
}
})()){
return o.cljs$core$IDerefWithTimeout$_deref_with_timeout$arity$3(o,msec,timeout_val);
} else {
var x__24916__auto__ = (((o == null))?null:o);
return (function (){var or__24272__auto__ = (cljs.core._deref_with_timeout[(function (){var G__26084 = x__24916__auto__;
return goog.typeOf(G__26084);
})()]);
if(or__24272__auto__){
return or__24272__auto__;
} else {
var or__24272__auto____$1 = (cljs.core._deref_with_timeout["_"]);
if(or__24272__auto____$1){
return or__24272__auto____$1;
} else {
throw cljs.core.missing_protocol("IDerefWithTimeout.-deref-with-timeout",o);
}
}
})().call(null,o,msec,timeout_val);
}
});


cljs.core.IMeta = (function (){var obj26086 = {};
return obj26086;
})();

cljs.core._meta = (function _meta(o){
if((function (){var and__24260__auto__ = o;
if(and__24260__auto__){
return o.cljs$core$IMeta$_meta$arity$1;
} else {
return and__24260__auto__;
}
})()){
return o.cljs$core$IMeta$_meta$arity$1(o);
} else {
var x__24916__auto__ = (((o == null))?null:o);
return (function (){var or__24272__auto__ = (cljs.core._meta[(function (){var G__26090 = x__24916__auto__;
return goog.typeOf(G__26090);
})()]);
if(or__24272__auto__){
return or__24272__auto__;
} else {
var or__24272__auto____$1 = (cljs.core._meta["_"]);
if(or__24272__auto____$1){
return or__24272__auto____$1;
} else {
throw cljs.core.missing_protocol("IMeta.-meta",o);
}
}
})().call(null,o);
}
});


cljs.core.IWithMeta = (function (){var obj26092 = {};
return obj26092;
})();

cljs.core._with_meta = (function _with_meta(o,meta){
if((function (){var and__24260__auto__ = o;
if(and__24260__auto__){
return o.cljs$core$IWithMeta$_with_meta$arity$2;
} else {
return and__24260__auto__;
}
})()){
return o.cljs$core$IWithMeta$_with_meta$arity$2(o,meta);
} else {
var x__24916__auto__ = (((o == null))?null:o);
return (function (){var or__24272__auto__ = (cljs.core._with_meta[(function (){var G__26096 = x__24916__auto__;
return goog.typeOf(G__26096);
})()]);
if(or__24272__auto__){
return or__24272__auto__;
} else {
var or__24272__auto____$1 = (cljs.core._with_meta["_"]);
if(or__24272__auto____$1){
return or__24272__auto____$1;
} else {
throw cljs.core.missing_protocol("IWithMeta.-with-meta",o);
}
}
})().call(null,o,meta);
}
});


cljs.core.IReduce = (function (){var obj26098 = {};
return obj26098;
})();

cljs.core._reduce = (function() {
var _reduce = null;
var _reduce__2 = (function (coll,f){
if((function (){var and__24260__auto__ = coll;
if(and__24260__auto__){
return coll.cljs$core$IReduce$_reduce$arity$2;
} else {
return and__24260__auto__;
}
})()){
return coll.cljs$core$IReduce$_reduce$arity$2(coll,f);
} else {
var x__24916__auto__ = (((coll == null))?null:coll);
return (function (){var or__24272__auto__ = (cljs.core._reduce[(function (){var G__26104 = x__24916__auto__;
return goog.typeOf(G__26104);
})()]);
if(or__24272__auto__){
return or__24272__auto__;
} else {
var or__24272__auto____$1 = (cljs.core._reduce["_"]);
if(or__24272__auto____$1){
return or__24272__auto____$1;
} else {
throw cljs.core.missing_protocol("IReduce.-reduce",coll);
}
}
})().call(null,coll,f);
}
});
var _reduce__3 = (function (coll,f,start){
if((function (){var and__24260__auto__ = coll;
if(and__24260__auto__){
return coll.cljs$core$IReduce$_reduce$arity$3;
} else {
return and__24260__auto__;
}
})()){
return coll.cljs$core$IReduce$_reduce$arity$3(coll,f,start);
} else {
var x__24916__auto__ = (((coll == null))?null:coll);
return (function (){var or__24272__auto__ = (cljs.core._reduce[(function (){var G__26106 = x__24916__auto__;
return goog.typeOf(G__26106);
})()]);
if(or__24272__auto__){
return or__24272__auto__;
} else {
var or__24272__auto____$1 = (cljs.core._reduce["_"]);
if(or__24272__auto____$1){
return or__24272__auto____$1;
} else {
throw cljs.core.missing_protocol("IReduce.-reduce",coll);
}
}
})().call(null,coll,f,start);
}
});
_reduce = function(coll,f,start){
switch(arguments.length){
case 2:
return _reduce__2.call(this,coll,f);
case 3:
return _reduce__3.call(this,coll,f,start);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_reduce.cljs$core$IFn$_invoke$arity$2 = _reduce__2;
_reduce.cljs$core$IFn$_invoke$arity$3 = _reduce__3;
return _reduce;
})()
;


cljs.core.IKVReduce = (function (){var obj26108 = {};
return obj26108;
})();

cljs.core._kv_reduce = (function _kv_reduce(coll,f,init){
if((function (){var and__24260__auto__ = coll;
if(and__24260__auto__){
return coll.cljs$core$IKVReduce$_kv_reduce$arity$3;
} else {
return and__24260__auto__;
}
})()){
return coll.cljs$core$IKVReduce$_kv_reduce$arity$3(coll,f,init);
} else {
var x__24916__auto__ = (((coll == null))?null:coll);
return (function (){var or__24272__auto__ = (cljs.core._kv_reduce[(function (){var G__26112 = x__24916__auto__;
return goog.typeOf(G__26112);
})()]);
if(or__24272__auto__){
return or__24272__auto__;
} else {
var or__24272__auto____$1 = (cljs.core._kv_reduce["_"]);
if(or__24272__auto____$1){
return or__24272__auto____$1;
} else {
throw cljs.core.missing_protocol("IKVReduce.-kv-reduce",coll);
}
}
})().call(null,coll,f,init);
}
});


cljs.core.IEquiv = (function (){var obj26114 = {};
return obj26114;
})();

cljs.core._equiv = (function _equiv(o,other){
if((function (){var and__24260__auto__ = o;
if(and__24260__auto__){
return o.cljs$core$IEquiv$_equiv$arity$2;
} else {
return and__24260__auto__;
}
})()){
return o.cljs$core$IEquiv$_equiv$arity$2(o,other);
} else {
var x__24916__auto__ = (((o == null))?null:o);
return (function (){var or__24272__auto__ = (cljs.core._equiv[(function (){var G__26118 = x__24916__auto__;
return goog.typeOf(G__26118);
})()]);
if(or__24272__auto__){
return or__24272__auto__;
} else {
var or__24272__auto____$1 = (cljs.core._equiv["_"]);
if(or__24272__auto____$1){
return or__24272__auto____$1;
} else {
throw cljs.core.missing_protocol("IEquiv.-equiv",o);
}
}
})().call(null,o,other);
}
});


cljs.core.IHash = (function (){var obj26120 = {};
return obj26120;
})();

cljs.core._hash = (function _hash(o){
if((function (){var and__24260__auto__ = o;
if(and__24260__auto__){
return o.cljs$core$IHash$_hash$arity$1;
} else {
return and__24260__auto__;
}
})()){
return o.cljs$core$IHash$_hash$arity$1(o);
} else {
var x__24916__auto__ = (((o == null))?null:o);
return (function (){var or__24272__auto__ = (cljs.core._hash[(function (){var G__26124 = x__24916__auto__;
return goog.typeOf(G__26124);
})()]);
if(or__24272__auto__){
return or__24272__auto__;
} else {
var or__24272__auto____$1 = (cljs.core._hash["_"]);
if(or__24272__auto____$1){
return or__24272__auto____$1;
} else {
throw cljs.core.missing_protocol("IHash.-hash",o);
}
}
})().call(null,o);
}
});


cljs.core.ISeqable = (function (){var obj26126 = {};
return obj26126;
})();

cljs.core._seq = (function _seq(o){
if((function (){var and__24260__auto__ = o;
if(and__24260__auto__){
return o.cljs$core$ISeqable$_seq$arity$1;
} else {
return and__24260__auto__;
}
})()){
return o.cljs$core$ISeqable$_seq$arity$1(o);
} else {
var x__24916__auto__ = (((o == null))?null:o);
return (function (){var or__24272__auto__ = (cljs.core._seq[(function (){var G__26130 = x__24916__auto__;
return goog.typeOf(G__26130);
})()]);
if(or__24272__auto__){
return or__24272__auto__;
} else {
var or__24272__auto____$1 = (cljs.core._seq["_"]);
if(or__24272__auto____$1){
return or__24272__auto____$1;
} else {
throw cljs.core.missing_protocol("ISeqable.-seq",o);
}
}
})().call(null,o);
}
});


cljs.core.ISequential = (function (){var obj26132 = {};
return obj26132;
})();


cljs.core.IList = (function (){var obj26134 = {};
return obj26134;
})();


cljs.core.IRecord = (function (){var obj26136 = {};
return obj26136;
})();


cljs.core.IReversible = (function (){var obj26138 = {};
return obj26138;
})();

cljs.core._rseq = (function _rseq(coll){
if((function (){var and__24260__auto__ = coll;
if(and__24260__auto__){
return coll.cljs$core$IReversible$_rseq$arity$1;
} else {
return and__24260__auto__;
}
})()){
return coll.cljs$core$IReversible$_rseq$arity$1(coll);
} else {
var x__24916__auto__ = (((coll == null))?null:coll);
return (function (){var or__24272__auto__ = (cljs.core._rseq[(function (){var G__26142 = x__24916__auto__;
return goog.typeOf(G__26142);
})()]);
if(or__24272__auto__){
return or__24272__auto__;
} else {
var or__24272__auto____$1 = (cljs.core._rseq["_"]);
if(or__24272__auto____$1){
return or__24272__auto____$1;
} else {
throw cljs.core.missing_protocol("IReversible.-rseq",coll);
}
}
})().call(null,coll);
}
});


cljs.core.ISorted = (function (){var obj26144 = {};
return obj26144;
})();

cljs.core._sorted_seq = (function _sorted_seq(coll,ascending_QMARK_){
if((function (){var and__24260__auto__ = coll;
if(and__24260__auto__){
return coll.cljs$core$ISorted$_sorted_seq$arity$2;
} else {
return and__24260__auto__;
}
})()){
return coll.cljs$core$ISorted$_sorted_seq$arity$2(coll,ascending_QMARK_);
} else {
var x__24916__auto__ = (((coll == null))?null:coll);
return (function (){var or__24272__auto__ = (cljs.core._sorted_seq[(function (){var G__26148 = x__24916__auto__;
return goog.typeOf(G__26148);
})()]);
if(or__24272__auto__){
return or__24272__auto__;
} else {
var or__24272__auto____$1 = (cljs.core._sorted_seq["_"]);
if(or__24272__auto____$1){
return or__24272__auto____$1;
} else {
throw cljs.core.missing_protocol("ISorted.-sorted-seq",coll);
}
}
})().call(null,coll,ascending_QMARK_);
}
});

cljs.core._sorted_seq_from = (function _sorted_seq_from(coll,k,ascending_QMARK_){
if((function (){var and__24260__auto__ = coll;
if(and__24260__auto__){
return coll.cljs$core$ISorted$_sorted_seq_from$arity$3;
} else {
return and__24260__auto__;
}
})()){
return coll.cljs$core$ISorted$_sorted_seq_from$arity$3(coll,k,ascending_QMARK_);
} else {
var x__24916__auto__ = (((coll == null))?null:coll);
return (function (){var or__24272__auto__ = (cljs.core._sorted_seq_from[(function (){var G__26152 = x__24916__auto__;
return goog.typeOf(G__26152);
})()]);
if(or__24272__auto__){
return or__24272__auto__;
} else {
var or__24272__auto____$1 = (cljs.core._sorted_seq_from["_"]);
if(or__24272__auto____$1){
return or__24272__auto____$1;
} else {
throw cljs.core.missing_protocol("ISorted.-sorted-seq-from",coll);
}
}
})().call(null,coll,k,ascending_QMARK_);
}
});

cljs.core._entry_key = (function _entry_key(coll,entry){
if((function (){var and__24260__auto__ = coll;
if(and__24260__auto__){
return coll.cljs$core$ISorted$_entry_key$arity$2;
} else {
return and__24260__auto__;
}
})()){
return coll.cljs$core$ISorted$_entry_key$arity$2(coll,entry);
} else {
var x__24916__auto__ = (((coll == null))?null:coll);
return (function (){var or__24272__auto__ = (cljs.core._entry_key[(function (){var G__26156 = x__24916__auto__;
return goog.typeOf(G__26156);
})()]);
if(or__24272__auto__){
return or__24272__auto__;
} else {
var or__24272__auto____$1 = (cljs.core._entry_key["_"]);
if(or__24272__auto____$1){
return or__24272__auto____$1;
} else {
throw cljs.core.missing_protocol("ISorted.-entry-key",coll);
}
}
})().call(null,coll,entry);
}
});

cljs.core._comparator = (function _comparator(coll){
if((function (){var and__24260__auto__ = coll;
if(and__24260__auto__){
return coll.cljs$core$ISorted$_comparator$arity$1;
} else {
return and__24260__auto__;
}
})()){
return coll.cljs$core$ISorted$_comparator$arity$1(coll);
} else {
var x__24916__auto__ = (((coll == null))?null:coll);
return (function (){var or__24272__auto__ = (cljs.core._comparator[(function (){var G__26160 = x__24916__auto__;
return goog.typeOf(G__26160);
})()]);
if(or__24272__auto__){
return or__24272__auto__;
} else {
var or__24272__auto____$1 = (cljs.core._comparator["_"]);
if(or__24272__auto____$1){
return or__24272__auto____$1;
} else {
throw cljs.core.missing_protocol("ISorted.-comparator",coll);
}
}
})().call(null,coll);
}
});


cljs.core.IWriter = (function (){var obj26162 = {};
return obj26162;
})();

cljs.core._write = (function _write(writer,s){
if((function (){var and__24260__auto__ = writer;
if(and__24260__auto__){
return writer.cljs$core$IWriter$_write$arity$2;
} else {
return and__24260__auto__;
}
})()){
return writer.cljs$core$IWriter$_write$arity$2(writer,s);
} else {
var x__24916__auto__ = (((writer == null))?null:writer);
return (function (){var or__24272__auto__ = (cljs.core._write[(function (){var G__26166 = x__24916__auto__;
return goog.typeOf(G__26166);
})()]);
if(or__24272__auto__){
return or__24272__auto__;
} else {
var or__24272__auto____$1 = (cljs.core._write["_"]);
if(or__24272__auto____$1){
return or__24272__auto____$1;
} else {
throw cljs.core.missing_protocol("IWriter.-write",writer);
}
}
})().call(null,writer,s);
}
});

cljs.core._flush = (function _flush(writer){
if((function (){var and__24260__auto__ = writer;
if(and__24260__auto__){
return writer.cljs$core$IWriter$_flush$arity$1;
} else {
return and__24260__auto__;
}
})()){
return writer.cljs$core$IWriter$_flush$arity$1(writer);
} else {
var x__24916__auto__ = (((writer == null))?null:writer);
return (function (){var or__24272__auto__ = (cljs.core._flush[(function (){var G__26170 = x__24916__auto__;
return goog.typeOf(G__26170);
})()]);
if(or__24272__auto__){
return or__24272__auto__;
} else {
var or__24272__auto____$1 = (cljs.core._flush["_"]);
if(or__24272__auto____$1){
return or__24272__auto____$1;
} else {
throw cljs.core.missing_protocol("IWriter.-flush",writer);
}
}
})().call(null,writer);
}
});


cljs.core.IPrintWithWriter = (function (){var obj26172 = {};
return obj26172;
})();

cljs.core._pr_writer = (function _pr_writer(o,writer,opts){
if((function (){var and__24260__auto__ = o;
if(and__24260__auto__){
return o.cljs$core$IPrintWithWriter$_pr_writer$arity$3;
} else {
return and__24260__auto__;
}
})()){
return o.cljs$core$IPrintWithWriter$_pr_writer$arity$3(o,writer,opts);
} else {
var x__24916__auto__ = (((o == null))?null:o);
return (function (){var or__24272__auto__ = (cljs.core._pr_writer[(function (){var G__26176 = x__24916__auto__;
return goog.typeOf(G__26176);
})()]);
if(or__24272__auto__){
return or__24272__auto__;
} else {
var or__24272__auto____$1 = (cljs.core._pr_writer["_"]);
if(or__24272__auto____$1){
return or__24272__auto____$1;
} else {
throw cljs.core.missing_protocol("IPrintWithWriter.-pr-writer",o);
}
}
})().call(null,o,writer,opts);
}
});


cljs.core.IPending = (function (){var obj26178 = {};
return obj26178;
})();

cljs.core._realized_QMARK_ = (function _realized_QMARK_(d){
if((function (){var and__24260__auto__ = d;
if(and__24260__auto__){
return d.cljs$core$IPending$_realized_QMARK_$arity$1;
} else {
return and__24260__auto__;
}
})()){
return d.cljs$core$IPending$_realized_QMARK_$arity$1(d);
} else {
var x__24916__auto__ = (((d == null))?null:d);
return (function (){var or__24272__auto__ = (cljs.core._realized_QMARK_[(function (){var G__26182 = x__24916__auto__;
return goog.typeOf(G__26182);
})()]);
if(or__24272__auto__){
return or__24272__auto__;
} else {
var or__24272__auto____$1 = (cljs.core._realized_QMARK_["_"]);
if(or__24272__auto____$1){
return or__24272__auto____$1;
} else {
throw cljs.core.missing_protocol("IPending.-realized?",d);
}
}
})().call(null,d);
}
});


cljs.core.IWatchable = (function (){var obj26184 = {};
return obj26184;
})();

cljs.core._notify_watches = (function _notify_watches(this$,oldval,newval){
if((function (){var and__24260__auto__ = this$;
if(and__24260__auto__){
return this$.cljs$core$IWatchable$_notify_watches$arity$3;
} else {
return and__24260__auto__;
}
})()){
return this$.cljs$core$IWatchable$_notify_watches$arity$3(this$,oldval,newval);
} else {
var x__24916__auto__ = (((this$ == null))?null:this$);
return (function (){var or__24272__auto__ = (cljs.core._notify_watches[(function (){var G__26188 = x__24916__auto__;
return goog.typeOf(G__26188);
})()]);
if(or__24272__auto__){
return or__24272__auto__;
} else {
var or__24272__auto____$1 = (cljs.core._notify_watches["_"]);
if(or__24272__auto____$1){
return or__24272__auto____$1;
} else {
throw cljs.core.missing_protocol("IWatchable.-notify-watches",this$);
}
}
})().call(null,this$,oldval,newval);
}
});

cljs.core._add_watch = (function _add_watch(this$,key,f){
if((function (){var and__24260__auto__ = this$;
if(and__24260__auto__){
return this$.cljs$core$IWatchable$_add_watch$arity$3;
} else {
return and__24260__auto__;
}
})()){
return this$.cljs$core$IWatchable$_add_watch$arity$3(this$,key,f);
} else {
var x__24916__auto__ = (((this$ == null))?null:this$);
return (function (){var or__24272__auto__ = (cljs.core._add_watch[(function (){var G__26192 = x__24916__auto__;
return goog.typeOf(G__26192);
})()]);
if(or__24272__auto__){
return or__24272__auto__;
} else {
var or__24272__auto____$1 = (cljs.core._add_watch["_"]);
if(or__24272__auto____$1){
return or__24272__auto____$1;
} else {
throw cljs.core.missing_protocol("IWatchable.-add-watch",this$);
}
}
})().call(null,this$,key,f);
}
});

cljs.core._remove_watch = (function _remove_watch(this$,key){
if((function (){var and__24260__auto__ = this$;
if(and__24260__auto__){
return this$.cljs$core$IWatchable$_remove_watch$arity$2;
} else {
return and__24260__auto__;
}
})()){
return this$.cljs$core$IWatchable$_remove_watch$arity$2(this$,key);
} else {
var x__24916__auto__ = (((this$ == null))?null:this$);
return (function (){var or__24272__auto__ = (cljs.core._remove_watch[(function (){var G__26196 = x__24916__auto__;
return goog.typeOf(G__26196);
})()]);
if(or__24272__auto__){
return or__24272__auto__;
} else {
var or__24272__auto____$1 = (cljs.core._remove_watch["_"]);
if(or__24272__auto____$1){
return or__24272__auto____$1;
} else {
throw cljs.core.missing_protocol("IWatchable.-remove-watch",this$);
}
}
})().call(null,this$,key);
}
});


cljs.core.IEditableCollection = (function (){var obj26198 = {};
return obj26198;
})();

cljs.core._as_transient = (function _as_transient(coll){
if((function (){var and__24260__auto__ = coll;
if(and__24260__auto__){
return coll.cljs$core$IEditableCollection$_as_transient$arity$1;
} else {
return and__24260__auto__;
}
})()){
return coll.cljs$core$IEditableCollection$_as_transient$arity$1(coll);
} else {
var x__24916__auto__ = (((coll == null))?null:coll);
return (function (){var or__24272__auto__ = (cljs.core._as_transient[(function (){var G__26202 = x__24916__auto__;
return goog.typeOf(G__26202);
})()]);
if(or__24272__auto__){
return or__24272__auto__;
} else {
var or__24272__auto____$1 = (cljs.core._as_transient["_"]);
if(or__24272__auto____$1){
return or__24272__auto____$1;
} else {
throw cljs.core.missing_protocol("IEditableCollection.-as-transient",coll);
}
}
})().call(null,coll);
}
});


cljs.core.ITransientCollection = (function (){var obj26204 = {};
return obj26204;
})();

cljs.core._conj_BANG_ = (function _conj_BANG_(tcoll,val){
if((function (){var and__24260__auto__ = tcoll;
if(and__24260__auto__){
return tcoll.cljs$core$ITransientCollection$_conj_BANG_$arity$2;
} else {
return and__24260__auto__;
}
})()){
return tcoll.cljs$core$ITransientCollection$_conj_BANG_$arity$2(tcoll,val);
} else {
var x__24916__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__24272__auto__ = (cljs.core._conj_BANG_[(function (){var G__26208 = x__24916__auto__;
return goog.typeOf(G__26208);
})()]);
if(or__24272__auto__){
return or__24272__auto__;
} else {
var or__24272__auto____$1 = (cljs.core._conj_BANG_["_"]);
if(or__24272__auto____$1){
return or__24272__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientCollection.-conj!",tcoll);
}
}
})().call(null,tcoll,val);
}
});

cljs.core._persistent_BANG_ = (function _persistent_BANG_(tcoll){
if((function (){var and__24260__auto__ = tcoll;
if(and__24260__auto__){
return tcoll.cljs$core$ITransientCollection$_persistent_BANG_$arity$1;
} else {
return and__24260__auto__;
}
})()){
return tcoll.cljs$core$ITransientCollection$_persistent_BANG_$arity$1(tcoll);
} else {
var x__24916__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__24272__auto__ = (cljs.core._persistent_BANG_[(function (){var G__26212 = x__24916__auto__;
return goog.typeOf(G__26212);
})()]);
if(or__24272__auto__){
return or__24272__auto__;
} else {
var or__24272__auto____$1 = (cljs.core._persistent_BANG_["_"]);
if(or__24272__auto____$1){
return or__24272__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientCollection.-persistent!",tcoll);
}
}
})().call(null,tcoll);
}
});


cljs.core.ITransientAssociative = (function (){var obj26214 = {};
return obj26214;
})();

cljs.core._assoc_BANG_ = (function _assoc_BANG_(tcoll,key,val){
if((function (){var and__24260__auto__ = tcoll;
if(and__24260__auto__){
return tcoll.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3;
} else {
return and__24260__auto__;
}
})()){
return tcoll.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3(tcoll,key,val);
} else {
var x__24916__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__24272__auto__ = (cljs.core._assoc_BANG_[(function (){var G__26218 = x__24916__auto__;
return goog.typeOf(G__26218);
})()]);
if(or__24272__auto__){
return or__24272__auto__;
} else {
var or__24272__auto____$1 = (cljs.core._assoc_BANG_["_"]);
if(or__24272__auto____$1){
return or__24272__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientAssociative.-assoc!",tcoll);
}
}
})().call(null,tcoll,key,val);
}
});


cljs.core.ITransientMap = (function (){var obj26220 = {};
return obj26220;
})();

cljs.core._dissoc_BANG_ = (function _dissoc_BANG_(tcoll,key){
if((function (){var and__24260__auto__ = tcoll;
if(and__24260__auto__){
return tcoll.cljs$core$ITransientMap$_dissoc_BANG_$arity$2;
} else {
return and__24260__auto__;
}
})()){
return tcoll.cljs$core$ITransientMap$_dissoc_BANG_$arity$2(tcoll,key);
} else {
var x__24916__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__24272__auto__ = (cljs.core._dissoc_BANG_[(function (){var G__26224 = x__24916__auto__;
return goog.typeOf(G__26224);
})()]);
if(or__24272__auto__){
return or__24272__auto__;
} else {
var or__24272__auto____$1 = (cljs.core._dissoc_BANG_["_"]);
if(or__24272__auto____$1){
return or__24272__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientMap.-dissoc!",tcoll);
}
}
})().call(null,tcoll,key);
}
});


cljs.core.ITransientVector = (function (){var obj26226 = {};
return obj26226;
})();

cljs.core._assoc_n_BANG_ = (function _assoc_n_BANG_(tcoll,n,val){
if((function (){var and__24260__auto__ = tcoll;
if(and__24260__auto__){
return tcoll.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3;
} else {
return and__24260__auto__;
}
})()){
return tcoll.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3(tcoll,n,val);
} else {
var x__24916__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__24272__auto__ = (cljs.core._assoc_n_BANG_[(function (){var G__26230 = x__24916__auto__;
return goog.typeOf(G__26230);
})()]);
if(or__24272__auto__){
return or__24272__auto__;
} else {
var or__24272__auto____$1 = (cljs.core._assoc_n_BANG_["_"]);
if(or__24272__auto____$1){
return or__24272__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientVector.-assoc-n!",tcoll);
}
}
})().call(null,tcoll,n,val);
}
});

cljs.core._pop_BANG_ = (function _pop_BANG_(tcoll){
if((function (){var and__24260__auto__ = tcoll;
if(and__24260__auto__){
return tcoll.cljs$core$ITransientVector$_pop_BANG_$arity$1;
} else {
return and__24260__auto__;
}
})()){
return tcoll.cljs$core$ITransientVector$_pop_BANG_$arity$1(tcoll);
} else {
var x__24916__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__24272__auto__ = (cljs.core._pop_BANG_[(function (){var G__26234 = x__24916__auto__;
return goog.typeOf(G__26234);
})()]);
if(or__24272__auto__){
return or__24272__auto__;
} else {
var or__24272__auto____$1 = (cljs.core._pop_BANG_["_"]);
if(or__24272__auto____$1){
return or__24272__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientVector.-pop!",tcoll);
}
}
})().call(null,tcoll);
}
});


cljs.core.ITransientSet = (function (){var obj26236 = {};
return obj26236;
})();

cljs.core._disjoin_BANG_ = (function _disjoin_BANG_(tcoll,v){
if((function (){var and__24260__auto__ = tcoll;
if(and__24260__auto__){
return tcoll.cljs$core$ITransientSet$_disjoin_BANG_$arity$2;
} else {
return and__24260__auto__;
}
})()){
return tcoll.cljs$core$ITransientSet$_disjoin_BANG_$arity$2(tcoll,v);
} else {
var x__24916__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__24272__auto__ = (cljs.core._disjoin_BANG_[(function (){var G__26240 = x__24916__auto__;
return goog.typeOf(G__26240);
})()]);
if(or__24272__auto__){
return or__24272__auto__;
} else {
var or__24272__auto____$1 = (cljs.core._disjoin_BANG_["_"]);
if(or__24272__auto____$1){
return or__24272__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientSet.-disjoin!",tcoll);
}
}
})().call(null,tcoll,v);
}
});


cljs.core.IComparable = (function (){var obj26242 = {};
return obj26242;
})();

cljs.core._compare = (function _compare(x,y){
if((function (){var and__24260__auto__ = x;
if(and__24260__auto__){
return x.cljs$core$IComparable$_compare$arity$2;
} else {
return and__24260__auto__;
}
})()){
return x.cljs$core$IComparable$_compare$arity$2(x,y);
} else {
var x__24916__auto__ = (((x == null))?null:x);
return (function (){var or__24272__auto__ = (cljs.core._compare[(function (){var G__26246 = x__24916__auto__;
return goog.typeOf(G__26246);
})()]);
if(or__24272__auto__){
return or__24272__auto__;
} else {
var or__24272__auto____$1 = (cljs.core._compare["_"]);
if(or__24272__auto____$1){
return or__24272__auto____$1;
} else {
throw cljs.core.missing_protocol("IComparable.-compare",x);
}
}
})().call(null,x,y);
}
});


cljs.core.IChunk = (function (){var obj26248 = {};
return obj26248;
})();

cljs.core._drop_first = (function _drop_first(coll){
if((function (){var and__24260__auto__ = coll;
if(and__24260__auto__){
return coll.cljs$core$IChunk$_drop_first$arity$1;
} else {
return and__24260__auto__;
}
})()){
return coll.cljs$core$IChunk$_drop_first$arity$1(coll);
} else {
var x__24916__auto__ = (((coll == null))?null:coll);
return (function (){var or__24272__auto__ = (cljs.core._drop_first[(function (){var G__26252 = x__24916__auto__;
return goog.typeOf(G__26252);
})()]);
if(or__24272__auto__){
return or__24272__auto__;
} else {
var or__24272__auto____$1 = (cljs.core._drop_first["_"]);
if(or__24272__auto____$1){
return or__24272__auto____$1;
} else {
throw cljs.core.missing_protocol("IChunk.-drop-first",coll);
}
}
})().call(null,coll);
}
});


cljs.core.IChunkedSeq = (function (){var obj26254 = {};
return obj26254;
})();

cljs.core._chunked_first = (function _chunked_first(coll){
if((function (){var and__24260__auto__ = coll;
if(and__24260__auto__){
return coll.cljs$core$IChunkedSeq$_chunked_first$arity$1;
} else {
return and__24260__auto__;
}
})()){
return coll.cljs$core$IChunkedSeq$_chunked_first$arity$1(coll);
} else {
var x__24916__auto__ = (((coll == null))?null:coll);
return (function (){var or__24272__auto__ = (cljs.core._chunked_first[(function (){var G__26258 = x__24916__auto__;
return goog.typeOf(G__26258);
})()]);
if(or__24272__auto__){
return or__24272__auto__;
} else {
var or__24272__auto____$1 = (cljs.core._chunked_first["_"]);
if(or__24272__auto____$1){
return or__24272__auto____$1;
} else {
throw cljs.core.missing_protocol("IChunkedSeq.-chunked-first",coll);
}
}
})().call(null,coll);
}
});

cljs.core._chunked_rest = (function _chunked_rest(coll){
if((function (){var and__24260__auto__ = coll;
if(and__24260__auto__){
return coll.cljs$core$IChunkedSeq$_chunked_rest$arity$1;
} else {
return and__24260__auto__;
}
})()){
return coll.cljs$core$IChunkedSeq$_chunked_rest$arity$1(coll);
} else {
var x__24916__auto__ = (((coll == null))?null:coll);
return (function (){var or__24272__auto__ = (cljs.core._chunked_rest[(function (){var G__26262 = x__24916__auto__;
return goog.typeOf(G__26262);
})()]);
if(or__24272__auto__){
return or__24272__auto__;
} else {
var or__24272__auto____$1 = (cljs.core._chunked_rest["_"]);
if(or__24272__auto____$1){
return or__24272__auto____$1;
} else {
throw cljs.core.missing_protocol("IChunkedSeq.-chunked-rest",coll);
}
}
})().call(null,coll);
}
});


cljs.core.IChunkedNext = (function (){var obj26264 = {};
return obj26264;
})();

cljs.core._chunked_next = (function _chunked_next(coll){
if((function (){var and__24260__auto__ = coll;
if(and__24260__auto__){
return coll.cljs$core$IChunkedNext$_chunked_next$arity$1;
} else {
return and__24260__auto__;
}
})()){
return coll.cljs$core$IChunkedNext$_chunked_next$arity$1(coll);
} else {
var x__24916__auto__ = (((coll == null))?null:coll);
return (function (){var or__24272__auto__ = (cljs.core._chunked_next[(function (){var G__26268 = x__24916__auto__;
return goog.typeOf(G__26268);
})()]);
if(or__24272__auto__){
return or__24272__auto__;
} else {
var or__24272__auto____$1 = (cljs.core._chunked_next["_"]);
if(or__24272__auto____$1){
return or__24272__auto____$1;
} else {
throw cljs.core.missing_protocol("IChunkedNext.-chunked-next",coll);
}
}
})().call(null,coll);
}
});


cljs.core.INamed = (function (){var obj26270 = {};
return obj26270;
})();

cljs.core._name = (function _name(x){
if((function (){var and__24260__auto__ = x;
if(and__24260__auto__){
return x.cljs$core$INamed$_name$arity$1;
} else {
return and__24260__auto__;
}
})()){
return x.cljs$core$INamed$_name$arity$1(x);
} else {
var x__24916__auto__ = (((x == null))?null:x);
return (function (){var or__24272__auto__ = (cljs.core._name[(function (){var G__26274 = x__24916__auto__;
return goog.typeOf(G__26274);
})()]);
if(or__24272__auto__){
return or__24272__auto__;
} else {
var or__24272__auto____$1 = (cljs.core._name["_"]);
if(or__24272__auto____$1){
return or__24272__auto____$1;
} else {
throw cljs.core.missing_protocol("INamed.-name",x);
}
}
})().call(null,x);
}
});

cljs.core._namespace = (function _namespace(x){
if((function (){var and__24260__auto__ = x;
if(and__24260__auto__){
return x.cljs$core$INamed$_namespace$arity$1;
} else {
return and__24260__auto__;
}
})()){
return x.cljs$core$INamed$_namespace$arity$1(x);
} else {
var x__24916__auto__ = (((x == null))?null:x);
return (function (){var or__24272__auto__ = (cljs.core._namespace[(function (){var G__26278 = x__24916__auto__;
return goog.typeOf(G__26278);
})()]);
if(or__24272__auto__){
return or__24272__auto__;
} else {
var or__24272__auto____$1 = (cljs.core._namespace["_"]);
if(or__24272__auto____$1){
return or__24272__auto____$1;
} else {
throw cljs.core.missing_protocol("INamed.-namespace",x);
}
}
})().call(null,x);
}
});


cljs.core.IAtom = (function (){var obj26280 = {};
return obj26280;
})();


cljs.core.IReset = (function (){var obj26282 = {};
return obj26282;
})();

cljs.core._reset_BANG_ = (function _reset_BANG_(o,new_value){
if((function (){var and__24260__auto__ = o;
if(and__24260__auto__){
return o.cljs$core$IReset$_reset_BANG_$arity$2;
} else {
return and__24260__auto__;
}
})()){
return o.cljs$core$IReset$_reset_BANG_$arity$2(o,new_value);
} else {
var x__24916__auto__ = (((o == null))?null:o);
return (function (){var or__24272__auto__ = (cljs.core._reset_BANG_[(function (){var G__26286 = x__24916__auto__;
return goog.typeOf(G__26286);
})()]);
if(or__24272__auto__){
return or__24272__auto__;
} else {
var or__24272__auto____$1 = (cljs.core._reset_BANG_["_"]);
if(or__24272__auto____$1){
return or__24272__auto____$1;
} else {
throw cljs.core.missing_protocol("IReset.-reset!",o);
}
}
})().call(null,o,new_value);
}
});


cljs.core.ISwap = (function (){var obj26288 = {};
return obj26288;
})();

cljs.core._swap_BANG_ = (function() {
var _swap_BANG_ = null;
var _swap_BANG___2 = (function (o,f){
if((function (){var and__24260__auto__ = o;
if(and__24260__auto__){
return o.cljs$core$ISwap$_swap_BANG_$arity$2;
} else {
return and__24260__auto__;
}
})()){
return o.cljs$core$ISwap$_swap_BANG_$arity$2(o,f);
} else {
var x__24916__auto__ = (((o == null))?null:o);
return (function (){var or__24272__auto__ = (cljs.core._swap_BANG_[(function (){var G__26298 = x__24916__auto__;
return goog.typeOf(G__26298);
})()]);
if(or__24272__auto__){
return or__24272__auto__;
} else {
var or__24272__auto____$1 = (cljs.core._swap_BANG_["_"]);
if(or__24272__auto____$1){
return or__24272__auto____$1;
} else {
throw cljs.core.missing_protocol("ISwap.-swap!",o);
}
}
})().call(null,o,f);
}
});
var _swap_BANG___3 = (function (o,f,a){
if((function (){var and__24260__auto__ = o;
if(and__24260__auto__){
return o.cljs$core$ISwap$_swap_BANG_$arity$3;
} else {
return and__24260__auto__;
}
})()){
return o.cljs$core$ISwap$_swap_BANG_$arity$3(o,f,a);
} else {
var x__24916__auto__ = (((o == null))?null:o);
return (function (){var or__24272__auto__ = (cljs.core._swap_BANG_[(function (){var G__26300 = x__24916__auto__;
return goog.typeOf(G__26300);
})()]);
if(or__24272__auto__){
return or__24272__auto__;
} else {
var or__24272__auto____$1 = (cljs.core._swap_BANG_["_"]);
if(or__24272__auto____$1){
return or__24272__auto____$1;
} else {
throw cljs.core.missing_protocol("ISwap.-swap!",o);
}
}
})().call(null,o,f,a);
}
});
var _swap_BANG___4 = (function (o,f,a,b){
if((function (){var and__24260__auto__ = o;
if(and__24260__auto__){
return o.cljs$core$ISwap$_swap_BANG_$arity$4;
} else {
return and__24260__auto__;
}
})()){
return o.cljs$core$ISwap$_swap_BANG_$arity$4(o,f,a,b);
} else {
var x__24916__auto__ = (((o == null))?null:o);
return (function (){var or__24272__auto__ = (cljs.core._swap_BANG_[(function (){var G__26302 = x__24916__auto__;
return goog.typeOf(G__26302);
})()]);
if(or__24272__auto__){
return or__24272__auto__;
} else {
var or__24272__auto____$1 = (cljs.core._swap_BANG_["_"]);
if(or__24272__auto____$1){
return or__24272__auto____$1;
} else {
throw cljs.core.missing_protocol("ISwap.-swap!",o);
}
}
})().call(null,o,f,a,b);
}
});
var _swap_BANG___5 = (function (o,f,a,b,xs){
if((function (){var and__24260__auto__ = o;
if(and__24260__auto__){
return o.cljs$core$ISwap$_swap_BANG_$arity$5;
} else {
return and__24260__auto__;
}
})()){
return o.cljs$core$ISwap$_swap_BANG_$arity$5(o,f,a,b,xs);
} else {
var x__24916__auto__ = (((o == null))?null:o);
return (function (){var or__24272__auto__ = (cljs.core._swap_BANG_[(function (){var G__26304 = x__24916__auto__;
return goog.typeOf(G__26304);
})()]);
if(or__24272__auto__){
return or__24272__auto__;
} else {
var or__24272__auto____$1 = (cljs.core._swap_BANG_["_"]);
if(or__24272__auto____$1){
return or__24272__auto____$1;
} else {
throw cljs.core.missing_protocol("ISwap.-swap!",o);
}
}
})().call(null,o,f,a,b,xs);
}
});
_swap_BANG_ = function(o,f,a,b,xs){
switch(arguments.length){
case 2:
return _swap_BANG___2.call(this,o,f);
case 3:
return _swap_BANG___3.call(this,o,f,a);
case 4:
return _swap_BANG___4.call(this,o,f,a,b);
case 5:
return _swap_BANG___5.call(this,o,f,a,b,xs);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_swap_BANG_.cljs$core$IFn$_invoke$arity$2 = _swap_BANG___2;
_swap_BANG_.cljs$core$IFn$_invoke$arity$3 = _swap_BANG___3;
_swap_BANG_.cljs$core$IFn$_invoke$arity$4 = _swap_BANG___4;
_swap_BANG_.cljs$core$IFn$_invoke$arity$5 = _swap_BANG___5;
return _swap_BANG_;
})()
;


cljs.core.IVolatile = (function (){var obj26306 = {};
return obj26306;
})();

cljs.core._vreset_BANG_ = (function _vreset_BANG_(o,new_value){
if((function (){var and__24260__auto__ = o;
if(and__24260__auto__){
return o.cljs$core$IVolatile$_vreset_BANG_$arity$2;
} else {
return and__24260__auto__;
}
})()){
return o.cljs$core$IVolatile$_vreset_BANG_$arity$2(o,new_value);
} else {
var x__24916__auto__ = (((o == null))?null:o);
return (function (){var or__24272__auto__ = (cljs.core._vreset_BANG_[(function (){var G__26310 = x__24916__auto__;
return goog.typeOf(G__26310);
})()]);
if(or__24272__auto__){
return or__24272__auto__;
} else {
var or__24272__auto____$1 = (cljs.core._vreset_BANG_["_"]);
if(or__24272__auto____$1){
return or__24272__auto____$1;
} else {
throw cljs.core.missing_protocol("IVolatile.-vreset!",o);
}
}
})().call(null,o,new_value);
}
});


cljs.core.IIterable = (function (){var obj26312 = {};
return obj26312;
})();

cljs.core._iterator = (function _iterator(coll){
if((function (){var and__24260__auto__ = coll;
if(and__24260__auto__){
return coll.cljs$core$IIterable$_iterator$arity$1;
} else {
return and__24260__auto__;
}
})()){
return coll.cljs$core$IIterable$_iterator$arity$1(coll);
} else {
var x__24916__auto__ = (((coll == null))?null:coll);
return (function (){var or__24272__auto__ = (cljs.core._iterator[(function (){var G__26316 = x__24916__auto__;
return goog.typeOf(G__26316);
})()]);
if(or__24272__auto__){
return or__24272__auto__;
} else {
var or__24272__auto____$1 = (cljs.core._iterator["_"]);
if(or__24272__auto____$1){
return or__24272__auto____$1;
} else {
throw cljs.core.missing_protocol("IIterable.-iterator",coll);
}
}
})().call(null,coll);
}
});


/**
* @constructor
*/
cljs.core.StringBufferWriter = (function (sb){
this.sb = sb;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 1073741824;
})
cljs.core.StringBufferWriter.prototype.cljs$core$IWriter$_write$arity$2 = (function (_,s){
var self__ = this;
var ___$1 = this;
return self__.sb.append(s);
});

cljs.core.StringBufferWriter.prototype.cljs$core$IWriter$_flush$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return null;
});

cljs.core.StringBufferWriter.cljs$lang$type = true;

cljs.core.StringBufferWriter.cljs$lang$ctorStr = "cljs.core/StringBufferWriter";

cljs.core.StringBufferWriter.cljs$lang$ctorPrWriter = (function (this__24859__auto__,writer__24860__auto__,opt__24861__auto__){
return cljs.core._write(writer__24860__auto__,"cljs.core/StringBufferWriter");
});

cljs.core.__GT_StringBufferWriter = (function __GT_StringBufferWriter(sb){
return (new cljs.core.StringBufferWriter(sb));
});

/**
* Support so that collections can implement toString without
* loading all the printing machinery.
*/
cljs.core.pr_str_STAR_ = (function pr_str_STAR_(obj){
var sb = (new goog.string.StringBuffer());
var writer = (new cljs.core.StringBufferWriter(sb));
obj.cljs$core$IPrintWithWriter$_pr_writer$arity$3(null,writer,cljs.core.pr_opts());

writer.cljs$core$IWriter$_flush$arity$1(null);

return [cljs.core.str(sb)].join('');
});
cljs.core.int_rotate_left = (function int_rotate_left(x,n){
return ((x << n) | (x >>> (- n)));
});
if((typeof Math.imul !== 'undefined') && (!(((function (){var G__26319 = (4294967295);
var G__26320 = (5);
return (Math.imul.cljs$core$IFn$_invoke$arity$2 ? Math.imul.cljs$core$IFn$_invoke$arity$2(G__26319,G__26320) : Math.imul.call(null,G__26319,G__26320));
})() === (0))))){
cljs.core.imul = (function imul(a,b){
var G__26323 = a;
var G__26324 = b;
return (Math.imul.cljs$core$IFn$_invoke$arity$2 ? Math.imul.cljs$core$IFn$_invoke$arity$2(G__26323,G__26324) : Math.imul.call(null,G__26323,G__26324));
});
} else {
cljs.core.imul = (function imul(a,b){
var ah = ((a >>> (16)) & (65535));
var al = (a & (65535));
var bh = ((b >>> (16)) & (65535));
var bl = (b & (65535));
return (((al * bl) + ((((ah * bl) + (al * bh)) << (16)) >>> (0))) | (0));
});
}
cljs.core.m3_seed = (0);
cljs.core.m3_C1 = (3432918353);
cljs.core.m3_C2 = (461845907);
cljs.core.m3_mix_K1 = (function m3_mix_K1(k1){
return cljs.core.imul(cljs.core.int_rotate_left(cljs.core.imul(k1,cljs.core.m3_C1),(15)),cljs.core.m3_C2);
});
cljs.core.m3_mix_H1 = (function m3_mix_H1(h1,k1){
return (cljs.core.imul(cljs.core.int_rotate_left((h1 ^ k1),(13)),(5)) + (3864292196));
});
cljs.core.m3_fmix = (function m3_fmix(h1,len){
var h1__$1 = h1;
var h1__$2 = (h1__$1 ^ len);
var h1__$3 = (h1__$2 ^ (h1__$2 >>> (16)));
var h1__$4 = cljs.core.imul(h1__$3,(2246822507));
var h1__$5 = (h1__$4 ^ (h1__$4 >>> (13)));
var h1__$6 = cljs.core.imul(h1__$5,(3266489909));
var h1__$7 = (h1__$6 ^ (h1__$6 >>> (16)));
return h1__$7;
});
cljs.core.m3_hash_int = (function m3_hash_int(in$){
if((in$ === (0))){
return in$;
} else {
var k1 = cljs.core.m3_mix_K1(in$);
var h1 = cljs.core.m3_mix_H1(cljs.core.m3_seed,k1);
return cljs.core.m3_fmix(h1,(4));
}
});
cljs.core.m3_hash_unencoded_chars = (function m3_hash_unencoded_chars(in$){
var h1 = (function (){var i = (1);
var h1 = cljs.core.m3_seed;
while(true){
if((i < in$.length)){
var G__26325 = (i + (2));
var G__26326 = cljs.core.m3_mix_H1(h1,cljs.core.m3_mix_K1((in$.charCodeAt((i - (1))) | (in$.charCodeAt(i) << (16)))));
i = G__26325;
h1 = G__26326;
continue;
} else {
return h1;
}
break;
}
})();
var h1__$1 = ((((in$.length & (1)) === (1)))?(h1 ^ cljs.core.m3_mix_K1(in$.charCodeAt((in$.length - (1))))):h1);
return cljs.core.m3_fmix(h1__$1,cljs.core.imul((2),in$.length));
});



cljs.core.string_hash_cache = (function (){var obj26328 = {};
return obj26328;
})();
cljs.core.string_hash_cache_count = (0);
cljs.core.hash_string_STAR_ = (function hash_string_STAR_(s){
if(!((s == null))){
var len = s.length;
if((len > (0))){
var i = (0);
var hash = (0);
while(true){
if((i < len)){
var G__26329 = (i + (1));
var G__26330 = (cljs.core.imul((31),hash) + s.charCodeAt(i));
i = G__26329;
hash = G__26330;
continue;
} else {
return hash;
}
break;
}
} else {
return (0);
}
} else {
return (0);
}
});
cljs.core.add_to_string_hash_cache = (function add_to_string_hash_cache(k){
var h = cljs.core.hash_string_STAR_(k);
(cljs.core.string_hash_cache[k] = h);

cljs.core.string_hash_cache_count = (cljs.core.string_hash_cache_count + (1));

return h;
});
cljs.core.hash_string = (function hash_string(k){
if((cljs.core.string_hash_cache_count > (255))){
cljs.core.string_hash_cache = (function (){var obj26334 = {};
return obj26334;
})();

cljs.core.string_hash_cache_count = (0);
} else {
}

var h = (cljs.core.string_hash_cache[k]);
if(typeof h === 'number'){
return h;
} else {
return cljs.core.add_to_string_hash_cache(k);
}
});
cljs.core.hash = (function hash(o){
if((function (){var G__26337 = o;
if(G__26337){
var bit__24946__auto__ = (G__26337.cljs$lang$protocol_mask$partition0$ & (4194304));
if((bit__24946__auto__) || (G__26337.cljs$core$IHash$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return o.cljs$core$IHash$_hash$arity$1(null);
} else {
if(typeof o === 'number'){
return ((function (){var G__26338 = o;
return (Math.floor.cljs$core$IFn$_invoke$arity$1 ? Math.floor.cljs$core$IFn$_invoke$arity$1(G__26338) : Math.floor.call(null,G__26338));
})() % (2147483647));
} else {
if(o === true){
return (1);
} else {
if(o === false){
return (0);
} else {
if(typeof o === 'string'){
return cljs.core.m3_hash_int(cljs.core.hash_string(o));
} else {
if((o instanceof Date)){
return o.valueOf();
} else {
if((o == null)){
return (0);
} else {
return cljs.core._hash(o);

}
}
}
}
}
}
}
});
cljs.core.hash_combine = (function hash_combine(seed,hash){
return (seed ^ (((hash + (2654435769)) + (seed << (6))) + (seed >> (2))));
});
cljs.core.instance_QMARK_ = (function instance_QMARK_(t,o){
return (o instanceof t);
});
cljs.core.symbol_QMARK_ = (function symbol_QMARK_(x){
return (x instanceof cljs.core.Symbol);
});
cljs.core.hash_symbol = (function hash_symbol(sym){
return cljs.core.hash_combine(cljs.core.m3_hash_unencoded_chars(sym.name),cljs.core.hash_string(sym.ns));
});
cljs.core.compare_symbols = (function compare_symbols(a,b){
if((a.str === b.str)){
return (0);
} else {
if(cljs.core.truth_((function (){var and__24260__auto__ = cljs.core.not(a.ns);
if(and__24260__auto__){
return b.ns;
} else {
return and__24260__auto__;
}
})())){
return (-1);
} else {
if(cljs.core.truth_(a.ns)){
if(cljs.core.not(b.ns)){
return (1);
} else {
var nsc = (function (){var G__26345 = a.ns;
var G__26346 = b.ns;
return goog.array.defaultCompare(G__26345,G__26346);
})();
if(((0) === nsc)){
var G__26347 = a.name;
var G__26348 = b.name;
return goog.array.defaultCompare(G__26347,G__26348);
} else {
return nsc;
}
}
} else {
var G__26349 = a.name;
var G__26350 = b.name;
return goog.array.defaultCompare(G__26349,G__26350);

}
}
}
});

/**
* @constructor
*/
cljs.core.Symbol = (function (ns,name,str,_hash,_meta){
this.ns = ns;
this.name = name;
this.str = str;
this._hash = _hash;
this._meta = _meta;
this.cljs$lang$protocol_mask$partition0$ = 2154168321;
this.cljs$lang$protocol_mask$partition1$ = 4096;
})
cljs.core.Symbol.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (o,writer,_){
var self__ = this;
var o__$1 = this;
return cljs.core._write(writer,self__.str);
});

cljs.core.Symbol.prototype.cljs$core$INamed$_name$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.name;
});

cljs.core.Symbol.prototype.cljs$core$INamed$_namespace$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.ns;
});

cljs.core.Symbol.prototype.cljs$core$IHash$_hash$arity$1 = (function (sym){
var self__ = this;
var sym__$1 = this;
var h__24693__auto__ = self__._hash;
if(!((h__24693__auto__ == null))){
return h__24693__auto__;
} else {
var h__24693__auto____$1 = cljs.core.hash_symbol(sym__$1);
self__._hash = h__24693__auto____$1;

return h__24693__auto____$1;
}
});

cljs.core.Symbol.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (_,new_meta){
var self__ = this;
var ___$1 = this;
return (new cljs.core.Symbol(self__.ns,self__.name,self__.str,self__._hash,new_meta));
});

cljs.core.Symbol.prototype.cljs$core$IMeta$_meta$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__._meta;
});

cljs.core.Symbol.prototype.call = (function() {
var G__26352 = null;
var G__26352__2 = (function (self__,coll){
var self__ = this;
var self____$1 = this;
var sym = self____$1;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll,sym,null);
});
var G__26352__3 = (function (self__,coll,not_found){
var self__ = this;
var self____$1 = this;
var sym = self____$1;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll,sym,not_found);
});
G__26352 = function(self__,coll,not_found){
switch(arguments.length){
case 2:
return G__26352__2.call(this,self__,coll);
case 3:
return G__26352__3.call(this,self__,coll,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__26352.cljs$core$IFn$_invoke$arity$2 = G__26352__2;
G__26352.cljs$core$IFn$_invoke$arity$3 = G__26352__3;
return G__26352;
})()
;

cljs.core.Symbol.prototype.apply = (function (self__,args26351){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args26351)));
});

cljs.core.Symbol.prototype.cljs$core$IFn$_invoke$arity$1 = (function (coll){
var self__ = this;
var sym = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll,sym,null);
});

cljs.core.Symbol.prototype.cljs$core$IFn$_invoke$arity$2 = (function (coll,not_found){
var self__ = this;
var sym = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll,sym,not_found);
});

cljs.core.Symbol.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (_,other){
var self__ = this;
var ___$1 = this;
if((other instanceof cljs.core.Symbol)){
return (self__.str === other.str);
} else {
return false;
}
});

cljs.core.Symbol.prototype.toString = (function (){
var self__ = this;
var _ = this;
return self__.str;
});

cljs.core.Symbol.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.Symbol.cljs$lang$type = true;

cljs.core.Symbol.cljs$lang$ctorStr = "cljs.core/Symbol";

cljs.core.Symbol.cljs$lang$ctorPrWriter = (function (this__24859__auto__,writer__24860__auto__,opt__24861__auto__){
return cljs.core._write(writer__24860__auto__,"cljs.core/Symbol");
});

cljs.core.__GT_Symbol = (function __GT_Symbol(ns,name,str,_hash,_meta){
return (new cljs.core.Symbol(ns,name,str,_hash,_meta));
});

cljs.core.symbol = (function() {
var symbol = null;
var symbol__1 = (function (name){
if((name instanceof cljs.core.Symbol)){
return name;
} else {
return symbol.cljs$core$IFn$_invoke$arity$2(null,name);
}
});
var symbol__2 = (function (ns,name){
var sym_str = ((!((ns == null)))?[cljs.core.str(ns),cljs.core.str("/"),cljs.core.str(name)].join(''):name);
return (new cljs.core.Symbol(ns,name,sym_str,null,null));
});
symbol = function(ns,name){
switch(arguments.length){
case 1:
return symbol__1.call(this,ns);
case 2:
return symbol__2.call(this,ns,name);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
symbol.cljs$core$IFn$_invoke$arity$1 = symbol__1;
symbol.cljs$core$IFn$_invoke$arity$2 = symbol__2;
return symbol;
})()
;

/**
* @constructor
*/
cljs.core.Var = (function (val,sym,_meta){
this.val = val;
this.sym = sym;
this._meta = _meta;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 163840;
})
cljs.core.Var.prototype.cljs$core$IMeta$_meta$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__._meta;
});

cljs.core.Var.prototype.cljs$core$IDeref$_deref$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.val;
});

cljs.core.Var.cljs$lang$type = true;

cljs.core.Var.cljs$lang$ctorStr = "cljs.core/Var";

cljs.core.Var.cljs$lang$ctorPrWriter = (function (this__24859__auto__,writer__24860__auto__,opt__24861__auto__){
return cljs.core._write(writer__24860__auto__,"cljs.core/Var");
});

cljs.core.__GT_Var = (function __GT_Var(val,sym,_meta){
return (new cljs.core.Var(val,sym,_meta));
});



cljs.core.iterable_QMARK_ = (function iterable_QMARK_(x){
var G__26356 = x;
if(G__26356){
var bit__24953__auto__ = null;
if(cljs.core.truth_((function (){var or__24272__auto__ = bit__24953__auto__;
if(cljs.core.truth_(or__24272__auto__)){
return or__24272__auto__;
} else {
return G__26356.cljs$core$IIterable$;
}
})())){
return true;
} else {
if((!G__26356.cljs$lang$protocol_mask$partition$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IIterable,G__26356);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IIterable,G__26356);
}
});
cljs.core.clone = (function clone(value){
return cljs.core._clone(value);
});
cljs.core.cloneable_QMARK_ = (function cloneable_QMARK_(value){
var G__26358 = value;
if(G__26358){
var bit__24953__auto__ = (G__26358.cljs$lang$protocol_mask$partition1$ & (8192));
if((bit__24953__auto__) || (G__26358.cljs$core$ICloneable$)){
return true;
} else {
if((!G__26358.cljs$lang$protocol_mask$partition1$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ICloneable,G__26358);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ICloneable,G__26358);
}
});
/**
* Returns a seq on the collection. If the collection is
* empty, returns nil.  (seq nil) returns nil. seq also works on
* Strings.
*/
cljs.core.seq = (function seq(coll){
if((coll == null)){
return null;
} else {
if((function (){var G__26360 = coll;
if(G__26360){
var bit__24946__auto__ = (G__26360.cljs$lang$protocol_mask$partition0$ & (8388608));
if((bit__24946__auto__) || (G__26360.cljs$core$ISeqable$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$ISeqable$_seq$arity$1(null);
} else {
if(coll instanceof Array){
if((coll.length === (0))){
return null;
} else {
return (new cljs.core.IndexedSeq(coll,(0)));
}
} else {
if(typeof coll === 'string'){
if((coll.length === (0))){
return null;
} else {
return (new cljs.core.IndexedSeq(coll,(0)));
}
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.ISeqable,coll)){
return cljs.core._seq(coll);
} else {
throw (new Error([cljs.core.str(coll),cljs.core.str(" is not ISeqable")].join('')));

}
}
}
}
}
});
/**
* Returns the first item in the collection. Calls seq on its
* argument. If coll is nil, returns nil.
*/
cljs.core.first = (function first(coll){
if((coll == null)){
return null;
} else {
if((function (){var G__26362 = coll;
if(G__26362){
var bit__24946__auto__ = (G__26362.cljs$lang$protocol_mask$partition0$ & (64));
if((bit__24946__auto__) || (G__26362.cljs$core$ISeq$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$ISeq$_first$arity$1(null);
} else {
var s = cljs.core.seq(coll);
if((s == null)){
return null;
} else {
return cljs.core._first(s);
}
}
}
});
/**
* Returns a possibly empty seq of the items after the first. Calls seq on its
* argument.
*/
cljs.core.rest = (function rest(coll){
if(!((coll == null))){
if((function (){var G__26364 = coll;
if(G__26364){
var bit__24946__auto__ = (G__26364.cljs$lang$protocol_mask$partition0$ & (64));
if((bit__24946__auto__) || (G__26364.cljs$core$ISeq$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$ISeq$_rest$arity$1(null);
} else {
var s = cljs.core.seq(coll);
if(s){
return cljs.core._rest(s);
} else {
return cljs.core.List.EMPTY;
}
}
} else {
return cljs.core.List.EMPTY;
}
});
/**
* Returns a seq of the items after the first. Calls seq on its
* argument.  If there are no more items, returns nil
*/
cljs.core.next = (function next(coll){
if((coll == null)){
return null;
} else {
if((function (){var G__26366 = coll;
if(G__26366){
var bit__24946__auto__ = (G__26366.cljs$lang$protocol_mask$partition0$ & (128));
if((bit__24946__auto__) || (G__26366.cljs$core$INext$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$INext$_next$arity$1(null);
} else {
return cljs.core.seq(cljs.core.rest(coll));
}
}
});
/**
* Equality. Returns true if x equals y, false if not. Compares
* numbers and collections in a type-independent manner.  Clojure's immutable data
* structures define -equiv (and thus =) as a value, not an identity,
* comparison.
* @param {...*} var_args
*/
cljs.core._EQ_ = (function() {
var _EQ_ = null;
var _EQ___1 = (function (x){
return true;
});
var _EQ___2 = (function (x,y){
if((x == null)){
return (y == null);
} else {
return ((x === y)) || (cljs.core._equiv(x,y));
}
});
var _EQ___3 = (function() { 
var G__26371__delegate = function (x,y,more){
while(true){
if(_EQ_.cljs$core$IFn$_invoke$arity$2(x,y)){
if(cljs.core.next(more)){
var G__26372 = y;
var G__26373 = cljs.core.first(more);
var G__26374 = cljs.core.next(more);
x = G__26372;
y = G__26373;
more = G__26374;
continue;
} else {
return _EQ_.cljs$core$IFn$_invoke$arity$2(y,cljs.core.first(more));
}
} else {
return false;
}
break;
}
};
var G__26371 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__26375__i = 0, G__26375__a = new Array(arguments.length -  2);
while (G__26375__i < G__26375__a.length) {G__26375__a[G__26375__i] = arguments[G__26375__i + 2]; ++G__26375__i;}
  more = new cljs.core.IndexedSeq(G__26375__a,0);
} 
return G__26371__delegate.call(this,x,y,more);};
G__26371.cljs$lang$maxFixedArity = 2;
G__26371.cljs$lang$applyTo = (function (arglist__26376){
var x = cljs.core.first(arglist__26376);
arglist__26376 = cljs.core.next(arglist__26376);
var y = cljs.core.first(arglist__26376);
var more = cljs.core.rest(arglist__26376);
return G__26371__delegate(x,y,more);
});
G__26371.cljs$core$IFn$_invoke$arity$variadic = G__26371__delegate;
return G__26371;
})()
;
_EQ_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return _EQ___1.call(this,x);
case 2:
return _EQ___2.call(this,x,y);
default:
var G__26377 = null;
if (arguments.length > 2) {
var G__26378__i = 0, G__26378__a = new Array(arguments.length -  2);
while (G__26378__i < G__26378__a.length) {G__26378__a[G__26378__i] = arguments[G__26378__i + 2]; ++G__26378__i;}
G__26377 = new cljs.core.IndexedSeq(G__26378__a,0);
}
return _EQ___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__26377);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_EQ_.cljs$lang$maxFixedArity = 2;
_EQ_.cljs$lang$applyTo = _EQ___3.cljs$lang$applyTo;
_EQ_.cljs$core$IFn$_invoke$arity$1 = _EQ___1;
_EQ_.cljs$core$IFn$_invoke$arity$2 = _EQ___2;
_EQ_.cljs$core$IFn$_invoke$arity$variadic = _EQ___3.cljs$core$IFn$_invoke$arity$variadic;
return _EQ_;
})()
;

/**
* @constructor
*/
cljs.core.ES6Iterator = (function (s){
this.s = s;
})
cljs.core.ES6Iterator.prototype.next = (function (){
var self__ = this;
var _ = this;
if(!((self__.s == null))){
var x = cljs.core.first(self__.s);
self__.s = cljs.core.next(self__.s);

return {"done": false, "value": x};
} else {
return {"done": true, "value": null};
}
});

cljs.core.ES6Iterator.cljs$lang$type = true;

cljs.core.ES6Iterator.cljs$lang$ctorStr = "cljs.core/ES6Iterator";

cljs.core.ES6Iterator.cljs$lang$ctorPrWriter = (function (this__24859__auto__,writer__24860__auto__,opt__24861__auto__){
return cljs.core._write(writer__24860__auto__,"cljs.core/ES6Iterator");
});

cljs.core.__GT_ES6Iterator = (function __GT_ES6Iterator(s){
return (new cljs.core.ES6Iterator(s));
});

cljs.core.es6_iterator = (function es6_iterator(coll){
return (new cljs.core.ES6Iterator(cljs.core.seq(coll)));
});

/**
* @constructor
*/
cljs.core.ES6IteratorSeq = (function (value,iter,_rest){
this.value = value;
this.iter = iter;
this._rest = _rest;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 8388672;
})
cljs.core.ES6IteratorSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.value;
});

cljs.core.ES6IteratorSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
if((self__._rest == null)){
self__._rest = (function (){var G__26379 = self__.iter;
return (cljs.core.es6_iterator_seq.cljs$core$IFn$_invoke$arity$1 ? cljs.core.es6_iterator_seq.cljs$core$IFn$_invoke$arity$1(G__26379) : cljs.core.es6_iterator_seq.call(null,G__26379));
})();
} else {
}

return self__._rest;
});

cljs.core.ES6IteratorSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return this$__$1;
});

cljs.core.ES6IteratorSeq.cljs$lang$type = true;

cljs.core.ES6IteratorSeq.cljs$lang$ctorStr = "cljs.core/ES6IteratorSeq";

cljs.core.ES6IteratorSeq.cljs$lang$ctorPrWriter = (function (this__24859__auto__,writer__24860__auto__,opt__24861__auto__){
return cljs.core._write(writer__24860__auto__,"cljs.core/ES6IteratorSeq");
});

cljs.core.__GT_ES6IteratorSeq = (function __GT_ES6IteratorSeq(value,iter,_rest){
return (new cljs.core.ES6IteratorSeq(value,iter,_rest));
});

cljs.core.es6_iterator_seq = (function es6_iterator_seq(iter){
var v = iter.next();
if(cljs.core.truth_(v.done)){
return cljs.core.List.EMPTY;
} else {
return (new cljs.core.ES6IteratorSeq(v.value,iter,null));
}
});
/**
* Mix final collection hash for ordered or unordered collections.
* hash-basis is the combined collection hash, count is the number
* of elements included in the basis. Note this is the hash code
* consistent with =, different from .hashCode.
* See http://clojure.org/data_structures#hash for full algorithms.
*/
cljs.core.mix_collection_hash = (function mix_collection_hash(hash_basis,count){
var h1 = cljs.core.m3_seed;
var k1 = cljs.core.m3_mix_K1(hash_basis);
var h1__$1 = cljs.core.m3_mix_H1(h1,k1);
return cljs.core.m3_fmix(h1__$1,count);
});
/**
* Returns the hash code, consistent with =, for an external ordered
* collection implementing Iterable.
* See http://clojure.org/data_structures#hash for full algorithms.
*/
cljs.core.hash_ordered_coll = (function hash_ordered_coll(coll){
var n = (0);
var hash_code = (1);
var coll__$1 = cljs.core.seq(coll);
while(true){
if(!((coll__$1 == null))){
var G__26380 = (n + (1));
var G__26381 = ((cljs.core.imul((31),hash_code) + cljs.core.hash(cljs.core.first(coll__$1))) | (0));
var G__26382 = cljs.core.next(coll__$1);
n = G__26380;
hash_code = G__26381;
coll__$1 = G__26382;
continue;
} else {
return cljs.core.mix_collection_hash(hash_code,n);
}
break;
}
});
/**
* Returns the hash code, consistent with =, for an external unordered
* collection implementing Iterable. For maps, the iterator should
* return map entries whose hash is computed as
* (hash-ordered-coll [k v]).
* See http://clojure.org/data_structures#hash for full algorithms.
*/
cljs.core.hash_unordered_coll = (function hash_unordered_coll(coll){
var n = (0);
var hash_code = (0);
var coll__$1 = cljs.core.seq(coll);
while(true){
if(!((coll__$1 == null))){
var G__26383 = (n + (1));
var G__26384 = ((hash_code + cljs.core.hash(cljs.core.first(coll__$1))) | (0));
var G__26385 = cljs.core.next(coll__$1);
n = G__26383;
hash_code = G__26384;
coll__$1 = G__26385;
continue;
} else {
return cljs.core.mix_collection_hash(hash_code,n);
}
break;
}
});


(cljs.core.ICounted["null"] = true);

(cljs.core._count["null"] = (function (_){
return (0);
}));
Date.prototype.cljs$core$IEquiv$ = true;

Date.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (o,other){
var o__$1 = this;
return ((other instanceof Date)) && ((o__$1.toString() === other.toString()));
});
(cljs.core.IEquiv["number"] = true);

(cljs.core._equiv["number"] = (function (x,o){
return (x === o);
}));
(cljs.core.IMeta["function"] = true);

(cljs.core._meta["function"] = (function (_){
return null;
}));

(cljs.core.Fn["function"] = true);
(cljs.core.IHash["_"] = true);

(cljs.core._hash["_"] = (function (o){
var G__26386 = o;
return goog.getUid(G__26386);
}));
/**
* Returns a number one greater than num.
*/
cljs.core.inc = (function inc(x){
return (x + (1));
});

/**
* @constructor
*/
cljs.core.Reduced = (function (val){
this.val = val;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32768;
})
cljs.core.Reduced.prototype.cljs$core$IDeref$_deref$arity$1 = (function (o){
var self__ = this;
var o__$1 = this;
return self__.val;
});

cljs.core.Reduced.cljs$lang$type = true;

cljs.core.Reduced.cljs$lang$ctorStr = "cljs.core/Reduced";

cljs.core.Reduced.cljs$lang$ctorPrWriter = (function (this__24859__auto__,writer__24860__auto__,opt__24861__auto__){
return cljs.core._write(writer__24860__auto__,"cljs.core/Reduced");
});

cljs.core.__GT_Reduced = (function __GT_Reduced(val){
return (new cljs.core.Reduced(val));
});

/**
* Wraps x in a way such that a reduce will terminate with the value x
*/
cljs.core.reduced = (function reduced(x){
return (new cljs.core.Reduced(x));
});
/**
* Returns true if x is the result of a call to reduced
*/
cljs.core.reduced_QMARK_ = (function reduced_QMARK_(r){
return (r instanceof cljs.core.Reduced);
});
/**
* If x is already reduced?, returns it, else returns (reduced x)
*/
cljs.core.ensure_reduced = (function ensure_reduced(x){
if(cljs.core.reduced_QMARK_(x)){
return x;
} else {
return cljs.core.reduced(x);
}
});
/**
* If x is reduced?, returns (deref x), else returns x
*/
cljs.core.unreduced = (function unreduced(x){
if(cljs.core.reduced_QMARK_(x)){
var G__26388 = x;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__26388) : cljs.core.deref.call(null,G__26388));
} else {
return x;
}
});
cljs.core.deref = (function deref(o){
return cljs.core._deref(o);
});
/**
* Accepts any collection which satisfies the ICount and IIndexed protocols and
* reduces them without incurring seq initialization
*/
cljs.core.ci_reduce = (function() {
var ci_reduce = null;
var ci_reduce__2 = (function (cicoll,f){
var cnt = cljs.core._count(cicoll);
if((cnt === (0))){
return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
} else {
var val = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(cicoll,(0));
var n = (1);
while(true){
if((n < cnt)){
var nval = (function (){var G__26395 = val;
var G__26396 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(cicoll,n);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__26395,G__26396) : f.call(null,G__26395,G__26396));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__26401 = nval;
var G__26402 = (n + (1));
val = G__26401;
n = G__26402;
continue;
}
} else {
return val;
}
break;
}
}
});
var ci_reduce__3 = (function (cicoll,f,val){
var cnt = cljs.core._count(cicoll);
var val__$1 = val;
var n = (0);
while(true){
if((n < cnt)){
var nval = (function (){var G__26397 = val__$1;
var G__26398 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(cicoll,n);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__26397,G__26398) : f.call(null,G__26397,G__26398));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__26403 = nval;
var G__26404 = (n + (1));
val__$1 = G__26403;
n = G__26404;
continue;
}
} else {
return val__$1;
}
break;
}
});
var ci_reduce__4 = (function (cicoll,f,val,idx){
var cnt = cljs.core._count(cicoll);
var val__$1 = val;
var n = idx;
while(true){
if((n < cnt)){
var nval = (function (){var G__26399 = val__$1;
var G__26400 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(cicoll,n);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__26399,G__26400) : f.call(null,G__26399,G__26400));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__26405 = nval;
var G__26406 = (n + (1));
val__$1 = G__26405;
n = G__26406;
continue;
}
} else {
return val__$1;
}
break;
}
});
ci_reduce = function(cicoll,f,val,idx){
switch(arguments.length){
case 2:
return ci_reduce__2.call(this,cicoll,f);
case 3:
return ci_reduce__3.call(this,cicoll,f,val);
case 4:
return ci_reduce__4.call(this,cicoll,f,val,idx);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
ci_reduce.cljs$core$IFn$_invoke$arity$2 = ci_reduce__2;
ci_reduce.cljs$core$IFn$_invoke$arity$3 = ci_reduce__3;
ci_reduce.cljs$core$IFn$_invoke$arity$4 = ci_reduce__4;
return ci_reduce;
})()
;
cljs.core.array_reduce = (function() {
var array_reduce = null;
var array_reduce__2 = (function (arr,f){
var cnt = arr.length;
if((arr.length === (0))){
return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
} else {
var val = (arr[(0)]);
var n = (1);
while(true){
if((n < cnt)){
var nval = (function (){var G__26413 = val;
var G__26414 = (arr[n]);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__26413,G__26414) : f.call(null,G__26413,G__26414));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__26419 = nval;
var G__26420 = (n + (1));
val = G__26419;
n = G__26420;
continue;
}
} else {
return val;
}
break;
}
}
});
var array_reduce__3 = (function (arr,f,val){
var cnt = arr.length;
var val__$1 = val;
var n = (0);
while(true){
if((n < cnt)){
var nval = (function (){var G__26415 = val__$1;
var G__26416 = (arr[n]);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__26415,G__26416) : f.call(null,G__26415,G__26416));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__26421 = nval;
var G__26422 = (n + (1));
val__$1 = G__26421;
n = G__26422;
continue;
}
} else {
return val__$1;
}
break;
}
});
var array_reduce__4 = (function (arr,f,val,idx){
var cnt = arr.length;
var val__$1 = val;
var n = idx;
while(true){
if((n < cnt)){
var nval = (function (){var G__26417 = val__$1;
var G__26418 = (arr[n]);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__26417,G__26418) : f.call(null,G__26417,G__26418));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__26423 = nval;
var G__26424 = (n + (1));
val__$1 = G__26423;
n = G__26424;
continue;
}
} else {
return val__$1;
}
break;
}
});
array_reduce = function(arr,f,val,idx){
switch(arguments.length){
case 2:
return array_reduce__2.call(this,arr,f);
case 3:
return array_reduce__3.call(this,arr,f,val);
case 4:
return array_reduce__4.call(this,arr,f,val,idx);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
array_reduce.cljs$core$IFn$_invoke$arity$2 = array_reduce__2;
array_reduce.cljs$core$IFn$_invoke$arity$3 = array_reduce__3;
array_reduce.cljs$core$IFn$_invoke$arity$4 = array_reduce__4;
return array_reduce;
})()
;



/**
* Returns true if coll implements count in constant time
*/
cljs.core.counted_QMARK_ = (function counted_QMARK_(x){
var G__26426 = x;
if(G__26426){
var bit__24953__auto__ = (G__26426.cljs$lang$protocol_mask$partition0$ & (2));
if((bit__24953__auto__) || (G__26426.cljs$core$ICounted$)){
return true;
} else {
if((!G__26426.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ICounted,G__26426);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ICounted,G__26426);
}
});
/**
* Returns true if coll implements nth in constant time
*/
cljs.core.indexed_QMARK_ = (function indexed_QMARK_(x){
var G__26428 = x;
if(G__26428){
var bit__24953__auto__ = (G__26428.cljs$lang$protocol_mask$partition0$ & (16));
if((bit__24953__auto__) || (G__26428.cljs$core$IIndexed$)){
return true;
} else {
if((!G__26428.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IIndexed,G__26428);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IIndexed,G__26428);
}
});

/**
* @constructor
*/
cljs.core.IndexedSeqIterator = (function (arr,i){
this.arr = arr;
this.i = i;
})
cljs.core.IndexedSeqIterator.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
return (self__.i < self__.arr.length);
});

cljs.core.IndexedSeqIterator.prototype.next = (function (){
var self__ = this;
var _ = this;
var ret = (self__.arr[self__.i]);
self__.i = (self__.i + (1));

return ret;
});

cljs.core.IndexedSeqIterator.cljs$lang$type = true;

cljs.core.IndexedSeqIterator.cljs$lang$ctorStr = "cljs.core/IndexedSeqIterator";

cljs.core.IndexedSeqIterator.cljs$lang$ctorPrWriter = (function (this__24859__auto__,writer__24860__auto__,opt__24861__auto__){
return cljs.core._write(writer__24860__auto__,"cljs.core/IndexedSeqIterator");
});

cljs.core.__GT_IndexedSeqIterator = (function __GT_IndexedSeqIterator(arr,i){
return (new cljs.core.IndexedSeqIterator(arr,i));
});


/**
* @constructor
*/
cljs.core.IndexedSeq = (function (arr,i){
this.arr = arr;
this.i = i;
this.cljs$lang$protocol_mask$partition0$ = 166199550;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.IndexedSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.IndexedSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.IndexedSeq.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (coll,n){
var self__ = this;
var coll__$1 = this;
var i__$1 = (n + self__.i);
if((i__$1 < self__.arr.length)){
return (self__.arr[i__$1]);
} else {
return null;
}
});

cljs.core.IndexedSeq.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (coll,n,not_found){
var self__ = this;
var coll__$1 = this;
var i__$1 = (n + self__.i);
if((i__$1 < self__.arr.length)){
return (self__.arr[i__$1]);
} else {
return not_found;
}
});

cljs.core.IndexedSeq.prototype.cljs$core$IIterable$ = true;

cljs.core.IndexedSeq.prototype.cljs$core$IIterable$_iterator$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.IndexedSeqIterator(self__.arr,self__.i));
});

cljs.core.IndexedSeq.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.IndexedSeq(self__.arr,self__.i));
});

cljs.core.IndexedSeq.prototype.cljs$core$INext$_next$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
if(((self__.i + (1)) < self__.arr.length)){
return (new cljs.core.IndexedSeq(self__.arr,(self__.i + (1))));
} else {
return null;
}
});

cljs.core.IndexedSeq.prototype.cljs$core$ICounted$_count$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (self__.arr.length - self__.i);
});

cljs.core.IndexedSeq.prototype.cljs$core$IReversible$_rseq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var c = cljs.core._count(coll__$1);
if((c > (0))){
return (new cljs.core.RSeq(coll__$1,(c - (1)),null));
} else {
return null;
}
});

cljs.core.IndexedSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.hash_ordered_coll(coll__$1);
});

cljs.core.IndexedSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
var G__26429 = coll__$1;
var G__26430 = other;
return (cljs.core.equiv_sequential.cljs$core$IFn$_invoke$arity$2 ? cljs.core.equiv_sequential.cljs$core$IFn$_invoke$arity$2(G__26429,G__26430) : cljs.core.equiv_sequential.call(null,G__26429,G__26430));
});

cljs.core.IndexedSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.List.EMPTY;
});

cljs.core.IndexedSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4(self__.arr,f,(self__.arr[self__.i]),(self__.i + (1)));
});

cljs.core.IndexedSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4(self__.arr,f,start,self__.i);
});

cljs.core.IndexedSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (self__.arr[self__.i]);
});

cljs.core.IndexedSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
if(((self__.i + (1)) < self__.arr.length)){
return (new cljs.core.IndexedSeq(self__.arr,(self__.i + (1))));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.IndexedSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return this$__$1;
});

cljs.core.IndexedSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
var G__26431 = o;
var G__26432 = coll__$1;
return (cljs.core.cons.cljs$core$IFn$_invoke$arity$2 ? cljs.core.cons.cljs$core$IFn$_invoke$arity$2(G__26431,G__26432) : cljs.core.cons.call(null,G__26431,G__26432));
});

cljs.core.IndexedSeq.cljs$lang$type = true;

cljs.core.IndexedSeq.cljs$lang$ctorStr = "cljs.core/IndexedSeq";

cljs.core.IndexedSeq.cljs$lang$ctorPrWriter = (function (this__24859__auto__,writer__24860__auto__,opt__24861__auto__){
return cljs.core._write(writer__24860__auto__,"cljs.core/IndexedSeq");
});

cljs.core.__GT_IndexedSeq = (function __GT_IndexedSeq(arr,i){
return (new cljs.core.IndexedSeq(arr,i));
});

(cljs.core.IndexedSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__25250__auto__ = this;
return cljs.core.es6_iterator(this__25250__auto__);
}));
cljs.core.prim_seq = (function() {
var prim_seq = null;
var prim_seq__1 = (function (prim){
return prim_seq.cljs$core$IFn$_invoke$arity$2(prim,(0));
});
var prim_seq__2 = (function (prim,i){
if((i < prim.length)){
return (new cljs.core.IndexedSeq(prim,i));
} else {
return null;
}
});
prim_seq = function(prim,i){
switch(arguments.length){
case 1:
return prim_seq__1.call(this,prim);
case 2:
return prim_seq__2.call(this,prim,i);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
prim_seq.cljs$core$IFn$_invoke$arity$1 = prim_seq__1;
prim_seq.cljs$core$IFn$_invoke$arity$2 = prim_seq__2;
return prim_seq;
})()
;
cljs.core.array_seq = (function() {
var array_seq = null;
var array_seq__1 = (function (array){
return cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(array,(0));
});
var array_seq__2 = (function (array,i){
return cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(array,i);
});
array_seq = function(array,i){
switch(arguments.length){
case 1:
return array_seq__1.call(this,array);
case 2:
return array_seq__2.call(this,array,i);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
array_seq.cljs$core$IFn$_invoke$arity$1 = array_seq__1;
array_seq.cljs$core$IFn$_invoke$arity$2 = array_seq__2;
return array_seq;
})()
;


/**
* @constructor
*/
cljs.core.RSeq = (function (ci,i,meta){
this.ci = ci;
this.i = i;
this.meta = meta;
this.cljs$lang$protocol_mask$partition0$ = 32374990;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.RSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.RSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.RSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.RSeq.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.RSeq(self__.ci,self__.i,self__.meta));
});

cljs.core.RSeq.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.i > (0))){
return (new cljs.core.RSeq(self__.ci,(self__.i - (1)),null));
} else {
return null;
}
});

cljs.core.RSeq.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (self__.i + (1));
});

cljs.core.RSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.hash_ordered_coll(coll__$1);
});

cljs.core.RSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
var G__26435 = coll__$1;
var G__26436 = other;
return (cljs.core.equiv_sequential.cljs$core$IFn$_invoke$arity$2 ? cljs.core.equiv_sequential.cljs$core$IFn$_invoke$arity$2(G__26435,G__26436) : cljs.core.equiv_sequential.call(null,G__26435,G__26436));
});

cljs.core.RSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var G__26437 = cljs.core.List.EMPTY;
var G__26438 = self__.meta;
return (cljs.core.with_meta.cljs$core$IFn$_invoke$arity$2 ? cljs.core.with_meta.cljs$core$IFn$_invoke$arity$2(G__26437,G__26438) : cljs.core.with_meta.call(null,G__26437,G__26438));
});

cljs.core.RSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (col,f){
var self__ = this;
var col__$1 = this;
var G__26439 = f;
var G__26440 = col__$1;
return (cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2 ? cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(G__26439,G__26440) : cljs.core.seq_reduce.call(null,G__26439,G__26440));
});

cljs.core.RSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (col,f,start){
var self__ = this;
var col__$1 = this;
var G__26441 = f;
var G__26442 = start;
var G__26443 = col__$1;
return (cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3 ? cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(G__26441,G__26442,G__26443) : cljs.core.seq_reduce.call(null,G__26441,G__26442,G__26443));
});

cljs.core.RSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.ci,self__.i);
});

cljs.core.RSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.i > (0))){
return (new cljs.core.RSeq(self__.ci,(self__.i - (1)),null));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.RSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.RSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,new_meta){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.RSeq(self__.ci,self__.i,new_meta));
});

cljs.core.RSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
var G__26444 = o;
var G__26445 = coll__$1;
return (cljs.core.cons.cljs$core$IFn$_invoke$arity$2 ? cljs.core.cons.cljs$core$IFn$_invoke$arity$2(G__26444,G__26445) : cljs.core.cons.call(null,G__26444,G__26445));
});

cljs.core.RSeq.cljs$lang$type = true;

cljs.core.RSeq.cljs$lang$ctorStr = "cljs.core/RSeq";

cljs.core.RSeq.cljs$lang$ctorPrWriter = (function (this__24859__auto__,writer__24860__auto__,opt__24861__auto__){
return cljs.core._write(writer__24860__auto__,"cljs.core/RSeq");
});

cljs.core.__GT_RSeq = (function __GT_RSeq(ci,i,meta){
return (new cljs.core.RSeq(ci,i,meta));
});

(cljs.core.RSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__25250__auto__ = this;
return cljs.core.es6_iterator(this__25250__auto__);
}));
/**
* Same as (first (next x))
*/
cljs.core.second = (function second(coll){
return cljs.core.first(cljs.core.next(coll));
});
/**
* Same as (first (first x))
*/
cljs.core.ffirst = (function ffirst(coll){
return cljs.core.first(cljs.core.first(coll));
});
/**
* Same as (next (first x))
*/
cljs.core.nfirst = (function nfirst(coll){
return cljs.core.next(cljs.core.first(coll));
});
/**
* Same as (first (next x))
*/
cljs.core.fnext = (function fnext(coll){
return cljs.core.first(cljs.core.next(coll));
});
/**
* Same as (next (next x))
*/
cljs.core.nnext = (function nnext(coll){
return cljs.core.next(cljs.core.next(coll));
});
/**
* Return the last item in coll, in linear time
*/
cljs.core.last = (function last(s){
while(true){
var sn = cljs.core.next(s);
if(!((sn == null))){
var G__26446 = sn;
s = G__26446;
continue;
} else {
return cljs.core.first(s);
}
break;
}
});
(cljs.core.IEquiv["_"] = true);

(cljs.core._equiv["_"] = (function (x,o){
return (x === o);
}));
/**
* conj[oin]. Returns a new collection with the xs
* 'added'. (conj nil item) returns (item).  The 'addition' may
* happen at different 'places' depending on the concrete type.
* @param {...*} var_args
*/
cljs.core.conj = (function() {
var conj = null;
var conj__0 = (function (){
return cljs.core.PersistentVector.EMPTY;
});
var conj__1 = (function (coll){
return coll;
});
var conj__2 = (function (coll,x){
if(!((coll == null))){
return cljs.core._conj(coll,x);
} else {
return cljs.core._conj(cljs.core.List.EMPTY,x);
}
});
var conj__3 = (function() { 
var G__26451__delegate = function (coll,x,xs){
while(true){
if(cljs.core.truth_(xs)){
var G__26452 = conj.cljs$core$IFn$_invoke$arity$2(coll,x);
var G__26453 = cljs.core.first(xs);
var G__26454 = cljs.core.next(xs);
coll = G__26452;
x = G__26453;
xs = G__26454;
continue;
} else {
return conj.cljs$core$IFn$_invoke$arity$2(coll,x);
}
break;
}
};
var G__26451 = function (coll,x,var_args){
var xs = null;
if (arguments.length > 2) {
var G__26455__i = 0, G__26455__a = new Array(arguments.length -  2);
while (G__26455__i < G__26455__a.length) {G__26455__a[G__26455__i] = arguments[G__26455__i + 2]; ++G__26455__i;}
  xs = new cljs.core.IndexedSeq(G__26455__a,0);
} 
return G__26451__delegate.call(this,coll,x,xs);};
G__26451.cljs$lang$maxFixedArity = 2;
G__26451.cljs$lang$applyTo = (function (arglist__26456){
var coll = cljs.core.first(arglist__26456);
arglist__26456 = cljs.core.next(arglist__26456);
var x = cljs.core.first(arglist__26456);
var xs = cljs.core.rest(arglist__26456);
return G__26451__delegate(coll,x,xs);
});
G__26451.cljs$core$IFn$_invoke$arity$variadic = G__26451__delegate;
return G__26451;
})()
;
conj = function(coll,x,var_args){
var xs = var_args;
switch(arguments.length){
case 0:
return conj__0.call(this);
case 1:
return conj__1.call(this,coll);
case 2:
return conj__2.call(this,coll,x);
default:
var G__26457 = null;
if (arguments.length > 2) {
var G__26458__i = 0, G__26458__a = new Array(arguments.length -  2);
while (G__26458__i < G__26458__a.length) {G__26458__a[G__26458__i] = arguments[G__26458__i + 2]; ++G__26458__i;}
G__26457 = new cljs.core.IndexedSeq(G__26458__a,0);
}
return conj__3.cljs$core$IFn$_invoke$arity$variadic(coll,x, G__26457);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
conj.cljs$lang$maxFixedArity = 2;
conj.cljs$lang$applyTo = conj__3.cljs$lang$applyTo;
conj.cljs$core$IFn$_invoke$arity$0 = conj__0;
conj.cljs$core$IFn$_invoke$arity$1 = conj__1;
conj.cljs$core$IFn$_invoke$arity$2 = conj__2;
conj.cljs$core$IFn$_invoke$arity$variadic = conj__3.cljs$core$IFn$_invoke$arity$variadic;
return conj;
})()
;
/**
* Returns an empty collection of the same category as coll, or nil
*/
cljs.core.empty = (function empty(coll){
if((coll == null)){
return null;
} else {
return cljs.core._empty(coll);
}
});
cljs.core.accumulating_seq_count = (function accumulating_seq_count(coll){
var s = cljs.core.seq(coll);
var acc = (0);
while(true){
if(cljs.core.counted_QMARK_(s)){
return (acc + cljs.core._count(s));
} else {
var G__26459 = cljs.core.next(s);
var G__26460 = (acc + (1));
s = G__26459;
acc = G__26460;
continue;
}
break;
}
});
/**
* Returns the number of items in the collection. (count nil) returns
* 0.  Also works on strings, arrays, and Maps
*/
cljs.core.count = (function count(coll){
if(!((coll == null))){
if((function (){var G__26462 = coll;
if(G__26462){
var bit__24946__auto__ = (G__26462.cljs$lang$protocol_mask$partition0$ & (2));
if((bit__24946__auto__) || (G__26462.cljs$core$ICounted$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$ICounted$_count$arity$1(null);
} else {
if(coll instanceof Array){
return coll.length;
} else {
if(typeof coll === 'string'){
return coll.length;
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.ICounted,coll)){
return cljs.core._count(coll);
} else {
return cljs.core.accumulating_seq_count(coll);

}
}
}
}
} else {
return (0);
}
});
cljs.core.linear_traversal_nth = (function() {
var linear_traversal_nth = null;
var linear_traversal_nth__2 = (function (coll,n){
while(true){
if((coll == null)){
throw (new Error("Index out of bounds"));
} else {
if((n === (0))){
if(cljs.core.seq(coll)){
return cljs.core.first(coll);
} else {
throw (new Error("Index out of bounds"));
}
} else {
if(cljs.core.indexed_QMARK_(coll)){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll,n);
} else {
if(cljs.core.seq(coll)){
var G__26463 = cljs.core.next(coll);
var G__26464 = (n - (1));
coll = G__26463;
n = G__26464;
continue;
} else {
throw (new Error("Index out of bounds"));

}
}
}
}
break;
}
});
var linear_traversal_nth__3 = (function (coll,n,not_found){
while(true){
if((coll == null)){
return not_found;
} else {
if((n === (0))){
if(cljs.core.seq(coll)){
return cljs.core.first(coll);
} else {
return not_found;
}
} else {
if(cljs.core.indexed_QMARK_(coll)){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(coll,n,not_found);
} else {
if(cljs.core.seq(coll)){
var G__26465 = cljs.core.next(coll);
var G__26466 = (n - (1));
var G__26467 = not_found;
coll = G__26465;
n = G__26466;
not_found = G__26467;
continue;
} else {
return not_found;

}
}
}
}
break;
}
});
linear_traversal_nth = function(coll,n,not_found){
switch(arguments.length){
case 2:
return linear_traversal_nth__2.call(this,coll,n);
case 3:
return linear_traversal_nth__3.call(this,coll,n,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
linear_traversal_nth.cljs$core$IFn$_invoke$arity$2 = linear_traversal_nth__2;
linear_traversal_nth.cljs$core$IFn$_invoke$arity$3 = linear_traversal_nth__3;
return linear_traversal_nth;
})()
;
/**
* Returns the value at the index. get returns nil if index out of
* bounds, nth throws an exception unless not-found is supplied.  nth
* also works for strings, arrays, regex Matchers and Lists, and,
* in O(n) time, for sequences.
*/
cljs.core.nth = (function() {
var nth = null;
var nth__2 = (function (coll,n){
if(!(typeof n === 'number')){
throw (new Error("index argument to nth must be a number"));
} else {
if((coll == null)){
return coll;
} else {
if((function (){var G__26472 = coll;
if(G__26472){
var bit__24946__auto__ = (G__26472.cljs$lang$protocol_mask$partition0$ & (16));
if((bit__24946__auto__) || (G__26472.cljs$core$IIndexed$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$IIndexed$_nth$arity$2(null,n);
} else {
if(coll instanceof Array){
if((n < coll.length)){
return (coll[n]);
} else {
return null;
}
} else {
if(typeof coll === 'string'){
if((n < coll.length)){
return (coll[n]);
} else {
return null;
}
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.IIndexed,coll)){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll,n);
} else {
if((function (){var G__26473 = coll;
if(G__26473){
var bit__24953__auto__ = (G__26473.cljs$lang$protocol_mask$partition0$ & (64));
if((bit__24953__auto__) || (G__26473.cljs$core$ISeq$)){
return true;
} else {
if((!G__26473.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq,G__26473);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq,G__26473);
}
})()){
return cljs.core.linear_traversal_nth.cljs$core$IFn$_invoke$arity$2(coll,n);
} else {
throw (new Error([cljs.core.str("nth not supported on this type "),cljs.core.str(cljs.core.type__GT_str(cljs.core.type(coll)))].join('')));

}
}
}
}
}
}
}
});
var nth__3 = (function (coll,n,not_found){
if(!(typeof n === 'number')){
throw (new Error("index argument to nth must be a number."));
} else {
if((coll == null)){
return not_found;
} else {
if((function (){var G__26474 = coll;
if(G__26474){
var bit__24946__auto__ = (G__26474.cljs$lang$protocol_mask$partition0$ & (16));
if((bit__24946__auto__) || (G__26474.cljs$core$IIndexed$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$IIndexed$_nth$arity$3(null,n,not_found);
} else {
if(coll instanceof Array){
if((n < coll.length)){
return (coll[n]);
} else {
return not_found;
}
} else {
if(typeof coll === 'string'){
if((n < coll.length)){
return (coll[n]);
} else {
return not_found;
}
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.IIndexed,coll)){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll,n);
} else {
if((function (){var G__26475 = coll;
if(G__26475){
var bit__24953__auto__ = (G__26475.cljs$lang$protocol_mask$partition0$ & (64));
if((bit__24953__auto__) || (G__26475.cljs$core$ISeq$)){
return true;
} else {
if((!G__26475.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq,G__26475);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq,G__26475);
}
})()){
return cljs.core.linear_traversal_nth.cljs$core$IFn$_invoke$arity$3(coll,n,not_found);
} else {
throw (new Error([cljs.core.str("nth not supported on this type "),cljs.core.str(cljs.core.type__GT_str(cljs.core.type(coll)))].join('')));

}
}
}
}
}
}
}
});
nth = function(coll,n,not_found){
switch(arguments.length){
case 2:
return nth__2.call(this,coll,n);
case 3:
return nth__3.call(this,coll,n,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
nth.cljs$core$IFn$_invoke$arity$2 = nth__2;
nth.cljs$core$IFn$_invoke$arity$3 = nth__3;
return nth;
})()
;
/**
* Returns the nth rest of coll, coll when n is 0.
*/
cljs.core.nthrest = (function nthrest(coll,n){
var n__$1 = n;
var xs = coll;
while(true){
if(((n__$1 > (0))) && (cljs.core.seq(xs))){
var G__26476 = (n__$1 - (1));
var G__26477 = cljs.core.rest(xs);
n__$1 = G__26476;
xs = G__26477;
continue;
} else {
return xs;
}
break;
}
});
/**
* Returns the value mapped to key, not-found or nil if key not present.
*/
cljs.core.get = (function() {
var get = null;
var get__2 = (function (o,k){
if((o == null)){
return null;
} else {
if((function (){var G__26480 = o;
if(G__26480){
var bit__24946__auto__ = (G__26480.cljs$lang$protocol_mask$partition0$ & (256));
if((bit__24946__auto__) || (G__26480.cljs$core$ILookup$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return o.cljs$core$ILookup$_lookup$arity$2(null,k);
} else {
if(o instanceof Array){
if((k < o.length)){
return (o[k]);
} else {
return null;
}
} else {
if(typeof o === 'string'){
if((k < o.length)){
return (o[k]);
} else {
return null;
}
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.ILookup,o)){
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$2(o,k);
} else {
return null;

}
}
}
}
}
});
var get__3 = (function (o,k,not_found){
if(!((o == null))){
if((function (){var G__26481 = o;
if(G__26481){
var bit__24946__auto__ = (G__26481.cljs$lang$protocol_mask$partition0$ & (256));
if((bit__24946__auto__) || (G__26481.cljs$core$ILookup$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return o.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
} else {
if(o instanceof Array){
if((k < o.length)){
return (o[k]);
} else {
return not_found;
}
} else {
if(typeof o === 'string'){
if((k < o.length)){
return (o[k]);
} else {
return not_found;
}
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.ILookup,o)){
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(o,k,not_found);
} else {
return not_found;

}
}
}
}
} else {
return not_found;
}
});
get = function(o,k,not_found){
switch(arguments.length){
case 2:
return get__2.call(this,o,k);
case 3:
return get__3.call(this,o,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
get.cljs$core$IFn$_invoke$arity$2 = get__2;
get.cljs$core$IFn$_invoke$arity$3 = get__3;
return get;
})()
;
/**
* assoc[iate]. When applied to a map, returns a new map of the
* same (hashed/sorted) type, that contains the mapping of key(s) to
* val(s). When applied to a vector, returns a new vector that
* contains val at index.
* @param {...*} var_args
*/
cljs.core.assoc = (function() {
var assoc = null;
var assoc__3 = (function (coll,k,v){
if(!((coll == null))){
return cljs.core._assoc(coll,k,v);
} else {
return cljs.core.PersistentHashMap.fromArrays([k],[v]);
}
});
var assoc__4 = (function() { 
var G__26485__delegate = function (coll,k,v,kvs){
while(true){
var ret = assoc.cljs$core$IFn$_invoke$arity$3(coll,k,v);
if(cljs.core.truth_(kvs)){
var G__26486 = ret;
var G__26487 = cljs.core.first(kvs);
var G__26488 = cljs.core.second(kvs);
var G__26489 = cljs.core.nnext(kvs);
coll = G__26486;
k = G__26487;
v = G__26488;
kvs = G__26489;
continue;
} else {
return ret;
}
break;
}
};
var G__26485 = function (coll,k,v,var_args){
var kvs = null;
if (arguments.length > 3) {
var G__26490__i = 0, G__26490__a = new Array(arguments.length -  3);
while (G__26490__i < G__26490__a.length) {G__26490__a[G__26490__i] = arguments[G__26490__i + 3]; ++G__26490__i;}
  kvs = new cljs.core.IndexedSeq(G__26490__a,0);
} 
return G__26485__delegate.call(this,coll,k,v,kvs);};
G__26485.cljs$lang$maxFixedArity = 3;
G__26485.cljs$lang$applyTo = (function (arglist__26491){
var coll = cljs.core.first(arglist__26491);
arglist__26491 = cljs.core.next(arglist__26491);
var k = cljs.core.first(arglist__26491);
arglist__26491 = cljs.core.next(arglist__26491);
var v = cljs.core.first(arglist__26491);
var kvs = cljs.core.rest(arglist__26491);
return G__26485__delegate(coll,k,v,kvs);
});
G__26485.cljs$core$IFn$_invoke$arity$variadic = G__26485__delegate;
return G__26485;
})()
;
assoc = function(coll,k,v,var_args){
var kvs = var_args;
switch(arguments.length){
case 3:
return assoc__3.call(this,coll,k,v);
default:
var G__26492 = null;
if (arguments.length > 3) {
var G__26493__i = 0, G__26493__a = new Array(arguments.length -  3);
while (G__26493__i < G__26493__a.length) {G__26493__a[G__26493__i] = arguments[G__26493__i + 3]; ++G__26493__i;}
G__26492 = new cljs.core.IndexedSeq(G__26493__a,0);
}
return assoc__4.cljs$core$IFn$_invoke$arity$variadic(coll,k,v, G__26492);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
assoc.cljs$lang$maxFixedArity = 3;
assoc.cljs$lang$applyTo = assoc__4.cljs$lang$applyTo;
assoc.cljs$core$IFn$_invoke$arity$3 = assoc__3;
assoc.cljs$core$IFn$_invoke$arity$variadic = assoc__4.cljs$core$IFn$_invoke$arity$variadic;
return assoc;
})()
;
/**
* dissoc[iate]. Returns a new map of the same (hashed/sorted) type,
* that does not contain a mapping for key(s).
* @param {...*} var_args
*/
cljs.core.dissoc = (function() {
var dissoc = null;
var dissoc__1 = (function (coll){
return coll;
});
var dissoc__2 = (function (coll,k){
if((coll == null)){
return null;
} else {
return cljs.core._dissoc(coll,k);
}
});
var dissoc__3 = (function() { 
var G__26496__delegate = function (coll,k,ks){
while(true){
if((coll == null)){
return null;
} else {
var ret = dissoc.cljs$core$IFn$_invoke$arity$2(coll,k);
if(cljs.core.truth_(ks)){
var G__26497 = ret;
var G__26498 = cljs.core.first(ks);
var G__26499 = cljs.core.next(ks);
coll = G__26497;
k = G__26498;
ks = G__26499;
continue;
} else {
return ret;
}
}
break;
}
};
var G__26496 = function (coll,k,var_args){
var ks = null;
if (arguments.length > 2) {
var G__26500__i = 0, G__26500__a = new Array(arguments.length -  2);
while (G__26500__i < G__26500__a.length) {G__26500__a[G__26500__i] = arguments[G__26500__i + 2]; ++G__26500__i;}
  ks = new cljs.core.IndexedSeq(G__26500__a,0);
} 
return G__26496__delegate.call(this,coll,k,ks);};
G__26496.cljs$lang$maxFixedArity = 2;
G__26496.cljs$lang$applyTo = (function (arglist__26501){
var coll = cljs.core.first(arglist__26501);
arglist__26501 = cljs.core.next(arglist__26501);
var k = cljs.core.first(arglist__26501);
var ks = cljs.core.rest(arglist__26501);
return G__26496__delegate(coll,k,ks);
});
G__26496.cljs$core$IFn$_invoke$arity$variadic = G__26496__delegate;
return G__26496;
})()
;
dissoc = function(coll,k,var_args){
var ks = var_args;
switch(arguments.length){
case 1:
return dissoc__1.call(this,coll);
case 2:
return dissoc__2.call(this,coll,k);
default:
var G__26502 = null;
if (arguments.length > 2) {
var G__26503__i = 0, G__26503__a = new Array(arguments.length -  2);
while (G__26503__i < G__26503__a.length) {G__26503__a[G__26503__i] = arguments[G__26503__i + 2]; ++G__26503__i;}
G__26502 = new cljs.core.IndexedSeq(G__26503__a,0);
}
return dissoc__3.cljs$core$IFn$_invoke$arity$variadic(coll,k, G__26502);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
dissoc.cljs$lang$maxFixedArity = 2;
dissoc.cljs$lang$applyTo = dissoc__3.cljs$lang$applyTo;
dissoc.cljs$core$IFn$_invoke$arity$1 = dissoc__1;
dissoc.cljs$core$IFn$_invoke$arity$2 = dissoc__2;
dissoc.cljs$core$IFn$_invoke$arity$variadic = dissoc__3.cljs$core$IFn$_invoke$arity$variadic;
return dissoc;
})()
;
cljs.core.fn_QMARK_ = (function fn_QMARK_(f){
var or__24272__auto__ = (function (){var G__26508 = f;
return goog.isFunction(G__26508);
})();
if(cljs.core.truth_(or__24272__auto__)){
return or__24272__auto__;
} else {
var G__26509 = f;
if(G__26509){
var bit__24953__auto__ = null;
if(cljs.core.truth_((function (){var or__24272__auto____$1 = bit__24953__auto__;
if(cljs.core.truth_(or__24272__auto____$1)){
return or__24272__auto____$1;
} else {
return G__26509.cljs$core$Fn$;
}
})())){
return true;
} else {
if((!G__26509.cljs$lang$protocol_mask$partition$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.Fn,G__26509);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.Fn,G__26509);
}
}
});

/**
* @constructor
*/
cljs.core.MetaFn = (function (afn,meta){
this.afn = afn;
this.meta = meta;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 393217;
})
cljs.core.MetaFn.prototype.call = (function() {
var G__26975 = null;
var G__26975__1 = (function (self__){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (self__.afn.cljs$core$IFn$_invoke$arity$0 ? self__.afn.cljs$core$IFn$_invoke$arity$0() : self__.afn.call(null));
});
var G__26975__2 = (function (self__,a){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__26511 = a;
return (self__.afn.cljs$core$IFn$_invoke$arity$1 ? self__.afn.cljs$core$IFn$_invoke$arity$1(G__26511) : self__.afn.call(null,G__26511));
});
var G__26975__3 = (function (self__,a,b){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__26512 = a;
var G__26513 = b;
return (self__.afn.cljs$core$IFn$_invoke$arity$2 ? self__.afn.cljs$core$IFn$_invoke$arity$2(G__26512,G__26513) : self__.afn.call(null,G__26512,G__26513));
});
var G__26975__4 = (function (self__,a,b,c){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__26514 = a;
var G__26515 = b;
var G__26516 = c;
return (self__.afn.cljs$core$IFn$_invoke$arity$3 ? self__.afn.cljs$core$IFn$_invoke$arity$3(G__26514,G__26515,G__26516) : self__.afn.call(null,G__26514,G__26515,G__26516));
});
var G__26975__5 = (function (self__,a,b,c,d){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__26517 = a;
var G__26518 = b;
var G__26519 = c;
var G__26520 = d;
return (self__.afn.cljs$core$IFn$_invoke$arity$4 ? self__.afn.cljs$core$IFn$_invoke$arity$4(G__26517,G__26518,G__26519,G__26520) : self__.afn.call(null,G__26517,G__26518,G__26519,G__26520));
});
var G__26975__6 = (function (self__,a,b,c,d,e){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__26521 = a;
var G__26522 = b;
var G__26523 = c;
var G__26524 = d;
var G__26525 = e;
return (self__.afn.cljs$core$IFn$_invoke$arity$5 ? self__.afn.cljs$core$IFn$_invoke$arity$5(G__26521,G__26522,G__26523,G__26524,G__26525) : self__.afn.call(null,G__26521,G__26522,G__26523,G__26524,G__26525));
});
var G__26975__7 = (function (self__,a,b,c,d,e,f){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__26526 = a;
var G__26527 = b;
var G__26528 = c;
var G__26529 = d;
var G__26530 = e;
var G__26531 = f;
return (self__.afn.cljs$core$IFn$_invoke$arity$6 ? self__.afn.cljs$core$IFn$_invoke$arity$6(G__26526,G__26527,G__26528,G__26529,G__26530,G__26531) : self__.afn.call(null,G__26526,G__26527,G__26528,G__26529,G__26530,G__26531));
});
var G__26975__8 = (function (self__,a,b,c,d,e,f,g){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__26532 = a;
var G__26533 = b;
var G__26534 = c;
var G__26535 = d;
var G__26536 = e;
var G__26537 = f;
var G__26538 = g;
return (self__.afn.cljs$core$IFn$_invoke$arity$7 ? self__.afn.cljs$core$IFn$_invoke$arity$7(G__26532,G__26533,G__26534,G__26535,G__26536,G__26537,G__26538) : self__.afn.call(null,G__26532,G__26533,G__26534,G__26535,G__26536,G__26537,G__26538));
});
var G__26975__9 = (function (self__,a,b,c,d,e,f,g,h){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__26539 = a;
var G__26540 = b;
var G__26541 = c;
var G__26542 = d;
var G__26543 = e;
var G__26544 = f;
var G__26545 = g;
var G__26546 = h;
return (self__.afn.cljs$core$IFn$_invoke$arity$8 ? self__.afn.cljs$core$IFn$_invoke$arity$8(G__26539,G__26540,G__26541,G__26542,G__26543,G__26544,G__26545,G__26546) : self__.afn.call(null,G__26539,G__26540,G__26541,G__26542,G__26543,G__26544,G__26545,G__26546));
});
var G__26975__10 = (function (self__,a,b,c,d,e,f,g,h,i){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__26547 = a;
var G__26548 = b;
var G__26549 = c;
var G__26550 = d;
var G__26551 = e;
var G__26552 = f;
var G__26553 = g;
var G__26554 = h;
var G__26555 = i;
return (self__.afn.cljs$core$IFn$_invoke$arity$9 ? self__.afn.cljs$core$IFn$_invoke$arity$9(G__26547,G__26548,G__26549,G__26550,G__26551,G__26552,G__26553,G__26554,G__26555) : self__.afn.call(null,G__26547,G__26548,G__26549,G__26550,G__26551,G__26552,G__26553,G__26554,G__26555));
});
var G__26975__11 = (function (self__,a,b,c,d,e,f,g,h,i,j){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__26556 = a;
var G__26557 = b;
var G__26558 = c;
var G__26559 = d;
var G__26560 = e;
var G__26561 = f;
var G__26562 = g;
var G__26563 = h;
var G__26564 = i;
var G__26565 = j;
return (self__.afn.cljs$core$IFn$_invoke$arity$10 ? self__.afn.cljs$core$IFn$_invoke$arity$10(G__26556,G__26557,G__26558,G__26559,G__26560,G__26561,G__26562,G__26563,G__26564,G__26565) : self__.afn.call(null,G__26556,G__26557,G__26558,G__26559,G__26560,G__26561,G__26562,G__26563,G__26564,G__26565));
});
var G__26975__12 = (function (self__,a,b,c,d,e,f,g,h,i,j,k){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__26566 = a;
var G__26567 = b;
var G__26568 = c;
var G__26569 = d;
var G__26570 = e;
var G__26571 = f;
var G__26572 = g;
var G__26573 = h;
var G__26574 = i;
var G__26575 = j;
var G__26576 = k;
return (self__.afn.cljs$core$IFn$_invoke$arity$11 ? self__.afn.cljs$core$IFn$_invoke$arity$11(G__26566,G__26567,G__26568,G__26569,G__26570,G__26571,G__26572,G__26573,G__26574,G__26575,G__26576) : self__.afn.call(null,G__26566,G__26567,G__26568,G__26569,G__26570,G__26571,G__26572,G__26573,G__26574,G__26575,G__26576));
});
var G__26975__13 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__26577 = a;
var G__26578 = b;
var G__26579 = c;
var G__26580 = d;
var G__26581 = e;
var G__26582 = f;
var G__26583 = g;
var G__26584 = h;
var G__26585 = i;
var G__26586 = j;
var G__26587 = k;
var G__26588 = l;
return (self__.afn.cljs$core$IFn$_invoke$arity$12 ? self__.afn.cljs$core$IFn$_invoke$arity$12(G__26577,G__26578,G__26579,G__26580,G__26581,G__26582,G__26583,G__26584,G__26585,G__26586,G__26587,G__26588) : self__.afn.call(null,G__26577,G__26578,G__26579,G__26580,G__26581,G__26582,G__26583,G__26584,G__26585,G__26586,G__26587,G__26588));
});
var G__26975__14 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__26589 = a;
var G__26590 = b;
var G__26591 = c;
var G__26592 = d;
var G__26593 = e;
var G__26594 = f;
var G__26595 = g;
var G__26596 = h;
var G__26597 = i;
var G__26598 = j;
var G__26599 = k;
var G__26600 = l;
var G__26601 = m;
return (self__.afn.cljs$core$IFn$_invoke$arity$13 ? self__.afn.cljs$core$IFn$_invoke$arity$13(G__26589,G__26590,G__26591,G__26592,G__26593,G__26594,G__26595,G__26596,G__26597,G__26598,G__26599,G__26600,G__26601) : self__.afn.call(null,G__26589,G__26590,G__26591,G__26592,G__26593,G__26594,G__26595,G__26596,G__26597,G__26598,G__26599,G__26600,G__26601));
});
var G__26975__15 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__26602 = a;
var G__26603 = b;
var G__26604 = c;
var G__26605 = d;
var G__26606 = e;
var G__26607 = f;
var G__26608 = g;
var G__26609 = h;
var G__26610 = i;
var G__26611 = j;
var G__26612 = k;
var G__26613 = l;
var G__26614 = m;
var G__26615 = n;
return (self__.afn.cljs$core$IFn$_invoke$arity$14 ? self__.afn.cljs$core$IFn$_invoke$arity$14(G__26602,G__26603,G__26604,G__26605,G__26606,G__26607,G__26608,G__26609,G__26610,G__26611,G__26612,G__26613,G__26614,G__26615) : self__.afn.call(null,G__26602,G__26603,G__26604,G__26605,G__26606,G__26607,G__26608,G__26609,G__26610,G__26611,G__26612,G__26613,G__26614,G__26615));
});
var G__26975__16 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__26616 = a;
var G__26617 = b;
var G__26618 = c;
var G__26619 = d;
var G__26620 = e;
var G__26621 = f;
var G__26622 = g;
var G__26623 = h;
var G__26624 = i;
var G__26625 = j;
var G__26626 = k;
var G__26627 = l;
var G__26628 = m;
var G__26629 = n;
var G__26630 = o;
return (self__.afn.cljs$core$IFn$_invoke$arity$15 ? self__.afn.cljs$core$IFn$_invoke$arity$15(G__26616,G__26617,G__26618,G__26619,G__26620,G__26621,G__26622,G__26623,G__26624,G__26625,G__26626,G__26627,G__26628,G__26629,G__26630) : self__.afn.call(null,G__26616,G__26617,G__26618,G__26619,G__26620,G__26621,G__26622,G__26623,G__26624,G__26625,G__26626,G__26627,G__26628,G__26629,G__26630));
});
var G__26975__17 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__26631 = a;
var G__26632 = b;
var G__26633 = c;
var G__26634 = d;
var G__26635 = e;
var G__26636 = f;
var G__26637 = g;
var G__26638 = h;
var G__26639 = i;
var G__26640 = j;
var G__26641 = k;
var G__26642 = l;
var G__26643 = m;
var G__26644 = n;
var G__26645 = o;
var G__26646 = p;
return (self__.afn.cljs$core$IFn$_invoke$arity$16 ? self__.afn.cljs$core$IFn$_invoke$arity$16(G__26631,G__26632,G__26633,G__26634,G__26635,G__26636,G__26637,G__26638,G__26639,G__26640,G__26641,G__26642,G__26643,G__26644,G__26645,G__26646) : self__.afn.call(null,G__26631,G__26632,G__26633,G__26634,G__26635,G__26636,G__26637,G__26638,G__26639,G__26640,G__26641,G__26642,G__26643,G__26644,G__26645,G__26646));
});
var G__26975__18 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__26647 = a;
var G__26648 = b;
var G__26649 = c;
var G__26650 = d;
var G__26651 = e;
var G__26652 = f;
var G__26653 = g;
var G__26654 = h;
var G__26655 = i;
var G__26656 = j;
var G__26657 = k;
var G__26658 = l;
var G__26659 = m;
var G__26660 = n;
var G__26661 = o;
var G__26662 = p;
var G__26663 = q;
return (self__.afn.cljs$core$IFn$_invoke$arity$17 ? self__.afn.cljs$core$IFn$_invoke$arity$17(G__26647,G__26648,G__26649,G__26650,G__26651,G__26652,G__26653,G__26654,G__26655,G__26656,G__26657,G__26658,G__26659,G__26660,G__26661,G__26662,G__26663) : self__.afn.call(null,G__26647,G__26648,G__26649,G__26650,G__26651,G__26652,G__26653,G__26654,G__26655,G__26656,G__26657,G__26658,G__26659,G__26660,G__26661,G__26662,G__26663));
});
var G__26975__19 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__26664 = a;
var G__26665 = b;
var G__26666 = c;
var G__26667 = d;
var G__26668 = e;
var G__26669 = f;
var G__26670 = g;
var G__26671 = h;
var G__26672 = i;
var G__26673 = j;
var G__26674 = k;
var G__26675 = l;
var G__26676 = m;
var G__26677 = n;
var G__26678 = o;
var G__26679 = p;
var G__26680 = q;
var G__26681 = r;
return (self__.afn.cljs$core$IFn$_invoke$arity$18 ? self__.afn.cljs$core$IFn$_invoke$arity$18(G__26664,G__26665,G__26666,G__26667,G__26668,G__26669,G__26670,G__26671,G__26672,G__26673,G__26674,G__26675,G__26676,G__26677,G__26678,G__26679,G__26680,G__26681) : self__.afn.call(null,G__26664,G__26665,G__26666,G__26667,G__26668,G__26669,G__26670,G__26671,G__26672,G__26673,G__26674,G__26675,G__26676,G__26677,G__26678,G__26679,G__26680,G__26681));
});
var G__26975__20 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__26682 = a;
var G__26683 = b;
var G__26684 = c;
var G__26685 = d;
var G__26686 = e;
var G__26687 = f;
var G__26688 = g;
var G__26689 = h;
var G__26690 = i;
var G__26691 = j;
var G__26692 = k;
var G__26693 = l;
var G__26694 = m;
var G__26695 = n;
var G__26696 = o;
var G__26697 = p;
var G__26698 = q;
var G__26699 = r;
var G__26700 = s;
return (self__.afn.cljs$core$IFn$_invoke$arity$19 ? self__.afn.cljs$core$IFn$_invoke$arity$19(G__26682,G__26683,G__26684,G__26685,G__26686,G__26687,G__26688,G__26689,G__26690,G__26691,G__26692,G__26693,G__26694,G__26695,G__26696,G__26697,G__26698,G__26699,G__26700) : self__.afn.call(null,G__26682,G__26683,G__26684,G__26685,G__26686,G__26687,G__26688,G__26689,G__26690,G__26691,G__26692,G__26693,G__26694,G__26695,G__26696,G__26697,G__26698,G__26699,G__26700));
});
var G__26975__21 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__26701 = a;
var G__26702 = b;
var G__26703 = c;
var G__26704 = d;
var G__26705 = e;
var G__26706 = f;
var G__26707 = g;
var G__26708 = h;
var G__26709 = i;
var G__26710 = j;
var G__26711 = k;
var G__26712 = l;
var G__26713 = m;
var G__26714 = n;
var G__26715 = o;
var G__26716 = p;
var G__26717 = q;
var G__26718 = r;
var G__26719 = s;
var G__26720 = t;
return (self__.afn.cljs$core$IFn$_invoke$arity$20 ? self__.afn.cljs$core$IFn$_invoke$arity$20(G__26701,G__26702,G__26703,G__26704,G__26705,G__26706,G__26707,G__26708,G__26709,G__26710,G__26711,G__26712,G__26713,G__26714,G__26715,G__26716,G__26717,G__26718,G__26719,G__26720) : self__.afn.call(null,G__26701,G__26702,G__26703,G__26704,G__26705,G__26706,G__26707,G__26708,G__26709,G__26710,G__26711,G__26712,G__26713,G__26714,G__26715,G__26716,G__26717,G__26718,G__26719,G__26720));
});
var G__26975__22 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__26721 = self__.afn;
var G__26722 = a;
var G__26723 = b;
var G__26724 = c;
var G__26725 = d;
var G__26726 = e;
var G__26727 = f;
var G__26728 = g;
var G__26729 = h;
var G__26730 = i;
var G__26731 = j;
var G__26732 = k;
var G__26733 = l;
var G__26734 = m;
var G__26735 = n;
var G__26736 = o;
var G__26737 = p;
var G__26738 = q;
var G__26739 = r;
var G__26740 = s;
var G__26741 = t;
var G__26742 = rest;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$22 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$22(G__26721,G__26722,G__26723,G__26724,G__26725,G__26726,G__26727,G__26728,G__26729,G__26730,G__26731,G__26732,G__26733,G__26734,G__26735,G__26736,G__26737,G__26738,G__26739,G__26740,G__26741,G__26742) : cljs.core.apply.call(null,G__26721,G__26722,G__26723,G__26724,G__26725,G__26726,G__26727,G__26728,G__26729,G__26730,G__26731,G__26732,G__26733,G__26734,G__26735,G__26736,G__26737,G__26738,G__26739,G__26740,G__26741,G__26742));
});
G__26975 = function(self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
switch(arguments.length){
case 1:
return G__26975__1.call(this,self__);
case 2:
return G__26975__2.call(this,self__,a);
case 3:
return G__26975__3.call(this,self__,a,b);
case 4:
return G__26975__4.call(this,self__,a,b,c);
case 5:
return G__26975__5.call(this,self__,a,b,c,d);
case 6:
return G__26975__6.call(this,self__,a,b,c,d,e);
case 7:
return G__26975__7.call(this,self__,a,b,c,d,e,f);
case 8:
return G__26975__8.call(this,self__,a,b,c,d,e,f,g);
case 9:
return G__26975__9.call(this,self__,a,b,c,d,e,f,g,h);
case 10:
return G__26975__10.call(this,self__,a,b,c,d,e,f,g,h,i);
case 11:
return G__26975__11.call(this,self__,a,b,c,d,e,f,g,h,i,j);
case 12:
return G__26975__12.call(this,self__,a,b,c,d,e,f,g,h,i,j,k);
case 13:
return G__26975__13.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l);
case 14:
return G__26975__14.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m);
case 15:
return G__26975__15.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
case 16:
return G__26975__16.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
case 17:
return G__26975__17.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
case 18:
return G__26975__18.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
case 19:
return G__26975__19.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
case 20:
return G__26975__20.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
case 21:
return G__26975__21.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
case 22:
return G__26975__22.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__26975.cljs$core$IFn$_invoke$arity$1 = G__26975__1;
G__26975.cljs$core$IFn$_invoke$arity$2 = G__26975__2;
G__26975.cljs$core$IFn$_invoke$arity$3 = G__26975__3;
G__26975.cljs$core$IFn$_invoke$arity$4 = G__26975__4;
G__26975.cljs$core$IFn$_invoke$arity$5 = G__26975__5;
G__26975.cljs$core$IFn$_invoke$arity$6 = G__26975__6;
G__26975.cljs$core$IFn$_invoke$arity$7 = G__26975__7;
G__26975.cljs$core$IFn$_invoke$arity$8 = G__26975__8;
G__26975.cljs$core$IFn$_invoke$arity$9 = G__26975__9;
G__26975.cljs$core$IFn$_invoke$arity$10 = G__26975__10;
G__26975.cljs$core$IFn$_invoke$arity$11 = G__26975__11;
G__26975.cljs$core$IFn$_invoke$arity$12 = G__26975__12;
G__26975.cljs$core$IFn$_invoke$arity$13 = G__26975__13;
G__26975.cljs$core$IFn$_invoke$arity$14 = G__26975__14;
G__26975.cljs$core$IFn$_invoke$arity$15 = G__26975__15;
G__26975.cljs$core$IFn$_invoke$arity$16 = G__26975__16;
G__26975.cljs$core$IFn$_invoke$arity$17 = G__26975__17;
G__26975.cljs$core$IFn$_invoke$arity$18 = G__26975__18;
G__26975.cljs$core$IFn$_invoke$arity$19 = G__26975__19;
G__26975.cljs$core$IFn$_invoke$arity$20 = G__26975__20;
G__26975.cljs$core$IFn$_invoke$arity$21 = G__26975__21;
G__26975.cljs$core$IFn$_invoke$arity$22 = G__26975__22;
return G__26975;
})()
;

cljs.core.MetaFn.prototype.apply = (function (self__,args26510){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args26510)));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$0 = (function (){
var self__ = this;
var _ = this;
return (self__.afn.cljs$core$IFn$_invoke$arity$0 ? self__.afn.cljs$core$IFn$_invoke$arity$0() : self__.afn.call(null));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$1 = (function (a){
var self__ = this;
var _ = this;
var G__26743 = a;
return (self__.afn.cljs$core$IFn$_invoke$arity$1 ? self__.afn.cljs$core$IFn$_invoke$arity$1(G__26743) : self__.afn.call(null,G__26743));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$2 = (function (a,b){
var self__ = this;
var _ = this;
var G__26744 = a;
var G__26745 = b;
return (self__.afn.cljs$core$IFn$_invoke$arity$2 ? self__.afn.cljs$core$IFn$_invoke$arity$2(G__26744,G__26745) : self__.afn.call(null,G__26744,G__26745));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$3 = (function (a,b,c){
var self__ = this;
var _ = this;
var G__26746 = a;
var G__26747 = b;
var G__26748 = c;
return (self__.afn.cljs$core$IFn$_invoke$arity$3 ? self__.afn.cljs$core$IFn$_invoke$arity$3(G__26746,G__26747,G__26748) : self__.afn.call(null,G__26746,G__26747,G__26748));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$4 = (function (a,b,c,d){
var self__ = this;
var _ = this;
var G__26749 = a;
var G__26750 = b;
var G__26751 = c;
var G__26752 = d;
return (self__.afn.cljs$core$IFn$_invoke$arity$4 ? self__.afn.cljs$core$IFn$_invoke$arity$4(G__26749,G__26750,G__26751,G__26752) : self__.afn.call(null,G__26749,G__26750,G__26751,G__26752));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$5 = (function (a,b,c,d,e){
var self__ = this;
var _ = this;
var G__26753 = a;
var G__26754 = b;
var G__26755 = c;
var G__26756 = d;
var G__26757 = e;
return (self__.afn.cljs$core$IFn$_invoke$arity$5 ? self__.afn.cljs$core$IFn$_invoke$arity$5(G__26753,G__26754,G__26755,G__26756,G__26757) : self__.afn.call(null,G__26753,G__26754,G__26755,G__26756,G__26757));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$6 = (function (a,b,c,d,e,f){
var self__ = this;
var _ = this;
var G__26758 = a;
var G__26759 = b;
var G__26760 = c;
var G__26761 = d;
var G__26762 = e;
var G__26763 = f;
return (self__.afn.cljs$core$IFn$_invoke$arity$6 ? self__.afn.cljs$core$IFn$_invoke$arity$6(G__26758,G__26759,G__26760,G__26761,G__26762,G__26763) : self__.afn.call(null,G__26758,G__26759,G__26760,G__26761,G__26762,G__26763));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$7 = (function (a,b,c,d,e,f,g){
var self__ = this;
var _ = this;
var G__26764 = a;
var G__26765 = b;
var G__26766 = c;
var G__26767 = d;
var G__26768 = e;
var G__26769 = f;
var G__26770 = g;
return (self__.afn.cljs$core$IFn$_invoke$arity$7 ? self__.afn.cljs$core$IFn$_invoke$arity$7(G__26764,G__26765,G__26766,G__26767,G__26768,G__26769,G__26770) : self__.afn.call(null,G__26764,G__26765,G__26766,G__26767,G__26768,G__26769,G__26770));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$8 = (function (a,b,c,d,e,f,g,h){
var self__ = this;
var _ = this;
var G__26771 = a;
var G__26772 = b;
var G__26773 = c;
var G__26774 = d;
var G__26775 = e;
var G__26776 = f;
var G__26777 = g;
var G__26778 = h;
return (self__.afn.cljs$core$IFn$_invoke$arity$8 ? self__.afn.cljs$core$IFn$_invoke$arity$8(G__26771,G__26772,G__26773,G__26774,G__26775,G__26776,G__26777,G__26778) : self__.afn.call(null,G__26771,G__26772,G__26773,G__26774,G__26775,G__26776,G__26777,G__26778));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$9 = (function (a,b,c,d,e,f,g,h,i){
var self__ = this;
var _ = this;
var G__26779 = a;
var G__26780 = b;
var G__26781 = c;
var G__26782 = d;
var G__26783 = e;
var G__26784 = f;
var G__26785 = g;
var G__26786 = h;
var G__26787 = i;
return (self__.afn.cljs$core$IFn$_invoke$arity$9 ? self__.afn.cljs$core$IFn$_invoke$arity$9(G__26779,G__26780,G__26781,G__26782,G__26783,G__26784,G__26785,G__26786,G__26787) : self__.afn.call(null,G__26779,G__26780,G__26781,G__26782,G__26783,G__26784,G__26785,G__26786,G__26787));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$10 = (function (a,b,c,d,e,f,g,h,i,j){
var self__ = this;
var _ = this;
var G__26788 = a;
var G__26789 = b;
var G__26790 = c;
var G__26791 = d;
var G__26792 = e;
var G__26793 = f;
var G__26794 = g;
var G__26795 = h;
var G__26796 = i;
var G__26797 = j;
return (self__.afn.cljs$core$IFn$_invoke$arity$10 ? self__.afn.cljs$core$IFn$_invoke$arity$10(G__26788,G__26789,G__26790,G__26791,G__26792,G__26793,G__26794,G__26795,G__26796,G__26797) : self__.afn.call(null,G__26788,G__26789,G__26790,G__26791,G__26792,G__26793,G__26794,G__26795,G__26796,G__26797));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$11 = (function (a,b,c,d,e,f,g,h,i,j,k){
var self__ = this;
var _ = this;
var G__26798 = a;
var G__26799 = b;
var G__26800 = c;
var G__26801 = d;
var G__26802 = e;
var G__26803 = f;
var G__26804 = g;
var G__26805 = h;
var G__26806 = i;
var G__26807 = j;
var G__26808 = k;
return (self__.afn.cljs$core$IFn$_invoke$arity$11 ? self__.afn.cljs$core$IFn$_invoke$arity$11(G__26798,G__26799,G__26800,G__26801,G__26802,G__26803,G__26804,G__26805,G__26806,G__26807,G__26808) : self__.afn.call(null,G__26798,G__26799,G__26800,G__26801,G__26802,G__26803,G__26804,G__26805,G__26806,G__26807,G__26808));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$12 = (function (a,b,c,d,e,f,g,h,i,j,k,l){
var self__ = this;
var _ = this;
var G__26809 = a;
var G__26810 = b;
var G__26811 = c;
var G__26812 = d;
var G__26813 = e;
var G__26814 = f;
var G__26815 = g;
var G__26816 = h;
var G__26817 = i;
var G__26818 = j;
var G__26819 = k;
var G__26820 = l;
return (self__.afn.cljs$core$IFn$_invoke$arity$12 ? self__.afn.cljs$core$IFn$_invoke$arity$12(G__26809,G__26810,G__26811,G__26812,G__26813,G__26814,G__26815,G__26816,G__26817,G__26818,G__26819,G__26820) : self__.afn.call(null,G__26809,G__26810,G__26811,G__26812,G__26813,G__26814,G__26815,G__26816,G__26817,G__26818,G__26819,G__26820));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$13 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m){
var self__ = this;
var _ = this;
var G__26821 = a;
var G__26822 = b;
var G__26823 = c;
var G__26824 = d;
var G__26825 = e;
var G__26826 = f;
var G__26827 = g;
var G__26828 = h;
var G__26829 = i;
var G__26830 = j;
var G__26831 = k;
var G__26832 = l;
var G__26833 = m;
return (self__.afn.cljs$core$IFn$_invoke$arity$13 ? self__.afn.cljs$core$IFn$_invoke$arity$13(G__26821,G__26822,G__26823,G__26824,G__26825,G__26826,G__26827,G__26828,G__26829,G__26830,G__26831,G__26832,G__26833) : self__.afn.call(null,G__26821,G__26822,G__26823,G__26824,G__26825,G__26826,G__26827,G__26828,G__26829,G__26830,G__26831,G__26832,G__26833));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$14 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n){
var self__ = this;
var _ = this;
var G__26834 = a;
var G__26835 = b;
var G__26836 = c;
var G__26837 = d;
var G__26838 = e;
var G__26839 = f;
var G__26840 = g;
var G__26841 = h;
var G__26842 = i;
var G__26843 = j;
var G__26844 = k;
var G__26845 = l;
var G__26846 = m;
var G__26847 = n;
return (self__.afn.cljs$core$IFn$_invoke$arity$14 ? self__.afn.cljs$core$IFn$_invoke$arity$14(G__26834,G__26835,G__26836,G__26837,G__26838,G__26839,G__26840,G__26841,G__26842,G__26843,G__26844,G__26845,G__26846,G__26847) : self__.afn.call(null,G__26834,G__26835,G__26836,G__26837,G__26838,G__26839,G__26840,G__26841,G__26842,G__26843,G__26844,G__26845,G__26846,G__26847));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$15 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
var self__ = this;
var _ = this;
var G__26848 = a;
var G__26849 = b;
var G__26850 = c;
var G__26851 = d;
var G__26852 = e;
var G__26853 = f;
var G__26854 = g;
var G__26855 = h;
var G__26856 = i;
var G__26857 = j;
var G__26858 = k;
var G__26859 = l;
var G__26860 = m;
var G__26861 = n;
var G__26862 = o;
return (self__.afn.cljs$core$IFn$_invoke$arity$15 ? self__.afn.cljs$core$IFn$_invoke$arity$15(G__26848,G__26849,G__26850,G__26851,G__26852,G__26853,G__26854,G__26855,G__26856,G__26857,G__26858,G__26859,G__26860,G__26861,G__26862) : self__.afn.call(null,G__26848,G__26849,G__26850,G__26851,G__26852,G__26853,G__26854,G__26855,G__26856,G__26857,G__26858,G__26859,G__26860,G__26861,G__26862));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$16 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
var self__ = this;
var _ = this;
var G__26863 = a;
var G__26864 = b;
var G__26865 = c;
var G__26866 = d;
var G__26867 = e;
var G__26868 = f;
var G__26869 = g;
var G__26870 = h;
var G__26871 = i;
var G__26872 = j;
var G__26873 = k;
var G__26874 = l;
var G__26875 = m;
var G__26876 = n;
var G__26877 = o;
var G__26878 = p;
return (self__.afn.cljs$core$IFn$_invoke$arity$16 ? self__.afn.cljs$core$IFn$_invoke$arity$16(G__26863,G__26864,G__26865,G__26866,G__26867,G__26868,G__26869,G__26870,G__26871,G__26872,G__26873,G__26874,G__26875,G__26876,G__26877,G__26878) : self__.afn.call(null,G__26863,G__26864,G__26865,G__26866,G__26867,G__26868,G__26869,G__26870,G__26871,G__26872,G__26873,G__26874,G__26875,G__26876,G__26877,G__26878));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$17 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
var self__ = this;
var _ = this;
var G__26879 = a;
var G__26880 = b;
var G__26881 = c;
var G__26882 = d;
var G__26883 = e;
var G__26884 = f;
var G__26885 = g;
var G__26886 = h;
var G__26887 = i;
var G__26888 = j;
var G__26889 = k;
var G__26890 = l;
var G__26891 = m;
var G__26892 = n;
var G__26893 = o;
var G__26894 = p;
var G__26895 = q;
return (self__.afn.cljs$core$IFn$_invoke$arity$17 ? self__.afn.cljs$core$IFn$_invoke$arity$17(G__26879,G__26880,G__26881,G__26882,G__26883,G__26884,G__26885,G__26886,G__26887,G__26888,G__26889,G__26890,G__26891,G__26892,G__26893,G__26894,G__26895) : self__.afn.call(null,G__26879,G__26880,G__26881,G__26882,G__26883,G__26884,G__26885,G__26886,G__26887,G__26888,G__26889,G__26890,G__26891,G__26892,G__26893,G__26894,G__26895));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$18 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
var self__ = this;
var _ = this;
var G__26896 = a;
var G__26897 = b;
var G__26898 = c;
var G__26899 = d;
var G__26900 = e;
var G__26901 = f;
var G__26902 = g;
var G__26903 = h;
var G__26904 = i;
var G__26905 = j;
var G__26906 = k;
var G__26907 = l;
var G__26908 = m;
var G__26909 = n;
var G__26910 = o;
var G__26911 = p;
var G__26912 = q;
var G__26913 = r;
return (self__.afn.cljs$core$IFn$_invoke$arity$18 ? self__.afn.cljs$core$IFn$_invoke$arity$18(G__26896,G__26897,G__26898,G__26899,G__26900,G__26901,G__26902,G__26903,G__26904,G__26905,G__26906,G__26907,G__26908,G__26909,G__26910,G__26911,G__26912,G__26913) : self__.afn.call(null,G__26896,G__26897,G__26898,G__26899,G__26900,G__26901,G__26902,G__26903,G__26904,G__26905,G__26906,G__26907,G__26908,G__26909,G__26910,G__26911,G__26912,G__26913));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$19 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
var self__ = this;
var _ = this;
var G__26914 = a;
var G__26915 = b;
var G__26916 = c;
var G__26917 = d;
var G__26918 = e;
var G__26919 = f;
var G__26920 = g;
var G__26921 = h;
var G__26922 = i;
var G__26923 = j;
var G__26924 = k;
var G__26925 = l;
var G__26926 = m;
var G__26927 = n;
var G__26928 = o;
var G__26929 = p;
var G__26930 = q;
var G__26931 = r;
var G__26932 = s;
return (self__.afn.cljs$core$IFn$_invoke$arity$19 ? self__.afn.cljs$core$IFn$_invoke$arity$19(G__26914,G__26915,G__26916,G__26917,G__26918,G__26919,G__26920,G__26921,G__26922,G__26923,G__26924,G__26925,G__26926,G__26927,G__26928,G__26929,G__26930,G__26931,G__26932) : self__.afn.call(null,G__26914,G__26915,G__26916,G__26917,G__26918,G__26919,G__26920,G__26921,G__26922,G__26923,G__26924,G__26925,G__26926,G__26927,G__26928,G__26929,G__26930,G__26931,G__26932));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$20 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
var self__ = this;
var _ = this;
var G__26933 = a;
var G__26934 = b;
var G__26935 = c;
var G__26936 = d;
var G__26937 = e;
var G__26938 = f;
var G__26939 = g;
var G__26940 = h;
var G__26941 = i;
var G__26942 = j;
var G__26943 = k;
var G__26944 = l;
var G__26945 = m;
var G__26946 = n;
var G__26947 = o;
var G__26948 = p;
var G__26949 = q;
var G__26950 = r;
var G__26951 = s;
var G__26952 = t;
return (self__.afn.cljs$core$IFn$_invoke$arity$20 ? self__.afn.cljs$core$IFn$_invoke$arity$20(G__26933,G__26934,G__26935,G__26936,G__26937,G__26938,G__26939,G__26940,G__26941,G__26942,G__26943,G__26944,G__26945,G__26946,G__26947,G__26948,G__26949,G__26950,G__26951,G__26952) : self__.afn.call(null,G__26933,G__26934,G__26935,G__26936,G__26937,G__26938,G__26939,G__26940,G__26941,G__26942,G__26943,G__26944,G__26945,G__26946,G__26947,G__26948,G__26949,G__26950,G__26951,G__26952));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$21 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
var self__ = this;
var _ = this;
var G__26953 = self__.afn;
var G__26954 = a;
var G__26955 = b;
var G__26956 = c;
var G__26957 = d;
var G__26958 = e;
var G__26959 = f;
var G__26960 = g;
var G__26961 = h;
var G__26962 = i;
var G__26963 = j;
var G__26964 = k;
var G__26965 = l;
var G__26966 = m;
var G__26967 = n;
var G__26968 = o;
var G__26969 = p;
var G__26970 = q;
var G__26971 = r;
var G__26972 = s;
var G__26973 = t;
var G__26974 = rest;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$22 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$22(G__26953,G__26954,G__26955,G__26956,G__26957,G__26958,G__26959,G__26960,G__26961,G__26962,G__26963,G__26964,G__26965,G__26966,G__26967,G__26968,G__26969,G__26970,G__26971,G__26972,G__26973,G__26974) : cljs.core.apply.call(null,G__26953,G__26954,G__26955,G__26956,G__26957,G__26958,G__26959,G__26960,G__26961,G__26962,G__26963,G__26964,G__26965,G__26966,G__26967,G__26968,G__26969,G__26970,G__26971,G__26972,G__26973,G__26974));
});

cljs.core.MetaFn.prototype.cljs$core$Fn$ = true;

cljs.core.MetaFn.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (_,new_meta){
var self__ = this;
var ___$1 = this;
return (new cljs.core.MetaFn(self__.afn,new_meta));
});

cljs.core.MetaFn.prototype.cljs$core$IMeta$_meta$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.meta;
});

cljs.core.MetaFn.cljs$lang$type = true;

cljs.core.MetaFn.cljs$lang$ctorStr = "cljs.core/MetaFn";

cljs.core.MetaFn.cljs$lang$ctorPrWriter = (function (this__24859__auto__,writer__24860__auto__,opt__24861__auto__){
return cljs.core._write(writer__24860__auto__,"cljs.core/MetaFn");
});

cljs.core.__GT_MetaFn = (function __GT_MetaFn(afn,meta){
return (new cljs.core.MetaFn(afn,meta));
});

/**
* Returns an object of the same type and value as obj, with
* map m as its metadata.
*/
cljs.core.with_meta = (function with_meta(o,meta){
if((cljs.core.fn_QMARK_(o)) && (!((function (){var G__26979 = o;
if(G__26979){
var bit__24953__auto__ = (G__26979.cljs$lang$protocol_mask$partition0$ & (262144));
if((bit__24953__auto__) || (G__26979.cljs$core$IWithMeta$)){
return true;
} else {
if((!G__26979.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IWithMeta,G__26979);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IWithMeta,G__26979);
}
})()))){
return (new cljs.core.MetaFn(o,meta));
} else {
if((o == null)){
return null;
} else {
return cljs.core._with_meta(o,meta);
}
}
});
/**
* Returns the metadata of obj, returns nil if there is no metadata.
*/
cljs.core.meta = (function meta(o){
if((function (){var and__24260__auto__ = !((o == null));
if(and__24260__auto__){
var G__26983 = o;
if(G__26983){
var bit__24953__auto__ = (G__26983.cljs$lang$protocol_mask$partition0$ & (131072));
if((bit__24953__auto__) || (G__26983.cljs$core$IMeta$)){
return true;
} else {
if((!G__26983.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IMeta,G__26983);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IMeta,G__26983);
}
} else {
return and__24260__auto__;
}
})()){
return cljs.core._meta(o);
} else {
return null;
}
});
/**
* For a list or queue, same as first, for a vector, same as, but much
* more efficient than, last. If the collection is empty, returns nil.
*/
cljs.core.peek = (function peek(coll){
if((coll == null)){
return null;
} else {
return cljs.core._peek(coll);
}
});
/**
* For a list or queue, returns a new list/queue without the first
* item, for a vector, returns a new vector without the last item.
* Note - not the same as next/butlast.
*/
cljs.core.pop = (function pop(coll){
if((coll == null)){
return null;
} else {
return cljs.core._pop(coll);
}
});
/**
* disj[oin]. Returns a new set of the same (hashed/sorted) type, that
* does not contain key(s).
* @param {...*} var_args
*/
cljs.core.disj = (function() {
var disj = null;
var disj__1 = (function (coll){
return coll;
});
var disj__2 = (function (coll,k){
if((coll == null)){
return null;
} else {
return cljs.core._disjoin(coll,k);
}
});
var disj__3 = (function() { 
var G__26986__delegate = function (coll,k,ks){
while(true){
if((coll == null)){
return null;
} else {
var ret = disj.cljs$core$IFn$_invoke$arity$2(coll,k);
if(cljs.core.truth_(ks)){
var G__26987 = ret;
var G__26988 = cljs.core.first(ks);
var G__26989 = cljs.core.next(ks);
coll = G__26987;
k = G__26988;
ks = G__26989;
continue;
} else {
return ret;
}
}
break;
}
};
var G__26986 = function (coll,k,var_args){
var ks = null;
if (arguments.length > 2) {
var G__26990__i = 0, G__26990__a = new Array(arguments.length -  2);
while (G__26990__i < G__26990__a.length) {G__26990__a[G__26990__i] = arguments[G__26990__i + 2]; ++G__26990__i;}
  ks = new cljs.core.IndexedSeq(G__26990__a,0);
} 
return G__26986__delegate.call(this,coll,k,ks);};
G__26986.cljs$lang$maxFixedArity = 2;
G__26986.cljs$lang$applyTo = (function (arglist__26991){
var coll = cljs.core.first(arglist__26991);
arglist__26991 = cljs.core.next(arglist__26991);
var k = cljs.core.first(arglist__26991);
var ks = cljs.core.rest(arglist__26991);
return G__26986__delegate(coll,k,ks);
});
G__26986.cljs$core$IFn$_invoke$arity$variadic = G__26986__delegate;
return G__26986;
})()
;
disj = function(coll,k,var_args){
var ks = var_args;
switch(arguments.length){
case 1:
return disj__1.call(this,coll);
case 2:
return disj__2.call(this,coll,k);
default:
var G__26992 = null;
if (arguments.length > 2) {
var G__26993__i = 0, G__26993__a = new Array(arguments.length -  2);
while (G__26993__i < G__26993__a.length) {G__26993__a[G__26993__i] = arguments[G__26993__i + 2]; ++G__26993__i;}
G__26992 = new cljs.core.IndexedSeq(G__26993__a,0);
}
return disj__3.cljs$core$IFn$_invoke$arity$variadic(coll,k, G__26992);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
disj.cljs$lang$maxFixedArity = 2;
disj.cljs$lang$applyTo = disj__3.cljs$lang$applyTo;
disj.cljs$core$IFn$_invoke$arity$1 = disj__1;
disj.cljs$core$IFn$_invoke$arity$2 = disj__2;
disj.cljs$core$IFn$_invoke$arity$variadic = disj__3.cljs$core$IFn$_invoke$arity$variadic;
return disj;
})()
;
/**
* Returns true if coll has no items - same as (not (seq coll)).
* Please use the idiom (seq x) rather than (not (empty? x))
*/
cljs.core.empty_QMARK_ = (function empty_QMARK_(coll){
return ((coll == null)) || (cljs.core.not(cljs.core.seq(coll)));
});
/**
* Returns true if x satisfies ICollection
*/
cljs.core.coll_QMARK_ = (function coll_QMARK_(x){
if((x == null)){
return false;
} else {
var G__26995 = x;
if(G__26995){
var bit__24953__auto__ = (G__26995.cljs$lang$protocol_mask$partition0$ & (8));
if((bit__24953__auto__) || (G__26995.cljs$core$ICollection$)){
return true;
} else {
if((!G__26995.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ICollection,G__26995);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ICollection,G__26995);
}
}
});
/**
* Returns true if x satisfies ISet
*/
cljs.core.set_QMARK_ = (function set_QMARK_(x){
if((x == null)){
return false;
} else {
var G__26997 = x;
if(G__26997){
var bit__24953__auto__ = (G__26997.cljs$lang$protocol_mask$partition0$ & (4096));
if((bit__24953__auto__) || (G__26997.cljs$core$ISet$)){
return true;
} else {
if((!G__26997.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISet,G__26997);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISet,G__26997);
}
}
});
/**
* Returns true if coll implements Associative
*/
cljs.core.associative_QMARK_ = (function associative_QMARK_(x){
var G__26999 = x;
if(G__26999){
var bit__24953__auto__ = (G__26999.cljs$lang$protocol_mask$partition0$ & (512));
if((bit__24953__auto__) || (G__26999.cljs$core$IAssociative$)){
return true;
} else {
if((!G__26999.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IAssociative,G__26999);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IAssociative,G__26999);
}
});
/**
* Returns true if coll satisfies ISequential
*/
cljs.core.sequential_QMARK_ = (function sequential_QMARK_(x){
var G__27001 = x;
if(G__27001){
var bit__24953__auto__ = (G__27001.cljs$lang$protocol_mask$partition0$ & (16777216));
if((bit__24953__auto__) || (G__27001.cljs$core$ISequential$)){
return true;
} else {
if((!G__27001.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISequential,G__27001);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISequential,G__27001);
}
});
/**
* Returns true if coll satisfies ISorted
*/
cljs.core.sorted_QMARK_ = (function sorted_QMARK_(x){
var G__27003 = x;
if(G__27003){
var bit__24953__auto__ = (G__27003.cljs$lang$protocol_mask$partition0$ & (268435456));
if((bit__24953__auto__) || (G__27003.cljs$core$ISorted$)){
return true;
} else {
if((!G__27003.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISorted,G__27003);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISorted,G__27003);
}
});
/**
* Returns true if coll satisfies IReduce
*/
cljs.core.reduceable_QMARK_ = (function reduceable_QMARK_(x){
var G__27005 = x;
if(G__27005){
var bit__24953__auto__ = (G__27005.cljs$lang$protocol_mask$partition0$ & (524288));
if((bit__24953__auto__) || (G__27005.cljs$core$IReduce$)){
return true;
} else {
if((!G__27005.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IReduce,G__27005);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IReduce,G__27005);
}
});
/**
* Return true if x satisfies IMap
*/
cljs.core.map_QMARK_ = (function map_QMARK_(x){
if((x == null)){
return false;
} else {
var G__27007 = x;
if(G__27007){
var bit__24953__auto__ = (G__27007.cljs$lang$protocol_mask$partition0$ & (1024));
if((bit__24953__auto__) || (G__27007.cljs$core$IMap$)){
return true;
} else {
if((!G__27007.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IMap,G__27007);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IMap,G__27007);
}
}
});
/**
* Return true if x satisfies IVector
*/
cljs.core.vector_QMARK_ = (function vector_QMARK_(x){
var G__27009 = x;
if(G__27009){
var bit__24953__auto__ = (G__27009.cljs$lang$protocol_mask$partition0$ & (16384));
if((bit__24953__auto__) || (G__27009.cljs$core$IVector$)){
return true;
} else {
if((!G__27009.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IVector,G__27009);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IVector,G__27009);
}
});

cljs.core.chunked_seq_QMARK_ = (function chunked_seq_QMARK_(x){
var G__27011 = x;
if(G__27011){
var bit__24946__auto__ = (G__27011.cljs$lang$protocol_mask$partition1$ & (512));
if((bit__24946__auto__) || (G__27011.cljs$core$IChunkedSeq$)){
return true;
} else {
return false;
}
} else {
return false;
}
});
/**
* @param {...*} var_args
*/
cljs.core.js_obj = (function() {
var js_obj = null;
var js_obj__0 = (function (){
var obj27017 = {};
return obj27017;
});
var js_obj__1 = (function() { 
var G__27020__delegate = function (keyvals){
var G__27018 = goog.object.create;
var G__27019 = keyvals;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$2 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$2(G__27018,G__27019) : cljs.core.apply.call(null,G__27018,G__27019));
};
var G__27020 = function (var_args){
var keyvals = null;
if (arguments.length > 0) {
var G__27021__i = 0, G__27021__a = new Array(arguments.length -  0);
while (G__27021__i < G__27021__a.length) {G__27021__a[G__27021__i] = arguments[G__27021__i + 0]; ++G__27021__i;}
  keyvals = new cljs.core.IndexedSeq(G__27021__a,0);
} 
return G__27020__delegate.call(this,keyvals);};
G__27020.cljs$lang$maxFixedArity = 0;
G__27020.cljs$lang$applyTo = (function (arglist__27022){
var keyvals = cljs.core.seq(arglist__27022);
return G__27020__delegate(keyvals);
});
G__27020.cljs$core$IFn$_invoke$arity$variadic = G__27020__delegate;
return G__27020;
})()
;
js_obj = function(var_args){
var keyvals = var_args;
switch(arguments.length){
case 0:
return js_obj__0.call(this);
default:
var G__27023 = null;
if (arguments.length > 0) {
var G__27024__i = 0, G__27024__a = new Array(arguments.length -  0);
while (G__27024__i < G__27024__a.length) {G__27024__a[G__27024__i] = arguments[G__27024__i + 0]; ++G__27024__i;}
G__27023 = new cljs.core.IndexedSeq(G__27024__a,0);
}
return js_obj__1.cljs$core$IFn$_invoke$arity$variadic(G__27023);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
js_obj.cljs$lang$maxFixedArity = 0;
js_obj.cljs$lang$applyTo = js_obj__1.cljs$lang$applyTo;
js_obj.cljs$core$IFn$_invoke$arity$0 = js_obj__0;
js_obj.cljs$core$IFn$_invoke$arity$variadic = js_obj__1.cljs$core$IFn$_invoke$arity$variadic;
return js_obj;
})()
;
cljs.core.js_keys = (function js_keys(obj){
var keys = [];
var G__27027_27029 = obj;
var G__27028_27030 = ((function (G__27027_27029,keys){
return (function (val,key,obj__$1){
return keys.push(key);
});})(G__27027_27029,keys))
;
goog.object.forEach(G__27027_27029,G__27028_27030);

return keys;
});
cljs.core.js_delete = (function js_delete(obj,key){
return delete obj[key];
});
cljs.core.array_copy = (function array_copy(from,i,to,j,len){
var i__$1 = i;
var j__$1 = j;
var len__$1 = len;
while(true){
if((len__$1 === (0))){
return to;
} else {
(to[j__$1] = (from[i__$1]));

var G__27031 = (i__$1 + (1));
var G__27032 = (j__$1 + (1));
var G__27033 = (len__$1 - (1));
i__$1 = G__27031;
j__$1 = G__27032;
len__$1 = G__27033;
continue;
}
break;
}
});
cljs.core.array_copy_downward = (function array_copy_downward(from,i,to,j,len){
var i__$1 = (i + (len - (1)));
var j__$1 = (j + (len - (1)));
var len__$1 = len;
while(true){
if((len__$1 === (0))){
return to;
} else {
(to[j__$1] = (from[i__$1]));

var G__27034 = (i__$1 - (1));
var G__27035 = (j__$1 - (1));
var G__27036 = (len__$1 - (1));
i__$1 = G__27034;
j__$1 = G__27035;
len__$1 = G__27036;
continue;
}
break;
}
});
cljs.core.lookup_sentinel = (function (){var obj27038 = {};
return obj27038;
})();
/**
* Returns true if x is the value false, false otherwise.
*/
cljs.core.false_QMARK_ = (function false_QMARK_(x){
return x === false;
});
/**
* Returns true if x is the value true, false otherwise.
*/
cljs.core.true_QMARK_ = (function true_QMARK_(x){
return x === true;
});
cljs.core.undefined_QMARK_ = (function undefined_QMARK_(x){
return (void 0 === x);
});
/**
* Return true if s satisfies ISeq
*/
cljs.core.seq_QMARK_ = (function seq_QMARK_(s){
if((s == null)){
return false;
} else {
var G__27040 = s;
if(G__27040){
var bit__24953__auto__ = (G__27040.cljs$lang$protocol_mask$partition0$ & (64));
if((bit__24953__auto__) || (G__27040.cljs$core$ISeq$)){
return true;
} else {
if((!G__27040.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq,G__27040);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq,G__27040);
}
}
});
/**
* Return true if s satisfies ISeqable
*/
cljs.core.seqable_QMARK_ = (function seqable_QMARK_(s){
var G__27042 = s;
if(G__27042){
var bit__24953__auto__ = (G__27042.cljs$lang$protocol_mask$partition0$ & (8388608));
if((bit__24953__auto__) || (G__27042.cljs$core$ISeqable$)){
return true;
} else {
if((!G__27042.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeqable,G__27042);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeqable,G__27042);
}
});
cljs.core.boolean$ = (function boolean$(x){
if(cljs.core.truth_(x)){
return true;
} else {
return false;
}
});
cljs.core.ifn_QMARK_ = (function ifn_QMARK_(f){
var or__24272__auto__ = cljs.core.fn_QMARK_(f);
if(or__24272__auto__){
return or__24272__auto__;
} else {
var G__27046 = f;
if(G__27046){
var bit__24953__auto__ = (G__27046.cljs$lang$protocol_mask$partition0$ & (1));
if((bit__24953__auto__) || (G__27046.cljs$core$IFn$)){
return true;
} else {
if((!G__27046.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IFn,G__27046);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IFn,G__27046);
}
}
});
/**
* Returns true if n is an integer.
*/
cljs.core.integer_QMARK_ = (function integer_QMARK_(n){
return (typeof n === 'number') && (cljs.core.not((function (){var G__27059 = n;
return isNaN(G__27059);
})())) && (!((n === Infinity))) && (((function (){var G__27060 = n;
return parseFloat(G__27060);
})() === (function (){var G__27061 = n;
var G__27062 = (10);
return parseInt(G__27061,G__27062);
})()));
});
/**
* Returns true if key is present in the given collection, otherwise
* returns false.  Note that for numerically indexed collections like
* vectors and arrays, this tests if the numeric key is within the
* range of indexes. 'contains?' operates constant or logarithmic time;
* it will not perform a linear search for a value.  See also 'some'.
*/
cljs.core.contains_QMARK_ = (function contains_QMARK_(coll,v){
if((cljs.core.get.cljs$core$IFn$_invoke$arity$3(coll,v,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel)){
return false;
} else {
return true;
}
});
/**
* Returns the map entry for key, or nil if key not present.
*/
cljs.core.find = (function find(coll,k){
if((!((coll == null))) && (cljs.core.associative_QMARK_(coll)) && (cljs.core.contains_QMARK_(coll,k))){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [k,cljs.core.get.cljs$core$IFn$_invoke$arity$2(coll,k)], null);
} else {
return null;
}
});
/**
* Returns true if no two of the arguments are =
* @param {...*} var_args
*/
cljs.core.distinct_QMARK_ = (function() {
var distinct_QMARK_ = null;
var distinct_QMARK___1 = (function (x){
return true;
});
var distinct_QMARK___2 = (function (x,y){
return !(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x,y));
});
var distinct_QMARK___3 = (function() { 
var G__27063__delegate = function (x,y,more){
if(!(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x,y))){
var s = cljs.core.PersistentHashSet.fromArray([x,y], true);
var xs = more;
while(true){
var x__$1 = cljs.core.first(xs);
var etc = cljs.core.next(xs);
if(cljs.core.truth_(xs)){
if(cljs.core.contains_QMARK_(s,x__$1)){
return false;
} else {
var G__27064 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(s,x__$1);
var G__27065 = etc;
s = G__27064;
xs = G__27065;
continue;
}
} else {
return true;
}
break;
}
} else {
return false;
}
};
var G__27063 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__27066__i = 0, G__27066__a = new Array(arguments.length -  2);
while (G__27066__i < G__27066__a.length) {G__27066__a[G__27066__i] = arguments[G__27066__i + 2]; ++G__27066__i;}
  more = new cljs.core.IndexedSeq(G__27066__a,0);
} 
return G__27063__delegate.call(this,x,y,more);};
G__27063.cljs$lang$maxFixedArity = 2;
G__27063.cljs$lang$applyTo = (function (arglist__27067){
var x = cljs.core.first(arglist__27067);
arglist__27067 = cljs.core.next(arglist__27067);
var y = cljs.core.first(arglist__27067);
var more = cljs.core.rest(arglist__27067);
return G__27063__delegate(x,y,more);
});
G__27063.cljs$core$IFn$_invoke$arity$variadic = G__27063__delegate;
return G__27063;
})()
;
distinct_QMARK_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return distinct_QMARK___1.call(this,x);
case 2:
return distinct_QMARK___2.call(this,x,y);
default:
var G__27068 = null;
if (arguments.length > 2) {
var G__27069__i = 0, G__27069__a = new Array(arguments.length -  2);
while (G__27069__i < G__27069__a.length) {G__27069__a[G__27069__i] = arguments[G__27069__i + 2]; ++G__27069__i;}
G__27068 = new cljs.core.IndexedSeq(G__27069__a,0);
}
return distinct_QMARK___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__27068);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
distinct_QMARK_.cljs$lang$maxFixedArity = 2;
distinct_QMARK_.cljs$lang$applyTo = distinct_QMARK___3.cljs$lang$applyTo;
distinct_QMARK_.cljs$core$IFn$_invoke$arity$1 = distinct_QMARK___1;
distinct_QMARK_.cljs$core$IFn$_invoke$arity$2 = distinct_QMARK___2;
distinct_QMARK_.cljs$core$IFn$_invoke$arity$variadic = distinct_QMARK___3.cljs$core$IFn$_invoke$arity$variadic;
return distinct_QMARK_;
})()
;
/**
* Comparator. Returns a negative number, zero, or a positive number
* when x is logically 'less than', 'equal to', or 'greater than'
* y. Uses IComparable if available and google.array.defaultCompare for objects
* of the same type and special-cases nil to be less than any other object.
*/
cljs.core.compare = (function compare(x,y){
if((x === y)){
return (0);
} else {
if((x == null)){
return (-1);
} else {
if((y == null)){
return (1);
} else {
if((cljs.core.type(x) === cljs.core.type(y))){
if((function (){var G__27073 = x;
if(G__27073){
var bit__24946__auto__ = (G__27073.cljs$lang$protocol_mask$partition1$ & (2048));
if((bit__24946__auto__) || (G__27073.cljs$core$IComparable$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return x.cljs$core$IComparable$_compare$arity$2(null,y);
} else {
var G__27074 = x;
var G__27075 = y;
return goog.array.defaultCompare(G__27074,G__27075);
}
} else {
throw (new Error("compare on non-nil objects of different types"));

}
}
}
}
});
/**
* Compare indexed collection.
*/
cljs.core.compare_indexed = (function() {
var compare_indexed = null;
var compare_indexed__2 = (function (xs,ys){
var xl = cljs.core.count(xs);
var yl = cljs.core.count(ys);
if((xl < yl)){
return (-1);
} else {
if((xl > yl)){
return (1);
} else {
return compare_indexed.cljs$core$IFn$_invoke$arity$4(xs,ys,xl,(0));

}
}
});
var compare_indexed__4 = (function (xs,ys,len,n){
while(true){
var d = cljs.core.compare(cljs.core.nth.cljs$core$IFn$_invoke$arity$2(xs,n),cljs.core.nth.cljs$core$IFn$_invoke$arity$2(ys,n));
if(((d === (0))) && (((n + (1)) < len))){
var G__27080 = xs;
var G__27081 = ys;
var G__27082 = len;
var G__27083 = (n + (1));
xs = G__27080;
ys = G__27081;
len = G__27082;
n = G__27083;
continue;
} else {
return d;
}
break;
}
});
compare_indexed = function(xs,ys,len,n){
switch(arguments.length){
case 2:
return compare_indexed__2.call(this,xs,ys);
case 4:
return compare_indexed__4.call(this,xs,ys,len,n);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
compare_indexed.cljs$core$IFn$_invoke$arity$2 = compare_indexed__2;
compare_indexed.cljs$core$IFn$_invoke$arity$4 = compare_indexed__4;
return compare_indexed;
})()
;
/**
* Given a fn that might be boolean valued or a comparator,
* return a fn that is a comparator.
*/
cljs.core.fn__GT_comparator = (function fn__GT_comparator(f){
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(f,cljs.core.compare)){
return cljs.core.compare;
} else {
return (function (x,y){
var r = (function (){var G__27088 = x;
var G__27089 = y;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__27088,G__27089) : f.call(null,G__27088,G__27089));
})();
if(typeof r === 'number'){
return r;
} else {
if(cljs.core.truth_(r)){
return (-1);
} else {
if(cljs.core.truth_((function (){var G__27090 = y;
var G__27091 = x;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__27090,G__27091) : f.call(null,G__27090,G__27091));
})())){
return (1);
} else {
return (0);
}
}
}
});
}
});
/**
* Returns a sorted sequence of the items in coll. Comp can be
* boolean-valued comparison function, or a -/0/+ valued comparator.
* Comp defaults to compare.
*/
cljs.core.sort = (function() {
var sort = null;
var sort__1 = (function (coll){
return sort.cljs$core$IFn$_invoke$arity$2(cljs.core.compare,coll);
});
var sort__2 = (function (comp,coll){
if(cljs.core.seq(coll)){
var a = (function (){var G__27097 = coll;
return (cljs.core.to_array.cljs$core$IFn$_invoke$arity$1 ? cljs.core.to_array.cljs$core$IFn$_invoke$arity$1(G__27097) : cljs.core.to_array.call(null,G__27097));
})();
var G__27098_27100 = a;
var G__27099_27101 = cljs.core.fn__GT_comparator(comp);
goog.array.stableSort(G__27098_27100,G__27099_27101);

return cljs.core.seq(a);
} else {
return cljs.core.List.EMPTY;
}
});
sort = function(comp,coll){
switch(arguments.length){
case 1:
return sort__1.call(this,comp);
case 2:
return sort__2.call(this,comp,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
sort.cljs$core$IFn$_invoke$arity$1 = sort__1;
sort.cljs$core$IFn$_invoke$arity$2 = sort__2;
return sort;
})()
;
/**
* Returns a sorted sequence of the items in coll, where the sort
* order is determined by comparing (keyfn item).  Comp can be
* boolean-valued comparison funcion, or a -/0/+ valued comparator.
* Comp defaults to compare.
*/
cljs.core.sort_by = (function() {
var sort_by = null;
var sort_by__2 = (function (keyfn,coll){
return sort_by.cljs$core$IFn$_invoke$arity$3(keyfn,cljs.core.compare,coll);
});
var sort_by__3 = (function (keyfn,comp,coll){
return cljs.core.sort.cljs$core$IFn$_invoke$arity$2((function (x,y){
return cljs.core.fn__GT_comparator(comp).call(null,(function (){var G__27107 = x;
return (keyfn.cljs$core$IFn$_invoke$arity$1 ? keyfn.cljs$core$IFn$_invoke$arity$1(G__27107) : keyfn.call(null,G__27107));
})(),(function (){var G__27108 = y;
return (keyfn.cljs$core$IFn$_invoke$arity$1 ? keyfn.cljs$core$IFn$_invoke$arity$1(G__27108) : keyfn.call(null,G__27108));
})());
}),coll);
});
sort_by = function(keyfn,comp,coll){
switch(arguments.length){
case 2:
return sort_by__2.call(this,keyfn,comp);
case 3:
return sort_by__3.call(this,keyfn,comp,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
sort_by.cljs$core$IFn$_invoke$arity$2 = sort_by__2;
sort_by.cljs$core$IFn$_invoke$arity$3 = sort_by__3;
return sort_by;
})()
;
cljs.core.seq_reduce = (function() {
var seq_reduce = null;
var seq_reduce__2 = (function (f,coll){
var temp__4124__auto__ = cljs.core.seq(coll);
if(temp__4124__auto__){
var s = temp__4124__auto__;
var G__27114 = f;
var G__27115 = cljs.core.first(s);
var G__27116 = cljs.core.next(s);
return (cljs.core.reduce.cljs$core$IFn$_invoke$arity$3 ? cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(G__27114,G__27115,G__27116) : cljs.core.reduce.call(null,G__27114,G__27115,G__27116));
} else {
return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
}
});
var seq_reduce__3 = (function (f,val,coll){
var val__$1 = val;
var coll__$1 = cljs.core.seq(coll);
while(true){
if(coll__$1){
var nval = (function (){var G__27117 = val__$1;
var G__27118 = cljs.core.first(coll__$1);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__27117,G__27118) : f.call(null,G__27117,G__27118));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__27119 = nval;
var G__27120 = cljs.core.next(coll__$1);
val__$1 = G__27119;
coll__$1 = G__27120;
continue;
}
} else {
return val__$1;
}
break;
}
});
seq_reduce = function(f,val,coll){
switch(arguments.length){
case 2:
return seq_reduce__2.call(this,f,val);
case 3:
return seq_reduce__3.call(this,f,val,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
seq_reduce.cljs$core$IFn$_invoke$arity$2 = seq_reduce__2;
seq_reduce.cljs$core$IFn$_invoke$arity$3 = seq_reduce__3;
return seq_reduce;
})()
;
/**
* Return a random permutation of coll
*/
cljs.core.shuffle = (function shuffle(coll){
var a = (function (){var G__27124 = coll;
return (cljs.core.to_array.cljs$core$IFn$_invoke$arity$1 ? cljs.core.to_array.cljs$core$IFn$_invoke$arity$1(G__27124) : cljs.core.to_array.call(null,G__27124));
})();
var G__27125_27127 = a;
goog.array.shuffle(G__27125_27127);

var G__27126 = a;
return (cljs.core.vec.cljs$core$IFn$_invoke$arity$1 ? cljs.core.vec.cljs$core$IFn$_invoke$arity$1(G__27126) : cljs.core.vec.call(null,G__27126));
});
/**
* f should be a function of 2 arguments. If val is not supplied,
* returns the result of applying f to the first 2 items in coll, then
* applying f to that result and the 3rd item, etc. If coll contains no
* items, f must accept no arguments as well, and reduce returns the
* result of calling f with no arguments.  If coll has only 1 item, it
* is returned and f is not called.  If val is supplied, returns the
* result of applying f to val and the first item in coll, then
* applying f to that result and the 2nd item, etc. If coll contains no
* items, returns val and f is not called.
*/
cljs.core.reduce = (function() {
var reduce = null;
var reduce__2 = (function (f,coll){
if((function (){var G__27130 = coll;
if(G__27130){
var bit__24946__auto__ = (G__27130.cljs$lang$protocol_mask$partition0$ & (524288));
if((bit__24946__auto__) || (G__27130.cljs$core$IReduce$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$IReduce$_reduce$arity$2(null,f);
} else {
if(coll instanceof Array){
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$2(coll,f);
} else {
if(typeof coll === 'string'){
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$2(coll,f);
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.IReduce,coll)){
return cljs.core._reduce.cljs$core$IFn$_invoke$arity$2(coll,f);
} else {
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll);

}
}
}
}
});
var reduce__3 = (function (f,val,coll){
if((function (){var G__27131 = coll;
if(G__27131){
var bit__24946__auto__ = (G__27131.cljs$lang$protocol_mask$partition0$ & (524288));
if((bit__24946__auto__) || (G__27131.cljs$core$IReduce$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$IReduce$_reduce$arity$3(null,f,val);
} else {
if(coll instanceof Array){
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$3(coll,f,val);
} else {
if(typeof coll === 'string'){
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$3(coll,f,val);
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.IReduce,coll)){
return cljs.core._reduce.cljs$core$IFn$_invoke$arity$3(coll,f,val);
} else {
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,val,coll);

}
}
}
}
});
reduce = function(f,val,coll){
switch(arguments.length){
case 2:
return reduce__2.call(this,f,val);
case 3:
return reduce__3.call(this,f,val,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
reduce.cljs$core$IFn$_invoke$arity$2 = reduce__2;
reduce.cljs$core$IFn$_invoke$arity$3 = reduce__3;
return reduce;
})()
;
/**
* Reduces an associative collection. f should be a function of 3
* arguments. Returns the result of applying f to init, the first key
* and the first value in coll, then applying f to that result and the
* 2nd key and value, etc. If coll contains no entries, returns init
* and f is not called. Note that reduce-kv is supported on vectors,
* where the keys will be the ordinals.
*/
cljs.core.reduce_kv = (function reduce_kv(f,init,coll){
if(!((coll == null))){
return cljs.core._kv_reduce(coll,f,init);
} else {
return init;
}
});
cljs.core.identity = (function identity(x){
return x;
});
cljs.core.completing = (function() {
var completing = null;
var completing__1 = (function (f){
return completing.cljs$core$IFn$_invoke$arity$2(f,cljs.core.identity);
});
var completing__2 = (function (f,cf){
return (function() {
var G__27140 = null;
var G__27140__0 = (function (){
return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
});
var G__27140__1 = (function (x){
var G__27137 = x;
return (cf.cljs$core$IFn$_invoke$arity$1 ? cf.cljs$core$IFn$_invoke$arity$1(G__27137) : cf.call(null,G__27137));
});
var G__27140__2 = (function (x,y){
var G__27138 = x;
var G__27139 = y;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__27138,G__27139) : f.call(null,G__27138,G__27139));
});
G__27140 = function(x,y){
switch(arguments.length){
case 0:
return G__27140__0.call(this);
case 1:
return G__27140__1.call(this,x);
case 2:
return G__27140__2.call(this,x,y);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__27140.cljs$core$IFn$_invoke$arity$0 = G__27140__0;
G__27140.cljs$core$IFn$_invoke$arity$1 = G__27140__1;
G__27140.cljs$core$IFn$_invoke$arity$2 = G__27140__2;
return G__27140;
})()
});
completing = function(f,cf){
switch(arguments.length){
case 1:
return completing__1.call(this,f);
case 2:
return completing__2.call(this,f,cf);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
completing.cljs$core$IFn$_invoke$arity$1 = completing__1;
completing.cljs$core$IFn$_invoke$arity$2 = completing__2;
return completing;
})()
;
/**
* reduce with a transformation of f (xf). If init is not
* supplied, (f) will be called to produce it. f should be a reducing
* step function that accepts both 1 and 2 arguments, if it accepts
* only 2 you can add the arity-1 with 'completing'. Returns the result
* of applying (the transformed) xf to init and the first item in coll,
* then applying xf to that result and the 2nd item, etc. If coll
* contains no items, returns init and f is not called. Note that
* certain transforms may inject or skip items.
*/
cljs.core.transduce = (function() {
var transduce = null;
var transduce__3 = (function (xform,f,coll){
return transduce.cljs$core$IFn$_invoke$arity$4(xform,f,(function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})(),coll);
});
var transduce__4 = (function (xform,f,init,coll){
var f__$1 = (function (){var G__27147 = f;
return (xform.cljs$core$IFn$_invoke$arity$1 ? xform.cljs$core$IFn$_invoke$arity$1(G__27147) : xform.call(null,G__27147));
})();
var ret = cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(f__$1,init,coll);
var G__27148 = ret;
return (f__$1.cljs$core$IFn$_invoke$arity$1 ? f__$1.cljs$core$IFn$_invoke$arity$1(G__27148) : f__$1.call(null,G__27148));
});
transduce = function(xform,f,init,coll){
switch(arguments.length){
case 3:
return transduce__3.call(this,xform,f,init);
case 4:
return transduce__4.call(this,xform,f,init,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
transduce.cljs$core$IFn$_invoke$arity$3 = transduce__3;
transduce.cljs$core$IFn$_invoke$arity$4 = transduce__4;
return transduce;
})()
;
/**
* Returns the sum of nums. (+) returns 0.
* @param {...*} var_args
*/
cljs.core._PLUS_ = (function() {
var _PLUS_ = null;
var _PLUS___0 = (function (){
return (0);
});
var _PLUS___1 = (function (x){
return x;
});
var _PLUS___2 = (function (x,y){
return (x + y);
});
var _PLUS___3 = (function() { 
var G__27149__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(_PLUS_,(x + y),more);
};
var G__27149 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__27150__i = 0, G__27150__a = new Array(arguments.length -  2);
while (G__27150__i < G__27150__a.length) {G__27150__a[G__27150__i] = arguments[G__27150__i + 2]; ++G__27150__i;}
  more = new cljs.core.IndexedSeq(G__27150__a,0);
} 
return G__27149__delegate.call(this,x,y,more);};
G__27149.cljs$lang$maxFixedArity = 2;
G__27149.cljs$lang$applyTo = (function (arglist__27151){
var x = cljs.core.first(arglist__27151);
arglist__27151 = cljs.core.next(arglist__27151);
var y = cljs.core.first(arglist__27151);
var more = cljs.core.rest(arglist__27151);
return G__27149__delegate(x,y,more);
});
G__27149.cljs$core$IFn$_invoke$arity$variadic = G__27149__delegate;
return G__27149;
})()
;
_PLUS_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 0:
return _PLUS___0.call(this);
case 1:
return _PLUS___1.call(this,x);
case 2:
return _PLUS___2.call(this,x,y);
default:
var G__27152 = null;
if (arguments.length > 2) {
var G__27153__i = 0, G__27153__a = new Array(arguments.length -  2);
while (G__27153__i < G__27153__a.length) {G__27153__a[G__27153__i] = arguments[G__27153__i + 2]; ++G__27153__i;}
G__27152 = new cljs.core.IndexedSeq(G__27153__a,0);
}
return _PLUS___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__27152);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_PLUS_.cljs$lang$maxFixedArity = 2;
_PLUS_.cljs$lang$applyTo = _PLUS___3.cljs$lang$applyTo;
_PLUS_.cljs$core$IFn$_invoke$arity$0 = _PLUS___0;
_PLUS_.cljs$core$IFn$_invoke$arity$1 = _PLUS___1;
_PLUS_.cljs$core$IFn$_invoke$arity$2 = _PLUS___2;
_PLUS_.cljs$core$IFn$_invoke$arity$variadic = _PLUS___3.cljs$core$IFn$_invoke$arity$variadic;
return _PLUS_;
})()
;
/**
* If no ys are supplied, returns the negation of x, else subtracts
* the ys from x and returns the result.
* @param {...*} var_args
*/
cljs.core._ = (function() {
var _ = null;
var ___1 = (function (x){
return (- x);
});
var ___2 = (function (x,y){
return (x - y);
});
var ___3 = (function() { 
var G__27154__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(_,(x - y),more);
};
var G__27154 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__27155__i = 0, G__27155__a = new Array(arguments.length -  2);
while (G__27155__i < G__27155__a.length) {G__27155__a[G__27155__i] = arguments[G__27155__i + 2]; ++G__27155__i;}
  more = new cljs.core.IndexedSeq(G__27155__a,0);
} 
return G__27154__delegate.call(this,x,y,more);};
G__27154.cljs$lang$maxFixedArity = 2;
G__27154.cljs$lang$applyTo = (function (arglist__27156){
var x = cljs.core.first(arglist__27156);
arglist__27156 = cljs.core.next(arglist__27156);
var y = cljs.core.first(arglist__27156);
var more = cljs.core.rest(arglist__27156);
return G__27154__delegate(x,y,more);
});
G__27154.cljs$core$IFn$_invoke$arity$variadic = G__27154__delegate;
return G__27154;
})()
;
_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return ___1.call(this,x);
case 2:
return ___2.call(this,x,y);
default:
var G__27157 = null;
if (arguments.length > 2) {
var G__27158__i = 0, G__27158__a = new Array(arguments.length -  2);
while (G__27158__i < G__27158__a.length) {G__27158__a[G__27158__i] = arguments[G__27158__i + 2]; ++G__27158__i;}
G__27157 = new cljs.core.IndexedSeq(G__27158__a,0);
}
return ___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__27157);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_.cljs$lang$maxFixedArity = 2;
_.cljs$lang$applyTo = ___3.cljs$lang$applyTo;
_.cljs$core$IFn$_invoke$arity$1 = ___1;
_.cljs$core$IFn$_invoke$arity$2 = ___2;
_.cljs$core$IFn$_invoke$arity$variadic = ___3.cljs$core$IFn$_invoke$arity$variadic;
return _;
})()
;
/**
* Returns the product of nums. (*) returns 1.
* @param {...*} var_args
*/
cljs.core._STAR_ = (function() {
var _STAR_ = null;
var _STAR___0 = (function (){
return (1);
});
var _STAR___1 = (function (x){
return x;
});
var _STAR___2 = (function (x,y){
return (x * y);
});
var _STAR___3 = (function() { 
var G__27159__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(_STAR_,(x * y),more);
};
var G__27159 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__27160__i = 0, G__27160__a = new Array(arguments.length -  2);
while (G__27160__i < G__27160__a.length) {G__27160__a[G__27160__i] = arguments[G__27160__i + 2]; ++G__27160__i;}
  more = new cljs.core.IndexedSeq(G__27160__a,0);
} 
return G__27159__delegate.call(this,x,y,more);};
G__27159.cljs$lang$maxFixedArity = 2;
G__27159.cljs$lang$applyTo = (function (arglist__27161){
var x = cljs.core.first(arglist__27161);
arglist__27161 = cljs.core.next(arglist__27161);
var y = cljs.core.first(arglist__27161);
var more = cljs.core.rest(arglist__27161);
return G__27159__delegate(x,y,more);
});
G__27159.cljs$core$IFn$_invoke$arity$variadic = G__27159__delegate;
return G__27159;
})()
;
_STAR_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 0:
return _STAR___0.call(this);
case 1:
return _STAR___1.call(this,x);
case 2:
return _STAR___2.call(this,x,y);
default:
var G__27162 = null;
if (arguments.length > 2) {
var G__27163__i = 0, G__27163__a = new Array(arguments.length -  2);
while (G__27163__i < G__27163__a.length) {G__27163__a[G__27163__i] = arguments[G__27163__i + 2]; ++G__27163__i;}
G__27162 = new cljs.core.IndexedSeq(G__27163__a,0);
}
return _STAR___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__27162);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_STAR_.cljs$lang$maxFixedArity = 2;
_STAR_.cljs$lang$applyTo = _STAR___3.cljs$lang$applyTo;
_STAR_.cljs$core$IFn$_invoke$arity$0 = _STAR___0;
_STAR_.cljs$core$IFn$_invoke$arity$1 = _STAR___1;
_STAR_.cljs$core$IFn$_invoke$arity$2 = _STAR___2;
_STAR_.cljs$core$IFn$_invoke$arity$variadic = _STAR___3.cljs$core$IFn$_invoke$arity$variadic;
return _STAR_;
})()
;
/**
* If no denominators are supplied, returns 1/numerator,
* else returns numerator divided by all of the denominators.
* @param {...*} var_args
*/
cljs.core._SLASH_ = (function() {
var _SLASH_ = null;
var _SLASH___1 = (function (x){
return _SLASH_.cljs$core$IFn$_invoke$arity$2((1),x);
});
var _SLASH___2 = (function (x,y){
return (x / y);
});
var _SLASH___3 = (function() { 
var G__27168__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(_SLASH_,_SLASH_.cljs$core$IFn$_invoke$arity$2(x,y),more);
};
var G__27168 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__27169__i = 0, G__27169__a = new Array(arguments.length -  2);
while (G__27169__i < G__27169__a.length) {G__27169__a[G__27169__i] = arguments[G__27169__i + 2]; ++G__27169__i;}
  more = new cljs.core.IndexedSeq(G__27169__a,0);
} 
return G__27168__delegate.call(this,x,y,more);};
G__27168.cljs$lang$maxFixedArity = 2;
G__27168.cljs$lang$applyTo = (function (arglist__27170){
var x = cljs.core.first(arglist__27170);
arglist__27170 = cljs.core.next(arglist__27170);
var y = cljs.core.first(arglist__27170);
var more = cljs.core.rest(arglist__27170);
return G__27168__delegate(x,y,more);
});
G__27168.cljs$core$IFn$_invoke$arity$variadic = G__27168__delegate;
return G__27168;
})()
;
_SLASH_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return _SLASH___1.call(this,x);
case 2:
return _SLASH___2.call(this,x,y);
default:
var G__27171 = null;
if (arguments.length > 2) {
var G__27172__i = 0, G__27172__a = new Array(arguments.length -  2);
while (G__27172__i < G__27172__a.length) {G__27172__a[G__27172__i] = arguments[G__27172__i + 2]; ++G__27172__i;}
G__27171 = new cljs.core.IndexedSeq(G__27172__a,0);
}
return _SLASH___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__27171);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_SLASH_.cljs$lang$maxFixedArity = 2;
_SLASH_.cljs$lang$applyTo = _SLASH___3.cljs$lang$applyTo;
_SLASH_.cljs$core$IFn$_invoke$arity$1 = _SLASH___1;
_SLASH_.cljs$core$IFn$_invoke$arity$2 = _SLASH___2;
_SLASH_.cljs$core$IFn$_invoke$arity$variadic = _SLASH___3.cljs$core$IFn$_invoke$arity$variadic;
return _SLASH_;
})()
;
/**
* Returns non-nil if nums are in monotonically increasing order,
* otherwise false.
* @param {...*} var_args
*/
cljs.core._LT_ = (function() {
var _LT_ = null;
var _LT___1 = (function (x){
return true;
});
var _LT___2 = (function (x,y){
return (x < y);
});
var _LT___3 = (function() { 
var G__27173__delegate = function (x,y,more){
while(true){
if((x < y)){
if(cljs.core.next(more)){
var G__27174 = y;
var G__27175 = cljs.core.first(more);
var G__27176 = cljs.core.next(more);
x = G__27174;
y = G__27175;
more = G__27176;
continue;
} else {
return (y < cljs.core.first(more));
}
} else {
return false;
}
break;
}
};
var G__27173 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__27177__i = 0, G__27177__a = new Array(arguments.length -  2);
while (G__27177__i < G__27177__a.length) {G__27177__a[G__27177__i] = arguments[G__27177__i + 2]; ++G__27177__i;}
  more = new cljs.core.IndexedSeq(G__27177__a,0);
} 
return G__27173__delegate.call(this,x,y,more);};
G__27173.cljs$lang$maxFixedArity = 2;
G__27173.cljs$lang$applyTo = (function (arglist__27178){
var x = cljs.core.first(arglist__27178);
arglist__27178 = cljs.core.next(arglist__27178);
var y = cljs.core.first(arglist__27178);
var more = cljs.core.rest(arglist__27178);
return G__27173__delegate(x,y,more);
});
G__27173.cljs$core$IFn$_invoke$arity$variadic = G__27173__delegate;
return G__27173;
})()
;
_LT_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return _LT___1.call(this,x);
case 2:
return _LT___2.call(this,x,y);
default:
var G__27179 = null;
if (arguments.length > 2) {
var G__27180__i = 0, G__27180__a = new Array(arguments.length -  2);
while (G__27180__i < G__27180__a.length) {G__27180__a[G__27180__i] = arguments[G__27180__i + 2]; ++G__27180__i;}
G__27179 = new cljs.core.IndexedSeq(G__27180__a,0);
}
return _LT___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__27179);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_LT_.cljs$lang$maxFixedArity = 2;
_LT_.cljs$lang$applyTo = _LT___3.cljs$lang$applyTo;
_LT_.cljs$core$IFn$_invoke$arity$1 = _LT___1;
_LT_.cljs$core$IFn$_invoke$arity$2 = _LT___2;
_LT_.cljs$core$IFn$_invoke$arity$variadic = _LT___3.cljs$core$IFn$_invoke$arity$variadic;
return _LT_;
})()
;
/**
* Returns non-nil if nums are in monotonically non-decreasing order,
* otherwise false.
* @param {...*} var_args
*/
cljs.core._LT__EQ_ = (function() {
var _LT__EQ_ = null;
var _LT__EQ___1 = (function (x){
return true;
});
var _LT__EQ___2 = (function (x,y){
return (x <= y);
});
var _LT__EQ___3 = (function() { 
var G__27181__delegate = function (x,y,more){
while(true){
if((x <= y)){
if(cljs.core.next(more)){
var G__27182 = y;
var G__27183 = cljs.core.first(more);
var G__27184 = cljs.core.next(more);
x = G__27182;
y = G__27183;
more = G__27184;
continue;
} else {
return (y <= cljs.core.first(more));
}
} else {
return false;
}
break;
}
};
var G__27181 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__27185__i = 0, G__27185__a = new Array(arguments.length -  2);
while (G__27185__i < G__27185__a.length) {G__27185__a[G__27185__i] = arguments[G__27185__i + 2]; ++G__27185__i;}
  more = new cljs.core.IndexedSeq(G__27185__a,0);
} 
return G__27181__delegate.call(this,x,y,more);};
G__27181.cljs$lang$maxFixedArity = 2;
G__27181.cljs$lang$applyTo = (function (arglist__27186){
var x = cljs.core.first(arglist__27186);
arglist__27186 = cljs.core.next(arglist__27186);
var y = cljs.core.first(arglist__27186);
var more = cljs.core.rest(arglist__27186);
return G__27181__delegate(x,y,more);
});
G__27181.cljs$core$IFn$_invoke$arity$variadic = G__27181__delegate;
return G__27181;
})()
;
_LT__EQ_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return _LT__EQ___1.call(this,x);
case 2:
return _LT__EQ___2.call(this,x,y);
default:
var G__27187 = null;
if (arguments.length > 2) {
var G__27188__i = 0, G__27188__a = new Array(arguments.length -  2);
while (G__27188__i < G__27188__a.length) {G__27188__a[G__27188__i] = arguments[G__27188__i + 2]; ++G__27188__i;}
G__27187 = new cljs.core.IndexedSeq(G__27188__a,0);
}
return _LT__EQ___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__27187);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_LT__EQ_.cljs$lang$maxFixedArity = 2;
_LT__EQ_.cljs$lang$applyTo = _LT__EQ___3.cljs$lang$applyTo;
_LT__EQ_.cljs$core$IFn$_invoke$arity$1 = _LT__EQ___1;
_LT__EQ_.cljs$core$IFn$_invoke$arity$2 = _LT__EQ___2;
_LT__EQ_.cljs$core$IFn$_invoke$arity$variadic = _LT__EQ___3.cljs$core$IFn$_invoke$arity$variadic;
return _LT__EQ_;
})()
;
/**
* Returns non-nil if nums are in monotonically decreasing order,
* otherwise false.
* @param {...*} var_args
*/
cljs.core._GT_ = (function() {
var _GT_ = null;
var _GT___1 = (function (x){
return true;
});
var _GT___2 = (function (x,y){
return (x > y);
});
var _GT___3 = (function() { 
var G__27189__delegate = function (x,y,more){
while(true){
if((x > y)){
if(cljs.core.next(more)){
var G__27190 = y;
var G__27191 = cljs.core.first(more);
var G__27192 = cljs.core.next(more);
x = G__27190;
y = G__27191;
more = G__27192;
continue;
} else {
return (y > cljs.core.first(more));
}
} else {
return false;
}
break;
}
};
var G__27189 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__27193__i = 0, G__27193__a = new Array(arguments.length -  2);
while (G__27193__i < G__27193__a.length) {G__27193__a[G__27193__i] = arguments[G__27193__i + 2]; ++G__27193__i;}
  more = new cljs.core.IndexedSeq(G__27193__a,0);
} 
return G__27189__delegate.call(this,x,y,more);};
G__27189.cljs$lang$maxFixedArity = 2;
G__27189.cljs$lang$applyTo = (function (arglist__27194){
var x = cljs.core.first(arglist__27194);
arglist__27194 = cljs.core.next(arglist__27194);
var y = cljs.core.first(arglist__27194);
var more = cljs.core.rest(arglist__27194);
return G__27189__delegate(x,y,more);
});
G__27189.cljs$core$IFn$_invoke$arity$variadic = G__27189__delegate;
return G__27189;
})()
;
_GT_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return _GT___1.call(this,x);
case 2:
return _GT___2.call(this,x,y);
default:
var G__27195 = null;
if (arguments.length > 2) {
var G__27196__i = 0, G__27196__a = new Array(arguments.length -  2);
while (G__27196__i < G__27196__a.length) {G__27196__a[G__27196__i] = arguments[G__27196__i + 2]; ++G__27196__i;}
G__27195 = new cljs.core.IndexedSeq(G__27196__a,0);
}
return _GT___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__27195);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_GT_.cljs$lang$maxFixedArity = 2;
_GT_.cljs$lang$applyTo = _GT___3.cljs$lang$applyTo;
_GT_.cljs$core$IFn$_invoke$arity$1 = _GT___1;
_GT_.cljs$core$IFn$_invoke$arity$2 = _GT___2;
_GT_.cljs$core$IFn$_invoke$arity$variadic = _GT___3.cljs$core$IFn$_invoke$arity$variadic;
return _GT_;
})()
;
/**
* Returns non-nil if nums are in monotonically non-increasing order,
* otherwise false.
* @param {...*} var_args
*/
cljs.core._GT__EQ_ = (function() {
var _GT__EQ_ = null;
var _GT__EQ___1 = (function (x){
return true;
});
var _GT__EQ___2 = (function (x,y){
return (x >= y);
});
var _GT__EQ___3 = (function() { 
var G__27197__delegate = function (x,y,more){
while(true){
if((x >= y)){
if(cljs.core.next(more)){
var G__27198 = y;
var G__27199 = cljs.core.first(more);
var G__27200 = cljs.core.next(more);
x = G__27198;
y = G__27199;
more = G__27200;
continue;
} else {
return (y >= cljs.core.first(more));
}
} else {
return false;
}
break;
}
};
var G__27197 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__27201__i = 0, G__27201__a = new Array(arguments.length -  2);
while (G__27201__i < G__27201__a.length) {G__27201__a[G__27201__i] = arguments[G__27201__i + 2]; ++G__27201__i;}
  more = new cljs.core.IndexedSeq(G__27201__a,0);
} 
return G__27197__delegate.call(this,x,y,more);};
G__27197.cljs$lang$maxFixedArity = 2;
G__27197.cljs$lang$applyTo = (function (arglist__27202){
var x = cljs.core.first(arglist__27202);
arglist__27202 = cljs.core.next(arglist__27202);
var y = cljs.core.first(arglist__27202);
var more = cljs.core.rest(arglist__27202);
return G__27197__delegate(x,y,more);
});
G__27197.cljs$core$IFn$_invoke$arity$variadic = G__27197__delegate;
return G__27197;
})()
;
_GT__EQ_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return _GT__EQ___1.call(this,x);
case 2:
return _GT__EQ___2.call(this,x,y);
default:
var G__27203 = null;
if (arguments.length > 2) {
var G__27204__i = 0, G__27204__a = new Array(arguments.length -  2);
while (G__27204__i < G__27204__a.length) {G__27204__a[G__27204__i] = arguments[G__27204__i + 2]; ++G__27204__i;}
G__27203 = new cljs.core.IndexedSeq(G__27204__a,0);
}
return _GT__EQ___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__27203);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_GT__EQ_.cljs$lang$maxFixedArity = 2;
_GT__EQ_.cljs$lang$applyTo = _GT__EQ___3.cljs$lang$applyTo;
_GT__EQ_.cljs$core$IFn$_invoke$arity$1 = _GT__EQ___1;
_GT__EQ_.cljs$core$IFn$_invoke$arity$2 = _GT__EQ___2;
_GT__EQ_.cljs$core$IFn$_invoke$arity$variadic = _GT__EQ___3.cljs$core$IFn$_invoke$arity$variadic;
return _GT__EQ_;
})()
;
/**
* Returns a number one less than num.
*/
cljs.core.dec = (function dec(x){
return (x - (1));
});
/**
* Returns the greatest of the nums.
* @param {...*} var_args
*/
cljs.core.max = (function() {
var max = null;
var max__1 = (function (x){
return x;
});
var max__2 = (function (x,y){
var x__24589__auto__ = x;
var y__24590__auto__ = y;
return ((x__24589__auto__ > y__24590__auto__) ? x__24589__auto__ : y__24590__auto__);
});
var max__3 = (function() { 
var G__27205__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(max,(function (){var x__24589__auto__ = x;
var y__24590__auto__ = y;
return ((x__24589__auto__ > y__24590__auto__) ? x__24589__auto__ : y__24590__auto__);
})(),more);
};
var G__27205 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__27206__i = 0, G__27206__a = new Array(arguments.length -  2);
while (G__27206__i < G__27206__a.length) {G__27206__a[G__27206__i] = arguments[G__27206__i + 2]; ++G__27206__i;}
  more = new cljs.core.IndexedSeq(G__27206__a,0);
} 
return G__27205__delegate.call(this,x,y,more);};
G__27205.cljs$lang$maxFixedArity = 2;
G__27205.cljs$lang$applyTo = (function (arglist__27207){
var x = cljs.core.first(arglist__27207);
arglist__27207 = cljs.core.next(arglist__27207);
var y = cljs.core.first(arglist__27207);
var more = cljs.core.rest(arglist__27207);
return G__27205__delegate(x,y,more);
});
G__27205.cljs$core$IFn$_invoke$arity$variadic = G__27205__delegate;
return G__27205;
})()
;
max = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return max__1.call(this,x);
case 2:
return max__2.call(this,x,y);
default:
var G__27208 = null;
if (arguments.length > 2) {
var G__27209__i = 0, G__27209__a = new Array(arguments.length -  2);
while (G__27209__i < G__27209__a.length) {G__27209__a[G__27209__i] = arguments[G__27209__i + 2]; ++G__27209__i;}
G__27208 = new cljs.core.IndexedSeq(G__27209__a,0);
}
return max__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__27208);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
max.cljs$lang$maxFixedArity = 2;
max.cljs$lang$applyTo = max__3.cljs$lang$applyTo;
max.cljs$core$IFn$_invoke$arity$1 = max__1;
max.cljs$core$IFn$_invoke$arity$2 = max__2;
max.cljs$core$IFn$_invoke$arity$variadic = max__3.cljs$core$IFn$_invoke$arity$variadic;
return max;
})()
;
/**
* Returns the least of the nums.
* @param {...*} var_args
*/
cljs.core.min = (function() {
var min = null;
var min__1 = (function (x){
return x;
});
var min__2 = (function (x,y){
var x__24596__auto__ = x;
var y__24597__auto__ = y;
return ((x__24596__auto__ < y__24597__auto__) ? x__24596__auto__ : y__24597__auto__);
});
var min__3 = (function() { 
var G__27210__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(min,(function (){var x__24596__auto__ = x;
var y__24597__auto__ = y;
return ((x__24596__auto__ < y__24597__auto__) ? x__24596__auto__ : y__24597__auto__);
})(),more);
};
var G__27210 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__27211__i = 0, G__27211__a = new Array(arguments.length -  2);
while (G__27211__i < G__27211__a.length) {G__27211__a[G__27211__i] = arguments[G__27211__i + 2]; ++G__27211__i;}
  more = new cljs.core.IndexedSeq(G__27211__a,0);
} 
return G__27210__delegate.call(this,x,y,more);};
G__27210.cljs$lang$maxFixedArity = 2;
G__27210.cljs$lang$applyTo = (function (arglist__27212){
var x = cljs.core.first(arglist__27212);
arglist__27212 = cljs.core.next(arglist__27212);
var y = cljs.core.first(arglist__27212);
var more = cljs.core.rest(arglist__27212);
return G__27210__delegate(x,y,more);
});
G__27210.cljs$core$IFn$_invoke$arity$variadic = G__27210__delegate;
return G__27210;
})()
;
min = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return min__1.call(this,x);
case 2:
return min__2.call(this,x,y);
default:
var G__27213 = null;
if (arguments.length > 2) {
var G__27214__i = 0, G__27214__a = new Array(arguments.length -  2);
while (G__27214__i < G__27214__a.length) {G__27214__a[G__27214__i] = arguments[G__27214__i + 2]; ++G__27214__i;}
G__27213 = new cljs.core.IndexedSeq(G__27214__a,0);
}
return min__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__27213);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
min.cljs$lang$maxFixedArity = 2;
min.cljs$lang$applyTo = min__3.cljs$lang$applyTo;
min.cljs$core$IFn$_invoke$arity$1 = min__1;
min.cljs$core$IFn$_invoke$arity$2 = min__2;
min.cljs$core$IFn$_invoke$arity$variadic = min__3.cljs$core$IFn$_invoke$arity$variadic;
return min;
})()
;
cljs.core.byte$ = (function byte$(x){
return x;
});
/**
* Coerce to char
*/
cljs.core.char$ = (function char$(x){
if(typeof x === 'number'){
return String.fromCharCode(x);
} else {
if((typeof x === 'string') && ((x.length === (1)))){
return x;
} else {
throw (new Error("Argument to char must be a character or number"));

}
}
});
cljs.core.short$ = (function short$(x){
return x;
});
cljs.core.float$ = (function float$(x){
return x;
});
cljs.core.double$ = (function double$(x){
return x;
});
cljs.core.unchecked_byte = (function unchecked_byte(x){
return x;
});
cljs.core.unchecked_char = (function unchecked_char(x){
return x;
});
cljs.core.unchecked_short = (function unchecked_short(x){
return x;
});
cljs.core.unchecked_float = (function unchecked_float(x){
return x;
});
cljs.core.unchecked_double = (function unchecked_double(x){
return x;
});
/**
* Returns the sum of nums. (+) returns 0.
* @param {...*} var_args
*/
cljs.core.unchecked_add = (function() {
var unchecked_add = null;
var unchecked_add__0 = (function (){
return (0);
});
var unchecked_add__1 = (function (x){
return x;
});
var unchecked_add__2 = (function (x,y){
return (x + y);
});
var unchecked_add__3 = (function() { 
var G__27215__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_add,(x + y),more);
};
var G__27215 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__27216__i = 0, G__27216__a = new Array(arguments.length -  2);
while (G__27216__i < G__27216__a.length) {G__27216__a[G__27216__i] = arguments[G__27216__i + 2]; ++G__27216__i;}
  more = new cljs.core.IndexedSeq(G__27216__a,0);
} 
return G__27215__delegate.call(this,x,y,more);};
G__27215.cljs$lang$maxFixedArity = 2;
G__27215.cljs$lang$applyTo = (function (arglist__27217){
var x = cljs.core.first(arglist__27217);
arglist__27217 = cljs.core.next(arglist__27217);
var y = cljs.core.first(arglist__27217);
var more = cljs.core.rest(arglist__27217);
return G__27215__delegate(x,y,more);
});
G__27215.cljs$core$IFn$_invoke$arity$variadic = G__27215__delegate;
return G__27215;
})()
;
unchecked_add = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 0:
return unchecked_add__0.call(this);
case 1:
return unchecked_add__1.call(this,x);
case 2:
return unchecked_add__2.call(this,x,y);
default:
var G__27218 = null;
if (arguments.length > 2) {
var G__27219__i = 0, G__27219__a = new Array(arguments.length -  2);
while (G__27219__i < G__27219__a.length) {G__27219__a[G__27219__i] = arguments[G__27219__i + 2]; ++G__27219__i;}
G__27218 = new cljs.core.IndexedSeq(G__27219__a,0);
}
return unchecked_add__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__27218);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
unchecked_add.cljs$lang$maxFixedArity = 2;
unchecked_add.cljs$lang$applyTo = unchecked_add__3.cljs$lang$applyTo;
unchecked_add.cljs$core$IFn$_invoke$arity$0 = unchecked_add__0;
unchecked_add.cljs$core$IFn$_invoke$arity$1 = unchecked_add__1;
unchecked_add.cljs$core$IFn$_invoke$arity$2 = unchecked_add__2;
unchecked_add.cljs$core$IFn$_invoke$arity$variadic = unchecked_add__3.cljs$core$IFn$_invoke$arity$variadic;
return unchecked_add;
})()
;
/**
* Returns the sum of nums. (+) returns 0.
* @param {...*} var_args
*/
cljs.core.unchecked_add_int = (function() {
var unchecked_add_int = null;
var unchecked_add_int__0 = (function (){
return (0);
});
var unchecked_add_int__1 = (function (x){
return x;
});
var unchecked_add_int__2 = (function (x,y){
return (x + y);
});
var unchecked_add_int__3 = (function() { 
var G__27220__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_add_int,(x + y),more);
};
var G__27220 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__27221__i = 0, G__27221__a = new Array(arguments.length -  2);
while (G__27221__i < G__27221__a.length) {G__27221__a[G__27221__i] = arguments[G__27221__i + 2]; ++G__27221__i;}
  more = new cljs.core.IndexedSeq(G__27221__a,0);
} 
return G__27220__delegate.call(this,x,y,more);};
G__27220.cljs$lang$maxFixedArity = 2;
G__27220.cljs$lang$applyTo = (function (arglist__27222){
var x = cljs.core.first(arglist__27222);
arglist__27222 = cljs.core.next(arglist__27222);
var y = cljs.core.first(arglist__27222);
var more = cljs.core.rest(arglist__27222);
return G__27220__delegate(x,y,more);
});
G__27220.cljs$core$IFn$_invoke$arity$variadic = G__27220__delegate;
return G__27220;
})()
;
unchecked_add_int = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 0:
return unchecked_add_int__0.call(this);
case 1:
return unchecked_add_int__1.call(this,x);
case 2:
return unchecked_add_int__2.call(this,x,y);
default:
var G__27223 = null;
if (arguments.length > 2) {
var G__27224__i = 0, G__27224__a = new Array(arguments.length -  2);
while (G__27224__i < G__27224__a.length) {G__27224__a[G__27224__i] = arguments[G__27224__i + 2]; ++G__27224__i;}
G__27223 = new cljs.core.IndexedSeq(G__27224__a,0);
}
return unchecked_add_int__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__27223);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
unchecked_add_int.cljs$lang$maxFixedArity = 2;
unchecked_add_int.cljs$lang$applyTo = unchecked_add_int__3.cljs$lang$applyTo;
unchecked_add_int.cljs$core$IFn$_invoke$arity$0 = unchecked_add_int__0;
unchecked_add_int.cljs$core$IFn$_invoke$arity$1 = unchecked_add_int__1;
unchecked_add_int.cljs$core$IFn$_invoke$arity$2 = unchecked_add_int__2;
unchecked_add_int.cljs$core$IFn$_invoke$arity$variadic = unchecked_add_int__3.cljs$core$IFn$_invoke$arity$variadic;
return unchecked_add_int;
})()
;
cljs.core.unchecked_dec = (function unchecked_dec(x){
return (x - (1));
});
cljs.core.unchecked_dec_int = (function unchecked_dec_int(x){
return (x - (1));
});
/**
* If no denominators are supplied, returns 1/numerator,
* else returns numerator divided by all of the denominators.
* @param {...*} var_args
*/
cljs.core.unchecked_divide_int = (function() {
var unchecked_divide_int = null;
var unchecked_divide_int__1 = (function (x){
return unchecked_divide_int.cljs$core$IFn$_invoke$arity$2((1),x);
});
var unchecked_divide_int__2 = (function (x,y){
return (x / y);
});
var unchecked_divide_int__3 = (function() { 
var G__27229__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_divide_int,unchecked_divide_int.cljs$core$IFn$_invoke$arity$2(x,y),more);
};
var G__27229 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__27230__i = 0, G__27230__a = new Array(arguments.length -  2);
while (G__27230__i < G__27230__a.length) {G__27230__a[G__27230__i] = arguments[G__27230__i + 2]; ++G__27230__i;}
  more = new cljs.core.IndexedSeq(G__27230__a,0);
} 
return G__27229__delegate.call(this,x,y,more);};
G__27229.cljs$lang$maxFixedArity = 2;
G__27229.cljs$lang$applyTo = (function (arglist__27231){
var x = cljs.core.first(arglist__27231);
arglist__27231 = cljs.core.next(arglist__27231);
var y = cljs.core.first(arglist__27231);
var more = cljs.core.rest(arglist__27231);
return G__27229__delegate(x,y,more);
});
G__27229.cljs$core$IFn$_invoke$arity$variadic = G__27229__delegate;
return G__27229;
})()
;
unchecked_divide_int = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return unchecked_divide_int__1.call(this,x);
case 2:
return unchecked_divide_int__2.call(this,x,y);
default:
var G__27232 = null;
if (arguments.length > 2) {
var G__27233__i = 0, G__27233__a = new Array(arguments.length -  2);
while (G__27233__i < G__27233__a.length) {G__27233__a[G__27233__i] = arguments[G__27233__i + 2]; ++G__27233__i;}
G__27232 = new cljs.core.IndexedSeq(G__27233__a,0);
}
return unchecked_divide_int__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__27232);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
unchecked_divide_int.cljs$lang$maxFixedArity = 2;
unchecked_divide_int.cljs$lang$applyTo = unchecked_divide_int__3.cljs$lang$applyTo;
unchecked_divide_int.cljs$core$IFn$_invoke$arity$1 = unchecked_divide_int__1;
unchecked_divide_int.cljs$core$IFn$_invoke$arity$2 = unchecked_divide_int__2;
unchecked_divide_int.cljs$core$IFn$_invoke$arity$variadic = unchecked_divide_int__3.cljs$core$IFn$_invoke$arity$variadic;
return unchecked_divide_int;
})()
;
cljs.core.unchecked_inc = (function unchecked_inc(x){
return (x + (1));
});
cljs.core.unchecked_inc_int = (function unchecked_inc_int(x){
return (x + (1));
});
/**
* Returns the product of nums. (*) returns 1.
* @param {...*} var_args
*/
cljs.core.unchecked_multiply = (function() {
var unchecked_multiply = null;
var unchecked_multiply__0 = (function (){
return (1);
});
var unchecked_multiply__1 = (function (x){
return x;
});
var unchecked_multiply__2 = (function (x,y){
return (x * y);
});
var unchecked_multiply__3 = (function() { 
var G__27234__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_multiply,(x * y),more);
};
var G__27234 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__27235__i = 0, G__27235__a = new Array(arguments.length -  2);
while (G__27235__i < G__27235__a.length) {G__27235__a[G__27235__i] = arguments[G__27235__i + 2]; ++G__27235__i;}
  more = new cljs.core.IndexedSeq(G__27235__a,0);
} 
return G__27234__delegate.call(this,x,y,more);};
G__27234.cljs$lang$maxFixedArity = 2;
G__27234.cljs$lang$applyTo = (function (arglist__27236){
var x = cljs.core.first(arglist__27236);
arglist__27236 = cljs.core.next(arglist__27236);
var y = cljs.core.first(arglist__27236);
var more = cljs.core.rest(arglist__27236);
return G__27234__delegate(x,y,more);
});
G__27234.cljs$core$IFn$_invoke$arity$variadic = G__27234__delegate;
return G__27234;
})()
;
unchecked_multiply = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 0:
return unchecked_multiply__0.call(this);
case 1:
return unchecked_multiply__1.call(this,x);
case 2:
return unchecked_multiply__2.call(this,x,y);
default:
var G__27237 = null;
if (arguments.length > 2) {
var G__27238__i = 0, G__27238__a = new Array(arguments.length -  2);
while (G__27238__i < G__27238__a.length) {G__27238__a[G__27238__i] = arguments[G__27238__i + 2]; ++G__27238__i;}
G__27237 = new cljs.core.IndexedSeq(G__27238__a,0);
}
return unchecked_multiply__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__27237);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
unchecked_multiply.cljs$lang$maxFixedArity = 2;
unchecked_multiply.cljs$lang$applyTo = unchecked_multiply__3.cljs$lang$applyTo;
unchecked_multiply.cljs$core$IFn$_invoke$arity$0 = unchecked_multiply__0;
unchecked_multiply.cljs$core$IFn$_invoke$arity$1 = unchecked_multiply__1;
unchecked_multiply.cljs$core$IFn$_invoke$arity$2 = unchecked_multiply__2;
unchecked_multiply.cljs$core$IFn$_invoke$arity$variadic = unchecked_multiply__3.cljs$core$IFn$_invoke$arity$variadic;
return unchecked_multiply;
})()
;
/**
* Returns the product of nums. (*) returns 1.
* @param {...*} var_args
*/
cljs.core.unchecked_multiply_int = (function() {
var unchecked_multiply_int = null;
var unchecked_multiply_int__0 = (function (){
return (1);
});
var unchecked_multiply_int__1 = (function (x){
return x;
});
var unchecked_multiply_int__2 = (function (x,y){
return (x * y);
});
var unchecked_multiply_int__3 = (function() { 
var G__27239__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_multiply_int,(x * y),more);
};
var G__27239 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__27240__i = 0, G__27240__a = new Array(arguments.length -  2);
while (G__27240__i < G__27240__a.length) {G__27240__a[G__27240__i] = arguments[G__27240__i + 2]; ++G__27240__i;}
  more = new cljs.core.IndexedSeq(G__27240__a,0);
} 
return G__27239__delegate.call(this,x,y,more);};
G__27239.cljs$lang$maxFixedArity = 2;
G__27239.cljs$lang$applyTo = (function (arglist__27241){
var x = cljs.core.first(arglist__27241);
arglist__27241 = cljs.core.next(arglist__27241);
var y = cljs.core.first(arglist__27241);
var more = cljs.core.rest(arglist__27241);
return G__27239__delegate(x,y,more);
});
G__27239.cljs$core$IFn$_invoke$arity$variadic = G__27239__delegate;
return G__27239;
})()
;
unchecked_multiply_int = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 0:
return unchecked_multiply_int__0.call(this);
case 1:
return unchecked_multiply_int__1.call(this,x);
case 2:
return unchecked_multiply_int__2.call(this,x,y);
default:
var G__27242 = null;
if (arguments.length > 2) {
var G__27243__i = 0, G__27243__a = new Array(arguments.length -  2);
while (G__27243__i < G__27243__a.length) {G__27243__a[G__27243__i] = arguments[G__27243__i + 2]; ++G__27243__i;}
G__27242 = new cljs.core.IndexedSeq(G__27243__a,0);
}
return unchecked_multiply_int__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__27242);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
unchecked_multiply_int.cljs$lang$maxFixedArity = 2;
unchecked_multiply_int.cljs$lang$applyTo = unchecked_multiply_int__3.cljs$lang$applyTo;
unchecked_multiply_int.cljs$core$IFn$_invoke$arity$0 = unchecked_multiply_int__0;
unchecked_multiply_int.cljs$core$IFn$_invoke$arity$1 = unchecked_multiply_int__1;
unchecked_multiply_int.cljs$core$IFn$_invoke$arity$2 = unchecked_multiply_int__2;
unchecked_multiply_int.cljs$core$IFn$_invoke$arity$variadic = unchecked_multiply_int__3.cljs$core$IFn$_invoke$arity$variadic;
return unchecked_multiply_int;
})()
;
cljs.core.unchecked_negate = (function unchecked_negate(x){
return (- x);
});
cljs.core.unchecked_negate_int = (function unchecked_negate_int(x){
return (- x);
});
cljs.core.unchecked_remainder_int = (function unchecked_remainder_int(x,n){
var G__27246 = x;
var G__27247 = n;
return (cljs.core.mod.cljs$core$IFn$_invoke$arity$2 ? cljs.core.mod.cljs$core$IFn$_invoke$arity$2(G__27246,G__27247) : cljs.core.mod.call(null,G__27246,G__27247));
});
/**
* If no ys are supplied, returns the negation of x, else subtracts
* the ys from x and returns the result.
* @param {...*} var_args
*/
cljs.core.unchecked_subtract = (function() {
var unchecked_subtract = null;
var unchecked_subtract__1 = (function (x){
return (- x);
});
var unchecked_subtract__2 = (function (x,y){
return (x - y);
});
var unchecked_subtract__3 = (function() { 
var G__27248__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_subtract,(x - y),more);
};
var G__27248 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__27249__i = 0, G__27249__a = new Array(arguments.length -  2);
while (G__27249__i < G__27249__a.length) {G__27249__a[G__27249__i] = arguments[G__27249__i + 2]; ++G__27249__i;}
  more = new cljs.core.IndexedSeq(G__27249__a,0);
} 
return G__27248__delegate.call(this,x,y,more);};
G__27248.cljs$lang$maxFixedArity = 2;
G__27248.cljs$lang$applyTo = (function (arglist__27250){
var x = cljs.core.first(arglist__27250);
arglist__27250 = cljs.core.next(arglist__27250);
var y = cljs.core.first(arglist__27250);
var more = cljs.core.rest(arglist__27250);
return G__27248__delegate(x,y,more);
});
G__27248.cljs$core$IFn$_invoke$arity$variadic = G__27248__delegate;
return G__27248;
})()
;
unchecked_subtract = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return unchecked_subtract__1.call(this,x);
case 2:
return unchecked_subtract__2.call(this,x,y);
default:
var G__27251 = null;
if (arguments.length > 2) {
var G__27252__i = 0, G__27252__a = new Array(arguments.length -  2);
while (G__27252__i < G__27252__a.length) {G__27252__a[G__27252__i] = arguments[G__27252__i + 2]; ++G__27252__i;}
G__27251 = new cljs.core.IndexedSeq(G__27252__a,0);
}
return unchecked_subtract__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__27251);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
unchecked_subtract.cljs$lang$maxFixedArity = 2;
unchecked_subtract.cljs$lang$applyTo = unchecked_subtract__3.cljs$lang$applyTo;
unchecked_subtract.cljs$core$IFn$_invoke$arity$1 = unchecked_subtract__1;
unchecked_subtract.cljs$core$IFn$_invoke$arity$2 = unchecked_subtract__2;
unchecked_subtract.cljs$core$IFn$_invoke$arity$variadic = unchecked_subtract__3.cljs$core$IFn$_invoke$arity$variadic;
return unchecked_subtract;
})()
;
/**
* If no ys are supplied, returns the negation of x, else subtracts
* the ys from x and returns the result.
* @param {...*} var_args
*/
cljs.core.unchecked_subtract_int = (function() {
var unchecked_subtract_int = null;
var unchecked_subtract_int__1 = (function (x){
return (- x);
});
var unchecked_subtract_int__2 = (function (x,y){
return (x - y);
});
var unchecked_subtract_int__3 = (function() { 
var G__27253__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_subtract_int,(x - y),more);
};
var G__27253 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__27254__i = 0, G__27254__a = new Array(arguments.length -  2);
while (G__27254__i < G__27254__a.length) {G__27254__a[G__27254__i] = arguments[G__27254__i + 2]; ++G__27254__i;}
  more = new cljs.core.IndexedSeq(G__27254__a,0);
} 
return G__27253__delegate.call(this,x,y,more);};
G__27253.cljs$lang$maxFixedArity = 2;
G__27253.cljs$lang$applyTo = (function (arglist__27255){
var x = cljs.core.first(arglist__27255);
arglist__27255 = cljs.core.next(arglist__27255);
var y = cljs.core.first(arglist__27255);
var more = cljs.core.rest(arglist__27255);
return G__27253__delegate(x,y,more);
});
G__27253.cljs$core$IFn$_invoke$arity$variadic = G__27253__delegate;
return G__27253;
})()
;
unchecked_subtract_int = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return unchecked_subtract_int__1.call(this,x);
case 2:
return unchecked_subtract_int__2.call(this,x,y);
default:
var G__27256 = null;
if (arguments.length > 2) {
var G__27257__i = 0, G__27257__a = new Array(arguments.length -  2);
while (G__27257__i < G__27257__a.length) {G__27257__a[G__27257__i] = arguments[G__27257__i + 2]; ++G__27257__i;}
G__27256 = new cljs.core.IndexedSeq(G__27257__a,0);
}
return unchecked_subtract_int__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__27256);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
unchecked_subtract_int.cljs$lang$maxFixedArity = 2;
unchecked_subtract_int.cljs$lang$applyTo = unchecked_subtract_int__3.cljs$lang$applyTo;
unchecked_subtract_int.cljs$core$IFn$_invoke$arity$1 = unchecked_subtract_int__1;
unchecked_subtract_int.cljs$core$IFn$_invoke$arity$2 = unchecked_subtract_int__2;
unchecked_subtract_int.cljs$core$IFn$_invoke$arity$variadic = unchecked_subtract_int__3.cljs$core$IFn$_invoke$arity$variadic;
return unchecked_subtract_int;
})()
;
cljs.core.fix = (function fix(q){
if((q >= (0))){
var G__27260 = q;
return (Math.floor.cljs$core$IFn$_invoke$arity$1 ? Math.floor.cljs$core$IFn$_invoke$arity$1(G__27260) : Math.floor.call(null,G__27260));
} else {
var G__27261 = q;
return (Math.ceil.cljs$core$IFn$_invoke$arity$1 ? Math.ceil.cljs$core$IFn$_invoke$arity$1(G__27261) : Math.ceil.call(null,G__27261));
}
});
/**
* Coerce to int by stripping decimal places.
*/
cljs.core.int$ = (function int$(x){
return (x | (0));
});
/**
* Coerce to int by stripping decimal places.
*/
cljs.core.unchecked_int = (function unchecked_int(x){
return cljs.core.fix(x);
});
/**
* Coerce to long by stripping decimal places. Identical to `int'.
*/
cljs.core.long$ = (function long$(x){
return cljs.core.fix(x);
});
/**
* Coerce to long by stripping decimal places. Identical to `int'.
*/
cljs.core.unchecked_long = (function unchecked_long(x){
return cljs.core.fix(x);
});
cljs.core.booleans = (function booleans(x){
return x;
});
cljs.core.bytes = (function bytes(x){
return x;
});
cljs.core.chars = (function chars(x){
return x;
});
cljs.core.shorts = (function shorts(x){
return x;
});
cljs.core.ints = (function ints(x){
return x;
});
cljs.core.floats = (function floats(x){
return x;
});
cljs.core.doubles = (function doubles(x){
return x;
});
cljs.core.longs = (function longs(x){
return x;
});
/**
* Modulus of num and div with original javascript behavior. i.e. bug for negative numbers
*/
cljs.core.js_mod = (function js_mod(n,d){
return (n % d);
});
/**
* Modulus of num and div. Truncates toward negative infinity.
*/
cljs.core.mod = (function mod(n,d){
return (((n % d) + d) % d);
});
/**
* quot[ient] of dividing numerator by denominator.
*/
cljs.core.quot = (function quot(n,d){
var rem = (n % d);
return cljs.core.fix(((n - rem) / d));
});
/**
* remainder of dividing numerator by denominator.
*/
cljs.core.rem = (function rem(n,d){
var q = cljs.core.quot(n,d);
return (n - (d * q));
});
/**
* Bitwise exclusive or
*/
cljs.core.bit_xor = (function bit_xor(x,y){
return (x ^ y);
});
/**
* Bitwise and
*/
cljs.core.bit_and = (function bit_and(x,y){
return (x & y);
});
/**
* Bitwise or
*/
cljs.core.bit_or = (function bit_or(x,y){
return (x | y);
});
/**
* Bitwise and
*/
cljs.core.bit_and_not = (function bit_and_not(x,y){
return (x & ~y);
});
/**
* Clear bit at index n
*/
cljs.core.bit_clear = (function bit_clear(x,n){
return (x & ~(1 << n));
});
/**
* Flip bit at index n
*/
cljs.core.bit_flip = (function bit_flip(x,n){
return (x ^ (1 << n));
});
/**
* Bitwise complement
*/
cljs.core.bit_not = (function bit_not(x){
return (~ x);
});
/**
* Set bit at index n
*/
cljs.core.bit_set = (function bit_set(x,n){
return (x | (1 << n));
});
/**
* Test bit at index n
*/
cljs.core.bit_test = (function bit_test(x,n){
return ((x & (1 << n)) != 0);
});
/**
* Bitwise shift left
*/
cljs.core.bit_shift_left = (function bit_shift_left(x,n){
return (x << n);
});
/**
* Bitwise shift right
*/
cljs.core.bit_shift_right = (function bit_shift_right(x,n){
return (x >> n);
});
/**
* DEPRECATED: Bitwise shift right with zero fill
*/
cljs.core.bit_shift_right_zero_fill = (function bit_shift_right_zero_fill(x,n){
return (x >>> n);
});
/**
* Bitwise shift right with zero fill
*/
cljs.core.unsigned_bit_shift_right = (function unsigned_bit_shift_right(x,n){
return (x >>> n);
});
/**
* Counts the number of bits set in n
*/
cljs.core.bit_count = (function bit_count(v){
var v__$1 = (v - ((v >> (1)) & (1431655765)));
var v__$2 = ((v__$1 & (858993459)) + ((v__$1 >> (2)) & (858993459)));
return ((((v__$2 + (v__$2 >> (4))) & (252645135)) * (16843009)) >> (24));
});
/**
* Returns non-nil if nums all have the equivalent
* value, otherwise false. Behavior on non nums is
* undefined.
* @param {...*} var_args
*/
cljs.core._EQ__EQ_ = (function() {
var _EQ__EQ_ = null;
var _EQ__EQ___1 = (function (x){
return true;
});
var _EQ__EQ___2 = (function (x,y){
return cljs.core._equiv(x,y);
});
var _EQ__EQ___3 = (function() { 
var G__27266__delegate = function (x,y,more){
while(true){
if(_EQ__EQ_.cljs$core$IFn$_invoke$arity$2(x,y)){
if(cljs.core.next(more)){
var G__27267 = y;
var G__27268 = cljs.core.first(more);
var G__27269 = cljs.core.next(more);
x = G__27267;
y = G__27268;
more = G__27269;
continue;
} else {
return _EQ__EQ_.cljs$core$IFn$_invoke$arity$2(y,cljs.core.first(more));
}
} else {
return false;
}
break;
}
};
var G__27266 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__27270__i = 0, G__27270__a = new Array(arguments.length -  2);
while (G__27270__i < G__27270__a.length) {G__27270__a[G__27270__i] = arguments[G__27270__i + 2]; ++G__27270__i;}
  more = new cljs.core.IndexedSeq(G__27270__a,0);
} 
return G__27266__delegate.call(this,x,y,more);};
G__27266.cljs$lang$maxFixedArity = 2;
G__27266.cljs$lang$applyTo = (function (arglist__27271){
var x = cljs.core.first(arglist__27271);
arglist__27271 = cljs.core.next(arglist__27271);
var y = cljs.core.first(arglist__27271);
var more = cljs.core.rest(arglist__27271);
return G__27266__delegate(x,y,more);
});
G__27266.cljs$core$IFn$_invoke$arity$variadic = G__27266__delegate;
return G__27266;
})()
;
_EQ__EQ_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return _EQ__EQ___1.call(this,x);
case 2:
return _EQ__EQ___2.call(this,x,y);
default:
var G__27272 = null;
if (arguments.length > 2) {
var G__27273__i = 0, G__27273__a = new Array(arguments.length -  2);
while (G__27273__i < G__27273__a.length) {G__27273__a[G__27273__i] = arguments[G__27273__i + 2]; ++G__27273__i;}
G__27272 = new cljs.core.IndexedSeq(G__27273__a,0);
}
return _EQ__EQ___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__27272);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_EQ__EQ_.cljs$lang$maxFixedArity = 2;
_EQ__EQ_.cljs$lang$applyTo = _EQ__EQ___3.cljs$lang$applyTo;
_EQ__EQ_.cljs$core$IFn$_invoke$arity$1 = _EQ__EQ___1;
_EQ__EQ_.cljs$core$IFn$_invoke$arity$2 = _EQ__EQ___2;
_EQ__EQ_.cljs$core$IFn$_invoke$arity$variadic = _EQ__EQ___3.cljs$core$IFn$_invoke$arity$variadic;
return _EQ__EQ_;
})()
;
/**
* Returns true if num is greater than zero, else false
*/
cljs.core.pos_QMARK_ = (function pos_QMARK_(n){
return (n > (0));
});
cljs.core.zero_QMARK_ = (function zero_QMARK_(n){
return (n === (0));
});
/**
* Returns true if num is less than zero, else false
*/
cljs.core.neg_QMARK_ = (function neg_QMARK_(x){
return (x < (0));
});
/**
* Returns the nth next of coll, (seq coll) when n is 0.
*/
cljs.core.nthnext = (function nthnext(coll,n){
var n__$1 = n;
var xs = cljs.core.seq(coll);
while(true){
if((xs) && ((n__$1 > (0)))){
var G__27274 = (n__$1 - (1));
var G__27275 = cljs.core.next(xs);
n__$1 = G__27274;
xs = G__27275;
continue;
} else {
return xs;
}
break;
}
});
/**
* With no args, returns the empty string. With one arg x, returns
* x.toString().  (str nil) returns the empty string. With more than
* one arg, returns the concatenation of the str values of the args.
* @param {...*} var_args
*/
cljs.core.str = (function() {
var str = null;
var str__0 = (function (){
return "";
});
var str__1 = (function (x){
if((x == null)){
return "";
} else {
var G__27279 = x;
return goog.string.buildString(G__27279);
}
});
var str__2 = (function() { 
var G__27280__delegate = function (x,ys){
var sb = (new goog.string.StringBuffer(str.cljs$core$IFn$_invoke$arity$1(x)));
var more = ys;
while(true){
if(cljs.core.truth_(more)){
var G__27281 = sb.append(str.cljs$core$IFn$_invoke$arity$1(cljs.core.first(more)));
var G__27282 = cljs.core.next(more);
sb = G__27281;
more = G__27282;
continue;
} else {
return sb.toString();
}
break;
}
};
var G__27280 = function (x,var_args){
var ys = null;
if (arguments.length > 1) {
var G__27283__i = 0, G__27283__a = new Array(arguments.length -  1);
while (G__27283__i < G__27283__a.length) {G__27283__a[G__27283__i] = arguments[G__27283__i + 1]; ++G__27283__i;}
  ys = new cljs.core.IndexedSeq(G__27283__a,0);
} 
return G__27280__delegate.call(this,x,ys);};
G__27280.cljs$lang$maxFixedArity = 1;
G__27280.cljs$lang$applyTo = (function (arglist__27284){
var x = cljs.core.first(arglist__27284);
var ys = cljs.core.rest(arglist__27284);
return G__27280__delegate(x,ys);
});
G__27280.cljs$core$IFn$_invoke$arity$variadic = G__27280__delegate;
return G__27280;
})()
;
str = function(x,var_args){
var ys = var_args;
switch(arguments.length){
case 0:
return str__0.call(this);
case 1:
return str__1.call(this,x);
default:
var G__27285 = null;
if (arguments.length > 1) {
var G__27286__i = 0, G__27286__a = new Array(arguments.length -  1);
while (G__27286__i < G__27286__a.length) {G__27286__a[G__27286__i] = arguments[G__27286__i + 1]; ++G__27286__i;}
G__27285 = new cljs.core.IndexedSeq(G__27286__a,0);
}
return str__2.cljs$core$IFn$_invoke$arity$variadic(x, G__27285);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
str.cljs$lang$maxFixedArity = 1;
str.cljs$lang$applyTo = str__2.cljs$lang$applyTo;
str.cljs$core$IFn$_invoke$arity$0 = str__0;
str.cljs$core$IFn$_invoke$arity$1 = str__1;
str.cljs$core$IFn$_invoke$arity$variadic = str__2.cljs$core$IFn$_invoke$arity$variadic;
return str;
})()
;
/**
* Returns the substring of s beginning at start inclusive, and ending
* at end (defaults to length of string), exclusive.
*/
cljs.core.subs = (function() {
var subs = null;
var subs__2 = (function (s,start){
return s.substring(start);
});
var subs__3 = (function (s,start,end){
return s.substring(start,end);
});
subs = function(s,start,end){
switch(arguments.length){
case 2:
return subs__2.call(this,s,start);
case 3:
return subs__3.call(this,s,start,end);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
subs.cljs$core$IFn$_invoke$arity$2 = subs__2;
subs.cljs$core$IFn$_invoke$arity$3 = subs__3;
return subs;
})()
;

/**
* Assumes x is sequential. Returns true if x equals y, otherwise
* returns false.
*/
cljs.core.equiv_sequential = (function equiv_sequential(x,y){
return cljs.core.boolean$(((cljs.core.sequential_QMARK_(y))?(((cljs.core.counted_QMARK_(x)) && (cljs.core.counted_QMARK_(y)) && (!((cljs.core.count(x) === cljs.core.count(y)))))?false:(function (){var xs = cljs.core.seq(x);
var ys = cljs.core.seq(y);
while(true){
if((xs == null)){
return (ys == null);
} else {
if((ys == null)){
return false;
} else {
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.first(xs),cljs.core.first(ys))){
var G__27287 = cljs.core.next(xs);
var G__27288 = cljs.core.next(ys);
xs = G__27287;
ys = G__27288;
continue;
} else {
return false;

}
}
}
break;
}
})()):null));
});
cljs.core.hash_coll = (function hash_coll(coll){
if(cljs.core.seq(coll)){
var res = cljs.core.hash(cljs.core.first(coll));
var s = cljs.core.next(coll);
while(true){
if((s == null)){
return res;
} else {
var G__27289 = cljs.core.hash_combine(res,cljs.core.hash(cljs.core.first(s)));
var G__27290 = cljs.core.next(s);
res = G__27289;
s = G__27290;
continue;
}
break;
}
} else {
return (0);
}
});

cljs.core.hash_imap = (function hash_imap(m){
var h = (0);
var s = cljs.core.seq(m);
while(true){
if(s){
var e = cljs.core.first(s);
var G__27295 = ((h + (cljs.core.hash((function (){var G__27293 = e;
return (cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__27293) : cljs.core.key.call(null,G__27293));
})()) ^ cljs.core.hash((function (){var G__27294 = e;
return (cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(G__27294) : cljs.core.val.call(null,G__27294));
})()))) % (4503599627370496));
var G__27296 = cljs.core.next(s);
h = G__27295;
s = G__27296;
continue;
} else {
return h;
}
break;
}
});
cljs.core.hash_iset = (function hash_iset(s){
var h = (0);
var s__$1 = cljs.core.seq(s);
while(true){
if(s__$1){
var e = cljs.core.first(s__$1);
var G__27297 = ((h + cljs.core.hash(e)) % (4503599627370496));
var G__27298 = cljs.core.next(s__$1);
h = G__27297;
s__$1 = G__27298;
continue;
} else {
return h;
}
break;
}
});


/**
* Takes a JavaScript object and a map of names to functions and
* attaches said functions as methods on the object.  Any references to
* JavaScript's implicit this (via the this-as macro) will resolve to the
* object that the function is attached.
*/
cljs.core.extend_object_BANG_ = (function extend_object_BANG_(obj,fn_map){
var seq__27309_27319 = cljs.core.seq(fn_map);
var chunk__27310_27320 = null;
var count__27311_27321 = (0);
var i__27312_27322 = (0);
while(true){
if((i__27312_27322 < count__27311_27321)){
var vec__27313_27323 = chunk__27310_27320.cljs$core$IIndexed$_nth$arity$2(null,i__27312_27322);
var key_name_27324 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__27313_27323,(0),null);
var f_27325 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__27313_27323,(1),null);
var str_name_27326 = (function (){var G__27314 = key_name_27324;
return (cljs.core.name.cljs$core$IFn$_invoke$arity$1 ? cljs.core.name.cljs$core$IFn$_invoke$arity$1(G__27314) : cljs.core.name.call(null,G__27314));
})();
(obj[str_name_27326] = f_27325);

var G__27327 = seq__27309_27319;
var G__27328 = chunk__27310_27320;
var G__27329 = count__27311_27321;
var G__27330 = (i__27312_27322 + (1));
seq__27309_27319 = G__27327;
chunk__27310_27320 = G__27328;
count__27311_27321 = G__27329;
i__27312_27322 = G__27330;
continue;
} else {
var temp__4126__auto___27331 = cljs.core.seq(seq__27309_27319);
if(temp__4126__auto___27331){
var seq__27309_27332__$1 = temp__4126__auto___27331;
if(cljs.core.chunked_seq_QMARK_(seq__27309_27332__$1)){
var c__25059__auto___27333 = (function (){var G__27315 = seq__27309_27332__$1;
return (cljs.core.chunk_first.cljs$core$IFn$_invoke$arity$1 ? cljs.core.chunk_first.cljs$core$IFn$_invoke$arity$1(G__27315) : cljs.core.chunk_first.call(null,G__27315));
})();
var G__27334 = (function (){var G__27316 = seq__27309_27332__$1;
return (cljs.core.chunk_rest.cljs$core$IFn$_invoke$arity$1 ? cljs.core.chunk_rest.cljs$core$IFn$_invoke$arity$1(G__27316) : cljs.core.chunk_rest.call(null,G__27316));
})();
var G__27335 = c__25059__auto___27333;
var G__27336 = cljs.core.count(c__25059__auto___27333);
var G__27337 = (0);
seq__27309_27319 = G__27334;
chunk__27310_27320 = G__27335;
count__27311_27321 = G__27336;
i__27312_27322 = G__27337;
continue;
} else {
var vec__27317_27338 = cljs.core.first(seq__27309_27332__$1);
var key_name_27339 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__27317_27338,(0),null);
var f_27340 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__27317_27338,(1),null);
var str_name_27341 = (function (){var G__27318 = key_name_27339;
return (cljs.core.name.cljs$core$IFn$_invoke$arity$1 ? cljs.core.name.cljs$core$IFn$_invoke$arity$1(G__27318) : cljs.core.name.call(null,G__27318));
})();
(obj[str_name_27341] = f_27340);

var G__27342 = cljs.core.next(seq__27309_27332__$1);
var G__27343 = null;
var G__27344 = (0);
var G__27345 = (0);
seq__27309_27319 = G__27342;
chunk__27310_27320 = G__27343;
count__27311_27321 = G__27344;
i__27312_27322 = G__27345;
continue;
}
} else {
}
}
break;
}

return obj;
});

/**
* @constructor
*/
cljs.core.List = (function (meta,first,rest,count,__hash){
this.meta = meta;
this.first = first;
this.rest = rest;
this.count = count;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 65937646;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.List.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.List.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.List.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.List.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.List(self__.meta,self__.first,self__.rest,self__.count,self__.__hash));
});

cljs.core.List.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.count === (1))){
return null;
} else {
return self__.rest;
}
});

cljs.core.List.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.count;
});

cljs.core.List.prototype.cljs$core$IStack$_peek$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.first;
});

cljs.core.List.prototype.cljs$core$IStack$_pop$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._rest(coll__$1);
});

cljs.core.List.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__24693__auto__ = self__.__hash;
if(!((h__24693__auto__ == null))){
return h__24693__auto__;
} else {
var h__24693__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__24693__auto____$1;

return h__24693__auto____$1;
}
});

cljs.core.List.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.List.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.List.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.List.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.List.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.first;
});

cljs.core.List.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.count === (1))){
return cljs.core.List.EMPTY;
} else {
return self__.rest;
}
});

cljs.core.List.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.List.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.List(meta__$1,self__.first,self__.rest,self__.count,self__.__hash));
});

cljs.core.List.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.List(self__.meta,o,coll__$1,(self__.count + (1)),null));
});

cljs.core.List.cljs$lang$type = true;

cljs.core.List.cljs$lang$ctorStr = "cljs.core/List";

cljs.core.List.cljs$lang$ctorPrWriter = (function (this__24859__auto__,writer__24860__auto__,opt__24861__auto__){
return cljs.core._write(writer__24860__auto__,"cljs.core/List");
});

cljs.core.__GT_List = (function __GT_List(meta,first,rest,count,__hash){
return (new cljs.core.List(meta,first,rest,count,__hash));
});

(cljs.core.List.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__25250__auto__ = this;
return cljs.core.es6_iterator(this__25250__auto__);
}));

/**
* @constructor
*/
cljs.core.EmptyList = (function (meta){
this.meta = meta;
this.cljs$lang$protocol_mask$partition0$ = 65937614;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.EmptyList.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.EmptyList.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.EmptyList.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.EmptyList.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.EmptyList(self__.meta));
});

cljs.core.EmptyList.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return null;
});

cljs.core.EmptyList.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (0);
});

cljs.core.EmptyList.prototype.cljs$core$IStack$_peek$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return null;
});

cljs.core.EmptyList.prototype.cljs$core$IStack$_pop$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
throw (new Error("Can't pop empty list"));
});

cljs.core.EmptyList.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (0);
});

cljs.core.EmptyList.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.EmptyList.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.EmptyList.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.EmptyList.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.EmptyList.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return null;
});

cljs.core.EmptyList.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.List.EMPTY;
});

cljs.core.EmptyList.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return null;
});

cljs.core.EmptyList.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.EmptyList(meta__$1));
});

cljs.core.EmptyList.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.List(self__.meta,o,null,(1),null));
});

cljs.core.EmptyList.cljs$lang$type = true;

cljs.core.EmptyList.cljs$lang$ctorStr = "cljs.core/EmptyList";

cljs.core.EmptyList.cljs$lang$ctorPrWriter = (function (this__24859__auto__,writer__24860__auto__,opt__24861__auto__){
return cljs.core._write(writer__24860__auto__,"cljs.core/EmptyList");
});

cljs.core.__GT_EmptyList = (function __GT_EmptyList(meta){
return (new cljs.core.EmptyList(meta));
});

cljs.core.List.EMPTY = (new cljs.core.EmptyList(null));
(cljs.core.EmptyList.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__25250__auto__ = this;
return cljs.core.es6_iterator(this__25250__auto__);
}));
cljs.core.reversible_QMARK_ = (function reversible_QMARK_(coll){
var G__27347 = coll;
if(G__27347){
var bit__24953__auto__ = (G__27347.cljs$lang$protocol_mask$partition0$ & (134217728));
if((bit__24953__auto__) || (G__27347.cljs$core$IReversible$)){
return true;
} else {
if((!G__27347.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IReversible,G__27347);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IReversible,G__27347);
}
});
cljs.core.rseq = (function rseq(coll){
return cljs.core._rseq(coll);
});
/**
* Returns a seq of the items in coll in reverse order. Not lazy.
*/
cljs.core.reverse = (function reverse(coll){
if(cljs.core.reversible_QMARK_(coll)){
return cljs.core.rseq(coll);
} else {
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.conj,cljs.core.List.EMPTY,coll);
}
});
/**
* @param {...*} var_args
*/
cljs.core.list = (function() { 
var list__delegate = function (xs){
var arr = ((((xs instanceof cljs.core.IndexedSeq)) && ((xs.i === (0))))?xs.arr:(function (){var arr = [];
var xs__$1 = xs;
while(true){
if(!((xs__$1 == null))){
arr.push(xs__$1.cljs$core$ISeq$_first$arity$1(null));

var G__27348 = xs__$1.cljs$core$INext$_next$arity$1(null);
xs__$1 = G__27348;
continue;
} else {
return arr;
}
break;
}
})());
var i = arr.length;
var r = cljs.core.List.EMPTY;
while(true){
if((i > (0))){
var G__27349 = (i - (1));
var G__27350 = r.cljs$core$ICollection$_conj$arity$2(null,(arr[(i - (1))]));
i = G__27349;
r = G__27350;
continue;
} else {
return r;
}
break;
}
};
var list = function (var_args){
var xs = null;
if (arguments.length > 0) {
var G__27351__i = 0, G__27351__a = new Array(arguments.length -  0);
while (G__27351__i < G__27351__a.length) {G__27351__a[G__27351__i] = arguments[G__27351__i + 0]; ++G__27351__i;}
  xs = new cljs.core.IndexedSeq(G__27351__a,0);
} 
return list__delegate.call(this,xs);};
list.cljs$lang$maxFixedArity = 0;
list.cljs$lang$applyTo = (function (arglist__27352){
var xs = cljs.core.seq(arglist__27352);
return list__delegate(xs);
});
list.cljs$core$IFn$_invoke$arity$variadic = list__delegate;
return list;
})()
;

/**
* @constructor
*/
cljs.core.Cons = (function (meta,first,rest,__hash){
this.meta = meta;
this.first = first;
this.rest = rest;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 65929452;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.Cons.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.Cons.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.Cons.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.Cons.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.Cons(self__.meta,self__.first,self__.rest,self__.__hash));
});

cljs.core.Cons.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.rest == null)){
return null;
} else {
return cljs.core.seq(self__.rest);
}
});

cljs.core.Cons.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__24693__auto__ = self__.__hash;
if(!((h__24693__auto__ == null))){
return h__24693__auto__;
} else {
var h__24693__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__24693__auto____$1;

return h__24693__auto____$1;
}
});

cljs.core.Cons.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.Cons.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.Cons.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.Cons.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.Cons.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.first;
});

cljs.core.Cons.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.rest == null)){
return cljs.core.List.EMPTY;
} else {
return self__.rest;
}
});

cljs.core.Cons.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.Cons.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.Cons(meta__$1,self__.first,self__.rest,self__.__hash));
});

cljs.core.Cons.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.Cons(null,o,coll__$1,self__.__hash));
});

cljs.core.Cons.cljs$lang$type = true;

cljs.core.Cons.cljs$lang$ctorStr = "cljs.core/Cons";

cljs.core.Cons.cljs$lang$ctorPrWriter = (function (this__24859__auto__,writer__24860__auto__,opt__24861__auto__){
return cljs.core._write(writer__24860__auto__,"cljs.core/Cons");
});

cljs.core.__GT_Cons = (function __GT_Cons(meta,first,rest,__hash){
return (new cljs.core.Cons(meta,first,rest,__hash));
});

(cljs.core.Cons.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__25250__auto__ = this;
return cljs.core.es6_iterator(this__25250__auto__);
}));
/**
* Returns a new seq where x is the first element and seq is the rest.
*/
cljs.core.cons = (function cons(x,coll){
if((function (){var or__24272__auto__ = (coll == null);
if(or__24272__auto__){
return or__24272__auto__;
} else {
var G__27356 = coll;
if(G__27356){
var bit__24946__auto__ = (G__27356.cljs$lang$protocol_mask$partition0$ & (64));
if((bit__24946__auto__) || (G__27356.cljs$core$ISeq$)){
return true;
} else {
return false;
}
} else {
return false;
}
}
})()){
return (new cljs.core.Cons(null,x,coll,null));
} else {
return (new cljs.core.Cons(null,x,cljs.core.seq(coll),null));
}
});
cljs.core.list_QMARK_ = (function list_QMARK_(x){
var G__27358 = x;
if(G__27358){
var bit__24953__auto__ = (G__27358.cljs$lang$protocol_mask$partition0$ & (33554432));
if((bit__24953__auto__) || (G__27358.cljs$core$IList$)){
return true;
} else {
if((!G__27358.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IList,G__27358);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IList,G__27358);
}
});
cljs.core.hash_keyword = (function hash_keyword(k){
return ((cljs.core.hash_symbol(k) + (2654435769)) | (0));
});
cljs.core.compare_keywords = (function compare_keywords(a,b){
if((a.fqn === b.fqn)){
return (0);
} else {
if(cljs.core.truth_((function (){var and__24260__auto__ = cljs.core.not(a.ns);
if(and__24260__auto__){
return b.ns;
} else {
return and__24260__auto__;
}
})())){
return (-1);
} else {
if(cljs.core.truth_(a.ns)){
if(cljs.core.not(b.ns)){
return (1);
} else {
var nsc = (function (){var G__27365 = a.ns;
var G__27366 = b.ns;
return goog.array.defaultCompare(G__27365,G__27366);
})();
if(((0) === nsc)){
var G__27367 = a.name;
var G__27368 = b.name;
return goog.array.defaultCompare(G__27367,G__27368);
} else {
return nsc;
}
}
} else {
var G__27369 = a.name;
var G__27370 = b.name;
return goog.array.defaultCompare(G__27369,G__27370);

}
}
}
});

/**
* @constructor
*/
cljs.core.Keyword = (function (ns,name,fqn,_hash){
this.ns = ns;
this.name = name;
this.fqn = fqn;
this._hash = _hash;
this.cljs$lang$protocol_mask$partition0$ = 2153775105;
this.cljs$lang$protocol_mask$partition1$ = 4096;
})
cljs.core.Keyword.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (o,writer,_){
var self__ = this;
var o__$1 = this;
return cljs.core._write(writer,[cljs.core.str(":"),cljs.core.str(self__.fqn)].join(''));
});

cljs.core.Keyword.prototype.cljs$core$INamed$_name$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.name;
});

cljs.core.Keyword.prototype.cljs$core$INamed$_namespace$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.ns;
});

cljs.core.Keyword.prototype.cljs$core$IHash$_hash$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
var h__24693__auto__ = self__._hash;
if(!((h__24693__auto__ == null))){
return h__24693__auto__;
} else {
var h__24693__auto____$1 = cljs.core.hash_keyword(this$__$1);
self__._hash = h__24693__auto____$1;

return h__24693__auto____$1;
}
});

cljs.core.Keyword.prototype.call = (function() {
var G__27372 = null;
var G__27372__2 = (function (self__,coll){
var self__ = this;
var self____$1 = this;
var kw = self____$1;
return cljs.core.get.cljs$core$IFn$_invoke$arity$2(coll,kw);
});
var G__27372__3 = (function (self__,coll,not_found){
var self__ = this;
var self____$1 = this;
var kw = self____$1;
return cljs.core.get.cljs$core$IFn$_invoke$arity$3(coll,kw,not_found);
});
G__27372 = function(self__,coll,not_found){
switch(arguments.length){
case 2:
return G__27372__2.call(this,self__,coll);
case 3:
return G__27372__3.call(this,self__,coll,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__27372.cljs$core$IFn$_invoke$arity$2 = G__27372__2;
G__27372.cljs$core$IFn$_invoke$arity$3 = G__27372__3;
return G__27372;
})()
;

cljs.core.Keyword.prototype.apply = (function (self__,args27371){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args27371)));
});

cljs.core.Keyword.prototype.cljs$core$IFn$_invoke$arity$1 = (function (coll){
var self__ = this;
var kw = this;
return cljs.core.get.cljs$core$IFn$_invoke$arity$2(coll,kw);
});

cljs.core.Keyword.prototype.cljs$core$IFn$_invoke$arity$2 = (function (coll,not_found){
var self__ = this;
var kw = this;
return cljs.core.get.cljs$core$IFn$_invoke$arity$3(coll,kw,not_found);
});

cljs.core.Keyword.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (_,other){
var self__ = this;
var ___$1 = this;
if((other instanceof cljs.core.Keyword)){
return (self__.fqn === other.fqn);
} else {
return false;
}
});

cljs.core.Keyword.prototype.toString = (function (){
var self__ = this;
var _ = this;
return [cljs.core.str(":"),cljs.core.str(self__.fqn)].join('');
});

cljs.core.Keyword.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.Keyword.cljs$lang$type = true;

cljs.core.Keyword.cljs$lang$ctorStr = "cljs.core/Keyword";

cljs.core.Keyword.cljs$lang$ctorPrWriter = (function (this__24859__auto__,writer__24860__auto__,opt__24861__auto__){
return cljs.core._write(writer__24860__auto__,"cljs.core/Keyword");
});

cljs.core.__GT_Keyword = (function __GT_Keyword(ns,name,fqn,_hash){
return (new cljs.core.Keyword(ns,name,fqn,_hash));
});

cljs.core.keyword_QMARK_ = (function keyword_QMARK_(x){
return (x instanceof cljs.core.Keyword);
});
cljs.core.keyword_identical_QMARK_ = (function keyword_identical_QMARK_(x,y){
if((x === y)){
return true;
} else {
if(((x instanceof cljs.core.Keyword)) && ((y instanceof cljs.core.Keyword))){
return (x.fqn === y.fqn);
} else {
return false;
}
}
});
/**
* Returns the namespace String of a symbol or keyword, or nil if not present.
*/
cljs.core.namespace = (function namespace(x){
if((function (){var G__27374 = x;
if(G__27374){
var bit__24946__auto__ = (G__27374.cljs$lang$protocol_mask$partition1$ & (4096));
if((bit__24946__auto__) || (G__27374.cljs$core$INamed$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return x.cljs$core$INamed$_namespace$arity$1(null);
} else {
throw (new Error([cljs.core.str("Doesn't support namespace: "),cljs.core.str(x)].join('')));
}
});
/**
* Returns a Keyword with the given namespace and name.  Do not use :
* in the keyword strings, it will be added automatically.
*/
cljs.core.keyword = (function() {
var keyword = null;
var keyword__1 = (function (name){
if((name instanceof cljs.core.Keyword)){
return name;
} else {
if((name instanceof cljs.core.Symbol)){
return (new cljs.core.Keyword(cljs.core.namespace(name),(function (){var G__27376 = name;
return (cljs.core.name.cljs$core$IFn$_invoke$arity$1 ? cljs.core.name.cljs$core$IFn$_invoke$arity$1(G__27376) : cljs.core.name.call(null,G__27376));
})(),name.str,null));
} else {
if(typeof name === 'string'){
var parts = name.split("/");
if((parts.length === (2))){
return (new cljs.core.Keyword((parts[(0)]),(parts[(1)]),name,null));
} else {
return (new cljs.core.Keyword(null,(parts[(0)]),name,null));
}
} else {
return null;
}
}
}
});
var keyword__2 = (function (ns,name){
return (new cljs.core.Keyword(ns,name,[cljs.core.str((cljs.core.truth_(ns)?[cljs.core.str(ns),cljs.core.str("/")].join(''):null)),cljs.core.str(name)].join(''),null));
});
keyword = function(ns,name){
switch(arguments.length){
case 1:
return keyword__1.call(this,ns);
case 2:
return keyword__2.call(this,ns,name);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
keyword.cljs$core$IFn$_invoke$arity$1 = keyword__1;
keyword.cljs$core$IFn$_invoke$arity$2 = keyword__2;
return keyword;
})()
;

/**
* @constructor
*/
cljs.core.LazySeq = (function (meta,fn,s,__hash){
this.meta = meta;
this.fn = fn;
this.s = s;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32374988;
})
cljs.core.LazySeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.LazySeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.LazySeq.prototype.sval = (function (){
var self__ = this;
var coll = this;
if((self__.fn == null)){
return self__.s;
} else {
self__.s = (function (){return (self__.fn.cljs$core$IFn$_invoke$arity$0 ? self__.fn.cljs$core$IFn$_invoke$arity$0() : self__.fn.call(null));
})();

self__.fn = null;

return self__.s;
}
});

cljs.core.LazySeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.LazySeq.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
cljs.core._seq(coll__$1);

if((self__.s == null)){
return null;
} else {
return cljs.core.next(self__.s);
}
});

cljs.core.LazySeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__24693__auto__ = self__.__hash;
if(!((h__24693__auto__ == null))){
return h__24693__auto__;
} else {
var h__24693__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__24693__auto____$1;

return h__24693__auto____$1;
}
});

cljs.core.LazySeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.LazySeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.LazySeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.LazySeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.LazySeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
cljs.core._seq(coll__$1);

if((self__.s == null)){
return null;
} else {
return cljs.core.first(self__.s);
}
});

cljs.core.LazySeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
cljs.core._seq(coll__$1);

if(!((self__.s == null))){
return cljs.core.rest(self__.s);
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.LazySeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
coll__$1.sval();

if((self__.s == null)){
return null;
} else {
var ls = self__.s;
while(true){
if((ls instanceof cljs.core.LazySeq)){
var G__27377 = ls.sval();
ls = G__27377;
continue;
} else {
self__.s = ls;

return cljs.core.seq(self__.s);
}
break;
}
}
});

cljs.core.LazySeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.LazySeq(meta__$1,self__.fn,self__.s,self__.__hash));
});

cljs.core.LazySeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.LazySeq.cljs$lang$type = true;

cljs.core.LazySeq.cljs$lang$ctorStr = "cljs.core/LazySeq";

cljs.core.LazySeq.cljs$lang$ctorPrWriter = (function (this__24859__auto__,writer__24860__auto__,opt__24861__auto__){
return cljs.core._write(writer__24860__auto__,"cljs.core/LazySeq");
});

cljs.core.__GT_LazySeq = (function __GT_LazySeq(meta,fn,s,__hash){
return (new cljs.core.LazySeq(meta,fn,s,__hash));
});

(cljs.core.LazySeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__25250__auto__ = this;
return cljs.core.es6_iterator(this__25250__auto__);
}));

/**
* @constructor
*/
cljs.core.ChunkBuffer = (function (buf,end){
this.buf = buf;
this.end = end;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 2;
})
cljs.core.ChunkBuffer.prototype.cljs$core$ICounted$_count$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.end;
});

cljs.core.ChunkBuffer.prototype.add = (function (o){
var self__ = this;
var _ = this;
(self__.buf[self__.end] = o);

return self__.end = (self__.end + (1));
});

cljs.core.ChunkBuffer.prototype.chunk = (function (o){
var self__ = this;
var _ = this;
var ret = (new cljs.core.ArrayChunk(self__.buf,(0),self__.end));
self__.buf = null;

return ret;
});

cljs.core.ChunkBuffer.cljs$lang$type = true;

cljs.core.ChunkBuffer.cljs$lang$ctorStr = "cljs.core/ChunkBuffer";

cljs.core.ChunkBuffer.cljs$lang$ctorPrWriter = (function (this__24859__auto__,writer__24860__auto__,opt__24861__auto__){
return cljs.core._write(writer__24860__auto__,"cljs.core/ChunkBuffer");
});

cljs.core.__GT_ChunkBuffer = (function __GT_ChunkBuffer(buf,end){
return (new cljs.core.ChunkBuffer(buf,end));
});

cljs.core.chunk_buffer = (function chunk_buffer(capacity){
return (new cljs.core.ChunkBuffer((new Array(capacity)),(0)));
});

/**
* @constructor
*/
cljs.core.ArrayChunk = (function (arr,off,end){
this.arr = arr;
this.off = off;
this.end = end;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 524306;
})
cljs.core.ArrayChunk.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4(self__.arr,f,(self__.arr[self__.off]),(self__.off + (1)));
});

cljs.core.ArrayChunk.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4(self__.arr,f,start,self__.off);
});

cljs.core.ArrayChunk.prototype.cljs$core$IChunk$ = true;

cljs.core.ArrayChunk.prototype.cljs$core$IChunk$_drop_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.off === self__.end)){
throw (new Error("-drop-first of empty chunk"));
} else {
return (new cljs.core.ArrayChunk(self__.arr,(self__.off + (1)),self__.end));
}
});

cljs.core.ArrayChunk.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (coll,i){
var self__ = this;
var coll__$1 = this;
return (self__.arr[(self__.off + i)]);
});

cljs.core.ArrayChunk.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (coll,i,not_found){
var self__ = this;
var coll__$1 = this;
if(((i >= (0))) && ((i < (self__.end - self__.off)))){
return (self__.arr[(self__.off + i)]);
} else {
return not_found;
}
});

cljs.core.ArrayChunk.prototype.cljs$core$ICounted$_count$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (self__.end - self__.off);
});

cljs.core.ArrayChunk.cljs$lang$type = true;

cljs.core.ArrayChunk.cljs$lang$ctorStr = "cljs.core/ArrayChunk";

cljs.core.ArrayChunk.cljs$lang$ctorPrWriter = (function (this__24859__auto__,writer__24860__auto__,opt__24861__auto__){
return cljs.core._write(writer__24860__auto__,"cljs.core/ArrayChunk");
});

cljs.core.__GT_ArrayChunk = (function __GT_ArrayChunk(arr,off,end){
return (new cljs.core.ArrayChunk(arr,off,end));
});

cljs.core.array_chunk = (function() {
var array_chunk = null;
var array_chunk__1 = (function (arr){
return (new cljs.core.ArrayChunk(arr,(0),arr.length));
});
var array_chunk__2 = (function (arr,off){
return (new cljs.core.ArrayChunk(arr,off,arr.length));
});
var array_chunk__3 = (function (arr,off,end){
return (new cljs.core.ArrayChunk(arr,off,end));
});
array_chunk = function(arr,off,end){
switch(arguments.length){
case 1:
return array_chunk__1.call(this,arr);
case 2:
return array_chunk__2.call(this,arr,off);
case 3:
return array_chunk__3.call(this,arr,off,end);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
array_chunk.cljs$core$IFn$_invoke$arity$1 = array_chunk__1;
array_chunk.cljs$core$IFn$_invoke$arity$2 = array_chunk__2;
array_chunk.cljs$core$IFn$_invoke$arity$3 = array_chunk__3;
return array_chunk;
})()
;

/**
* @constructor
*/
cljs.core.ChunkedCons = (function (chunk,more,meta,__hash){
this.chunk = chunk;
this.more = more;
this.meta = meta;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 31850732;
this.cljs$lang$protocol_mask$partition1$ = 1536;
})
cljs.core.ChunkedCons.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.ChunkedCons.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.ChunkedCons.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.ChunkedCons.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((cljs.core._count(self__.chunk) > (1))){
return (new cljs.core.ChunkedCons(cljs.core._drop_first(self__.chunk),self__.more,self__.meta,null));
} else {
var more__$1 = cljs.core._seq(self__.more);
if((more__$1 == null)){
return null;
} else {
return more__$1;
}
}
});

cljs.core.ChunkedCons.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__24693__auto__ = self__.__hash;
if(!((h__24693__auto__ == null))){
return h__24693__auto__;
} else {
var h__24693__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__24693__auto____$1;

return h__24693__auto____$1;
}
});

cljs.core.ChunkedCons.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.ChunkedCons.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.ChunkedCons.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.chunk,(0));
});

cljs.core.ChunkedCons.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((cljs.core._count(self__.chunk) > (1))){
return (new cljs.core.ChunkedCons(cljs.core._drop_first(self__.chunk),self__.more,self__.meta,null));
} else {
if((self__.more == null)){
return cljs.core.List.EMPTY;
} else {
return self__.more;
}
}
});

cljs.core.ChunkedCons.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.ChunkedCons.prototype.cljs$core$IChunkedSeq$_chunked_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.chunk;
});

cljs.core.ChunkedCons.prototype.cljs$core$IChunkedSeq$_chunked_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.more == null)){
return cljs.core.List.EMPTY;
} else {
return self__.more;
}
});

cljs.core.ChunkedCons.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,m){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.ChunkedCons(self__.chunk,self__.more,m,self__.__hash));
});

cljs.core.ChunkedCons.prototype.cljs$core$ICollection$_conj$arity$2 = (function (this$,o){
var self__ = this;
var this$__$1 = this;
return cljs.core.cons(o,this$__$1);
});

cljs.core.ChunkedCons.prototype.cljs$core$IChunkedNext$_chunked_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.more == null)){
return null;
} else {
return self__.more;
}
});

cljs.core.ChunkedCons.cljs$lang$type = true;

cljs.core.ChunkedCons.cljs$lang$ctorStr = "cljs.core/ChunkedCons";

cljs.core.ChunkedCons.cljs$lang$ctorPrWriter = (function (this__24859__auto__,writer__24860__auto__,opt__24861__auto__){
return cljs.core._write(writer__24860__auto__,"cljs.core/ChunkedCons");
});

cljs.core.__GT_ChunkedCons = (function __GT_ChunkedCons(chunk,more,meta,__hash){
return (new cljs.core.ChunkedCons(chunk,more,meta,__hash));
});

(cljs.core.ChunkedCons.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__25250__auto__ = this;
return cljs.core.es6_iterator(this__25250__auto__);
}));
cljs.core.chunk_cons = (function chunk_cons(chunk,rest){
if((cljs.core._count(chunk) === (0))){
return rest;
} else {
return (new cljs.core.ChunkedCons(chunk,rest,null,null));
}
});
cljs.core.chunk_append = (function chunk_append(b,x){
return b.add(x);
});
cljs.core.chunk = (function chunk(b){
return b.chunk();
});
cljs.core.chunk_first = (function chunk_first(s){
return cljs.core._chunked_first(s);
});
cljs.core.chunk_rest = (function chunk_rest(s){
return cljs.core._chunked_rest(s);
});
cljs.core.chunk_next = (function chunk_next(s){
if((function (){var G__27379 = s;
if(G__27379){
var bit__24946__auto__ = (G__27379.cljs$lang$protocol_mask$partition1$ & (1024));
if((bit__24946__auto__) || (G__27379.cljs$core$IChunkedNext$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return cljs.core._chunked_next(s);
} else {
return cljs.core.seq(cljs.core._chunked_rest(s));
}
});
/**
* Naive impl of to-array as a start.
*/
cljs.core.to_array = (function to_array(s){
var ary = [];
var s__$1 = s;
while(true){
if(cljs.core.seq(s__$1)){
ary.push(cljs.core.first(s__$1));

var G__27380 = cljs.core.next(s__$1);
s__$1 = G__27380;
continue;
} else {
return ary;
}
break;
}
});
/**
* Returns a (potentially-ragged) 2-dimensional array
* containing the contents of coll.
*/
cljs.core.to_array_2d = (function to_array_2d(coll){
var ret = (new Array(cljs.core.count(coll)));
var i_27381 = (0);
var xs_27382 = cljs.core.seq(coll);
while(true){
if(xs_27382){
(ret[i_27381] = cljs.core.to_array(cljs.core.first(xs_27382)));

var G__27383 = (i_27381 + (1));
var G__27384 = cljs.core.next(xs_27382);
i_27381 = G__27383;
xs_27382 = G__27384;
continue;
} else {
}
break;
}

return ret;
});
cljs.core.int_array = (function() {
var int_array = null;
var int_array__1 = (function (size_or_seq){
if(typeof size_or_seq === 'number'){
return int_array.cljs$core$IFn$_invoke$arity$2(size_or_seq,null);
} else {
return cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(size_or_seq);
}
});
var int_array__2 = (function (size,init_val_or_seq){
var a = (new Array(size));
if(cljs.core.seq_QMARK_(init_val_or_seq)){
var s = cljs.core.seq(init_val_or_seq);
var i = (0);
var s__$1 = s;
while(true){
if((s__$1) && ((i < size))){
(a[i] = cljs.core.first(s__$1));

var G__27387 = (i + (1));
var G__27388 = cljs.core.next(s__$1);
i = G__27387;
s__$1 = G__27388;
continue;
} else {
return a;
}
break;
}
} else {
var n__25159__auto___27389 = size;
var i_27390 = (0);
while(true){
if((i_27390 < n__25159__auto___27389)){
(a[i_27390] = init_val_or_seq);

var G__27391 = (i_27390 + (1));
i_27390 = G__27391;
continue;
} else {
}
break;
}

return a;
}
});
int_array = function(size,init_val_or_seq){
switch(arguments.length){
case 1:
return int_array__1.call(this,size);
case 2:
return int_array__2.call(this,size,init_val_or_seq);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
int_array.cljs$core$IFn$_invoke$arity$1 = int_array__1;
int_array.cljs$core$IFn$_invoke$arity$2 = int_array__2;
return int_array;
})()
;
cljs.core.long_array = (function() {
var long_array = null;
var long_array__1 = (function (size_or_seq){
if(typeof size_or_seq === 'number'){
return long_array.cljs$core$IFn$_invoke$arity$2(size_or_seq,null);
} else {
return cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(size_or_seq);
}
});
var long_array__2 = (function (size,init_val_or_seq){
var a = (new Array(size));
if(cljs.core.seq_QMARK_(init_val_or_seq)){
var s = cljs.core.seq(init_val_or_seq);
var i = (0);
var s__$1 = s;
while(true){
if((s__$1) && ((i < size))){
(a[i] = cljs.core.first(s__$1));

var G__27394 = (i + (1));
var G__27395 = cljs.core.next(s__$1);
i = G__27394;
s__$1 = G__27395;
continue;
} else {
return a;
}
break;
}
} else {
var n__25159__auto___27396 = size;
var i_27397 = (0);
while(true){
if((i_27397 < n__25159__auto___27396)){
(a[i_27397] = init_val_or_seq);

var G__27398 = (i_27397 + (1));
i_27397 = G__27398;
continue;
} else {
}
break;
}

return a;
}
});
long_array = function(size,init_val_or_seq){
switch(arguments.length){
case 1:
return long_array__1.call(this,size);
case 2:
return long_array__2.call(this,size,init_val_or_seq);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
long_array.cljs$core$IFn$_invoke$arity$1 = long_array__1;
long_array.cljs$core$IFn$_invoke$arity$2 = long_array__2;
return long_array;
})()
;
cljs.core.double_array = (function() {
var double_array = null;
var double_array__1 = (function (size_or_seq){
if(typeof size_or_seq === 'number'){
return double_array.cljs$core$IFn$_invoke$arity$2(size_or_seq,null);
} else {
return cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(size_or_seq);
}
});
var double_array__2 = (function (size,init_val_or_seq){
var a = (new Array(size));
if(cljs.core.seq_QMARK_(init_val_or_seq)){
var s = cljs.core.seq(init_val_or_seq);
var i = (0);
var s__$1 = s;
while(true){
if((s__$1) && ((i < size))){
(a[i] = cljs.core.first(s__$1));

var G__27401 = (i + (1));
var G__27402 = cljs.core.next(s__$1);
i = G__27401;
s__$1 = G__27402;
continue;
} else {
return a;
}
break;
}
} else {
var n__25159__auto___27403 = size;
var i_27404 = (0);
while(true){
if((i_27404 < n__25159__auto___27403)){
(a[i_27404] = init_val_or_seq);

var G__27405 = (i_27404 + (1));
i_27404 = G__27405;
continue;
} else {
}
break;
}

return a;
}
});
double_array = function(size,init_val_or_seq){
switch(arguments.length){
case 1:
return double_array__1.call(this,size);
case 2:
return double_array__2.call(this,size,init_val_or_seq);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
double_array.cljs$core$IFn$_invoke$arity$1 = double_array__1;
double_array.cljs$core$IFn$_invoke$arity$2 = double_array__2;
return double_array;
})()
;
cljs.core.object_array = (function() {
var object_array = null;
var object_array__1 = (function (size_or_seq){
if(typeof size_or_seq === 'number'){
return object_array.cljs$core$IFn$_invoke$arity$2(size_or_seq,null);
} else {
return cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(size_or_seq);
}
});
var object_array__2 = (function (size,init_val_or_seq){
var a = (new Array(size));
if(cljs.core.seq_QMARK_(init_val_or_seq)){
var s = cljs.core.seq(init_val_or_seq);
var i = (0);
var s__$1 = s;
while(true){
if((s__$1) && ((i < size))){
(a[i] = cljs.core.first(s__$1));

var G__27408 = (i + (1));
var G__27409 = cljs.core.next(s__$1);
i = G__27408;
s__$1 = G__27409;
continue;
} else {
return a;
}
break;
}
} else {
var n__25159__auto___27410 = size;
var i_27411 = (0);
while(true){
if((i_27411 < n__25159__auto___27410)){
(a[i_27411] = init_val_or_seq);

var G__27412 = (i_27411 + (1));
i_27411 = G__27412;
continue;
} else {
}
break;
}

return a;
}
});
object_array = function(size,init_val_or_seq){
switch(arguments.length){
case 1:
return object_array__1.call(this,size);
case 2:
return object_array__2.call(this,size,init_val_or_seq);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
object_array.cljs$core$IFn$_invoke$arity$1 = object_array__1;
object_array.cljs$core$IFn$_invoke$arity$2 = object_array__2;
return object_array;
})()
;
cljs.core.bounded_count = (function bounded_count(s,n){
if(cljs.core.counted_QMARK_(s)){
return cljs.core.count(s);
} else {
var s__$1 = s;
var i = n;
var sum = (0);
while(true){
if(((i > (0))) && (cljs.core.seq(s__$1))){
var G__27413 = cljs.core.next(s__$1);
var G__27414 = (i - (1));
var G__27415 = (sum + (1));
s__$1 = G__27413;
i = G__27414;
sum = G__27415;
continue;
} else {
return sum;
}
break;
}
}
});
cljs.core.spread = (function spread(arglist){
if((arglist == null)){
return null;
} else {
if((cljs.core.next(arglist) == null)){
return cljs.core.seq(cljs.core.first(arglist));
} else {
return cljs.core.cons(cljs.core.first(arglist),spread(cljs.core.next(arglist)));

}
}
});
/**
* Returns a lazy seq representing the concatenation of the elements in the supplied colls.
* @param {...*} var_args
*/
cljs.core.concat = (function() {
var concat = null;
var concat__0 = (function (){
return (new cljs.core.LazySeq(null,(function (){
return null;
}),null,null));
});
var concat__1 = (function (x){
return (new cljs.core.LazySeq(null,(function (){
return x;
}),null,null));
});
var concat__2 = (function (x,y){
return (new cljs.core.LazySeq(null,(function (){
var s = cljs.core.seq(x);
if(s){
if(cljs.core.chunked_seq_QMARK_(s)){
return cljs.core.chunk_cons(cljs.core.chunk_first(s),concat.cljs$core$IFn$_invoke$arity$2(cljs.core.chunk_rest(s),y));
} else {
return cljs.core.cons(cljs.core.first(s),concat.cljs$core$IFn$_invoke$arity$2(cljs.core.rest(s),y));
}
} else {
return y;
}
}),null,null));
});
var concat__3 = (function() { 
var G__27435__delegate = function (x,y,zs){
var cat = (function cat(xys,zs__$1){
return (new cljs.core.LazySeq(null,(function (){
var xys__$1 = cljs.core.seq(xys);
if(xys__$1){
if(cljs.core.chunked_seq_QMARK_(xys__$1)){
return cljs.core.chunk_cons(cljs.core.chunk_first(xys__$1),cat(cljs.core.chunk_rest(xys__$1),zs__$1));
} else {
return cljs.core.cons(cljs.core.first(xys__$1),cat(cljs.core.rest(xys__$1),zs__$1));
}
} else {
if(cljs.core.truth_(zs__$1)){
return cat(cljs.core.first(zs__$1),cljs.core.next(zs__$1));
} else {
return null;
}
}
}),null,null));
});
return cat(concat.cljs$core$IFn$_invoke$arity$2(x,y),zs);
};
var G__27435 = function (x,y,var_args){
var zs = null;
if (arguments.length > 2) {
var G__27436__i = 0, G__27436__a = new Array(arguments.length -  2);
while (G__27436__i < G__27436__a.length) {G__27436__a[G__27436__i] = arguments[G__27436__i + 2]; ++G__27436__i;}
  zs = new cljs.core.IndexedSeq(G__27436__a,0);
} 
return G__27435__delegate.call(this,x,y,zs);};
G__27435.cljs$lang$maxFixedArity = 2;
G__27435.cljs$lang$applyTo = (function (arglist__27437){
var x = cljs.core.first(arglist__27437);
arglist__27437 = cljs.core.next(arglist__27437);
var y = cljs.core.first(arglist__27437);
var zs = cljs.core.rest(arglist__27437);
return G__27435__delegate(x,y,zs);
});
G__27435.cljs$core$IFn$_invoke$arity$variadic = G__27435__delegate;
return G__27435;
})()
;
concat = function(x,y,var_args){
var zs = var_args;
switch(arguments.length){
case 0:
return concat__0.call(this);
case 1:
return concat__1.call(this,x);
case 2:
return concat__2.call(this,x,y);
default:
var G__27438 = null;
if (arguments.length > 2) {
var G__27439__i = 0, G__27439__a = new Array(arguments.length -  2);
while (G__27439__i < G__27439__a.length) {G__27439__a[G__27439__i] = arguments[G__27439__i + 2]; ++G__27439__i;}
G__27438 = new cljs.core.IndexedSeq(G__27439__a,0);
}
return concat__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__27438);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
concat.cljs$lang$maxFixedArity = 2;
concat.cljs$lang$applyTo = concat__3.cljs$lang$applyTo;
concat.cljs$core$IFn$_invoke$arity$0 = concat__0;
concat.cljs$core$IFn$_invoke$arity$1 = concat__1;
concat.cljs$core$IFn$_invoke$arity$2 = concat__2;
concat.cljs$core$IFn$_invoke$arity$variadic = concat__3.cljs$core$IFn$_invoke$arity$variadic;
return concat;
})()
;
/**
* Creates a new list containing the items prepended to the rest, the
* last of which will be treated as a sequence.
* @param {...*} var_args
*/
cljs.core.list_STAR_ = (function() {
var list_STAR_ = null;
var list_STAR___1 = (function (args){
return cljs.core.seq(args);
});
var list_STAR___2 = (function (a,args){
return cljs.core.cons(a,args);
});
var list_STAR___3 = (function (a,b,args){
return cljs.core.cons(a,cljs.core.cons(b,args));
});
var list_STAR___4 = (function (a,b,c,args){
return cljs.core.cons(a,cljs.core.cons(b,cljs.core.cons(c,args)));
});
var list_STAR___5 = (function() { 
var G__27440__delegate = function (a,b,c,d,more){
return cljs.core.cons(a,cljs.core.cons(b,cljs.core.cons(c,cljs.core.cons(d,cljs.core.spread(more)))));
};
var G__27440 = function (a,b,c,d,var_args){
var more = null;
if (arguments.length > 4) {
var G__27441__i = 0, G__27441__a = new Array(arguments.length -  4);
while (G__27441__i < G__27441__a.length) {G__27441__a[G__27441__i] = arguments[G__27441__i + 4]; ++G__27441__i;}
  more = new cljs.core.IndexedSeq(G__27441__a,0);
} 
return G__27440__delegate.call(this,a,b,c,d,more);};
G__27440.cljs$lang$maxFixedArity = 4;
G__27440.cljs$lang$applyTo = (function (arglist__27442){
var a = cljs.core.first(arglist__27442);
arglist__27442 = cljs.core.next(arglist__27442);
var b = cljs.core.first(arglist__27442);
arglist__27442 = cljs.core.next(arglist__27442);
var c = cljs.core.first(arglist__27442);
arglist__27442 = cljs.core.next(arglist__27442);
var d = cljs.core.first(arglist__27442);
var more = cljs.core.rest(arglist__27442);
return G__27440__delegate(a,b,c,d,more);
});
G__27440.cljs$core$IFn$_invoke$arity$variadic = G__27440__delegate;
return G__27440;
})()
;
list_STAR_ = function(a,b,c,d,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return list_STAR___1.call(this,a);
case 2:
return list_STAR___2.call(this,a,b);
case 3:
return list_STAR___3.call(this,a,b,c);
case 4:
return list_STAR___4.call(this,a,b,c,d);
default:
var G__27443 = null;
if (arguments.length > 4) {
var G__27444__i = 0, G__27444__a = new Array(arguments.length -  4);
while (G__27444__i < G__27444__a.length) {G__27444__a[G__27444__i] = arguments[G__27444__i + 4]; ++G__27444__i;}
G__27443 = new cljs.core.IndexedSeq(G__27444__a,0);
}
return list_STAR___5.cljs$core$IFn$_invoke$arity$variadic(a,b,c,d, G__27443);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
list_STAR_.cljs$lang$maxFixedArity = 4;
list_STAR_.cljs$lang$applyTo = list_STAR___5.cljs$lang$applyTo;
list_STAR_.cljs$core$IFn$_invoke$arity$1 = list_STAR___1;
list_STAR_.cljs$core$IFn$_invoke$arity$2 = list_STAR___2;
list_STAR_.cljs$core$IFn$_invoke$arity$3 = list_STAR___3;
list_STAR_.cljs$core$IFn$_invoke$arity$4 = list_STAR___4;
list_STAR_.cljs$core$IFn$_invoke$arity$variadic = list_STAR___5.cljs$core$IFn$_invoke$arity$variadic;
return list_STAR_;
})()
;
/**
* Returns a new, transient version of the collection, in constant time.
*/
cljs.core.transient$ = (function transient$(coll){
return cljs.core._as_transient(coll);
});
/**
* Returns a new, persistent version of the transient collection, in
* constant time. The transient collection cannot be used after this
* call, any such use will throw an exception.
*/
cljs.core.persistent_BANG_ = (function persistent_BANG_(tcoll){
return cljs.core._persistent_BANG_(tcoll);
});
/**
* Adds x to the transient collection, and return coll. The 'addition'
* may happen at different 'places' depending on the concrete type.
* @param {...*} var_args
*/
cljs.core.conj_BANG_ = (function() {
var conj_BANG_ = null;
var conj_BANG___0 = (function (){
return cljs.core.transient$(cljs.core.PersistentVector.EMPTY);
});
var conj_BANG___1 = (function (coll){
return coll;
});
var conj_BANG___2 = (function (tcoll,val){
return cljs.core._conj_BANG_(tcoll,val);
});
var conj_BANG___3 = (function() { 
var G__27445__delegate = function (tcoll,val,vals){
while(true){
var ntcoll = cljs.core._conj_BANG_(tcoll,val);
if(cljs.core.truth_(vals)){
var G__27446 = ntcoll;
var G__27447 = cljs.core.first(vals);
var G__27448 = cljs.core.next(vals);
tcoll = G__27446;
val = G__27447;
vals = G__27448;
continue;
} else {
return ntcoll;
}
break;
}
};
var G__27445 = function (tcoll,val,var_args){
var vals = null;
if (arguments.length > 2) {
var G__27449__i = 0, G__27449__a = new Array(arguments.length -  2);
while (G__27449__i < G__27449__a.length) {G__27449__a[G__27449__i] = arguments[G__27449__i + 2]; ++G__27449__i;}
  vals = new cljs.core.IndexedSeq(G__27449__a,0);
} 
return G__27445__delegate.call(this,tcoll,val,vals);};
G__27445.cljs$lang$maxFixedArity = 2;
G__27445.cljs$lang$applyTo = (function (arglist__27450){
var tcoll = cljs.core.first(arglist__27450);
arglist__27450 = cljs.core.next(arglist__27450);
var val = cljs.core.first(arglist__27450);
var vals = cljs.core.rest(arglist__27450);
return G__27445__delegate(tcoll,val,vals);
});
G__27445.cljs$core$IFn$_invoke$arity$variadic = G__27445__delegate;
return G__27445;
})()
;
conj_BANG_ = function(tcoll,val,var_args){
var vals = var_args;
switch(arguments.length){
case 0:
return conj_BANG___0.call(this);
case 1:
return conj_BANG___1.call(this,tcoll);
case 2:
return conj_BANG___2.call(this,tcoll,val);
default:
var G__27451 = null;
if (arguments.length > 2) {
var G__27452__i = 0, G__27452__a = new Array(arguments.length -  2);
while (G__27452__i < G__27452__a.length) {G__27452__a[G__27452__i] = arguments[G__27452__i + 2]; ++G__27452__i;}
G__27451 = new cljs.core.IndexedSeq(G__27452__a,0);
}
return conj_BANG___3.cljs$core$IFn$_invoke$arity$variadic(tcoll,val, G__27451);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
conj_BANG_.cljs$lang$maxFixedArity = 2;
conj_BANG_.cljs$lang$applyTo = conj_BANG___3.cljs$lang$applyTo;
conj_BANG_.cljs$core$IFn$_invoke$arity$0 = conj_BANG___0;
conj_BANG_.cljs$core$IFn$_invoke$arity$1 = conj_BANG___1;
conj_BANG_.cljs$core$IFn$_invoke$arity$2 = conj_BANG___2;
conj_BANG_.cljs$core$IFn$_invoke$arity$variadic = conj_BANG___3.cljs$core$IFn$_invoke$arity$variadic;
return conj_BANG_;
})()
;
/**
* When applied to a transient map, adds mapping of key(s) to
* val(s). When applied to a transient vector, sets the val at index.
* Note - index must be <= (count vector). Returns coll.
* @param {...*} var_args
*/
cljs.core.assoc_BANG_ = (function() {
var assoc_BANG_ = null;
var assoc_BANG___3 = (function (tcoll,key,val){
return cljs.core._assoc_BANG_(tcoll,key,val);
});
var assoc_BANG___4 = (function() { 
var G__27453__delegate = function (tcoll,key,val,kvs){
while(true){
var ntcoll = cljs.core._assoc_BANG_(tcoll,key,val);
if(cljs.core.truth_(kvs)){
var G__27454 = ntcoll;
var G__27455 = cljs.core.first(kvs);
var G__27456 = cljs.core.second(kvs);
var G__27457 = cljs.core.nnext(kvs);
tcoll = G__27454;
key = G__27455;
val = G__27456;
kvs = G__27457;
continue;
} else {
return ntcoll;
}
break;
}
};
var G__27453 = function (tcoll,key,val,var_args){
var kvs = null;
if (arguments.length > 3) {
var G__27458__i = 0, G__27458__a = new Array(arguments.length -  3);
while (G__27458__i < G__27458__a.length) {G__27458__a[G__27458__i] = arguments[G__27458__i + 3]; ++G__27458__i;}
  kvs = new cljs.core.IndexedSeq(G__27458__a,0);
} 
return G__27453__delegate.call(this,tcoll,key,val,kvs);};
G__27453.cljs$lang$maxFixedArity = 3;
G__27453.cljs$lang$applyTo = (function (arglist__27459){
var tcoll = cljs.core.first(arglist__27459);
arglist__27459 = cljs.core.next(arglist__27459);
var key = cljs.core.first(arglist__27459);
arglist__27459 = cljs.core.next(arglist__27459);
var val = cljs.core.first(arglist__27459);
var kvs = cljs.core.rest(arglist__27459);
return G__27453__delegate(tcoll,key,val,kvs);
});
G__27453.cljs$core$IFn$_invoke$arity$variadic = G__27453__delegate;
return G__27453;
})()
;
assoc_BANG_ = function(tcoll,key,val,var_args){
var kvs = var_args;
switch(arguments.length){
case 3:
return assoc_BANG___3.call(this,tcoll,key,val);
default:
var G__27460 = null;
if (arguments.length > 3) {
var G__27461__i = 0, G__27461__a = new Array(arguments.length -  3);
while (G__27461__i < G__27461__a.length) {G__27461__a[G__27461__i] = arguments[G__27461__i + 3]; ++G__27461__i;}
G__27460 = new cljs.core.IndexedSeq(G__27461__a,0);
}
return assoc_BANG___4.cljs$core$IFn$_invoke$arity$variadic(tcoll,key,val, G__27460);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
assoc_BANG_.cljs$lang$maxFixedArity = 3;
assoc_BANG_.cljs$lang$applyTo = assoc_BANG___4.cljs$lang$applyTo;
assoc_BANG_.cljs$core$IFn$_invoke$arity$3 = assoc_BANG___3;
assoc_BANG_.cljs$core$IFn$_invoke$arity$variadic = assoc_BANG___4.cljs$core$IFn$_invoke$arity$variadic;
return assoc_BANG_;
})()
;
/**
* Returns a transient map that doesn't contain a mapping for key(s).
* @param {...*} var_args
*/
cljs.core.dissoc_BANG_ = (function() {
var dissoc_BANG_ = null;
var dissoc_BANG___2 = (function (tcoll,key){
return cljs.core._dissoc_BANG_(tcoll,key);
});
var dissoc_BANG___3 = (function() { 
var G__27462__delegate = function (tcoll,key,ks){
while(true){
var ntcoll = cljs.core._dissoc_BANG_(tcoll,key);
if(cljs.core.truth_(ks)){
var G__27463 = ntcoll;
var G__27464 = cljs.core.first(ks);
var G__27465 = cljs.core.next(ks);
tcoll = G__27463;
key = G__27464;
ks = G__27465;
continue;
} else {
return ntcoll;
}
break;
}
};
var G__27462 = function (tcoll,key,var_args){
var ks = null;
if (arguments.length > 2) {
var G__27466__i = 0, G__27466__a = new Array(arguments.length -  2);
while (G__27466__i < G__27466__a.length) {G__27466__a[G__27466__i] = arguments[G__27466__i + 2]; ++G__27466__i;}
  ks = new cljs.core.IndexedSeq(G__27466__a,0);
} 
return G__27462__delegate.call(this,tcoll,key,ks);};
G__27462.cljs$lang$maxFixedArity = 2;
G__27462.cljs$lang$applyTo = (function (arglist__27467){
var tcoll = cljs.core.first(arglist__27467);
arglist__27467 = cljs.core.next(arglist__27467);
var key = cljs.core.first(arglist__27467);
var ks = cljs.core.rest(arglist__27467);
return G__27462__delegate(tcoll,key,ks);
});
G__27462.cljs$core$IFn$_invoke$arity$variadic = G__27462__delegate;
return G__27462;
})()
;
dissoc_BANG_ = function(tcoll,key,var_args){
var ks = var_args;
switch(arguments.length){
case 2:
return dissoc_BANG___2.call(this,tcoll,key);
default:
var G__27468 = null;
if (arguments.length > 2) {
var G__27469__i = 0, G__27469__a = new Array(arguments.length -  2);
while (G__27469__i < G__27469__a.length) {G__27469__a[G__27469__i] = arguments[G__27469__i + 2]; ++G__27469__i;}
G__27468 = new cljs.core.IndexedSeq(G__27469__a,0);
}
return dissoc_BANG___3.cljs$core$IFn$_invoke$arity$variadic(tcoll,key, G__27468);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
dissoc_BANG_.cljs$lang$maxFixedArity = 2;
dissoc_BANG_.cljs$lang$applyTo = dissoc_BANG___3.cljs$lang$applyTo;
dissoc_BANG_.cljs$core$IFn$_invoke$arity$2 = dissoc_BANG___2;
dissoc_BANG_.cljs$core$IFn$_invoke$arity$variadic = dissoc_BANG___3.cljs$core$IFn$_invoke$arity$variadic;
return dissoc_BANG_;
})()
;
/**
* Removes the last item from a transient vector. If
* the collection is empty, throws an exception. Returns coll
*/
cljs.core.pop_BANG_ = (function pop_BANG_(tcoll){
return cljs.core._pop_BANG_(tcoll);
});
/**
* disj[oin]. Returns a transient set of the same (hashed/sorted) type, that
* does not contain key(s).
* @param {...*} var_args
*/
cljs.core.disj_BANG_ = (function() {
var disj_BANG_ = null;
var disj_BANG___2 = (function (tcoll,val){
return cljs.core._disjoin_BANG_(tcoll,val);
});
var disj_BANG___3 = (function() { 
var G__27470__delegate = function (tcoll,val,vals){
while(true){
var ntcoll = cljs.core._disjoin_BANG_(tcoll,val);
if(cljs.core.truth_(vals)){
var G__27471 = ntcoll;
var G__27472 = cljs.core.first(vals);
var G__27473 = cljs.core.next(vals);
tcoll = G__27471;
val = G__27472;
vals = G__27473;
continue;
} else {
return ntcoll;
}
break;
}
};
var G__27470 = function (tcoll,val,var_args){
var vals = null;
if (arguments.length > 2) {
var G__27474__i = 0, G__27474__a = new Array(arguments.length -  2);
while (G__27474__i < G__27474__a.length) {G__27474__a[G__27474__i] = arguments[G__27474__i + 2]; ++G__27474__i;}
  vals = new cljs.core.IndexedSeq(G__27474__a,0);
} 
return G__27470__delegate.call(this,tcoll,val,vals);};
G__27470.cljs$lang$maxFixedArity = 2;
G__27470.cljs$lang$applyTo = (function (arglist__27475){
var tcoll = cljs.core.first(arglist__27475);
arglist__27475 = cljs.core.next(arglist__27475);
var val = cljs.core.first(arglist__27475);
var vals = cljs.core.rest(arglist__27475);
return G__27470__delegate(tcoll,val,vals);
});
G__27470.cljs$core$IFn$_invoke$arity$variadic = G__27470__delegate;
return G__27470;
})()
;
disj_BANG_ = function(tcoll,val,var_args){
var vals = var_args;
switch(arguments.length){
case 2:
return disj_BANG___2.call(this,tcoll,val);
default:
var G__27476 = null;
if (arguments.length > 2) {
var G__27477__i = 0, G__27477__a = new Array(arguments.length -  2);
while (G__27477__i < G__27477__a.length) {G__27477__a[G__27477__i] = arguments[G__27477__i + 2]; ++G__27477__i;}
G__27476 = new cljs.core.IndexedSeq(G__27477__a,0);
}
return disj_BANG___3.cljs$core$IFn$_invoke$arity$variadic(tcoll,val, G__27476);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
disj_BANG_.cljs$lang$maxFixedArity = 2;
disj_BANG_.cljs$lang$applyTo = disj_BANG___3.cljs$lang$applyTo;
disj_BANG_.cljs$core$IFn$_invoke$arity$2 = disj_BANG___2;
disj_BANG_.cljs$core$IFn$_invoke$arity$variadic = disj_BANG___3.cljs$core$IFn$_invoke$arity$variadic;
return disj_BANG_;
})()
;

cljs.core.apply_to = (function apply_to(f,argc,args){
var args__$1 = cljs.core.seq(args);
if((argc === (0))){
return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
} else {
var a25203 = cljs.core._first(args__$1);
var args__$2 = cljs.core._rest(args__$1);
if((argc === (1))){
if(f.cljs$core$IFn$_invoke$arity$1){
return f.cljs$core$IFn$_invoke$arity$1(a25203);
} else {
var G__27688 = a25203;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__27688) : f.call(null,G__27688));
}
} else {
var b25204 = cljs.core._first(args__$2);
var args__$3 = cljs.core._rest(args__$2);
if((argc === (2))){
if(f.cljs$core$IFn$_invoke$arity$2){
return f.cljs$core$IFn$_invoke$arity$2(a25203,b25204);
} else {
var G__27689 = a25203;
var G__27690 = b25204;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__27689,G__27690) : f.call(null,G__27689,G__27690));
}
} else {
var c25205 = cljs.core._first(args__$3);
var args__$4 = cljs.core._rest(args__$3);
if((argc === (3))){
if(f.cljs$core$IFn$_invoke$arity$3){
return f.cljs$core$IFn$_invoke$arity$3(a25203,b25204,c25205);
} else {
var G__27691 = a25203;
var G__27692 = b25204;
var G__27693 = c25205;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__27691,G__27692,G__27693) : f.call(null,G__27691,G__27692,G__27693));
}
} else {
var d25206 = cljs.core._first(args__$4);
var args__$5 = cljs.core._rest(args__$4);
if((argc === (4))){
if(f.cljs$core$IFn$_invoke$arity$4){
return f.cljs$core$IFn$_invoke$arity$4(a25203,b25204,c25205,d25206);
} else {
var G__27694 = a25203;
var G__27695 = b25204;
var G__27696 = c25205;
var G__27697 = d25206;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__27694,G__27695,G__27696,G__27697) : f.call(null,G__27694,G__27695,G__27696,G__27697));
}
} else {
var e25207 = cljs.core._first(args__$5);
var args__$6 = cljs.core._rest(args__$5);
if((argc === (5))){
if(f.cljs$core$IFn$_invoke$arity$5){
return f.cljs$core$IFn$_invoke$arity$5(a25203,b25204,c25205,d25206,e25207);
} else {
var G__27698 = a25203;
var G__27699 = b25204;
var G__27700 = c25205;
var G__27701 = d25206;
var G__27702 = e25207;
return (f.cljs$core$IFn$_invoke$arity$5 ? f.cljs$core$IFn$_invoke$arity$5(G__27698,G__27699,G__27700,G__27701,G__27702) : f.call(null,G__27698,G__27699,G__27700,G__27701,G__27702));
}
} else {
var f25208 = cljs.core._first(args__$6);
var args__$7 = cljs.core._rest(args__$6);
if((argc === (6))){
if(f.cljs$core$IFn$_invoke$arity$6){
return f.cljs$core$IFn$_invoke$arity$6(a25203,b25204,c25205,d25206,e25207,f25208);
} else {
var G__27703 = a25203;
var G__27704 = b25204;
var G__27705 = c25205;
var G__27706 = d25206;
var G__27707 = e25207;
var G__27708 = f25208;
return (f.cljs$core$IFn$_invoke$arity$6 ? f.cljs$core$IFn$_invoke$arity$6(G__27703,G__27704,G__27705,G__27706,G__27707,G__27708) : f.call(null,G__27703,G__27704,G__27705,G__27706,G__27707,G__27708));
}
} else {
var g25209 = cljs.core._first(args__$7);
var args__$8 = cljs.core._rest(args__$7);
if((argc === (7))){
if(f.cljs$core$IFn$_invoke$arity$7){
return f.cljs$core$IFn$_invoke$arity$7(a25203,b25204,c25205,d25206,e25207,f25208,g25209);
} else {
var G__27709 = a25203;
var G__27710 = b25204;
var G__27711 = c25205;
var G__27712 = d25206;
var G__27713 = e25207;
var G__27714 = f25208;
var G__27715 = g25209;
return (f.cljs$core$IFn$_invoke$arity$7 ? f.cljs$core$IFn$_invoke$arity$7(G__27709,G__27710,G__27711,G__27712,G__27713,G__27714,G__27715) : f.call(null,G__27709,G__27710,G__27711,G__27712,G__27713,G__27714,G__27715));
}
} else {
var h25210 = cljs.core._first(args__$8);
var args__$9 = cljs.core._rest(args__$8);
if((argc === (8))){
if(f.cljs$core$IFn$_invoke$arity$8){
return f.cljs$core$IFn$_invoke$arity$8(a25203,b25204,c25205,d25206,e25207,f25208,g25209,h25210);
} else {
var G__27716 = a25203;
var G__27717 = b25204;
var G__27718 = c25205;
var G__27719 = d25206;
var G__27720 = e25207;
var G__27721 = f25208;
var G__27722 = g25209;
var G__27723 = h25210;
return (f.cljs$core$IFn$_invoke$arity$8 ? f.cljs$core$IFn$_invoke$arity$8(G__27716,G__27717,G__27718,G__27719,G__27720,G__27721,G__27722,G__27723) : f.call(null,G__27716,G__27717,G__27718,G__27719,G__27720,G__27721,G__27722,G__27723));
}
} else {
var i25211 = cljs.core._first(args__$9);
var args__$10 = cljs.core._rest(args__$9);
if((argc === (9))){
if(f.cljs$core$IFn$_invoke$arity$9){
return f.cljs$core$IFn$_invoke$arity$9(a25203,b25204,c25205,d25206,e25207,f25208,g25209,h25210,i25211);
} else {
var G__27724 = a25203;
var G__27725 = b25204;
var G__27726 = c25205;
var G__27727 = d25206;
var G__27728 = e25207;
var G__27729 = f25208;
var G__27730 = g25209;
var G__27731 = h25210;
var G__27732 = i25211;
return (f.cljs$core$IFn$_invoke$arity$9 ? f.cljs$core$IFn$_invoke$arity$9(G__27724,G__27725,G__27726,G__27727,G__27728,G__27729,G__27730,G__27731,G__27732) : f.call(null,G__27724,G__27725,G__27726,G__27727,G__27728,G__27729,G__27730,G__27731,G__27732));
}
} else {
var j25212 = cljs.core._first(args__$10);
var args__$11 = cljs.core._rest(args__$10);
if((argc === (10))){
if(f.cljs$core$IFn$_invoke$arity$10){
return f.cljs$core$IFn$_invoke$arity$10(a25203,b25204,c25205,d25206,e25207,f25208,g25209,h25210,i25211,j25212);
} else {
var G__27733 = a25203;
var G__27734 = b25204;
var G__27735 = c25205;
var G__27736 = d25206;
var G__27737 = e25207;
var G__27738 = f25208;
var G__27739 = g25209;
var G__27740 = h25210;
var G__27741 = i25211;
var G__27742 = j25212;
return (f.cljs$core$IFn$_invoke$arity$10 ? f.cljs$core$IFn$_invoke$arity$10(G__27733,G__27734,G__27735,G__27736,G__27737,G__27738,G__27739,G__27740,G__27741,G__27742) : f.call(null,G__27733,G__27734,G__27735,G__27736,G__27737,G__27738,G__27739,G__27740,G__27741,G__27742));
}
} else {
var k25213 = cljs.core._first(args__$11);
var args__$12 = cljs.core._rest(args__$11);
if((argc === (11))){
if(f.cljs$core$IFn$_invoke$arity$11){
return f.cljs$core$IFn$_invoke$arity$11(a25203,b25204,c25205,d25206,e25207,f25208,g25209,h25210,i25211,j25212,k25213);
} else {
var G__27743 = a25203;
var G__27744 = b25204;
var G__27745 = c25205;
var G__27746 = d25206;
var G__27747 = e25207;
var G__27748 = f25208;
var G__27749 = g25209;
var G__27750 = h25210;
var G__27751 = i25211;
var G__27752 = j25212;
var G__27753 = k25213;
return (f.cljs$core$IFn$_invoke$arity$11 ? f.cljs$core$IFn$_invoke$arity$11(G__27743,G__27744,G__27745,G__27746,G__27747,G__27748,G__27749,G__27750,G__27751,G__27752,G__27753) : f.call(null,G__27743,G__27744,G__27745,G__27746,G__27747,G__27748,G__27749,G__27750,G__27751,G__27752,G__27753));
}
} else {
var l25214 = cljs.core._first(args__$12);
var args__$13 = cljs.core._rest(args__$12);
if((argc === (12))){
if(f.cljs$core$IFn$_invoke$arity$12){
return f.cljs$core$IFn$_invoke$arity$12(a25203,b25204,c25205,d25206,e25207,f25208,g25209,h25210,i25211,j25212,k25213,l25214);
} else {
var G__27754 = a25203;
var G__27755 = b25204;
var G__27756 = c25205;
var G__27757 = d25206;
var G__27758 = e25207;
var G__27759 = f25208;
var G__27760 = g25209;
var G__27761 = h25210;
var G__27762 = i25211;
var G__27763 = j25212;
var G__27764 = k25213;
var G__27765 = l25214;
return (f.cljs$core$IFn$_invoke$arity$12 ? f.cljs$core$IFn$_invoke$arity$12(G__27754,G__27755,G__27756,G__27757,G__27758,G__27759,G__27760,G__27761,G__27762,G__27763,G__27764,G__27765) : f.call(null,G__27754,G__27755,G__27756,G__27757,G__27758,G__27759,G__27760,G__27761,G__27762,G__27763,G__27764,G__27765));
}
} else {
var m25215 = cljs.core._first(args__$13);
var args__$14 = cljs.core._rest(args__$13);
if((argc === (13))){
if(f.cljs$core$IFn$_invoke$arity$13){
return f.cljs$core$IFn$_invoke$arity$13(a25203,b25204,c25205,d25206,e25207,f25208,g25209,h25210,i25211,j25212,k25213,l25214,m25215);
} else {
var G__27766 = a25203;
var G__27767 = b25204;
var G__27768 = c25205;
var G__27769 = d25206;
var G__27770 = e25207;
var G__27771 = f25208;
var G__27772 = g25209;
var G__27773 = h25210;
var G__27774 = i25211;
var G__27775 = j25212;
var G__27776 = k25213;
var G__27777 = l25214;
var G__27778 = m25215;
return (f.cljs$core$IFn$_invoke$arity$13 ? f.cljs$core$IFn$_invoke$arity$13(G__27766,G__27767,G__27768,G__27769,G__27770,G__27771,G__27772,G__27773,G__27774,G__27775,G__27776,G__27777,G__27778) : f.call(null,G__27766,G__27767,G__27768,G__27769,G__27770,G__27771,G__27772,G__27773,G__27774,G__27775,G__27776,G__27777,G__27778));
}
} else {
var n25216 = cljs.core._first(args__$14);
var args__$15 = cljs.core._rest(args__$14);
if((argc === (14))){
if(f.cljs$core$IFn$_invoke$arity$14){
return f.cljs$core$IFn$_invoke$arity$14(a25203,b25204,c25205,d25206,e25207,f25208,g25209,h25210,i25211,j25212,k25213,l25214,m25215,n25216);
} else {
var G__27779 = a25203;
var G__27780 = b25204;
var G__27781 = c25205;
var G__27782 = d25206;
var G__27783 = e25207;
var G__27784 = f25208;
var G__27785 = g25209;
var G__27786 = h25210;
var G__27787 = i25211;
var G__27788 = j25212;
var G__27789 = k25213;
var G__27790 = l25214;
var G__27791 = m25215;
var G__27792 = n25216;
return (f.cljs$core$IFn$_invoke$arity$14 ? f.cljs$core$IFn$_invoke$arity$14(G__27779,G__27780,G__27781,G__27782,G__27783,G__27784,G__27785,G__27786,G__27787,G__27788,G__27789,G__27790,G__27791,G__27792) : f.call(null,G__27779,G__27780,G__27781,G__27782,G__27783,G__27784,G__27785,G__27786,G__27787,G__27788,G__27789,G__27790,G__27791,G__27792));
}
} else {
var o25217 = cljs.core._first(args__$15);
var args__$16 = cljs.core._rest(args__$15);
if((argc === (15))){
if(f.cljs$core$IFn$_invoke$arity$15){
return f.cljs$core$IFn$_invoke$arity$15(a25203,b25204,c25205,d25206,e25207,f25208,g25209,h25210,i25211,j25212,k25213,l25214,m25215,n25216,o25217);
} else {
var G__27793 = a25203;
var G__27794 = b25204;
var G__27795 = c25205;
var G__27796 = d25206;
var G__27797 = e25207;
var G__27798 = f25208;
var G__27799 = g25209;
var G__27800 = h25210;
var G__27801 = i25211;
var G__27802 = j25212;
var G__27803 = k25213;
var G__27804 = l25214;
var G__27805 = m25215;
var G__27806 = n25216;
var G__27807 = o25217;
return (f.cljs$core$IFn$_invoke$arity$15 ? f.cljs$core$IFn$_invoke$arity$15(G__27793,G__27794,G__27795,G__27796,G__27797,G__27798,G__27799,G__27800,G__27801,G__27802,G__27803,G__27804,G__27805,G__27806,G__27807) : f.call(null,G__27793,G__27794,G__27795,G__27796,G__27797,G__27798,G__27799,G__27800,G__27801,G__27802,G__27803,G__27804,G__27805,G__27806,G__27807));
}
} else {
var p25218 = cljs.core._first(args__$16);
var args__$17 = cljs.core._rest(args__$16);
if((argc === (16))){
if(f.cljs$core$IFn$_invoke$arity$16){
return f.cljs$core$IFn$_invoke$arity$16(a25203,b25204,c25205,d25206,e25207,f25208,g25209,h25210,i25211,j25212,k25213,l25214,m25215,n25216,o25217,p25218);
} else {
var G__27808 = a25203;
var G__27809 = b25204;
var G__27810 = c25205;
var G__27811 = d25206;
var G__27812 = e25207;
var G__27813 = f25208;
var G__27814 = g25209;
var G__27815 = h25210;
var G__27816 = i25211;
var G__27817 = j25212;
var G__27818 = k25213;
var G__27819 = l25214;
var G__27820 = m25215;
var G__27821 = n25216;
var G__27822 = o25217;
var G__27823 = p25218;
return (f.cljs$core$IFn$_invoke$arity$16 ? f.cljs$core$IFn$_invoke$arity$16(G__27808,G__27809,G__27810,G__27811,G__27812,G__27813,G__27814,G__27815,G__27816,G__27817,G__27818,G__27819,G__27820,G__27821,G__27822,G__27823) : f.call(null,G__27808,G__27809,G__27810,G__27811,G__27812,G__27813,G__27814,G__27815,G__27816,G__27817,G__27818,G__27819,G__27820,G__27821,G__27822,G__27823));
}
} else {
var q25219 = cljs.core._first(args__$17);
var args__$18 = cljs.core._rest(args__$17);
if((argc === (17))){
if(f.cljs$core$IFn$_invoke$arity$17){
return f.cljs$core$IFn$_invoke$arity$17(a25203,b25204,c25205,d25206,e25207,f25208,g25209,h25210,i25211,j25212,k25213,l25214,m25215,n25216,o25217,p25218,q25219);
} else {
var G__27824 = a25203;
var G__27825 = b25204;
var G__27826 = c25205;
var G__27827 = d25206;
var G__27828 = e25207;
var G__27829 = f25208;
var G__27830 = g25209;
var G__27831 = h25210;
var G__27832 = i25211;
var G__27833 = j25212;
var G__27834 = k25213;
var G__27835 = l25214;
var G__27836 = m25215;
var G__27837 = n25216;
var G__27838 = o25217;
var G__27839 = p25218;
var G__27840 = q25219;
return (f.cljs$core$IFn$_invoke$arity$17 ? f.cljs$core$IFn$_invoke$arity$17(G__27824,G__27825,G__27826,G__27827,G__27828,G__27829,G__27830,G__27831,G__27832,G__27833,G__27834,G__27835,G__27836,G__27837,G__27838,G__27839,G__27840) : f.call(null,G__27824,G__27825,G__27826,G__27827,G__27828,G__27829,G__27830,G__27831,G__27832,G__27833,G__27834,G__27835,G__27836,G__27837,G__27838,G__27839,G__27840));
}
} else {
var r25220 = cljs.core._first(args__$18);
var args__$19 = cljs.core._rest(args__$18);
if((argc === (18))){
if(f.cljs$core$IFn$_invoke$arity$18){
return f.cljs$core$IFn$_invoke$arity$18(a25203,b25204,c25205,d25206,e25207,f25208,g25209,h25210,i25211,j25212,k25213,l25214,m25215,n25216,o25217,p25218,q25219,r25220);
} else {
var G__27841 = a25203;
var G__27842 = b25204;
var G__27843 = c25205;
var G__27844 = d25206;
var G__27845 = e25207;
var G__27846 = f25208;
var G__27847 = g25209;
var G__27848 = h25210;
var G__27849 = i25211;
var G__27850 = j25212;
var G__27851 = k25213;
var G__27852 = l25214;
var G__27853 = m25215;
var G__27854 = n25216;
var G__27855 = o25217;
var G__27856 = p25218;
var G__27857 = q25219;
var G__27858 = r25220;
return (f.cljs$core$IFn$_invoke$arity$18 ? f.cljs$core$IFn$_invoke$arity$18(G__27841,G__27842,G__27843,G__27844,G__27845,G__27846,G__27847,G__27848,G__27849,G__27850,G__27851,G__27852,G__27853,G__27854,G__27855,G__27856,G__27857,G__27858) : f.call(null,G__27841,G__27842,G__27843,G__27844,G__27845,G__27846,G__27847,G__27848,G__27849,G__27850,G__27851,G__27852,G__27853,G__27854,G__27855,G__27856,G__27857,G__27858));
}
} else {
var s25221 = cljs.core._first(args__$19);
var args__$20 = cljs.core._rest(args__$19);
if((argc === (19))){
if(f.cljs$core$IFn$_invoke$arity$19){
return f.cljs$core$IFn$_invoke$arity$19(a25203,b25204,c25205,d25206,e25207,f25208,g25209,h25210,i25211,j25212,k25213,l25214,m25215,n25216,o25217,p25218,q25219,r25220,s25221);
} else {
var G__27859 = a25203;
var G__27860 = b25204;
var G__27861 = c25205;
var G__27862 = d25206;
var G__27863 = e25207;
var G__27864 = f25208;
var G__27865 = g25209;
var G__27866 = h25210;
var G__27867 = i25211;
var G__27868 = j25212;
var G__27869 = k25213;
var G__27870 = l25214;
var G__27871 = m25215;
var G__27872 = n25216;
var G__27873 = o25217;
var G__27874 = p25218;
var G__27875 = q25219;
var G__27876 = r25220;
var G__27877 = s25221;
return (f.cljs$core$IFn$_invoke$arity$19 ? f.cljs$core$IFn$_invoke$arity$19(G__27859,G__27860,G__27861,G__27862,G__27863,G__27864,G__27865,G__27866,G__27867,G__27868,G__27869,G__27870,G__27871,G__27872,G__27873,G__27874,G__27875,G__27876,G__27877) : f.call(null,G__27859,G__27860,G__27861,G__27862,G__27863,G__27864,G__27865,G__27866,G__27867,G__27868,G__27869,G__27870,G__27871,G__27872,G__27873,G__27874,G__27875,G__27876,G__27877));
}
} else {
var t25222 = cljs.core._first(args__$20);
var args__$21 = cljs.core._rest(args__$20);
if((argc === (20))){
if(f.cljs$core$IFn$_invoke$arity$20){
return f.cljs$core$IFn$_invoke$arity$20(a25203,b25204,c25205,d25206,e25207,f25208,g25209,h25210,i25211,j25212,k25213,l25214,m25215,n25216,o25217,p25218,q25219,r25220,s25221,t25222);
} else {
var G__27878 = a25203;
var G__27879 = b25204;
var G__27880 = c25205;
var G__27881 = d25206;
var G__27882 = e25207;
var G__27883 = f25208;
var G__27884 = g25209;
var G__27885 = h25210;
var G__27886 = i25211;
var G__27887 = j25212;
var G__27888 = k25213;
var G__27889 = l25214;
var G__27890 = m25215;
var G__27891 = n25216;
var G__27892 = o25217;
var G__27893 = p25218;
var G__27894 = q25219;
var G__27895 = r25220;
var G__27896 = s25221;
var G__27897 = t25222;
return (f.cljs$core$IFn$_invoke$arity$20 ? f.cljs$core$IFn$_invoke$arity$20(G__27878,G__27879,G__27880,G__27881,G__27882,G__27883,G__27884,G__27885,G__27886,G__27887,G__27888,G__27889,G__27890,G__27891,G__27892,G__27893,G__27894,G__27895,G__27896,G__27897) : f.call(null,G__27878,G__27879,G__27880,G__27881,G__27882,G__27883,G__27884,G__27885,G__27886,G__27887,G__27888,G__27889,G__27890,G__27891,G__27892,G__27893,G__27894,G__27895,G__27896,G__27897));
}
} else {
throw (new Error("Only up to 20 arguments supported on functions"));
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
});

/**
* Applies fn f to the argument list formed by prepending intervening arguments to args.
* First cut.  Not lazy.  Needs to use emitted toApply.
* @param {...*} var_args
*/
cljs.core.apply = (function() {
var apply = null;
var apply__2 = (function (f,args){
var fixed_arity = f.cljs$lang$maxFixedArity;
if(f.cljs$lang$applyTo){
var bc = cljs.core.bounded_count(args,(fixed_arity + (1)));
if((bc <= fixed_arity)){
return cljs.core.apply_to(f,bc,args);
} else {
return f.cljs$lang$applyTo(args);
}
} else {
return f.apply(f,cljs.core.to_array(args));
}
});
var apply__3 = (function (f,x,args){
var arglist = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$2(x,args);
var fixed_arity = f.cljs$lang$maxFixedArity;
if(f.cljs$lang$applyTo){
var bc = cljs.core.bounded_count(arglist,(fixed_arity + (1)));
if((bc <= fixed_arity)){
return cljs.core.apply_to(f,bc,arglist);
} else {
return f.cljs$lang$applyTo(arglist);
}
} else {
return f.apply(f,cljs.core.to_array(arglist));
}
});
var apply__4 = (function (f,x,y,args){
var arglist = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$3(x,y,args);
var fixed_arity = f.cljs$lang$maxFixedArity;
if(f.cljs$lang$applyTo){
var bc = cljs.core.bounded_count(arglist,(fixed_arity + (1)));
if((bc <= fixed_arity)){
return cljs.core.apply_to(f,bc,arglist);
} else {
return f.cljs$lang$applyTo(arglist);
}
} else {
return f.apply(f,cljs.core.to_array(arglist));
}
});
var apply__5 = (function (f,x,y,z,args){
var arglist = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(x,y,z,args);
var fixed_arity = f.cljs$lang$maxFixedArity;
if(f.cljs$lang$applyTo){
var bc = cljs.core.bounded_count(arglist,(fixed_arity + (1)));
if((bc <= fixed_arity)){
return cljs.core.apply_to(f,bc,arglist);
} else {
return f.cljs$lang$applyTo(arglist);
}
} else {
return f.apply(f,cljs.core.to_array(arglist));
}
});
var apply__6 = (function() { 
var G__27898__delegate = function (f,a,b,c,d,args){
var arglist = cljs.core.cons(a,cljs.core.cons(b,cljs.core.cons(c,cljs.core.cons(d,cljs.core.spread(args)))));
var fixed_arity = f.cljs$lang$maxFixedArity;
if(f.cljs$lang$applyTo){
var bc = cljs.core.bounded_count(arglist,(fixed_arity + (1)));
if((bc <= fixed_arity)){
return cljs.core.apply_to(f,bc,arglist);
} else {
return f.cljs$lang$applyTo(arglist);
}
} else {
return f.apply(f,cljs.core.to_array(arglist));
}
};
var G__27898 = function (f,a,b,c,d,var_args){
var args = null;
if (arguments.length > 5) {
var G__27899__i = 0, G__27899__a = new Array(arguments.length -  5);
while (G__27899__i < G__27899__a.length) {G__27899__a[G__27899__i] = arguments[G__27899__i + 5]; ++G__27899__i;}
  args = new cljs.core.IndexedSeq(G__27899__a,0);
} 
return G__27898__delegate.call(this,f,a,b,c,d,args);};
G__27898.cljs$lang$maxFixedArity = 5;
G__27898.cljs$lang$applyTo = (function (arglist__27900){
var f = cljs.core.first(arglist__27900);
arglist__27900 = cljs.core.next(arglist__27900);
var a = cljs.core.first(arglist__27900);
arglist__27900 = cljs.core.next(arglist__27900);
var b = cljs.core.first(arglist__27900);
arglist__27900 = cljs.core.next(arglist__27900);
var c = cljs.core.first(arglist__27900);
arglist__27900 = cljs.core.next(arglist__27900);
var d = cljs.core.first(arglist__27900);
var args = cljs.core.rest(arglist__27900);
return G__27898__delegate(f,a,b,c,d,args);
});
G__27898.cljs$core$IFn$_invoke$arity$variadic = G__27898__delegate;
return G__27898;
})()
;
apply = function(f,a,b,c,d,var_args){
var args = var_args;
switch(arguments.length){
case 2:
return apply__2.call(this,f,a);
case 3:
return apply__3.call(this,f,a,b);
case 4:
return apply__4.call(this,f,a,b,c);
case 5:
return apply__5.call(this,f,a,b,c,d);
default:
var G__27901 = null;
if (arguments.length > 5) {
var G__27902__i = 0, G__27902__a = new Array(arguments.length -  5);
while (G__27902__i < G__27902__a.length) {G__27902__a[G__27902__i] = arguments[G__27902__i + 5]; ++G__27902__i;}
G__27901 = new cljs.core.IndexedSeq(G__27902__a,0);
}
return apply__6.cljs$core$IFn$_invoke$arity$variadic(f,a,b,c,d, G__27901);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
apply.cljs$lang$maxFixedArity = 5;
apply.cljs$lang$applyTo = apply__6.cljs$lang$applyTo;
apply.cljs$core$IFn$_invoke$arity$2 = apply__2;
apply.cljs$core$IFn$_invoke$arity$3 = apply__3;
apply.cljs$core$IFn$_invoke$arity$4 = apply__4;
apply.cljs$core$IFn$_invoke$arity$5 = apply__5;
apply.cljs$core$IFn$_invoke$arity$variadic = apply__6.cljs$core$IFn$_invoke$arity$variadic;
return apply;
})()
;
/**
* Returns an object of the same type and value as obj, with
* (apply f (meta obj) args) as its metadata.
* @param {...*} var_args
*/
cljs.core.vary_meta = (function() {
var vary_meta = null;
var vary_meta__2 = (function (obj,f){
return cljs.core.with_meta(obj,(function (){var G__27918 = cljs.core.meta(obj);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__27918) : f.call(null,G__27918));
})());
});
var vary_meta__3 = (function (obj,f,a){
return cljs.core.with_meta(obj,(function (){var G__27919 = cljs.core.meta(obj);
var G__27920 = a;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__27919,G__27920) : f.call(null,G__27919,G__27920));
})());
});
var vary_meta__4 = (function (obj,f,a,b){
return cljs.core.with_meta(obj,(function (){var G__27921 = cljs.core.meta(obj);
var G__27922 = a;
var G__27923 = b;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__27921,G__27922,G__27923) : f.call(null,G__27921,G__27922,G__27923));
})());
});
var vary_meta__5 = (function (obj,f,a,b,c){
return cljs.core.with_meta(obj,(function (){var G__27924 = cljs.core.meta(obj);
var G__27925 = a;
var G__27926 = b;
var G__27927 = c;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__27924,G__27925,G__27926,G__27927) : f.call(null,G__27924,G__27925,G__27926,G__27927));
})());
});
var vary_meta__6 = (function (obj,f,a,b,c,d){
return cljs.core.with_meta(obj,(function (){var G__27928 = cljs.core.meta(obj);
var G__27929 = a;
var G__27930 = b;
var G__27931 = c;
var G__27932 = d;
return (f.cljs$core$IFn$_invoke$arity$5 ? f.cljs$core$IFn$_invoke$arity$5(G__27928,G__27929,G__27930,G__27931,G__27932) : f.call(null,G__27928,G__27929,G__27930,G__27931,G__27932));
})());
});
var vary_meta__7 = (function() { 
var G__27933__delegate = function (obj,f,a,b,c,d,args){
return cljs.core.with_meta(obj,cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f,cljs.core.meta(obj),a,b,c,cljs.core.array_seq([d,args], 0)));
};
var G__27933 = function (obj,f,a,b,c,d,var_args){
var args = null;
if (arguments.length > 6) {
var G__27934__i = 0, G__27934__a = new Array(arguments.length -  6);
while (G__27934__i < G__27934__a.length) {G__27934__a[G__27934__i] = arguments[G__27934__i + 6]; ++G__27934__i;}
  args = new cljs.core.IndexedSeq(G__27934__a,0);
} 
return G__27933__delegate.call(this,obj,f,a,b,c,d,args);};
G__27933.cljs$lang$maxFixedArity = 6;
G__27933.cljs$lang$applyTo = (function (arglist__27935){
var obj = cljs.core.first(arglist__27935);
arglist__27935 = cljs.core.next(arglist__27935);
var f = cljs.core.first(arglist__27935);
arglist__27935 = cljs.core.next(arglist__27935);
var a = cljs.core.first(arglist__27935);
arglist__27935 = cljs.core.next(arglist__27935);
var b = cljs.core.first(arglist__27935);
arglist__27935 = cljs.core.next(arglist__27935);
var c = cljs.core.first(arglist__27935);
arglist__27935 = cljs.core.next(arglist__27935);
var d = cljs.core.first(arglist__27935);
var args = cljs.core.rest(arglist__27935);
return G__27933__delegate(obj,f,a,b,c,d,args);
});
G__27933.cljs$core$IFn$_invoke$arity$variadic = G__27933__delegate;
return G__27933;
})()
;
vary_meta = function(obj,f,a,b,c,d,var_args){
var args = var_args;
switch(arguments.length){
case 2:
return vary_meta__2.call(this,obj,f);
case 3:
return vary_meta__3.call(this,obj,f,a);
case 4:
return vary_meta__4.call(this,obj,f,a,b);
case 5:
return vary_meta__5.call(this,obj,f,a,b,c);
case 6:
return vary_meta__6.call(this,obj,f,a,b,c,d);
default:
var G__27936 = null;
if (arguments.length > 6) {
var G__27937__i = 0, G__27937__a = new Array(arguments.length -  6);
while (G__27937__i < G__27937__a.length) {G__27937__a[G__27937__i] = arguments[G__27937__i + 6]; ++G__27937__i;}
G__27936 = new cljs.core.IndexedSeq(G__27937__a,0);
}
return vary_meta__7.cljs$core$IFn$_invoke$arity$variadic(obj,f,a,b,c,d, G__27936);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
vary_meta.cljs$lang$maxFixedArity = 6;
vary_meta.cljs$lang$applyTo = vary_meta__7.cljs$lang$applyTo;
vary_meta.cljs$core$IFn$_invoke$arity$2 = vary_meta__2;
vary_meta.cljs$core$IFn$_invoke$arity$3 = vary_meta__3;
vary_meta.cljs$core$IFn$_invoke$arity$4 = vary_meta__4;
vary_meta.cljs$core$IFn$_invoke$arity$5 = vary_meta__5;
vary_meta.cljs$core$IFn$_invoke$arity$6 = vary_meta__6;
vary_meta.cljs$core$IFn$_invoke$arity$variadic = vary_meta__7.cljs$core$IFn$_invoke$arity$variadic;
return vary_meta;
})()
;
/**
* Same as (not (= obj1 obj2))
* @param {...*} var_args
*/
cljs.core.not_EQ_ = (function() {
var not_EQ_ = null;
var not_EQ___1 = (function (x){
return false;
});
var not_EQ___2 = (function (x,y){
return !(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x,y));
});
var not_EQ___3 = (function() { 
var G__27938__delegate = function (x,y,more){
return cljs.core.not(cljs.core.apply.cljs$core$IFn$_invoke$arity$4(cljs.core._EQ_,x,y,more));
};
var G__27938 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__27939__i = 0, G__27939__a = new Array(arguments.length -  2);
while (G__27939__i < G__27939__a.length) {G__27939__a[G__27939__i] = arguments[G__27939__i + 2]; ++G__27939__i;}
  more = new cljs.core.IndexedSeq(G__27939__a,0);
} 
return G__27938__delegate.call(this,x,y,more);};
G__27938.cljs$lang$maxFixedArity = 2;
G__27938.cljs$lang$applyTo = (function (arglist__27940){
var x = cljs.core.first(arglist__27940);
arglist__27940 = cljs.core.next(arglist__27940);
var y = cljs.core.first(arglist__27940);
var more = cljs.core.rest(arglist__27940);
return G__27938__delegate(x,y,more);
});
G__27938.cljs$core$IFn$_invoke$arity$variadic = G__27938__delegate;
return G__27938;
})()
;
not_EQ_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return not_EQ___1.call(this,x);
case 2:
return not_EQ___2.call(this,x,y);
default:
var G__27941 = null;
if (arguments.length > 2) {
var G__27942__i = 0, G__27942__a = new Array(arguments.length -  2);
while (G__27942__i < G__27942__a.length) {G__27942__a[G__27942__i] = arguments[G__27942__i + 2]; ++G__27942__i;}
G__27941 = new cljs.core.IndexedSeq(G__27942__a,0);
}
return not_EQ___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__27941);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
not_EQ_.cljs$lang$maxFixedArity = 2;
not_EQ_.cljs$lang$applyTo = not_EQ___3.cljs$lang$applyTo;
not_EQ_.cljs$core$IFn$_invoke$arity$1 = not_EQ___1;
not_EQ_.cljs$core$IFn$_invoke$arity$2 = not_EQ___2;
not_EQ_.cljs$core$IFn$_invoke$arity$variadic = not_EQ___3.cljs$core$IFn$_invoke$arity$variadic;
return not_EQ_;
})()
;
/**
* If coll is empty, returns nil, else coll
*/
cljs.core.not_empty = (function not_empty(coll){
if(cljs.core.seq(coll)){
return coll;
} else {
return null;
}
});
cljs.core.nil_iter = (function nil_iter(){
if(typeof cljs.core.t27946 !== 'undefined'){
} else {

/**
* @constructor
*/
cljs.core.t27946 = (function (nil_iter,meta27947){
this.nil_iter = nil_iter;
this.meta27947 = meta27947;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 393216;
})
cljs.core.t27946.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
return false;
});

cljs.core.t27946.prototype.next = (function (){
var self__ = this;
var _ = this;
return (new Error("No such element"));
});

cljs.core.t27946.prototype.remove = (function (){
var self__ = this;
var _ = this;
return (new Error("Unsupported operation"));
});

cljs.core.t27946.prototype.cljs$core$IMeta$_meta$arity$1 = (function (_27948){
var self__ = this;
var _27948__$1 = this;
return self__.meta27947;
});

cljs.core.t27946.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (_27948,meta27947__$1){
var self__ = this;
var _27948__$1 = this;
return (new cljs.core.t27946(self__.nil_iter,meta27947__$1));
});

cljs.core.t27946.cljs$lang$type = true;

cljs.core.t27946.cljs$lang$ctorStr = "cljs.core/t27946";

cljs.core.t27946.cljs$lang$ctorPrWriter = (function (this__24859__auto__,writer__24860__auto__,opt__24861__auto__){
return cljs.core._write(writer__24860__auto__,"cljs.core/t27946");
});

cljs.core.__GT_t27946 = (function __GT_t27946(nil_iter__$1,meta27947){
return (new cljs.core.t27946(nil_iter__$1,meta27947));
});

}

return (new cljs.core.t27946(nil_iter,new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null,"end-column","end-column",1425389514),54,new cljs.core.Keyword(null,"end-line","end-line",1837326455),2998,new cljs.core.Keyword(null,"column","column",2078222095),3,new cljs.core.Keyword(null,"line","line",212345235),2994,new cljs.core.Keyword(null,"file","file",-1269645878),"/home/callum/projects/closso/out/cljs/core.cljs"], null)));
});

/**
* @constructor
*/
cljs.core.StringIter = (function (s,i){
this.s = s;
this.i = i;
})
cljs.core.StringIter.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
return (self__.i < self__.s.length);
});

cljs.core.StringIter.prototype.next = (function (){
var self__ = this;
var _ = this;
var ret = self__.s.charAt(self__.i);
self__.i = (self__.i + (1));

return ret;
});

cljs.core.StringIter.prototype.remove = (function (){
var self__ = this;
var _ = this;
return (new Error("Unsupported operation"));
});

cljs.core.StringIter.cljs$lang$type = true;

cljs.core.StringIter.cljs$lang$ctorStr = "cljs.core/StringIter";

cljs.core.StringIter.cljs$lang$ctorPrWriter = (function (this__24859__auto__,writer__24860__auto__,opt__24861__auto__){
return cljs.core._write(writer__24860__auto__,"cljs.core/StringIter");
});

cljs.core.__GT_StringIter = (function __GT_StringIter(s,i){
return (new cljs.core.StringIter(s,i));
});

cljs.core.string_iter = (function string_iter(x){
return (new cljs.core.StringIter(x,(0)));
});

/**
* @constructor
*/
cljs.core.ArrayIter = (function (arr,i){
this.arr = arr;
this.i = i;
})
cljs.core.ArrayIter.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
return (self__.i < self__.arr.length);
});

cljs.core.ArrayIter.prototype.next = (function (){
var self__ = this;
var _ = this;
var ret = (self__.arr[self__.i]);
self__.i = (self__.i + (1));

return ret;
});

cljs.core.ArrayIter.prototype.remove = (function (){
var self__ = this;
var _ = this;
return (new Error("Unsupported operation"));
});

cljs.core.ArrayIter.cljs$lang$type = true;

cljs.core.ArrayIter.cljs$lang$ctorStr = "cljs.core/ArrayIter";

cljs.core.ArrayIter.cljs$lang$ctorPrWriter = (function (this__24859__auto__,writer__24860__auto__,opt__24861__auto__){
return cljs.core._write(writer__24860__auto__,"cljs.core/ArrayIter");
});

cljs.core.__GT_ArrayIter = (function __GT_ArrayIter(arr,i){
return (new cljs.core.ArrayIter(arr,i));
});

cljs.core.array_iter = (function array_iter(x){
return (new cljs.core.ArrayIter(x,(0)));
});
cljs.core.INIT = {};
cljs.core.START = {};

/**
* @constructor
*/
cljs.core.SeqIter = (function (_seq,_next){
this._seq = _seq;
this._next = _next;
})
cljs.core.SeqIter.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
if((self__._seq === cljs.core.INIT)){
self__._seq = cljs.core.START;

self__._next = cljs.core.seq(self__._next);
} else {
if((self__._seq === self__._next)){
self__._next = cljs.core.next(self__._seq);
} else {
}
}

return !((self__._next == null));
});

cljs.core.SeqIter.prototype.next = (function (){
var self__ = this;
var this$ = this;
if(cljs.core.not(this$.hasNext())){
throw (new Error("No such element"));
} else {
self__._seq = self__._next;

return cljs.core.first(self__._next);
}
});

cljs.core.SeqIter.prototype.remove = (function (){
var self__ = this;
var _ = this;
return (new Error("Unsupported operation"));
});

cljs.core.SeqIter.cljs$lang$type = true;

cljs.core.SeqIter.cljs$lang$ctorStr = "cljs.core/SeqIter";

cljs.core.SeqIter.cljs$lang$ctorPrWriter = (function (this__24859__auto__,writer__24860__auto__,opt__24861__auto__){
return cljs.core._write(writer__24860__auto__,"cljs.core/SeqIter");
});

cljs.core.__GT_SeqIter = (function __GT_SeqIter(_seq,_next){
return (new cljs.core.SeqIter(_seq,_next));
});

cljs.core.seq_iter = (function seq_iter(coll){
return (new cljs.core.SeqIter(cljs.core.INIT,coll));
});
cljs.core.iter = (function iter(coll){
if((coll == null)){
return cljs.core.nil_iter();
} else {
if(typeof coll === 'string'){
return cljs.core.string_iter(coll);
} else {
if(coll instanceof Array){
return cljs.core.array_iter(coll);
} else {
if(cljs.core.iterable_QMARK_(coll)){
return cljs.core._iterator(coll);
} else {
if(cljs.core.seqable_QMARK_(coll)){
return cljs.core.seq_iter(coll);
} else {
throw (new Error([cljs.core.str("Cannot create iterator from "),cljs.core.str(coll)].join('')));

}
}
}
}
}
});
cljs.core.lazy_transformer = (function lazy_transformer(stepper){
return (new cljs.core.LazyTransformer(stepper,null,null,null));
});

/**
* @constructor
*/
cljs.core.Stepper = (function (xform,iter){
this.xform = xform;
this.iter = iter;
})
cljs.core.Stepper.prototype.step = (function (lt){
var self__ = this;
var this$ = this;
while(true){
if(cljs.core.truth_((function (){var and__24260__auto__ = !((lt.stepper == null));
if(and__24260__auto__){
return self__.iter.hasNext();
} else {
return and__24260__auto__;
}
})())){
if(cljs.core.reduced_QMARK_((function (){var G__27949 = lt;
var G__27950 = self__.iter.next();
return (self__.xform.cljs$core$IFn$_invoke$arity$2 ? self__.xform.cljs$core$IFn$_invoke$arity$2(G__27949,G__27950) : self__.xform.call(null,G__27949,G__27950));
})())){
if((lt.rest == null)){
} else {
lt.rest.stepper = null;
}
} else {
continue;
}
} else {
}
break;
}

if((lt.stepper == null)){
return null;
} else {
var G__27951 = lt;
return (self__.xform.cljs$core$IFn$_invoke$arity$1 ? self__.xform.cljs$core$IFn$_invoke$arity$1(G__27951) : self__.xform.call(null,G__27951));
}
});

cljs.core.Stepper.cljs$lang$type = true;

cljs.core.Stepper.cljs$lang$ctorStr = "cljs.core/Stepper";

cljs.core.Stepper.cljs$lang$ctorPrWriter = (function (this__24859__auto__,writer__24860__auto__,opt__24861__auto__){
return cljs.core._write(writer__24860__auto__,"cljs.core/Stepper");
});

cljs.core.__GT_Stepper = (function __GT_Stepper(xform,iter){
return (new cljs.core.Stepper(xform,iter));
});

cljs.core.stepper = (function stepper(xform,iter){
var stepfn = (function() {
var stepfn = null;
var stepfn__1 = (function (result){
var lt = ((cljs.core.reduced_QMARK_(result))?cljs.core.deref(result):result);
lt.stepper = null;

return result;
});
var stepfn__2 = (function (result,input){
var lt = result;
lt.first = input;

lt.rest = cljs.core.lazy_transformer(lt.stepper);

lt.stepper = null;

return lt.rest;
});
stepfn = function(result,input){
switch(arguments.length){
case 1:
return stepfn__1.call(this,result);
case 2:
return stepfn__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
stepfn.cljs$core$IFn$_invoke$arity$1 = stepfn__1;
stepfn.cljs$core$IFn$_invoke$arity$2 = stepfn__2;
return stepfn;
})()
;
return (new cljs.core.Stepper((function (){var G__27953 = stepfn;
return (xform.cljs$core$IFn$_invoke$arity$1 ? xform.cljs$core$IFn$_invoke$arity$1(G__27953) : xform.call(null,G__27953));
})(),iter));
});

/**
* @constructor
*/
cljs.core.MultiStepper = (function (xform,iters,nexts){
this.xform = xform;
this.iters = iters;
this.nexts = nexts;
})
cljs.core.MultiStepper.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
var iters__$1 = cljs.core.seq(self__.iters);
while(true){
if(!((iters__$1 == null))){
var iter = cljs.core.first(iters__$1);
if(cljs.core.not(iter.hasNext())){
return false;
} else {
var G__27955 = cljs.core.next(iters__$1);
iters__$1 = G__27955;
continue;
}
} else {
return true;
}
break;
}
});

cljs.core.MultiStepper.prototype.next = (function (){
var self__ = this;
var _ = this;
var n__25159__auto___27956 = self__.iters.length;
var i_27957 = (0);
while(true){
if((i_27957 < n__25159__auto___27956)){
(self__.nexts[i_27957] = (self__.iters[i_27957]).next());

var G__27958 = (i_27957 + (1));
i_27957 = G__27958;
continue;
} else {
}
break;
}

return cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(self__.nexts,(0));
});

cljs.core.MultiStepper.prototype.step = (function (lt){
var self__ = this;
var this$ = this;
while(true){
if(cljs.core.truth_((function (){var and__24260__auto__ = !((lt.stepper == null));
if(and__24260__auto__){
return this$.hasNext();
} else {
return and__24260__auto__;
}
})())){
if(cljs.core.reduced_QMARK_(cljs.core.apply.cljs$core$IFn$_invoke$arity$2(self__.xform,cljs.core.cons(lt,this$.next())))){
if((lt.rest == null)){
} else {
lt.rest.stepper = null;
}
} else {
continue;
}
} else {
}
break;
}

if((lt.stepper == null)){
return null;
} else {
var G__27954 = lt;
return (self__.xform.cljs$core$IFn$_invoke$arity$1 ? self__.xform.cljs$core$IFn$_invoke$arity$1(G__27954) : self__.xform.call(null,G__27954));
}
});

cljs.core.MultiStepper.cljs$lang$type = true;

cljs.core.MultiStepper.cljs$lang$ctorStr = "cljs.core/MultiStepper";

cljs.core.MultiStepper.cljs$lang$ctorPrWriter = (function (this__24859__auto__,writer__24860__auto__,opt__24861__auto__){
return cljs.core._write(writer__24860__auto__,"cljs.core/MultiStepper");
});

cljs.core.__GT_MultiStepper = (function __GT_MultiStepper(xform,iters,nexts){
return (new cljs.core.MultiStepper(xform,iters,nexts));
});

cljs.core.multi_stepper = (function() {
var multi_stepper = null;
var multi_stepper__2 = (function (xform,iters){
return multi_stepper.cljs$core$IFn$_invoke$arity$3(xform,iters,(new Array(iters.length)));
});
var multi_stepper__3 = (function (xform,iters,nexts){
var stepfn = (function() {
var stepfn = null;
var stepfn__1 = (function (result){
var lt = ((cljs.core.reduced_QMARK_(result))?cljs.core.deref(result):result);
lt.stepper = null;

return lt;
});
var stepfn__2 = (function (result,input){
var lt = result;
lt.first = input;

lt.rest = cljs.core.lazy_transformer(lt.stepper);

lt.stepper = null;

return lt.rest;
});
stepfn = function(result,input){
switch(arguments.length){
case 1:
return stepfn__1.call(this,result);
case 2:
return stepfn__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
stepfn.cljs$core$IFn$_invoke$arity$1 = stepfn__1;
stepfn.cljs$core$IFn$_invoke$arity$2 = stepfn__2;
return stepfn;
})()
;
return (new cljs.core.MultiStepper((function (){var G__27963 = stepfn;
return (xform.cljs$core$IFn$_invoke$arity$1 ? xform.cljs$core$IFn$_invoke$arity$1(G__27963) : xform.call(null,G__27963));
})(),iters,nexts));
});
multi_stepper = function(xform,iters,nexts){
switch(arguments.length){
case 2:
return multi_stepper__2.call(this,xform,iters);
case 3:
return multi_stepper__3.call(this,xform,iters,nexts);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
multi_stepper.cljs$core$IFn$_invoke$arity$2 = multi_stepper__2;
multi_stepper.cljs$core$IFn$_invoke$arity$3 = multi_stepper__3;
return multi_stepper;
})()
;

/**
* @constructor
*/
cljs.core.LazyTransformer = (function (stepper,first,rest,meta){
this.stepper = stepper;
this.first = first;
this.rest = rest;
this.meta = meta;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 31719628;
})
cljs.core.LazyTransformer.prototype.cljs$core$INext$_next$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
if((self__.stepper == null)){
} else {
cljs.core._seq(this$__$1);
}

if((self__.rest == null)){
return null;
} else {
return cljs.core._seq(self__.rest);
}
});

cljs.core.LazyTransformer.prototype.cljs$core$ISeq$_first$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
if((self__.stepper == null)){
} else {
cljs.core._seq(this$__$1);
}

if((self__.rest == null)){
return null;
} else {
return self__.first;
}
});

cljs.core.LazyTransformer.prototype.cljs$core$ISeq$_rest$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
if((self__.stepper == null)){
} else {
cljs.core._seq(this$__$1);
}

if((self__.rest == null)){
return cljs.core.List.EMPTY;
} else {
return self__.rest;
}
});

cljs.core.LazyTransformer.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
if((self__.stepper == null)){
} else {
self__.stepper.step(this$__$1);
}

if((self__.rest == null)){
return null;
} else {
return this$__$1;
}
});

cljs.core.LazyTransformer.prototype.cljs$core$IHash$_hash$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return cljs.core.hash_ordered_coll(this$__$1);
});

cljs.core.LazyTransformer.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (this$,other){
var self__ = this;
var this$__$1 = this;
var s = cljs.core._seq(this$__$1);
if(!((s == null))){
return cljs.core.equiv_sequential(this$__$1,other);
} else {
return (cljs.core.sequential_QMARK_(other)) && ((cljs.core.seq(other) == null));
}
});

cljs.core.LazyTransformer.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return cljs.core.List.EMPTY;
});

cljs.core.LazyTransformer.prototype.cljs$core$ICollection$_conj$arity$2 = (function (this$,o){
var self__ = this;
var this$__$1 = this;
return cljs.core.cons(o,cljs.core._seq(this$__$1));
});

cljs.core.LazyTransformer.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (this$,new_meta){
var self__ = this;
var this$__$1 = this;
return (new cljs.core.LazyTransformer(self__.stepper,self__.first,self__.rest,new_meta));
});

cljs.core.LazyTransformer.cljs$lang$type = true;

cljs.core.LazyTransformer.cljs$lang$ctorStr = "cljs.core/LazyTransformer";

cljs.core.LazyTransformer.cljs$lang$ctorPrWriter = (function (this__24859__auto__,writer__24860__auto__,opt__24861__auto__){
return cljs.core._write(writer__24860__auto__,"cljs.core/LazyTransformer");
});

cljs.core.__GT_LazyTransformer = (function __GT_LazyTransformer(stepper,first,rest,meta){
return (new cljs.core.LazyTransformer(stepper,first,rest,meta));
});

(cljs.core.LazyTransformer.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__25250__auto__ = this;
return cljs.core.es6_iterator(this__25250__auto__);
}));
cljs.core.LazyTransformer.create = (function (xform,coll){
return (new cljs.core.LazyTransformer(cljs.core.stepper(xform,cljs.core.iter(coll)),null,null,null));
});
cljs.core.LazyTransformer.createMulti = (function (xform,colls){
var iters = [];
var seq__27964_27968 = cljs.core.seq(colls);
var chunk__27965_27969 = null;
var count__27966_27970 = (0);
var i__27967_27971 = (0);
while(true){
if((i__27967_27971 < count__27966_27970)){
var coll_27972 = chunk__27965_27969.cljs$core$IIndexed$_nth$arity$2(null,i__27967_27971);
iters.push(cljs.core.iter(coll_27972));

var G__27973 = seq__27964_27968;
var G__27974 = chunk__27965_27969;
var G__27975 = count__27966_27970;
var G__27976 = (i__27967_27971 + (1));
seq__27964_27968 = G__27973;
chunk__27965_27969 = G__27974;
count__27966_27970 = G__27975;
i__27967_27971 = G__27976;
continue;
} else {
var temp__4126__auto___27977 = cljs.core.seq(seq__27964_27968);
if(temp__4126__auto___27977){
var seq__27964_27978__$1 = temp__4126__auto___27977;
if(cljs.core.chunked_seq_QMARK_(seq__27964_27978__$1)){
var c__25059__auto___27979 = cljs.core.chunk_first(seq__27964_27978__$1);
var G__27980 = cljs.core.chunk_rest(seq__27964_27978__$1);
var G__27981 = c__25059__auto___27979;
var G__27982 = cljs.core.count(c__25059__auto___27979);
var G__27983 = (0);
seq__27964_27968 = G__27980;
chunk__27965_27969 = G__27981;
count__27966_27970 = G__27982;
i__27967_27971 = G__27983;
continue;
} else {
var coll_27984 = cljs.core.first(seq__27964_27978__$1);
iters.push(cljs.core.iter(coll_27984));

var G__27985 = cljs.core.next(seq__27964_27978__$1);
var G__27986 = null;
var G__27987 = (0);
var G__27988 = (0);
seq__27964_27968 = G__27985;
chunk__27965_27969 = G__27986;
count__27966_27970 = G__27987;
i__27967_27971 = G__27988;
continue;
}
} else {
}
}
break;
}

return (new cljs.core.LazyTransformer(cljs.core.multi_stepper.cljs$core$IFn$_invoke$arity$3(xform,iters,(new Array(iters.length))),null,null,null));
});
/**
* Coerces coll to a (possibly empty) sequence, if it is not already
* one. Will not force a lazy seq. (sequence nil) yields (), When a
* transducer is supplied, returns a lazy sequence of applications of
* the transform to the items in coll(s), i.e. to the set of first
* items of each coll, followed by the set of second
* items in each coll, until any one of the colls is exhausted.  Any
* remaining items in other colls are ignored. The transform should accept
* number-of-colls arguments
* @param {...*} var_args
*/
cljs.core.sequence = (function() {
var sequence = null;
var sequence__1 = (function (coll){
if(cljs.core.seq_QMARK_(coll)){
return coll;
} else {
var or__24272__auto__ = cljs.core.seq(coll);
if(or__24272__auto__){
return or__24272__auto__;
} else {
return cljs.core.List.EMPTY;
}
}
});
var sequence__2 = (function (xform,coll){
return cljs.core.LazyTransformer.create(xform,coll);
});
var sequence__3 = (function() { 
var G__27989__delegate = function (xform,coll,colls){
return cljs.core.LazyTransformer.createMulti(xform,cljs.core.to_array(cljs.core.cons(coll,colls)));
};
var G__27989 = function (xform,coll,var_args){
var colls = null;
if (arguments.length > 2) {
var G__27990__i = 0, G__27990__a = new Array(arguments.length -  2);
while (G__27990__i < G__27990__a.length) {G__27990__a[G__27990__i] = arguments[G__27990__i + 2]; ++G__27990__i;}
  colls = new cljs.core.IndexedSeq(G__27990__a,0);
} 
return G__27989__delegate.call(this,xform,coll,colls);};
G__27989.cljs$lang$maxFixedArity = 2;
G__27989.cljs$lang$applyTo = (function (arglist__27991){
var xform = cljs.core.first(arglist__27991);
arglist__27991 = cljs.core.next(arglist__27991);
var coll = cljs.core.first(arglist__27991);
var colls = cljs.core.rest(arglist__27991);
return G__27989__delegate(xform,coll,colls);
});
G__27989.cljs$core$IFn$_invoke$arity$variadic = G__27989__delegate;
return G__27989;
})()
;
sequence = function(xform,coll,var_args){
var colls = var_args;
switch(arguments.length){
case 1:
return sequence__1.call(this,xform);
case 2:
return sequence__2.call(this,xform,coll);
default:
var G__27992 = null;
if (arguments.length > 2) {
var G__27993__i = 0, G__27993__a = new Array(arguments.length -  2);
while (G__27993__i < G__27993__a.length) {G__27993__a[G__27993__i] = arguments[G__27993__i + 2]; ++G__27993__i;}
G__27992 = new cljs.core.IndexedSeq(G__27993__a,0);
}
return sequence__3.cljs$core$IFn$_invoke$arity$variadic(xform,coll, G__27992);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
sequence.cljs$lang$maxFixedArity = 2;
sequence.cljs$lang$applyTo = sequence__3.cljs$lang$applyTo;
sequence.cljs$core$IFn$_invoke$arity$1 = sequence__1;
sequence.cljs$core$IFn$_invoke$arity$2 = sequence__2;
sequence.cljs$core$IFn$_invoke$arity$variadic = sequence__3.cljs$core$IFn$_invoke$arity$variadic;
return sequence;
})()
;
/**
* Returns true if (pred x) is logical true for every x in coll, else
* false.
*/
cljs.core.every_QMARK_ = (function every_QMARK_(pred,coll){
while(true){
if((cljs.core.seq(coll) == null)){
return true;
} else {
if(cljs.core.truth_((function (){var G__27995 = cljs.core.first(coll);
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__27995) : pred.call(null,G__27995));
})())){
var G__27996 = pred;
var G__27997 = cljs.core.next(coll);
pred = G__27996;
coll = G__27997;
continue;
} else {
return false;

}
}
break;
}
});
/**
* Returns false if (pred x) is logical true for every x in
* coll, else true.
*/
cljs.core.not_every_QMARK_ = (function not_every_QMARK_(pred,coll){
return !(cljs.core.every_QMARK_(pred,coll));
});
/**
* Returns the first logical true value of (pred x) for any x in coll,
* else nil.  One common idiom is to use a set as pred, for example
* this will return :fred if :fred is in the sequence, otherwise nil:
* (some #{:fred} coll)
*/
cljs.core.some = (function some(pred,coll){
while(true){
if(cljs.core.seq(coll)){
var or__24272__auto__ = (function (){var G__28001 = cljs.core.first(coll);
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__28001) : pred.call(null,G__28001));
})();
if(cljs.core.truth_(or__24272__auto__)){
return or__24272__auto__;
} else {
var G__28002 = pred;
var G__28003 = cljs.core.next(coll);
pred = G__28002;
coll = G__28003;
continue;
}
} else {
return null;
}
break;
}
});
/**
* Returns false if (pred x) is logical true for any x in coll,
* else true.
*/
cljs.core.not_any_QMARK_ = (function not_any_QMARK_(pred,coll){
return cljs.core.not(cljs.core.some(pred,coll));
});
/**
* Returns true if n is even, throws an exception if n is not an integer
*/
cljs.core.even_QMARK_ = (function even_QMARK_(n){
if(cljs.core.integer_QMARK_(n)){
return ((n & (1)) === (0));
} else {
throw (new Error([cljs.core.str("Argument must be an integer: "),cljs.core.str(n)].join('')));
}
});
/**
* Returns true if n is odd, throws an exception if n is not an integer
*/
cljs.core.odd_QMARK_ = (function odd_QMARK_(n){
return !(cljs.core.even_QMARK_(n));
});
/**
* Takes a fn f and returns a fn that takes the same arguments as f,
* has the same effects, if any, and returns the opposite truth value.
*/
cljs.core.complement = (function complement(f){
return (function() {
var G__28010 = null;
var G__28010__0 = (function (){
return cljs.core.not((function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})());
});
var G__28010__1 = (function (x){
return cljs.core.not((function (){var G__28007 = x;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__28007) : f.call(null,G__28007));
})());
});
var G__28010__2 = (function (x,y){
return cljs.core.not((function (){var G__28008 = x;
var G__28009 = y;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__28008,G__28009) : f.call(null,G__28008,G__28009));
})());
});
var G__28010__3 = (function() { 
var G__28011__delegate = function (x,y,zs){
return cljs.core.not(cljs.core.apply.cljs$core$IFn$_invoke$arity$4(f,x,y,zs));
};
var G__28011 = function (x,y,var_args){
var zs = null;
if (arguments.length > 2) {
var G__28012__i = 0, G__28012__a = new Array(arguments.length -  2);
while (G__28012__i < G__28012__a.length) {G__28012__a[G__28012__i] = arguments[G__28012__i + 2]; ++G__28012__i;}
  zs = new cljs.core.IndexedSeq(G__28012__a,0);
} 
return G__28011__delegate.call(this,x,y,zs);};
G__28011.cljs$lang$maxFixedArity = 2;
G__28011.cljs$lang$applyTo = (function (arglist__28013){
var x = cljs.core.first(arglist__28013);
arglist__28013 = cljs.core.next(arglist__28013);
var y = cljs.core.first(arglist__28013);
var zs = cljs.core.rest(arglist__28013);
return G__28011__delegate(x,y,zs);
});
G__28011.cljs$core$IFn$_invoke$arity$variadic = G__28011__delegate;
return G__28011;
})()
;
G__28010 = function(x,y,var_args){
var zs = var_args;
switch(arguments.length){
case 0:
return G__28010__0.call(this);
case 1:
return G__28010__1.call(this,x);
case 2:
return G__28010__2.call(this,x,y);
default:
var G__28014 = null;
if (arguments.length > 2) {
var G__28015__i = 0, G__28015__a = new Array(arguments.length -  2);
while (G__28015__i < G__28015__a.length) {G__28015__a[G__28015__i] = arguments[G__28015__i + 2]; ++G__28015__i;}
G__28014 = new cljs.core.IndexedSeq(G__28015__a,0);
}
return G__28010__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__28014);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__28010.cljs$lang$maxFixedArity = 2;
G__28010.cljs$lang$applyTo = G__28010__3.cljs$lang$applyTo;
G__28010.cljs$core$IFn$_invoke$arity$0 = G__28010__0;
G__28010.cljs$core$IFn$_invoke$arity$1 = G__28010__1;
G__28010.cljs$core$IFn$_invoke$arity$2 = G__28010__2;
G__28010.cljs$core$IFn$_invoke$arity$variadic = G__28010__3.cljs$core$IFn$_invoke$arity$variadic;
return G__28010;
})()
});
/**
* Returns a function that takes any number of arguments and returns x.
*/
cljs.core.constantly = (function constantly(x){
return (function() { 
var G__28016__delegate = function (args){
return x;
};
var G__28016 = function (var_args){
var args = null;
if (arguments.length > 0) {
var G__28017__i = 0, G__28017__a = new Array(arguments.length -  0);
while (G__28017__i < G__28017__a.length) {G__28017__a[G__28017__i] = arguments[G__28017__i + 0]; ++G__28017__i;}
  args = new cljs.core.IndexedSeq(G__28017__a,0);
} 
return G__28016__delegate.call(this,args);};
G__28016.cljs$lang$maxFixedArity = 0;
G__28016.cljs$lang$applyTo = (function (arglist__28018){
var args = cljs.core.seq(arglist__28018);
return G__28016__delegate(args);
});
G__28016.cljs$core$IFn$_invoke$arity$variadic = G__28016__delegate;
return G__28016;
})()
;
});
/**
* Takes a set of functions and returns a fn that is the composition
* of those fns.  The returned fn takes a variable number of args,
* applies the rightmost of fns to the args, the next
* fn (right-to-left) to the result, etc.
* @param {...*} var_args
*/
cljs.core.comp = (function() {
var comp = null;
var comp__0 = (function (){
return cljs.core.identity;
});
var comp__1 = (function (f){
return f;
});
var comp__2 = (function (f,g){
return (function() {
var G__28073 = null;
var G__28073__0 = (function (){
var G__28046 = (function (){return (g.cljs$core$IFn$_invoke$arity$0 ? g.cljs$core$IFn$_invoke$arity$0() : g.call(null));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__28046) : f.call(null,G__28046));
});
var G__28073__1 = (function (x){
var G__28047 = (function (){var G__28048 = x;
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__28048) : g.call(null,G__28048));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__28047) : f.call(null,G__28047));
});
var G__28073__2 = (function (x,y){
var G__28049 = (function (){var G__28050 = x;
var G__28051 = y;
return (g.cljs$core$IFn$_invoke$arity$2 ? g.cljs$core$IFn$_invoke$arity$2(G__28050,G__28051) : g.call(null,G__28050,G__28051));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__28049) : f.call(null,G__28049));
});
var G__28073__3 = (function (x,y,z){
var G__28052 = (function (){var G__28053 = x;
var G__28054 = y;
var G__28055 = z;
return (g.cljs$core$IFn$_invoke$arity$3 ? g.cljs$core$IFn$_invoke$arity$3(G__28053,G__28054,G__28055) : g.call(null,G__28053,G__28054,G__28055));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__28052) : f.call(null,G__28052));
});
var G__28073__4 = (function() { 
var G__28074__delegate = function (x,y,z,args){
var G__28056 = cljs.core.apply.cljs$core$IFn$_invoke$arity$5(g,x,y,z,args);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__28056) : f.call(null,G__28056));
};
var G__28074 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__28075__i = 0, G__28075__a = new Array(arguments.length -  3);
while (G__28075__i < G__28075__a.length) {G__28075__a[G__28075__i] = arguments[G__28075__i + 3]; ++G__28075__i;}
  args = new cljs.core.IndexedSeq(G__28075__a,0);
} 
return G__28074__delegate.call(this,x,y,z,args);};
G__28074.cljs$lang$maxFixedArity = 3;
G__28074.cljs$lang$applyTo = (function (arglist__28076){
var x = cljs.core.first(arglist__28076);
arglist__28076 = cljs.core.next(arglist__28076);
var y = cljs.core.first(arglist__28076);
arglist__28076 = cljs.core.next(arglist__28076);
var z = cljs.core.first(arglist__28076);
var args = cljs.core.rest(arglist__28076);
return G__28074__delegate(x,y,z,args);
});
G__28074.cljs$core$IFn$_invoke$arity$variadic = G__28074__delegate;
return G__28074;
})()
;
G__28073 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__28073__0.call(this);
case 1:
return G__28073__1.call(this,x);
case 2:
return G__28073__2.call(this,x,y);
case 3:
return G__28073__3.call(this,x,y,z);
default:
var G__28077 = null;
if (arguments.length > 3) {
var G__28078__i = 0, G__28078__a = new Array(arguments.length -  3);
while (G__28078__i < G__28078__a.length) {G__28078__a[G__28078__i] = arguments[G__28078__i + 3]; ++G__28078__i;}
G__28077 = new cljs.core.IndexedSeq(G__28078__a,0);
}
return G__28073__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__28077);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__28073.cljs$lang$maxFixedArity = 3;
G__28073.cljs$lang$applyTo = G__28073__4.cljs$lang$applyTo;
G__28073.cljs$core$IFn$_invoke$arity$0 = G__28073__0;
G__28073.cljs$core$IFn$_invoke$arity$1 = G__28073__1;
G__28073.cljs$core$IFn$_invoke$arity$2 = G__28073__2;
G__28073.cljs$core$IFn$_invoke$arity$3 = G__28073__3;
G__28073.cljs$core$IFn$_invoke$arity$variadic = G__28073__4.cljs$core$IFn$_invoke$arity$variadic;
return G__28073;
})()
});
var comp__3 = (function (f,g,h){
return (function() {
var G__28079 = null;
var G__28079__0 = (function (){
var G__28057 = (function (){var G__28058 = (function (){return (h.cljs$core$IFn$_invoke$arity$0 ? h.cljs$core$IFn$_invoke$arity$0() : h.call(null));
})();
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__28058) : g.call(null,G__28058));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__28057) : f.call(null,G__28057));
});
var G__28079__1 = (function (x){
var G__28059 = (function (){var G__28060 = (function (){var G__28061 = x;
return (h.cljs$core$IFn$_invoke$arity$1 ? h.cljs$core$IFn$_invoke$arity$1(G__28061) : h.call(null,G__28061));
})();
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__28060) : g.call(null,G__28060));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__28059) : f.call(null,G__28059));
});
var G__28079__2 = (function (x,y){
var G__28062 = (function (){var G__28063 = (function (){var G__28064 = x;
var G__28065 = y;
return (h.cljs$core$IFn$_invoke$arity$2 ? h.cljs$core$IFn$_invoke$arity$2(G__28064,G__28065) : h.call(null,G__28064,G__28065));
})();
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__28063) : g.call(null,G__28063));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__28062) : f.call(null,G__28062));
});
var G__28079__3 = (function (x,y,z){
var G__28066 = (function (){var G__28067 = (function (){var G__28068 = x;
var G__28069 = y;
var G__28070 = z;
return (h.cljs$core$IFn$_invoke$arity$3 ? h.cljs$core$IFn$_invoke$arity$3(G__28068,G__28069,G__28070) : h.call(null,G__28068,G__28069,G__28070));
})();
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__28067) : g.call(null,G__28067));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__28066) : f.call(null,G__28066));
});
var G__28079__4 = (function() { 
var G__28080__delegate = function (x,y,z,args){
var G__28071 = (function (){var G__28072 = cljs.core.apply.cljs$core$IFn$_invoke$arity$5(h,x,y,z,args);
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__28072) : g.call(null,G__28072));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__28071) : f.call(null,G__28071));
};
var G__28080 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__28081__i = 0, G__28081__a = new Array(arguments.length -  3);
while (G__28081__i < G__28081__a.length) {G__28081__a[G__28081__i] = arguments[G__28081__i + 3]; ++G__28081__i;}
  args = new cljs.core.IndexedSeq(G__28081__a,0);
} 
return G__28080__delegate.call(this,x,y,z,args);};
G__28080.cljs$lang$maxFixedArity = 3;
G__28080.cljs$lang$applyTo = (function (arglist__28082){
var x = cljs.core.first(arglist__28082);
arglist__28082 = cljs.core.next(arglist__28082);
var y = cljs.core.first(arglist__28082);
arglist__28082 = cljs.core.next(arglist__28082);
var z = cljs.core.first(arglist__28082);
var args = cljs.core.rest(arglist__28082);
return G__28080__delegate(x,y,z,args);
});
G__28080.cljs$core$IFn$_invoke$arity$variadic = G__28080__delegate;
return G__28080;
})()
;
G__28079 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__28079__0.call(this);
case 1:
return G__28079__1.call(this,x);
case 2:
return G__28079__2.call(this,x,y);
case 3:
return G__28079__3.call(this,x,y,z);
default:
var G__28083 = null;
if (arguments.length > 3) {
var G__28084__i = 0, G__28084__a = new Array(arguments.length -  3);
while (G__28084__i < G__28084__a.length) {G__28084__a[G__28084__i] = arguments[G__28084__i + 3]; ++G__28084__i;}
G__28083 = new cljs.core.IndexedSeq(G__28084__a,0);
}
return G__28079__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__28083);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__28079.cljs$lang$maxFixedArity = 3;
G__28079.cljs$lang$applyTo = G__28079__4.cljs$lang$applyTo;
G__28079.cljs$core$IFn$_invoke$arity$0 = G__28079__0;
G__28079.cljs$core$IFn$_invoke$arity$1 = G__28079__1;
G__28079.cljs$core$IFn$_invoke$arity$2 = G__28079__2;
G__28079.cljs$core$IFn$_invoke$arity$3 = G__28079__3;
G__28079.cljs$core$IFn$_invoke$arity$variadic = G__28079__4.cljs$core$IFn$_invoke$arity$variadic;
return G__28079;
})()
});
var comp__4 = (function() { 
var G__28085__delegate = function (f1,f2,f3,fs){
var fs__$1 = cljs.core.reverse(cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(f1,f2,f3,fs));
return ((function (fs__$1){
return (function() { 
var G__28086__delegate = function (args){
var ret = cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.first(fs__$1),args);
var fs__$2 = cljs.core.next(fs__$1);
while(true){
if(fs__$2){
var G__28087 = cljs.core.first(fs__$2).call(null,ret);
var G__28088 = cljs.core.next(fs__$2);
ret = G__28087;
fs__$2 = G__28088;
continue;
} else {
return ret;
}
break;
}
};
var G__28086 = function (var_args){
var args = null;
if (arguments.length > 0) {
var G__28089__i = 0, G__28089__a = new Array(arguments.length -  0);
while (G__28089__i < G__28089__a.length) {G__28089__a[G__28089__i] = arguments[G__28089__i + 0]; ++G__28089__i;}
  args = new cljs.core.IndexedSeq(G__28089__a,0);
} 
return G__28086__delegate.call(this,args);};
G__28086.cljs$lang$maxFixedArity = 0;
G__28086.cljs$lang$applyTo = (function (arglist__28090){
var args = cljs.core.seq(arglist__28090);
return G__28086__delegate(args);
});
G__28086.cljs$core$IFn$_invoke$arity$variadic = G__28086__delegate;
return G__28086;
})()
;
;})(fs__$1))
};
var G__28085 = function (f1,f2,f3,var_args){
var fs = null;
if (arguments.length > 3) {
var G__28091__i = 0, G__28091__a = new Array(arguments.length -  3);
while (G__28091__i < G__28091__a.length) {G__28091__a[G__28091__i] = arguments[G__28091__i + 3]; ++G__28091__i;}
  fs = new cljs.core.IndexedSeq(G__28091__a,0);
} 
return G__28085__delegate.call(this,f1,f2,f3,fs);};
G__28085.cljs$lang$maxFixedArity = 3;
G__28085.cljs$lang$applyTo = (function (arglist__28092){
var f1 = cljs.core.first(arglist__28092);
arglist__28092 = cljs.core.next(arglist__28092);
var f2 = cljs.core.first(arglist__28092);
arglist__28092 = cljs.core.next(arglist__28092);
var f3 = cljs.core.first(arglist__28092);
var fs = cljs.core.rest(arglist__28092);
return G__28085__delegate(f1,f2,f3,fs);
});
G__28085.cljs$core$IFn$_invoke$arity$variadic = G__28085__delegate;
return G__28085;
})()
;
comp = function(f1,f2,f3,var_args){
var fs = var_args;
switch(arguments.length){
case 0:
return comp__0.call(this);
case 1:
return comp__1.call(this,f1);
case 2:
return comp__2.call(this,f1,f2);
case 3:
return comp__3.call(this,f1,f2,f3);
default:
var G__28093 = null;
if (arguments.length > 3) {
var G__28094__i = 0, G__28094__a = new Array(arguments.length -  3);
while (G__28094__i < G__28094__a.length) {G__28094__a[G__28094__i] = arguments[G__28094__i + 3]; ++G__28094__i;}
G__28093 = new cljs.core.IndexedSeq(G__28094__a,0);
}
return comp__4.cljs$core$IFn$_invoke$arity$variadic(f1,f2,f3, G__28093);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
comp.cljs$lang$maxFixedArity = 3;
comp.cljs$lang$applyTo = comp__4.cljs$lang$applyTo;
comp.cljs$core$IFn$_invoke$arity$0 = comp__0;
comp.cljs$core$IFn$_invoke$arity$1 = comp__1;
comp.cljs$core$IFn$_invoke$arity$2 = comp__2;
comp.cljs$core$IFn$_invoke$arity$3 = comp__3;
comp.cljs$core$IFn$_invoke$arity$variadic = comp__4.cljs$core$IFn$_invoke$arity$variadic;
return comp;
})()
;
/**
* Takes a function f and fewer than the normal arguments to f, and
* returns a fn that takes a variable number of additional args. When
* called, the returned function calls f with args + additional args.
* @param {...*} var_args
*/
cljs.core.partial = (function() {
var partial = null;
var partial__1 = (function (f){
return f;
});
var partial__2 = (function (f,arg1){
return (function() {
var G__28179 = null;
var G__28179__0 = (function (){
var G__28137 = arg1;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__28137) : f.call(null,G__28137));
});
var G__28179__1 = (function (x){
var G__28138 = arg1;
var G__28139 = x;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__28138,G__28139) : f.call(null,G__28138,G__28139));
});
var G__28179__2 = (function (x,y){
var G__28140 = arg1;
var G__28141 = x;
var G__28142 = y;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__28140,G__28141,G__28142) : f.call(null,G__28140,G__28141,G__28142));
});
var G__28179__3 = (function (x,y,z){
var G__28143 = arg1;
var G__28144 = x;
var G__28145 = y;
var G__28146 = z;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__28143,G__28144,G__28145,G__28146) : f.call(null,G__28143,G__28144,G__28145,G__28146));
});
var G__28179__4 = (function() { 
var G__28180__delegate = function (x,y,z,args){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f,arg1,x,y,z,cljs.core.array_seq([args], 0));
};
var G__28180 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__28181__i = 0, G__28181__a = new Array(arguments.length -  3);
while (G__28181__i < G__28181__a.length) {G__28181__a[G__28181__i] = arguments[G__28181__i + 3]; ++G__28181__i;}
  args = new cljs.core.IndexedSeq(G__28181__a,0);
} 
return G__28180__delegate.call(this,x,y,z,args);};
G__28180.cljs$lang$maxFixedArity = 3;
G__28180.cljs$lang$applyTo = (function (arglist__28182){
var x = cljs.core.first(arglist__28182);
arglist__28182 = cljs.core.next(arglist__28182);
var y = cljs.core.first(arglist__28182);
arglist__28182 = cljs.core.next(arglist__28182);
var z = cljs.core.first(arglist__28182);
var args = cljs.core.rest(arglist__28182);
return G__28180__delegate(x,y,z,args);
});
G__28180.cljs$core$IFn$_invoke$arity$variadic = G__28180__delegate;
return G__28180;
})()
;
G__28179 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__28179__0.call(this);
case 1:
return G__28179__1.call(this,x);
case 2:
return G__28179__2.call(this,x,y);
case 3:
return G__28179__3.call(this,x,y,z);
default:
var G__28183 = null;
if (arguments.length > 3) {
var G__28184__i = 0, G__28184__a = new Array(arguments.length -  3);
while (G__28184__i < G__28184__a.length) {G__28184__a[G__28184__i] = arguments[G__28184__i + 3]; ++G__28184__i;}
G__28183 = new cljs.core.IndexedSeq(G__28184__a,0);
}
return G__28179__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__28183);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__28179.cljs$lang$maxFixedArity = 3;
G__28179.cljs$lang$applyTo = G__28179__4.cljs$lang$applyTo;
G__28179.cljs$core$IFn$_invoke$arity$0 = G__28179__0;
G__28179.cljs$core$IFn$_invoke$arity$1 = G__28179__1;
G__28179.cljs$core$IFn$_invoke$arity$2 = G__28179__2;
G__28179.cljs$core$IFn$_invoke$arity$3 = G__28179__3;
G__28179.cljs$core$IFn$_invoke$arity$variadic = G__28179__4.cljs$core$IFn$_invoke$arity$variadic;
return G__28179;
})()
});
var partial__3 = (function (f,arg1,arg2){
return (function() {
var G__28185 = null;
var G__28185__0 = (function (){
var G__28147 = arg1;
var G__28148 = arg2;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__28147,G__28148) : f.call(null,G__28147,G__28148));
});
var G__28185__1 = (function (x){
var G__28149 = arg1;
var G__28150 = arg2;
var G__28151 = x;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__28149,G__28150,G__28151) : f.call(null,G__28149,G__28150,G__28151));
});
var G__28185__2 = (function (x,y){
var G__28152 = arg1;
var G__28153 = arg2;
var G__28154 = x;
var G__28155 = y;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__28152,G__28153,G__28154,G__28155) : f.call(null,G__28152,G__28153,G__28154,G__28155));
});
var G__28185__3 = (function (x,y,z){
var G__28156 = arg1;
var G__28157 = arg2;
var G__28158 = x;
var G__28159 = y;
var G__28160 = z;
return (f.cljs$core$IFn$_invoke$arity$5 ? f.cljs$core$IFn$_invoke$arity$5(G__28156,G__28157,G__28158,G__28159,G__28160) : f.call(null,G__28156,G__28157,G__28158,G__28159,G__28160));
});
var G__28185__4 = (function() { 
var G__28186__delegate = function (x,y,z,args){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f,arg1,arg2,x,y,cljs.core.array_seq([z,args], 0));
};
var G__28186 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__28187__i = 0, G__28187__a = new Array(arguments.length -  3);
while (G__28187__i < G__28187__a.length) {G__28187__a[G__28187__i] = arguments[G__28187__i + 3]; ++G__28187__i;}
  args = new cljs.core.IndexedSeq(G__28187__a,0);
} 
return G__28186__delegate.call(this,x,y,z,args);};
G__28186.cljs$lang$maxFixedArity = 3;
G__28186.cljs$lang$applyTo = (function (arglist__28188){
var x = cljs.core.first(arglist__28188);
arglist__28188 = cljs.core.next(arglist__28188);
var y = cljs.core.first(arglist__28188);
arglist__28188 = cljs.core.next(arglist__28188);
var z = cljs.core.first(arglist__28188);
var args = cljs.core.rest(arglist__28188);
return G__28186__delegate(x,y,z,args);
});
G__28186.cljs$core$IFn$_invoke$arity$variadic = G__28186__delegate;
return G__28186;
})()
;
G__28185 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__28185__0.call(this);
case 1:
return G__28185__1.call(this,x);
case 2:
return G__28185__2.call(this,x,y);
case 3:
return G__28185__3.call(this,x,y,z);
default:
var G__28189 = null;
if (arguments.length > 3) {
var G__28190__i = 0, G__28190__a = new Array(arguments.length -  3);
while (G__28190__i < G__28190__a.length) {G__28190__a[G__28190__i] = arguments[G__28190__i + 3]; ++G__28190__i;}
G__28189 = new cljs.core.IndexedSeq(G__28190__a,0);
}
return G__28185__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__28189);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__28185.cljs$lang$maxFixedArity = 3;
G__28185.cljs$lang$applyTo = G__28185__4.cljs$lang$applyTo;
G__28185.cljs$core$IFn$_invoke$arity$0 = G__28185__0;
G__28185.cljs$core$IFn$_invoke$arity$1 = G__28185__1;
G__28185.cljs$core$IFn$_invoke$arity$2 = G__28185__2;
G__28185.cljs$core$IFn$_invoke$arity$3 = G__28185__3;
G__28185.cljs$core$IFn$_invoke$arity$variadic = G__28185__4.cljs$core$IFn$_invoke$arity$variadic;
return G__28185;
})()
});
var partial__4 = (function (f,arg1,arg2,arg3){
return (function() {
var G__28191 = null;
var G__28191__0 = (function (){
var G__28161 = arg1;
var G__28162 = arg2;
var G__28163 = arg3;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__28161,G__28162,G__28163) : f.call(null,G__28161,G__28162,G__28163));
});
var G__28191__1 = (function (x){
var G__28164 = arg1;
var G__28165 = arg2;
var G__28166 = arg3;
var G__28167 = x;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__28164,G__28165,G__28166,G__28167) : f.call(null,G__28164,G__28165,G__28166,G__28167));
});
var G__28191__2 = (function (x,y){
var G__28168 = arg1;
var G__28169 = arg2;
var G__28170 = arg3;
var G__28171 = x;
var G__28172 = y;
return (f.cljs$core$IFn$_invoke$arity$5 ? f.cljs$core$IFn$_invoke$arity$5(G__28168,G__28169,G__28170,G__28171,G__28172) : f.call(null,G__28168,G__28169,G__28170,G__28171,G__28172));
});
var G__28191__3 = (function (x,y,z){
var G__28173 = arg1;
var G__28174 = arg2;
var G__28175 = arg3;
var G__28176 = x;
var G__28177 = y;
var G__28178 = z;
return (f.cljs$core$IFn$_invoke$arity$6 ? f.cljs$core$IFn$_invoke$arity$6(G__28173,G__28174,G__28175,G__28176,G__28177,G__28178) : f.call(null,G__28173,G__28174,G__28175,G__28176,G__28177,G__28178));
});
var G__28191__4 = (function() { 
var G__28192__delegate = function (x,y,z,args){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f,arg1,arg2,arg3,x,cljs.core.array_seq([y,z,args], 0));
};
var G__28192 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__28193__i = 0, G__28193__a = new Array(arguments.length -  3);
while (G__28193__i < G__28193__a.length) {G__28193__a[G__28193__i] = arguments[G__28193__i + 3]; ++G__28193__i;}
  args = new cljs.core.IndexedSeq(G__28193__a,0);
} 
return G__28192__delegate.call(this,x,y,z,args);};
G__28192.cljs$lang$maxFixedArity = 3;
G__28192.cljs$lang$applyTo = (function (arglist__28194){
var x = cljs.core.first(arglist__28194);
arglist__28194 = cljs.core.next(arglist__28194);
var y = cljs.core.first(arglist__28194);
arglist__28194 = cljs.core.next(arglist__28194);
var z = cljs.core.first(arglist__28194);
var args = cljs.core.rest(arglist__28194);
return G__28192__delegate(x,y,z,args);
});
G__28192.cljs$core$IFn$_invoke$arity$variadic = G__28192__delegate;
return G__28192;
})()
;
G__28191 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__28191__0.call(this);
case 1:
return G__28191__1.call(this,x);
case 2:
return G__28191__2.call(this,x,y);
case 3:
return G__28191__3.call(this,x,y,z);
default:
var G__28195 = null;
if (arguments.length > 3) {
var G__28196__i = 0, G__28196__a = new Array(arguments.length -  3);
while (G__28196__i < G__28196__a.length) {G__28196__a[G__28196__i] = arguments[G__28196__i + 3]; ++G__28196__i;}
G__28195 = new cljs.core.IndexedSeq(G__28196__a,0);
}
return G__28191__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__28195);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__28191.cljs$lang$maxFixedArity = 3;
G__28191.cljs$lang$applyTo = G__28191__4.cljs$lang$applyTo;
G__28191.cljs$core$IFn$_invoke$arity$0 = G__28191__0;
G__28191.cljs$core$IFn$_invoke$arity$1 = G__28191__1;
G__28191.cljs$core$IFn$_invoke$arity$2 = G__28191__2;
G__28191.cljs$core$IFn$_invoke$arity$3 = G__28191__3;
G__28191.cljs$core$IFn$_invoke$arity$variadic = G__28191__4.cljs$core$IFn$_invoke$arity$variadic;
return G__28191;
})()
});
var partial__5 = (function() { 
var G__28197__delegate = function (f,arg1,arg2,arg3,more){
return (function() { 
var G__28198__delegate = function (args){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,arg1,arg2,arg3,cljs.core.concat.cljs$core$IFn$_invoke$arity$2(more,args));
};
var G__28198 = function (var_args){
var args = null;
if (arguments.length > 0) {
var G__28199__i = 0, G__28199__a = new Array(arguments.length -  0);
while (G__28199__i < G__28199__a.length) {G__28199__a[G__28199__i] = arguments[G__28199__i + 0]; ++G__28199__i;}
  args = new cljs.core.IndexedSeq(G__28199__a,0);
} 
return G__28198__delegate.call(this,args);};
G__28198.cljs$lang$maxFixedArity = 0;
G__28198.cljs$lang$applyTo = (function (arglist__28200){
var args = cljs.core.seq(arglist__28200);
return G__28198__delegate(args);
});
G__28198.cljs$core$IFn$_invoke$arity$variadic = G__28198__delegate;
return G__28198;
})()
;
};
var G__28197 = function (f,arg1,arg2,arg3,var_args){
var more = null;
if (arguments.length > 4) {
var G__28201__i = 0, G__28201__a = new Array(arguments.length -  4);
while (G__28201__i < G__28201__a.length) {G__28201__a[G__28201__i] = arguments[G__28201__i + 4]; ++G__28201__i;}
  more = new cljs.core.IndexedSeq(G__28201__a,0);
} 
return G__28197__delegate.call(this,f,arg1,arg2,arg3,more);};
G__28197.cljs$lang$maxFixedArity = 4;
G__28197.cljs$lang$applyTo = (function (arglist__28202){
var f = cljs.core.first(arglist__28202);
arglist__28202 = cljs.core.next(arglist__28202);
var arg1 = cljs.core.first(arglist__28202);
arglist__28202 = cljs.core.next(arglist__28202);
var arg2 = cljs.core.first(arglist__28202);
arglist__28202 = cljs.core.next(arglist__28202);
var arg3 = cljs.core.first(arglist__28202);
var more = cljs.core.rest(arglist__28202);
return G__28197__delegate(f,arg1,arg2,arg3,more);
});
G__28197.cljs$core$IFn$_invoke$arity$variadic = G__28197__delegate;
return G__28197;
})()
;
partial = function(f,arg1,arg2,arg3,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return partial__1.call(this,f);
case 2:
return partial__2.call(this,f,arg1);
case 3:
return partial__3.call(this,f,arg1,arg2);
case 4:
return partial__4.call(this,f,arg1,arg2,arg3);
default:
var G__28203 = null;
if (arguments.length > 4) {
var G__28204__i = 0, G__28204__a = new Array(arguments.length -  4);
while (G__28204__i < G__28204__a.length) {G__28204__a[G__28204__i] = arguments[G__28204__i + 4]; ++G__28204__i;}
G__28203 = new cljs.core.IndexedSeq(G__28204__a,0);
}
return partial__5.cljs$core$IFn$_invoke$arity$variadic(f,arg1,arg2,arg3, G__28203);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
partial.cljs$lang$maxFixedArity = 4;
partial.cljs$lang$applyTo = partial__5.cljs$lang$applyTo;
partial.cljs$core$IFn$_invoke$arity$1 = partial__1;
partial.cljs$core$IFn$_invoke$arity$2 = partial__2;
partial.cljs$core$IFn$_invoke$arity$3 = partial__3;
partial.cljs$core$IFn$_invoke$arity$4 = partial__4;
partial.cljs$core$IFn$_invoke$arity$variadic = partial__5.cljs$core$IFn$_invoke$arity$variadic;
return partial;
})()
;
/**
* Takes a function f, and returns a function that calls f, replacing
* a nil first argument to f with the supplied value x. Higher arity
* versions can replace arguments in the second and third
* positions (y, z). Note that the function f can take any number of
* arguments, not just the one(s) being nil-patched.
*/
cljs.core.fnil = (function() {
var fnil = null;
var fnil__2 = (function (f,x){
return (function() {
var G__28237 = null;
var G__28237__1 = (function (a){
var G__28221 = (((a == null))?x:a);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__28221) : f.call(null,G__28221));
});
var G__28237__2 = (function (a,b){
var G__28222 = (((a == null))?x:a);
var G__28223 = b;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__28222,G__28223) : f.call(null,G__28222,G__28223));
});
var G__28237__3 = (function (a,b,c){
var G__28224 = (((a == null))?x:a);
var G__28225 = b;
var G__28226 = c;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__28224,G__28225,G__28226) : f.call(null,G__28224,G__28225,G__28226));
});
var G__28237__4 = (function() { 
var G__28238__delegate = function (a,b,c,ds){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,(((a == null))?x:a),b,c,ds);
};
var G__28238 = function (a,b,c,var_args){
var ds = null;
if (arguments.length > 3) {
var G__28239__i = 0, G__28239__a = new Array(arguments.length -  3);
while (G__28239__i < G__28239__a.length) {G__28239__a[G__28239__i] = arguments[G__28239__i + 3]; ++G__28239__i;}
  ds = new cljs.core.IndexedSeq(G__28239__a,0);
} 
return G__28238__delegate.call(this,a,b,c,ds);};
G__28238.cljs$lang$maxFixedArity = 3;
G__28238.cljs$lang$applyTo = (function (arglist__28240){
var a = cljs.core.first(arglist__28240);
arglist__28240 = cljs.core.next(arglist__28240);
var b = cljs.core.first(arglist__28240);
arglist__28240 = cljs.core.next(arglist__28240);
var c = cljs.core.first(arglist__28240);
var ds = cljs.core.rest(arglist__28240);
return G__28238__delegate(a,b,c,ds);
});
G__28238.cljs$core$IFn$_invoke$arity$variadic = G__28238__delegate;
return G__28238;
})()
;
G__28237 = function(a,b,c,var_args){
var ds = var_args;
switch(arguments.length){
case 1:
return G__28237__1.call(this,a);
case 2:
return G__28237__2.call(this,a,b);
case 3:
return G__28237__3.call(this,a,b,c);
default:
var G__28241 = null;
if (arguments.length > 3) {
var G__28242__i = 0, G__28242__a = new Array(arguments.length -  3);
while (G__28242__i < G__28242__a.length) {G__28242__a[G__28242__i] = arguments[G__28242__i + 3]; ++G__28242__i;}
G__28241 = new cljs.core.IndexedSeq(G__28242__a,0);
}
return G__28237__4.cljs$core$IFn$_invoke$arity$variadic(a,b,c, G__28241);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__28237.cljs$lang$maxFixedArity = 3;
G__28237.cljs$lang$applyTo = G__28237__4.cljs$lang$applyTo;
G__28237.cljs$core$IFn$_invoke$arity$1 = G__28237__1;
G__28237.cljs$core$IFn$_invoke$arity$2 = G__28237__2;
G__28237.cljs$core$IFn$_invoke$arity$3 = G__28237__3;
G__28237.cljs$core$IFn$_invoke$arity$variadic = G__28237__4.cljs$core$IFn$_invoke$arity$variadic;
return G__28237;
})()
});
var fnil__3 = (function (f,x,y){
return (function() {
var G__28243 = null;
var G__28243__2 = (function (a,b){
var G__28227 = (((a == null))?x:a);
var G__28228 = (((b == null))?y:b);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__28227,G__28228) : f.call(null,G__28227,G__28228));
});
var G__28243__3 = (function (a,b,c){
var G__28229 = (((a == null))?x:a);
var G__28230 = (((b == null))?y:b);
var G__28231 = c;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__28229,G__28230,G__28231) : f.call(null,G__28229,G__28230,G__28231));
});
var G__28243__4 = (function() { 
var G__28244__delegate = function (a,b,c,ds){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,(((a == null))?x:a),(((b == null))?y:b),c,ds);
};
var G__28244 = function (a,b,c,var_args){
var ds = null;
if (arguments.length > 3) {
var G__28245__i = 0, G__28245__a = new Array(arguments.length -  3);
while (G__28245__i < G__28245__a.length) {G__28245__a[G__28245__i] = arguments[G__28245__i + 3]; ++G__28245__i;}
  ds = new cljs.core.IndexedSeq(G__28245__a,0);
} 
return G__28244__delegate.call(this,a,b,c,ds);};
G__28244.cljs$lang$maxFixedArity = 3;
G__28244.cljs$lang$applyTo = (function (arglist__28246){
var a = cljs.core.first(arglist__28246);
arglist__28246 = cljs.core.next(arglist__28246);
var b = cljs.core.first(arglist__28246);
arglist__28246 = cljs.core.next(arglist__28246);
var c = cljs.core.first(arglist__28246);
var ds = cljs.core.rest(arglist__28246);
return G__28244__delegate(a,b,c,ds);
});
G__28244.cljs$core$IFn$_invoke$arity$variadic = G__28244__delegate;
return G__28244;
})()
;
G__28243 = function(a,b,c,var_args){
var ds = var_args;
switch(arguments.length){
case 2:
return G__28243__2.call(this,a,b);
case 3:
return G__28243__3.call(this,a,b,c);
default:
var G__28247 = null;
if (arguments.length > 3) {
var G__28248__i = 0, G__28248__a = new Array(arguments.length -  3);
while (G__28248__i < G__28248__a.length) {G__28248__a[G__28248__i] = arguments[G__28248__i + 3]; ++G__28248__i;}
G__28247 = new cljs.core.IndexedSeq(G__28248__a,0);
}
return G__28243__4.cljs$core$IFn$_invoke$arity$variadic(a,b,c, G__28247);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__28243.cljs$lang$maxFixedArity = 3;
G__28243.cljs$lang$applyTo = G__28243__4.cljs$lang$applyTo;
G__28243.cljs$core$IFn$_invoke$arity$2 = G__28243__2;
G__28243.cljs$core$IFn$_invoke$arity$3 = G__28243__3;
G__28243.cljs$core$IFn$_invoke$arity$variadic = G__28243__4.cljs$core$IFn$_invoke$arity$variadic;
return G__28243;
})()
});
var fnil__4 = (function (f,x,y,z){
return (function() {
var G__28249 = null;
var G__28249__2 = (function (a,b){
var G__28232 = (((a == null))?x:a);
var G__28233 = (((b == null))?y:b);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__28232,G__28233) : f.call(null,G__28232,G__28233));
});
var G__28249__3 = (function (a,b,c){
var G__28234 = (((a == null))?x:a);
var G__28235 = (((b == null))?y:b);
var G__28236 = (((c == null))?z:c);
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__28234,G__28235,G__28236) : f.call(null,G__28234,G__28235,G__28236));
});
var G__28249__4 = (function() { 
var G__28250__delegate = function (a,b,c,ds){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,(((a == null))?x:a),(((b == null))?y:b),(((c == null))?z:c),ds);
};
var G__28250 = function (a,b,c,var_args){
var ds = null;
if (arguments.length > 3) {
var G__28251__i = 0, G__28251__a = new Array(arguments.length -  3);
while (G__28251__i < G__28251__a.length) {G__28251__a[G__28251__i] = arguments[G__28251__i + 3]; ++G__28251__i;}
  ds = new cljs.core.IndexedSeq(G__28251__a,0);
} 
return G__28250__delegate.call(this,a,b,c,ds);};
G__28250.cljs$lang$maxFixedArity = 3;
G__28250.cljs$lang$applyTo = (function (arglist__28252){
var a = cljs.core.first(arglist__28252);
arglist__28252 = cljs.core.next(arglist__28252);
var b = cljs.core.first(arglist__28252);
arglist__28252 = cljs.core.next(arglist__28252);
var c = cljs.core.first(arglist__28252);
var ds = cljs.core.rest(arglist__28252);
return G__28250__delegate(a,b,c,ds);
});
G__28250.cljs$core$IFn$_invoke$arity$variadic = G__28250__delegate;
return G__28250;
})()
;
G__28249 = function(a,b,c,var_args){
var ds = var_args;
switch(arguments.length){
case 2:
return G__28249__2.call(this,a,b);
case 3:
return G__28249__3.call(this,a,b,c);
default:
var G__28253 = null;
if (arguments.length > 3) {
var G__28254__i = 0, G__28254__a = new Array(arguments.length -  3);
while (G__28254__i < G__28254__a.length) {G__28254__a[G__28254__i] = arguments[G__28254__i + 3]; ++G__28254__i;}
G__28253 = new cljs.core.IndexedSeq(G__28254__a,0);
}
return G__28249__4.cljs$core$IFn$_invoke$arity$variadic(a,b,c, G__28253);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__28249.cljs$lang$maxFixedArity = 3;
G__28249.cljs$lang$applyTo = G__28249__4.cljs$lang$applyTo;
G__28249.cljs$core$IFn$_invoke$arity$2 = G__28249__2;
G__28249.cljs$core$IFn$_invoke$arity$3 = G__28249__3;
G__28249.cljs$core$IFn$_invoke$arity$variadic = G__28249__4.cljs$core$IFn$_invoke$arity$variadic;
return G__28249;
})()
});
fnil = function(f,x,y,z){
switch(arguments.length){
case 2:
return fnil__2.call(this,f,x);
case 3:
return fnil__3.call(this,f,x,y);
case 4:
return fnil__4.call(this,f,x,y,z);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
fnil.cljs$core$IFn$_invoke$arity$2 = fnil__2;
fnil.cljs$core$IFn$_invoke$arity$3 = fnil__3;
fnil.cljs$core$IFn$_invoke$arity$4 = fnil__4;
return fnil;
})()
;
/**
* Returns a lazy sequence consisting of the result of applying f to 0
* and the first item of coll, followed by applying f to 1 and the second
* item in coll, etc, until coll is exhausted. Thus function f should
* accept 2 arguments, index and item.
*/
cljs.core.map_indexed = (function map_indexed(f,coll){
var mapi = (function mapi(idx,coll__$1){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll__$1);
if(temp__4126__auto__){
var s = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(s)){
var c = cljs.core.chunk_first(s);
var size = cljs.core.count(c);
var b = cljs.core.chunk_buffer(size);
var n__25159__auto___28303 = size;
var i_28304 = (0);
while(true){
if((i_28304 < n__25159__auto___28303)){
cljs.core.chunk_append(b,(function (){var G__28299 = (idx + i_28304);
var G__28300 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c,i_28304);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__28299,G__28300) : f.call(null,G__28299,G__28300));
})());

var G__28305 = (i_28304 + (1));
i_28304 = G__28305;
continue;
} else {
}
break;
}

return cljs.core.chunk_cons(cljs.core.chunk(b),mapi((idx + size),cljs.core.chunk_rest(s)));
} else {
return cljs.core.cons((function (){var G__28301 = idx;
var G__28302 = cljs.core.first(s);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__28301,G__28302) : f.call(null,G__28301,G__28302));
})(),mapi((idx + (1)),cljs.core.rest(s)));
}
} else {
return null;
}
}),null,null));
});
return mapi((0),coll);
});
/**
* Returns a lazy sequence of the non-nil results of (f item). Note,
* this means false return values will be included.  f must be free of
* side-effects.  Returns a transducer when no collection is provided.
*/
cljs.core.keep = (function() {
var keep = null;
var keep__1 = (function (f){
return (function (rf){
return (function() {
var G__28324 = null;
var G__28324__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__28324__1 = (function (result){
var G__28318 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__28318) : rf.call(null,G__28318));
});
var G__28324__2 = (function (result,input){
var v = (function (){var G__28319 = input;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__28319) : f.call(null,G__28319));
})();
if((v == null)){
return result;
} else {
var G__28320 = result;
var G__28321 = v;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__28320,G__28321) : rf.call(null,G__28320,G__28321));
}
});
G__28324 = function(result,input){
switch(arguments.length){
case 0:
return G__28324__0.call(this);
case 1:
return G__28324__1.call(this,result);
case 2:
return G__28324__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__28324.cljs$core$IFn$_invoke$arity$0 = G__28324__0;
G__28324.cljs$core$IFn$_invoke$arity$1 = G__28324__1;
G__28324.cljs$core$IFn$_invoke$arity$2 = G__28324__2;
return G__28324;
})()
});
});
var keep__2 = (function (f,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(s)){
var c = cljs.core.chunk_first(s);
var size = cljs.core.count(c);
var b = cljs.core.chunk_buffer(size);
var n__25159__auto___28325 = size;
var i_28326 = (0);
while(true){
if((i_28326 < n__25159__auto___28325)){
var x_28327 = (function (){var G__28322 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c,i_28326);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__28322) : f.call(null,G__28322));
})();
if((x_28327 == null)){
} else {
cljs.core.chunk_append(b,x_28327);
}

var G__28328 = (i_28326 + (1));
i_28326 = G__28328;
continue;
} else {
}
break;
}

return cljs.core.chunk_cons(cljs.core.chunk(b),keep.cljs$core$IFn$_invoke$arity$2(f,cljs.core.chunk_rest(s)));
} else {
var x = (function (){var G__28323 = cljs.core.first(s);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__28323) : f.call(null,G__28323));
})();
if((x == null)){
return keep.cljs$core$IFn$_invoke$arity$2(f,cljs.core.rest(s));
} else {
return cljs.core.cons(x,keep.cljs$core$IFn$_invoke$arity$2(f,cljs.core.rest(s)));
}
}
} else {
return null;
}
}),null,null));
});
keep = function(f,coll){
switch(arguments.length){
case 1:
return keep__1.call(this,f);
case 2:
return keep__2.call(this,f,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
keep.cljs$core$IFn$_invoke$arity$1 = keep__1;
keep.cljs$core$IFn$_invoke$arity$2 = keep__2;
return keep;
})()
;

/**
* @constructor
*/
cljs.core.Atom = (function (state,meta,validator,watches){
this.state = state;
this.meta = meta;
this.validator = validator;
this.watches = watches;
this.cljs$lang$protocol_mask$partition0$ = 6455296;
this.cljs$lang$protocol_mask$partition1$ = 16386;
})
cljs.core.Atom.prototype.cljs$core$IHash$_hash$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
var G__28329 = this$__$1;
return goog.getUid(G__28329);
});

cljs.core.Atom.prototype.cljs$core$IWatchable$_notify_watches$arity$3 = (function (this$,oldval,newval){
var self__ = this;
var this$__$1 = this;
var seq__28330 = cljs.core.seq(self__.watches);
var chunk__28331 = null;
var count__28332 = (0);
var i__28333 = (0);
while(true){
if((i__28333 < count__28332)){
var vec__28334 = chunk__28331.cljs$core$IIndexed$_nth$arity$2(null,i__28333);
var key = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__28334,(0),null);
var f = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__28334,(1),null);
var G__28335_28344 = key;
var G__28336_28345 = this$__$1;
var G__28337_28346 = oldval;
var G__28338_28347 = newval;
(f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__28335_28344,G__28336_28345,G__28337_28346,G__28338_28347) : f.call(null,G__28335_28344,G__28336_28345,G__28337_28346,G__28338_28347));

var G__28348 = seq__28330;
var G__28349 = chunk__28331;
var G__28350 = count__28332;
var G__28351 = (i__28333 + (1));
seq__28330 = G__28348;
chunk__28331 = G__28349;
count__28332 = G__28350;
i__28333 = G__28351;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__28330);
if(temp__4126__auto__){
var seq__28330__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__28330__$1)){
var c__25059__auto__ = cljs.core.chunk_first(seq__28330__$1);
var G__28352 = cljs.core.chunk_rest(seq__28330__$1);
var G__28353 = c__25059__auto__;
var G__28354 = cljs.core.count(c__25059__auto__);
var G__28355 = (0);
seq__28330 = G__28352;
chunk__28331 = G__28353;
count__28332 = G__28354;
i__28333 = G__28355;
continue;
} else {
var vec__28339 = cljs.core.first(seq__28330__$1);
var key = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__28339,(0),null);
var f = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__28339,(1),null);
var G__28340_28356 = key;
var G__28341_28357 = this$__$1;
var G__28342_28358 = oldval;
var G__28343_28359 = newval;
(f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__28340_28356,G__28341_28357,G__28342_28358,G__28343_28359) : f.call(null,G__28340_28356,G__28341_28357,G__28342_28358,G__28343_28359));

var G__28360 = cljs.core.next(seq__28330__$1);
var G__28361 = null;
var G__28362 = (0);
var G__28363 = (0);
seq__28330 = G__28360;
chunk__28331 = G__28361;
count__28332 = G__28362;
i__28333 = G__28363;
continue;
}
} else {
return null;
}
}
break;
}
});

cljs.core.Atom.prototype.cljs$core$IWatchable$_add_watch$arity$3 = (function (this$,key,f){
var self__ = this;
var this$__$1 = this;
this$__$1.watches = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.watches,key,f);

return this$__$1;
});

cljs.core.Atom.prototype.cljs$core$IWatchable$_remove_watch$arity$2 = (function (this$,key){
var self__ = this;
var this$__$1 = this;
return this$__$1.watches = cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(self__.watches,key);
});

cljs.core.Atom.prototype.cljs$core$IMeta$_meta$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.meta;
});

cljs.core.Atom.prototype.cljs$core$IDeref$_deref$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.state;
});

cljs.core.Atom.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (o,other){
var self__ = this;
var o__$1 = this;
return (o__$1 === other);
});

cljs.core.Atom.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.Atom.cljs$lang$type = true;

cljs.core.Atom.cljs$lang$ctorStr = "cljs.core/Atom";

cljs.core.Atom.cljs$lang$ctorPrWriter = (function (this__24859__auto__,writer__24860__auto__,opt__24861__auto__){
return cljs.core._write(writer__24860__auto__,"cljs.core/Atom");
});

cljs.core.__GT_Atom = (function __GT_Atom(state,meta,validator,watches){
return (new cljs.core.Atom(state,meta,validator,watches));
});

/**
* Creates and returns an Atom with an initial value of x and zero or
* more options (in any order):
* 
* :meta metadata-map
* 
* :validator validate-fn
* 
* If metadata-map is supplied, it will be come the metadata on the
* atom. validate-fn must be nil or a side-effect-free fn of one
* argument, which will be passed the intended new state on any state
* change. If the new state is unacceptable, the validate-fn should
* return false or throw an Error.  If either of these error conditions
* occur, then the value of the atom will not change.
* @param {...*} var_args
*/
cljs.core.atom = (function() {
var atom = null;
var atom__1 = (function (x){
return (new cljs.core.Atom(x,null,null,null));
});
var atom__2 = (function() { 
var G__28367__delegate = function (x,p__28364){
var map__28366 = p__28364;
var map__28366__$1 = ((cljs.core.seq_QMARK_(map__28366))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__28366):map__28366);
var validator = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__28366__$1,new cljs.core.Keyword(null,"validator","validator",-1966190681));
var meta = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__28366__$1,new cljs.core.Keyword(null,"meta","meta",1499536964));
return (new cljs.core.Atom(x,meta,validator,null));
};
var G__28367 = function (x,var_args){
var p__28364 = null;
if (arguments.length > 1) {
var G__28368__i = 0, G__28368__a = new Array(arguments.length -  1);
while (G__28368__i < G__28368__a.length) {G__28368__a[G__28368__i] = arguments[G__28368__i + 1]; ++G__28368__i;}
  p__28364 = new cljs.core.IndexedSeq(G__28368__a,0);
} 
return G__28367__delegate.call(this,x,p__28364);};
G__28367.cljs$lang$maxFixedArity = 1;
G__28367.cljs$lang$applyTo = (function (arglist__28369){
var x = cljs.core.first(arglist__28369);
var p__28364 = cljs.core.rest(arglist__28369);
return G__28367__delegate(x,p__28364);
});
G__28367.cljs$core$IFn$_invoke$arity$variadic = G__28367__delegate;
return G__28367;
})()
;
atom = function(x,var_args){
var p__28364 = var_args;
switch(arguments.length){
case 1:
return atom__1.call(this,x);
default:
var G__28370 = null;
if (arguments.length > 1) {
var G__28371__i = 0, G__28371__a = new Array(arguments.length -  1);
while (G__28371__i < G__28371__a.length) {G__28371__a[G__28371__i] = arguments[G__28371__i + 1]; ++G__28371__i;}
G__28370 = new cljs.core.IndexedSeq(G__28371__a,0);
}
return atom__2.cljs$core$IFn$_invoke$arity$variadic(x, G__28370);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
atom.cljs$lang$maxFixedArity = 1;
atom.cljs$lang$applyTo = atom__2.cljs$lang$applyTo;
atom.cljs$core$IFn$_invoke$arity$1 = atom__1;
atom.cljs$core$IFn$_invoke$arity$variadic = atom__2.cljs$core$IFn$_invoke$arity$variadic;
return atom;
})()
;
/**
* Sets the value of atom to newval without regard for the
* current value. Returns newval.
*/
cljs.core.reset_BANG_ = (function reset_BANG_(a,new_value){
if((a instanceof cljs.core.Atom)){
var validate = a.validator;
if((validate == null)){
} else {
if(cljs.core.truth_((function (){var G__28374 = new_value;
return (validate.cljs$core$IFn$_invoke$arity$1 ? validate.cljs$core$IFn$_invoke$arity$1(G__28374) : validate.call(null,G__28374));
})())){
} else {
throw (new Error([cljs.core.str("Assert failed: "),cljs.core.str("Validator rejected reference state"),cljs.core.str("\n"),cljs.core.str((function (){var G__28375 = cljs.core.list(new cljs.core.Symbol(null,"validate","validate",1439230700,null),new cljs.core.Symbol(null,"new-value","new-value",-1567397401,null));
return (cljs.core.pr_str.cljs$core$IFn$_invoke$arity$1 ? cljs.core.pr_str.cljs$core$IFn$_invoke$arity$1(G__28375) : cljs.core.pr_str.call(null,G__28375));
})())].join('')));
}
}

var old_value = a.state;
a.state = new_value;

if((a.watches == null)){
} else {
cljs.core._notify_watches(a,old_value,new_value);
}

return new_value;
} else {
return cljs.core._reset_BANG_(a,new_value);
}
});
/**
* Atomically swaps the value of atom to be:
* (apply f current-value-of-atom args). Note that f may be called
* multiple times, and thus should be free of side effects.  Returns
* the value that was swapped in.
* @param {...*} var_args
*/
cljs.core.swap_BANG_ = (function() {
var swap_BANG_ = null;
var swap_BANG___2 = (function (a,f){
if((a instanceof cljs.core.Atom)){
return cljs.core.reset_BANG_(a,(function (){var G__28382 = a.state;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__28382) : f.call(null,G__28382));
})());
} else {
return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$2(a,f);
}
});
var swap_BANG___3 = (function (a,f,x){
if((a instanceof cljs.core.Atom)){
return cljs.core.reset_BANG_(a,(function (){var G__28383 = a.state;
var G__28384 = x;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__28383,G__28384) : f.call(null,G__28383,G__28384));
})());
} else {
return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$3(a,f,x);
}
});
var swap_BANG___4 = (function (a,f,x,y){
if((a instanceof cljs.core.Atom)){
return cljs.core.reset_BANG_(a,(function (){var G__28385 = a.state;
var G__28386 = x;
var G__28387 = y;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__28385,G__28386,G__28387) : f.call(null,G__28385,G__28386,G__28387));
})());
} else {
return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$4(a,f,x,y);
}
});
var swap_BANG___5 = (function() { 
var G__28388__delegate = function (a,f,x,y,more){
if((a instanceof cljs.core.Atom)){
return cljs.core.reset_BANG_(a,cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,a.state,x,y,more));
} else {
return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$5(a,f,x,y,more);
}
};
var G__28388 = function (a,f,x,y,var_args){
var more = null;
if (arguments.length > 4) {
var G__28389__i = 0, G__28389__a = new Array(arguments.length -  4);
while (G__28389__i < G__28389__a.length) {G__28389__a[G__28389__i] = arguments[G__28389__i + 4]; ++G__28389__i;}
  more = new cljs.core.IndexedSeq(G__28389__a,0);
} 
return G__28388__delegate.call(this,a,f,x,y,more);};
G__28388.cljs$lang$maxFixedArity = 4;
G__28388.cljs$lang$applyTo = (function (arglist__28390){
var a = cljs.core.first(arglist__28390);
arglist__28390 = cljs.core.next(arglist__28390);
var f = cljs.core.first(arglist__28390);
arglist__28390 = cljs.core.next(arglist__28390);
var x = cljs.core.first(arglist__28390);
arglist__28390 = cljs.core.next(arglist__28390);
var y = cljs.core.first(arglist__28390);
var more = cljs.core.rest(arglist__28390);
return G__28388__delegate(a,f,x,y,more);
});
G__28388.cljs$core$IFn$_invoke$arity$variadic = G__28388__delegate;
return G__28388;
})()
;
swap_BANG_ = function(a,f,x,y,var_args){
var more = var_args;
switch(arguments.length){
case 2:
return swap_BANG___2.call(this,a,f);
case 3:
return swap_BANG___3.call(this,a,f,x);
case 4:
return swap_BANG___4.call(this,a,f,x,y);
default:
var G__28391 = null;
if (arguments.length > 4) {
var G__28392__i = 0, G__28392__a = new Array(arguments.length -  4);
while (G__28392__i < G__28392__a.length) {G__28392__a[G__28392__i] = arguments[G__28392__i + 4]; ++G__28392__i;}
G__28391 = new cljs.core.IndexedSeq(G__28392__a,0);
}
return swap_BANG___5.cljs$core$IFn$_invoke$arity$variadic(a,f,x,y, G__28391);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
swap_BANG_.cljs$lang$maxFixedArity = 4;
swap_BANG_.cljs$lang$applyTo = swap_BANG___5.cljs$lang$applyTo;
swap_BANG_.cljs$core$IFn$_invoke$arity$2 = swap_BANG___2;
swap_BANG_.cljs$core$IFn$_invoke$arity$3 = swap_BANG___3;
swap_BANG_.cljs$core$IFn$_invoke$arity$4 = swap_BANG___4;
swap_BANG_.cljs$core$IFn$_invoke$arity$variadic = swap_BANG___5.cljs$core$IFn$_invoke$arity$variadic;
return swap_BANG_;
})()
;
/**
* Atomically sets the value of atom to newval if and only if the
* current value of the atom is equal to oldval. Returns true if
* set happened, else false.
*/
cljs.core.compare_and_set_BANG_ = (function compare_and_set_BANG_(a,oldval,newval){
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(a.cljs$core$IDeref$_deref$arity$1(null),oldval)){
cljs.core.reset_BANG_(a,newval);

return true;
} else {
return false;
}
});
/**
* Sets the validator-fn for an atom. validator-fn must be nil or a
* side-effect-free fn of one argument, which will be passed the intended
* new state on any state change. If the new state is unacceptable, the
* validator-fn should return false or throw an Error. If the current state
* is not acceptable to the new validator, an Error will be thrown and the
* validator will not be changed.
*/
cljs.core.set_validator_BANG_ = (function set_validator_BANG_(iref,val){
return iref.validator = val;
});
/**
* Gets the validator-fn for a var/ref/agent/atom.
*/
cljs.core.get_validator = (function get_validator(iref){
return iref.validator;
});

/**
* @constructor
*/
cljs.core.Volatile = (function (state){
this.state = state;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32768;
})
cljs.core.Volatile.prototype.cljs$core$IDeref$_deref$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.state;
});

cljs.core.Volatile.prototype.cljs$core$IVolatile$ = true;

cljs.core.Volatile.prototype.cljs$core$IVolatile$_vreset_BANG_$arity$2 = (function (_,new_state){
var self__ = this;
var ___$1 = this;
return self__.state = new_state;
});

cljs.core.Volatile.cljs$lang$type = true;

cljs.core.Volatile.cljs$lang$ctorStr = "cljs.core/Volatile";

cljs.core.Volatile.cljs$lang$ctorPrWriter = (function (this__24859__auto__,writer__24860__auto__,opt__24861__auto__){
return cljs.core._write(writer__24860__auto__,"cljs.core/Volatile");
});

cljs.core.__GT_Volatile = (function __GT_Volatile(state){
return (new cljs.core.Volatile(state));
});

/**
* Creates and returns a Volatile with an initial value of val.
*/
cljs.core.volatile_BANG_ = (function volatile_BANG_(val){
return (new cljs.core.Volatile(val));
});
/**
* Returns true if x is a volatile.
*/
cljs.core.volatile_QMARK_ = (function volatile_QMARK_(x){
return (x instanceof cljs.core.Volatile);
});
/**
* Sets the value of volatile to newval without regard for the
* current value. Returns newval.
*/
cljs.core.vreset_BANG_ = (function vreset_BANG_(vol,newval){
return cljs.core._vreset_BANG_(vol,newval);
});
/**
* Returns a lazy sequence of the non-nil results of (f index item). Note,
* this means false return values will be included.  f must be free of
* side-effects.  Returns a stateful transducer when no collection is
* provided.
*/
cljs.core.keep_indexed = (function() {
var keep_indexed = null;
var keep_indexed__1 = (function (f){
return (function (rf){
var ia = cljs.core.volatile_BANG_((-1));
return ((function (ia){
return (function() {
var G__28459 = null;
var G__28459__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__28459__1 = (function (result){
var G__28426 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__28426) : rf.call(null,G__28426));
});
var G__28459__2 = (function (result,input){
var i = ia.cljs$core$IVolatile$_vreset_BANG_$arity$2(null,(ia.cljs$core$IDeref$_deref$arity$1(null) + (1)));
var v = (function (){var G__28427 = i;
var G__28428 = input;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__28427,G__28428) : f.call(null,G__28427,G__28428));
})();
if((v == null)){
return result;
} else {
var G__28429 = result;
var G__28430 = v;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__28429,G__28430) : rf.call(null,G__28429,G__28430));
}
});
G__28459 = function(result,input){
switch(arguments.length){
case 0:
return G__28459__0.call(this);
case 1:
return G__28459__1.call(this,result);
case 2:
return G__28459__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__28459.cljs$core$IFn$_invoke$arity$0 = G__28459__0;
G__28459.cljs$core$IFn$_invoke$arity$1 = G__28459__1;
G__28459.cljs$core$IFn$_invoke$arity$2 = G__28459__2;
return G__28459;
})()
;})(ia))
});
});
var keep_indexed__2 = (function (f,coll){
var keepi = (function keepi(idx,coll__$1){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll__$1);
if(temp__4126__auto__){
var s = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(s)){
var c = cljs.core.chunk_first(s);
var size = cljs.core.count(c);
var b = cljs.core.chunk_buffer(size);
var n__25159__auto___28460 = size;
var i_28461 = (0);
while(true){
if((i_28461 < n__25159__auto___28460)){
var x_28462 = (function (){var G__28455 = (idx + i_28461);
var G__28456 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c,i_28461);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__28455,G__28456) : f.call(null,G__28455,G__28456));
})();
if((x_28462 == null)){
} else {
cljs.core.chunk_append(b,x_28462);
}

var G__28463 = (i_28461 + (1));
i_28461 = G__28463;
continue;
} else {
}
break;
}

return cljs.core.chunk_cons(cljs.core.chunk(b),keepi((idx + size),cljs.core.chunk_rest(s)));
} else {
var x = (function (){var G__28457 = idx;
var G__28458 = cljs.core.first(s);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__28457,G__28458) : f.call(null,G__28457,G__28458));
})();
if((x == null)){
return keepi((idx + (1)),cljs.core.rest(s));
} else {
return cljs.core.cons(x,keepi((idx + (1)),cljs.core.rest(s)));
}
}
} else {
return null;
}
}),null,null));
});
return keepi((0),coll);
});
keep_indexed = function(f,coll){
switch(arguments.length){
case 1:
return keep_indexed__1.call(this,f);
case 2:
return keep_indexed__2.call(this,f,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
keep_indexed.cljs$core$IFn$_invoke$arity$1 = keep_indexed__1;
keep_indexed.cljs$core$IFn$_invoke$arity$2 = keep_indexed__2;
return keep_indexed;
})()
;
/**
* Takes a set of predicates and returns a function f that returns true if all of its
* composing predicates return a logical true value against all of its arguments, else it returns
* false. Note that f is short-circuiting in that it will stop execution on the first
* argument that triggers a logical false result against the original predicates.
* @param {...*} var_args
*/
cljs.core.every_pred = (function() {
var every_pred = null;
var every_pred__1 = (function (p){
return (function() {
var ep1 = null;
var ep1__0 = (function (){
return true;
});
var ep1__1 = (function (x){
return cljs.core.boolean$((function (){var G__28677 = x;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__28677) : p.call(null,G__28677));
})());
});
var ep1__2 = (function (x,y){
return cljs.core.boolean$((function (){var and__24260__auto__ = (function (){var G__28679 = x;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__28679) : p.call(null,G__28679));
})();
if(cljs.core.truth_(and__24260__auto__)){
var G__28680 = y;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__28680) : p.call(null,G__28680));
} else {
return and__24260__auto__;
}
})());
});
var ep1__3 = (function (x,y,z){
return cljs.core.boolean$((function (){var and__24260__auto__ = (function (){var G__28682 = x;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__28682) : p.call(null,G__28682));
})();
if(cljs.core.truth_(and__24260__auto__)){
var and__24260__auto____$1 = (function (){var G__28684 = y;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__28684) : p.call(null,G__28684));
})();
if(cljs.core.truth_(and__24260__auto____$1)){
var G__28685 = z;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__28685) : p.call(null,G__28685));
} else {
return and__24260__auto____$1;
}
} else {
return and__24260__auto__;
}
})());
});
var ep1__4 = (function() { 
var G__28854__delegate = function (x,y,z,args){
return cljs.core.boolean$((ep1.cljs$core$IFn$_invoke$arity$3(x,y,z)) && (cljs.core.every_QMARK_(p,args)));
};
var G__28854 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__28855__i = 0, G__28855__a = new Array(arguments.length -  3);
while (G__28855__i < G__28855__a.length) {G__28855__a[G__28855__i] = arguments[G__28855__i + 3]; ++G__28855__i;}
  args = new cljs.core.IndexedSeq(G__28855__a,0);
} 
return G__28854__delegate.call(this,x,y,z,args);};
G__28854.cljs$lang$maxFixedArity = 3;
G__28854.cljs$lang$applyTo = (function (arglist__28856){
var x = cljs.core.first(arglist__28856);
arglist__28856 = cljs.core.next(arglist__28856);
var y = cljs.core.first(arglist__28856);
arglist__28856 = cljs.core.next(arglist__28856);
var z = cljs.core.first(arglist__28856);
var args = cljs.core.rest(arglist__28856);
return G__28854__delegate(x,y,z,args);
});
G__28854.cljs$core$IFn$_invoke$arity$variadic = G__28854__delegate;
return G__28854;
})()
;
ep1 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return ep1__0.call(this);
case 1:
return ep1__1.call(this,x);
case 2:
return ep1__2.call(this,x,y);
case 3:
return ep1__3.call(this,x,y,z);
default:
var G__28857 = null;
if (arguments.length > 3) {
var G__28858__i = 0, G__28858__a = new Array(arguments.length -  3);
while (G__28858__i < G__28858__a.length) {G__28858__a[G__28858__i] = arguments[G__28858__i + 3]; ++G__28858__i;}
G__28857 = new cljs.core.IndexedSeq(G__28858__a,0);
}
return ep1__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__28857);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
ep1.cljs$lang$maxFixedArity = 3;
ep1.cljs$lang$applyTo = ep1__4.cljs$lang$applyTo;
ep1.cljs$core$IFn$_invoke$arity$0 = ep1__0;
ep1.cljs$core$IFn$_invoke$arity$1 = ep1__1;
ep1.cljs$core$IFn$_invoke$arity$2 = ep1__2;
ep1.cljs$core$IFn$_invoke$arity$3 = ep1__3;
ep1.cljs$core$IFn$_invoke$arity$variadic = ep1__4.cljs$core$IFn$_invoke$arity$variadic;
return ep1;
})()
});
var every_pred__2 = (function (p1,p2){
return (function() {
var ep2 = null;
var ep2__0 = (function (){
return true;
});
var ep2__1 = (function (x){
return cljs.core.boolean$((function (){var and__24260__auto__ = (function (){var G__28717 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__28717) : p1.call(null,G__28717));
})();
if(cljs.core.truth_(and__24260__auto__)){
var G__28718 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__28718) : p2.call(null,G__28718));
} else {
return and__24260__auto__;
}
})());
});
var ep2__2 = (function (x,y){
return cljs.core.boolean$((function (){var and__24260__auto__ = (function (){var G__28720 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__28720) : p1.call(null,G__28720));
})();
if(cljs.core.truth_(and__24260__auto__)){
var and__24260__auto____$1 = (function (){var G__28722 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__28722) : p1.call(null,G__28722));
})();
if(cljs.core.truth_(and__24260__auto____$1)){
var and__24260__auto____$2 = (function (){var G__28724 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__28724) : p2.call(null,G__28724));
})();
if(cljs.core.truth_(and__24260__auto____$2)){
var G__28725 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__28725) : p2.call(null,G__28725));
} else {
return and__24260__auto____$2;
}
} else {
return and__24260__auto____$1;
}
} else {
return and__24260__auto__;
}
})());
});
var ep2__3 = (function (x,y,z){
return cljs.core.boolean$((function (){var and__24260__auto__ = (function (){var G__28727 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__28727) : p1.call(null,G__28727));
})();
if(cljs.core.truth_(and__24260__auto__)){
var and__24260__auto____$1 = (function (){var G__28729 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__28729) : p1.call(null,G__28729));
})();
if(cljs.core.truth_(and__24260__auto____$1)){
var and__24260__auto____$2 = (function (){var G__28731 = z;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__28731) : p1.call(null,G__28731));
})();
if(cljs.core.truth_(and__24260__auto____$2)){
var and__24260__auto____$3 = (function (){var G__28733 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__28733) : p2.call(null,G__28733));
})();
if(cljs.core.truth_(and__24260__auto____$3)){
var and__24260__auto____$4 = (function (){var G__28735 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__28735) : p2.call(null,G__28735));
})();
if(cljs.core.truth_(and__24260__auto____$4)){
var G__28736 = z;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__28736) : p2.call(null,G__28736));
} else {
return and__24260__auto____$4;
}
} else {
return and__24260__auto____$3;
}
} else {
return and__24260__auto____$2;
}
} else {
return and__24260__auto____$1;
}
} else {
return and__24260__auto__;
}
})());
});
var ep2__4 = (function() { 
var G__28859__delegate = function (x,y,z,args){
return cljs.core.boolean$((ep2.cljs$core$IFn$_invoke$arity$3(x,y,z)) && (cljs.core.every_QMARK_((function (p1__28464_SHARP_){
var and__24260__auto__ = (function (){var G__28741 = p1__28464_SHARP_;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__28741) : p1.call(null,G__28741));
})();
if(cljs.core.truth_(and__24260__auto__)){
var G__28742 = p1__28464_SHARP_;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__28742) : p2.call(null,G__28742));
} else {
return and__24260__auto__;
}
}),args)));
};
var G__28859 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__28860__i = 0, G__28860__a = new Array(arguments.length -  3);
while (G__28860__i < G__28860__a.length) {G__28860__a[G__28860__i] = arguments[G__28860__i + 3]; ++G__28860__i;}
  args = new cljs.core.IndexedSeq(G__28860__a,0);
} 
return G__28859__delegate.call(this,x,y,z,args);};
G__28859.cljs$lang$maxFixedArity = 3;
G__28859.cljs$lang$applyTo = (function (arglist__28861){
var x = cljs.core.first(arglist__28861);
arglist__28861 = cljs.core.next(arglist__28861);
var y = cljs.core.first(arglist__28861);
arglist__28861 = cljs.core.next(arglist__28861);
var z = cljs.core.first(arglist__28861);
var args = cljs.core.rest(arglist__28861);
return G__28859__delegate(x,y,z,args);
});
G__28859.cljs$core$IFn$_invoke$arity$variadic = G__28859__delegate;
return G__28859;
})()
;
ep2 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return ep2__0.call(this);
case 1:
return ep2__1.call(this,x);
case 2:
return ep2__2.call(this,x,y);
case 3:
return ep2__3.call(this,x,y,z);
default:
var G__28862 = null;
if (arguments.length > 3) {
var G__28863__i = 0, G__28863__a = new Array(arguments.length -  3);
while (G__28863__i < G__28863__a.length) {G__28863__a[G__28863__i] = arguments[G__28863__i + 3]; ++G__28863__i;}
G__28862 = new cljs.core.IndexedSeq(G__28863__a,0);
}
return ep2__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__28862);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
ep2.cljs$lang$maxFixedArity = 3;
ep2.cljs$lang$applyTo = ep2__4.cljs$lang$applyTo;
ep2.cljs$core$IFn$_invoke$arity$0 = ep2__0;
ep2.cljs$core$IFn$_invoke$arity$1 = ep2__1;
ep2.cljs$core$IFn$_invoke$arity$2 = ep2__2;
ep2.cljs$core$IFn$_invoke$arity$3 = ep2__3;
ep2.cljs$core$IFn$_invoke$arity$variadic = ep2__4.cljs$core$IFn$_invoke$arity$variadic;
return ep2;
})()
});
var every_pred__3 = (function (p1,p2,p3){
return (function() {
var ep3 = null;
var ep3__0 = (function (){
return true;
});
var ep3__1 = (function (x){
return cljs.core.boolean$((function (){var and__24260__auto__ = (function (){var G__28788 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__28788) : p1.call(null,G__28788));
})();
if(cljs.core.truth_(and__24260__auto__)){
var and__24260__auto____$1 = (function (){var G__28790 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__28790) : p2.call(null,G__28790));
})();
if(cljs.core.truth_(and__24260__auto____$1)){
var G__28791 = x;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__28791) : p3.call(null,G__28791));
} else {
return and__24260__auto____$1;
}
} else {
return and__24260__auto__;
}
})());
});
var ep3__2 = (function (x,y){
return cljs.core.boolean$((function (){var and__24260__auto__ = (function (){var G__28793 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__28793) : p1.call(null,G__28793));
})();
if(cljs.core.truth_(and__24260__auto__)){
var and__24260__auto____$1 = (function (){var G__28795 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__28795) : p2.call(null,G__28795));
})();
if(cljs.core.truth_(and__24260__auto____$1)){
var and__24260__auto____$2 = (function (){var G__28797 = x;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__28797) : p3.call(null,G__28797));
})();
if(cljs.core.truth_(and__24260__auto____$2)){
var and__24260__auto____$3 = (function (){var G__28799 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__28799) : p1.call(null,G__28799));
})();
if(cljs.core.truth_(and__24260__auto____$3)){
var and__24260__auto____$4 = (function (){var G__28801 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__28801) : p2.call(null,G__28801));
})();
if(cljs.core.truth_(and__24260__auto____$4)){
var G__28802 = y;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__28802) : p3.call(null,G__28802));
} else {
return and__24260__auto____$4;
}
} else {
return and__24260__auto____$3;
}
} else {
return and__24260__auto____$2;
}
} else {
return and__24260__auto____$1;
}
} else {
return and__24260__auto__;
}
})());
});
var ep3__3 = (function (x,y,z){
return cljs.core.boolean$((function (){var and__24260__auto__ = (function (){var G__28804 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__28804) : p1.call(null,G__28804));
})();
if(cljs.core.truth_(and__24260__auto__)){
var and__24260__auto____$1 = (function (){var G__28806 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__28806) : p2.call(null,G__28806));
})();
if(cljs.core.truth_(and__24260__auto____$1)){
var and__24260__auto____$2 = (function (){var G__28808 = x;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__28808) : p3.call(null,G__28808));
})();
if(cljs.core.truth_(and__24260__auto____$2)){
var and__24260__auto____$3 = (function (){var G__28810 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__28810) : p1.call(null,G__28810));
})();
if(cljs.core.truth_(and__24260__auto____$3)){
var and__24260__auto____$4 = (function (){var G__28812 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__28812) : p2.call(null,G__28812));
})();
if(cljs.core.truth_(and__24260__auto____$4)){
var and__24260__auto____$5 = (function (){var G__28814 = y;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__28814) : p3.call(null,G__28814));
})();
if(cljs.core.truth_(and__24260__auto____$5)){
var and__24260__auto____$6 = (function (){var G__28816 = z;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__28816) : p1.call(null,G__28816));
})();
if(cljs.core.truth_(and__24260__auto____$6)){
var and__24260__auto____$7 = (function (){var G__28818 = z;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__28818) : p2.call(null,G__28818));
})();
if(cljs.core.truth_(and__24260__auto____$7)){
var G__28819 = z;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__28819) : p3.call(null,G__28819));
} else {
return and__24260__auto____$7;
}
} else {
return and__24260__auto____$6;
}
} else {
return and__24260__auto____$5;
}
} else {
return and__24260__auto____$4;
}
} else {
return and__24260__auto____$3;
}
} else {
return and__24260__auto____$2;
}
} else {
return and__24260__auto____$1;
}
} else {
return and__24260__auto__;
}
})());
});
var ep3__4 = (function() { 
var G__28864__delegate = function (x,y,z,args){
return cljs.core.boolean$((ep3.cljs$core$IFn$_invoke$arity$3(x,y,z)) && (cljs.core.every_QMARK_((function (p1__28465_SHARP_){
var and__24260__auto__ = (function (){var G__28826 = p1__28465_SHARP_;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__28826) : p1.call(null,G__28826));
})();
if(cljs.core.truth_(and__24260__auto__)){
var and__24260__auto____$1 = (function (){var G__28828 = p1__28465_SHARP_;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__28828) : p2.call(null,G__28828));
})();
if(cljs.core.truth_(and__24260__auto____$1)){
var G__28829 = p1__28465_SHARP_;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__28829) : p3.call(null,G__28829));
} else {
return and__24260__auto____$1;
}
} else {
return and__24260__auto__;
}
}),args)));
};
var G__28864 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__28865__i = 0, G__28865__a = new Array(arguments.length -  3);
while (G__28865__i < G__28865__a.length) {G__28865__a[G__28865__i] = arguments[G__28865__i + 3]; ++G__28865__i;}
  args = new cljs.core.IndexedSeq(G__28865__a,0);
} 
return G__28864__delegate.call(this,x,y,z,args);};
G__28864.cljs$lang$maxFixedArity = 3;
G__28864.cljs$lang$applyTo = (function (arglist__28866){
var x = cljs.core.first(arglist__28866);
arglist__28866 = cljs.core.next(arglist__28866);
var y = cljs.core.first(arglist__28866);
arglist__28866 = cljs.core.next(arglist__28866);
var z = cljs.core.first(arglist__28866);
var args = cljs.core.rest(arglist__28866);
return G__28864__delegate(x,y,z,args);
});
G__28864.cljs$core$IFn$_invoke$arity$variadic = G__28864__delegate;
return G__28864;
})()
;
ep3 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return ep3__0.call(this);
case 1:
return ep3__1.call(this,x);
case 2:
return ep3__2.call(this,x,y);
case 3:
return ep3__3.call(this,x,y,z);
default:
var G__28867 = null;
if (arguments.length > 3) {
var G__28868__i = 0, G__28868__a = new Array(arguments.length -  3);
while (G__28868__i < G__28868__a.length) {G__28868__a[G__28868__i] = arguments[G__28868__i + 3]; ++G__28868__i;}
G__28867 = new cljs.core.IndexedSeq(G__28868__a,0);
}
return ep3__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__28867);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
ep3.cljs$lang$maxFixedArity = 3;
ep3.cljs$lang$applyTo = ep3__4.cljs$lang$applyTo;
ep3.cljs$core$IFn$_invoke$arity$0 = ep3__0;
ep3.cljs$core$IFn$_invoke$arity$1 = ep3__1;
ep3.cljs$core$IFn$_invoke$arity$2 = ep3__2;
ep3.cljs$core$IFn$_invoke$arity$3 = ep3__3;
ep3.cljs$core$IFn$_invoke$arity$variadic = ep3__4.cljs$core$IFn$_invoke$arity$variadic;
return ep3;
})()
});
var every_pred__4 = (function() { 
var G__28869__delegate = function (p1,p2,p3,ps){
var ps__$1 = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(p1,p2,p3,ps);
return ((function (ps__$1){
return (function() {
var epn = null;
var epn__0 = (function (){
return true;
});
var epn__1 = (function (x){
return cljs.core.every_QMARK_(((function (ps__$1){
return (function (p1__28466_SHARP_){
var G__28845 = x;
return (p1__28466_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__28466_SHARP_.cljs$core$IFn$_invoke$arity$1(G__28845) : p1__28466_SHARP_.call(null,G__28845));
});})(ps__$1))
,ps__$1);
});
var epn__2 = (function (x,y){
return cljs.core.every_QMARK_(((function (ps__$1){
return (function (p1__28467_SHARP_){
var and__24260__auto__ = (function (){var G__28847 = x;
return (p1__28467_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__28467_SHARP_.cljs$core$IFn$_invoke$arity$1(G__28847) : p1__28467_SHARP_.call(null,G__28847));
})();
if(cljs.core.truth_(and__24260__auto__)){
var G__28848 = y;
return (p1__28467_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__28467_SHARP_.cljs$core$IFn$_invoke$arity$1(G__28848) : p1__28467_SHARP_.call(null,G__28848));
} else {
return and__24260__auto__;
}
});})(ps__$1))
,ps__$1);
});
var epn__3 = (function (x,y,z){
return cljs.core.every_QMARK_(((function (ps__$1){
return (function (p1__28468_SHARP_){
var and__24260__auto__ = (function (){var G__28850 = x;
return (p1__28468_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__28468_SHARP_.cljs$core$IFn$_invoke$arity$1(G__28850) : p1__28468_SHARP_.call(null,G__28850));
})();
if(cljs.core.truth_(and__24260__auto__)){
var and__24260__auto____$1 = (function (){var G__28852 = y;
return (p1__28468_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__28468_SHARP_.cljs$core$IFn$_invoke$arity$1(G__28852) : p1__28468_SHARP_.call(null,G__28852));
})();
if(cljs.core.truth_(and__24260__auto____$1)){
var G__28853 = z;
return (p1__28468_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__28468_SHARP_.cljs$core$IFn$_invoke$arity$1(G__28853) : p1__28468_SHARP_.call(null,G__28853));
} else {
return and__24260__auto____$1;
}
} else {
return and__24260__auto__;
}
});})(ps__$1))
,ps__$1);
});
var epn__4 = (function() { 
var G__28870__delegate = function (x,y,z,args){
return cljs.core.boolean$((epn.cljs$core$IFn$_invoke$arity$3(x,y,z)) && (cljs.core.every_QMARK_(((function (ps__$1){
return (function (p1__28469_SHARP_){
return cljs.core.every_QMARK_(p1__28469_SHARP_,args);
});})(ps__$1))
,ps__$1)));
};
var G__28870 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__28871__i = 0, G__28871__a = new Array(arguments.length -  3);
while (G__28871__i < G__28871__a.length) {G__28871__a[G__28871__i] = arguments[G__28871__i + 3]; ++G__28871__i;}
  args = new cljs.core.IndexedSeq(G__28871__a,0);
} 
return G__28870__delegate.call(this,x,y,z,args);};
G__28870.cljs$lang$maxFixedArity = 3;
G__28870.cljs$lang$applyTo = (function (arglist__28872){
var x = cljs.core.first(arglist__28872);
arglist__28872 = cljs.core.next(arglist__28872);
var y = cljs.core.first(arglist__28872);
arglist__28872 = cljs.core.next(arglist__28872);
var z = cljs.core.first(arglist__28872);
var args = cljs.core.rest(arglist__28872);
return G__28870__delegate(x,y,z,args);
});
G__28870.cljs$core$IFn$_invoke$arity$variadic = G__28870__delegate;
return G__28870;
})()
;
epn = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return epn__0.call(this);
case 1:
return epn__1.call(this,x);
case 2:
return epn__2.call(this,x,y);
case 3:
return epn__3.call(this,x,y,z);
default:
var G__28873 = null;
if (arguments.length > 3) {
var G__28874__i = 0, G__28874__a = new Array(arguments.length -  3);
while (G__28874__i < G__28874__a.length) {G__28874__a[G__28874__i] = arguments[G__28874__i + 3]; ++G__28874__i;}
G__28873 = new cljs.core.IndexedSeq(G__28874__a,0);
}
return epn__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__28873);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
epn.cljs$lang$maxFixedArity = 3;
epn.cljs$lang$applyTo = epn__4.cljs$lang$applyTo;
epn.cljs$core$IFn$_invoke$arity$0 = epn__0;
epn.cljs$core$IFn$_invoke$arity$1 = epn__1;
epn.cljs$core$IFn$_invoke$arity$2 = epn__2;
epn.cljs$core$IFn$_invoke$arity$3 = epn__3;
epn.cljs$core$IFn$_invoke$arity$variadic = epn__4.cljs$core$IFn$_invoke$arity$variadic;
return epn;
})()
;})(ps__$1))
};
var G__28869 = function (p1,p2,p3,var_args){
var ps = null;
if (arguments.length > 3) {
var G__28875__i = 0, G__28875__a = new Array(arguments.length -  3);
while (G__28875__i < G__28875__a.length) {G__28875__a[G__28875__i] = arguments[G__28875__i + 3]; ++G__28875__i;}
  ps = new cljs.core.IndexedSeq(G__28875__a,0);
} 
return G__28869__delegate.call(this,p1,p2,p3,ps);};
G__28869.cljs$lang$maxFixedArity = 3;
G__28869.cljs$lang$applyTo = (function (arglist__28876){
var p1 = cljs.core.first(arglist__28876);
arglist__28876 = cljs.core.next(arglist__28876);
var p2 = cljs.core.first(arglist__28876);
arglist__28876 = cljs.core.next(arglist__28876);
var p3 = cljs.core.first(arglist__28876);
var ps = cljs.core.rest(arglist__28876);
return G__28869__delegate(p1,p2,p3,ps);
});
G__28869.cljs$core$IFn$_invoke$arity$variadic = G__28869__delegate;
return G__28869;
})()
;
every_pred = function(p1,p2,p3,var_args){
var ps = var_args;
switch(arguments.length){
case 1:
return every_pred__1.call(this,p1);
case 2:
return every_pred__2.call(this,p1,p2);
case 3:
return every_pred__3.call(this,p1,p2,p3);
default:
var G__28877 = null;
if (arguments.length > 3) {
var G__28878__i = 0, G__28878__a = new Array(arguments.length -  3);
while (G__28878__i < G__28878__a.length) {G__28878__a[G__28878__i] = arguments[G__28878__i + 3]; ++G__28878__i;}
G__28877 = new cljs.core.IndexedSeq(G__28878__a,0);
}
return every_pred__4.cljs$core$IFn$_invoke$arity$variadic(p1,p2,p3, G__28877);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
every_pred.cljs$lang$maxFixedArity = 3;
every_pred.cljs$lang$applyTo = every_pred__4.cljs$lang$applyTo;
every_pred.cljs$core$IFn$_invoke$arity$1 = every_pred__1;
every_pred.cljs$core$IFn$_invoke$arity$2 = every_pred__2;
every_pred.cljs$core$IFn$_invoke$arity$3 = every_pred__3;
every_pred.cljs$core$IFn$_invoke$arity$variadic = every_pred__4.cljs$core$IFn$_invoke$arity$variadic;
return every_pred;
})()
;
/**
* Takes a set of predicates and returns a function f that returns the first logical true value
* returned by one of its composing predicates against any of its arguments, else it returns
* logical false. Note that f is short-circuiting in that it will stop execution on the first
* argument that triggers a logical true result against the original predicates.
* @param {...*} var_args
*/
cljs.core.some_fn = (function() {
var some_fn = null;
var some_fn__1 = (function (p){
return (function() {
var sp1 = null;
var sp1__0 = (function (){
return null;
});
var sp1__1 = (function (x){
var G__29084 = x;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__29084) : p.call(null,G__29084));
});
var sp1__2 = (function (x,y){
var or__24272__auto__ = (function (){var G__29086 = x;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__29086) : p.call(null,G__29086));
})();
if(cljs.core.truth_(or__24272__auto__)){
return or__24272__auto__;
} else {
var G__29087 = y;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__29087) : p.call(null,G__29087));
}
});
var sp1__3 = (function (x,y,z){
var or__24272__auto__ = (function (){var G__29089 = x;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__29089) : p.call(null,G__29089));
})();
if(cljs.core.truth_(or__24272__auto__)){
return or__24272__auto__;
} else {
var or__24272__auto____$1 = (function (){var G__29091 = y;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__29091) : p.call(null,G__29091));
})();
if(cljs.core.truth_(or__24272__auto____$1)){
return or__24272__auto____$1;
} else {
var G__29092 = z;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__29092) : p.call(null,G__29092));
}
}
});
var sp1__4 = (function() { 
var G__29253__delegate = function (x,y,z,args){
var or__24272__auto__ = sp1.cljs$core$IFn$_invoke$arity$3(x,y,z);
if(cljs.core.truth_(or__24272__auto__)){
return or__24272__auto__;
} else {
return cljs.core.some(p,args);
}
};
var G__29253 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__29254__i = 0, G__29254__a = new Array(arguments.length -  3);
while (G__29254__i < G__29254__a.length) {G__29254__a[G__29254__i] = arguments[G__29254__i + 3]; ++G__29254__i;}
  args = new cljs.core.IndexedSeq(G__29254__a,0);
} 
return G__29253__delegate.call(this,x,y,z,args);};
G__29253.cljs$lang$maxFixedArity = 3;
G__29253.cljs$lang$applyTo = (function (arglist__29255){
var x = cljs.core.first(arglist__29255);
arglist__29255 = cljs.core.next(arglist__29255);
var y = cljs.core.first(arglist__29255);
arglist__29255 = cljs.core.next(arglist__29255);
var z = cljs.core.first(arglist__29255);
var args = cljs.core.rest(arglist__29255);
return G__29253__delegate(x,y,z,args);
});
G__29253.cljs$core$IFn$_invoke$arity$variadic = G__29253__delegate;
return G__29253;
})()
;
sp1 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return sp1__0.call(this);
case 1:
return sp1__1.call(this,x);
case 2:
return sp1__2.call(this,x,y);
case 3:
return sp1__3.call(this,x,y,z);
default:
var G__29256 = null;
if (arguments.length > 3) {
var G__29257__i = 0, G__29257__a = new Array(arguments.length -  3);
while (G__29257__i < G__29257__a.length) {G__29257__a[G__29257__i] = arguments[G__29257__i + 3]; ++G__29257__i;}
G__29256 = new cljs.core.IndexedSeq(G__29257__a,0);
}
return sp1__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__29256);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
sp1.cljs$lang$maxFixedArity = 3;
sp1.cljs$lang$applyTo = sp1__4.cljs$lang$applyTo;
sp1.cljs$core$IFn$_invoke$arity$0 = sp1__0;
sp1.cljs$core$IFn$_invoke$arity$1 = sp1__1;
sp1.cljs$core$IFn$_invoke$arity$2 = sp1__2;
sp1.cljs$core$IFn$_invoke$arity$3 = sp1__3;
sp1.cljs$core$IFn$_invoke$arity$variadic = sp1__4.cljs$core$IFn$_invoke$arity$variadic;
return sp1;
})()
});
var some_fn__2 = (function (p1,p2){
return (function() {
var sp2 = null;
var sp2__0 = (function (){
return null;
});
var sp2__1 = (function (x){
var or__24272__auto__ = (function (){var G__29124 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__29124) : p1.call(null,G__29124));
})();
if(cljs.core.truth_(or__24272__auto__)){
return or__24272__auto__;
} else {
var G__29125 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__29125) : p2.call(null,G__29125));
}
});
var sp2__2 = (function (x,y){
var or__24272__auto__ = (function (){var G__29127 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__29127) : p1.call(null,G__29127));
})();
if(cljs.core.truth_(or__24272__auto__)){
return or__24272__auto__;
} else {
var or__24272__auto____$1 = (function (){var G__29129 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__29129) : p1.call(null,G__29129));
})();
if(cljs.core.truth_(or__24272__auto____$1)){
return or__24272__auto____$1;
} else {
var or__24272__auto____$2 = (function (){var G__29131 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__29131) : p2.call(null,G__29131));
})();
if(cljs.core.truth_(or__24272__auto____$2)){
return or__24272__auto____$2;
} else {
var G__29132 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__29132) : p2.call(null,G__29132));
}
}
}
});
var sp2__3 = (function (x,y,z){
var or__24272__auto__ = (function (){var G__29134 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__29134) : p1.call(null,G__29134));
})();
if(cljs.core.truth_(or__24272__auto__)){
return or__24272__auto__;
} else {
var or__24272__auto____$1 = (function (){var G__29136 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__29136) : p1.call(null,G__29136));
})();
if(cljs.core.truth_(or__24272__auto____$1)){
return or__24272__auto____$1;
} else {
var or__24272__auto____$2 = (function (){var G__29138 = z;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__29138) : p1.call(null,G__29138));
})();
if(cljs.core.truth_(or__24272__auto____$2)){
return or__24272__auto____$2;
} else {
var or__24272__auto____$3 = (function (){var G__29140 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__29140) : p2.call(null,G__29140));
})();
if(cljs.core.truth_(or__24272__auto____$3)){
return or__24272__auto____$3;
} else {
var or__24272__auto____$4 = (function (){var G__29142 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__29142) : p2.call(null,G__29142));
})();
if(cljs.core.truth_(or__24272__auto____$4)){
return or__24272__auto____$4;
} else {
var G__29143 = z;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__29143) : p2.call(null,G__29143));
}
}
}
}
}
});
var sp2__4 = (function() { 
var G__29258__delegate = function (x,y,z,args){
var or__24272__auto__ = sp2.cljs$core$IFn$_invoke$arity$3(x,y,z);
if(cljs.core.truth_(or__24272__auto__)){
return or__24272__auto__;
} else {
return cljs.core.some(((function (or__24272__auto__){
return (function (p1__28879_SHARP_){
var or__24272__auto____$1 = (function (){var G__29145 = p1__28879_SHARP_;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__29145) : p1.call(null,G__29145));
})();
if(cljs.core.truth_(or__24272__auto____$1)){
return or__24272__auto____$1;
} else {
var G__29146 = p1__28879_SHARP_;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__29146) : p2.call(null,G__29146));
}
});})(or__24272__auto__))
,args);
}
};
var G__29258 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__29259__i = 0, G__29259__a = new Array(arguments.length -  3);
while (G__29259__i < G__29259__a.length) {G__29259__a[G__29259__i] = arguments[G__29259__i + 3]; ++G__29259__i;}
  args = new cljs.core.IndexedSeq(G__29259__a,0);
} 
return G__29258__delegate.call(this,x,y,z,args);};
G__29258.cljs$lang$maxFixedArity = 3;
G__29258.cljs$lang$applyTo = (function (arglist__29260){
var x = cljs.core.first(arglist__29260);
arglist__29260 = cljs.core.next(arglist__29260);
var y = cljs.core.first(arglist__29260);
arglist__29260 = cljs.core.next(arglist__29260);
var z = cljs.core.first(arglist__29260);
var args = cljs.core.rest(arglist__29260);
return G__29258__delegate(x,y,z,args);
});
G__29258.cljs$core$IFn$_invoke$arity$variadic = G__29258__delegate;
return G__29258;
})()
;
sp2 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return sp2__0.call(this);
case 1:
return sp2__1.call(this,x);
case 2:
return sp2__2.call(this,x,y);
case 3:
return sp2__3.call(this,x,y,z);
default:
var G__29261 = null;
if (arguments.length > 3) {
var G__29262__i = 0, G__29262__a = new Array(arguments.length -  3);
while (G__29262__i < G__29262__a.length) {G__29262__a[G__29262__i] = arguments[G__29262__i + 3]; ++G__29262__i;}
G__29261 = new cljs.core.IndexedSeq(G__29262__a,0);
}
return sp2__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__29261);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
sp2.cljs$lang$maxFixedArity = 3;
sp2.cljs$lang$applyTo = sp2__4.cljs$lang$applyTo;
sp2.cljs$core$IFn$_invoke$arity$0 = sp2__0;
sp2.cljs$core$IFn$_invoke$arity$1 = sp2__1;
sp2.cljs$core$IFn$_invoke$arity$2 = sp2__2;
sp2.cljs$core$IFn$_invoke$arity$3 = sp2__3;
sp2.cljs$core$IFn$_invoke$arity$variadic = sp2__4.cljs$core$IFn$_invoke$arity$variadic;
return sp2;
})()
});
var some_fn__3 = (function (p1,p2,p3){
return (function() {
var sp3 = null;
var sp3__0 = (function (){
return null;
});
var sp3__1 = (function (x){
var or__24272__auto__ = (function (){var G__29192 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__29192) : p1.call(null,G__29192));
})();
if(cljs.core.truth_(or__24272__auto__)){
return or__24272__auto__;
} else {
var or__24272__auto____$1 = (function (){var G__29194 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__29194) : p2.call(null,G__29194));
})();
if(cljs.core.truth_(or__24272__auto____$1)){
return or__24272__auto____$1;
} else {
var G__29195 = x;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__29195) : p3.call(null,G__29195));
}
}
});
var sp3__2 = (function (x,y){
var or__24272__auto__ = (function (){var G__29197 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__29197) : p1.call(null,G__29197));
})();
if(cljs.core.truth_(or__24272__auto__)){
return or__24272__auto__;
} else {
var or__24272__auto____$1 = (function (){var G__29199 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__29199) : p2.call(null,G__29199));
})();
if(cljs.core.truth_(or__24272__auto____$1)){
return or__24272__auto____$1;
} else {
var or__24272__auto____$2 = (function (){var G__29201 = x;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__29201) : p3.call(null,G__29201));
})();
if(cljs.core.truth_(or__24272__auto____$2)){
return or__24272__auto____$2;
} else {
var or__24272__auto____$3 = (function (){var G__29203 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__29203) : p1.call(null,G__29203));
})();
if(cljs.core.truth_(or__24272__auto____$3)){
return or__24272__auto____$3;
} else {
var or__24272__auto____$4 = (function (){var G__29205 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__29205) : p2.call(null,G__29205));
})();
if(cljs.core.truth_(or__24272__auto____$4)){
return or__24272__auto____$4;
} else {
var G__29206 = y;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__29206) : p3.call(null,G__29206));
}
}
}
}
}
});
var sp3__3 = (function (x,y,z){
var or__24272__auto__ = (function (){var G__29208 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__29208) : p1.call(null,G__29208));
})();
if(cljs.core.truth_(or__24272__auto__)){
return or__24272__auto__;
} else {
var or__24272__auto____$1 = (function (){var G__29210 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__29210) : p2.call(null,G__29210));
})();
if(cljs.core.truth_(or__24272__auto____$1)){
return or__24272__auto____$1;
} else {
var or__24272__auto____$2 = (function (){var G__29212 = x;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__29212) : p3.call(null,G__29212));
})();
if(cljs.core.truth_(or__24272__auto____$2)){
return or__24272__auto____$2;
} else {
var or__24272__auto____$3 = (function (){var G__29214 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__29214) : p1.call(null,G__29214));
})();
if(cljs.core.truth_(or__24272__auto____$3)){
return or__24272__auto____$3;
} else {
var or__24272__auto____$4 = (function (){var G__29216 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__29216) : p2.call(null,G__29216));
})();
if(cljs.core.truth_(or__24272__auto____$4)){
return or__24272__auto____$4;
} else {
var or__24272__auto____$5 = (function (){var G__29218 = y;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__29218) : p3.call(null,G__29218));
})();
if(cljs.core.truth_(or__24272__auto____$5)){
return or__24272__auto____$5;
} else {
var or__24272__auto____$6 = (function (){var G__29220 = z;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__29220) : p1.call(null,G__29220));
})();
if(cljs.core.truth_(or__24272__auto____$6)){
return or__24272__auto____$6;
} else {
var or__24272__auto____$7 = (function (){var G__29222 = z;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__29222) : p2.call(null,G__29222));
})();
if(cljs.core.truth_(or__24272__auto____$7)){
return or__24272__auto____$7;
} else {
var G__29223 = z;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__29223) : p3.call(null,G__29223));
}
}
}
}
}
}
}
}
});
var sp3__4 = (function() { 
var G__29263__delegate = function (x,y,z,args){
var or__24272__auto__ = sp3.cljs$core$IFn$_invoke$arity$3(x,y,z);
if(cljs.core.truth_(or__24272__auto__)){
return or__24272__auto__;
} else {
return cljs.core.some(((function (or__24272__auto__){
return (function (p1__28880_SHARP_){
var or__24272__auto____$1 = (function (){var G__29225 = p1__28880_SHARP_;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__29225) : p1.call(null,G__29225));
})();
if(cljs.core.truth_(or__24272__auto____$1)){
return or__24272__auto____$1;
} else {
var or__24272__auto____$2 = (function (){var G__29227 = p1__28880_SHARP_;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__29227) : p2.call(null,G__29227));
})();
if(cljs.core.truth_(or__24272__auto____$2)){
return or__24272__auto____$2;
} else {
var G__29228 = p1__28880_SHARP_;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__29228) : p3.call(null,G__29228));
}
}
});})(or__24272__auto__))
,args);
}
};
var G__29263 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__29264__i = 0, G__29264__a = new Array(arguments.length -  3);
while (G__29264__i < G__29264__a.length) {G__29264__a[G__29264__i] = arguments[G__29264__i + 3]; ++G__29264__i;}
  args = new cljs.core.IndexedSeq(G__29264__a,0);
} 
return G__29263__delegate.call(this,x,y,z,args);};
G__29263.cljs$lang$maxFixedArity = 3;
G__29263.cljs$lang$applyTo = (function (arglist__29265){
var x = cljs.core.first(arglist__29265);
arglist__29265 = cljs.core.next(arglist__29265);
var y = cljs.core.first(arglist__29265);
arglist__29265 = cljs.core.next(arglist__29265);
var z = cljs.core.first(arglist__29265);
var args = cljs.core.rest(arglist__29265);
return G__29263__delegate(x,y,z,args);
});
G__29263.cljs$core$IFn$_invoke$arity$variadic = G__29263__delegate;
return G__29263;
})()
;
sp3 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return sp3__0.call(this);
case 1:
return sp3__1.call(this,x);
case 2:
return sp3__2.call(this,x,y);
case 3:
return sp3__3.call(this,x,y,z);
default:
var G__29266 = null;
if (arguments.length > 3) {
var G__29267__i = 0, G__29267__a = new Array(arguments.length -  3);
while (G__29267__i < G__29267__a.length) {G__29267__a[G__29267__i] = arguments[G__29267__i + 3]; ++G__29267__i;}
G__29266 = new cljs.core.IndexedSeq(G__29267__a,0);
}
return sp3__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__29266);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
sp3.cljs$lang$maxFixedArity = 3;
sp3.cljs$lang$applyTo = sp3__4.cljs$lang$applyTo;
sp3.cljs$core$IFn$_invoke$arity$0 = sp3__0;
sp3.cljs$core$IFn$_invoke$arity$1 = sp3__1;
sp3.cljs$core$IFn$_invoke$arity$2 = sp3__2;
sp3.cljs$core$IFn$_invoke$arity$3 = sp3__3;
sp3.cljs$core$IFn$_invoke$arity$variadic = sp3__4.cljs$core$IFn$_invoke$arity$variadic;
return sp3;
})()
});
var some_fn__4 = (function() { 
var G__29268__delegate = function (p1,p2,p3,ps){
var ps__$1 = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(p1,p2,p3,ps);
return ((function (ps__$1){
return (function() {
var spn = null;
var spn__0 = (function (){
return null;
});
var spn__1 = (function (x){
return cljs.core.some(((function (ps__$1){
return (function (p1__28881_SHARP_){
var G__29244 = x;
return (p1__28881_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__28881_SHARP_.cljs$core$IFn$_invoke$arity$1(G__29244) : p1__28881_SHARP_.call(null,G__29244));
});})(ps__$1))
,ps__$1);
});
var spn__2 = (function (x,y){
return cljs.core.some(((function (ps__$1){
return (function (p1__28882_SHARP_){
var or__24272__auto__ = (function (){var G__29246 = x;
return (p1__28882_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__28882_SHARP_.cljs$core$IFn$_invoke$arity$1(G__29246) : p1__28882_SHARP_.call(null,G__29246));
})();
if(cljs.core.truth_(or__24272__auto__)){
return or__24272__auto__;
} else {
var G__29247 = y;
return (p1__28882_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__28882_SHARP_.cljs$core$IFn$_invoke$arity$1(G__29247) : p1__28882_SHARP_.call(null,G__29247));
}
});})(ps__$1))
,ps__$1);
});
var spn__3 = (function (x,y,z){
return cljs.core.some(((function (ps__$1){
return (function (p1__28883_SHARP_){
var or__24272__auto__ = (function (){var G__29249 = x;
return (p1__28883_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__28883_SHARP_.cljs$core$IFn$_invoke$arity$1(G__29249) : p1__28883_SHARP_.call(null,G__29249));
})();
if(cljs.core.truth_(or__24272__auto__)){
return or__24272__auto__;
} else {
var or__24272__auto____$1 = (function (){var G__29251 = y;
return (p1__28883_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__28883_SHARP_.cljs$core$IFn$_invoke$arity$1(G__29251) : p1__28883_SHARP_.call(null,G__29251));
})();
if(cljs.core.truth_(or__24272__auto____$1)){
return or__24272__auto____$1;
} else {
var G__29252 = z;
return (p1__28883_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__28883_SHARP_.cljs$core$IFn$_invoke$arity$1(G__29252) : p1__28883_SHARP_.call(null,G__29252));
}
}
});})(ps__$1))
,ps__$1);
});
var spn__4 = (function() { 
var G__29269__delegate = function (x,y,z,args){
var or__24272__auto__ = spn.cljs$core$IFn$_invoke$arity$3(x,y,z);
if(cljs.core.truth_(or__24272__auto__)){
return or__24272__auto__;
} else {
return cljs.core.some(((function (or__24272__auto__,ps__$1){
return (function (p1__28884_SHARP_){
return cljs.core.some(p1__28884_SHARP_,args);
});})(or__24272__auto__,ps__$1))
,ps__$1);
}
};
var G__29269 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__29270__i = 0, G__29270__a = new Array(arguments.length -  3);
while (G__29270__i < G__29270__a.length) {G__29270__a[G__29270__i] = arguments[G__29270__i + 3]; ++G__29270__i;}
  args = new cljs.core.IndexedSeq(G__29270__a,0);
} 
return G__29269__delegate.call(this,x,y,z,args);};
G__29269.cljs$lang$maxFixedArity = 3;
G__29269.cljs$lang$applyTo = (function (arglist__29271){
var x = cljs.core.first(arglist__29271);
arglist__29271 = cljs.core.next(arglist__29271);
var y = cljs.core.first(arglist__29271);
arglist__29271 = cljs.core.next(arglist__29271);
var z = cljs.core.first(arglist__29271);
var args = cljs.core.rest(arglist__29271);
return G__29269__delegate(x,y,z,args);
});
G__29269.cljs$core$IFn$_invoke$arity$variadic = G__29269__delegate;
return G__29269;
})()
;
spn = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return spn__0.call(this);
case 1:
return spn__1.call(this,x);
case 2:
return spn__2.call(this,x,y);
case 3:
return spn__3.call(this,x,y,z);
default:
var G__29272 = null;
if (arguments.length > 3) {
var G__29273__i = 0, G__29273__a = new Array(arguments.length -  3);
while (G__29273__i < G__29273__a.length) {G__29273__a[G__29273__i] = arguments[G__29273__i + 3]; ++G__29273__i;}
G__29272 = new cljs.core.IndexedSeq(G__29273__a,0);
}
return spn__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__29272);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
spn.cljs$lang$maxFixedArity = 3;
spn.cljs$lang$applyTo = spn__4.cljs$lang$applyTo;
spn.cljs$core$IFn$_invoke$arity$0 = spn__0;
spn.cljs$core$IFn$_invoke$arity$1 = spn__1;
spn.cljs$core$IFn$_invoke$arity$2 = spn__2;
spn.cljs$core$IFn$_invoke$arity$3 = spn__3;
spn.cljs$core$IFn$_invoke$arity$variadic = spn__4.cljs$core$IFn$_invoke$arity$variadic;
return spn;
})()
;})(ps__$1))
};
var G__29268 = function (p1,p2,p3,var_args){
var ps = null;
if (arguments.length > 3) {
var G__29274__i = 0, G__29274__a = new Array(arguments.length -  3);
while (G__29274__i < G__29274__a.length) {G__29274__a[G__29274__i] = arguments[G__29274__i + 3]; ++G__29274__i;}
  ps = new cljs.core.IndexedSeq(G__29274__a,0);
} 
return G__29268__delegate.call(this,p1,p2,p3,ps);};
G__29268.cljs$lang$maxFixedArity = 3;
G__29268.cljs$lang$applyTo = (function (arglist__29275){
var p1 = cljs.core.first(arglist__29275);
arglist__29275 = cljs.core.next(arglist__29275);
var p2 = cljs.core.first(arglist__29275);
arglist__29275 = cljs.core.next(arglist__29275);
var p3 = cljs.core.first(arglist__29275);
var ps = cljs.core.rest(arglist__29275);
return G__29268__delegate(p1,p2,p3,ps);
});
G__29268.cljs$core$IFn$_invoke$arity$variadic = G__29268__delegate;
return G__29268;
})()
;
some_fn = function(p1,p2,p3,var_args){
var ps = var_args;
switch(arguments.length){
case 1:
return some_fn__1.call(this,p1);
case 2:
return some_fn__2.call(this,p1,p2);
case 3:
return some_fn__3.call(this,p1,p2,p3);
default:
var G__29276 = null;
if (arguments.length > 3) {
var G__29277__i = 0, G__29277__a = new Array(arguments.length -  3);
while (G__29277__i < G__29277__a.length) {G__29277__a[G__29277__i] = arguments[G__29277__i + 3]; ++G__29277__i;}
G__29276 = new cljs.core.IndexedSeq(G__29277__a,0);
}
return some_fn__4.cljs$core$IFn$_invoke$arity$variadic(p1,p2,p3, G__29276);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
some_fn.cljs$lang$maxFixedArity = 3;
some_fn.cljs$lang$applyTo = some_fn__4.cljs$lang$applyTo;
some_fn.cljs$core$IFn$_invoke$arity$1 = some_fn__1;
some_fn.cljs$core$IFn$_invoke$arity$2 = some_fn__2;
some_fn.cljs$core$IFn$_invoke$arity$3 = some_fn__3;
some_fn.cljs$core$IFn$_invoke$arity$variadic = some_fn__4.cljs$core$IFn$_invoke$arity$variadic;
return some_fn;
})()
;
/**
* Returns a lazy sequence consisting of the result of applying f to
* the set of first items of each coll, followed by applying f to the
* set of second items in each coll, until any one of the colls is
* exhausted.  Any remaining items in other colls are ignored. Function
* f should accept number-of-colls arguments. Returns a transducer when
* no collection is provided.
* @param {...*} var_args
*/
cljs.core.map = (function() {
var map = null;
var map__1 = (function (f){
return (function (rf){
return (function() {
var G__29332 = null;
var G__29332__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__29332__1 = (function (result){
var G__29318 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__29318) : rf.call(null,G__29318));
});
var G__29332__2 = (function (result,input){
var G__29319 = result;
var G__29320 = (function (){var G__29321 = input;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__29321) : f.call(null,G__29321));
})();
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__29319,G__29320) : rf.call(null,G__29319,G__29320));
});
var G__29332__3 = (function() { 
var G__29333__delegate = function (result,input,inputs){
var G__29322 = result;
var G__29323 = cljs.core.apply.cljs$core$IFn$_invoke$arity$3(f,input,inputs);
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__29322,G__29323) : rf.call(null,G__29322,G__29323));
};
var G__29333 = function (result,input,var_args){
var inputs = null;
if (arguments.length > 2) {
var G__29334__i = 0, G__29334__a = new Array(arguments.length -  2);
while (G__29334__i < G__29334__a.length) {G__29334__a[G__29334__i] = arguments[G__29334__i + 2]; ++G__29334__i;}
  inputs = new cljs.core.IndexedSeq(G__29334__a,0);
} 
return G__29333__delegate.call(this,result,input,inputs);};
G__29333.cljs$lang$maxFixedArity = 2;
G__29333.cljs$lang$applyTo = (function (arglist__29335){
var result = cljs.core.first(arglist__29335);
arglist__29335 = cljs.core.next(arglist__29335);
var input = cljs.core.first(arglist__29335);
var inputs = cljs.core.rest(arglist__29335);
return G__29333__delegate(result,input,inputs);
});
G__29333.cljs$core$IFn$_invoke$arity$variadic = G__29333__delegate;
return G__29333;
})()
;
G__29332 = function(result,input,var_args){
var inputs = var_args;
switch(arguments.length){
case 0:
return G__29332__0.call(this);
case 1:
return G__29332__1.call(this,result);
case 2:
return G__29332__2.call(this,result,input);
default:
var G__29336 = null;
if (arguments.length > 2) {
var G__29337__i = 0, G__29337__a = new Array(arguments.length -  2);
while (G__29337__i < G__29337__a.length) {G__29337__a[G__29337__i] = arguments[G__29337__i + 2]; ++G__29337__i;}
G__29336 = new cljs.core.IndexedSeq(G__29337__a,0);
}
return G__29332__3.cljs$core$IFn$_invoke$arity$variadic(result,input, G__29336);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__29332.cljs$lang$maxFixedArity = 2;
G__29332.cljs$lang$applyTo = G__29332__3.cljs$lang$applyTo;
G__29332.cljs$core$IFn$_invoke$arity$0 = G__29332__0;
G__29332.cljs$core$IFn$_invoke$arity$1 = G__29332__1;
G__29332.cljs$core$IFn$_invoke$arity$2 = G__29332__2;
G__29332.cljs$core$IFn$_invoke$arity$variadic = G__29332__3.cljs$core$IFn$_invoke$arity$variadic;
return G__29332;
})()
});
});
var map__2 = (function (f,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(s)){
var c = cljs.core.chunk_first(s);
var size = cljs.core.count(c);
var b = cljs.core.chunk_buffer(size);
var n__25159__auto___29338 = size;
var i_29339 = (0);
while(true){
if((i_29339 < n__25159__auto___29338)){
cljs.core.chunk_append(b,(function (){var G__29324 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c,i_29339);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__29324) : f.call(null,G__29324));
})());

var G__29340 = (i_29339 + (1));
i_29339 = G__29340;
continue;
} else {
}
break;
}

return cljs.core.chunk_cons(cljs.core.chunk(b),map.cljs$core$IFn$_invoke$arity$2(f,cljs.core.chunk_rest(s)));
} else {
return cljs.core.cons((function (){var G__29325 = cljs.core.first(s);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__29325) : f.call(null,G__29325));
})(),map.cljs$core$IFn$_invoke$arity$2(f,cljs.core.rest(s)));
}
} else {
return null;
}
}),null,null));
});
var map__3 = (function (f,c1,c2){
return (new cljs.core.LazySeq(null,(function (){
var s1 = cljs.core.seq(c1);
var s2 = cljs.core.seq(c2);
if((s1) && (s2)){
return cljs.core.cons((function (){var G__29326 = cljs.core.first(s1);
var G__29327 = cljs.core.first(s2);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__29326,G__29327) : f.call(null,G__29326,G__29327));
})(),map.cljs$core$IFn$_invoke$arity$3(f,cljs.core.rest(s1),cljs.core.rest(s2)));
} else {
return null;
}
}),null,null));
});
var map__4 = (function (f,c1,c2,c3){
return (new cljs.core.LazySeq(null,(function (){
var s1 = cljs.core.seq(c1);
var s2 = cljs.core.seq(c2);
var s3 = cljs.core.seq(c3);
if((s1) && (s2) && (s3)){
return cljs.core.cons((function (){var G__29328 = cljs.core.first(s1);
var G__29329 = cljs.core.first(s2);
var G__29330 = cljs.core.first(s3);
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__29328,G__29329,G__29330) : f.call(null,G__29328,G__29329,G__29330));
})(),map.cljs$core$IFn$_invoke$arity$4(f,cljs.core.rest(s1),cljs.core.rest(s2),cljs.core.rest(s3)));
} else {
return null;
}
}),null,null));
});
var map__5 = (function() { 
var G__29341__delegate = function (f,c1,c2,c3,colls){
var step = (function step(cs){
return (new cljs.core.LazySeq(null,(function (){
var ss = map.cljs$core$IFn$_invoke$arity$2(cljs.core.seq,cs);
if(cljs.core.every_QMARK_(cljs.core.identity,ss)){
return cljs.core.cons(map.cljs$core$IFn$_invoke$arity$2(cljs.core.first,ss),step(map.cljs$core$IFn$_invoke$arity$2(cljs.core.rest,ss)));
} else {
return null;
}
}),null,null));
});
return map.cljs$core$IFn$_invoke$arity$2(((function (step){
return (function (p1__29278_SHARP_){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$2(f,p1__29278_SHARP_);
});})(step))
,step(cljs.core.conj.cljs$core$IFn$_invoke$arity$variadic(colls,c3,cljs.core.array_seq([c2,c1], 0))));
};
var G__29341 = function (f,c1,c2,c3,var_args){
var colls = null;
if (arguments.length > 4) {
var G__29342__i = 0, G__29342__a = new Array(arguments.length -  4);
while (G__29342__i < G__29342__a.length) {G__29342__a[G__29342__i] = arguments[G__29342__i + 4]; ++G__29342__i;}
  colls = new cljs.core.IndexedSeq(G__29342__a,0);
} 
return G__29341__delegate.call(this,f,c1,c2,c3,colls);};
G__29341.cljs$lang$maxFixedArity = 4;
G__29341.cljs$lang$applyTo = (function (arglist__29343){
var f = cljs.core.first(arglist__29343);
arglist__29343 = cljs.core.next(arglist__29343);
var c1 = cljs.core.first(arglist__29343);
arglist__29343 = cljs.core.next(arglist__29343);
var c2 = cljs.core.first(arglist__29343);
arglist__29343 = cljs.core.next(arglist__29343);
var c3 = cljs.core.first(arglist__29343);
var colls = cljs.core.rest(arglist__29343);
return G__29341__delegate(f,c1,c2,c3,colls);
});
G__29341.cljs$core$IFn$_invoke$arity$variadic = G__29341__delegate;
return G__29341;
})()
;
map = function(f,c1,c2,c3,var_args){
var colls = var_args;
switch(arguments.length){
case 1:
return map__1.call(this,f);
case 2:
return map__2.call(this,f,c1);
case 3:
return map__3.call(this,f,c1,c2);
case 4:
return map__4.call(this,f,c1,c2,c3);
default:
var G__29344 = null;
if (arguments.length > 4) {
var G__29345__i = 0, G__29345__a = new Array(arguments.length -  4);
while (G__29345__i < G__29345__a.length) {G__29345__a[G__29345__i] = arguments[G__29345__i + 4]; ++G__29345__i;}
G__29344 = new cljs.core.IndexedSeq(G__29345__a,0);
}
return map__5.cljs$core$IFn$_invoke$arity$variadic(f,c1,c2,c3, G__29344);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
map.cljs$lang$maxFixedArity = 4;
map.cljs$lang$applyTo = map__5.cljs$lang$applyTo;
map.cljs$core$IFn$_invoke$arity$1 = map__1;
map.cljs$core$IFn$_invoke$arity$2 = map__2;
map.cljs$core$IFn$_invoke$arity$3 = map__3;
map.cljs$core$IFn$_invoke$arity$4 = map__4;
map.cljs$core$IFn$_invoke$arity$variadic = map__5.cljs$core$IFn$_invoke$arity$variadic;
return map;
})()
;
/**
* Returns a lazy sequence of the first n items in coll, or all items if
* there are fewer than n.  Returns a stateful transducer when
* no collection is provided.
*/
cljs.core.take = (function() {
var take = null;
var take__1 = (function (n){
return (function (rf){
var na = cljs.core.volatile_BANG_(n);
return ((function (na){
return (function() {
var G__29354 = null;
var G__29354__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__29354__1 = (function (result){
var G__29351 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__29351) : rf.call(null,G__29351));
});
var G__29354__2 = (function (result,input){
var n__$1 = cljs.core.deref(na);
var nn = na.cljs$core$IVolatile$_vreset_BANG_$arity$2(null,(na.cljs$core$IDeref$_deref$arity$1(null) - (1)));
var result__$1 = (((n__$1 > (0)))?(function (){var G__29352 = result;
var G__29353 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__29352,G__29353) : rf.call(null,G__29352,G__29353));
})():result);
if(!((nn > (0)))){
return cljs.core.ensure_reduced(result__$1);
} else {
return result__$1;
}
});
G__29354 = function(result,input){
switch(arguments.length){
case 0:
return G__29354__0.call(this);
case 1:
return G__29354__1.call(this,result);
case 2:
return G__29354__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__29354.cljs$core$IFn$_invoke$arity$0 = G__29354__0;
G__29354.cljs$core$IFn$_invoke$arity$1 = G__29354__1;
G__29354.cljs$core$IFn$_invoke$arity$2 = G__29354__2;
return G__29354;
})()
;})(na))
});
});
var take__2 = (function (n,coll){
return (new cljs.core.LazySeq(null,(function (){
if((n > (0))){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
return cljs.core.cons(cljs.core.first(s),take.cljs$core$IFn$_invoke$arity$2((n - (1)),cljs.core.rest(s)));
} else {
return null;
}
} else {
return null;
}
}),null,null));
});
take = function(n,coll){
switch(arguments.length){
case 1:
return take__1.call(this,n);
case 2:
return take__2.call(this,n,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
take.cljs$core$IFn$_invoke$arity$1 = take__1;
take.cljs$core$IFn$_invoke$arity$2 = take__2;
return take;
})()
;
/**
* Returns a lazy sequence of all but the first n items in coll.
* Returns a stateful transducer when no collection is provided.
*/
cljs.core.drop = (function() {
var drop = null;
var drop__1 = (function (n){
return (function (rf){
var na = cljs.core.volatile_BANG_(n);
return ((function (na){
return (function() {
var G__29361 = null;
var G__29361__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__29361__1 = (function (result){
var G__29358 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__29358) : rf.call(null,G__29358));
});
var G__29361__2 = (function (result,input){
var n__$1 = cljs.core.deref(na);
na.cljs$core$IVolatile$_vreset_BANG_$arity$2(null,(na.cljs$core$IDeref$_deref$arity$1(null) - (1)));

if((n__$1 > (0))){
return result;
} else {
var G__29359 = result;
var G__29360 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__29359,G__29360) : rf.call(null,G__29359,G__29360));
}
});
G__29361 = function(result,input){
switch(arguments.length){
case 0:
return G__29361__0.call(this);
case 1:
return G__29361__1.call(this,result);
case 2:
return G__29361__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__29361.cljs$core$IFn$_invoke$arity$0 = G__29361__0;
G__29361.cljs$core$IFn$_invoke$arity$1 = G__29361__1;
G__29361.cljs$core$IFn$_invoke$arity$2 = G__29361__2;
return G__29361;
})()
;})(na))
});
});
var drop__2 = (function (n,coll){
var step = (function (n__$1,coll__$1){
while(true){
var s = cljs.core.seq(coll__$1);
if(((n__$1 > (0))) && (s)){
var G__29362 = (n__$1 - (1));
var G__29363 = cljs.core.rest(s);
n__$1 = G__29362;
coll__$1 = G__29363;
continue;
} else {
return s;
}
break;
}
});
return (new cljs.core.LazySeq(null,((function (step){
return (function (){
return step(n,coll);
});})(step))
,null,null));
});
drop = function(n,coll){
switch(arguments.length){
case 1:
return drop__1.call(this,n);
case 2:
return drop__2.call(this,n,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
drop.cljs$core$IFn$_invoke$arity$1 = drop__1;
drop.cljs$core$IFn$_invoke$arity$2 = drop__2;
return drop;
})()
;
/**
* Return a lazy sequence of all but the last n (default 1) items in coll
*/
cljs.core.drop_last = (function() {
var drop_last = null;
var drop_last__1 = (function (s){
return drop_last.cljs$core$IFn$_invoke$arity$2((1),s);
});
var drop_last__2 = (function (n,s){
return cljs.core.map.cljs$core$IFn$_invoke$arity$3((function (x,_){
return x;
}),s,cljs.core.drop.cljs$core$IFn$_invoke$arity$2(n,s));
});
drop_last = function(n,s){
switch(arguments.length){
case 1:
return drop_last__1.call(this,n);
case 2:
return drop_last__2.call(this,n,s);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
drop_last.cljs$core$IFn$_invoke$arity$1 = drop_last__1;
drop_last.cljs$core$IFn$_invoke$arity$2 = drop_last__2;
return drop_last;
})()
;
/**
* Returns a seq of the last n items in coll.  Depending on the type
* of coll may be no better than linear time.  For vectors, see also subvec.
*/
cljs.core.take_last = (function take_last(n,coll){
var s = cljs.core.seq(coll);
var lead = cljs.core.seq(cljs.core.drop.cljs$core$IFn$_invoke$arity$2(n,coll));
while(true){
if(lead){
var G__29366 = cljs.core.next(s);
var G__29367 = cljs.core.next(lead);
s = G__29366;
lead = G__29367;
continue;
} else {
return s;
}
break;
}
});
/**
* Returns a lazy sequence of the items in coll starting from the
* first item for which (pred item) returns logical false.  Returns a
* stateful transducer when no collection is provided.
*/
cljs.core.drop_while = (function() {
var drop_while = null;
var drop_while__1 = (function (pred){
return (function (rf){
var da = cljs.core.volatile_BANG_(true);
return ((function (da){
return (function() {
var G__29380 = null;
var G__29380__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__29380__1 = (function (result){
var G__29374 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__29374) : rf.call(null,G__29374));
});
var G__29380__2 = (function (result,input){
var drop_QMARK_ = cljs.core.deref(da);
if(cljs.core.truth_((function (){var and__24260__auto__ = drop_QMARK_;
if(cljs.core.truth_(and__24260__auto__)){
var G__29375 = input;
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__29375) : pred.call(null,G__29375));
} else {
return and__24260__auto__;
}
})())){
return result;
} else {
cljs.core.vreset_BANG_(da,null);

var G__29376 = result;
var G__29377 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__29376,G__29377) : rf.call(null,G__29376,G__29377));
}
});
G__29380 = function(result,input){
switch(arguments.length){
case 0:
return G__29380__0.call(this);
case 1:
return G__29380__1.call(this,result);
case 2:
return G__29380__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__29380.cljs$core$IFn$_invoke$arity$0 = G__29380__0;
G__29380.cljs$core$IFn$_invoke$arity$1 = G__29380__1;
G__29380.cljs$core$IFn$_invoke$arity$2 = G__29380__2;
return G__29380;
})()
;})(da))
});
});
var drop_while__2 = (function (pred,coll){
var step = (function (pred__$1,coll__$1){
while(true){
var s = cljs.core.seq(coll__$1);
if(cljs.core.truth_((function (){var and__24260__auto__ = s;
if(and__24260__auto__){
var G__29379 = cljs.core.first(s);
return (pred__$1.cljs$core$IFn$_invoke$arity$1 ? pred__$1.cljs$core$IFn$_invoke$arity$1(G__29379) : pred__$1.call(null,G__29379));
} else {
return and__24260__auto__;
}
})())){
var G__29381 = pred__$1;
var G__29382 = cljs.core.rest(s);
pred__$1 = G__29381;
coll__$1 = G__29382;
continue;
} else {
return s;
}
break;
}
});
return (new cljs.core.LazySeq(null,((function (step){
return (function (){
return step(pred,coll);
});})(step))
,null,null));
});
drop_while = function(pred,coll){
switch(arguments.length){
case 1:
return drop_while__1.call(this,pred);
case 2:
return drop_while__2.call(this,pred,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
drop_while.cljs$core$IFn$_invoke$arity$1 = drop_while__1;
drop_while.cljs$core$IFn$_invoke$arity$2 = drop_while__2;
return drop_while;
})()
;
/**
* Returns a lazy (infinite!) sequence of repetitions of the items in coll.
*/
cljs.core.cycle = (function cycle(coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
return cljs.core.concat.cljs$core$IFn$_invoke$arity$2(s,cycle(s));
} else {
return null;
}
}),null,null));
});
/**
* Returns a vector of [(take n coll) (drop n coll)]
*/
cljs.core.split_at = (function split_at(n,coll){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,coll),cljs.core.drop.cljs$core$IFn$_invoke$arity$2(n,coll)], null);
});
/**
* Returns a lazy (infinite!, or length n if supplied) sequence of xs.
*/
cljs.core.repeat = (function() {
var repeat = null;
var repeat__1 = (function (x){
return (new cljs.core.LazySeq(null,(function (){
return cljs.core.cons(x,repeat.cljs$core$IFn$_invoke$arity$1(x));
}),null,null));
});
var repeat__2 = (function (n,x){
return cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,repeat.cljs$core$IFn$_invoke$arity$1(x));
});
repeat = function(n,x){
switch(arguments.length){
case 1:
return repeat__1.call(this,n);
case 2:
return repeat__2.call(this,n,x);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
repeat.cljs$core$IFn$_invoke$arity$1 = repeat__1;
repeat.cljs$core$IFn$_invoke$arity$2 = repeat__2;
return repeat;
})()
;
/**
* Returns a lazy seq of n xs.
*/
cljs.core.replicate = (function replicate(n,x){
return cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,cljs.core.repeat.cljs$core$IFn$_invoke$arity$1(x));
});
/**
* Takes a function of no args, presumably with side effects, and
* returns an infinite (or length n if supplied) lazy sequence of calls
* to it
*/
cljs.core.repeatedly = (function() {
var repeatedly = null;
var repeatedly__1 = (function (f){
return (new cljs.core.LazySeq(null,(function (){
return cljs.core.cons((function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})(),repeatedly.cljs$core$IFn$_invoke$arity$1(f));
}),null,null));
});
var repeatedly__2 = (function (n,f){
return cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,repeatedly.cljs$core$IFn$_invoke$arity$1(f));
});
repeatedly = function(n,f){
switch(arguments.length){
case 1:
return repeatedly__1.call(this,n);
case 2:
return repeatedly__2.call(this,n,f);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
repeatedly.cljs$core$IFn$_invoke$arity$1 = repeatedly__1;
repeatedly.cljs$core$IFn$_invoke$arity$2 = repeatedly__2;
return repeatedly;
})()
;
/**
* Returns a lazy sequence of x, (f x), (f (f x)) etc. f must be free of side-effects
*/
cljs.core.iterate = (function iterate(f,x){
return cljs.core.cons(x,(new cljs.core.LazySeq(null,(function (){
return iterate(f,(function (){var G__29391 = x;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__29391) : f.call(null,G__29391));
})());
}),null,null)));
});
/**
* Returns a lazy seq of the first item in each coll, then the second etc.
* @param {...*} var_args
*/
cljs.core.interleave = (function() {
var interleave = null;
var interleave__2 = (function (c1,c2){
return (new cljs.core.LazySeq(null,(function (){
var s1 = cljs.core.seq(c1);
var s2 = cljs.core.seq(c2);
if((s1) && (s2)){
return cljs.core.cons(cljs.core.first(s1),cljs.core.cons(cljs.core.first(s2),interleave.cljs$core$IFn$_invoke$arity$2(cljs.core.rest(s1),cljs.core.rest(s2))));
} else {
return null;
}
}),null,null));
});
var interleave__3 = (function() { 
var G__29394__delegate = function (c1,c2,colls){
return (new cljs.core.LazySeq(null,(function (){
var ss = cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.seq,cljs.core.conj.cljs$core$IFn$_invoke$arity$variadic(colls,c2,cljs.core.array_seq([c1], 0)));
if(cljs.core.every_QMARK_(cljs.core.identity,ss)){
return cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.first,ss),cljs.core.apply.cljs$core$IFn$_invoke$arity$2(interleave,cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.rest,ss)));
} else {
return null;
}
}),null,null));
};
var G__29394 = function (c1,c2,var_args){
var colls = null;
if (arguments.length > 2) {
var G__29395__i = 0, G__29395__a = new Array(arguments.length -  2);
while (G__29395__i < G__29395__a.length) {G__29395__a[G__29395__i] = arguments[G__29395__i + 2]; ++G__29395__i;}
  colls = new cljs.core.IndexedSeq(G__29395__a,0);
} 
return G__29394__delegate.call(this,c1,c2,colls);};
G__29394.cljs$lang$maxFixedArity = 2;
G__29394.cljs$lang$applyTo = (function (arglist__29396){
var c1 = cljs.core.first(arglist__29396);
arglist__29396 = cljs.core.next(arglist__29396);
var c2 = cljs.core.first(arglist__29396);
var colls = cljs.core.rest(arglist__29396);
return G__29394__delegate(c1,c2,colls);
});
G__29394.cljs$core$IFn$_invoke$arity$variadic = G__29394__delegate;
return G__29394;
})()
;
interleave = function(c1,c2,var_args){
var colls = var_args;
switch(arguments.length){
case 2:
return interleave__2.call(this,c1,c2);
default:
var G__29397 = null;
if (arguments.length > 2) {
var G__29398__i = 0, G__29398__a = new Array(arguments.length -  2);
while (G__29398__i < G__29398__a.length) {G__29398__a[G__29398__i] = arguments[G__29398__i + 2]; ++G__29398__i;}
G__29397 = new cljs.core.IndexedSeq(G__29398__a,0);
}
return interleave__3.cljs$core$IFn$_invoke$arity$variadic(c1,c2, G__29397);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
interleave.cljs$lang$maxFixedArity = 2;
interleave.cljs$lang$applyTo = interleave__3.cljs$lang$applyTo;
interleave.cljs$core$IFn$_invoke$arity$2 = interleave__2;
interleave.cljs$core$IFn$_invoke$arity$variadic = interleave__3.cljs$core$IFn$_invoke$arity$variadic;
return interleave;
})()
;
/**
* Returns a lazy seq of the elements of coll separated by sep
*/
cljs.core.interpose = (function interpose(sep,coll){
return cljs.core.drop.cljs$core$IFn$_invoke$arity$2((1),cljs.core.interleave.cljs$core$IFn$_invoke$arity$2(cljs.core.repeat.cljs$core$IFn$_invoke$arity$1(sep),coll));
});
/**
* Take a collection of collections, and return a lazy seq
* of items from the inner collection
*/
cljs.core.flatten1 = (function flatten1(colls){
var cat = (function cat(coll,colls__$1){
return (new cljs.core.LazySeq(null,(function (){
var temp__4124__auto__ = cljs.core.seq(coll);
if(temp__4124__auto__){
var coll__$1 = temp__4124__auto__;
return cljs.core.cons(cljs.core.first(coll__$1),cat(cljs.core.rest(coll__$1),colls__$1));
} else {
if(cljs.core.seq(colls__$1)){
return cat(cljs.core.first(colls__$1),cljs.core.rest(colls__$1));
} else {
return null;
}
}
}),null,null));
});
return cat(null,colls);
});
/**
* Returns the result of applying concat to the result of applying map
* to f and colls.  Thus function f should return a collection. Returns
* a transducer when no collections are provided
* @param {...*} var_args
*/
cljs.core.mapcat = (function() {
var mapcat = null;
var mapcat__1 = (function (f){
return cljs.core.comp.cljs$core$IFn$_invoke$arity$2(cljs.core.map.cljs$core$IFn$_invoke$arity$1(f),cljs.core.cat);
});
var mapcat__2 = (function() { 
var G__29407__delegate = function (f,colls){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.concat,cljs.core.apply.cljs$core$IFn$_invoke$arity$3(cljs.core.map,f,colls));
};
var G__29407 = function (f,var_args){
var colls = null;
if (arguments.length > 1) {
var G__29408__i = 0, G__29408__a = new Array(arguments.length -  1);
while (G__29408__i < G__29408__a.length) {G__29408__a[G__29408__i] = arguments[G__29408__i + 1]; ++G__29408__i;}
  colls = new cljs.core.IndexedSeq(G__29408__a,0);
} 
return G__29407__delegate.call(this,f,colls);};
G__29407.cljs$lang$maxFixedArity = 1;
G__29407.cljs$lang$applyTo = (function (arglist__29409){
var f = cljs.core.first(arglist__29409);
var colls = cljs.core.rest(arglist__29409);
return G__29407__delegate(f,colls);
});
G__29407.cljs$core$IFn$_invoke$arity$variadic = G__29407__delegate;
return G__29407;
})()
;
mapcat = function(f,var_args){
var colls = var_args;
switch(arguments.length){
case 1:
return mapcat__1.call(this,f);
default:
var G__29410 = null;
if (arguments.length > 1) {
var G__29411__i = 0, G__29411__a = new Array(arguments.length -  1);
while (G__29411__i < G__29411__a.length) {G__29411__a[G__29411__i] = arguments[G__29411__i + 1]; ++G__29411__i;}
G__29410 = new cljs.core.IndexedSeq(G__29411__a,0);
}
return mapcat__2.cljs$core$IFn$_invoke$arity$variadic(f, G__29410);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
mapcat.cljs$lang$maxFixedArity = 1;
mapcat.cljs$lang$applyTo = mapcat__2.cljs$lang$applyTo;
mapcat.cljs$core$IFn$_invoke$arity$1 = mapcat__1;
mapcat.cljs$core$IFn$_invoke$arity$variadic = mapcat__2.cljs$core$IFn$_invoke$arity$variadic;
return mapcat;
})()
;
/**
* Returns a lazy sequence of the items in coll for which
* (pred item) returns true. pred must be free of side-effects.
* Returns a transducer when no collection is provided.
*/
cljs.core.filter = (function() {
var filter = null;
var filter__1 = (function (pred){
return (function (rf){
return (function() {
var G__29430 = null;
var G__29430__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__29430__1 = (function (result){
var G__29424 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__29424) : rf.call(null,G__29424));
});
var G__29430__2 = (function (result,input){
if(cljs.core.truth_((function (){var G__29425 = input;
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__29425) : pred.call(null,G__29425));
})())){
var G__29426 = result;
var G__29427 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__29426,G__29427) : rf.call(null,G__29426,G__29427));
} else {
return result;
}
});
G__29430 = function(result,input){
switch(arguments.length){
case 0:
return G__29430__0.call(this);
case 1:
return G__29430__1.call(this,result);
case 2:
return G__29430__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__29430.cljs$core$IFn$_invoke$arity$0 = G__29430__0;
G__29430.cljs$core$IFn$_invoke$arity$1 = G__29430__1;
G__29430.cljs$core$IFn$_invoke$arity$2 = G__29430__2;
return G__29430;
})()
});
});
var filter__2 = (function (pred,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(s)){
var c = cljs.core.chunk_first(s);
var size = cljs.core.count(c);
var b = cljs.core.chunk_buffer(size);
var n__25159__auto___29431 = size;
var i_29432 = (0);
while(true){
if((i_29432 < n__25159__auto___29431)){
if(cljs.core.truth_((function (){var G__29428 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c,i_29432);
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__29428) : pred.call(null,G__29428));
})())){
cljs.core.chunk_append(b,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c,i_29432));
} else {
}

var G__29433 = (i_29432 + (1));
i_29432 = G__29433;
continue;
} else {
}
break;
}

return cljs.core.chunk_cons(cljs.core.chunk(b),filter.cljs$core$IFn$_invoke$arity$2(pred,cljs.core.chunk_rest(s)));
} else {
var f = cljs.core.first(s);
var r = cljs.core.rest(s);
if(cljs.core.truth_((function (){var G__29429 = f;
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__29429) : pred.call(null,G__29429));
})())){
return cljs.core.cons(f,filter.cljs$core$IFn$_invoke$arity$2(pred,r));
} else {
return filter.cljs$core$IFn$_invoke$arity$2(pred,r);
}
}
} else {
return null;
}
}),null,null));
});
filter = function(pred,coll){
switch(arguments.length){
case 1:
return filter__1.call(this,pred);
case 2:
return filter__2.call(this,pred,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
filter.cljs$core$IFn$_invoke$arity$1 = filter__1;
filter.cljs$core$IFn$_invoke$arity$2 = filter__2;
return filter;
})()
;
/**
* Returns a lazy sequence of the items in coll for which
* (pred item) returns false. pred must be free of side-effects.
* Returns a transducer when no collection is provided.
*/
cljs.core.remove = (function() {
var remove = null;
var remove__1 = (function (pred){
return cljs.core.filter.cljs$core$IFn$_invoke$arity$1(cljs.core.complement(pred));
});
var remove__2 = (function (pred,coll){
return cljs.core.filter.cljs$core$IFn$_invoke$arity$2(cljs.core.complement(pred),coll);
});
remove = function(pred,coll){
switch(arguments.length){
case 1:
return remove__1.call(this,pred);
case 2:
return remove__2.call(this,pred,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
remove.cljs$core$IFn$_invoke$arity$1 = remove__1;
remove.cljs$core$IFn$_invoke$arity$2 = remove__2;
return remove;
})()
;
/**
* Returns a lazy sequence of the nodes in a tree, via a depth-first walk.
* branch? must be a fn of one arg that returns true if passed a node
* that can have children (but may not).  children must be a fn of one
* arg that returns a sequence of the children. Will only be called on
* nodes for which branch? returns true. Root is the root node of the
* tree.
*/
cljs.core.tree_seq = (function tree_seq(branch_QMARK_,children,root){
var walk = (function walk(node){
return (new cljs.core.LazySeq(null,(function (){
return cljs.core.cons(node,(cljs.core.truth_((function (){var G__29440 = node;
return (branch_QMARK_.cljs$core$IFn$_invoke$arity$1 ? branch_QMARK_.cljs$core$IFn$_invoke$arity$1(G__29440) : branch_QMARK_.call(null,G__29440));
})())?cljs.core.mapcat.cljs$core$IFn$_invoke$arity$variadic(walk,cljs.core.array_seq([(function (){var G__29441 = node;
return (children.cljs$core$IFn$_invoke$arity$1 ? children.cljs$core$IFn$_invoke$arity$1(G__29441) : children.call(null,G__29441));
})()], 0)):null));
}),null,null));
});
return walk(root);
});
/**
* Takes any nested combination of sequential things (lists, vectors,
* etc.) and returns their contents as a single, flat sequence.
* (flatten nil) returns nil.
*/
cljs.core.flatten = (function flatten(x){
return cljs.core.filter.cljs$core$IFn$_invoke$arity$2((function (p1__29442_SHARP_){
return !(cljs.core.sequential_QMARK_(p1__29442_SHARP_));
}),cljs.core.rest(cljs.core.tree_seq(cljs.core.sequential_QMARK_,cljs.core.seq,x)));
});
/**
* Returns a new coll consisting of to-coll with all of the items of
* from-coll conjoined. A transducer may be supplied.
*/
cljs.core.into = (function() {
var into = null;
var into__2 = (function (to,from){
if(!((to == null))){
if((function (){var G__29445 = to;
if(G__29445){
var bit__24946__auto__ = (G__29445.cljs$lang$protocol_mask$partition1$ & (4));
if((bit__24946__auto__) || (G__29445.cljs$core$IEditableCollection$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return cljs.core.with_meta(cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj_BANG_,cljs.core.transient$(to),from)),cljs.core.meta(to));
} else {
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj,to,from);
}
} else {
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.conj,cljs.core.List.EMPTY,from);
}
});
var into__3 = (function (to,xform,from){
if((function (){var G__29446 = to;
if(G__29446){
var bit__24946__auto__ = (G__29446.cljs$lang$protocol_mask$partition1$ & (4));
if((bit__24946__auto__) || (G__29446.cljs$core$IEditableCollection$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return cljs.core.with_meta(cljs.core.persistent_BANG_(cljs.core.transduce.cljs$core$IFn$_invoke$arity$4(xform,cljs.core.conj_BANG_,cljs.core.transient$(to),from)),cljs.core.meta(to));
} else {
return cljs.core.transduce.cljs$core$IFn$_invoke$arity$4(xform,cljs.core.conj,to,from);
}
});
into = function(to,xform,from){
switch(arguments.length){
case 2:
return into__2.call(this,to,xform);
case 3:
return into__3.call(this,to,xform,from);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
into.cljs$core$IFn$_invoke$arity$2 = into__2;
into.cljs$core$IFn$_invoke$arity$3 = into__3;
return into;
})()
;
/**
* Returns a vector consisting of the result of applying f to the
* set of first items of each coll, followed by applying f to the set
* of second items in each coll, until any one of the colls is
* exhausted.  Any remaining items in other colls are ignored. Function
* f should accept number-of-colls arguments.
* @param {...*} var_args
*/
cljs.core.mapv = (function() {
var mapv = null;
var mapv__2 = (function (f,coll){
return cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (v,o){
return cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$2(v,(function (){var G__29448 = o;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__29448) : f.call(null,G__29448));
})());
}),cljs.core.transient$(cljs.core.PersistentVector.EMPTY),coll));
});
var mapv__3 = (function (f,c1,c2){
return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentVector.EMPTY,cljs.core.map.cljs$core$IFn$_invoke$arity$3(f,c1,c2));
});
var mapv__4 = (function (f,c1,c2,c3){
return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentVector.EMPTY,cljs.core.map.cljs$core$IFn$_invoke$arity$4(f,c1,c2,c3));
});
var mapv__5 = (function() { 
var G__29449__delegate = function (f,c1,c2,c3,colls){
return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentVector.EMPTY,cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(cljs.core.map,f,c1,c2,c3,cljs.core.array_seq([colls], 0)));
};
var G__29449 = function (f,c1,c2,c3,var_args){
var colls = null;
if (arguments.length > 4) {
var G__29450__i = 0, G__29450__a = new Array(arguments.length -  4);
while (G__29450__i < G__29450__a.length) {G__29450__a[G__29450__i] = arguments[G__29450__i + 4]; ++G__29450__i;}
  colls = new cljs.core.IndexedSeq(G__29450__a,0);
} 
return G__29449__delegate.call(this,f,c1,c2,c3,colls);};
G__29449.cljs$lang$maxFixedArity = 4;
G__29449.cljs$lang$applyTo = (function (arglist__29451){
var f = cljs.core.first(arglist__29451);
arglist__29451 = cljs.core.next(arglist__29451);
var c1 = cljs.core.first(arglist__29451);
arglist__29451 = cljs.core.next(arglist__29451);
var c2 = cljs.core.first(arglist__29451);
arglist__29451 = cljs.core.next(arglist__29451);
var c3 = cljs.core.first(arglist__29451);
var colls = cljs.core.rest(arglist__29451);
return G__29449__delegate(f,c1,c2,c3,colls);
});
G__29449.cljs$core$IFn$_invoke$arity$variadic = G__29449__delegate;
return G__29449;
})()
;
mapv = function(f,c1,c2,c3,var_args){
var colls = var_args;
switch(arguments.length){
case 2:
return mapv__2.call(this,f,c1);
case 3:
return mapv__3.call(this,f,c1,c2);
case 4:
return mapv__4.call(this,f,c1,c2,c3);
default:
var G__29452 = null;
if (arguments.length > 4) {
var G__29453__i = 0, G__29453__a = new Array(arguments.length -  4);
while (G__29453__i < G__29453__a.length) {G__29453__a[G__29453__i] = arguments[G__29453__i + 4]; ++G__29453__i;}
G__29452 = new cljs.core.IndexedSeq(G__29453__a,0);
}
return mapv__5.cljs$core$IFn$_invoke$arity$variadic(f,c1,c2,c3, G__29452);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
mapv.cljs$lang$maxFixedArity = 4;
mapv.cljs$lang$applyTo = mapv__5.cljs$lang$applyTo;
mapv.cljs$core$IFn$_invoke$arity$2 = mapv__2;
mapv.cljs$core$IFn$_invoke$arity$3 = mapv__3;
mapv.cljs$core$IFn$_invoke$arity$4 = mapv__4;
mapv.cljs$core$IFn$_invoke$arity$variadic = mapv__5.cljs$core$IFn$_invoke$arity$variadic;
return mapv;
})()
;
/**
* Returns a vector of the items in coll for which
* (pred item) returns true. pred must be free of side-effects.
*/
cljs.core.filterv = (function filterv(pred,coll){
return cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (v,o){
if(cljs.core.truth_((function (){var G__29455 = o;
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__29455) : pred.call(null,G__29455));
})())){
return cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$2(v,o);
} else {
return v;
}
}),cljs.core.transient$(cljs.core.PersistentVector.EMPTY),coll));
});
/**
* Returns a lazy sequence of lists of n items each, at offsets step
* apart. If step is not supplied, defaults to n, i.e. the partitions
* do not overlap. If a pad collection is supplied, use its elements as
* necessary to complete last partition up to n items. In case there are
* not enough padding elements, return a partition with less than n items.
*/
cljs.core.partition = (function() {
var partition = null;
var partition__2 = (function (n,coll){
return partition.cljs$core$IFn$_invoke$arity$3(n,n,coll);
});
var partition__3 = (function (n,step,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
var p = cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,s);
if((n === cljs.core.count(p))){
return cljs.core.cons(p,partition.cljs$core$IFn$_invoke$arity$3(n,step,cljs.core.drop.cljs$core$IFn$_invoke$arity$2(step,s)));
} else {
return null;
}
} else {
return null;
}
}),null,null));
});
var partition__4 = (function (n,step,pad,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
var p = cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,s);
if((n === cljs.core.count(p))){
return cljs.core.cons(p,partition.cljs$core$IFn$_invoke$arity$4(n,step,pad,cljs.core.drop.cljs$core$IFn$_invoke$arity$2(step,s)));
} else {
return cljs.core._conj(cljs.core.List.EMPTY,cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,cljs.core.concat.cljs$core$IFn$_invoke$arity$2(p,pad)));
}
} else {
return null;
}
}),null,null));
});
partition = function(n,step,pad,coll){
switch(arguments.length){
case 2:
return partition__2.call(this,n,step);
case 3:
return partition__3.call(this,n,step,pad);
case 4:
return partition__4.call(this,n,step,pad,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
partition.cljs$core$IFn$_invoke$arity$2 = partition__2;
partition.cljs$core$IFn$_invoke$arity$3 = partition__3;
partition.cljs$core$IFn$_invoke$arity$4 = partition__4;
return partition;
})()
;
/**
* Returns the value in a nested associative structure,
* where ks is a sequence of keys. Returns nil if the key is not present,
* or the not-found value if supplied.
*/
cljs.core.get_in = (function() {
var get_in = null;
var get_in__2 = (function (m,ks){
return get_in.cljs$core$IFn$_invoke$arity$3(m,ks,null);
});
var get_in__3 = (function (m,ks,not_found){
var sentinel = cljs.core.lookup_sentinel;
var m__$1 = m;
var ks__$1 = cljs.core.seq(ks);
while(true){
if(ks__$1){
if(!((function (){var G__29470 = m__$1;
if(G__29470){
var bit__24953__auto__ = (G__29470.cljs$lang$protocol_mask$partition0$ & (256));
if((bit__24953__auto__) || (G__29470.cljs$core$ILookup$)){
return true;
} else {
if((!G__29470.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ILookup,G__29470);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ILookup,G__29470);
}
})())){
return not_found;
} else {
var m__$2 = cljs.core.get.cljs$core$IFn$_invoke$arity$3(m__$1,cljs.core.first(ks__$1),sentinel);
if((sentinel === m__$2)){
return not_found;
} else {
var G__29471 = sentinel;
var G__29472 = m__$2;
var G__29473 = cljs.core.next(ks__$1);
sentinel = G__29471;
m__$1 = G__29472;
ks__$1 = G__29473;
continue;
}
}
} else {
return m__$1;
}
break;
}
});
get_in = function(m,ks,not_found){
switch(arguments.length){
case 2:
return get_in__2.call(this,m,ks);
case 3:
return get_in__3.call(this,m,ks,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
get_in.cljs$core$IFn$_invoke$arity$2 = get_in__2;
get_in.cljs$core$IFn$_invoke$arity$3 = get_in__3;
return get_in;
})()
;
/**
* Associates a value in a nested associative structure, where ks is a
* sequence of keys and v is the new value and returns a new nested structure.
* If any levels do not exist, hash-maps will be created.
*/
cljs.core.assoc_in = (function assoc_in(m,p__29474,v){
var vec__29479 = p__29474;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__29479,(0),null);
var ks = cljs.core.nthnext(vec__29479,(1));
if(ks){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,assoc_in(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),ks,v));
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,v);
}
});
/**
* 'Updates' a value in a nested associative structure, where ks is a
* sequence of keys and f is a function that will take the old value
* and any supplied args and return the new value, and returns a new
* nested structure.  If any levels do not exist, hash-maps will be
* created.
* @param {...*} var_args
*/
cljs.core.update_in = (function() {
var update_in = null;
var update_in__3 = (function (m,p__29480,f){
var vec__29518 = p__29480;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__29518,(0),null);
var ks = cljs.core.nthnext(vec__29518,(1));
if(ks){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,update_in.cljs$core$IFn$_invoke$arity$3(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),ks,f));
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__29519 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__29519) : f.call(null,G__29519));
})());
}
});
var update_in__4 = (function (m,p__29481,f,a){
var vec__29520 = p__29481;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__29520,(0),null);
var ks = cljs.core.nthnext(vec__29520,(1));
if(ks){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,update_in.cljs$core$IFn$_invoke$arity$4(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),ks,f,a));
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__29521 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__29522 = a;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__29521,G__29522) : f.call(null,G__29521,G__29522));
})());
}
});
var update_in__5 = (function (m,p__29482,f,a,b){
var vec__29523 = p__29482;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__29523,(0),null);
var ks = cljs.core.nthnext(vec__29523,(1));
if(ks){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,update_in.cljs$core$IFn$_invoke$arity$5(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),ks,f,a,b));
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__29524 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__29525 = a;
var G__29526 = b;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__29524,G__29525,G__29526) : f.call(null,G__29524,G__29525,G__29526));
})());
}
});
var update_in__6 = (function (m,p__29483,f,a,b,c){
var vec__29527 = p__29483;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__29527,(0),null);
var ks = cljs.core.nthnext(vec__29527,(1));
if(ks){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,update_in.cljs$core$IFn$_invoke$arity$6(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),ks,f,a,b,c));
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__29528 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__29529 = a;
var G__29530 = b;
var G__29531 = c;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__29528,G__29529,G__29530,G__29531) : f.call(null,G__29528,G__29529,G__29530,G__29531));
})());
}
});
var update_in__7 = (function() { 
var G__29533__delegate = function (m,p__29484,f,a,b,c,args){
var vec__29532 = p__29484;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__29532,(0),null);
var ks = cljs.core.nthnext(vec__29532,(1));
if(ks){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(update_in,cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),ks,f,a,cljs.core.array_seq([b,c,args], 0)));
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f,cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),a,b,c,cljs.core.array_seq([args], 0)));
}
};
var G__29533 = function (m,p__29484,f,a,b,c,var_args){
var args = null;
if (arguments.length > 6) {
var G__29534__i = 0, G__29534__a = new Array(arguments.length -  6);
while (G__29534__i < G__29534__a.length) {G__29534__a[G__29534__i] = arguments[G__29534__i + 6]; ++G__29534__i;}
  args = new cljs.core.IndexedSeq(G__29534__a,0);
} 
return G__29533__delegate.call(this,m,p__29484,f,a,b,c,args);};
G__29533.cljs$lang$maxFixedArity = 6;
G__29533.cljs$lang$applyTo = (function (arglist__29535){
var m = cljs.core.first(arglist__29535);
arglist__29535 = cljs.core.next(arglist__29535);
var p__29484 = cljs.core.first(arglist__29535);
arglist__29535 = cljs.core.next(arglist__29535);
var f = cljs.core.first(arglist__29535);
arglist__29535 = cljs.core.next(arglist__29535);
var a = cljs.core.first(arglist__29535);
arglist__29535 = cljs.core.next(arglist__29535);
var b = cljs.core.first(arglist__29535);
arglist__29535 = cljs.core.next(arglist__29535);
var c = cljs.core.first(arglist__29535);
var args = cljs.core.rest(arglist__29535);
return G__29533__delegate(m,p__29484,f,a,b,c,args);
});
G__29533.cljs$core$IFn$_invoke$arity$variadic = G__29533__delegate;
return G__29533;
})()
;
update_in = function(m,p__29484,f,a,b,c,var_args){
var args = var_args;
switch(arguments.length){
case 3:
return update_in__3.call(this,m,p__29484,f);
case 4:
return update_in__4.call(this,m,p__29484,f,a);
case 5:
return update_in__5.call(this,m,p__29484,f,a,b);
case 6:
return update_in__6.call(this,m,p__29484,f,a,b,c);
default:
var G__29536 = null;
if (arguments.length > 6) {
var G__29537__i = 0, G__29537__a = new Array(arguments.length -  6);
while (G__29537__i < G__29537__a.length) {G__29537__a[G__29537__i] = arguments[G__29537__i + 6]; ++G__29537__i;}
G__29536 = new cljs.core.IndexedSeq(G__29537__a,0);
}
return update_in__7.cljs$core$IFn$_invoke$arity$variadic(m,p__29484,f,a,b,c, G__29536);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
update_in.cljs$lang$maxFixedArity = 6;
update_in.cljs$lang$applyTo = update_in__7.cljs$lang$applyTo;
update_in.cljs$core$IFn$_invoke$arity$3 = update_in__3;
update_in.cljs$core$IFn$_invoke$arity$4 = update_in__4;
update_in.cljs$core$IFn$_invoke$arity$5 = update_in__5;
update_in.cljs$core$IFn$_invoke$arity$6 = update_in__6;
update_in.cljs$core$IFn$_invoke$arity$variadic = update_in__7.cljs$core$IFn$_invoke$arity$variadic;
return update_in;
})()
;
/**
* 'Updates' a value in an associative structure, where k is a
* key and f is a function that will take the old value
* and any supplied args and return the new value, and returns a new
* structure.  If the key does not exist, nil is passed as the old value.
* @param {...*} var_args
*/
cljs.core.update = (function() {
var update = null;
var update__3 = (function (m,k,f){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__29548 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__29548) : f.call(null,G__29548));
})());
});
var update__4 = (function (m,k,f,x){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__29549 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__29550 = x;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__29549,G__29550) : f.call(null,G__29549,G__29550));
})());
});
var update__5 = (function (m,k,f,x,y){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__29551 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__29552 = x;
var G__29553 = y;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__29551,G__29552,G__29553) : f.call(null,G__29551,G__29552,G__29553));
})());
});
var update__6 = (function (m,k,f,x,y,z){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__29554 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__29555 = x;
var G__29556 = y;
var G__29557 = z;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__29554,G__29555,G__29556,G__29557) : f.call(null,G__29554,G__29555,G__29556,G__29557));
})());
});
var update__7 = (function() { 
var G__29558__delegate = function (m,k,f,x,y,z,more){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f,cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),x,y,z,cljs.core.array_seq([more], 0)));
};
var G__29558 = function (m,k,f,x,y,z,var_args){
var more = null;
if (arguments.length > 6) {
var G__29559__i = 0, G__29559__a = new Array(arguments.length -  6);
while (G__29559__i < G__29559__a.length) {G__29559__a[G__29559__i] = arguments[G__29559__i + 6]; ++G__29559__i;}
  more = new cljs.core.IndexedSeq(G__29559__a,0);
} 
return G__29558__delegate.call(this,m,k,f,x,y,z,more);};
G__29558.cljs$lang$maxFixedArity = 6;
G__29558.cljs$lang$applyTo = (function (arglist__29560){
var m = cljs.core.first(arglist__29560);
arglist__29560 = cljs.core.next(arglist__29560);
var k = cljs.core.first(arglist__29560);
arglist__29560 = cljs.core.next(arglist__29560);
var f = cljs.core.first(arglist__29560);
arglist__29560 = cljs.core.next(arglist__29560);
var x = cljs.core.first(arglist__29560);
arglist__29560 = cljs.core.next(arglist__29560);
var y = cljs.core.first(arglist__29560);
arglist__29560 = cljs.core.next(arglist__29560);
var z = cljs.core.first(arglist__29560);
var more = cljs.core.rest(arglist__29560);
return G__29558__delegate(m,k,f,x,y,z,more);
});
G__29558.cljs$core$IFn$_invoke$arity$variadic = G__29558__delegate;
return G__29558;
})()
;
update = function(m,k,f,x,y,z,var_args){
var more = var_args;
switch(arguments.length){
case 3:
return update__3.call(this,m,k,f);
case 4:
return update__4.call(this,m,k,f,x);
case 5:
return update__5.call(this,m,k,f,x,y);
case 6:
return update__6.call(this,m,k,f,x,y,z);
default:
var G__29561 = null;
if (arguments.length > 6) {
var G__29562__i = 0, G__29562__a = new Array(arguments.length -  6);
while (G__29562__i < G__29562__a.length) {G__29562__a[G__29562__i] = arguments[G__29562__i + 6]; ++G__29562__i;}
G__29561 = new cljs.core.IndexedSeq(G__29562__a,0);
}
return update__7.cljs$core$IFn$_invoke$arity$variadic(m,k,f,x,y,z, G__29561);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
update.cljs$lang$maxFixedArity = 6;
update.cljs$lang$applyTo = update__7.cljs$lang$applyTo;
update.cljs$core$IFn$_invoke$arity$3 = update__3;
update.cljs$core$IFn$_invoke$arity$4 = update__4;
update.cljs$core$IFn$_invoke$arity$5 = update__5;
update.cljs$core$IFn$_invoke$arity$6 = update__6;
update.cljs$core$IFn$_invoke$arity$variadic = update__7.cljs$core$IFn$_invoke$arity$variadic;
return update;
})()
;

/**
* @constructor
*/
cljs.core.VectorNode = (function (edit,arr){
this.edit = edit;
this.arr = arr;
})

cljs.core.VectorNode.cljs$lang$type = true;

cljs.core.VectorNode.cljs$lang$ctorStr = "cljs.core/VectorNode";

cljs.core.VectorNode.cljs$lang$ctorPrWriter = (function (this__24859__auto__,writer__24860__auto__,opt__24861__auto__){
return cljs.core._write(writer__24860__auto__,"cljs.core/VectorNode");
});

cljs.core.__GT_VectorNode = (function __GT_VectorNode(edit,arr){
return (new cljs.core.VectorNode(edit,arr));
});

cljs.core.pv_fresh_node = (function pv_fresh_node(edit){
return (new cljs.core.VectorNode(edit,[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null]));
});
cljs.core.pv_aget = (function pv_aget(node,idx){
return (node.arr[idx]);
});
cljs.core.pv_aset = (function pv_aset(node,idx,val){
return (node.arr[idx] = val);
});
cljs.core.pv_clone_node = (function pv_clone_node(node){
return (new cljs.core.VectorNode(node.edit,cljs.core.aclone(node.arr)));
});
cljs.core.tail_off = (function tail_off(pv){
var cnt = pv.cnt;
if((cnt < (32))){
return (0);
} else {
return (((cnt - (1)) >>> (5)) << (5));
}
});
cljs.core.new_path = (function new_path(edit,level,node){
var ll = level;
var ret = node;
while(true){
if((ll === (0))){
return ret;
} else {
var embed = ret;
var r = cljs.core.pv_fresh_node(edit);
var _ = cljs.core.pv_aset(r,(0),embed);
var G__29563 = (ll - (5));
var G__29564 = r;
ll = G__29563;
ret = G__29564;
continue;
}
break;
}
});
cljs.core.push_tail = (function push_tail(pv,level,parent,tailnode){
var ret = cljs.core.pv_clone_node(parent);
var subidx = (((pv.cnt - (1)) >>> level) & (31));
if(((5) === level)){
cljs.core.pv_aset(ret,subidx,tailnode);

return ret;
} else {
var child = cljs.core.pv_aget(parent,subidx);
if(!((child == null))){
var node_to_insert = push_tail(pv,(level - (5)),child,tailnode);
cljs.core.pv_aset(ret,subidx,node_to_insert);

return ret;
} else {
var node_to_insert = cljs.core.new_path(null,(level - (5)),tailnode);
cljs.core.pv_aset(ret,subidx,node_to_insert);

return ret;
}
}
});
cljs.core.vector_index_out_of_bounds = (function vector_index_out_of_bounds(i,cnt){
throw (new Error([cljs.core.str("No item "),cljs.core.str(i),cljs.core.str(" in vector of length "),cljs.core.str(cnt)].join('')));
});
cljs.core.first_array_for_longvec = (function first_array_for_longvec(pv){
var node = pv.root;
var level = pv.shift;
while(true){
if((level > (0))){
var G__29569 = cljs.core.pv_aget(node,(0));
var G__29570 = (level - (5));
node = G__29569;
level = G__29570;
continue;
} else {
return node.arr;
}
break;
}
});
cljs.core.unchecked_array_for = (function unchecked_array_for(pv,i){
if((i >= cljs.core.tail_off(pv))){
return pv.tail;
} else {
var node = pv.root;
var level = pv.shift;
while(true){
if((level > (0))){
var G__29571 = cljs.core.pv_aget(node,((i >>> level) & (31)));
var G__29572 = (level - (5));
node = G__29571;
level = G__29572;
continue;
} else {
return node.arr;
}
break;
}
}
});
cljs.core.array_for = (function array_for(pv,i){
if((((0) <= i)) && ((i < pv.cnt))){
return cljs.core.unchecked_array_for(pv,i);
} else {
return cljs.core.vector_index_out_of_bounds(i,pv.cnt);
}
});
cljs.core.do_assoc = (function do_assoc(pv,level,node,i,val){
var ret = cljs.core.pv_clone_node(node);
if((level === (0))){
cljs.core.pv_aset(ret,(i & (31)),val);

return ret;
} else {
var subidx = ((i >>> level) & (31));
cljs.core.pv_aset(ret,subidx,do_assoc(pv,(level - (5)),cljs.core.pv_aget(node,subidx),i,val));

return ret;
}
});
cljs.core.pop_tail = (function pop_tail(pv,level,node){
var subidx = (((pv.cnt - (2)) >>> level) & (31));
if((level > (5))){
var new_child = pop_tail(pv,(level - (5)),cljs.core.pv_aget(node,subidx));
if(((new_child == null)) && ((subidx === (0)))){
return null;
} else {
var ret = cljs.core.pv_clone_node(node);
cljs.core.pv_aset(ret,subidx,new_child);

return ret;
}
} else {
if((subidx === (0))){
return null;
} else {
var ret = cljs.core.pv_clone_node(node);
cljs.core.pv_aset(ret,subidx,null);

return ret;

}
}
});

/**
* @constructor
*/
cljs.core.RangedIterator = (function (i,base,arr,v,start,end){
this.i = i;
this.base = base;
this.arr = arr;
this.v = v;
this.start = start;
this.end = end;
})
cljs.core.RangedIterator.prototype.hasNext = (function (){
var self__ = this;
var this$ = this;
return (self__.i < self__.end);
});

cljs.core.RangedIterator.prototype.next = (function (){
var self__ = this;
var this$ = this;
if(((self__.i - self__.base) === (32))){
self__.arr = cljs.core.unchecked_array_for(self__.v,self__.i);

self__.base = (self__.base + (32));
} else {
}

var ret = (self__.arr[(self__.i & (31))]);
self__.i = (self__.i + (1));

return ret;
});

cljs.core.RangedIterator.cljs$lang$type = true;

cljs.core.RangedIterator.cljs$lang$ctorStr = "cljs.core/RangedIterator";

cljs.core.RangedIterator.cljs$lang$ctorPrWriter = (function (this__24859__auto__,writer__24860__auto__,opt__24861__auto__){
return cljs.core._write(writer__24860__auto__,"cljs.core/RangedIterator");
});

cljs.core.__GT_RangedIterator = (function __GT_RangedIterator(i,base,arr,v,start,end){
return (new cljs.core.RangedIterator(i,base,arr,v,start,end));
});

cljs.core.ranged_iterator = (function ranged_iterator(v,start,end){
var i = start;
return (new cljs.core.RangedIterator(i,(i - (i % (32))),(((start < cljs.core.count(v)))?cljs.core.unchecked_array_for(v,i):null),v,start,end));
});







/**
* @constructor
*/
cljs.core.PersistentVector = (function (meta,cnt,shift,root,tail,__hash){
this.meta = meta;
this.cnt = cnt;
this.shift = shift;
this.root = root;
this.tail = tail;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 167668511;
this.cljs$lang$protocol_mask$partition1$ = 8196;
})
cljs.core.PersistentVector.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentVector.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentVector.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.PersistentVector.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
if(typeof k === 'number'){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(coll__$1,k,not_found);
} else {
return not_found;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = (function (v,f,init){
var self__ = this;
var v__$1 = this;
var i = (0);
var init__$1 = init;
while(true){
if((i < self__.cnt)){
var arr = cljs.core.unchecked_array_for(v__$1,i);
var len = arr.length;
var init__$2 = (function (){var j = (0);
var init__$2 = init__$1;
while(true){
if((j < len)){
var init__$3 = (function (){var G__29582 = init__$2;
var G__29583 = (j + i);
var G__29584 = (arr[j]);
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__29582,G__29583,G__29584) : f.call(null,G__29582,G__29583,G__29584));
})();
if(cljs.core.reduced_QMARK_(init__$3)){
return init__$3;
} else {
var G__29595 = (j + (1));
var G__29596 = init__$3;
j = G__29595;
init__$2 = G__29596;
continue;
}
} else {
return init__$2;
}
break;
}
})();
if(cljs.core.reduced_QMARK_(init__$2)){
var G__29585 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__29585) : cljs.core.deref.call(null,G__29585));
} else {
var G__29597 = (i + len);
var G__29598 = init__$2;
i = G__29597;
init__$1 = G__29598;
continue;
}
} else {
return init__$1;
}
break;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (coll,n){
var self__ = this;
var coll__$1 = this;
return (cljs.core.array_for(coll__$1,n)[(n & (31))]);
});

cljs.core.PersistentVector.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (coll,n,not_found){
var self__ = this;
var coll__$1 = this;
if((((0) <= n)) && ((n < self__.cnt))){
return (cljs.core.unchecked_array_for(coll__$1,n)[(n & (31))]);
} else {
return not_found;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IVector$_assoc_n$arity$3 = (function (coll,n,val){
var self__ = this;
var coll__$1 = this;
if((((0) <= n)) && ((n < self__.cnt))){
if((cljs.core.tail_off(coll__$1) <= n)){
var new_tail = cljs.core.aclone(self__.tail);
(new_tail[(n & (31))] = val);

return (new cljs.core.PersistentVector(self__.meta,self__.cnt,self__.shift,self__.root,new_tail,null));
} else {
return (new cljs.core.PersistentVector(self__.meta,self__.cnt,self__.shift,cljs.core.do_assoc(coll__$1,self__.shift,self__.root,n,val),self__.tail,null));
}
} else {
if((n === self__.cnt)){
return cljs.core._conj(coll__$1,val);
} else {
throw (new Error([cljs.core.str("Index "),cljs.core.str(n),cljs.core.str(" out of bounds  [0,"),cljs.core.str(self__.cnt),cljs.core.str("]")].join('')));

}
}
});

cljs.core.PersistentVector.prototype.cljs$core$IIterable$ = true;

cljs.core.PersistentVector.prototype.cljs$core$IIterable$_iterator$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return cljs.core.ranged_iterator(this$__$1,(0),self__.cnt);
});

cljs.core.PersistentVector.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentVector.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.PersistentVector(self__.meta,self__.cnt,self__.shift,self__.root,self__.tail,self__.__hash));
});

cljs.core.PersistentVector.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.cnt;
});

cljs.core.PersistentVector.prototype.cljs$core$IMapEntry$_key$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll__$1,(0));
});

cljs.core.PersistentVector.prototype.cljs$core$IMapEntry$_val$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll__$1,(1));
});

cljs.core.PersistentVector.prototype.cljs$core$IStack$_peek$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll__$1,(self__.cnt - (1)));
} else {
return null;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IStack$_pop$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt === (0))){
throw (new Error("Can't pop empty vector"));
} else {
if(((1) === self__.cnt)){
return cljs.core._with_meta(cljs.core.PersistentVector.EMPTY,self__.meta);
} else {
if(((1) < (self__.cnt - cljs.core.tail_off(coll__$1)))){
return (new cljs.core.PersistentVector(self__.meta,(self__.cnt - (1)),self__.shift,self__.root,self__.tail.slice((0),(-1)),null));
} else {
var new_tail = cljs.core.unchecked_array_for(coll__$1,(self__.cnt - (2)));
var nr = cljs.core.pop_tail(coll__$1,self__.shift,self__.root);
var new_root = (((nr == null))?cljs.core.PersistentVector.EMPTY_NODE:nr);
var cnt_1 = (self__.cnt - (1));
if((((5) < self__.shift)) && ((cljs.core.pv_aget(new_root,(1)) == null))){
return (new cljs.core.PersistentVector(self__.meta,cnt_1,(self__.shift - (5)),cljs.core.pv_aget(new_root,(0)),new_tail,null));
} else {
return (new cljs.core.PersistentVector(self__.meta,cnt_1,self__.shift,new_root,new_tail,null));
}

}
}
}
});

cljs.core.PersistentVector.prototype.cljs$core$IReversible$_rseq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
return (new cljs.core.RSeq(coll__$1,(self__.cnt - (1)),null));
} else {
return null;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__24693__auto__ = self__.__hash;
if(!((h__24693__auto__ == null))){
return h__24693__auto__;
} else {
var h__24693__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__24693__auto____$1;

return h__24693__auto____$1;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
if((other instanceof cljs.core.PersistentVector)){
if((self__.cnt === cljs.core.count(other))){
var me_iter = cljs.core._iterator(coll__$1);
var you_iter = cljs.core._iterator(other);
while(true){
if(cljs.core.truth_(me_iter.hasNext())){
var x = me_iter.next();
var y = you_iter.next();
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x,y)){
continue;
} else {
return false;
}
} else {
return true;
}
break;
}
} else {
return false;
}
} else {
return cljs.core.equiv_sequential(coll__$1,other);
}
});

cljs.core.PersistentVector.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.TransientVector(self__.cnt,self__.shift,(function (){var G__29586 = self__.root;
return (cljs.core.tv_editable_root.cljs$core$IFn$_invoke$arity$1 ? cljs.core.tv_editable_root.cljs$core$IFn$_invoke$arity$1(G__29586) : cljs.core.tv_editable_root.call(null,G__29586));
})(),(function (){var G__29587 = self__.tail;
return (cljs.core.tv_editable_tail.cljs$core$IFn$_invoke$arity$1 ? cljs.core.tv_editable_tail.cljs$core$IFn$_invoke$arity$1(G__29587) : cljs.core.tv_editable_tail.call(null,G__29587));
})()));
});

cljs.core.PersistentVector.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.PersistentVector.EMPTY,self__.meta);
});

cljs.core.PersistentVector.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (v,f){
var self__ = this;
var v__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(v__$1,f);
});

cljs.core.PersistentVector.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (v,f,init){
var self__ = this;
var v__$1 = this;
var i = (0);
var init__$1 = init;
while(true){
if((i < self__.cnt)){
var arr = cljs.core.unchecked_array_for(v__$1,i);
var len = arr.length;
var init__$2 = (function (){var j = (0);
var init__$2 = init__$1;
while(true){
if((j < len)){
var init__$3 = (function (){var G__29588 = init__$2;
var G__29589 = (arr[j]);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__29588,G__29589) : f.call(null,G__29588,G__29589));
})();
if(cljs.core.reduced_QMARK_(init__$3)){
return init__$3;
} else {
var G__29599 = (j + (1));
var G__29600 = init__$3;
j = G__29599;
init__$2 = G__29600;
continue;
}
} else {
return init__$2;
}
break;
}
})();
if(cljs.core.reduced_QMARK_(init__$2)){
var G__29590 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__29590) : cljs.core.deref.call(null,G__29590));
} else {
var G__29601 = (i + len);
var G__29602 = init__$2;
i = G__29601;
init__$1 = G__29602;
continue;
}
} else {
return init__$1;
}
break;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (coll,k,v){
var self__ = this;
var coll__$1 = this;
if(typeof k === 'number'){
return cljs.core._assoc_n(coll__$1,k,v);
} else {
throw (new Error("Vector's key for assoc must be a number."));
}
});

cljs.core.PersistentVector.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt === (0))){
return null;
} else {
if((self__.cnt <= (32))){
return (new cljs.core.IndexedSeq(self__.tail,(0)));
} else {
var G__29591 = coll__$1;
var G__29592 = cljs.core.first_array_for_longvec(coll__$1);
var G__29593 = (0);
var G__29594 = (0);
return (cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__29591,G__29592,G__29593,G__29594) : cljs.core.chunked_seq.call(null,G__29591,G__29592,G__29593,G__29594));

}
}
});

cljs.core.PersistentVector.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentVector(meta__$1,self__.cnt,self__.shift,self__.root,self__.tail,self__.__hash));
});

cljs.core.PersistentVector.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
if(((self__.cnt - cljs.core.tail_off(coll__$1)) < (32))){
var len = self__.tail.length;
var new_tail = (new Array((len + (1))));
var n__25159__auto___29603 = len;
var i_29604 = (0);
while(true){
if((i_29604 < n__25159__auto___29603)){
(new_tail[i_29604] = (self__.tail[i_29604]));

var G__29605 = (i_29604 + (1));
i_29604 = G__29605;
continue;
} else {
}
break;
}

(new_tail[len] = o);

return (new cljs.core.PersistentVector(self__.meta,(self__.cnt + (1)),self__.shift,self__.root,new_tail,null));
} else {
var root_overflow_QMARK_ = ((self__.cnt >>> (5)) > ((1) << self__.shift));
var new_shift = ((root_overflow_QMARK_)?(self__.shift + (5)):self__.shift);
var new_root = ((root_overflow_QMARK_)?(function (){var n_r = cljs.core.pv_fresh_node(null);
cljs.core.pv_aset(n_r,(0),self__.root);

cljs.core.pv_aset(n_r,(1),cljs.core.new_path(null,self__.shift,(new cljs.core.VectorNode(null,self__.tail))));

return n_r;
})():cljs.core.push_tail(coll__$1,self__.shift,self__.root,(new cljs.core.VectorNode(null,self__.tail))));
return (new cljs.core.PersistentVector(self__.meta,(self__.cnt + (1)),new_shift,new_root,[o],null));
}
});

cljs.core.PersistentVector.prototype.call = (function() {
var G__29606 = null;
var G__29606__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$IIndexed$_nth$arity$2(null,k);
});
var G__29606__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$IIndexed$_nth$arity$3(null,k,not_found);
});
G__29606 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__29606__2.call(this,self__,k);
case 3:
return G__29606__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__29606.cljs$core$IFn$_invoke$arity$2 = G__29606__2;
G__29606.cljs$core$IFn$_invoke$arity$3 = G__29606__3;
return G__29606;
})()
;

cljs.core.PersistentVector.prototype.apply = (function (self__,args29581){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args29581)));
});

cljs.core.PersistentVector.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$IIndexed$_nth$arity$2(null,k);
});

cljs.core.PersistentVector.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$IIndexed$_nth$arity$3(null,k,not_found);
});

cljs.core.PersistentVector.cljs$lang$type = true;

cljs.core.PersistentVector.cljs$lang$ctorStr = "cljs.core/PersistentVector";

cljs.core.PersistentVector.cljs$lang$ctorPrWriter = (function (this__24859__auto__,writer__24860__auto__,opt__24861__auto__){
return cljs.core._write(writer__24860__auto__,"cljs.core/PersistentVector");
});

cljs.core.__GT_PersistentVector = (function __GT_PersistentVector(meta,cnt,shift,root,tail,__hash){
return (new cljs.core.PersistentVector(meta,cnt,shift,root,tail,__hash));
});

cljs.core.PersistentVector.EMPTY_NODE = (new cljs.core.VectorNode(null,[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null]));
cljs.core.PersistentVector.EMPTY = (new cljs.core.PersistentVector(null,(0),(5),cljs.core.PersistentVector.EMPTY_NODE,[],(0)));
cljs.core.PersistentVector.fromArray = (function (xs,no_clone){
var l = xs.length;
var xs__$1 = ((no_clone)?xs:cljs.core.aclone(xs));
if((l < (32))){
return (new cljs.core.PersistentVector(null,l,(5),cljs.core.PersistentVector.EMPTY_NODE,xs__$1,null));
} else {
var node = xs__$1.slice((0),(32));
var v = (new cljs.core.PersistentVector(null,(32),(5),cljs.core.PersistentVector.EMPTY_NODE,node,null));
var i = (32);
var out = v.cljs$core$IEditableCollection$_as_transient$arity$1(null);
while(true){
if((i < l)){
var G__29607 = (i + (1));
var G__29608 = cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$2(out,(xs__$1[i]));
i = G__29607;
out = G__29608;
continue;
} else {
return cljs.core.persistent_BANG_(out);
}
break;
}
}
});
(cljs.core.PersistentVector.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__25250__auto__ = this;
return cljs.core.es6_iterator(this__25250__auto__);
}));
cljs.core.vec = (function vec(coll){
return cljs.core._persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj_BANG_,cljs.core._as_transient(cljs.core.PersistentVector.EMPTY),coll));
});
/**
* @param {...*} var_args
*/
cljs.core.vector = (function() { 
var vector__delegate = function (args){
if(((args instanceof cljs.core.IndexedSeq)) && ((args.i === (0)))){
return cljs.core.PersistentVector.fromArray(args.arr,true);
} else {
return cljs.core.vec(args);
}
};
var vector = function (var_args){
var args = null;
if (arguments.length > 0) {
var G__29609__i = 0, G__29609__a = new Array(arguments.length -  0);
while (G__29609__i < G__29609__a.length) {G__29609__a[G__29609__i] = arguments[G__29609__i + 0]; ++G__29609__i;}
  args = new cljs.core.IndexedSeq(G__29609__a,0);
} 
return vector__delegate.call(this,args);};
vector.cljs$lang$maxFixedArity = 0;
vector.cljs$lang$applyTo = (function (arglist__29610){
var args = cljs.core.seq(arglist__29610);
return vector__delegate(args);
});
vector.cljs$core$IFn$_invoke$arity$variadic = vector__delegate;
return vector;
})()
;

/**
* @constructor
*/
cljs.core.ChunkedSeq = (function (vec,node,i,off,meta,__hash){
this.vec = vec;
this.node = node;
this.i = i;
this.off = off;
this.meta = meta;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 32375020;
this.cljs$lang$protocol_mask$partition1$ = 1536;
})
cljs.core.ChunkedSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.ChunkedSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.ChunkedSeq.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if(((self__.off + (1)) < self__.node.length)){
var s = (function (){var G__29611 = self__.vec;
var G__29612 = self__.node;
var G__29613 = self__.i;
var G__29614 = (self__.off + (1));
return (cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__29611,G__29612,G__29613,G__29614) : cljs.core.chunked_seq.call(null,G__29611,G__29612,G__29613,G__29614));
})();
if((s == null)){
return null;
} else {
return s;
}
} else {
return cljs.core._chunked_next(coll__$1);
}
});

cljs.core.ChunkedSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__24693__auto__ = self__.__hash;
if(!((h__24693__auto__ == null))){
return h__24693__auto__;
} else {
var h__24693__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__24693__auto____$1;

return h__24693__auto____$1;
}
});

cljs.core.ChunkedSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.PersistentVector.EMPTY,self__.meta);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2((function (){var G__29615 = self__.vec;
var G__29616 = (self__.i + self__.off);
var G__29617 = cljs.core.count(self__.vec);
return (cljs.core.subvec.cljs$core$IFn$_invoke$arity$3 ? cljs.core.subvec.cljs$core$IFn$_invoke$arity$3(G__29615,G__29616,G__29617) : cljs.core.subvec.call(null,G__29615,G__29616,G__29617));
})(),f);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3((function (){var G__29618 = self__.vec;
var G__29619 = (self__.i + self__.off);
var G__29620 = cljs.core.count(self__.vec);
return (cljs.core.subvec.cljs$core$IFn$_invoke$arity$3 ? cljs.core.subvec.cljs$core$IFn$_invoke$arity$3(G__29618,G__29619,G__29620) : cljs.core.subvec.call(null,G__29618,G__29619,G__29620));
})(),f,start);
});

cljs.core.ChunkedSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (self__.node[self__.off]);
});

cljs.core.ChunkedSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if(((self__.off + (1)) < self__.node.length)){
var s = (function (){var G__29621 = self__.vec;
var G__29622 = self__.node;
var G__29623 = self__.i;
var G__29624 = (self__.off + (1));
return (cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__29621,G__29622,G__29623,G__29624) : cljs.core.chunked_seq.call(null,G__29621,G__29622,G__29623,G__29624));
})();
if((s == null)){
return cljs.core.List.EMPTY;
} else {
return s;
}
} else {
return cljs.core._chunked_rest(coll__$1);
}
});

cljs.core.ChunkedSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedSeq$_chunked_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.array_chunk.cljs$core$IFn$_invoke$arity$2(self__.node,self__.off);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedSeq$_chunked_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var end = (self__.i + self__.node.length);
if((end < cljs.core._count(self__.vec))){
var G__29625 = self__.vec;
var G__29626 = cljs.core.unchecked_array_for(self__.vec,end);
var G__29627 = end;
var G__29628 = (0);
return (cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__29625,G__29626,G__29627,G__29628) : cljs.core.chunked_seq.call(null,G__29625,G__29626,G__29627,G__29628));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.ChunkedSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,m){
var self__ = this;
var coll__$1 = this;
var G__29629 = self__.vec;
var G__29630 = self__.node;
var G__29631 = self__.i;
var G__29632 = self__.off;
var G__29633 = m;
return (cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$5 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$5(G__29629,G__29630,G__29631,G__29632,G__29633) : cljs.core.chunked_seq.call(null,G__29629,G__29630,G__29631,G__29632,G__29633));
});

cljs.core.ChunkedSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedNext$_chunked_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var end = (self__.i + self__.node.length);
if((end < cljs.core._count(self__.vec))){
var G__29634 = self__.vec;
var G__29635 = cljs.core.unchecked_array_for(self__.vec,end);
var G__29636 = end;
var G__29637 = (0);
return (cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__29634,G__29635,G__29636,G__29637) : cljs.core.chunked_seq.call(null,G__29634,G__29635,G__29636,G__29637));
} else {
return null;
}
});

cljs.core.ChunkedSeq.cljs$lang$type = true;

cljs.core.ChunkedSeq.cljs$lang$ctorStr = "cljs.core/ChunkedSeq";

cljs.core.ChunkedSeq.cljs$lang$ctorPrWriter = (function (this__24859__auto__,writer__24860__auto__,opt__24861__auto__){
return cljs.core._write(writer__24860__auto__,"cljs.core/ChunkedSeq");
});

cljs.core.__GT_ChunkedSeq = (function __GT_ChunkedSeq(vec,node,i,off,meta,__hash){
return (new cljs.core.ChunkedSeq(vec,node,i,off,meta,__hash));
});

(cljs.core.ChunkedSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__25250__auto__ = this;
return cljs.core.es6_iterator(this__25250__auto__);
}));
cljs.core.chunked_seq = (function() {
var chunked_seq = null;
var chunked_seq__3 = (function (vec,i,off){
return (new cljs.core.ChunkedSeq(vec,cljs.core.array_for(vec,i),i,off,null,null));
});
var chunked_seq__4 = (function (vec,node,i,off){
return (new cljs.core.ChunkedSeq(vec,node,i,off,null,null));
});
var chunked_seq__5 = (function (vec,node,i,off,meta){
return (new cljs.core.ChunkedSeq(vec,node,i,off,meta,null));
});
chunked_seq = function(vec,node,i,off,meta){
switch(arguments.length){
case 3:
return chunked_seq__3.call(this,vec,node,i);
case 4:
return chunked_seq__4.call(this,vec,node,i,off);
case 5:
return chunked_seq__5.call(this,vec,node,i,off,meta);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
chunked_seq.cljs$core$IFn$_invoke$arity$3 = chunked_seq__3;
chunked_seq.cljs$core$IFn$_invoke$arity$4 = chunked_seq__4;
chunked_seq.cljs$core$IFn$_invoke$arity$5 = chunked_seq__5;
return chunked_seq;
})()
;

/**
* @constructor
*/
cljs.core.Subvec = (function (meta,v,start,end,__hash){
this.meta = meta;
this.v = v;
this.start = start;
this.end = end;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 166617887;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.Subvec.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.Subvec.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.Subvec.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.Subvec.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
if(typeof k === 'number'){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(coll__$1,k,not_found);
} else {
return not_found;
}
});

cljs.core.Subvec.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (coll,n){
var self__ = this;
var coll__$1 = this;
if(((n < (0))) || ((self__.end <= (self__.start + n)))){
return cljs.core.vector_index_out_of_bounds(n,(self__.end - self__.start));
} else {
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.v,(self__.start + n));
}
});

cljs.core.Subvec.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (coll,n,not_found){
var self__ = this;
var coll__$1 = this;
if(((n < (0))) || ((self__.end <= (self__.start + n)))){
return not_found;
} else {
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(self__.v,(self__.start + n),not_found);
}
});

cljs.core.Subvec.prototype.cljs$core$IVector$_assoc_n$arity$3 = (function (coll,n,val){
var self__ = this;
var coll__$1 = this;
var v_pos = (self__.start + n);
var G__29639 = self__.meta;
var G__29640 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.v,v_pos,val);
var G__29641 = self__.start;
var G__29642 = (function (){var x__24589__auto__ = self__.end;
var y__24590__auto__ = (v_pos + (1));
return ((x__24589__auto__ > y__24590__auto__) ? x__24589__auto__ : y__24590__auto__);
})();
var G__29643 = null;
return (cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5 ? cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5(G__29639,G__29640,G__29641,G__29642,G__29643) : cljs.core.build_subvec.call(null,G__29639,G__29640,G__29641,G__29642,G__29643));
});

cljs.core.Subvec.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.Subvec.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.Subvec(self__.meta,self__.v,self__.start,self__.end,self__.__hash));
});

cljs.core.Subvec.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (self__.end - self__.start);
});

cljs.core.Subvec.prototype.cljs$core$IStack$_peek$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.v,(self__.end - (1)));
});

cljs.core.Subvec.prototype.cljs$core$IStack$_pop$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.start === self__.end)){
throw (new Error("Can't pop empty vector"));
} else {
var G__29644 = self__.meta;
var G__29645 = self__.v;
var G__29646 = self__.start;
var G__29647 = (self__.end - (1));
var G__29648 = null;
return (cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5 ? cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5(G__29644,G__29645,G__29646,G__29647,G__29648) : cljs.core.build_subvec.call(null,G__29644,G__29645,G__29646,G__29647,G__29648));
}
});

cljs.core.Subvec.prototype.cljs$core$IReversible$_rseq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if(!((self__.start === self__.end))){
return (new cljs.core.RSeq(coll__$1,((self__.end - self__.start) - (1)),null));
} else {
return null;
}
});

cljs.core.Subvec.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__24693__auto__ = self__.__hash;
if(!((h__24693__auto__ == null))){
return h__24693__auto__;
} else {
var h__24693__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__24693__auto____$1;

return h__24693__auto____$1;
}
});

cljs.core.Subvec.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.Subvec.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.PersistentVector.EMPTY,self__.meta);
});

cljs.core.Subvec.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(coll__$1,f);
});

cljs.core.Subvec.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start__$1){
var self__ = this;
var coll__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3(coll__$1,f,start__$1);
});

cljs.core.Subvec.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (coll,key,val){
var self__ = this;
var coll__$1 = this;
if(typeof key === 'number'){
return cljs.core._assoc_n(coll__$1,key,val);
} else {
throw (new Error("Subvec's key for assoc must be a number."));
}
});

cljs.core.Subvec.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var subvec_seq = ((function (coll__$1){
return (function subvec_seq(i){
if((i === self__.end)){
return null;
} else {
return cljs.core.cons(cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.v,i),(new cljs.core.LazySeq(null,((function (coll__$1){
return (function (){
return subvec_seq((i + (1)));
});})(coll__$1))
,null,null)));
}
});})(coll__$1))
;
return subvec_seq(self__.start);
});

cljs.core.Subvec.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
var G__29650 = meta__$1;
var G__29651 = self__.v;
var G__29652 = self__.start;
var G__29653 = self__.end;
var G__29654 = self__.__hash;
return (cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5 ? cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5(G__29650,G__29651,G__29652,G__29653,G__29654) : cljs.core.build_subvec.call(null,G__29650,G__29651,G__29652,G__29653,G__29654));
});

cljs.core.Subvec.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
var G__29655 = self__.meta;
var G__29656 = cljs.core._assoc_n(self__.v,self__.end,o);
var G__29657 = self__.start;
var G__29658 = (self__.end + (1));
var G__29659 = null;
return (cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5 ? cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5(G__29655,G__29656,G__29657,G__29658,G__29659) : cljs.core.build_subvec.call(null,G__29655,G__29656,G__29657,G__29658,G__29659));
});

cljs.core.Subvec.prototype.call = (function() {
var G__29660 = null;
var G__29660__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$IIndexed$_nth$arity$2(null,k);
});
var G__29660__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$IIndexed$_nth$arity$3(null,k,not_found);
});
G__29660 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__29660__2.call(this,self__,k);
case 3:
return G__29660__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__29660.cljs$core$IFn$_invoke$arity$2 = G__29660__2;
G__29660.cljs$core$IFn$_invoke$arity$3 = G__29660__3;
return G__29660;
})()
;

cljs.core.Subvec.prototype.apply = (function (self__,args29638){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args29638)));
});

cljs.core.Subvec.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$IIndexed$_nth$arity$2(null,k);
});

cljs.core.Subvec.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$IIndexed$_nth$arity$3(null,k,not_found);
});

cljs.core.Subvec.cljs$lang$type = true;

cljs.core.Subvec.cljs$lang$ctorStr = "cljs.core/Subvec";

cljs.core.Subvec.cljs$lang$ctorPrWriter = (function (this__24859__auto__,writer__24860__auto__,opt__24861__auto__){
return cljs.core._write(writer__24860__auto__,"cljs.core/Subvec");
});

cljs.core.__GT_Subvec = (function __GT_Subvec(meta,v,start,end,__hash){
return (new cljs.core.Subvec(meta,v,start,end,__hash));
});

(cljs.core.Subvec.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__25250__auto__ = this;
return cljs.core.es6_iterator(this__25250__auto__);
}));
cljs.core.build_subvec = (function build_subvec(meta,v,start,end,__hash){
while(true){
if((v instanceof cljs.core.Subvec)){
var G__29661 = meta;
var G__29662 = v.v;
var G__29663 = (v.start + start);
var G__29664 = (v.start + end);
var G__29665 = __hash;
meta = G__29661;
v = G__29662;
start = G__29663;
end = G__29664;
__hash = G__29665;
continue;
} else {
var c = cljs.core.count(v);
if(((start < (0))) || ((end < (0))) || ((start > c)) || ((end > c))){
throw (new Error("Index out of bounds"));
} else {
}

return (new cljs.core.Subvec(meta,v,start,end,__hash));
}
break;
}
});
/**
* Returns a persistent vector of the items in vector from
* start (inclusive) to end (exclusive).  If end is not supplied,
* defaults to (count vector). This operation is O(1) and very fast, as
* the resulting vector shares structure with the original and no
* trimming is done.
*/
cljs.core.subvec = (function() {
var subvec = null;
var subvec__2 = (function (v,start){
return subvec.cljs$core$IFn$_invoke$arity$3(v,start,cljs.core.count(v));
});
var subvec__3 = (function (v,start,end){
return cljs.core.build_subvec(null,v,start,end,null);
});
subvec = function(v,start,end){
switch(arguments.length){
case 2:
return subvec__2.call(this,v,start);
case 3:
return subvec__3.call(this,v,start,end);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
subvec.cljs$core$IFn$_invoke$arity$2 = subvec__2;
subvec.cljs$core$IFn$_invoke$arity$3 = subvec__3;
return subvec;
})()
;
cljs.core.tv_ensure_editable = (function tv_ensure_editable(edit,node){
if((edit === node.edit)){
return node;
} else {
return (new cljs.core.VectorNode(edit,cljs.core.aclone(node.arr)));
}
});
cljs.core.tv_editable_root = (function tv_editable_root(node){
return (new cljs.core.VectorNode((function (){var obj29672 = {};
return obj29672;
})(),cljs.core.aclone(node.arr)));
});
cljs.core.tv_editable_tail = (function tv_editable_tail(tl){
var ret = [null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null];
cljs.core.array_copy(tl,(0),ret,(0),tl.length);

return ret;
});
cljs.core.tv_push_tail = (function tv_push_tail(tv,level,parent,tail_node){
var ret = cljs.core.tv_ensure_editable(tv.root.edit,parent);
var subidx = (((tv.cnt - (1)) >>> level) & (31));
cljs.core.pv_aset(ret,subidx,(((level === (5)))?tail_node:(function (){var child = cljs.core.pv_aget(ret,subidx);
if(!((child == null))){
return tv_push_tail(tv,(level - (5)),child,tail_node);
} else {
return cljs.core.new_path(tv.root.edit,(level - (5)),tail_node);
}
})()));

return ret;
});
cljs.core.tv_pop_tail = (function tv_pop_tail(tv,level,node){
var node__$1 = cljs.core.tv_ensure_editable(tv.root.edit,node);
var subidx = (((tv.cnt - (2)) >>> level) & (31));
if((level > (5))){
var new_child = tv_pop_tail(tv,(level - (5)),cljs.core.pv_aget(node__$1,subidx));
if(((new_child == null)) && ((subidx === (0)))){
return null;
} else {
cljs.core.pv_aset(node__$1,subidx,new_child);

return node__$1;
}
} else {
if((subidx === (0))){
return null;
} else {
cljs.core.pv_aset(node__$1,subidx,null);

return node__$1;

}
}
});
cljs.core.unchecked_editable_array_for = (function unchecked_editable_array_for(tv,i){
if((i >= cljs.core.tail_off(tv))){
return tv.tail;
} else {
var root = tv.root;
var node = root;
var level = tv.shift;
while(true){
if((level > (0))){
var G__29680 = cljs.core.tv_ensure_editable(root.edit,cljs.core.pv_aget(node,((i >>> level) & (31))));
var G__29681 = (level - (5));
node = G__29680;
level = G__29681;
continue;
} else {
return node.arr;
}
break;
}
}
});

/**
* @constructor
*/
cljs.core.TransientVector = (function (cnt,shift,root,tail){
this.cnt = cnt;
this.shift = shift;
this.root = root;
this.tail = tail;
this.cljs$lang$protocol_mask$partition0$ = 275;
this.cljs$lang$protocol_mask$partition1$ = 88;
})
cljs.core.TransientVector.prototype.call = (function() {
var G__29685 = null;
var G__29685__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__29685__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__29685 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__29685__2.call(this,self__,k);
case 3:
return G__29685__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__29685.cljs$core$IFn$_invoke$arity$2 = G__29685__2;
G__29685.cljs$core$IFn$_invoke$arity$3 = G__29685__3;
return G__29685;
})()
;

cljs.core.TransientVector.prototype.apply = (function (self__,args29682){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args29682)));
});

cljs.core.TransientVector.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.TransientVector.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.TransientVector.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.TransientVector.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
if(typeof k === 'number'){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(coll__$1,k,not_found);
} else {
return not_found;
}
});

cljs.core.TransientVector.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (coll,n){
var self__ = this;
var coll__$1 = this;
if(self__.root.edit){
return (cljs.core.array_for(coll__$1,n)[(n & (31))]);
} else {
throw (new Error("nth after persistent!"));
}
});

cljs.core.TransientVector.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (coll,n,not_found){
var self__ = this;
var coll__$1 = this;
if((((0) <= n)) && ((n < self__.cnt))){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll__$1,n);
} else {
return not_found;
}
});

cljs.core.TransientVector.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if(self__.root.edit){
return self__.cnt;
} else {
throw (new Error("count after persistent!"));
}
});

cljs.core.TransientVector.prototype.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3 = (function (tcoll,n,val){
var self__ = this;
var tcoll__$1 = this;
if(self__.root.edit){
if((((0) <= n)) && ((n < self__.cnt))){
if((cljs.core.tail_off(tcoll__$1) <= n)){
(self__.tail[(n & (31))] = val);

return tcoll__$1;
} else {
var new_root = ((function (tcoll__$1){
return (function go(level,node){
var node__$1 = cljs.core.tv_ensure_editable(self__.root.edit,node);
if((level === (0))){
cljs.core.pv_aset(node__$1,(n & (31)),val);

return node__$1;
} else {
var subidx = ((n >>> level) & (31));
cljs.core.pv_aset(node__$1,subidx,go((level - (5)),cljs.core.pv_aget(node__$1,subidx)));

return node__$1;
}
});})(tcoll__$1))
.call(null,self__.shift,self__.root);
self__.root = new_root;

return tcoll__$1;
}
} else {
if((n === self__.cnt)){
return cljs.core._conj_BANG_(tcoll__$1,val);
} else {
throw (new Error([cljs.core.str("Index "),cljs.core.str(n),cljs.core.str(" out of bounds for TransientVector of length"),cljs.core.str(self__.cnt)].join('')));

}
}
} else {
throw (new Error("assoc! after persistent!"));
}
});

cljs.core.TransientVector.prototype.cljs$core$ITransientVector$_pop_BANG_$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
if(self__.root.edit){
if((self__.cnt === (0))){
throw (new Error("Can't pop empty vector"));
} else {
if(((1) === self__.cnt)){
self__.cnt = (0);

return tcoll__$1;
} else {
if((((self__.cnt - (1)) & (31)) > (0))){
self__.cnt = (self__.cnt - (1));

return tcoll__$1;
} else {
var new_tail = cljs.core.unchecked_editable_array_for(tcoll__$1,(self__.cnt - (2)));
var new_root = (function (){var nr = cljs.core.tv_pop_tail(tcoll__$1,self__.shift,self__.root);
if(!((nr == null))){
return nr;
} else {
return (new cljs.core.VectorNode(self__.root.edit,[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null]));
}
})();
if((((5) < self__.shift)) && ((cljs.core.pv_aget(new_root,(1)) == null))){
var new_root__$1 = cljs.core.tv_ensure_editable(self__.root.edit,cljs.core.pv_aget(new_root,(0)));
self__.root = new_root__$1;

self__.shift = (self__.shift - (5));

self__.cnt = (self__.cnt - (1));

self__.tail = new_tail;

return tcoll__$1;
} else {
self__.root = new_root;

self__.cnt = (self__.cnt - (1));

self__.tail = new_tail;

return tcoll__$1;
}

}
}
}
} else {
throw (new Error("pop! after persistent!"));
}
});

cljs.core.TransientVector.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = (function (tcoll,key,val){
var self__ = this;
var tcoll__$1 = this;
if(typeof key === 'number'){
return cljs.core._assoc_n_BANG_(tcoll__$1,key,val);
} else {
throw (new Error("TransientVector's key for assoc! must be a number."));
}
});

cljs.core.TransientVector.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = (function (tcoll,o){
var self__ = this;
var tcoll__$1 = this;
if(self__.root.edit){
if(((self__.cnt - cljs.core.tail_off(tcoll__$1)) < (32))){
(self__.tail[(self__.cnt & (31))] = o);

self__.cnt = (self__.cnt + (1));

return tcoll__$1;
} else {
var tail_node = (new cljs.core.VectorNode(self__.root.edit,self__.tail));
var new_tail = [null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null];
(new_tail[(0)] = o);

self__.tail = new_tail;

if(((self__.cnt >>> (5)) > ((1) << self__.shift))){
var new_root_array = [null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null];
var new_shift = (self__.shift + (5));
(new_root_array[(0)] = self__.root);

(new_root_array[(1)] = cljs.core.new_path(self__.root.edit,self__.shift,tail_node));

self__.root = (new cljs.core.VectorNode(self__.root.edit,new_root_array));

self__.shift = new_shift;

self__.cnt = (self__.cnt + (1));

return tcoll__$1;
} else {
var new_root = cljs.core.tv_push_tail(tcoll__$1,self__.shift,self__.root,tail_node);
self__.root = new_root;

self__.cnt = (self__.cnt + (1));

return tcoll__$1;
}
}
} else {
throw (new Error("conj! after persistent!"));
}
});

cljs.core.TransientVector.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
if(self__.root.edit){
self__.root.edit = null;

var len = (self__.cnt - cljs.core.tail_off(tcoll__$1));
var trimmed_tail = (new Array(len));
cljs.core.array_copy(self__.tail,(0),trimmed_tail,(0),len);

return (new cljs.core.PersistentVector(null,self__.cnt,self__.shift,self__.root,trimmed_tail,null));
} else {
throw (new Error("persistent! called twice"));
}
});

cljs.core.TransientVector.cljs$lang$type = true;

cljs.core.TransientVector.cljs$lang$ctorStr = "cljs.core/TransientVector";

cljs.core.TransientVector.cljs$lang$ctorPrWriter = (function (this__24859__auto__,writer__24860__auto__,opt__24861__auto__){
return cljs.core._write(writer__24860__auto__,"cljs.core/TransientVector");
});

cljs.core.__GT_TransientVector = (function __GT_TransientVector(cnt,shift,root,tail){
return (new cljs.core.TransientVector(cnt,shift,root,tail));
});


/**
* @constructor
*/
cljs.core.PersistentQueueSeq = (function (meta,front,rear,__hash){
this.meta = meta;
this.front = front;
this.rear = rear;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 31850572;
})
cljs.core.PersistentQueueSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentQueueSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__24693__auto__ = self__.__hash;
if(!((h__24693__auto__ == null))){
return h__24693__auto__;
} else {
var h__24693__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__24693__auto____$1;

return h__24693__auto____$1;
}
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.first(self__.front);
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var temp__4124__auto__ = cljs.core.next(self__.front);
if(temp__4124__auto__){
var f1 = temp__4124__auto__;
return (new cljs.core.PersistentQueueSeq(self__.meta,f1,self__.rear,null));
} else {
if((self__.rear == null)){
return cljs.core._empty(coll__$1);
} else {
return (new cljs.core.PersistentQueueSeq(self__.meta,self__.rear,null,null));
}
}
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentQueueSeq(meta__$1,self__.front,self__.rear,self__.__hash));
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.PersistentQueueSeq.cljs$lang$type = true;

cljs.core.PersistentQueueSeq.cljs$lang$ctorStr = "cljs.core/PersistentQueueSeq";

cljs.core.PersistentQueueSeq.cljs$lang$ctorPrWriter = (function (this__24859__auto__,writer__24860__auto__,opt__24861__auto__){
return cljs.core._write(writer__24860__auto__,"cljs.core/PersistentQueueSeq");
});

cljs.core.__GT_PersistentQueueSeq = (function __GT_PersistentQueueSeq(meta,front,rear,__hash){
return (new cljs.core.PersistentQueueSeq(meta,front,rear,__hash));
});

(cljs.core.PersistentQueueSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__25250__auto__ = this;
return cljs.core.es6_iterator(this__25250__auto__);
}));

/**
* @constructor
*/
cljs.core.PersistentQueue = (function (meta,count,front,rear,__hash){
this.meta = meta;
this.count = count;
this.front = front;
this.rear = rear;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 31858766;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.PersistentQueue.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentQueue.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentQueue.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentQueue.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentQueue(self__.meta,self__.count,self__.front,self__.rear,self__.__hash));
});

cljs.core.PersistentQueue.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.count;
});

cljs.core.PersistentQueue.prototype.cljs$core$IStack$_peek$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.first(self__.front);
});

cljs.core.PersistentQueue.prototype.cljs$core$IStack$_pop$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if(cljs.core.truth_(self__.front)){
var temp__4124__auto__ = cljs.core.next(self__.front);
if(temp__4124__auto__){
var f1 = temp__4124__auto__;
return (new cljs.core.PersistentQueue(self__.meta,(self__.count - (1)),f1,self__.rear,null));
} else {
return (new cljs.core.PersistentQueue(self__.meta,(self__.count - (1)),cljs.core.seq(self__.rear),cljs.core.PersistentVector.EMPTY,null));
}
} else {
return coll__$1;
}
});

cljs.core.PersistentQueue.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__24693__auto__ = self__.__hash;
if(!((h__24693__auto__ == null))){
return h__24693__auto__;
} else {
var h__24693__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__24693__auto____$1;

return h__24693__auto____$1;
}
});

cljs.core.PersistentQueue.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.PersistentQueue.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.PersistentQueue.EMPTY,self__.meta);
});

cljs.core.PersistentQueue.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.first(self__.front);
});

cljs.core.PersistentQueue.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.rest(cljs.core.seq(coll__$1));
});

cljs.core.PersistentQueue.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var rear__$1 = cljs.core.seq(self__.rear);
if(cljs.core.truth_((function (){var or__24272__auto__ = self__.front;
if(cljs.core.truth_(or__24272__auto__)){
return or__24272__auto__;
} else {
return rear__$1;
}
})())){
return (new cljs.core.PersistentQueueSeq(null,self__.front,cljs.core.seq(rear__$1),null));
} else {
return null;
}
});

cljs.core.PersistentQueue.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentQueue(meta__$1,self__.count,self__.front,self__.rear,self__.__hash));
});

cljs.core.PersistentQueue.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
if(cljs.core.truth_(self__.front)){
return (new cljs.core.PersistentQueue(self__.meta,(self__.count + (1)),self__.front,cljs.core.conj.cljs$core$IFn$_invoke$arity$2((function (){var or__24272__auto__ = self__.rear;
if(cljs.core.truth_(or__24272__auto__)){
return or__24272__auto__;
} else {
return cljs.core.PersistentVector.EMPTY;
}
})(),o),null));
} else {
return (new cljs.core.PersistentQueue(self__.meta,(self__.count + (1)),cljs.core.conj.cljs$core$IFn$_invoke$arity$2(self__.front,o),cljs.core.PersistentVector.EMPTY,null));
}
});

cljs.core.PersistentQueue.cljs$lang$type = true;

cljs.core.PersistentQueue.cljs$lang$ctorStr = "cljs.core/PersistentQueue";

cljs.core.PersistentQueue.cljs$lang$ctorPrWriter = (function (this__24859__auto__,writer__24860__auto__,opt__24861__auto__){
return cljs.core._write(writer__24860__auto__,"cljs.core/PersistentQueue");
});

cljs.core.__GT_PersistentQueue = (function __GT_PersistentQueue(meta,count,front,rear,__hash){
return (new cljs.core.PersistentQueue(meta,count,front,rear,__hash));
});

cljs.core.PersistentQueue.EMPTY = (new cljs.core.PersistentQueue(null,(0),null,cljs.core.PersistentVector.EMPTY,(0)));
(cljs.core.PersistentQueue.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__25250__auto__ = this;
return cljs.core.es6_iterator(this__25250__auto__);
}));

/**
* @constructor
*/
cljs.core.NeverEquiv = (function (){
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 2097152;
})
cljs.core.NeverEquiv.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (o,other){
var self__ = this;
var o__$1 = this;
return false;
});

cljs.core.NeverEquiv.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.NeverEquiv.cljs$lang$type = true;

cljs.core.NeverEquiv.cljs$lang$ctorStr = "cljs.core/NeverEquiv";

cljs.core.NeverEquiv.cljs$lang$ctorPrWriter = (function (this__24859__auto__,writer__24860__auto__,opt__24861__auto__){
return cljs.core._write(writer__24860__auto__,"cljs.core/NeverEquiv");
});

cljs.core.__GT_NeverEquiv = (function __GT_NeverEquiv(){
return (new cljs.core.NeverEquiv());
});

cljs.core.never_equiv = (new cljs.core.NeverEquiv());
/**
* Assumes y is a map. Returns true if x equals y, otherwise returns
* false.
*/
cljs.core.equiv_map = (function equiv_map(x,y){
return cljs.core.boolean$(((cljs.core.map_QMARK_(y))?(((cljs.core.count(x) === cljs.core.count(y)))?cljs.core.every_QMARK_(cljs.core.identity,cljs.core.map.cljs$core$IFn$_invoke$arity$2((function (xkv){
return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$3(y,cljs.core.first(xkv),cljs.core.never_equiv),cljs.core.second(xkv));
}),x)):null):null));
});
cljs.core.scan_array = (function scan_array(incr,k,array){
var len = array.length;
var i = (0);
while(true){
if((i < len)){
if((k === (array[i]))){
return i;
} else {
var G__29686 = (i + incr);
i = G__29686;
continue;
}
} else {
return null;
}
break;
}
});
cljs.core.obj_map_compare_keys = (function obj_map_compare_keys(a,b){
var a__$1 = cljs.core.hash(a);
var b__$1 = cljs.core.hash(b);
if((a__$1 < b__$1)){
return (-1);
} else {
if((a__$1 > b__$1)){
return (1);
} else {
return (0);

}
}
});
cljs.core.obj_map__GT_hash_map = (function obj_map__GT_hash_map(m,k,v){
var ks = m.keys;
var len = ks.length;
var so = m.strobj;
var mm = cljs.core.meta(m);
var i = (0);
var out = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
while(true){
if((i < len)){
var k__$1 = (ks[i]);
var G__29687 = (i + (1));
var G__29688 = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(out,k__$1,(so[k__$1]));
i = G__29687;
out = G__29688;
continue;
} else {
return cljs.core.with_meta(cljs.core.persistent_BANG_(cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(out,k,v)),mm);
}
break;
}
});
cljs.core.obj_clone = (function obj_clone(obj,ks){
var new_obj = (function (){var obj29692 = {};
return obj29692;
})();
var l = ks.length;
var i_29693 = (0);
while(true){
if((i_29693 < l)){
var k_29694 = (ks[i_29693]);
(new_obj[k_29694] = (obj[k_29694]));

var G__29695 = (i_29693 + (1));
i_29693 = G__29695;
continue;
} else {
}
break;
}

return new_obj;
});

/**
* @constructor
*/
cljs.core.ObjMap = (function (meta,keys,strobj,update_count,__hash){
this.meta = meta;
this.keys = keys;
this.strobj = strobj;
this.update_count = update_count;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 16123663;
this.cljs$lang$protocol_mask$partition1$ = 4;
})
cljs.core.ObjMap.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.ObjMap.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.ObjMap.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.ObjMap.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
if(cljs.core.truth_((function (){var and__24260__auto__ = (function (){var G__29699 = k;
return goog.isString(G__29699);
})();
if(cljs.core.truth_(and__24260__auto__)){
return !((cljs.core.scan_array((1),k,self__.keys) == null));
} else {
return and__24260__auto__;
}
})())){
return (self__.strobj[k]);
} else {
return not_found;
}
});

cljs.core.ObjMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = (function (coll,f,init){
var self__ = this;
var coll__$1 = this;
var len = self__.keys.length;
var keys__$1 = self__.keys.sort(cljs.core.obj_map_compare_keys);
var init__$1 = init;
while(true){
if(cljs.core.seq(keys__$1)){
var k = cljs.core.first(keys__$1);
var init__$2 = (function (){var G__29700 = init__$1;
var G__29701 = k;
var G__29702 = (self__.strobj[k]);
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__29700,G__29701,G__29702) : f.call(null,G__29700,G__29701,G__29702));
})();
if(cljs.core.reduced_QMARK_(init__$2)){
var G__29703 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__29703) : cljs.core.deref.call(null,G__29703));
} else {
var G__29709 = cljs.core.rest(keys__$1);
var G__29710 = init__$2;
keys__$1 = G__29709;
init__$1 = G__29710;
continue;
}
} else {
return init__$1;
}
break;
}
});

cljs.core.ObjMap.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.ObjMap.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.keys.length;
});

cljs.core.ObjMap.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__24693__auto__ = self__.__hash;
if(!((h__24693__auto__ == null))){
return h__24693__auto__;
} else {
var h__24693__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
self__.__hash = h__24693__auto____$1;

return h__24693__auto____$1;
}
});

cljs.core.ObjMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_map(coll__$1,other);
});

cljs.core.ObjMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.transient$(cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentHashMap.EMPTY,coll__$1));
});

cljs.core.ObjMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.ObjMap.EMPTY,self__.meta);
});

cljs.core.ObjMap.prototype.cljs$core$IMap$_dissoc$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
if(cljs.core.truth_((function (){var and__24260__auto__ = (function (){var G__29705 = k;
return goog.isString(G__29705);
})();
if(cljs.core.truth_(and__24260__auto__)){
return !((cljs.core.scan_array((1),k,self__.keys) == null));
} else {
return and__24260__auto__;
}
})())){
var new_keys = cljs.core.aclone(self__.keys);
var new_strobj = cljs.core.obj_clone(self__.strobj,self__.keys);
new_keys.splice(cljs.core.scan_array((1),k,new_keys),(1));

delete new_strobj[k];

return (new cljs.core.ObjMap(self__.meta,new_keys,new_strobj,(self__.update_count + (1)),null));
} else {
return coll__$1;
}
});

cljs.core.ObjMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (coll,k,v){
var self__ = this;
var coll__$1 = this;
if(cljs.core.truth_((function (){var G__29706 = k;
return goog.isString(G__29706);
})())){
if(((self__.update_count > cljs.core.ObjMap.HASHMAP_THRESHOLD)) || ((self__.keys.length >= cljs.core.ObjMap.HASHMAP_THRESHOLD))){
return cljs.core.obj_map__GT_hash_map(coll__$1,k,v);
} else {
if(!((cljs.core.scan_array((1),k,self__.keys) == null))){
var new_strobj = cljs.core.obj_clone(self__.strobj,self__.keys);
(new_strobj[k] = v);

return (new cljs.core.ObjMap(self__.meta,self__.keys,new_strobj,(self__.update_count + (1)),null));
} else {
var new_strobj = cljs.core.obj_clone(self__.strobj,self__.keys);
var new_keys = cljs.core.aclone(self__.keys);
(new_strobj[k] = v);

new_keys.push(k);

return (new cljs.core.ObjMap(self__.meta,new_keys,new_strobj,(self__.update_count + (1)),null));
}
}
} else {
return cljs.core.obj_map__GT_hash_map(coll__$1,k,v);
}
});

cljs.core.ObjMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
if(cljs.core.truth_((function (){var and__24260__auto__ = (function (){var G__29708 = k;
return goog.isString(G__29708);
})();
if(cljs.core.truth_(and__24260__auto__)){
return !((cljs.core.scan_array((1),k,self__.keys) == null));
} else {
return and__24260__auto__;
}
})())){
return true;
} else {
return false;
}
});

cljs.core.ObjMap.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.keys.length > (0))){
return cljs.core.map.cljs$core$IFn$_invoke$arity$2(((function (coll__$1){
return (function (p1__29696_SHARP_){
return (new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[p1__29696_SHARP_,(self__.strobj[p1__29696_SHARP_])],null));
});})(coll__$1))
,self__.keys.sort(cljs.core.obj_map_compare_keys));
} else {
return null;
}
});

cljs.core.ObjMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.ObjMap(meta__$1,self__.keys,self__.strobj,self__.update_count,self__.__hash));
});

cljs.core.ObjMap.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,entry){
var self__ = this;
var coll__$1 = this;
if(cljs.core.vector_QMARK_(entry)){
return cljs.core._assoc(coll__$1,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(1)));
} else {
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj,coll__$1,entry);
}
});

cljs.core.ObjMap.prototype.call = (function() {
var G__29711 = null;
var G__29711__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__29711__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__29711 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__29711__2.call(this,self__,k);
case 3:
return G__29711__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__29711.cljs$core$IFn$_invoke$arity$2 = G__29711__2;
G__29711.cljs$core$IFn$_invoke$arity$3 = G__29711__3;
return G__29711;
})()
;

cljs.core.ObjMap.prototype.apply = (function (self__,args29697){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args29697)));
});

cljs.core.ObjMap.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.ObjMap.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.ObjMap.cljs$lang$type = true;

cljs.core.ObjMap.cljs$lang$ctorStr = "cljs.core/ObjMap";

cljs.core.ObjMap.cljs$lang$ctorPrWriter = (function (this__24859__auto__,writer__24860__auto__,opt__24861__auto__){
return cljs.core._write(writer__24860__auto__,"cljs.core/ObjMap");
});

cljs.core.__GT_ObjMap = (function __GT_ObjMap(meta,keys,strobj,update_count,__hash){
return (new cljs.core.ObjMap(meta,keys,strobj,update_count,__hash));
});

cljs.core.ObjMap.EMPTY = (new cljs.core.ObjMap(null,[],(function (){var obj29713 = {};
return obj29713;
})(),(0),(0)));
cljs.core.ObjMap.HASHMAP_THRESHOLD = (8);
cljs.core.ObjMap.fromObject = (function (ks,obj){
return (new cljs.core.ObjMap(null,ks,obj,(0),null));
});

/**
* @constructor
*/
cljs.core.ES6EntriesIterator = (function (s){
this.s = s;
})
cljs.core.ES6EntriesIterator.prototype.next = (function (){
var self__ = this;
var _ = this;
if(!((self__.s == null))){
var vec__29714 = cljs.core.first(self__.s);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__29714,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__29714,(1),null);
self__.s = cljs.core.next(self__.s);

return {"done": false, "value": [k,v]};
} else {
return {"done": true, "value": null};
}
});

cljs.core.ES6EntriesIterator.cljs$lang$type = true;

cljs.core.ES6EntriesIterator.cljs$lang$ctorStr = "cljs.core/ES6EntriesIterator";

cljs.core.ES6EntriesIterator.cljs$lang$ctorPrWriter = (function (this__24859__auto__,writer__24860__auto__,opt__24861__auto__){
return cljs.core._write(writer__24860__auto__,"cljs.core/ES6EntriesIterator");
});

cljs.core.__GT_ES6EntriesIterator = (function __GT_ES6EntriesIterator(s){
return (new cljs.core.ES6EntriesIterator(s));
});

cljs.core.es6_entries_iterator = (function es6_entries_iterator(coll){
return (new cljs.core.ES6EntriesIterator(cljs.core.seq(coll)));
});

/**
* @constructor
*/
cljs.core.ES6SetEntriesIterator = (function (s){
this.s = s;
})
cljs.core.ES6SetEntriesIterator.prototype.next = (function (){
var self__ = this;
var _ = this;
if(!((self__.s == null))){
var x = cljs.core.first(self__.s);
self__.s = cljs.core.next(self__.s);

return {"done": false, "value": [x,x]};
} else {
return {"done": true, "value": null};
}
});

cljs.core.ES6SetEntriesIterator.cljs$lang$type = true;

cljs.core.ES6SetEntriesIterator.cljs$lang$ctorStr = "cljs.core/ES6SetEntriesIterator";

cljs.core.ES6SetEntriesIterator.cljs$lang$ctorPrWriter = (function (this__24859__auto__,writer__24860__auto__,opt__24861__auto__){
return cljs.core._write(writer__24860__auto__,"cljs.core/ES6SetEntriesIterator");
});

cljs.core.__GT_ES6SetEntriesIterator = (function __GT_ES6SetEntriesIterator(s){
return (new cljs.core.ES6SetEntriesIterator(s));
});

cljs.core.es6_set_entries_iterator = (function es6_set_entries_iterator(coll){
return (new cljs.core.ES6SetEntriesIterator(cljs.core.seq(coll)));
});
cljs.core.array_map_index_of_nil_QMARK_ = (function array_map_index_of_nil_QMARK_(arr,m,k){
var len = arr.length;
var i = (0);
while(true){
if((len <= i)){
return (-1);
} else {
if(((arr[i]) == null)){
return i;
} else {
var G__29715 = (i + (2));
i = G__29715;
continue;

}
}
break;
}
});
cljs.core.array_map_index_of_keyword_QMARK_ = (function array_map_index_of_keyword_QMARK_(arr,m,k){
var len = arr.length;
var kstr = k.fqn;
var i = (0);
while(true){
if((len <= i)){
return (-1);
} else {
if((function (){var k_SINGLEQUOTE_ = (arr[i]);
return ((k_SINGLEQUOTE_ instanceof cljs.core.Keyword)) && ((kstr === k_SINGLEQUOTE_.fqn));
})()){
return i;
} else {
var G__29716 = (i + (2));
i = G__29716;
continue;

}
}
break;
}
});
cljs.core.array_map_index_of_symbol_QMARK_ = (function array_map_index_of_symbol_QMARK_(arr,m,k){
var len = arr.length;
var kstr = k.str;
var i = (0);
while(true){
if((len <= i)){
return (-1);
} else {
if((function (){var k_SINGLEQUOTE_ = (arr[i]);
return ((k_SINGLEQUOTE_ instanceof cljs.core.Symbol)) && ((kstr === k_SINGLEQUOTE_.str));
})()){
return i;
} else {
var G__29717 = (i + (2));
i = G__29717;
continue;

}
}
break;
}
});
cljs.core.array_map_index_of_identical_QMARK_ = (function array_map_index_of_identical_QMARK_(arr,m,k){
var len = arr.length;
var i = (0);
while(true){
if((len <= i)){
return (-1);
} else {
if((k === (arr[i]))){
return i;
} else {
var G__29718 = (i + (2));
i = G__29718;
continue;

}
}
break;
}
});
cljs.core.array_map_index_of_equiv_QMARK_ = (function array_map_index_of_equiv_QMARK_(arr,m,k){
var len = arr.length;
var i = (0);
while(true){
if((len <= i)){
return (-1);
} else {
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(k,(arr[i]))){
return i;
} else {
var G__29719 = (i + (2));
i = G__29719;
continue;

}
}
break;
}
});
cljs.core.array_map_index_of = (function array_map_index_of(m,k){
var arr = m.arr;
if((k instanceof cljs.core.Keyword)){
return cljs.core.array_map_index_of_keyword_QMARK_(arr,m,k);
} else {
if(cljs.core.truth_((function (){var or__24272__auto__ = (function (){var G__29723 = k;
return goog.isString(G__29723);
})();
if(cljs.core.truth_(or__24272__auto__)){
return or__24272__auto__;
} else {
return typeof k === 'number';
}
})())){
return cljs.core.array_map_index_of_identical_QMARK_(arr,m,k);
} else {
if((k instanceof cljs.core.Symbol)){
return cljs.core.array_map_index_of_symbol_QMARK_(arr,m,k);
} else {
if((k == null)){
return cljs.core.array_map_index_of_nil_QMARK_(arr,m,k);
} else {
return cljs.core.array_map_index_of_equiv_QMARK_(arr,m,k);

}
}
}
}
});
cljs.core.array_map_extend_kv = (function array_map_extend_kv(m,k,v){
var arr = m.arr;
var l = arr.length;
var narr = (new Array((l + (2))));
var i_29724 = (0);
while(true){
if((i_29724 < l)){
(narr[i_29724] = (arr[i_29724]));

var G__29725 = (i_29724 + (1));
i_29724 = G__29725;
continue;
} else {
}
break;
}

(narr[l] = k);

(narr[(l + (1))] = v);

return narr;
});

/**
* @constructor
*/
cljs.core.PersistentArrayMapSeq = (function (arr,i,_meta){
this.arr = arr;
this.i = i;
this._meta = _meta;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32374990;
})
cljs.core.PersistentArrayMapSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentArrayMapSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__._meta;
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.i < (self__.arr.length - (2)))){
return (new cljs.core.PersistentArrayMapSeq(self__.arr,(self__.i + (2)),self__._meta));
} else {
return null;
}
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return ((self__.arr.length - self__.i) / (2));
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.hash_ordered_coll(coll__$1);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__._meta);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(self__.arr[self__.i]),(self__.arr[(self__.i + (1))])], null);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.i < (self__.arr.length - (2)))){
return (new cljs.core.PersistentArrayMapSeq(self__.arr,(self__.i + (2)),self__._meta));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,new_meta){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentArrayMapSeq(self__.arr,self__.i,new_meta));
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.PersistentArrayMapSeq.cljs$lang$type = true;

cljs.core.PersistentArrayMapSeq.cljs$lang$ctorStr = "cljs.core/PersistentArrayMapSeq";

cljs.core.PersistentArrayMapSeq.cljs$lang$ctorPrWriter = (function (this__24859__auto__,writer__24860__auto__,opt__24861__auto__){
return cljs.core._write(writer__24860__auto__,"cljs.core/PersistentArrayMapSeq");
});

cljs.core.__GT_PersistentArrayMapSeq = (function __GT_PersistentArrayMapSeq(arr,i,_meta){
return (new cljs.core.PersistentArrayMapSeq(arr,i,_meta));
});

(cljs.core.PersistentArrayMapSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__25250__auto__ = this;
return cljs.core.es6_iterator(this__25250__auto__);
}));
cljs.core.persistent_array_map_seq = (function persistent_array_map_seq(arr,i,_meta){
if((i <= (arr.length - (2)))){
return (new cljs.core.PersistentArrayMapSeq(arr,i,_meta));
} else {
return null;
}
});


/**
* @constructor
*/
cljs.core.PersistentArrayMapIterator = (function (arr,i,cnt){
this.arr = arr;
this.i = i;
this.cnt = cnt;
})
cljs.core.PersistentArrayMapIterator.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
return (self__.i < self__.cnt);
});

cljs.core.PersistentArrayMapIterator.prototype.next = (function (){
var self__ = this;
var _ = this;
var ret = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(self__.arr[self__.i]),(self__.arr[(self__.i + (1))])], null);
self__.i = (self__.i + (2));

return ret;
});

cljs.core.PersistentArrayMapIterator.cljs$lang$type = true;

cljs.core.PersistentArrayMapIterator.cljs$lang$ctorStr = "cljs.core/PersistentArrayMapIterator";

cljs.core.PersistentArrayMapIterator.cljs$lang$ctorPrWriter = (function (this__24859__auto__,writer__24860__auto__,opt__24861__auto__){
return cljs.core._write(writer__24860__auto__,"cljs.core/PersistentArrayMapIterator");
});

cljs.core.__GT_PersistentArrayMapIterator = (function __GT_PersistentArrayMapIterator(arr,i,cnt){
return (new cljs.core.PersistentArrayMapIterator(arr,i,cnt));
});


/**
* @constructor
*/
cljs.core.PersistentArrayMap = (function (meta,cnt,arr,__hash){
this.meta = meta;
this.cnt = cnt;
this.arr = arr;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 16647951;
this.cljs$lang$protocol_mask$partition1$ = 8196;
})
cljs.core.PersistentArrayMap.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentArrayMap.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentArrayMap.prototype.keys = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator((function (){var G__29727 = coll;
return (cljs.core.keys.cljs$core$IFn$_invoke$arity$1 ? cljs.core.keys.cljs$core$IFn$_invoke$arity$1(G__29727) : cljs.core.keys.call(null,G__29727));
})());
});

cljs.core.PersistentArrayMap.prototype.entries = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_entries_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentArrayMap.prototype.values = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator((function (){var G__29728 = coll;
return (cljs.core.vals.cljs$core$IFn$_invoke$arity$1 ? cljs.core.vals.cljs$core$IFn$_invoke$arity$1(G__29728) : cljs.core.vals.call(null,G__29728));
})());
});

cljs.core.PersistentArrayMap.prototype.has = (function (k){
var self__ = this;
var coll = this;
return cljs.core.contains_QMARK_(coll,k);
});

cljs.core.PersistentArrayMap.prototype.get = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentArrayMap.prototype.forEach = (function (f){
var self__ = this;
var coll = this;
var seq__29729 = cljs.core.seq(coll);
var chunk__29730 = null;
var count__29731 = (0);
var i__29732 = (0);
while(true){
if((i__29732 < count__29731)){
var vec__29733 = chunk__29730.cljs$core$IIndexed$_nth$arity$2(null,i__29732);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__29733,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__29733,(1),null);
var G__29734_29747 = v;
var G__29735_29748 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__29734_29747,G__29735_29748) : f.call(null,G__29734_29747,G__29735_29748));

var G__29749 = seq__29729;
var G__29750 = chunk__29730;
var G__29751 = count__29731;
var G__29752 = (i__29732 + (1));
seq__29729 = G__29749;
chunk__29730 = G__29750;
count__29731 = G__29751;
i__29732 = G__29752;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__29729);
if(temp__4126__auto__){
var seq__29729__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__29729__$1)){
var c__25059__auto__ = cljs.core.chunk_first(seq__29729__$1);
var G__29753 = cljs.core.chunk_rest(seq__29729__$1);
var G__29754 = c__25059__auto__;
var G__29755 = cljs.core.count(c__25059__auto__);
var G__29756 = (0);
seq__29729 = G__29753;
chunk__29730 = G__29754;
count__29731 = G__29755;
i__29732 = G__29756;
continue;
} else {
var vec__29736 = cljs.core.first(seq__29729__$1);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__29736,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__29736,(1),null);
var G__29737_29757 = v;
var G__29738_29758 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__29737_29757,G__29738_29758) : f.call(null,G__29737_29757,G__29738_29758));

var G__29759 = cljs.core.next(seq__29729__$1);
var G__29760 = null;
var G__29761 = (0);
var G__29762 = (0);
seq__29729 = G__29759;
chunk__29730 = G__29760;
count__29731 = G__29761;
i__29732 = G__29762;
continue;
}
} else {
return null;
}
}
break;
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.PersistentArrayMap.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
var idx = cljs.core.array_map_index_of(coll__$1,k);
if((idx === (-1))){
return not_found;
} else {
return (self__.arr[(idx + (1))]);
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = (function (coll,f,init){
var self__ = this;
var coll__$1 = this;
var len = self__.arr.length;
var i = (0);
var init__$1 = init;
while(true){
if((i < len)){
var init__$2 = (function (){var G__29739 = init__$1;
var G__29740 = (self__.arr[i]);
var G__29741 = (self__.arr[(i + (1))]);
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__29739,G__29740,G__29741) : f.call(null,G__29739,G__29740,G__29741));
})();
if(cljs.core.reduced_QMARK_(init__$2)){
var G__29742 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__29742) : cljs.core.deref.call(null,G__29742));
} else {
var G__29763 = (i + (2));
var G__29764 = init__$2;
i = G__29763;
init__$1 = G__29764;
continue;
}
} else {
return init__$1;
}
break;
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IIterable$ = true;

cljs.core.PersistentArrayMap.prototype.cljs$core$IIterable$_iterator$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return (new cljs.core.PersistentArrayMapIterator(self__.arr,(0),(self__.cnt * (2))));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentArrayMap.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.PersistentArrayMap(self__.meta,self__.cnt,self__.arr,self__.__hash));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.cnt;
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__24693__auto__ = self__.__hash;
if(!((h__24693__auto__ == null))){
return h__24693__auto__;
} else {
var h__24693__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
self__.__hash = h__24693__auto____$1;

return h__24693__auto____$1;
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
if((function (){var G__29743 = other;
if(G__29743){
var bit__24946__auto__ = (G__29743.cljs$lang$protocol_mask$partition0$ & (1024));
if((bit__24946__auto__) || (G__29743.cljs$core$IMap$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
var alen = self__.arr.length;
var other__$1 = other;
if((self__.cnt === other__$1.cljs$core$ICounted$_count$arity$1(null))){
var i = (0);
while(true){
if((i < alen)){
var v = other__$1.cljs$core$ILookup$_lookup$arity$3(null,(self__.arr[i]),cljs.core.lookup_sentinel);
if(!((v === cljs.core.lookup_sentinel))){
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2((self__.arr[(i + (1))]),v)){
var G__29765 = (i + (2));
i = G__29765;
continue;
} else {
return false;
}
} else {
return false;
}
} else {
return true;
}
break;
}
} else {
return false;
}
} else {
return cljs.core.equiv_map(coll__$1,other);
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.TransientArrayMap((function (){var obj29745 = {};
return obj29745;
})(),self__.arr.length,cljs.core.aclone(self__.arr)));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._with_meta(cljs.core.PersistentArrayMap.EMPTY,self__.meta);
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IMap$_dissoc$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
var idx = cljs.core.array_map_index_of(coll__$1,k);
if((idx >= (0))){
var len = self__.arr.length;
var new_len = (len - (2));
if((new_len === (0))){
return cljs.core._empty(coll__$1);
} else {
var new_arr = (new Array(new_len));
var s = (0);
var d = (0);
while(true){
if((s >= len)){
return (new cljs.core.PersistentArrayMap(self__.meta,(self__.cnt - (1)),new_arr,null));
} else {
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(k,(self__.arr[s]))){
var G__29766 = (s + (2));
var G__29767 = d;
s = G__29766;
d = G__29767;
continue;
} else {
(new_arr[d] = (self__.arr[s]));

(new_arr[(d + (1))] = (self__.arr[(s + (1))]));

var G__29768 = (s + (2));
var G__29769 = (d + (2));
s = G__29768;
d = G__29769;
continue;

}
}
break;
}
}
} else {
return coll__$1;
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (coll,k,v){
var self__ = this;
var coll__$1 = this;
var idx = cljs.core.array_map_index_of(coll__$1,k);
if((idx === (-1))){
if((self__.cnt < cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD)){
var arr__$1 = cljs.core.array_map_extend_kv(coll__$1,k,v);
return (new cljs.core.PersistentArrayMap(self__.meta,(self__.cnt + (1)),arr__$1,null));
} else {
return cljs.core._with_meta(cljs.core._assoc(cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentHashMap.EMPTY,coll__$1),k,v),self__.meta);
}
} else {
if((v === (self__.arr[(idx + (1))]))){
return coll__$1;
} else {
var arr__$1 = (function (){var G__29746 = cljs.core.aclone(self__.arr);
(G__29746[(idx + (1))] = v);

return G__29746;
})();
return (new cljs.core.PersistentArrayMap(self__.meta,self__.cnt,arr__$1,null));

}
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return !((cljs.core.array_map_index_of(coll__$1,k) === (-1)));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.persistent_array_map_seq(self__.arr,(0),null);
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentArrayMap(meta__$1,self__.cnt,self__.arr,self__.__hash));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,entry){
var self__ = this;
var coll__$1 = this;
if(cljs.core.vector_QMARK_(entry)){
return cljs.core._assoc(coll__$1,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(1)));
} else {
var ret = coll__$1;
var es = cljs.core.seq(entry);
while(true){
if((es == null)){
return ret;
} else {
var e = cljs.core.first(es);
if(cljs.core.vector_QMARK_(e)){
var G__29770 = cljs.core._assoc(ret,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e,(1)));
var G__29771 = cljs.core.next(es);
ret = G__29770;
es = G__29771;
continue;
} else {
throw (new Error("conj on a map takes map entries or seqables of map entries"));
}
}
break;
}
}
});

cljs.core.PersistentArrayMap.prototype.call = (function() {
var G__29772 = null;
var G__29772__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__29772__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__29772 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__29772__2.call(this,self__,k);
case 3:
return G__29772__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__29772.cljs$core$IFn$_invoke$arity$2 = G__29772__2;
G__29772.cljs$core$IFn$_invoke$arity$3 = G__29772__3;
return G__29772;
})()
;

cljs.core.PersistentArrayMap.prototype.apply = (function (self__,args29726){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args29726)));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.PersistentArrayMap.cljs$lang$type = true;

cljs.core.PersistentArrayMap.cljs$lang$ctorStr = "cljs.core/PersistentArrayMap";

cljs.core.PersistentArrayMap.cljs$lang$ctorPrWriter = (function (this__24859__auto__,writer__24860__auto__,opt__24861__auto__){
return cljs.core._write(writer__24860__auto__,"cljs.core/PersistentArrayMap");
});

cljs.core.__GT_PersistentArrayMap = (function __GT_PersistentArrayMap(meta,cnt,arr,__hash){
return (new cljs.core.PersistentArrayMap(meta,cnt,arr,__hash));
});

cljs.core.PersistentArrayMap.EMPTY = (new cljs.core.PersistentArrayMap(null,(0),[],null));
cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD = (8);
cljs.core.PersistentArrayMap.fromArray = (function (arr,no_clone,no_check){
var arr__$1 = ((no_clone)?arr:cljs.core.aclone(arr));
if(no_check){
var cnt = (arr__$1.length / (2));
return (new cljs.core.PersistentArrayMap(null,cnt,arr__$1,null));
} else {
var len = arr__$1.length;
var i = (0);
var ret = cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY);
while(true){
if((i < len)){
var G__29773 = (i + (2));
var G__29774 = cljs.core._assoc_BANG_(ret,(arr__$1[i]),(arr__$1[(i + (1))]));
i = G__29773;
ret = G__29774;
continue;
} else {
return cljs.core._persistent_BANG_(ret);
}
break;
}
}
});
(cljs.core.PersistentArrayMap.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__25250__auto__ = this;
return cljs.core.es6_iterator(this__25250__auto__);
}));

/**
* @constructor
*/
cljs.core.TransientArrayMap = (function (editable_QMARK_,len,arr){
this.editable_QMARK_ = editable_QMARK_;
this.len = len;
this.arr = arr;
this.cljs$lang$protocol_mask$partition1$ = 56;
this.cljs$lang$protocol_mask$partition0$ = 258;
})
cljs.core.TransientArrayMap.prototype.cljs$core$ITransientMap$_dissoc_BANG_$arity$2 = (function (tcoll,key){
var self__ = this;
var tcoll__$1 = this;
if(cljs.core.truth_(self__.editable_QMARK_)){
var idx = cljs.core.array_map_index_of(tcoll__$1,key);
if((idx >= (0))){
(self__.arr[idx] = (self__.arr[(self__.len - (2))]));

(self__.arr[(idx + (1))] = (self__.arr[(self__.len - (1))]));

var G__29775_29783 = self__.arr;
G__29775_29783.pop();

G__29775_29783.pop();


self__.len = (self__.len - (2));
} else {
}

return tcoll__$1;
} else {
throw (new Error("dissoc! after persistent!"));
}
});

cljs.core.TransientArrayMap.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = (function (tcoll,key,val){
var self__ = this;
var tcoll__$1 = this;
if(cljs.core.truth_(self__.editable_QMARK_)){
var idx = cljs.core.array_map_index_of(tcoll__$1,key);
if((idx === (-1))){
if(((self__.len + (2)) <= ((2) * cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD))){
self__.len = (self__.len + (2));

self__.arr.push(key);

self__.arr.push(val);

return tcoll__$1;
} else {
return cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3((function (){var G__29776 = self__.len;
var G__29777 = self__.arr;
return (cljs.core.array__GT_transient_hash_map.cljs$core$IFn$_invoke$arity$2 ? cljs.core.array__GT_transient_hash_map.cljs$core$IFn$_invoke$arity$2(G__29776,G__29777) : cljs.core.array__GT_transient_hash_map.call(null,G__29776,G__29777));
})(),key,val);
}
} else {
if((val === (self__.arr[(idx + (1))]))){
return tcoll__$1;
} else {
(self__.arr[(idx + (1))] = val);

return tcoll__$1;
}
}
} else {
throw (new Error("assoc! after persistent!"));
}
});

cljs.core.TransientArrayMap.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = (function (tcoll,o){
var self__ = this;
var tcoll__$1 = this;
if(cljs.core.truth_(self__.editable_QMARK_)){
if((function (){var G__29778 = o;
if(G__29778){
var bit__24953__auto__ = (G__29778.cljs$lang$protocol_mask$partition0$ & (2048));
if((bit__24953__auto__) || (G__29778.cljs$core$IMapEntry$)){
return true;
} else {
if((!G__29778.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IMapEntry,G__29778);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IMapEntry,G__29778);
}
})()){
return cljs.core._assoc_BANG_(tcoll__$1,(function (){var G__29779 = o;
return (cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__29779) : cljs.core.key.call(null,G__29779));
})(),(function (){var G__29780 = o;
return (cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(G__29780) : cljs.core.val.call(null,G__29780));
})());
} else {
var es = cljs.core.seq(o);
var tcoll__$2 = tcoll__$1;
while(true){
var temp__4124__auto__ = cljs.core.first(es);
if(cljs.core.truth_(temp__4124__auto__)){
var e = temp__4124__auto__;
var G__29784 = cljs.core.next(es);
var G__29785 = cljs.core._assoc_BANG_(tcoll__$2,(function (){var G__29781 = e;
return (cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__29781) : cljs.core.key.call(null,G__29781));
})(),(function (){var G__29782 = e;
return (cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(G__29782) : cljs.core.val.call(null,G__29782));
})());
es = G__29784;
tcoll__$2 = G__29785;
continue;
} else {
return tcoll__$2;
}
break;
}
}
} else {
throw (new Error("conj! after persistent!"));
}
});

cljs.core.TransientArrayMap.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
if(cljs.core.truth_(self__.editable_QMARK_)){
self__.editable_QMARK_ = false;

return (new cljs.core.PersistentArrayMap(null,cljs.core.quot(self__.len,(2)),self__.arr,null));
} else {
throw (new Error("persistent! called twice"));
}
});

cljs.core.TransientArrayMap.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (tcoll,k){
var self__ = this;
var tcoll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(tcoll__$1,k,null);
});

cljs.core.TransientArrayMap.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (tcoll,k,not_found){
var self__ = this;
var tcoll__$1 = this;
if(cljs.core.truth_(self__.editable_QMARK_)){
var idx = cljs.core.array_map_index_of(tcoll__$1,k);
if((idx === (-1))){
return not_found;
} else {
return (self__.arr[(idx + (1))]);
}
} else {
throw (new Error("lookup after persistent!"));
}
});

cljs.core.TransientArrayMap.prototype.cljs$core$ICounted$_count$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
if(cljs.core.truth_(self__.editable_QMARK_)){
return cljs.core.quot(self__.len,(2));
} else {
throw (new Error("count after persistent!"));
}
});

cljs.core.TransientArrayMap.cljs$lang$type = true;

cljs.core.TransientArrayMap.cljs$lang$ctorStr = "cljs.core/TransientArrayMap";

cljs.core.TransientArrayMap.cljs$lang$ctorPrWriter = (function (this__24859__auto__,writer__24860__auto__,opt__24861__auto__){
return cljs.core._write(writer__24860__auto__,"cljs.core/TransientArrayMap");
});

cljs.core.__GT_TransientArrayMap = (function __GT_TransientArrayMap(editable_QMARK_,len,arr){
return (new cljs.core.TransientArrayMap(editable_QMARK_,len,arr));
});


cljs.core.array__GT_transient_hash_map = (function array__GT_transient_hash_map(len,arr){
var out = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
var i = (0);
while(true){
if((i < len)){
var G__29786 = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(out,(arr[i]),(arr[(i + (1))]));
var G__29787 = (i + (2));
out = G__29786;
i = G__29787;
continue;
} else {
return out;
}
break;
}
});

/**
* @constructor
*/
cljs.core.Box = (function (val){
this.val = val;
})

cljs.core.Box.cljs$lang$type = true;

cljs.core.Box.cljs$lang$ctorStr = "cljs.core/Box";

cljs.core.Box.cljs$lang$ctorPrWriter = (function (this__24859__auto__,writer__24860__auto__,opt__24861__auto__){
return cljs.core._write(writer__24860__auto__,"cljs.core/Box");
});

cljs.core.__GT_Box = (function __GT_Box(val){
return (new cljs.core.Box(val));
});






cljs.core.key_test = (function key_test(key,other){
if((key === other)){
return true;
} else {
if(cljs.core.keyword_identical_QMARK_(key,other)){
return true;
} else {
return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(key,other);

}
}
});
cljs.core.mask = (function mask(hash,shift){
return ((hash >>> shift) & (31));
});
cljs.core.clone_and_set = (function() {
var clone_and_set = null;
var clone_and_set__3 = (function (arr,i,a){
var G__29790 = cljs.core.aclone(arr);
(G__29790[i] = a);

return G__29790;
});
var clone_and_set__5 = (function (arr,i,a,j,b){
var G__29791 = cljs.core.aclone(arr);
(G__29791[i] = a);

(G__29791[j] = b);

return G__29791;
});
clone_and_set = function(arr,i,a,j,b){
switch(arguments.length){
case 3:
return clone_and_set__3.call(this,arr,i,a);
case 5:
return clone_and_set__5.call(this,arr,i,a,j,b);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
clone_and_set.cljs$core$IFn$_invoke$arity$3 = clone_and_set__3;
clone_and_set.cljs$core$IFn$_invoke$arity$5 = clone_and_set__5;
return clone_and_set;
})()
;
cljs.core.remove_pair = (function remove_pair(arr,i){
var new_arr = (new Array((arr.length - (2))));
cljs.core.array_copy(arr,(0),new_arr,(0),((2) * i));

cljs.core.array_copy(arr,((2) * (i + (1))),new_arr,((2) * i),(new_arr.length - ((2) * i)));

return new_arr;
});
cljs.core.bitmap_indexed_node_index = (function bitmap_indexed_node_index(bitmap,bit){
return cljs.core.bit_count((bitmap & (bit - (1))));
});
cljs.core.bitpos = (function bitpos(hash,shift){
return ((1) << ((hash >>> shift) & 0x01f));
});
cljs.core.edit_and_set = (function() {
var edit_and_set = null;
var edit_and_set__4 = (function (inode,edit,i,a){
var editable = inode.ensure_editable(edit);
(editable.arr[i] = a);

return editable;
});
var edit_and_set__6 = (function (inode,edit,i,a,j,b){
var editable = inode.ensure_editable(edit);
(editable.arr[i] = a);

(editable.arr[j] = b);

return editable;
});
edit_and_set = function(inode,edit,i,a,j,b){
switch(arguments.length){
case 4:
return edit_and_set__4.call(this,inode,edit,i,a);
case 6:
return edit_and_set__6.call(this,inode,edit,i,a,j,b);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
edit_and_set.cljs$core$IFn$_invoke$arity$4 = edit_and_set__4;
edit_and_set.cljs$core$IFn$_invoke$arity$6 = edit_and_set__6;
return edit_and_set;
})()
;
cljs.core.inode_kv_reduce = (function inode_kv_reduce(arr,f,init){
var len = arr.length;
var i = (0);
var init__$1 = init;
while(true){
if((i < len)){
var init__$2 = (function (){var k = (arr[i]);
if(!((k == null))){
var G__29796 = init__$1;
var G__29797 = k;
var G__29798 = (arr[(i + (1))]);
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__29796,G__29797,G__29798) : f.call(null,G__29796,G__29797,G__29798));
} else {
var node = (arr[(i + (1))]);
if(!((node == null))){
return node.kv_reduce(f,init__$1);
} else {
return init__$1;
}
}
})();
if(cljs.core.reduced_QMARK_(init__$2)){
var G__29799 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__29799) : cljs.core.deref.call(null,G__29799));
} else {
var G__29800 = (i + (2));
var G__29801 = init__$2;
i = G__29800;
init__$1 = G__29801;
continue;
}
} else {
return init__$1;
}
break;
}
});

/**
* @constructor
*/
cljs.core.BitmapIndexedNode = (function (edit,bitmap,arr){
this.edit = edit;
this.bitmap = bitmap;
this.arr = arr;
})
cljs.core.BitmapIndexedNode.prototype.ensure_editable = (function (e){
var self__ = this;
var inode = this;
if((e === self__.edit)){
return inode;
} else {
var n = cljs.core.bit_count(self__.bitmap);
var new_arr = (new Array((((n < (0)))?(4):((2) * (n + (1))))));
cljs.core.array_copy(self__.arr,(0),new_arr,(0),((2) * n));

return (new cljs.core.BitmapIndexedNode(e,self__.bitmap,new_arr));
}
});

cljs.core.BitmapIndexedNode.prototype.inode_without_BANG_ = (function (edit__$1,shift,hash,key,removed_leaf_QMARK_){
var self__ = this;
var inode = this;
var bit = (1 << ((hash >>> shift) & 0x01f));
if(((self__.bitmap & bit) === (0))){
return inode;
} else {
var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap,bit);
var key_or_nil = (self__.arr[((2) * idx)]);
var val_or_node = (self__.arr[(((2) * idx) + (1))]);
if((key_or_nil == null)){
var n = val_or_node.inode_without_BANG_(edit__$1,(shift + (5)),hash,key,removed_leaf_QMARK_);
if((n === val_or_node)){
return inode;
} else {
if(!((n == null))){
return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,(((2) * idx) + (1)),n);
} else {
if((self__.bitmap === bit)){
return null;
} else {
return inode.edit_and_remove_pair(edit__$1,bit,idx);

}
}
}
} else {
if(cljs.core.key_test(key,key_or_nil)){
(removed_leaf_QMARK_[(0)] = true);

return inode.edit_and_remove_pair(edit__$1,bit,idx);
} else {
return inode;

}
}
}
});

cljs.core.BitmapIndexedNode.prototype.edit_and_remove_pair = (function (e,bit,i){
var self__ = this;
var inode = this;
if((self__.bitmap === bit)){
return null;
} else {
var editable = inode.ensure_editable(e);
var earr = editable.arr;
var len = earr.length;
editable.bitmap = (bit ^ editable.bitmap);

cljs.core.array_copy(earr,((2) * (i + (1))),earr,((2) * i),(len - ((2) * (i + (1)))));

(earr[(len - (2))] = null);

(earr[(len - (1))] = null);

return editable;
}
});

cljs.core.BitmapIndexedNode.prototype.inode_seq = (function (){
var self__ = this;
var inode = this;
var G__29802 = self__.arr;
return (cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1 ? cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1(G__29802) : cljs.core.create_inode_seq.call(null,G__29802));
});

cljs.core.BitmapIndexedNode.prototype.kv_reduce = (function (f,init){
var self__ = this;
var inode = this;
return cljs.core.inode_kv_reduce(self__.arr,f,init);
});

cljs.core.BitmapIndexedNode.prototype.inode_lookup = (function (shift,hash,key,not_found){
var self__ = this;
var inode = this;
var bit = (1 << ((hash >>> shift) & 0x01f));
if(((self__.bitmap & bit) === (0))){
return not_found;
} else {
var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap,bit);
var key_or_nil = (self__.arr[((2) * idx)]);
var val_or_node = (self__.arr[(((2) * idx) + (1))]);
if((key_or_nil == null)){
return val_or_node.inode_lookup((shift + (5)),hash,key,not_found);
} else {
if(cljs.core.key_test(key,key_or_nil)){
return val_or_node;
} else {
return not_found;

}
}
}
});

cljs.core.BitmapIndexedNode.prototype.inode_assoc_BANG_ = (function (edit__$1,shift,hash,key,val,added_leaf_QMARK_){
var self__ = this;
var inode = this;
var bit = (1 << ((hash >>> shift) & 0x01f));
var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap,bit);
if(((self__.bitmap & bit) === (0))){
var n = cljs.core.bit_count(self__.bitmap);
if((((2) * n) < self__.arr.length)){
var editable = inode.ensure_editable(edit__$1);
var earr = editable.arr;
added_leaf_QMARK_.val = true;

cljs.core.array_copy_downward(earr,((2) * idx),earr,((2) * (idx + (1))),((2) * (n - idx)));

(earr[((2) * idx)] = key);

(earr[(((2) * idx) + (1))] = val);

editable.bitmap = (editable.bitmap | bit);

return editable;
} else {
if((n >= (16))){
var nodes = [null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null];
var jdx = ((hash >>> shift) & 0x01f);
(nodes[jdx] = cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit__$1,(shift + (5)),hash,key,val,added_leaf_QMARK_));

var i_29816 = (0);
var j_29817 = (0);
while(true){
if((i_29816 < (32))){
if((((self__.bitmap >>> i_29816) & (1)) === (0))){
var G__29818 = (i_29816 + (1));
var G__29819 = j_29817;
i_29816 = G__29818;
j_29817 = G__29819;
continue;
} else {
(nodes[i_29816] = ((!(((self__.arr[j_29817]) == null)))?cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit__$1,(shift + (5)),cljs.core.hash((self__.arr[j_29817])),(self__.arr[j_29817]),(self__.arr[(j_29817 + (1))]),added_leaf_QMARK_):(self__.arr[(j_29817 + (1))])));

var G__29820 = (i_29816 + (1));
var G__29821 = (j_29817 + (2));
i_29816 = G__29820;
j_29817 = G__29821;
continue;
}
} else {
}
break;
}

return (new cljs.core.ArrayNode(edit__$1,(n + (1)),nodes));
} else {
var new_arr = (new Array(((2) * (n + (4)))));
cljs.core.array_copy(self__.arr,(0),new_arr,(0),((2) * idx));

(new_arr[((2) * idx)] = key);

(new_arr[(((2) * idx) + (1))] = val);

cljs.core.array_copy(self__.arr,((2) * idx),new_arr,((2) * (idx + (1))),((2) * (n - idx)));

added_leaf_QMARK_.val = true;

var editable = inode.ensure_editable(edit__$1);
editable.arr = new_arr;

editable.bitmap = (editable.bitmap | bit);

return editable;

}
}
} else {
var key_or_nil = (self__.arr[((2) * idx)]);
var val_or_node = (self__.arr[(((2) * idx) + (1))]);
if((key_or_nil == null)){
var n = val_or_node.inode_assoc_BANG_(edit__$1,(shift + (5)),hash,key,val,added_leaf_QMARK_);
if((n === val_or_node)){
return inode;
} else {
return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,(((2) * idx) + (1)),n);
}
} else {
if(cljs.core.key_test(key,key_or_nil)){
if((val === val_or_node)){
return inode;
} else {
return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,(((2) * idx) + (1)),val);
}
} else {
added_leaf_QMARK_.val = true;

return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$6(inode,edit__$1,((2) * idx),null,(((2) * idx) + (1)),(function (){var G__29803 = edit__$1;
var G__29804 = (shift + (5));
var G__29805 = key_or_nil;
var G__29806 = val_or_node;
var G__29807 = hash;
var G__29808 = key;
var G__29809 = val;
return (cljs.core.create_node.cljs$core$IFn$_invoke$arity$7 ? cljs.core.create_node.cljs$core$IFn$_invoke$arity$7(G__29803,G__29804,G__29805,G__29806,G__29807,G__29808,G__29809) : cljs.core.create_node.call(null,G__29803,G__29804,G__29805,G__29806,G__29807,G__29808,G__29809));
})());

}
}
}
});

cljs.core.BitmapIndexedNode.prototype.inode_assoc = (function (shift,hash,key,val,added_leaf_QMARK_){
var self__ = this;
var inode = this;
var bit = (1 << ((hash >>> shift) & 0x01f));
var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap,bit);
if(((self__.bitmap & bit) === (0))){
var n = cljs.core.bit_count(self__.bitmap);
if((n >= (16))){
var nodes = [null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null];
var jdx = ((hash >>> shift) & 0x01f);
(nodes[jdx] = cljs.core.BitmapIndexedNode.EMPTY.inode_assoc((shift + (5)),hash,key,val,added_leaf_QMARK_));

var i_29822 = (0);
var j_29823 = (0);
while(true){
if((i_29822 < (32))){
if((((self__.bitmap >>> i_29822) & (1)) === (0))){
var G__29824 = (i_29822 + (1));
var G__29825 = j_29823;
i_29822 = G__29824;
j_29823 = G__29825;
continue;
} else {
(nodes[i_29822] = ((!(((self__.arr[j_29823]) == null)))?cljs.core.BitmapIndexedNode.EMPTY.inode_assoc((shift + (5)),cljs.core.hash((self__.arr[j_29823])),(self__.arr[j_29823]),(self__.arr[(j_29823 + (1))]),added_leaf_QMARK_):(self__.arr[(j_29823 + (1))])));

var G__29826 = (i_29822 + (1));
var G__29827 = (j_29823 + (2));
i_29822 = G__29826;
j_29823 = G__29827;
continue;
}
} else {
}
break;
}

return (new cljs.core.ArrayNode(null,(n + (1)),nodes));
} else {
var new_arr = (new Array(((2) * (n + (1)))));
cljs.core.array_copy(self__.arr,(0),new_arr,(0),((2) * idx));

(new_arr[((2) * idx)] = key);

(new_arr[(((2) * idx) + (1))] = val);

cljs.core.array_copy(self__.arr,((2) * idx),new_arr,((2) * (idx + (1))),((2) * (n - idx)));

added_leaf_QMARK_.val = true;

return (new cljs.core.BitmapIndexedNode(null,(self__.bitmap | bit),new_arr));
}
} else {
var key_or_nil = (self__.arr[((2) * idx)]);
var val_or_node = (self__.arr[(((2) * idx) + (1))]);
if((key_or_nil == null)){
var n = val_or_node.inode_assoc((shift + (5)),hash,key,val,added_leaf_QMARK_);
if((n === val_or_node)){
return inode;
} else {
return (new cljs.core.BitmapIndexedNode(null,self__.bitmap,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,(((2) * idx) + (1)),n)));
}
} else {
if(cljs.core.key_test(key,key_or_nil)){
if((val === val_or_node)){
return inode;
} else {
return (new cljs.core.BitmapIndexedNode(null,self__.bitmap,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,(((2) * idx) + (1)),val)));
}
} else {
added_leaf_QMARK_.val = true;

return (new cljs.core.BitmapIndexedNode(null,self__.bitmap,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$5(self__.arr,((2) * idx),null,(((2) * idx) + (1)),(function (){var G__29810 = (shift + (5));
var G__29811 = key_or_nil;
var G__29812 = val_or_node;
var G__29813 = hash;
var G__29814 = key;
var G__29815 = val;
return (cljs.core.create_node.cljs$core$IFn$_invoke$arity$6 ? cljs.core.create_node.cljs$core$IFn$_invoke$arity$6(G__29810,G__29811,G__29812,G__29813,G__29814,G__29815) : cljs.core.create_node.call(null,G__29810,G__29811,G__29812,G__29813,G__29814,G__29815));
})())));

}
}
}
});

cljs.core.BitmapIndexedNode.prototype.inode_find = (function (shift,hash,key,not_found){
var self__ = this;
var inode = this;
var bit = (1 << ((hash >>> shift) & 0x01f));
if(((self__.bitmap & bit) === (0))){
return not_found;
} else {
var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap,bit);
var key_or_nil = (self__.arr[((2) * idx)]);
var val_or_node = (self__.arr[(((2) * idx) + (1))]);
if((key_or_nil == null)){
return val_or_node.inode_find((shift + (5)),hash,key,not_found);
} else {
if(cljs.core.key_test(key,key_or_nil)){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [key_or_nil,val_or_node], null);
} else {
return not_found;

}
}
}
});

cljs.core.BitmapIndexedNode.prototype.inode_without = (function (shift,hash,key){
var self__ = this;
var inode = this;
var bit = (1 << ((hash >>> shift) & 0x01f));
if(((self__.bitmap & bit) === (0))){
return inode;
} else {
var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap,bit);
var key_or_nil = (self__.arr[((2) * idx)]);
var val_or_node = (self__.arr[(((2) * idx) + (1))]);
if((key_or_nil == null)){
var n = val_or_node.inode_without((shift + (5)),hash,key);
if((n === val_or_node)){
return inode;
} else {
if(!((n == null))){
return (new cljs.core.BitmapIndexedNode(null,self__.bitmap,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,(((2) * idx) + (1)),n)));
} else {
if((self__.bitmap === bit)){
return null;
} else {
return (new cljs.core.BitmapIndexedNode(null,(self__.bitmap ^ bit),cljs.core.remove_pair(self__.arr,idx)));

}
}
}
} else {
if(cljs.core.key_test(key,key_or_nil)){
return (new cljs.core.BitmapIndexedNode(null,(self__.bitmap ^ bit),cljs.core.remove_pair(self__.arr,idx)));
} else {
return inode;

}
}
}
});

cljs.core.BitmapIndexedNode.cljs$lang$type = true;

cljs.core.BitmapIndexedNode.cljs$lang$ctorStr = "cljs.core/BitmapIndexedNode";

cljs.core.BitmapIndexedNode.cljs$lang$ctorPrWriter = (function (this__24859__auto__,writer__24860__auto__,opt__24861__auto__){
return cljs.core._write(writer__24860__auto__,"cljs.core/BitmapIndexedNode");
});

cljs.core.__GT_BitmapIndexedNode = (function __GT_BitmapIndexedNode(edit,bitmap,arr){
return (new cljs.core.BitmapIndexedNode(edit,bitmap,arr));
});

cljs.core.BitmapIndexedNode.EMPTY = (new cljs.core.BitmapIndexedNode(null,(0),[]));
cljs.core.pack_array_node = (function pack_array_node(array_node,edit,idx){
var arr = array_node.arr;
var len = arr.length;
var new_arr = (new Array(((2) * (array_node.cnt - (1)))));
var i = (0);
var j = (1);
var bitmap = (0);
while(true){
if((i < len)){
if((!((i === idx))) && (!(((arr[i]) == null)))){
(new_arr[j] = (arr[i]));

var G__29828 = (i + (1));
var G__29829 = (j + (2));
var G__29830 = (bitmap | ((1) << i));
i = G__29828;
j = G__29829;
bitmap = G__29830;
continue;
} else {
var G__29831 = (i + (1));
var G__29832 = j;
var G__29833 = bitmap;
i = G__29831;
j = G__29832;
bitmap = G__29833;
continue;
}
} else {
return (new cljs.core.BitmapIndexedNode(edit,bitmap,new_arr));
}
break;
}
});

/**
* @constructor
*/
cljs.core.ArrayNode = (function (edit,cnt,arr){
this.edit = edit;
this.cnt = cnt;
this.arr = arr;
})
cljs.core.ArrayNode.prototype.ensure_editable = (function (e){
var self__ = this;
var inode = this;
if((e === self__.edit)){
return inode;
} else {
return (new cljs.core.ArrayNode(e,self__.cnt,cljs.core.aclone(self__.arr)));
}
});

cljs.core.ArrayNode.prototype.inode_without_BANG_ = (function (edit__$1,shift,hash,key,removed_leaf_QMARK_){
var self__ = this;
var inode = this;
var idx = ((hash >>> shift) & 0x01f);
var node = (self__.arr[idx]);
if((node == null)){
return inode;
} else {
var n = node.inode_without_BANG_(edit__$1,(shift + (5)),hash,key,removed_leaf_QMARK_);
if((n === node)){
return inode;
} else {
if((n == null)){
if((self__.cnt <= (8))){
return cljs.core.pack_array_node(inode,edit__$1,idx);
} else {
var editable = cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,idx,n);
editable.cnt = (editable.cnt - (1));

return editable;
}
} else {
return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,idx,n);

}
}
}
});

cljs.core.ArrayNode.prototype.inode_seq = (function (){
var self__ = this;
var inode = this;
var G__29834 = self__.arr;
return (cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$1 ? cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$1(G__29834) : cljs.core.create_array_node_seq.call(null,G__29834));
});

cljs.core.ArrayNode.prototype.kv_reduce = (function (f,init){
var self__ = this;
var inode = this;
var len = self__.arr.length;
var i = (0);
var init__$1 = init;
while(true){
if((i < len)){
var node = (self__.arr[i]);
if(!((node == null))){
var init__$2 = node.kv_reduce(f,init__$1);
if(cljs.core.reduced_QMARK_(init__$2)){
var G__29835 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__29835) : cljs.core.deref.call(null,G__29835));
} else {
var G__29836 = (i + (1));
var G__29837 = init__$2;
i = G__29836;
init__$1 = G__29837;
continue;
}
} else {
var G__29838 = (i + (1));
var G__29839 = init__$1;
i = G__29838;
init__$1 = G__29839;
continue;
}
} else {
return init__$1;
}
break;
}
});

cljs.core.ArrayNode.prototype.inode_lookup = (function (shift,hash,key,not_found){
var self__ = this;
var inode = this;
var idx = ((hash >>> shift) & 0x01f);
var node = (self__.arr[idx]);
if(!((node == null))){
return node.inode_lookup((shift + (5)),hash,key,not_found);
} else {
return not_found;
}
});

cljs.core.ArrayNode.prototype.inode_assoc_BANG_ = (function (edit__$1,shift,hash,key,val,added_leaf_QMARK_){
var self__ = this;
var inode = this;
var idx = ((hash >>> shift) & 0x01f);
var node = (self__.arr[idx]);
if((node == null)){
var editable = cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,idx,cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit__$1,(shift + (5)),hash,key,val,added_leaf_QMARK_));
editable.cnt = (editable.cnt + (1));

return editable;
} else {
var n = node.inode_assoc_BANG_(edit__$1,(shift + (5)),hash,key,val,added_leaf_QMARK_);
if((n === node)){
return inode;
} else {
return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,idx,n);
}
}
});

cljs.core.ArrayNode.prototype.inode_assoc = (function (shift,hash,key,val,added_leaf_QMARK_){
var self__ = this;
var inode = this;
var idx = ((hash >>> shift) & 0x01f);
var node = (self__.arr[idx]);
if((node == null)){
return (new cljs.core.ArrayNode(null,(self__.cnt + (1)),cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,idx,cljs.core.BitmapIndexedNode.EMPTY.inode_assoc((shift + (5)),hash,key,val,added_leaf_QMARK_))));
} else {
var n = node.inode_assoc((shift + (5)),hash,key,val,added_leaf_QMARK_);
if((n === node)){
return inode;
} else {
return (new cljs.core.ArrayNode(null,self__.cnt,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,idx,n)));
}
}
});

cljs.core.ArrayNode.prototype.inode_find = (function (shift,hash,key,not_found){
var self__ = this;
var inode = this;
var idx = ((hash >>> shift) & 0x01f);
var node = (self__.arr[idx]);
if(!((node == null))){
return node.inode_find((shift + (5)),hash,key,not_found);
} else {
return not_found;
}
});

cljs.core.ArrayNode.prototype.inode_without = (function (shift,hash,key){
var self__ = this;
var inode = this;
var idx = ((hash >>> shift) & 0x01f);
var node = (self__.arr[idx]);
if(!((node == null))){
var n = node.inode_without((shift + (5)),hash,key);
if((n === node)){
return inode;
} else {
if((n == null)){
if((self__.cnt <= (8))){
return cljs.core.pack_array_node(inode,null,idx);
} else {
return (new cljs.core.ArrayNode(null,(self__.cnt - (1)),cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,idx,n)));
}
} else {
return (new cljs.core.ArrayNode(null,self__.cnt,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,idx,n)));

}
}
} else {
return inode;
}
});

cljs.core.ArrayNode.cljs$lang$type = true;

cljs.core.ArrayNode.cljs$lang$ctorStr = "cljs.core/ArrayNode";

cljs.core.ArrayNode.cljs$lang$ctorPrWriter = (function (this__24859__auto__,writer__24860__auto__,opt__24861__auto__){
return cljs.core._write(writer__24860__auto__,"cljs.core/ArrayNode");
});

cljs.core.__GT_ArrayNode = (function __GT_ArrayNode(edit,cnt,arr){
return (new cljs.core.ArrayNode(edit,cnt,arr));
});

cljs.core.hash_collision_node_find_index = (function hash_collision_node_find_index(arr,cnt,key){
var lim = ((2) * cnt);
var i = (0);
while(true){
if((i < lim)){
if(cljs.core.key_test(key,(arr[i]))){
return i;
} else {
var G__29840 = (i + (2));
i = G__29840;
continue;
}
} else {
return (-1);
}
break;
}
});

/**
* @constructor
*/
cljs.core.HashCollisionNode = (function (edit,collision_hash,cnt,arr){
this.edit = edit;
this.collision_hash = collision_hash;
this.cnt = cnt;
this.arr = arr;
})
cljs.core.HashCollisionNode.prototype.ensure_editable = (function (e){
var self__ = this;
var inode = this;
if((e === self__.edit)){
return inode;
} else {
var new_arr = (new Array(((2) * (self__.cnt + (1)))));
cljs.core.array_copy(self__.arr,(0),new_arr,(0),((2) * self__.cnt));

return (new cljs.core.HashCollisionNode(e,self__.collision_hash,self__.cnt,new_arr));
}
});

cljs.core.HashCollisionNode.prototype.inode_without_BANG_ = (function (edit__$1,shift,hash,key,removed_leaf_QMARK_){
var self__ = this;
var inode = this;
var idx = cljs.core.hash_collision_node_find_index(self__.arr,self__.cnt,key);
if((idx === (-1))){
return inode;
} else {
(removed_leaf_QMARK_[(0)] = true);

if((self__.cnt === (1))){
return null;
} else {
var editable = inode.ensure_editable(edit__$1);
var earr = editable.arr;
(earr[idx] = (earr[(((2) * self__.cnt) - (2))]));

(earr[(idx + (1))] = (earr[(((2) * self__.cnt) - (1))]));

(earr[(((2) * self__.cnt) - (1))] = null);

(earr[(((2) * self__.cnt) - (2))] = null);

editable.cnt = (editable.cnt - (1));

return editable;
}
}
});

cljs.core.HashCollisionNode.prototype.inode_seq = (function (){
var self__ = this;
var inode = this;
var G__29841 = self__.arr;
return (cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1 ? cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1(G__29841) : cljs.core.create_inode_seq.call(null,G__29841));
});

cljs.core.HashCollisionNode.prototype.kv_reduce = (function (f,init){
var self__ = this;
var inode = this;
return cljs.core.inode_kv_reduce(self__.arr,f,init);
});

cljs.core.HashCollisionNode.prototype.inode_lookup = (function (shift,hash,key,not_found){
var self__ = this;
var inode = this;
var idx = cljs.core.hash_collision_node_find_index(self__.arr,self__.cnt,key);
if((idx < (0))){
return not_found;
} else {
if(cljs.core.key_test(key,(self__.arr[idx]))){
return (self__.arr[(idx + (1))]);
} else {
return not_found;

}
}
});

cljs.core.HashCollisionNode.prototype.inode_assoc_BANG_ = (function (edit__$1,shift,hash,key,val,added_leaf_QMARK_){
var self__ = this;
var inode = this;
if((hash === self__.collision_hash)){
var idx = cljs.core.hash_collision_node_find_index(self__.arr,self__.cnt,key);
if((idx === (-1))){
if((self__.arr.length > ((2) * self__.cnt))){
var editable = cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$6(inode,edit__$1,((2) * self__.cnt),key,(((2) * self__.cnt) + (1)),val);
added_leaf_QMARK_.val = true;

editable.cnt = (editable.cnt + (1));

return editable;
} else {
var len = self__.arr.length;
var new_arr = (new Array((len + (2))));
cljs.core.array_copy(self__.arr,(0),new_arr,(0),len);

(new_arr[len] = key);

(new_arr[(len + (1))] = val);

added_leaf_QMARK_.val = true;

return inode.ensure_editable_array(edit__$1,(self__.cnt + (1)),new_arr);
}
} else {
if(((self__.arr[(idx + (1))]) === val)){
return inode;
} else {
return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,(idx + (1)),val);
}
}
} else {
return (new cljs.core.BitmapIndexedNode(edit__$1,(1 << ((self__.collision_hash >>> shift) & 0x01f)),[null,inode,null,null])).inode_assoc_BANG_(edit__$1,shift,hash,key,val,added_leaf_QMARK_);
}
});

cljs.core.HashCollisionNode.prototype.inode_assoc = (function (shift,hash,key,val,added_leaf_QMARK_){
var self__ = this;
var inode = this;
if((hash === self__.collision_hash)){
var idx = cljs.core.hash_collision_node_find_index(self__.arr,self__.cnt,key);
if((idx === (-1))){
var len = ((2) * self__.cnt);
var new_arr = (new Array((len + (2))));
cljs.core.array_copy(self__.arr,(0),new_arr,(0),len);

(new_arr[len] = key);

(new_arr[(len + (1))] = val);

added_leaf_QMARK_.val = true;

return (new cljs.core.HashCollisionNode(null,self__.collision_hash,(self__.cnt + (1)),new_arr));
} else {
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2((self__.arr[idx]),val)){
return inode;
} else {
return (new cljs.core.HashCollisionNode(null,self__.collision_hash,self__.cnt,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,(idx + (1)),val)));
}
}
} else {
return (new cljs.core.BitmapIndexedNode(null,(1 << ((self__.collision_hash >>> shift) & 0x01f)),[null,inode])).inode_assoc(shift,hash,key,val,added_leaf_QMARK_);
}
});

cljs.core.HashCollisionNode.prototype.ensure_editable_array = (function (e,count,array){
var self__ = this;
var inode = this;
if((e === self__.edit)){
self__.arr = array;

self__.cnt = count;

return inode;
} else {
return (new cljs.core.HashCollisionNode(self__.edit,self__.collision_hash,count,array));
}
});

cljs.core.HashCollisionNode.prototype.inode_find = (function (shift,hash,key,not_found){
var self__ = this;
var inode = this;
var idx = cljs.core.hash_collision_node_find_index(self__.arr,self__.cnt,key);
if((idx < (0))){
return not_found;
} else {
if(cljs.core.key_test(key,(self__.arr[idx]))){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(self__.arr[idx]),(self__.arr[(idx + (1))])], null);
} else {
return not_found;

}
}
});

cljs.core.HashCollisionNode.prototype.inode_without = (function (shift,hash,key){
var self__ = this;
var inode = this;
var idx = cljs.core.hash_collision_node_find_index(self__.arr,self__.cnt,key);
if((idx === (-1))){
return inode;
} else {
if((self__.cnt === (1))){
return null;
} else {
return (new cljs.core.HashCollisionNode(null,self__.collision_hash,(self__.cnt - (1)),cljs.core.remove_pair(self__.arr,cljs.core.quot(idx,(2)))));

}
}
});

cljs.core.HashCollisionNode.cljs$lang$type = true;

cljs.core.HashCollisionNode.cljs$lang$ctorStr = "cljs.core/HashCollisionNode";

cljs.core.HashCollisionNode.cljs$lang$ctorPrWriter = (function (this__24859__auto__,writer__24860__auto__,opt__24861__auto__){
return cljs.core._write(writer__24860__auto__,"cljs.core/HashCollisionNode");
});

cljs.core.__GT_HashCollisionNode = (function __GT_HashCollisionNode(edit,collision_hash,cnt,arr){
return (new cljs.core.HashCollisionNode(edit,collision_hash,cnt,arr));
});

cljs.core.create_node = (function() {
var create_node = null;
var create_node__6 = (function (shift,key1,val1,key2hash,key2,val2){
var key1hash = cljs.core.hash(key1);
if((key1hash === key2hash)){
return (new cljs.core.HashCollisionNode(null,key1hash,(2),[key1,val1,key2,val2]));
} else {
var added_leaf_QMARK_ = (new cljs.core.Box(false));
return cljs.core.BitmapIndexedNode.EMPTY.inode_assoc(shift,key1hash,key1,val1,added_leaf_QMARK_).inode_assoc(shift,key2hash,key2,val2,added_leaf_QMARK_);
}
});
var create_node__7 = (function (edit,shift,key1,val1,key2hash,key2,val2){
var key1hash = cljs.core.hash(key1);
if((key1hash === key2hash)){
return (new cljs.core.HashCollisionNode(null,key1hash,(2),[key1,val1,key2,val2]));
} else {
var added_leaf_QMARK_ = (new cljs.core.Box(false));
return cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit,shift,key1hash,key1,val1,added_leaf_QMARK_).inode_assoc_BANG_(edit,shift,key2hash,key2,val2,added_leaf_QMARK_);
}
});
create_node = function(edit,shift,key1,val1,key2hash,key2,val2){
switch(arguments.length){
case 6:
return create_node__6.call(this,edit,shift,key1,val1,key2hash,key2);
case 7:
return create_node__7.call(this,edit,shift,key1,val1,key2hash,key2,val2);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
create_node.cljs$core$IFn$_invoke$arity$6 = create_node__6;
create_node.cljs$core$IFn$_invoke$arity$7 = create_node__7;
return create_node;
})()
;

/**
* @constructor
*/
cljs.core.NodeSeq = (function (meta,nodes,i,s,__hash){
this.meta = meta;
this.nodes = nodes;
this.i = i;
this.s = s;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32374860;
})
cljs.core.NodeSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.NodeSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.NodeSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.NodeSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__24693__auto__ = self__.__hash;
if(!((h__24693__auto__ == null))){
return h__24693__auto__;
} else {
var h__24693__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__24693__auto____$1;

return h__24693__auto____$1;
}
});

cljs.core.NodeSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.NodeSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.NodeSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.NodeSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.NodeSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.s == null)){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(self__.nodes[self__.i]),(self__.nodes[(self__.i + (1))])], null);
} else {
return cljs.core.first(self__.s);
}
});

cljs.core.NodeSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.s == null)){
var G__29842 = self__.nodes;
var G__29843 = (self__.i + (2));
var G__29844 = null;
return (cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3 ? cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3(G__29842,G__29843,G__29844) : cljs.core.create_inode_seq.call(null,G__29842,G__29843,G__29844));
} else {
var G__29845 = self__.nodes;
var G__29846 = self__.i;
var G__29847 = cljs.core.next(self__.s);
return (cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3 ? cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3(G__29845,G__29846,G__29847) : cljs.core.create_inode_seq.call(null,G__29845,G__29846,G__29847));
}
});

cljs.core.NodeSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return this$__$1;
});

cljs.core.NodeSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.NodeSeq(meta__$1,self__.nodes,self__.i,self__.s,self__.__hash));
});

cljs.core.NodeSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.NodeSeq.cljs$lang$type = true;

cljs.core.NodeSeq.cljs$lang$ctorStr = "cljs.core/NodeSeq";

cljs.core.NodeSeq.cljs$lang$ctorPrWriter = (function (this__24859__auto__,writer__24860__auto__,opt__24861__auto__){
return cljs.core._write(writer__24860__auto__,"cljs.core/NodeSeq");
});

cljs.core.__GT_NodeSeq = (function __GT_NodeSeq(meta,nodes,i,s,__hash){
return (new cljs.core.NodeSeq(meta,nodes,i,s,__hash));
});

(cljs.core.NodeSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__25250__auto__ = this;
return cljs.core.es6_iterator(this__25250__auto__);
}));
cljs.core.create_inode_seq = (function() {
var create_inode_seq = null;
var create_inode_seq__1 = (function (nodes){
return create_inode_seq.cljs$core$IFn$_invoke$arity$3(nodes,(0),null);
});
var create_inode_seq__3 = (function (nodes,i,s){
if((s == null)){
var len = nodes.length;
var j = i;
while(true){
if((j < len)){
if(!(((nodes[j]) == null))){
return (new cljs.core.NodeSeq(null,nodes,j,null,null));
} else {
var temp__4124__auto__ = (nodes[(j + (1))]);
if(cljs.core.truth_(temp__4124__auto__)){
var node = temp__4124__auto__;
var temp__4124__auto____$1 = node.inode_seq();
if(cljs.core.truth_(temp__4124__auto____$1)){
var node_seq = temp__4124__auto____$1;
return (new cljs.core.NodeSeq(null,nodes,(j + (2)),node_seq,null));
} else {
var G__29851 = (j + (2));
j = G__29851;
continue;
}
} else {
var G__29852 = (j + (2));
j = G__29852;
continue;
}
}
} else {
return null;
}
break;
}
} else {
return (new cljs.core.NodeSeq(null,nodes,i,s,null));
}
});
create_inode_seq = function(nodes,i,s){
switch(arguments.length){
case 1:
return create_inode_seq__1.call(this,nodes);
case 3:
return create_inode_seq__3.call(this,nodes,i,s);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
create_inode_seq.cljs$core$IFn$_invoke$arity$1 = create_inode_seq__1;
create_inode_seq.cljs$core$IFn$_invoke$arity$3 = create_inode_seq__3;
return create_inode_seq;
})()
;

/**
* @constructor
*/
cljs.core.ArrayNodeSeq = (function (meta,nodes,i,s,__hash){
this.meta = meta;
this.nodes = nodes;
this.i = i;
this.s = s;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32374860;
})
cljs.core.ArrayNodeSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.ArrayNodeSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__24693__auto__ = self__.__hash;
if(!((h__24693__auto__ == null))){
return h__24693__auto__;
} else {
var h__24693__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__24693__auto____$1;

return h__24693__auto____$1;
}
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.first(self__.s);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var G__29853 = null;
var G__29854 = self__.nodes;
var G__29855 = self__.i;
var G__29856 = cljs.core.next(self__.s);
return (cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$4(G__29853,G__29854,G__29855,G__29856) : cljs.core.create_array_node_seq.call(null,G__29853,G__29854,G__29855,G__29856));
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return this$__$1;
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.ArrayNodeSeq(meta__$1,self__.nodes,self__.i,self__.s,self__.__hash));
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.ArrayNodeSeq.cljs$lang$type = true;

cljs.core.ArrayNodeSeq.cljs$lang$ctorStr = "cljs.core/ArrayNodeSeq";

cljs.core.ArrayNodeSeq.cljs$lang$ctorPrWriter = (function (this__24859__auto__,writer__24860__auto__,opt__24861__auto__){
return cljs.core._write(writer__24860__auto__,"cljs.core/ArrayNodeSeq");
});

cljs.core.__GT_ArrayNodeSeq = (function __GT_ArrayNodeSeq(meta,nodes,i,s,__hash){
return (new cljs.core.ArrayNodeSeq(meta,nodes,i,s,__hash));
});

(cljs.core.ArrayNodeSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__25250__auto__ = this;
return cljs.core.es6_iterator(this__25250__auto__);
}));
cljs.core.create_array_node_seq = (function() {
var create_array_node_seq = null;
var create_array_node_seq__1 = (function (nodes){
return create_array_node_seq.cljs$core$IFn$_invoke$arity$4(null,nodes,(0),null);
});
var create_array_node_seq__4 = (function (meta,nodes,i,s){
if((s == null)){
var len = nodes.length;
var j = i;
while(true){
if((j < len)){
var temp__4124__auto__ = (nodes[j]);
if(cljs.core.truth_(temp__4124__auto__)){
var nj = temp__4124__auto__;
var temp__4124__auto____$1 = nj.inode_seq();
if(cljs.core.truth_(temp__4124__auto____$1)){
var ns = temp__4124__auto____$1;
return (new cljs.core.ArrayNodeSeq(meta,nodes,(j + (1)),ns,null));
} else {
var G__29861 = (j + (1));
j = G__29861;
continue;
}
} else {
var G__29862 = (j + (1));
j = G__29862;
continue;
}
} else {
return null;
}
break;
}
} else {
return (new cljs.core.ArrayNodeSeq(meta,nodes,i,s,null));
}
});
create_array_node_seq = function(meta,nodes,i,s){
switch(arguments.length){
case 1:
return create_array_node_seq__1.call(this,meta);
case 4:
return create_array_node_seq__4.call(this,meta,nodes,i,s);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
create_array_node_seq.cljs$core$IFn$_invoke$arity$1 = create_array_node_seq__1;
create_array_node_seq.cljs$core$IFn$_invoke$arity$4 = create_array_node_seq__4;
return create_array_node_seq;
})()
;

/**
* @constructor
*/
cljs.core.PersistentHashMap = (function (meta,cnt,root,has_nil_QMARK_,nil_val,__hash){
this.meta = meta;
this.cnt = cnt;
this.root = root;
this.has_nil_QMARK_ = has_nil_QMARK_;
this.nil_val = nil_val;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 16123663;
this.cljs$lang$protocol_mask$partition1$ = 8196;
})
cljs.core.PersistentHashMap.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentHashMap.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentHashMap.prototype.keys = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator((function (){var G__29864 = coll;
return (cljs.core.keys.cljs$core$IFn$_invoke$arity$1 ? cljs.core.keys.cljs$core$IFn$_invoke$arity$1(G__29864) : cljs.core.keys.call(null,G__29864));
})());
});

cljs.core.PersistentHashMap.prototype.entries = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_entries_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentHashMap.prototype.values = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator((function (){var G__29865 = coll;
return (cljs.core.vals.cljs$core$IFn$_invoke$arity$1 ? cljs.core.vals.cljs$core$IFn$_invoke$arity$1(G__29865) : cljs.core.vals.call(null,G__29865));
})());
});

cljs.core.PersistentHashMap.prototype.has = (function (k){
var self__ = this;
var coll = this;
return cljs.core.contains_QMARK_(coll,k);
});

cljs.core.PersistentHashMap.prototype.get = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentHashMap.prototype.forEach = (function (f){
var self__ = this;
var coll = this;
var seq__29866 = cljs.core.seq(coll);
var chunk__29867 = null;
var count__29868 = (0);
var i__29869 = (0);
while(true){
if((i__29869 < count__29868)){
var vec__29870 = chunk__29867.cljs$core$IIndexed$_nth$arity$2(null,i__29869);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__29870,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__29870,(1),null);
var G__29871_29882 = v;
var G__29872_29883 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__29871_29882,G__29872_29883) : f.call(null,G__29871_29882,G__29872_29883));

var G__29884 = seq__29866;
var G__29885 = chunk__29867;
var G__29886 = count__29868;
var G__29887 = (i__29869 + (1));
seq__29866 = G__29884;
chunk__29867 = G__29885;
count__29868 = G__29886;
i__29869 = G__29887;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__29866);
if(temp__4126__auto__){
var seq__29866__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__29866__$1)){
var c__25059__auto__ = cljs.core.chunk_first(seq__29866__$1);
var G__29888 = cljs.core.chunk_rest(seq__29866__$1);
var G__29889 = c__25059__auto__;
var G__29890 = cljs.core.count(c__25059__auto__);
var G__29891 = (0);
seq__29866 = G__29888;
chunk__29867 = G__29889;
count__29868 = G__29890;
i__29869 = G__29891;
continue;
} else {
var vec__29873 = cljs.core.first(seq__29866__$1);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__29873,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__29873,(1),null);
var G__29874_29892 = v;
var G__29875_29893 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__29874_29892,G__29875_29893) : f.call(null,G__29874_29892,G__29875_29893));

var G__29894 = cljs.core.next(seq__29866__$1);
var G__29895 = null;
var G__29896 = (0);
var G__29897 = (0);
seq__29866 = G__29894;
chunk__29867 = G__29895;
count__29868 = G__29896;
i__29869 = G__29897;
continue;
}
} else {
return null;
}
}
break;
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.PersistentHashMap.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
if((k == null)){
if(self__.has_nil_QMARK_){
return self__.nil_val;
} else {
return not_found;
}
} else {
if((self__.root == null)){
return not_found;
} else {
return self__.root.inode_lookup((0),cljs.core.hash(k),k,not_found);

}
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = (function (coll,f,init){
var self__ = this;
var coll__$1 = this;
var init__$1 = ((self__.has_nil_QMARK_)?(function (){var G__29876 = init;
var G__29877 = null;
var G__29878 = self__.nil_val;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__29876,G__29877,G__29878) : f.call(null,G__29876,G__29877,G__29878));
})():init);
if(cljs.core.reduced_QMARK_(init__$1)){
var G__29879 = init__$1;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__29879) : cljs.core.deref.call(null,G__29879));
} else {
if(!((self__.root == null))){
return self__.root.kv_reduce(f,init__$1);
} else {
return init__$1;

}
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentHashMap.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.PersistentHashMap(self__.meta,self__.cnt,self__.root,self__.has_nil_QMARK_,self__.nil_val,self__.__hash));
});

cljs.core.PersistentHashMap.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.cnt;
});

cljs.core.PersistentHashMap.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__24693__auto__ = self__.__hash;
if(!((h__24693__auto__ == null))){
return h__24693__auto__;
} else {
var h__24693__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
self__.__hash = h__24693__auto____$1;

return h__24693__auto____$1;
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_map(coll__$1,other);
});

cljs.core.PersistentHashMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.TransientHashMap((function (){var obj29881 = {};
return obj29881;
})(),self__.root,self__.cnt,self__.has_nil_QMARK_,self__.nil_val));
});

cljs.core.PersistentHashMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._with_meta(cljs.core.PersistentHashMap.EMPTY,self__.meta);
});

cljs.core.PersistentHashMap.prototype.cljs$core$IMap$_dissoc$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
if((k == null)){
if(self__.has_nil_QMARK_){
return (new cljs.core.PersistentHashMap(self__.meta,(self__.cnt - (1)),self__.root,false,null,null));
} else {
return coll__$1;
}
} else {
if((self__.root == null)){
return coll__$1;
} else {
var new_root = self__.root.inode_without((0),cljs.core.hash(k),k);
if((new_root === self__.root)){
return coll__$1;
} else {
return (new cljs.core.PersistentHashMap(self__.meta,(self__.cnt - (1)),new_root,self__.has_nil_QMARK_,self__.nil_val,null));
}

}
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (coll,k,v){
var self__ = this;
var coll__$1 = this;
if((k == null)){
if((self__.has_nil_QMARK_) && ((v === self__.nil_val))){
return coll__$1;
} else {
return (new cljs.core.PersistentHashMap(self__.meta,((self__.has_nil_QMARK_)?self__.cnt:(self__.cnt + (1))),self__.root,true,v,null));
}
} else {
var added_leaf_QMARK_ = (new cljs.core.Box(false));
var new_root = (((self__.root == null))?cljs.core.BitmapIndexedNode.EMPTY:self__.root).inode_assoc((0),cljs.core.hash(k),k,v,added_leaf_QMARK_);
if((new_root === self__.root)){
return coll__$1;
} else {
return (new cljs.core.PersistentHashMap(self__.meta,((added_leaf_QMARK_.val)?(self__.cnt + (1)):self__.cnt),new_root,self__.has_nil_QMARK_,self__.nil_val,null));
}
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
if((k == null)){
return self__.has_nil_QMARK_;
} else {
if((self__.root == null)){
return false;
} else {
return !((self__.root.inode_lookup((0),cljs.core.hash(k),k,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel));

}
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
var s = ((!((self__.root == null)))?self__.root.inode_seq():null);
if(self__.has_nil_QMARK_){
return cljs.core.cons(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null,self__.nil_val], null),s);
} else {
return s;
}
} else {
return null;
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentHashMap(meta__$1,self__.cnt,self__.root,self__.has_nil_QMARK_,self__.nil_val,self__.__hash));
});

cljs.core.PersistentHashMap.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,entry){
var self__ = this;
var coll__$1 = this;
if(cljs.core.vector_QMARK_(entry)){
return cljs.core._assoc(coll__$1,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(1)));
} else {
var ret = coll__$1;
var es = cljs.core.seq(entry);
while(true){
if((es == null)){
return ret;
} else {
var e = cljs.core.first(es);
if(cljs.core.vector_QMARK_(e)){
var G__29898 = cljs.core._assoc(ret,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e,(1)));
var G__29899 = cljs.core.next(es);
ret = G__29898;
es = G__29899;
continue;
} else {
throw (new Error("conj on a map takes map entries or seqables of map entries"));
}
}
break;
}
}
});

cljs.core.PersistentHashMap.prototype.call = (function() {
var G__29900 = null;
var G__29900__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__29900__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__29900 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__29900__2.call(this,self__,k);
case 3:
return G__29900__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__29900.cljs$core$IFn$_invoke$arity$2 = G__29900__2;
G__29900.cljs$core$IFn$_invoke$arity$3 = G__29900__3;
return G__29900;
})()
;

cljs.core.PersistentHashMap.prototype.apply = (function (self__,args29863){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args29863)));
});

cljs.core.PersistentHashMap.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentHashMap.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.PersistentHashMap.cljs$lang$type = true;

cljs.core.PersistentHashMap.cljs$lang$ctorStr = "cljs.core/PersistentHashMap";

cljs.core.PersistentHashMap.cljs$lang$ctorPrWriter = (function (this__24859__auto__,writer__24860__auto__,opt__24861__auto__){
return cljs.core._write(writer__24860__auto__,"cljs.core/PersistentHashMap");
});

cljs.core.__GT_PersistentHashMap = (function __GT_PersistentHashMap(meta,cnt,root,has_nil_QMARK_,nil_val,__hash){
return (new cljs.core.PersistentHashMap(meta,cnt,root,has_nil_QMARK_,nil_val,__hash));
});

cljs.core.PersistentHashMap.EMPTY = (new cljs.core.PersistentHashMap(null,(0),null,false,null,(0)));
cljs.core.PersistentHashMap.fromArrays = (function (ks,vs){
var len = ks.length;
var i = (0);
var out = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
while(true){
if((i < len)){
var G__29901 = (i + (1));
var G__29902 = out.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3(null,(ks[i]),(vs[i]));
i = G__29901;
out = G__29902;
continue;
} else {
return cljs.core.persistent_BANG_(out);
}
break;
}
});
(cljs.core.PersistentHashMap.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__25250__auto__ = this;
return cljs.core.es6_iterator(this__25250__auto__);
}));

/**
* @constructor
*/
cljs.core.TransientHashMap = (function (edit,root,count,has_nil_QMARK_,nil_val){
this.edit = edit;
this.root = root;
this.count = count;
this.has_nil_QMARK_ = has_nil_QMARK_;
this.nil_val = nil_val;
this.cljs$lang$protocol_mask$partition1$ = 56;
this.cljs$lang$protocol_mask$partition0$ = 258;
})
cljs.core.TransientHashMap.prototype.cljs$core$ITransientMap$_dissoc_BANG_$arity$2 = (function (tcoll,key){
var self__ = this;
var tcoll__$1 = this;
return tcoll__$1.without_BANG_(key);
});

cljs.core.TransientHashMap.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = (function (tcoll,key,val){
var self__ = this;
var tcoll__$1 = this;
return tcoll__$1.assoc_BANG_(key,val);
});

cljs.core.TransientHashMap.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = (function (tcoll,val){
var self__ = this;
var tcoll__$1 = this;
return tcoll__$1.conj_BANG_(val);
});

cljs.core.TransientHashMap.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
return tcoll__$1.persistent_BANG_();
});

cljs.core.TransientHashMap.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (tcoll,k){
var self__ = this;
var tcoll__$1 = this;
if((k == null)){
if(self__.has_nil_QMARK_){
return self__.nil_val;
} else {
return null;
}
} else {
if((self__.root == null)){
return null;
} else {
return self__.root.inode_lookup((0),cljs.core.hash(k),k);
}
}
});

cljs.core.TransientHashMap.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (tcoll,k,not_found){
var self__ = this;
var tcoll__$1 = this;
if((k == null)){
if(self__.has_nil_QMARK_){
return self__.nil_val;
} else {
return not_found;
}
} else {
if((self__.root == null)){
return not_found;
} else {
return self__.root.inode_lookup((0),cljs.core.hash(k),k,not_found);
}
}
});

cljs.core.TransientHashMap.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if(self__.edit){
return self__.count;
} else {
throw (new Error("count after persistent!"));
}
});

cljs.core.TransientHashMap.prototype.conj_BANG_ = (function (o){
var self__ = this;
var tcoll = this;
if(self__.edit){
if((function (){var G__29903 = o;
if(G__29903){
var bit__24953__auto__ = (G__29903.cljs$lang$protocol_mask$partition0$ & (2048));
if((bit__24953__auto__) || (G__29903.cljs$core$IMapEntry$)){
return true;
} else {
if((!G__29903.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IMapEntry,G__29903);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IMapEntry,G__29903);
}
})()){
return tcoll.assoc_BANG_((function (){var G__29904 = o;
return (cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__29904) : cljs.core.key.call(null,G__29904));
})(),(function (){var G__29905 = o;
return (cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(G__29905) : cljs.core.val.call(null,G__29905));
})());
} else {
var es = cljs.core.seq(o);
var tcoll__$1 = tcoll;
while(true){
var temp__4124__auto__ = cljs.core.first(es);
if(cljs.core.truth_(temp__4124__auto__)){
var e = temp__4124__auto__;
var G__29908 = cljs.core.next(es);
var G__29909 = tcoll__$1.assoc_BANG_((function (){var G__29906 = e;
return (cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__29906) : cljs.core.key.call(null,G__29906));
})(),(function (){var G__29907 = e;
return (cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(G__29907) : cljs.core.val.call(null,G__29907));
})());
es = G__29908;
tcoll__$1 = G__29909;
continue;
} else {
return tcoll__$1;
}
break;
}
}
} else {
throw (new Error("conj! after persistent"));
}
});

cljs.core.TransientHashMap.prototype.assoc_BANG_ = (function (k,v){
var self__ = this;
var tcoll = this;
if(self__.edit){
if((k == null)){
if((self__.nil_val === v)){
} else {
self__.nil_val = v;
}

if(self__.has_nil_QMARK_){
} else {
self__.count = (self__.count + (1));

self__.has_nil_QMARK_ = true;
}

return tcoll;
} else {
var added_leaf_QMARK_ = (new cljs.core.Box(false));
var node = (((self__.root == null))?cljs.core.BitmapIndexedNode.EMPTY:self__.root).inode_assoc_BANG_(self__.edit,(0),cljs.core.hash(k),k,v,added_leaf_QMARK_);
if((node === self__.root)){
} else {
self__.root = node;
}

if(added_leaf_QMARK_.val){
self__.count = (self__.count + (1));
} else {
}

return tcoll;
}
} else {
throw (new Error("assoc! after persistent!"));
}
});

cljs.core.TransientHashMap.prototype.without_BANG_ = (function (k){
var self__ = this;
var tcoll = this;
if(self__.edit){
if((k == null)){
if(self__.has_nil_QMARK_){
self__.has_nil_QMARK_ = false;

self__.nil_val = null;

self__.count = (self__.count - (1));

return tcoll;
} else {
return tcoll;
}
} else {
if((self__.root == null)){
return tcoll;
} else {
var removed_leaf_QMARK_ = (new cljs.core.Box(false));
var node = self__.root.inode_without_BANG_(self__.edit,(0),cljs.core.hash(k),k,removed_leaf_QMARK_);
if((node === self__.root)){
} else {
self__.root = node;
}

if(cljs.core.truth_((removed_leaf_QMARK_[(0)]))){
self__.count = (self__.count - (1));
} else {
}

return tcoll;
}
}
} else {
throw (new Error("dissoc! after persistent!"));
}
});

cljs.core.TransientHashMap.prototype.persistent_BANG_ = (function (){
var self__ = this;
var tcoll = this;
if(self__.edit){
self__.edit = null;

return (new cljs.core.PersistentHashMap(null,self__.count,self__.root,self__.has_nil_QMARK_,self__.nil_val,null));
} else {
throw (new Error("persistent! called twice"));
}
});

cljs.core.TransientHashMap.cljs$lang$type = true;

cljs.core.TransientHashMap.cljs$lang$ctorStr = "cljs.core/TransientHashMap";

cljs.core.TransientHashMap.cljs$lang$ctorPrWriter = (function (this__24859__auto__,writer__24860__auto__,opt__24861__auto__){
return cljs.core._write(writer__24860__auto__,"cljs.core/TransientHashMap");
});

cljs.core.__GT_TransientHashMap = (function __GT_TransientHashMap(edit,root,count,has_nil_QMARK_,nil_val){
return (new cljs.core.TransientHashMap(edit,root,count,has_nil_QMARK_,nil_val));
});

cljs.core.tree_map_seq_push = (function tree_map_seq_push(node,stack,ascending_QMARK_){
var t = node;
var stack__$1 = stack;
while(true){
if(!((t == null))){
var G__29910 = ((ascending_QMARK_)?t.left:t.right);
var G__29911 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(stack__$1,t);
t = G__29910;
stack__$1 = G__29911;
continue;
} else {
return stack__$1;
}
break;
}
});

/**
* @constructor
*/
cljs.core.PersistentTreeMapSeq = (function (meta,stack,ascending_QMARK_,cnt,__hash){
this.meta = meta;
this.stack = stack;
this.ascending_QMARK_ = ascending_QMARK_;
this.cnt = cnt;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32374862;
})
cljs.core.PersistentTreeMapSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentTreeMapSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt < (0))){
return (cljs.core.count(cljs.core.next(coll__$1)) + (1));
} else {
return self__.cnt;
}
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__24693__auto__ = self__.__hash;
if(!((h__24693__auto__ == null))){
return h__24693__auto__;
} else {
var h__24693__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__24693__auto____$1;

return h__24693__auto____$1;
}
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return cljs.core.peek(self__.stack);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
var t = cljs.core.first(self__.stack);
var next_stack = cljs.core.tree_map_seq_push(((self__.ascending_QMARK_)?t.right:t.left),cljs.core.next(self__.stack),self__.ascending_QMARK_);
if(!((next_stack == null))){
return (new cljs.core.PersistentTreeMapSeq(null,next_stack,self__.ascending_QMARK_,(self__.cnt - (1)),null));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return this$__$1;
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeMapSeq(meta__$1,self__.stack,self__.ascending_QMARK_,self__.cnt,self__.__hash));
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.PersistentTreeMapSeq.cljs$lang$type = true;

cljs.core.PersistentTreeMapSeq.cljs$lang$ctorStr = "cljs.core/PersistentTreeMapSeq";

cljs.core.PersistentTreeMapSeq.cljs$lang$ctorPrWriter = (function (this__24859__auto__,writer__24860__auto__,opt__24861__auto__){
return cljs.core._write(writer__24860__auto__,"cljs.core/PersistentTreeMapSeq");
});

cljs.core.__GT_PersistentTreeMapSeq = (function __GT_PersistentTreeMapSeq(meta,stack,ascending_QMARK_,cnt,__hash){
return (new cljs.core.PersistentTreeMapSeq(meta,stack,ascending_QMARK_,cnt,__hash));
});

(cljs.core.PersistentTreeMapSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__25250__auto__ = this;
return cljs.core.es6_iterator(this__25250__auto__);
}));
cljs.core.create_tree_map_seq = (function create_tree_map_seq(tree,ascending_QMARK_,cnt){
return (new cljs.core.PersistentTreeMapSeq(null,cljs.core.tree_map_seq_push(tree,null,ascending_QMARK_),ascending_QMARK_,cnt,null));
});

cljs.core.balance_left = (function balance_left(key,val,ins,right){
if((ins instanceof cljs.core.RedNode)){
if((ins.left instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(ins.key,ins.val,ins.left.blacken(),(new cljs.core.BlackNode(key,val,ins.right,right,null)),null));
} else {
if((ins.right instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(ins.right.key,ins.right.val,(new cljs.core.BlackNode(ins.key,ins.val,ins.left,ins.right.left,null)),(new cljs.core.BlackNode(key,val,ins.right.right,right,null)),null));
} else {
return (new cljs.core.BlackNode(key,val,ins,right,null));

}
}
} else {
return (new cljs.core.BlackNode(key,val,ins,right,null));
}
});
cljs.core.balance_right = (function balance_right(key,val,left,ins){
if((ins instanceof cljs.core.RedNode)){
if((ins.right instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(ins.key,ins.val,(new cljs.core.BlackNode(key,val,left,ins.left,null)),ins.right.blacken(),null));
} else {
if((ins.left instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(ins.left.key,ins.left.val,(new cljs.core.BlackNode(key,val,left,ins.left.left,null)),(new cljs.core.BlackNode(ins.key,ins.val,ins.left.right,ins.right,null)),null));
} else {
return (new cljs.core.BlackNode(key,val,left,ins,null));

}
}
} else {
return (new cljs.core.BlackNode(key,val,left,ins,null));
}
});
cljs.core.balance_left_del = (function balance_left_del(key,val,del,right){
if((del instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(key,val,del.blacken(),right,null));
} else {
if((right instanceof cljs.core.BlackNode)){
return cljs.core.balance_right(key,val,del,right.redden());
} else {
if(((right instanceof cljs.core.RedNode)) && ((right.left instanceof cljs.core.BlackNode))){
return (new cljs.core.RedNode(right.left.key,right.left.val,(new cljs.core.BlackNode(key,val,del,right.left.left,null)),cljs.core.balance_right(right.key,right.val,right.left.right,right.right.redden()),null));
} else {
throw (new Error("red-black tree invariant violation"));

}
}
}
});
cljs.core.balance_right_del = (function balance_right_del(key,val,left,del){
if((del instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(key,val,left,del.blacken(),null));
} else {
if((left instanceof cljs.core.BlackNode)){
return cljs.core.balance_left(key,val,left.redden(),del);
} else {
if(((left instanceof cljs.core.RedNode)) && ((left.right instanceof cljs.core.BlackNode))){
return (new cljs.core.RedNode(left.right.key,left.right.val,cljs.core.balance_left(left.key,left.val,left.left.redden(),left.right.left),(new cljs.core.BlackNode(key,val,left.right.right,del,null)),null));
} else {
throw (new Error("red-black tree invariant violation"));

}
}
}
});
cljs.core.tree_map_kv_reduce = (function tree_map_kv_reduce(node,f,init){
var init__$1 = ((!((node.left == null)))?tree_map_kv_reduce(node.left,f,init):init);
if(cljs.core.reduced_QMARK_(init__$1)){
var G__29924 = init__$1;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__29924) : cljs.core.deref.call(null,G__29924));
} else {
var init__$2 = (function (){var G__29925 = init__$1;
var G__29926 = node.key;
var G__29927 = node.val;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__29925,G__29926,G__29927) : f.call(null,G__29925,G__29926,G__29927));
})();
if(cljs.core.reduced_QMARK_(init__$2)){
var G__29928 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__29928) : cljs.core.deref.call(null,G__29928));
} else {
var init__$3 = ((!((node.right == null)))?tree_map_kv_reduce(node.right,f,init__$2):init__$2);
if(cljs.core.reduced_QMARK_(init__$3)){
var G__29929 = init__$3;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__29929) : cljs.core.deref.call(null,G__29929));
} else {
return init__$3;
}
}
}
});

/**
* @constructor
*/
cljs.core.BlackNode = (function (key,val,left,right,__hash){
this.key = key;
this.val = val;
this.left = left;
this.right = right;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32402207;
})
cljs.core.BlackNode.prototype.add_right = (function (ins){
var self__ = this;
var node = this;
return ins.balance_right(node);
});

cljs.core.BlackNode.prototype.redden = (function (){
var self__ = this;
var node = this;
return (new cljs.core.RedNode(self__.key,self__.val,self__.left,self__.right,null));
});

cljs.core.BlackNode.prototype.blacken = (function (){
var self__ = this;
var node = this;
return node;
});

cljs.core.BlackNode.prototype.add_left = (function (ins){
var self__ = this;
var node = this;
return ins.balance_left(node);
});

cljs.core.BlackNode.prototype.replace = (function (key__$1,val__$1,left__$1,right__$1){
var self__ = this;
var node = this;
return (new cljs.core.BlackNode(key__$1,val__$1,left__$1,right__$1,null));
});

cljs.core.BlackNode.prototype.balance_left = (function (parent){
var self__ = this;
var node = this;
return (new cljs.core.BlackNode(parent.key,parent.val,node,parent.right,null));
});

cljs.core.BlackNode.prototype.balance_right = (function (parent){
var self__ = this;
var node = this;
return (new cljs.core.BlackNode(parent.key,parent.val,parent.left,node,null));
});

cljs.core.BlackNode.prototype.remove_left = (function (del){
var self__ = this;
var node = this;
return cljs.core.balance_left_del(self__.key,self__.val,del,self__.right);
});

cljs.core.BlackNode.prototype.kv_reduce = (function (f,init){
var self__ = this;
var node = this;
return cljs.core.tree_map_kv_reduce(node,f,init);
});

cljs.core.BlackNode.prototype.remove_right = (function (del){
var self__ = this;
var node = this;
return cljs.core.balance_right_del(self__.key,self__.val,self__.left,del);
});

cljs.core.BlackNode.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (node,k){
var self__ = this;
var node__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(node__$1,k,null);
});

cljs.core.BlackNode.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (node,k,not_found){
var self__ = this;
var node__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(node__$1,k,not_found);
});

cljs.core.BlackNode.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (node,n){
var self__ = this;
var node__$1 = this;
if((n === (0))){
return self__.key;
} else {
if((n === (1))){
return self__.val;
} else {
return null;

}
}
});

cljs.core.BlackNode.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (node,n,not_found){
var self__ = this;
var node__$1 = this;
if((n === (0))){
return self__.key;
} else {
if((n === (1))){
return self__.val;
} else {
return not_found;

}
}
});

cljs.core.BlackNode.prototype.cljs$core$IVector$_assoc_n$arity$3 = (function (node,n,v){
var self__ = this;
var node__$1 = this;
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val], null).cljs$core$IVector$_assoc_n$arity$3(null,n,v);
});

cljs.core.BlackNode.prototype.cljs$core$IMeta$_meta$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return null;
});

cljs.core.BlackNode.prototype.cljs$core$ICounted$_count$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return (2);
});

cljs.core.BlackNode.prototype.cljs$core$IMapEntry$_key$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return self__.key;
});

cljs.core.BlackNode.prototype.cljs$core$IMapEntry$_val$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return self__.val;
});

cljs.core.BlackNode.prototype.cljs$core$IStack$_peek$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return self__.val;
});

cljs.core.BlackNode.prototype.cljs$core$IStack$_pop$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key], null);
});

cljs.core.BlackNode.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__24693__auto__ = self__.__hash;
if(!((h__24693__auto__ == null))){
return h__24693__auto__;
} else {
var h__24693__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__24693__auto____$1;

return h__24693__auto____$1;
}
});

cljs.core.BlackNode.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.BlackNode.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return cljs.core.PersistentVector.EMPTY;
});

cljs.core.BlackNode.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (node,f){
var self__ = this;
var node__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(node__$1,f);
});

cljs.core.BlackNode.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (node,f,start){
var self__ = this;
var node__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3(node__$1,f,start);
});

cljs.core.BlackNode.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (node,k,v){
var self__ = this;
var node__$1 = this;
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val], null),k,v);
});

cljs.core.BlackNode.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return cljs.core._conj(cljs.core._conj(cljs.core.List.EMPTY,self__.val),self__.key);
});

cljs.core.BlackNode.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (node,meta){
var self__ = this;
var node__$1 = this;
return cljs.core.with_meta(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val], null),meta);
});

cljs.core.BlackNode.prototype.cljs$core$ICollection$_conj$arity$2 = (function (node,o){
var self__ = this;
var node__$1 = this;
return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val,o], null);
});

cljs.core.BlackNode.prototype.call = (function() {
var G__29931 = null;
var G__29931__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var node = self____$1;
return node.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__29931__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var node = self____$1;
return node.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__29931 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__29931__2.call(this,self__,k);
case 3:
return G__29931__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__29931.cljs$core$IFn$_invoke$arity$2 = G__29931__2;
G__29931.cljs$core$IFn$_invoke$arity$3 = G__29931__3;
return G__29931;
})()
;

cljs.core.BlackNode.prototype.apply = (function (self__,args29930){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args29930)));
});

cljs.core.BlackNode.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var node = this;
return node.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.BlackNode.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var node = this;
return node.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.BlackNode.cljs$lang$type = true;

cljs.core.BlackNode.cljs$lang$ctorStr = "cljs.core/BlackNode";

cljs.core.BlackNode.cljs$lang$ctorPrWriter = (function (this__24859__auto__,writer__24860__auto__,opt__24861__auto__){
return cljs.core._write(writer__24860__auto__,"cljs.core/BlackNode");
});

cljs.core.__GT_BlackNode = (function __GT_BlackNode(key,val,left,right,__hash){
return (new cljs.core.BlackNode(key,val,left,right,__hash));
});

(cljs.core.BlackNode.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__25250__auto__ = this;
return cljs.core.es6_iterator(this__25250__auto__);
}));

/**
* @constructor
*/
cljs.core.RedNode = (function (key,val,left,right,__hash){
this.key = key;
this.val = val;
this.left = left;
this.right = right;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32402207;
})
cljs.core.RedNode.prototype.add_right = (function (ins){
var self__ = this;
var node = this;
return (new cljs.core.RedNode(self__.key,self__.val,self__.left,ins,null));
});

cljs.core.RedNode.prototype.redden = (function (){
var self__ = this;
var node = this;
throw (new Error("red-black tree invariant violation"));
});

cljs.core.RedNode.prototype.blacken = (function (){
var self__ = this;
var node = this;
return (new cljs.core.BlackNode(self__.key,self__.val,self__.left,self__.right,null));
});

cljs.core.RedNode.prototype.add_left = (function (ins){
var self__ = this;
var node = this;
return (new cljs.core.RedNode(self__.key,self__.val,ins,self__.right,null));
});

cljs.core.RedNode.prototype.replace = (function (key__$1,val__$1,left__$1,right__$1){
var self__ = this;
var node = this;
return (new cljs.core.RedNode(key__$1,val__$1,left__$1,right__$1,null));
});

cljs.core.RedNode.prototype.balance_left = (function (parent){
var self__ = this;
var node = this;
if((self__.left instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(self__.key,self__.val,self__.left.blacken(),(new cljs.core.BlackNode(parent.key,parent.val,self__.right,parent.right,null)),null));
} else {
if((self__.right instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(self__.right.key,self__.right.val,(new cljs.core.BlackNode(self__.key,self__.val,self__.left,self__.right.left,null)),(new cljs.core.BlackNode(parent.key,parent.val,self__.right.right,parent.right,null)),null));
} else {
return (new cljs.core.BlackNode(parent.key,parent.val,node,parent.right,null));

}
}
});

cljs.core.RedNode.prototype.balance_right = (function (parent){
var self__ = this;
var node = this;
if((self__.right instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(self__.key,self__.val,(new cljs.core.BlackNode(parent.key,parent.val,parent.left,self__.left,null)),self__.right.blacken(),null));
} else {
if((self__.left instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(self__.left.key,self__.left.val,(new cljs.core.BlackNode(parent.key,parent.val,parent.left,self__.left.left,null)),(new cljs.core.BlackNode(self__.key,self__.val,self__.left.right,self__.right,null)),null));
} else {
return (new cljs.core.BlackNode(parent.key,parent.val,parent.left,node,null));

}
}
});

cljs.core.RedNode.prototype.remove_left = (function (del){
var self__ = this;
var node = this;
return (new cljs.core.RedNode(self__.key,self__.val,del,self__.right,null));
});

cljs.core.RedNode.prototype.kv_reduce = (function (f,init){
var self__ = this;
var node = this;
return cljs.core.tree_map_kv_reduce(node,f,init);
});

cljs.core.RedNode.prototype.remove_right = (function (del){
var self__ = this;
var node = this;
return (new cljs.core.RedNode(self__.key,self__.val,self__.left,del,null));
});

cljs.core.RedNode.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (node,k){
var self__ = this;
var node__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(node__$1,k,null);
});

cljs.core.RedNode.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (node,k,not_found){
var self__ = this;
var node__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(node__$1,k,not_found);
});

cljs.core.RedNode.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (node,n){
var self__ = this;
var node__$1 = this;
if((n === (0))){
return self__.key;
} else {
if((n === (1))){
return self__.val;
} else {
return null;

}
}
});

cljs.core.RedNode.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (node,n,not_found){
var self__ = this;
var node__$1 = this;
if((n === (0))){
return self__.key;
} else {
if((n === (1))){
return self__.val;
} else {
return not_found;

}
}
});

cljs.core.RedNode.prototype.cljs$core$IVector$_assoc_n$arity$3 = (function (node,n,v){
var self__ = this;
var node__$1 = this;
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val], null).cljs$core$IVector$_assoc_n$arity$3(null,n,v);
});

cljs.core.RedNode.prototype.cljs$core$IMeta$_meta$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return null;
});

cljs.core.RedNode.prototype.cljs$core$ICounted$_count$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return (2);
});

cljs.core.RedNode.prototype.cljs$core$IMapEntry$_key$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return self__.key;
});

cljs.core.RedNode.prototype.cljs$core$IMapEntry$_val$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return self__.val;
});

cljs.core.RedNode.prototype.cljs$core$IStack$_peek$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return self__.val;
});

cljs.core.RedNode.prototype.cljs$core$IStack$_pop$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key], null);
});

cljs.core.RedNode.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__24693__auto__ = self__.__hash;
if(!((h__24693__auto__ == null))){
return h__24693__auto__;
} else {
var h__24693__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__24693__auto____$1;

return h__24693__auto____$1;
}
});

cljs.core.RedNode.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.RedNode.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return cljs.core.PersistentVector.EMPTY;
});

cljs.core.RedNode.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (node,f){
var self__ = this;
var node__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(node__$1,f);
});

cljs.core.RedNode.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (node,f,start){
var self__ = this;
var node__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3(node__$1,f,start);
});

cljs.core.RedNode.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (node,k,v){
var self__ = this;
var node__$1 = this;
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val], null),k,v);
});

cljs.core.RedNode.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return cljs.core._conj(cljs.core._conj(cljs.core.List.EMPTY,self__.val),self__.key);
});

cljs.core.RedNode.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (node,meta){
var self__ = this;
var node__$1 = this;
return cljs.core.with_meta(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val], null),meta);
});

cljs.core.RedNode.prototype.cljs$core$ICollection$_conj$arity$2 = (function (node,o){
var self__ = this;
var node__$1 = this;
return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val,o], null);
});

cljs.core.RedNode.prototype.call = (function() {
var G__29933 = null;
var G__29933__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var node = self____$1;
return node.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__29933__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var node = self____$1;
return node.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__29933 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__29933__2.call(this,self__,k);
case 3:
return G__29933__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__29933.cljs$core$IFn$_invoke$arity$2 = G__29933__2;
G__29933.cljs$core$IFn$_invoke$arity$3 = G__29933__3;
return G__29933;
})()
;

cljs.core.RedNode.prototype.apply = (function (self__,args29932){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args29932)));
});

cljs.core.RedNode.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var node = this;
return node.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.RedNode.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var node = this;
return node.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.RedNode.cljs$lang$type = true;

cljs.core.RedNode.cljs$lang$ctorStr = "cljs.core/RedNode";

cljs.core.RedNode.cljs$lang$ctorPrWriter = (function (this__24859__auto__,writer__24860__auto__,opt__24861__auto__){
return cljs.core._write(writer__24860__auto__,"cljs.core/RedNode");
});

cljs.core.__GT_RedNode = (function __GT_RedNode(key,val,left,right,__hash){
return (new cljs.core.RedNode(key,val,left,right,__hash));
});

(cljs.core.RedNode.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__25250__auto__ = this;
return cljs.core.es6_iterator(this__25250__auto__);
}));
cljs.core.tree_map_add = (function tree_map_add(comp,tree,k,v,found){
if((tree == null)){
return (new cljs.core.RedNode(k,v,null,null,null));
} else {
var c = (function (){var G__29946 = k;
var G__29947 = tree.key;
return (comp.cljs$core$IFn$_invoke$arity$2 ? comp.cljs$core$IFn$_invoke$arity$2(G__29946,G__29947) : comp.call(null,G__29946,G__29947));
})();
if((c === (0))){
(found[(0)] = tree);

return null;
} else {
if((c < (0))){
var ins = tree_map_add(comp,tree.left,k,v,found);
if(!((ins == null))){
return tree.add_left(ins);
} else {
return null;
}
} else {
var ins = tree_map_add(comp,tree.right,k,v,found);
if(!((ins == null))){
return tree.add_right(ins);
} else {
return null;
}

}
}
}
});
cljs.core.tree_map_append = (function tree_map_append(left,right){
if((left == null)){
return right;
} else {
if((right == null)){
return left;
} else {
if((left instanceof cljs.core.RedNode)){
if((right instanceof cljs.core.RedNode)){
var app = tree_map_append(left.right,right.left);
if((app instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(app.key,app.val,(new cljs.core.RedNode(left.key,left.val,left.left,app.left,null)),(new cljs.core.RedNode(right.key,right.val,app.right,right.right,null)),null));
} else {
return (new cljs.core.RedNode(left.key,left.val,left.left,(new cljs.core.RedNode(right.key,right.val,app,right.right,null)),null));
}
} else {
return (new cljs.core.RedNode(left.key,left.val,left.left,tree_map_append(left.right,right),null));
}
} else {
if((right instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(right.key,right.val,tree_map_append(left,right.left),right.right,null));
} else {
var app = tree_map_append(left.right,right.left);
if((app instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(app.key,app.val,(new cljs.core.BlackNode(left.key,left.val,left.left,app.left,null)),(new cljs.core.BlackNode(right.key,right.val,app.right,right.right,null)),null));
} else {
return cljs.core.balance_left_del(left.key,left.val,left.left,(new cljs.core.BlackNode(right.key,right.val,app,right.right,null)));
}

}
}
}
}
});
cljs.core.tree_map_remove = (function tree_map_remove(comp,tree,k,found){
if(!((tree == null))){
var c = (function (){var G__29966 = k;
var G__29967 = tree.key;
return (comp.cljs$core$IFn$_invoke$arity$2 ? comp.cljs$core$IFn$_invoke$arity$2(G__29966,G__29967) : comp.call(null,G__29966,G__29967));
})();
if((c === (0))){
(found[(0)] = tree);

return cljs.core.tree_map_append(tree.left,tree.right);
} else {
if((c < (0))){
var del = tree_map_remove(comp,tree.left,k,found);
if((!((del == null))) || (!(((found[(0)]) == null)))){
if((tree.left instanceof cljs.core.BlackNode)){
return cljs.core.balance_left_del(tree.key,tree.val,del,tree.right);
} else {
return (new cljs.core.RedNode(tree.key,tree.val,del,tree.right,null));
}
} else {
return null;
}
} else {
var del = tree_map_remove(comp,tree.right,k,found);
if((!((del == null))) || (!(((found[(0)]) == null)))){
if((tree.right instanceof cljs.core.BlackNode)){
return cljs.core.balance_right_del(tree.key,tree.val,tree.left,del);
} else {
return (new cljs.core.RedNode(tree.key,tree.val,tree.left,del,null));
}
} else {
return null;
}

}
}
} else {
return null;
}
});
cljs.core.tree_map_replace = (function tree_map_replace(comp,tree,k,v){
var tk = tree.key;
var c = (function (){var G__29978 = k;
var G__29979 = tk;
return (comp.cljs$core$IFn$_invoke$arity$2 ? comp.cljs$core$IFn$_invoke$arity$2(G__29978,G__29979) : comp.call(null,G__29978,G__29979));
})();
if((c === (0))){
return tree.replace(tk,v,tree.left,tree.right);
} else {
if((c < (0))){
return tree.replace(tk,tree.val,tree_map_replace(comp,tree.left,k,v),tree.right);
} else {
return tree.replace(tk,tree.val,tree.left,tree_map_replace(comp,tree.right,k,v));

}
}
});

/**
* @constructor
*/
cljs.core.PersistentTreeMap = (function (comp,tree,cnt,meta,__hash){
this.comp = comp;
this.tree = tree;
this.cnt = cnt;
this.meta = meta;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 418776847;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.PersistentTreeMap.prototype.forEach = (function (f){
var self__ = this;
var coll = this;
var seq__29981 = cljs.core.seq(coll);
var chunk__29982 = null;
var count__29983 = (0);
var i__29984 = (0);
while(true){
if((i__29984 < count__29983)){
var vec__29985 = chunk__29982.cljs$core$IIndexed$_nth$arity$2(null,i__29984);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__29985,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__29985,(1),null);
var G__29986_29998 = v;
var G__29987_29999 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__29986_29998,G__29987_29999) : f.call(null,G__29986_29998,G__29987_29999));

var G__30000 = seq__29981;
var G__30001 = chunk__29982;
var G__30002 = count__29983;
var G__30003 = (i__29984 + (1));
seq__29981 = G__30000;
chunk__29982 = G__30001;
count__29983 = G__30002;
i__29984 = G__30003;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__29981);
if(temp__4126__auto__){
var seq__29981__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__29981__$1)){
var c__25059__auto__ = cljs.core.chunk_first(seq__29981__$1);
var G__30004 = cljs.core.chunk_rest(seq__29981__$1);
var G__30005 = c__25059__auto__;
var G__30006 = cljs.core.count(c__25059__auto__);
var G__30007 = (0);
seq__29981 = G__30004;
chunk__29982 = G__30005;
count__29983 = G__30006;
i__29984 = G__30007;
continue;
} else {
var vec__29988 = cljs.core.first(seq__29981__$1);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__29988,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__29988,(1),null);
var G__29989_30008 = v;
var G__29990_30009 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__29989_30008,G__29990_30009) : f.call(null,G__29989_30008,G__29990_30009));

var G__30010 = cljs.core.next(seq__29981__$1);
var G__30011 = null;
var G__30012 = (0);
var G__30013 = (0);
seq__29981 = G__30010;
chunk__29982 = G__30011;
count__29983 = G__30012;
i__29984 = G__30013;
continue;
}
} else {
return null;
}
}
break;
}
});

cljs.core.PersistentTreeMap.prototype.get = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentTreeMap.prototype.entries = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_entries_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentTreeMap.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentTreeMap.prototype.keys = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator((function (){var G__29991 = coll;
return (cljs.core.keys.cljs$core$IFn$_invoke$arity$1 ? cljs.core.keys.cljs$core$IFn$_invoke$arity$1(G__29991) : cljs.core.keys.call(null,G__29991));
})());
});

cljs.core.PersistentTreeMap.prototype.values = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator((function (){var G__29992 = coll;
return (cljs.core.vals.cljs$core$IFn$_invoke$arity$1 ? cljs.core.vals.cljs$core$IFn$_invoke$arity$1(G__29992) : cljs.core.vals.call(null,G__29992));
})());
});

cljs.core.PersistentTreeMap.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentTreeMap.prototype.entry_at = (function (k){
var self__ = this;
var coll = this;
var t = self__.tree;
while(true){
if(!((t == null))){
var c = (function (){var G__29993 = k;
var G__29994 = t.key;
return (self__.comp.cljs$core$IFn$_invoke$arity$2 ? self__.comp.cljs$core$IFn$_invoke$arity$2(G__29993,G__29994) : self__.comp.call(null,G__29993,G__29994));
})();
if((c === (0))){
return t;
} else {
if((c < (0))){
var G__30014 = t.left;
t = G__30014;
continue;
} else {
var G__30015 = t.right;
t = G__30015;
continue;

}
}
} else {
return null;
}
break;
}
});

cljs.core.PersistentTreeMap.prototype.has = (function (k){
var self__ = this;
var coll = this;
return cljs.core.contains_QMARK_(coll,k);
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
var n = coll__$1.entry_at(k);
if(!((n == null))){
return n.val;
} else {
return not_found;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = (function (coll,f,init){
var self__ = this;
var coll__$1 = this;
if(!((self__.tree == null))){
return cljs.core.tree_map_kv_reduce(self__.tree,f,init);
} else {
return init;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.PersistentTreeMap(self__.comp,self__.tree,self__.cnt,self__.meta,self__.__hash));
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.cnt;
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IReversible$_rseq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
return cljs.core.create_tree_map_seq(self__.tree,false,self__.cnt);
} else {
return null;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__24693__auto__ = self__.__hash;
if(!((h__24693__auto__ == null))){
return h__24693__auto__;
} else {
var h__24693__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
self__.__hash = h__24693__auto____$1;

return h__24693__auto____$1;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_map(coll__$1,other);
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeMap(self__.comp,null,(0),self__.meta,(0)));
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IMap$_dissoc$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
var found = [null];
var t = cljs.core.tree_map_remove(self__.comp,self__.tree,k,found);
if((t == null)){
if((cljs.core.nth.cljs$core$IFn$_invoke$arity$2(found,(0)) == null)){
return coll__$1;
} else {
return (new cljs.core.PersistentTreeMap(self__.comp,null,(0),self__.meta,null));
}
} else {
return (new cljs.core.PersistentTreeMap(self__.comp,t.blacken(),(self__.cnt - (1)),self__.meta,null));
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (coll,k,v){
var self__ = this;
var coll__$1 = this;
var found = [null];
var t = cljs.core.tree_map_add(self__.comp,self__.tree,k,v,found);
if((t == null)){
var found_node = cljs.core.nth.cljs$core$IFn$_invoke$arity$2(found,(0));
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(v,found_node.val)){
return coll__$1;
} else {
return (new cljs.core.PersistentTreeMap(self__.comp,cljs.core.tree_map_replace(self__.comp,self__.tree,k,v),self__.cnt,self__.meta,null));
}
} else {
return (new cljs.core.PersistentTreeMap(self__.comp,t.blacken(),(self__.cnt + (1)),self__.meta,null));
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return !((coll__$1.entry_at(k) == null));
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
return cljs.core.create_tree_map_seq(self__.tree,true,self__.cnt);
} else {
return null;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeMap(self__.comp,self__.tree,self__.cnt,meta__$1,self__.__hash));
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,entry){
var self__ = this;
var coll__$1 = this;
if(cljs.core.vector_QMARK_(entry)){
return cljs.core._assoc(coll__$1,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(1)));
} else {
var ret = coll__$1;
var es = cljs.core.seq(entry);
while(true){
if((es == null)){
return ret;
} else {
var e = cljs.core.first(es);
if(cljs.core.vector_QMARK_(e)){
var G__30016 = cljs.core._assoc(ret,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e,(1)));
var G__30017 = cljs.core.next(es);
ret = G__30016;
es = G__30017;
continue;
} else {
throw (new Error("conj on a map takes map entries or seqables of map entries"));
}
}
break;
}
}
});

cljs.core.PersistentTreeMap.prototype.call = (function() {
var G__30018 = null;
var G__30018__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__30018__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__30018 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__30018__2.call(this,self__,k);
case 3:
return G__30018__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__30018.cljs$core$IFn$_invoke$arity$2 = G__30018__2;
G__30018.cljs$core$IFn$_invoke$arity$3 = G__30018__3;
return G__30018;
})()
;

cljs.core.PersistentTreeMap.prototype.apply = (function (self__,args29980){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args29980)));
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_sorted_seq$arity$2 = (function (coll,ascending_QMARK_){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
return cljs.core.create_tree_map_seq(self__.tree,ascending_QMARK_,self__.cnt);
} else {
return null;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_sorted_seq_from$arity$3 = (function (coll,k,ascending_QMARK_){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
var stack = null;
var t = self__.tree;
while(true){
if(!((t == null))){
var c = (function (){var G__29995 = k;
var G__29996 = t.key;
return (self__.comp.cljs$core$IFn$_invoke$arity$2 ? self__.comp.cljs$core$IFn$_invoke$arity$2(G__29995,G__29996) : self__.comp.call(null,G__29995,G__29996));
})();
if((c === (0))){
return (new cljs.core.PersistentTreeMapSeq(null,cljs.core.conj.cljs$core$IFn$_invoke$arity$2(stack,t),ascending_QMARK_,(-1),null));
} else {
if(cljs.core.truth_(ascending_QMARK_)){
if((c < (0))){
var G__30019 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(stack,t);
var G__30020 = t.left;
stack = G__30019;
t = G__30020;
continue;
} else {
var G__30021 = stack;
var G__30022 = t.right;
stack = G__30021;
t = G__30022;
continue;
}
} else {
if((c > (0))){
var G__30023 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(stack,t);
var G__30024 = t.right;
stack = G__30023;
t = G__30024;
continue;
} else {
var G__30025 = stack;
var G__30026 = t.left;
stack = G__30025;
t = G__30026;
continue;
}

}
}
} else {
if((stack == null)){
return null;
} else {
return (new cljs.core.PersistentTreeMapSeq(null,stack,ascending_QMARK_,(-1),null));
}
}
break;
}
} else {
return null;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_entry_key$arity$2 = (function (coll,entry){
var self__ = this;
var coll__$1 = this;
var G__29997 = entry;
return (cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__29997) : cljs.core.key.call(null,G__29997));
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_comparator$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.comp;
});

cljs.core.PersistentTreeMap.cljs$lang$type = true;

cljs.core.PersistentTreeMap.cljs$lang$ctorStr = "cljs.core/PersistentTreeMap";

cljs.core.PersistentTreeMap.cljs$lang$ctorPrWriter = (function (this__24859__auto__,writer__24860__auto__,opt__24861__auto__){
return cljs.core._write(writer__24860__auto__,"cljs.core/PersistentTreeMap");
});

cljs.core.__GT_PersistentTreeMap = (function __GT_PersistentTreeMap(comp,tree,cnt,meta,__hash){
return (new cljs.core.PersistentTreeMap(comp,tree,cnt,meta,__hash));
});

cljs.core.PersistentTreeMap.EMPTY = (new cljs.core.PersistentTreeMap(cljs.core.compare,null,(0),null,(0)));
(cljs.core.PersistentTreeMap.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__25250__auto__ = this;
return cljs.core.es6_iterator(this__25250__auto__);
}));
/**
* keyval => key val
* Returns a new hash map with supplied mappings.
* @param {...*} var_args
*/
cljs.core.hash_map = (function() { 
var hash_map__delegate = function (keyvals){
var in$ = cljs.core.seq(keyvals);
var out = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
while(true){
if(in$){
var G__30027 = cljs.core.nnext(in$);
var G__30028 = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(out,cljs.core.first(in$),cljs.core.second(in$));
in$ = G__30027;
out = G__30028;
continue;
} else {
return cljs.core.persistent_BANG_(out);
}
break;
}
};
var hash_map = function (var_args){
var keyvals = null;
if (arguments.length > 0) {
var G__30029__i = 0, G__30029__a = new Array(arguments.length -  0);
while (G__30029__i < G__30029__a.length) {G__30029__a[G__30029__i] = arguments[G__30029__i + 0]; ++G__30029__i;}
  keyvals = new cljs.core.IndexedSeq(G__30029__a,0);
} 
return hash_map__delegate.call(this,keyvals);};
hash_map.cljs$lang$maxFixedArity = 0;
hash_map.cljs$lang$applyTo = (function (arglist__30030){
var keyvals = cljs.core.seq(arglist__30030);
return hash_map__delegate(keyvals);
});
hash_map.cljs$core$IFn$_invoke$arity$variadic = hash_map__delegate;
return hash_map;
})()
;
/**
* keyval => key val
* Returns a new array map with supplied mappings.
* @param {...*} var_args
*/
cljs.core.array_map = (function() { 
var array_map__delegate = function (keyvals){
return cljs.core.PersistentArrayMap.fromArray(cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.array,keyvals),true,false);
};
var array_map = function (var_args){
var keyvals = null;
if (arguments.length > 0) {
var G__30031__i = 0, G__30031__a = new Array(arguments.length -  0);
while (G__30031__i < G__30031__a.length) {G__30031__a[G__30031__i] = arguments[G__30031__i + 0]; ++G__30031__i;}
  keyvals = new cljs.core.IndexedSeq(G__30031__a,0);
} 
return array_map__delegate.call(this,keyvals);};
array_map.cljs$lang$maxFixedArity = 0;
array_map.cljs$lang$applyTo = (function (arglist__30032){
var keyvals = cljs.core.seq(arglist__30032);
return array_map__delegate(keyvals);
});
array_map.cljs$core$IFn$_invoke$arity$variadic = array_map__delegate;
return array_map;
})()
;
/**
* keyval => key val
* Returns a new object map with supplied mappings.
* @param {...*} var_args
*/
cljs.core.obj_map = (function() { 
var obj_map__delegate = function (keyvals){
var ks = [];
var obj = (function (){var obj30036 = {};
return obj30036;
})();
var kvs = cljs.core.seq(keyvals);
while(true){
if(kvs){
ks.push(cljs.core.first(kvs));

(obj[cljs.core.first(kvs)] = cljs.core.second(kvs));

var G__30037 = cljs.core.nnext(kvs);
kvs = G__30037;
continue;
} else {
return cljs.core.ObjMap.fromObject(ks,obj);
}
break;
}
};
var obj_map = function (var_args){
var keyvals = null;
if (arguments.length > 0) {
var G__30038__i = 0, G__30038__a = new Array(arguments.length -  0);
while (G__30038__i < G__30038__a.length) {G__30038__a[G__30038__i] = arguments[G__30038__i + 0]; ++G__30038__i;}
  keyvals = new cljs.core.IndexedSeq(G__30038__a,0);
} 
return obj_map__delegate.call(this,keyvals);};
obj_map.cljs$lang$maxFixedArity = 0;
obj_map.cljs$lang$applyTo = (function (arglist__30039){
var keyvals = cljs.core.seq(arglist__30039);
return obj_map__delegate(keyvals);
});
obj_map.cljs$core$IFn$_invoke$arity$variadic = obj_map__delegate;
return obj_map;
})()
;
/**
* keyval => key val
* Returns a new sorted map with supplied mappings.
* @param {...*} var_args
*/
cljs.core.sorted_map = (function() { 
var sorted_map__delegate = function (keyvals){
var in$ = cljs.core.seq(keyvals);
var out = cljs.core.PersistentTreeMap.EMPTY;
while(true){
if(in$){
var G__30040 = cljs.core.nnext(in$);
var G__30041 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(out,cljs.core.first(in$),cljs.core.second(in$));
in$ = G__30040;
out = G__30041;
continue;
} else {
return out;
}
break;
}
};
var sorted_map = function (var_args){
var keyvals = null;
if (arguments.length > 0) {
var G__30042__i = 0, G__30042__a = new Array(arguments.length -  0);
while (G__30042__i < G__30042__a.length) {G__30042__a[G__30042__i] = arguments[G__30042__i + 0]; ++G__30042__i;}
  keyvals = new cljs.core.IndexedSeq(G__30042__a,0);
} 
return sorted_map__delegate.call(this,keyvals);};
sorted_map.cljs$lang$maxFixedArity = 0;
sorted_map.cljs$lang$applyTo = (function (arglist__30043){
var keyvals = cljs.core.seq(arglist__30043);
return sorted_map__delegate(keyvals);
});
sorted_map.cljs$core$IFn$_invoke$arity$variadic = sorted_map__delegate;
return sorted_map;
})()
;
/**
* keyval => key val
* Returns a new sorted map with supplied mappings, using the supplied comparator.
* @param {...*} var_args
*/
cljs.core.sorted_map_by = (function() { 
var sorted_map_by__delegate = function (comparator,keyvals){
var in$ = cljs.core.seq(keyvals);
var out = (new cljs.core.PersistentTreeMap(cljs.core.fn__GT_comparator(comparator),null,(0),null,(0)));
while(true){
if(in$){
var G__30044 = cljs.core.nnext(in$);
var G__30045 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(out,cljs.core.first(in$),cljs.core.second(in$));
in$ = G__30044;
out = G__30045;
continue;
} else {
return out;
}
break;
}
};
var sorted_map_by = function (comparator,var_args){
var keyvals = null;
if (arguments.length > 1) {
var G__30046__i = 0, G__30046__a = new Array(arguments.length -  1);
while (G__30046__i < G__30046__a.length) {G__30046__a[G__30046__i] = arguments[G__30046__i + 1]; ++G__30046__i;}
  keyvals = new cljs.core.IndexedSeq(G__30046__a,0);
} 
return sorted_map_by__delegate.call(this,comparator,keyvals);};
sorted_map_by.cljs$lang$maxFixedArity = 1;
sorted_map_by.cljs$lang$applyTo = (function (arglist__30047){
var comparator = cljs.core.first(arglist__30047);
var keyvals = cljs.core.rest(arglist__30047);
return sorted_map_by__delegate(comparator,keyvals);
});
sorted_map_by.cljs$core$IFn$_invoke$arity$variadic = sorted_map_by__delegate;
return sorted_map_by;
})()
;

/**
* @constructor
*/
cljs.core.KeySeq = (function (mseq,_meta){
this.mseq = mseq;
this._meta = _meta;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32374988;
})
cljs.core.KeySeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.KeySeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.KeySeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__._meta;
});

cljs.core.KeySeq.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var nseq = (((function (){var G__30048 = self__.mseq;
if(G__30048){
var bit__24953__auto__ = (G__30048.cljs$lang$protocol_mask$partition0$ & (128));
if((bit__24953__auto__) || (G__30048.cljs$core$INext$)){
return true;
} else {
if((!G__30048.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__30048);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__30048);
}
})())?self__.mseq.cljs$core$INext$_next$arity$1(null):cljs.core.next(self__.mseq));
if((nseq == null)){
return null;
} else {
return (new cljs.core.KeySeq(nseq,self__._meta));
}
});

cljs.core.KeySeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.hash_ordered_coll(coll__$1);
});

cljs.core.KeySeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.KeySeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__._meta);
});

cljs.core.KeySeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.KeySeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.KeySeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var me = self__.mseq.cljs$core$ISeq$_first$arity$1(null);
return me.cljs$core$IMapEntry$_key$arity$1(null);
});

cljs.core.KeySeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var nseq = (((function (){var G__30049 = self__.mseq;
if(G__30049){
var bit__24953__auto__ = (G__30049.cljs$lang$protocol_mask$partition0$ & (128));
if((bit__24953__auto__) || (G__30049.cljs$core$INext$)){
return true;
} else {
if((!G__30049.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__30049);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__30049);
}
})())?self__.mseq.cljs$core$INext$_next$arity$1(null):cljs.core.next(self__.mseq));
if(!((nseq == null))){
return (new cljs.core.KeySeq(nseq,self__._meta));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.KeySeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.KeySeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,new_meta){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.KeySeq(self__.mseq,new_meta));
});

cljs.core.KeySeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.KeySeq.cljs$lang$type = true;

cljs.core.KeySeq.cljs$lang$ctorStr = "cljs.core/KeySeq";

cljs.core.KeySeq.cljs$lang$ctorPrWriter = (function (this__24859__auto__,writer__24860__auto__,opt__24861__auto__){
return cljs.core._write(writer__24860__auto__,"cljs.core/KeySeq");
});

cljs.core.__GT_KeySeq = (function __GT_KeySeq(mseq,_meta){
return (new cljs.core.KeySeq(mseq,_meta));
});

(cljs.core.KeySeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__25250__auto__ = this;
return cljs.core.es6_iterator(this__25250__auto__);
}));
/**
* Returns a sequence of the map's keys.
*/
cljs.core.keys = (function keys(hash_map){
var temp__4126__auto__ = cljs.core.seq(hash_map);
if(temp__4126__auto__){
var mseq = temp__4126__auto__;
return (new cljs.core.KeySeq(mseq,null));
} else {
return null;
}
});
/**
* Returns the key of the map entry.
*/
cljs.core.key = (function key(map_entry){
return cljs.core._key(map_entry);
});

/**
* @constructor
*/
cljs.core.ValSeq = (function (mseq,_meta){
this.mseq = mseq;
this._meta = _meta;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32374988;
})
cljs.core.ValSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.ValSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.ValSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__._meta;
});

cljs.core.ValSeq.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var nseq = (((function (){var G__30050 = self__.mseq;
if(G__30050){
var bit__24953__auto__ = (G__30050.cljs$lang$protocol_mask$partition0$ & (128));
if((bit__24953__auto__) || (G__30050.cljs$core$INext$)){
return true;
} else {
if((!G__30050.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__30050);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__30050);
}
})())?self__.mseq.cljs$core$INext$_next$arity$1(null):cljs.core.next(self__.mseq));
if((nseq == null)){
return null;
} else {
return (new cljs.core.ValSeq(nseq,self__._meta));
}
});

cljs.core.ValSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.hash_ordered_coll(coll__$1);
});

cljs.core.ValSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.ValSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__._meta);
});

cljs.core.ValSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.ValSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.ValSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var me = self__.mseq.cljs$core$ISeq$_first$arity$1(null);
return me.cljs$core$IMapEntry$_val$arity$1(null);
});

cljs.core.ValSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var nseq = (((function (){var G__30051 = self__.mseq;
if(G__30051){
var bit__24953__auto__ = (G__30051.cljs$lang$protocol_mask$partition0$ & (128));
if((bit__24953__auto__) || (G__30051.cljs$core$INext$)){
return true;
} else {
if((!G__30051.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__30051);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__30051);
}
})())?self__.mseq.cljs$core$INext$_next$arity$1(null):cljs.core.next(self__.mseq));
if(!((nseq == null))){
return (new cljs.core.ValSeq(nseq,self__._meta));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.ValSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.ValSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,new_meta){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.ValSeq(self__.mseq,new_meta));
});

cljs.core.ValSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.ValSeq.cljs$lang$type = true;

cljs.core.ValSeq.cljs$lang$ctorStr = "cljs.core/ValSeq";

cljs.core.ValSeq.cljs$lang$ctorPrWriter = (function (this__24859__auto__,writer__24860__auto__,opt__24861__auto__){
return cljs.core._write(writer__24860__auto__,"cljs.core/ValSeq");
});

cljs.core.__GT_ValSeq = (function __GT_ValSeq(mseq,_meta){
return (new cljs.core.ValSeq(mseq,_meta));
});

(cljs.core.ValSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__25250__auto__ = this;
return cljs.core.es6_iterator(this__25250__auto__);
}));
/**
* Returns a sequence of the map's values.
*/
cljs.core.vals = (function vals(hash_map){
var temp__4126__auto__ = cljs.core.seq(hash_map);
if(temp__4126__auto__){
var mseq = temp__4126__auto__;
return (new cljs.core.ValSeq(mseq,null));
} else {
return null;
}
});
/**
* Returns the value in the map entry.
*/
cljs.core.val = (function val(map_entry){
return cljs.core._val(map_entry);
});
/**
* Returns a map that consists of the rest of the maps conj-ed onto
* the first.  If a key occurs in more than one map, the mapping from
* the latter (left-to-right) will be the mapping in the result.
* @param {...*} var_args
*/
cljs.core.merge = (function() { 
var merge__delegate = function (maps){
if(cljs.core.truth_(cljs.core.some(cljs.core.identity,maps))){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$2((function (p1__30052_SHARP_,p2__30053_SHARP_){
return cljs.core.conj.cljs$core$IFn$_invoke$arity$2((function (){var or__24272__auto__ = p1__30052_SHARP_;
if(cljs.core.truth_(or__24272__auto__)){
return or__24272__auto__;
} else {
return cljs.core.PersistentArrayMap.EMPTY;
}
})(),p2__30053_SHARP_);
}),maps);
} else {
return null;
}
};
var merge = function (var_args){
var maps = null;
if (arguments.length > 0) {
var G__30054__i = 0, G__30054__a = new Array(arguments.length -  0);
while (G__30054__i < G__30054__a.length) {G__30054__a[G__30054__i] = arguments[G__30054__i + 0]; ++G__30054__i;}
  maps = new cljs.core.IndexedSeq(G__30054__a,0);
} 
return merge__delegate.call(this,maps);};
merge.cljs$lang$maxFixedArity = 0;
merge.cljs$lang$applyTo = (function (arglist__30055){
var maps = cljs.core.seq(arglist__30055);
return merge__delegate(maps);
});
merge.cljs$core$IFn$_invoke$arity$variadic = merge__delegate;
return merge;
})()
;
/**
* Returns a map that consists of the rest of the maps conj-ed onto
* the first.  If a key occurs in more than one map, the mapping(s)
* from the latter (left-to-right) will be combined with the mapping in
* the result by calling (f val-in-result val-in-latter).
* @param {...*} var_args
*/
cljs.core.merge_with = (function() { 
var merge_with__delegate = function (f,maps){
if(cljs.core.truth_(cljs.core.some(cljs.core.identity,maps))){
var merge_entry = (function (m,e){
var k = cljs.core.first(e);
var v = cljs.core.second(e);
if(cljs.core.contains_QMARK_(m,k)){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__30058 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__30059 = v;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__30058,G__30059) : f.call(null,G__30058,G__30059));
})());
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,v);
}
});
var merge2 = ((function (merge_entry){
return (function (m1,m2){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(merge_entry,(function (){var or__24272__auto__ = m1;
if(cljs.core.truth_(or__24272__auto__)){
return or__24272__auto__;
} else {
return cljs.core.PersistentArrayMap.EMPTY;
}
})(),cljs.core.seq(m2));
});})(merge_entry))
;
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$2(merge2,maps);
} else {
return null;
}
};
var merge_with = function (f,var_args){
var maps = null;
if (arguments.length > 1) {
var G__30060__i = 0, G__30060__a = new Array(arguments.length -  1);
while (G__30060__i < G__30060__a.length) {G__30060__a[G__30060__i] = arguments[G__30060__i + 1]; ++G__30060__i;}
  maps = new cljs.core.IndexedSeq(G__30060__a,0);
} 
return merge_with__delegate.call(this,f,maps);};
merge_with.cljs$lang$maxFixedArity = 1;
merge_with.cljs$lang$applyTo = (function (arglist__30061){
var f = cljs.core.first(arglist__30061);
var maps = cljs.core.rest(arglist__30061);
return merge_with__delegate(f,maps);
});
merge_with.cljs$core$IFn$_invoke$arity$variadic = merge_with__delegate;
return merge_with;
})()
;
/**
* Returns a map containing only those entries in map whose key is in keys
*/
cljs.core.select_keys = (function select_keys(map,keyseq){
var ret = cljs.core.PersistentArrayMap.EMPTY;
var keys = cljs.core.seq(keyseq);
while(true){
if(keys){
var key = cljs.core.first(keys);
var entry = cljs.core.get.cljs$core$IFn$_invoke$arity$3(map,key,new cljs.core.Keyword("cljs.core","not-found","cljs.core/not-found",-1572889185));
var G__30062 = ((cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2(entry,new cljs.core.Keyword("cljs.core","not-found","cljs.core/not-found",-1572889185)))?cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(ret,key,entry):ret);
var G__30063 = cljs.core.next(keys);
ret = G__30062;
keys = G__30063;
continue;
} else {
return cljs.core.with_meta(ret,cljs.core.meta(map));
}
break;
}
});

/**
* @constructor
*/
cljs.core.PersistentHashSet = (function (meta,hash_map,__hash){
this.meta = meta;
this.hash_map = hash_map;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 15077647;
this.cljs$lang$protocol_mask$partition1$ = 8196;
})
cljs.core.PersistentHashSet.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentHashSet.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentHashSet.prototype.keys = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentHashSet.prototype.entries = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_set_entries_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentHashSet.prototype.values = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentHashSet.prototype.has = (function (k){
var self__ = this;
var coll = this;
return cljs.core.contains_QMARK_(coll,k);
});

cljs.core.PersistentHashSet.prototype.forEach = (function (f){
var self__ = this;
var coll = this;
var seq__30066 = cljs.core.seq(coll);
var chunk__30067 = null;
var count__30068 = (0);
var i__30069 = (0);
while(true){
if((i__30069 < count__30068)){
var vec__30070 = chunk__30067.cljs$core$IIndexed$_nth$arity$2(null,i__30069);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__30070,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__30070,(1),null);
var G__30071_30076 = v;
var G__30072_30077 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__30071_30076,G__30072_30077) : f.call(null,G__30071_30076,G__30072_30077));

var G__30078 = seq__30066;
var G__30079 = chunk__30067;
var G__30080 = count__30068;
var G__30081 = (i__30069 + (1));
seq__30066 = G__30078;
chunk__30067 = G__30079;
count__30068 = G__30080;
i__30069 = G__30081;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__30066);
if(temp__4126__auto__){
var seq__30066__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__30066__$1)){
var c__25059__auto__ = cljs.core.chunk_first(seq__30066__$1);
var G__30082 = cljs.core.chunk_rest(seq__30066__$1);
var G__30083 = c__25059__auto__;
var G__30084 = cljs.core.count(c__25059__auto__);
var G__30085 = (0);
seq__30066 = G__30082;
chunk__30067 = G__30083;
count__30068 = G__30084;
i__30069 = G__30085;
continue;
} else {
var vec__30073 = cljs.core.first(seq__30066__$1);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__30073,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__30073,(1),null);
var G__30074_30086 = v;
var G__30075_30087 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__30074_30086,G__30075_30087) : f.call(null,G__30074_30086,G__30075_30087));

var G__30088 = cljs.core.next(seq__30066__$1);
var G__30089 = null;
var G__30090 = (0);
var G__30091 = (0);
seq__30066 = G__30088;
chunk__30067 = G__30089;
count__30068 = G__30090;
i__30069 = G__30091;
continue;
}
} else {
return null;
}
}
break;
}
});

cljs.core.PersistentHashSet.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,v){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,v,null);
});

cljs.core.PersistentHashSet.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,v,not_found){
var self__ = this;
var coll__$1 = this;
if(cljs.core._contains_key_QMARK_(self__.hash_map,v)){
return v;
} else {
return not_found;
}
});

cljs.core.PersistentHashSet.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentHashSet.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.PersistentHashSet(self__.meta,self__.hash_map,self__.__hash));
});

cljs.core.PersistentHashSet.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._count(self__.hash_map);
});

cljs.core.PersistentHashSet.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__24693__auto__ = self__.__hash;
if(!((h__24693__auto__ == null))){
return h__24693__auto__;
} else {
var h__24693__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
self__.__hash = h__24693__auto____$1;

return h__24693__auto____$1;
}
});

cljs.core.PersistentHashSet.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return (cljs.core.set_QMARK_(other)) && ((cljs.core.count(coll__$1) === cljs.core.count(other))) && (cljs.core.every_QMARK_(((function (coll__$1){
return (function (p1__30064_SHARP_){
return cljs.core.contains_QMARK_(coll__$1,p1__30064_SHARP_);
});})(coll__$1))
,other));
});

cljs.core.PersistentHashSet.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.TransientHashSet(cljs.core._as_transient(self__.hash_map)));
});

cljs.core.PersistentHashSet.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.PersistentHashSet.EMPTY,self__.meta);
});

cljs.core.PersistentHashSet.prototype.cljs$core$ISet$_disjoin$arity$2 = (function (coll,v){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentHashSet(self__.meta,cljs.core._dissoc(self__.hash_map,v),null));
});

cljs.core.PersistentHashSet.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.keys(self__.hash_map);
});

cljs.core.PersistentHashSet.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentHashSet(meta__$1,self__.hash_map,self__.__hash));
});

cljs.core.PersistentHashSet.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentHashSet(self__.meta,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.hash_map,o,null),null));
});

cljs.core.PersistentHashSet.prototype.call = (function() {
var G__30092 = null;
var G__30092__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__30092__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__30092 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__30092__2.call(this,self__,k);
case 3:
return G__30092__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__30092.cljs$core$IFn$_invoke$arity$2 = G__30092__2;
G__30092.cljs$core$IFn$_invoke$arity$3 = G__30092__3;
return G__30092;
})()
;

cljs.core.PersistentHashSet.prototype.apply = (function (self__,args30065){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args30065)));
});

cljs.core.PersistentHashSet.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentHashSet.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.PersistentHashSet.cljs$lang$type = true;

cljs.core.PersistentHashSet.cljs$lang$ctorStr = "cljs.core/PersistentHashSet";

cljs.core.PersistentHashSet.cljs$lang$ctorPrWriter = (function (this__24859__auto__,writer__24860__auto__,opt__24861__auto__){
return cljs.core._write(writer__24860__auto__,"cljs.core/PersistentHashSet");
});

cljs.core.__GT_PersistentHashSet = (function __GT_PersistentHashSet(meta,hash_map,__hash){
return (new cljs.core.PersistentHashSet(meta,hash_map,__hash));
});

cljs.core.PersistentHashSet.EMPTY = (new cljs.core.PersistentHashSet(null,cljs.core.PersistentArrayMap.EMPTY,(0)));
cljs.core.PersistentHashSet.fromArray = (function (items,no_clone){
var len = items.length;
if((len <= cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD)){
var arr = ((no_clone)?items:cljs.core.aclone(items));
var i = (0);
var out = cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY);
while(true){
if((i < len)){
var G__30093 = (i + (1));
var G__30094 = cljs.core._assoc_BANG_(out,(items[i]),null);
i = G__30093;
out = G__30094;
continue;
} else {
return (new cljs.core.PersistentHashSet(null,cljs.core._persistent_BANG_(out),null));
}
break;
}
} else {
var i = (0);
var out = cljs.core.transient$(cljs.core.PersistentHashSet.EMPTY);
while(true){
if((i < len)){
var G__30095 = (i + (1));
var G__30096 = cljs.core._conj_BANG_(out,(items[i]));
i = G__30095;
out = G__30096;
continue;
} else {
return cljs.core._persistent_BANG_(out);
}
break;
}
}
});
(cljs.core.PersistentHashSet.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__25250__auto__ = this;
return cljs.core.es6_iterator(this__25250__auto__);
}));

/**
* @constructor
*/
cljs.core.TransientHashSet = (function (transient_map){
this.transient_map = transient_map;
this.cljs$lang$protocol_mask$partition0$ = 259;
this.cljs$lang$protocol_mask$partition1$ = 136;
})
cljs.core.TransientHashSet.prototype.call = (function() {
var G__30098 = null;
var G__30098__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var tcoll = self____$1;
if((cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map,k,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel)){
return null;
} else {
return k;
}
});
var G__30098__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var tcoll = self____$1;
if((cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map,k,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel)){
return not_found;
} else {
return k;
}
});
G__30098 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__30098__2.call(this,self__,k);
case 3:
return G__30098__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__30098.cljs$core$IFn$_invoke$arity$2 = G__30098__2;
G__30098.cljs$core$IFn$_invoke$arity$3 = G__30098__3;
return G__30098;
})()
;

cljs.core.TransientHashSet.prototype.apply = (function (self__,args30097){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args30097)));
});

cljs.core.TransientHashSet.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var tcoll = this;
if((cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map,k,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel)){
return null;
} else {
return k;
}
});

cljs.core.TransientHashSet.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var tcoll = this;
if((cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map,k,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel)){
return not_found;
} else {
return k;
}
});

cljs.core.TransientHashSet.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (tcoll,v){
var self__ = this;
var tcoll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(tcoll__$1,v,null);
});

cljs.core.TransientHashSet.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (tcoll,v,not_found){
var self__ = this;
var tcoll__$1 = this;
if((cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map,v,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel)){
return not_found;
} else {
return v;
}
});

cljs.core.TransientHashSet.prototype.cljs$core$ICounted$_count$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
return cljs.core.count(self__.transient_map);
});

cljs.core.TransientHashSet.prototype.cljs$core$ITransientSet$_disjoin_BANG_$arity$2 = (function (tcoll,v){
var self__ = this;
var tcoll__$1 = this;
self__.transient_map = cljs.core.dissoc_BANG_.cljs$core$IFn$_invoke$arity$2(self__.transient_map,v);

return tcoll__$1;
});

cljs.core.TransientHashSet.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = (function (tcoll,o){
var self__ = this;
var tcoll__$1 = this;
self__.transient_map = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(self__.transient_map,o,null);

return tcoll__$1;
});

cljs.core.TransientHashSet.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
return (new cljs.core.PersistentHashSet(null,cljs.core.persistent_BANG_(self__.transient_map),null));
});

cljs.core.TransientHashSet.cljs$lang$type = true;

cljs.core.TransientHashSet.cljs$lang$ctorStr = "cljs.core/TransientHashSet";

cljs.core.TransientHashSet.cljs$lang$ctorPrWriter = (function (this__24859__auto__,writer__24860__auto__,opt__24861__auto__){
return cljs.core._write(writer__24860__auto__,"cljs.core/TransientHashSet");
});

cljs.core.__GT_TransientHashSet = (function __GT_TransientHashSet(transient_map){
return (new cljs.core.TransientHashSet(transient_map));
});


/**
* @constructor
*/
cljs.core.PersistentTreeSet = (function (meta,tree_map,__hash){
this.meta = meta;
this.tree_map = tree_map;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 417730831;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.PersistentTreeSet.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentTreeSet.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentTreeSet.prototype.keys = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentTreeSet.prototype.entries = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_set_entries_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentTreeSet.prototype.values = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentTreeSet.prototype.has = (function (k){
var self__ = this;
var coll = this;
return cljs.core.contains_QMARK_(coll,k);
});

cljs.core.PersistentTreeSet.prototype.forEach = (function (f){
var self__ = this;
var coll = this;
var seq__30101 = cljs.core.seq(coll);
var chunk__30102 = null;
var count__30103 = (0);
var i__30104 = (0);
while(true){
if((i__30104 < count__30103)){
var vec__30105 = chunk__30102.cljs$core$IIndexed$_nth$arity$2(null,i__30104);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__30105,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__30105,(1),null);
var G__30106_30111 = v;
var G__30107_30112 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__30106_30111,G__30107_30112) : f.call(null,G__30106_30111,G__30107_30112));

var G__30113 = seq__30101;
var G__30114 = chunk__30102;
var G__30115 = count__30103;
var G__30116 = (i__30104 + (1));
seq__30101 = G__30113;
chunk__30102 = G__30114;
count__30103 = G__30115;
i__30104 = G__30116;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__30101);
if(temp__4126__auto__){
var seq__30101__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__30101__$1)){
var c__25059__auto__ = cljs.core.chunk_first(seq__30101__$1);
var G__30117 = cljs.core.chunk_rest(seq__30101__$1);
var G__30118 = c__25059__auto__;
var G__30119 = cljs.core.count(c__25059__auto__);
var G__30120 = (0);
seq__30101 = G__30117;
chunk__30102 = G__30118;
count__30103 = G__30119;
i__30104 = G__30120;
continue;
} else {
var vec__30108 = cljs.core.first(seq__30101__$1);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__30108,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__30108,(1),null);
var G__30109_30121 = v;
var G__30110_30122 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__30109_30121,G__30110_30122) : f.call(null,G__30109_30121,G__30110_30122));

var G__30123 = cljs.core.next(seq__30101__$1);
var G__30124 = null;
var G__30125 = (0);
var G__30126 = (0);
seq__30101 = G__30123;
chunk__30102 = G__30124;
count__30103 = G__30125;
i__30104 = G__30126;
continue;
}
} else {
return null;
}
}
break;
}
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,v){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,v,null);
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,v,not_found){
var self__ = this;
var coll__$1 = this;
var n = self__.tree_map.entry_at(v);
if(!((n == null))){
return n.key;
} else {
return not_found;
}
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.PersistentTreeSet(self__.meta,self__.tree_map,self__.__hash));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.count(self__.tree_map);
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IReversible$_rseq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((cljs.core.count(self__.tree_map) > (0))){
return cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.key,cljs.core.rseq(self__.tree_map));
} else {
return null;
}
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__24693__auto__ = self__.__hash;
if(!((h__24693__auto__ == null))){
return h__24693__auto__;
} else {
var h__24693__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
self__.__hash = h__24693__auto____$1;

return h__24693__auto____$1;
}
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return (cljs.core.set_QMARK_(other)) && ((cljs.core.count(coll__$1) === cljs.core.count(other))) && (cljs.core.every_QMARK_(((function (coll__$1){
return (function (p1__30099_SHARP_){
return cljs.core.contains_QMARK_(coll__$1,p1__30099_SHARP_);
});})(coll__$1))
,other));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeSet(self__.meta,cljs.core._empty(self__.tree_map),(0)));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ISet$_disjoin$arity$2 = (function (coll,v){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeSet(self__.meta,cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(self__.tree_map,v),null));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.keys(self__.tree_map);
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeSet(meta__$1,self__.tree_map,self__.__hash));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeSet(self__.meta,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.tree_map,o,null),null));
});

cljs.core.PersistentTreeSet.prototype.call = (function() {
var G__30127 = null;
var G__30127__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__30127__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__30127 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__30127__2.call(this,self__,k);
case 3:
return G__30127__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__30127.cljs$core$IFn$_invoke$arity$2 = G__30127__2;
G__30127.cljs$core$IFn$_invoke$arity$3 = G__30127__3;
return G__30127;
})()
;

cljs.core.PersistentTreeSet.prototype.apply = (function (self__,args30100){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args30100)));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_sorted_seq$arity$2 = (function (coll,ascending_QMARK_){
var self__ = this;
var coll__$1 = this;
return cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.key,cljs.core._sorted_seq(self__.tree_map,ascending_QMARK_));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_sorted_seq_from$arity$3 = (function (coll,k,ascending_QMARK_){
var self__ = this;
var coll__$1 = this;
return cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.key,cljs.core._sorted_seq_from(self__.tree_map,k,ascending_QMARK_));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_entry_key$arity$2 = (function (coll,entry){
var self__ = this;
var coll__$1 = this;
return entry;
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_comparator$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._comparator(self__.tree_map);
});

cljs.core.PersistentTreeSet.cljs$lang$type = true;

cljs.core.PersistentTreeSet.cljs$lang$ctorStr = "cljs.core/PersistentTreeSet";

cljs.core.PersistentTreeSet.cljs$lang$ctorPrWriter = (function (this__24859__auto__,writer__24860__auto__,opt__24861__auto__){
return cljs.core._write(writer__24860__auto__,"cljs.core/PersistentTreeSet");
});

cljs.core.__GT_PersistentTreeSet = (function __GT_PersistentTreeSet(meta,tree_map,__hash){
return (new cljs.core.PersistentTreeSet(meta,tree_map,__hash));
});

cljs.core.PersistentTreeSet.EMPTY = (new cljs.core.PersistentTreeSet(null,cljs.core.PersistentTreeMap.EMPTY,(0)));
(cljs.core.PersistentTreeSet.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__25250__auto__ = this;
return cljs.core.es6_iterator(this__25250__auto__);
}));
cljs.core.set_from_indexed_seq = (function set_from_indexed_seq(iseq){
var arr = iseq.arr;
var ret = (function (){var a__25153__auto__ = arr;
var i = (0);
var res = cljs.core._as_transient(cljs.core.PersistentHashSet.EMPTY);
while(true){
if((i < a__25153__auto__.length)){
var G__30128 = (i + (1));
var G__30129 = res.cljs$core$ITransientCollection$_conj_BANG_$arity$2(null,(arr[i]));
i = G__30128;
res = G__30129;
continue;
} else {
return res;
}
break;
}
})();
return ret.cljs$core$ITransientCollection$_persistent_BANG_$arity$1(null);
});
/**
* Returns a set of the distinct elements of coll.
*/
cljs.core.set = (function set(coll){
var in$ = cljs.core.seq(coll);
if((in$ == null)){
return cljs.core.PersistentHashSet.EMPTY;
} else {
if(((in$ instanceof cljs.core.IndexedSeq)) && ((in$.i === (0)))){
return cljs.core.set_from_indexed_seq(in$);
} else {
var in$__$1 = in$;
var out = cljs.core._as_transient(cljs.core.PersistentHashSet.EMPTY);
while(true){
if(!((in$__$1 == null))){
var G__30130 = in$__$1.cljs$core$INext$_next$arity$1(null);
var G__30131 = out.cljs$core$ITransientCollection$_conj_BANG_$arity$2(null,in$__$1.cljs$core$ISeq$_first$arity$1(null));
in$__$1 = G__30130;
out = G__30131;
continue;
} else {
return out.cljs$core$ITransientCollection$_persistent_BANG_$arity$1(null);
}
break;
}

}
}
});
/**
* @param {...*} var_args
*/
cljs.core.hash_set = (function() {
var hash_set = null;
var hash_set__0 = (function (){
return cljs.core.PersistentHashSet.EMPTY;
});
var hash_set__1 = (function() { 
var G__30132__delegate = function (keys){
return cljs.core.set(keys);
};
var G__30132 = function (var_args){
var keys = null;
if (arguments.length > 0) {
var G__30133__i = 0, G__30133__a = new Array(arguments.length -  0);
while (G__30133__i < G__30133__a.length) {G__30133__a[G__30133__i] = arguments[G__30133__i + 0]; ++G__30133__i;}
  keys = new cljs.core.IndexedSeq(G__30133__a,0);
} 
return G__30132__delegate.call(this,keys);};
G__30132.cljs$lang$maxFixedArity = 0;
G__30132.cljs$lang$applyTo = (function (arglist__30134){
var keys = cljs.core.seq(arglist__30134);
return G__30132__delegate(keys);
});
G__30132.cljs$core$IFn$_invoke$arity$variadic = G__30132__delegate;
return G__30132;
})()
;
hash_set = function(var_args){
var keys = var_args;
switch(arguments.length){
case 0:
return hash_set__0.call(this);
default:
var G__30135 = null;
if (arguments.length > 0) {
var G__30136__i = 0, G__30136__a = new Array(arguments.length -  0);
while (G__30136__i < G__30136__a.length) {G__30136__a[G__30136__i] = arguments[G__30136__i + 0]; ++G__30136__i;}
G__30135 = new cljs.core.IndexedSeq(G__30136__a,0);
}
return hash_set__1.cljs$core$IFn$_invoke$arity$variadic(G__30135);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
hash_set.cljs$lang$maxFixedArity = 0;
hash_set.cljs$lang$applyTo = hash_set__1.cljs$lang$applyTo;
hash_set.cljs$core$IFn$_invoke$arity$0 = hash_set__0;
hash_set.cljs$core$IFn$_invoke$arity$variadic = hash_set__1.cljs$core$IFn$_invoke$arity$variadic;
return hash_set;
})()
;
/**
* Returns a new sorted set with supplied keys.
* @param {...*} var_args
*/
cljs.core.sorted_set = (function() { 
var sorted_set__delegate = function (keys){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj,cljs.core.PersistentTreeSet.EMPTY,keys);
};
var sorted_set = function (var_args){
var keys = null;
if (arguments.length > 0) {
var G__30137__i = 0, G__30137__a = new Array(arguments.length -  0);
while (G__30137__i < G__30137__a.length) {G__30137__a[G__30137__i] = arguments[G__30137__i + 0]; ++G__30137__i;}
  keys = new cljs.core.IndexedSeq(G__30137__a,0);
} 
return sorted_set__delegate.call(this,keys);};
sorted_set.cljs$lang$maxFixedArity = 0;
sorted_set.cljs$lang$applyTo = (function (arglist__30138){
var keys = cljs.core.seq(arglist__30138);
return sorted_set__delegate(keys);
});
sorted_set.cljs$core$IFn$_invoke$arity$variadic = sorted_set__delegate;
return sorted_set;
})()
;
/**
* Returns a new sorted set with supplied keys, using the supplied comparator.
* @param {...*} var_args
*/
cljs.core.sorted_set_by = (function() { 
var sorted_set_by__delegate = function (comparator,keys){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj,(new cljs.core.PersistentTreeSet(null,cljs.core.sorted_map_by(comparator),(0))),keys);
};
var sorted_set_by = function (comparator,var_args){
var keys = null;
if (arguments.length > 1) {
var G__30139__i = 0, G__30139__a = new Array(arguments.length -  1);
while (G__30139__i < G__30139__a.length) {G__30139__a[G__30139__i] = arguments[G__30139__i + 1]; ++G__30139__i;}
  keys = new cljs.core.IndexedSeq(G__30139__a,0);
} 
return sorted_set_by__delegate.call(this,comparator,keys);};
sorted_set_by.cljs$lang$maxFixedArity = 1;
sorted_set_by.cljs$lang$applyTo = (function (arglist__30140){
var comparator = cljs.core.first(arglist__30140);
var keys = cljs.core.rest(arglist__30140);
return sorted_set_by__delegate(comparator,keys);
});
sorted_set_by.cljs$core$IFn$_invoke$arity$variadic = sorted_set_by__delegate;
return sorted_set_by;
})()
;
/**
* Given a map of replacement pairs and a vector/collection, returns a
* vector/seq with any elements = a key in smap replaced with the
* corresponding val in smap.  Returns a transducer when no collection
* is provided.
*/
cljs.core.replace = (function() {
var replace = null;
var replace__1 = (function (smap){
return cljs.core.map.cljs$core$IFn$_invoke$arity$1((function (p1__30141_SHARP_){
var temp__4124__auto__ = cljs.core.find(smap,p1__30141_SHARP_);
if(cljs.core.truth_(temp__4124__auto__)){
var e = temp__4124__auto__;
return cljs.core.val(e);
} else {
return p1__30141_SHARP_;
}
}));
});
var replace__2 = (function (smap,coll){
if(cljs.core.vector_QMARK_(coll)){
var n = cljs.core.count(coll);
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (n){
return (function (v,i){
var temp__4124__auto__ = cljs.core.find(smap,cljs.core.nth.cljs$core$IFn$_invoke$arity$2(v,i));
if(cljs.core.truth_(temp__4124__auto__)){
var e = temp__4124__auto__;
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(v,i,cljs.core.second(e));
} else {
return v;
}
});})(n))
,coll,cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,cljs.core.iterate(cljs.core.inc,(0))));
} else {
return cljs.core.map.cljs$core$IFn$_invoke$arity$2((function (p1__30142_SHARP_){
var temp__4124__auto__ = cljs.core.find(smap,p1__30142_SHARP_);
if(cljs.core.truth_(temp__4124__auto__)){
var e = temp__4124__auto__;
return cljs.core.second(e);
} else {
return p1__30142_SHARP_;
}
}),coll);
}
});
replace = function(smap,coll){
switch(arguments.length){
case 1:
return replace__1.call(this,smap);
case 2:
return replace__2.call(this,smap,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
replace.cljs$core$IFn$_invoke$arity$1 = replace__1;
replace.cljs$core$IFn$_invoke$arity$2 = replace__2;
return replace;
})()
;
/**
* Returns a lazy sequence of the elements of coll with duplicates removed
*/
cljs.core.distinct = (function distinct(coll){
var step = (function step(xs,seen){
return (new cljs.core.LazySeq(null,(function (){
return (function (p__30153,seen__$1){
while(true){
var vec__30154 = p__30153;
var f = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__30154,(0),null);
var xs__$1 = vec__30154;
var temp__4126__auto__ = cljs.core.seq(xs__$1);
if(temp__4126__auto__){
var s = temp__4126__auto__;
if(cljs.core.contains_QMARK_(seen__$1,f)){
var G__30155 = cljs.core.rest(s);
var G__30156 = seen__$1;
p__30153 = G__30155;
seen__$1 = G__30156;
continue;
} else {
return cljs.core.cons(f,step(cljs.core.rest(s),cljs.core.conj.cljs$core$IFn$_invoke$arity$2(seen__$1,f)));
}
} else {
return null;
}
break;
}
}).call(null,xs,seen);
}),null,null));
});
return step(coll,cljs.core.PersistentHashSet.EMPTY);
});
cljs.core.butlast = (function butlast(s){
var ret = cljs.core.PersistentVector.EMPTY;
var s__$1 = s;
while(true){
if(cljs.core.next(s__$1)){
var G__30157 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(ret,cljs.core.first(s__$1));
var G__30158 = cljs.core.next(s__$1);
ret = G__30157;
s__$1 = G__30158;
continue;
} else {
return cljs.core.seq(ret);
}
break;
}
});
/**
* Returns the name String of a string, symbol or keyword.
*/
cljs.core.name = (function name(x){
if((function (){var G__30160 = x;
if(G__30160){
var bit__24946__auto__ = (G__30160.cljs$lang$protocol_mask$partition1$ & (4096));
if((bit__24946__auto__) || (G__30160.cljs$core$INamed$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return x.cljs$core$INamed$_name$arity$1(null);
} else {
if(typeof x === 'string'){
return x;
} else {
throw (new Error([cljs.core.str("Doesn't support name: "),cljs.core.str(x)].join('')));
}
}
});
/**
* Returns a map with the keys mapped to the corresponding vals.
*/
cljs.core.zipmap = (function zipmap(keys,vals){
var map = cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY);
var ks = cljs.core.seq(keys);
var vs = cljs.core.seq(vals);
while(true){
if((ks) && (vs)){
var G__30161 = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(map,cljs.core.first(ks),cljs.core.first(vs));
var G__30162 = cljs.core.next(ks);
var G__30163 = cljs.core.next(vs);
map = G__30161;
ks = G__30162;
vs = G__30163;
continue;
} else {
return cljs.core.persistent_BANG_(map);
}
break;
}
});
/**
* Returns the x for which (k x), a number, is greatest.
* @param {...*} var_args
*/
cljs.core.max_key = (function() {
var max_key = null;
var max_key__2 = (function (k,x){
return x;
});
var max_key__3 = (function (k,x,y){
if(((function (){var G__30174 = x;
return (k.cljs$core$IFn$_invoke$arity$1 ? k.cljs$core$IFn$_invoke$arity$1(G__30174) : k.call(null,G__30174));
})() > (function (){var G__30175 = y;
return (k.cljs$core$IFn$_invoke$arity$1 ? k.cljs$core$IFn$_invoke$arity$1(G__30175) : k.call(null,G__30175));
})())){
return x;
} else {
return y;
}
});
var max_key__4 = (function() { 
var G__30176__delegate = function (k,x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (p1__30164_SHARP_,p2__30165_SHARP_){
return max_key.cljs$core$IFn$_invoke$arity$3(k,p1__30164_SHARP_,p2__30165_SHARP_);
}),max_key.cljs$core$IFn$_invoke$arity$3(k,x,y),more);
};
var G__30176 = function (k,x,y,var_args){
var more = null;
if (arguments.length > 3) {
var G__30177__i = 0, G__30177__a = new Array(arguments.length -  3);
while (G__30177__i < G__30177__a.length) {G__30177__a[G__30177__i] = arguments[G__30177__i + 3]; ++G__30177__i;}
  more = new cljs.core.IndexedSeq(G__30177__a,0);
} 
return G__30176__delegate.call(this,k,x,y,more);};
G__30176.cljs$lang$maxFixedArity = 3;
G__30176.cljs$lang$applyTo = (function (arglist__30178){
var k = cljs.core.first(arglist__30178);
arglist__30178 = cljs.core.next(arglist__30178);
var x = cljs.core.first(arglist__30178);
arglist__30178 = cljs.core.next(arglist__30178);
var y = cljs.core.first(arglist__30178);
var more = cljs.core.rest(arglist__30178);
return G__30176__delegate(k,x,y,more);
});
G__30176.cljs$core$IFn$_invoke$arity$variadic = G__30176__delegate;
return G__30176;
})()
;
max_key = function(k,x,y,var_args){
var more = var_args;
switch(arguments.length){
case 2:
return max_key__2.call(this,k,x);
case 3:
return max_key__3.call(this,k,x,y);
default:
var G__30179 = null;
if (arguments.length > 3) {
var G__30180__i = 0, G__30180__a = new Array(arguments.length -  3);
while (G__30180__i < G__30180__a.length) {G__30180__a[G__30180__i] = arguments[G__30180__i + 3]; ++G__30180__i;}
G__30179 = new cljs.core.IndexedSeq(G__30180__a,0);
}
return max_key__4.cljs$core$IFn$_invoke$arity$variadic(k,x,y, G__30179);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
max_key.cljs$lang$maxFixedArity = 3;
max_key.cljs$lang$applyTo = max_key__4.cljs$lang$applyTo;
max_key.cljs$core$IFn$_invoke$arity$2 = max_key__2;
max_key.cljs$core$IFn$_invoke$arity$3 = max_key__3;
max_key.cljs$core$IFn$_invoke$arity$variadic = max_key__4.cljs$core$IFn$_invoke$arity$variadic;
return max_key;
})()
;
/**
* Returns the x for which (k x), a number, is least.
* @param {...*} var_args
*/
cljs.core.min_key = (function() {
var min_key = null;
var min_key__2 = (function (k,x){
return x;
});
var min_key__3 = (function (k,x,y){
if(((function (){var G__30191 = x;
return (k.cljs$core$IFn$_invoke$arity$1 ? k.cljs$core$IFn$_invoke$arity$1(G__30191) : k.call(null,G__30191));
})() < (function (){var G__30192 = y;
return (k.cljs$core$IFn$_invoke$arity$1 ? k.cljs$core$IFn$_invoke$arity$1(G__30192) : k.call(null,G__30192));
})())){
return x;
} else {
return y;
}
});
var min_key__4 = (function() { 
var G__30193__delegate = function (k,x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (p1__30181_SHARP_,p2__30182_SHARP_){
return min_key.cljs$core$IFn$_invoke$arity$3(k,p1__30181_SHARP_,p2__30182_SHARP_);
}),min_key.cljs$core$IFn$_invoke$arity$3(k,x,y),more);
};
var G__30193 = function (k,x,y,var_args){
var more = null;
if (arguments.length > 3) {
var G__30194__i = 0, G__30194__a = new Array(arguments.length -  3);
while (G__30194__i < G__30194__a.length) {G__30194__a[G__30194__i] = arguments[G__30194__i + 3]; ++G__30194__i;}
  more = new cljs.core.IndexedSeq(G__30194__a,0);
} 
return G__30193__delegate.call(this,k,x,y,more);};
G__30193.cljs$lang$maxFixedArity = 3;
G__30193.cljs$lang$applyTo = (function (arglist__30195){
var k = cljs.core.first(arglist__30195);
arglist__30195 = cljs.core.next(arglist__30195);
var x = cljs.core.first(arglist__30195);
arglist__30195 = cljs.core.next(arglist__30195);
var y = cljs.core.first(arglist__30195);
var more = cljs.core.rest(arglist__30195);
return G__30193__delegate(k,x,y,more);
});
G__30193.cljs$core$IFn$_invoke$arity$variadic = G__30193__delegate;
return G__30193;
})()
;
min_key = function(k,x,y,var_args){
var more = var_args;
switch(arguments.length){
case 2:
return min_key__2.call(this,k,x);
case 3:
return min_key__3.call(this,k,x,y);
default:
var G__30196 = null;
if (arguments.length > 3) {
var G__30197__i = 0, G__30197__a = new Array(arguments.length -  3);
while (G__30197__i < G__30197__a.length) {G__30197__a[G__30197__i] = arguments[G__30197__i + 3]; ++G__30197__i;}
G__30196 = new cljs.core.IndexedSeq(G__30197__a,0);
}
return min_key__4.cljs$core$IFn$_invoke$arity$variadic(k,x,y, G__30196);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
min_key.cljs$lang$maxFixedArity = 3;
min_key.cljs$lang$applyTo = min_key__4.cljs$lang$applyTo;
min_key.cljs$core$IFn$_invoke$arity$2 = min_key__2;
min_key.cljs$core$IFn$_invoke$arity$3 = min_key__3;
min_key.cljs$core$IFn$_invoke$arity$variadic = min_key__4.cljs$core$IFn$_invoke$arity$variadic;
return min_key;
})()
;

/**
* @constructor
*/
cljs.core.ArrayList = (function (arr){
this.arr = arr;
})
cljs.core.ArrayList.prototype.add = (function (x){
var self__ = this;
var _ = this;
return self__.arr.push(x);
});

cljs.core.ArrayList.prototype.size = (function (){
var self__ = this;
var _ = this;
return self__.arr.length;
});

cljs.core.ArrayList.prototype.clear = (function (){
var self__ = this;
var _ = this;
return self__.arr = [];
});

cljs.core.ArrayList.prototype.isEmpty = (function (){
var self__ = this;
var _ = this;
return (self__.arr.length === (0));
});

cljs.core.ArrayList.prototype.toArray = (function (){
var self__ = this;
var _ = this;
return self__.arr;
});

cljs.core.ArrayList.cljs$lang$type = true;

cljs.core.ArrayList.cljs$lang$ctorStr = "cljs.core/ArrayList";

cljs.core.ArrayList.cljs$lang$ctorPrWriter = (function (this__24859__auto__,writer__24860__auto__,opt__24861__auto__){
return cljs.core._write(writer__24860__auto__,"cljs.core/ArrayList");
});

cljs.core.__GT_ArrayList = (function __GT_ArrayList(arr){
return (new cljs.core.ArrayList(arr));
});

cljs.core.array_list = (function array_list(){
return (new cljs.core.ArrayList([]));
});
/**
* Returns a lazy sequence of lists like partition, but may include
* partitions with fewer than n items at the end.  Returns a stateful
* transducer when no collection is provided.
*/
cljs.core.partition_all = (function() {
var partition_all = null;
var partition_all__1 = (function (n){
return (function (rf){
var a = cljs.core.array_list();
return ((function (a){
return (function() {
var G__30214 = null;
var G__30214__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__30214__1 = (function (result){
var result__$1 = (cljs.core.truth_(a.isEmpty())?result:(function (){var v = cljs.core.vec(a.toArray());
a.clear();

return cljs.core.unreduced((function (){var G__30209 = result;
var G__30210 = v;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__30209,G__30210) : rf.call(null,G__30209,G__30210));
})());
})());
var G__30211 = result__$1;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__30211) : rf.call(null,G__30211));
});
var G__30214__2 = (function (result,input){
a.add(input);

if((n === a.size())){
var v = cljs.core.vec(a.toArray());
a.clear();

var G__30212 = result;
var G__30213 = v;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__30212,G__30213) : rf.call(null,G__30212,G__30213));
} else {
return result;
}
});
G__30214 = function(result,input){
switch(arguments.length){
case 0:
return G__30214__0.call(this);
case 1:
return G__30214__1.call(this,result);
case 2:
return G__30214__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__30214.cljs$core$IFn$_invoke$arity$0 = G__30214__0;
G__30214.cljs$core$IFn$_invoke$arity$1 = G__30214__1;
G__30214.cljs$core$IFn$_invoke$arity$2 = G__30214__2;
return G__30214;
})()
;})(a))
});
});
var partition_all__2 = (function (n,coll){
return partition_all.cljs$core$IFn$_invoke$arity$3(n,n,coll);
});
var partition_all__3 = (function (n,step,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
return cljs.core.cons(cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,s),partition_all.cljs$core$IFn$_invoke$arity$3(n,step,cljs.core.drop.cljs$core$IFn$_invoke$arity$2(step,s)));
} else {
return null;
}
}),null,null));
});
partition_all = function(n,step,coll){
switch(arguments.length){
case 1:
return partition_all__1.call(this,n);
case 2:
return partition_all__2.call(this,n,step);
case 3:
return partition_all__3.call(this,n,step,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
partition_all.cljs$core$IFn$_invoke$arity$1 = partition_all__1;
partition_all.cljs$core$IFn$_invoke$arity$2 = partition_all__2;
partition_all.cljs$core$IFn$_invoke$arity$3 = partition_all__3;
return partition_all;
})()
;
/**
* Returns a lazy sequence of successive items from coll while
* (pred item) returns true. pred must be free of side-effects.
* Returns a transducer when no collection is provided.
*/
cljs.core.take_while = (function() {
var take_while = null;
var take_while__1 = (function (pred){
return (function (rf){
return (function() {
var G__30227 = null;
var G__30227__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__30227__1 = (function (result){
var G__30222 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__30222) : rf.call(null,G__30222));
});
var G__30227__2 = (function (result,input){
if(cljs.core.truth_((function (){var G__30223 = input;
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__30223) : pred.call(null,G__30223));
})())){
var G__30224 = result;
var G__30225 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__30224,G__30225) : rf.call(null,G__30224,G__30225));
} else {
return cljs.core.reduced(result);
}
});
G__30227 = function(result,input){
switch(arguments.length){
case 0:
return G__30227__0.call(this);
case 1:
return G__30227__1.call(this,result);
case 2:
return G__30227__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__30227.cljs$core$IFn$_invoke$arity$0 = G__30227__0;
G__30227.cljs$core$IFn$_invoke$arity$1 = G__30227__1;
G__30227.cljs$core$IFn$_invoke$arity$2 = G__30227__2;
return G__30227;
})()
});
});
var take_while__2 = (function (pred,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
if(cljs.core.truth_((function (){var G__30226 = cljs.core.first(s);
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__30226) : pred.call(null,G__30226));
})())){
return cljs.core.cons(cljs.core.first(s),take_while.cljs$core$IFn$_invoke$arity$2(pred,cljs.core.rest(s)));
} else {
return null;
}
} else {
return null;
}
}),null,null));
});
take_while = function(pred,coll){
switch(arguments.length){
case 1:
return take_while__1.call(this,pred);
case 2:
return take_while__2.call(this,pred,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
take_while.cljs$core$IFn$_invoke$arity$1 = take_while__1;
take_while.cljs$core$IFn$_invoke$arity$2 = take_while__2;
return take_while;
})()
;
cljs.core.mk_bound_fn = (function mk_bound_fn(sc,test,key){
return (function (e){
var comp = cljs.core._comparator(sc);
var G__30232 = (function (){var G__30234 = cljs.core._entry_key(sc,e);
var G__30235 = key;
return (comp.cljs$core$IFn$_invoke$arity$2 ? comp.cljs$core$IFn$_invoke$arity$2(G__30234,G__30235) : comp.call(null,G__30234,G__30235));
})();
var G__30233 = (0);
return (test.cljs$core$IFn$_invoke$arity$2 ? test.cljs$core$IFn$_invoke$arity$2(G__30232,G__30233) : test.call(null,G__30232,G__30233));
});
});
/**
* sc must be a sorted collection, test(s) one of <, <=, > or
* >=. Returns a seq of those entries with keys ek for
* which (test (.. sc comparator (compare ek key)) 0) is true
*/
cljs.core.subseq = (function() {
var subseq = null;
var subseq__3 = (function (sc,test,key){
var include = cljs.core.mk_bound_fn(sc,test,key);
if(cljs.core.truth_(cljs.core.PersistentHashSet.fromArray([cljs.core._GT_,cljs.core._GT__EQ_], true).call(null,test))){
var temp__4126__auto__ = cljs.core._sorted_seq_from(sc,key,true);
if(cljs.core.truth_(temp__4126__auto__)){
var vec__30239 = temp__4126__auto__;
var e = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__30239,(0),null);
var s = vec__30239;
if(cljs.core.truth_((function (){var G__30240 = e;
return (include.cljs$core$IFn$_invoke$arity$1 ? include.cljs$core$IFn$_invoke$arity$1(G__30240) : include.call(null,G__30240));
})())){
return s;
} else {
return cljs.core.next(s);
}
} else {
return null;
}
} else {
return cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(include,cljs.core._sorted_seq(sc,true));
}
});
var subseq__5 = (function (sc,start_test,start_key,end_test,end_key){
var temp__4126__auto__ = cljs.core._sorted_seq_from(sc,start_key,true);
if(cljs.core.truth_(temp__4126__auto__)){
var vec__30241 = temp__4126__auto__;
var e = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__30241,(0),null);
var s = vec__30241;
return cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(cljs.core.mk_bound_fn(sc,end_test,end_key),(cljs.core.truth_(cljs.core.mk_bound_fn(sc,start_test,start_key).call(null,e))?s:cljs.core.next(s)));
} else {
return null;
}
});
subseq = function(sc,start_test,start_key,end_test,end_key){
switch(arguments.length){
case 3:
return subseq__3.call(this,sc,start_test,start_key);
case 5:
return subseq__5.call(this,sc,start_test,start_key,end_test,end_key);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
subseq.cljs$core$IFn$_invoke$arity$3 = subseq__3;
subseq.cljs$core$IFn$_invoke$arity$5 = subseq__5;
return subseq;
})()
;
/**
* sc must be a sorted collection, test(s) one of <, <=, > or
* >=. Returns a reverse seq of those entries with keys ek for
* which (test (.. sc comparator (compare ek key)) 0) is true
*/
cljs.core.rsubseq = (function() {
var rsubseq = null;
var rsubseq__3 = (function (sc,test,key){
var include = cljs.core.mk_bound_fn(sc,test,key);
if(cljs.core.truth_(cljs.core.PersistentHashSet.fromArray([cljs.core._LT_,cljs.core._LT__EQ_], true).call(null,test))){
var temp__4126__auto__ = cljs.core._sorted_seq_from(sc,key,false);
if(cljs.core.truth_(temp__4126__auto__)){
var vec__30245 = temp__4126__auto__;
var e = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__30245,(0),null);
var s = vec__30245;
if(cljs.core.truth_((function (){var G__30246 = e;
return (include.cljs$core$IFn$_invoke$arity$1 ? include.cljs$core$IFn$_invoke$arity$1(G__30246) : include.call(null,G__30246));
})())){
return s;
} else {
return cljs.core.next(s);
}
} else {
return null;
}
} else {
return cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(include,cljs.core._sorted_seq(sc,false));
}
});
var rsubseq__5 = (function (sc,start_test,start_key,end_test,end_key){
var temp__4126__auto__ = cljs.core._sorted_seq_from(sc,end_key,false);
if(cljs.core.truth_(temp__4126__auto__)){
var vec__30247 = temp__4126__auto__;
var e = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__30247,(0),null);
var s = vec__30247;
return cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(cljs.core.mk_bound_fn(sc,start_test,start_key),(cljs.core.truth_(cljs.core.mk_bound_fn(sc,end_test,end_key).call(null,e))?s:cljs.core.next(s)));
} else {
return null;
}
});
rsubseq = function(sc,start_test,start_key,end_test,end_key){
switch(arguments.length){
case 3:
return rsubseq__3.call(this,sc,start_test,start_key);
case 5:
return rsubseq__5.call(this,sc,start_test,start_key,end_test,end_key);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
rsubseq.cljs$core$IFn$_invoke$arity$3 = rsubseq__3;
rsubseq.cljs$core$IFn$_invoke$arity$5 = rsubseq__5;
return rsubseq;
})()
;

/**
* @constructor
*/
cljs.core.RangeIterator = (function (i,end,step){
this.i = i;
this.end = end;
this.step = step;
})
cljs.core.RangeIterator.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
if((self__.step > (0))){
return (self__.i < self__.end);
} else {
return (self__.i > self__.end);
}
});

cljs.core.RangeIterator.prototype.next = (function (){
var self__ = this;
var _ = this;
var ret = self__.i;
self__.i = (self__.i + self__.step);

return ret;
});

cljs.core.RangeIterator.cljs$lang$type = true;

cljs.core.RangeIterator.cljs$lang$ctorStr = "cljs.core/RangeIterator";

cljs.core.RangeIterator.cljs$lang$ctorPrWriter = (function (this__24859__auto__,writer__24860__auto__,opt__24861__auto__){
return cljs.core._write(writer__24860__auto__,"cljs.core/RangeIterator");
});

cljs.core.__GT_RangeIterator = (function __GT_RangeIterator(i,end,step){
return (new cljs.core.RangeIterator(i,end,step));
});


/**
* @constructor
*/
cljs.core.Range = (function (meta,start,end,step,__hash){
this.meta = meta;
this.start = start;
this.end = end;
this.step = step;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 32375006;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.Range.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.Range.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.Range.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (rng,n){
var self__ = this;
var rng__$1 = this;
if((n < cljs.core._count(rng__$1))){
return (self__.start + (n * self__.step));
} else {
if(((self__.start > self__.end)) && ((self__.step === (0)))){
return self__.start;
} else {
throw (new Error("Index out of bounds"));
}
}
});

cljs.core.Range.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (rng,n,not_found){
var self__ = this;
var rng__$1 = this;
if((n < cljs.core._count(rng__$1))){
return (self__.start + (n * self__.step));
} else {
if(((self__.start > self__.end)) && ((self__.step === (0)))){
return self__.start;
} else {
return not_found;
}
}
});

cljs.core.Range.prototype.cljs$core$IIterable$ = true;

cljs.core.Range.prototype.cljs$core$IIterable$_iterator$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.RangeIterator(self__.start,self__.end,self__.step));
});

cljs.core.Range.prototype.cljs$core$IMeta$_meta$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
return self__.meta;
});

cljs.core.Range.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.Range(self__.meta,self__.start,self__.end,self__.step,self__.__hash));
});

cljs.core.Range.prototype.cljs$core$INext$_next$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
if((self__.step > (0))){
if(((self__.start + self__.step) < self__.end)){
return (new cljs.core.Range(self__.meta,(self__.start + self__.step),self__.end,self__.step,null));
} else {
return null;
}
} else {
if(((self__.start + self__.step) > self__.end)){
return (new cljs.core.Range(self__.meta,(self__.start + self__.step),self__.end,self__.step,null));
} else {
return null;
}
}
});

cljs.core.Range.prototype.cljs$core$ICounted$_count$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
if(cljs.core.not(cljs.core._seq(rng__$1))){
return (0);
} else {
var G__30248 = ((self__.end - self__.start) / self__.step);
return (Math.ceil.cljs$core$IFn$_invoke$arity$1 ? Math.ceil.cljs$core$IFn$_invoke$arity$1(G__30248) : Math.ceil.call(null,G__30248));
}
});

cljs.core.Range.prototype.cljs$core$IHash$_hash$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
var h__24693__auto__ = self__.__hash;
if(!((h__24693__auto__ == null))){
return h__24693__auto__;
} else {
var h__24693__auto____$1 = cljs.core.hash_ordered_coll(rng__$1);
self__.__hash = h__24693__auto____$1;

return h__24693__auto____$1;
}
});

cljs.core.Range.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (rng,other){
var self__ = this;
var rng__$1 = this;
return cljs.core.equiv_sequential(rng__$1,other);
});

cljs.core.Range.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.Range.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (rng,f){
var self__ = this;
var rng__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(rng__$1,f);
});

cljs.core.Range.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (rng,f,init){
var self__ = this;
var rng__$1 = this;
var i = self__.start;
var ret = init;
while(true){
if((((self__.step > (0)))?(i < self__.end):(i > self__.end))){
var ret__$1 = (function (){var G__30249 = ret;
var G__30250 = i;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__30249,G__30250) : f.call(null,G__30249,G__30250));
})();
if(cljs.core.reduced_QMARK_(ret__$1)){
var G__30251 = ret__$1;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__30251) : cljs.core.deref.call(null,G__30251));
} else {
var G__30252 = (i + self__.step);
var G__30253 = ret__$1;
i = G__30252;
ret = G__30253;
continue;
}
} else {
return ret;
}
break;
}
});

cljs.core.Range.prototype.cljs$core$ISeq$_first$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
if((cljs.core._seq(rng__$1) == null)){
return null;
} else {
return self__.start;
}
});

cljs.core.Range.prototype.cljs$core$ISeq$_rest$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
if(!((cljs.core._seq(rng__$1) == null))){
return (new cljs.core.Range(self__.meta,(self__.start + self__.step),self__.end,self__.step,null));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.Range.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
if((self__.step > (0))){
if((self__.start < self__.end)){
return rng__$1;
} else {
return null;
}
} else {
if((self__.start > self__.end)){
return rng__$1;
} else {
return null;
}
}
});

cljs.core.Range.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (rng,meta__$1){
var self__ = this;
var rng__$1 = this;
return (new cljs.core.Range(meta__$1,self__.start,self__.end,self__.step,self__.__hash));
});

cljs.core.Range.prototype.cljs$core$ICollection$_conj$arity$2 = (function (rng,o){
var self__ = this;
var rng__$1 = this;
return cljs.core.cons(o,rng__$1);
});

cljs.core.Range.cljs$lang$type = true;

cljs.core.Range.cljs$lang$ctorStr = "cljs.core/Range";

cljs.core.Range.cljs$lang$ctorPrWriter = (function (this__24859__auto__,writer__24860__auto__,opt__24861__auto__){
return cljs.core._write(writer__24860__auto__,"cljs.core/Range");
});

cljs.core.__GT_Range = (function __GT_Range(meta,start,end,step,__hash){
return (new cljs.core.Range(meta,start,end,step,__hash));
});

(cljs.core.Range.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__25250__auto__ = this;
return cljs.core.es6_iterator(this__25250__auto__);
}));
/**
* Returns a lazy seq of nums from start (inclusive) to end
* (exclusive), by step, where start defaults to 0, step to 1,
* and end to infinity.
*/
cljs.core.range = (function() {
var range = null;
var range__0 = (function (){
return range.cljs$core$IFn$_invoke$arity$3((0),Number.MAX_VALUE,(1));
});
var range__1 = (function (end){
return range.cljs$core$IFn$_invoke$arity$3((0),end,(1));
});
var range__2 = (function (start,end){
return range.cljs$core$IFn$_invoke$arity$3(start,end,(1));
});
var range__3 = (function (start,end,step){
return (new cljs.core.Range(null,start,end,step,null));
});
range = function(start,end,step){
switch(arguments.length){
case 0:
return range__0.call(this);
case 1:
return range__1.call(this,start);
case 2:
return range__2.call(this,start,end);
case 3:
return range__3.call(this,start,end,step);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
range.cljs$core$IFn$_invoke$arity$0 = range__0;
range.cljs$core$IFn$_invoke$arity$1 = range__1;
range.cljs$core$IFn$_invoke$arity$2 = range__2;
range.cljs$core$IFn$_invoke$arity$3 = range__3;
return range;
})()
;
/**
* Returns a lazy seq of every nth item in coll.  Returns a stateful
* transducer when no collection is provided.
*/
cljs.core.take_nth = (function() {
var take_nth = null;
var take_nth__1 = (function (n){
return (function (rf){
var ia = cljs.core.volatile_BANG_((-1));
return ((function (ia){
return (function() {
var G__30271 = null;
var G__30271__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__30271__1 = (function (result){
var G__30268 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__30268) : rf.call(null,G__30268));
});
var G__30271__2 = (function (result,input){
var i = ia.cljs$core$IVolatile$_vreset_BANG_$arity$2(null,(ia.cljs$core$IDeref$_deref$arity$1(null) + (1)));
if((cljs.core.rem(i,n) === (0))){
var G__30269 = result;
var G__30270 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__30269,G__30270) : rf.call(null,G__30269,G__30270));
} else {
return result;
}
});
G__30271 = function(result,input){
switch(arguments.length){
case 0:
return G__30271__0.call(this);
case 1:
return G__30271__1.call(this,result);
case 2:
return G__30271__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__30271.cljs$core$IFn$_invoke$arity$0 = G__30271__0;
G__30271.cljs$core$IFn$_invoke$arity$1 = G__30271__1;
G__30271.cljs$core$IFn$_invoke$arity$2 = G__30271__2;
return G__30271;
})()
;})(ia))
});
});
var take_nth__2 = (function (n,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
return cljs.core.cons(cljs.core.first(s),take_nth.cljs$core$IFn$_invoke$arity$2(n,cljs.core.drop.cljs$core$IFn$_invoke$arity$2(n,s)));
} else {
return null;
}
}),null,null));
});
take_nth = function(n,coll){
switch(arguments.length){
case 1:
return take_nth__1.call(this,n);
case 2:
return take_nth__2.call(this,n,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
take_nth.cljs$core$IFn$_invoke$arity$1 = take_nth__1;
take_nth.cljs$core$IFn$_invoke$arity$2 = take_nth__2;
return take_nth;
})()
;
/**
* Returns a vector of [(take-while pred coll) (drop-while pred coll)]
*/
cljs.core.split_with = (function split_with(pred,coll){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(pred,coll),cljs.core.drop_while.cljs$core$IFn$_invoke$arity$2(pred,coll)], null);
});
/**
* Applies f to each value in coll, splitting it each time f returns a
* new value.  Returns a lazy seq of partitions.  Returns a stateful
* transducer when no collection is provided.
*/
cljs.core.partition_by = (function() {
var partition_by = null;
var partition_by__1 = (function (f){
return (function (rf){
var a = cljs.core.array_list();
var pa = cljs.core.volatile_BANG_(new cljs.core.Keyword("cljs.core","none","cljs.core/none",926646439));
return ((function (a,pa){
return (function() {
var G__30293 = null;
var G__30293__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__30293__1 = (function (result){
var result__$1 = (cljs.core.truth_(a.isEmpty())?result:(function (){var v = cljs.core.vec(a.toArray());
a.clear();

return cljs.core.unreduced((function (){var G__30284 = result;
var G__30285 = v;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__30284,G__30285) : rf.call(null,G__30284,G__30285));
})());
})());
var G__30286 = result__$1;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__30286) : rf.call(null,G__30286));
});
var G__30293__2 = (function (result,input){
var pval = (function (){var G__30287 = pa;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__30287) : cljs.core.deref.call(null,G__30287));
})();
var val = (function (){var G__30288 = input;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__30288) : f.call(null,G__30288));
})();
cljs.core.vreset_BANG_(pa,val);

if((cljs.core.keyword_identical_QMARK_(pval,new cljs.core.Keyword("cljs.core","none","cljs.core/none",926646439))) || (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(val,pval))){
a.add(input);

return result;
} else {
var v = cljs.core.vec(a.toArray());
a.clear();

var ret = (function (){var G__30289 = result;
var G__30290 = v;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__30289,G__30290) : rf.call(null,G__30289,G__30290));
})();
if(cljs.core.reduced_QMARK_(ret)){
} else {
a.add(input);
}

return ret;
}
});
G__30293 = function(result,input){
switch(arguments.length){
case 0:
return G__30293__0.call(this);
case 1:
return G__30293__1.call(this,result);
case 2:
return G__30293__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__30293.cljs$core$IFn$_invoke$arity$0 = G__30293__0;
G__30293.cljs$core$IFn$_invoke$arity$1 = G__30293__1;
G__30293.cljs$core$IFn$_invoke$arity$2 = G__30293__2;
return G__30293;
})()
;})(a,pa))
});
});
var partition_by__2 = (function (f,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
var fst = cljs.core.first(s);
var fv = (function (){var G__30291 = fst;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__30291) : f.call(null,G__30291));
})();
var run = cljs.core.cons(fst,cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(((function (fst,fv,s,temp__4126__auto__){
return (function (p1__30272_SHARP_){
return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(fv,(function (){var G__30292 = p1__30272_SHARP_;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__30292) : f.call(null,G__30292));
})());
});})(fst,fv,s,temp__4126__auto__))
,cljs.core.next(s)));
return cljs.core.cons(run,partition_by.cljs$core$IFn$_invoke$arity$2(f,cljs.core.seq(cljs.core.drop.cljs$core$IFn$_invoke$arity$2(cljs.core.count(run),s))));
} else {
return null;
}
}),null,null));
});
partition_by = function(f,coll){
switch(arguments.length){
case 1:
return partition_by__1.call(this,f);
case 2:
return partition_by__2.call(this,f,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
partition_by.cljs$core$IFn$_invoke$arity$1 = partition_by__1;
partition_by.cljs$core$IFn$_invoke$arity$2 = partition_by__2;
return partition_by;
})()
;
/**
* Returns a map from distinct items in coll to the number of times
* they appear.
*/
cljs.core.frequencies = (function frequencies(coll){
return cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (counts,x){
return cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(counts,x,(cljs.core.get.cljs$core$IFn$_invoke$arity$3(counts,x,(0)) + (1)));
}),cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY),coll));
});
/**
* Returns a lazy seq of the intermediate values of the reduction (as
* per reduce) of coll by f, starting with init.
*/
cljs.core.reductions = (function() {
var reductions = null;
var reductions__2 = (function (f,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4124__auto__ = cljs.core.seq(coll);
if(temp__4124__auto__){
var s = temp__4124__auto__;
return reductions.cljs$core$IFn$_invoke$arity$3(f,cljs.core.first(s),cljs.core.rest(s));
} else {
return cljs.core._conj(cljs.core.List.EMPTY,(function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})());
}
}),null,null));
});
var reductions__3 = (function (f,init,coll){
return cljs.core.cons(init,(new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
return reductions.cljs$core$IFn$_invoke$arity$3(f,(function (){var G__30302 = init;
var G__30303 = cljs.core.first(s);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__30302,G__30303) : f.call(null,G__30302,G__30303));
})(),cljs.core.rest(s));
} else {
return null;
}
}),null,null)));
});
reductions = function(f,init,coll){
switch(arguments.length){
case 2:
return reductions__2.call(this,f,init);
case 3:
return reductions__3.call(this,f,init,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
reductions.cljs$core$IFn$_invoke$arity$2 = reductions__2;
reductions.cljs$core$IFn$_invoke$arity$3 = reductions__3;
return reductions;
})()
;
/**
* Takes a set of functions and returns a fn that is the juxtaposition
* of those fns.  The returned fn takes a variable number of args, and
* returns a vector containing the result of applying each fn to the
* args (left-to-right).
* ((juxt a b c) x) => [(a x) (b x) (c x)]
* @param {...*} var_args
*/
cljs.core.juxt = (function() {
var juxt = null;
var juxt__1 = (function (f){
return (function() {
var G__30398 = null;
var G__30398__0 = (function (){
return (new cljs.core.PersistentVector(null,1,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})()],null));
});
var G__30398__1 = (function (x){
return (new cljs.core.PersistentVector(null,1,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__30356 = x;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__30356) : f.call(null,G__30356));
})()],null));
});
var G__30398__2 = (function (x,y){
return (new cljs.core.PersistentVector(null,1,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__30357 = x;
var G__30358 = y;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__30357,G__30358) : f.call(null,G__30357,G__30358));
})()],null));
});
var G__30398__3 = (function (x,y,z){
return (new cljs.core.PersistentVector(null,1,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__30359 = x;
var G__30360 = y;
var G__30361 = z;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__30359,G__30360,G__30361) : f.call(null,G__30359,G__30360,G__30361));
})()],null));
});
var G__30398__4 = (function() { 
var G__30399__delegate = function (x,y,z,args){
return (new cljs.core.PersistentVector(null,1,(5),cljs.core.PersistentVector.EMPTY_NODE,[cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,x,y,z,args)],null));
};
var G__30399 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__30400__i = 0, G__30400__a = new Array(arguments.length -  3);
while (G__30400__i < G__30400__a.length) {G__30400__a[G__30400__i] = arguments[G__30400__i + 3]; ++G__30400__i;}
  args = new cljs.core.IndexedSeq(G__30400__a,0);
} 
return G__30399__delegate.call(this,x,y,z,args);};
G__30399.cljs$lang$maxFixedArity = 3;
G__30399.cljs$lang$applyTo = (function (arglist__30401){
var x = cljs.core.first(arglist__30401);
arglist__30401 = cljs.core.next(arglist__30401);
var y = cljs.core.first(arglist__30401);
arglist__30401 = cljs.core.next(arglist__30401);
var z = cljs.core.first(arglist__30401);
var args = cljs.core.rest(arglist__30401);
return G__30399__delegate(x,y,z,args);
});
G__30399.cljs$core$IFn$_invoke$arity$variadic = G__30399__delegate;
return G__30399;
})()
;
G__30398 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__30398__0.call(this);
case 1:
return G__30398__1.call(this,x);
case 2:
return G__30398__2.call(this,x,y);
case 3:
return G__30398__3.call(this,x,y,z);
default:
var G__30402 = null;
if (arguments.length > 3) {
var G__30403__i = 0, G__30403__a = new Array(arguments.length -  3);
while (G__30403__i < G__30403__a.length) {G__30403__a[G__30403__i] = arguments[G__30403__i + 3]; ++G__30403__i;}
G__30402 = new cljs.core.IndexedSeq(G__30403__a,0);
}
return G__30398__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__30402);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__30398.cljs$lang$maxFixedArity = 3;
G__30398.cljs$lang$applyTo = G__30398__4.cljs$lang$applyTo;
G__30398.cljs$core$IFn$_invoke$arity$0 = G__30398__0;
G__30398.cljs$core$IFn$_invoke$arity$1 = G__30398__1;
G__30398.cljs$core$IFn$_invoke$arity$2 = G__30398__2;
G__30398.cljs$core$IFn$_invoke$arity$3 = G__30398__3;
G__30398.cljs$core$IFn$_invoke$arity$variadic = G__30398__4.cljs$core$IFn$_invoke$arity$variadic;
return G__30398;
})()
});
var juxt__2 = (function (f,g){
return (function() {
var G__30404 = null;
var G__30404__0 = (function (){
return (new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})(),(function (){return (g.cljs$core$IFn$_invoke$arity$0 ? g.cljs$core$IFn$_invoke$arity$0() : g.call(null));
})()],null));
});
var G__30404__1 = (function (x){
return (new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__30362 = x;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__30362) : f.call(null,G__30362));
})(),(function (){var G__30363 = x;
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__30363) : g.call(null,G__30363));
})()],null));
});
var G__30404__2 = (function (x,y){
return (new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__30364 = x;
var G__30365 = y;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__30364,G__30365) : f.call(null,G__30364,G__30365));
})(),(function (){var G__30366 = x;
var G__30367 = y;
return (g.cljs$core$IFn$_invoke$arity$2 ? g.cljs$core$IFn$_invoke$arity$2(G__30366,G__30367) : g.call(null,G__30366,G__30367));
})()],null));
});
var G__30404__3 = (function (x,y,z){
return (new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__30368 = x;
var G__30369 = y;
var G__30370 = z;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__30368,G__30369,G__30370) : f.call(null,G__30368,G__30369,G__30370));
})(),(function (){var G__30371 = x;
var G__30372 = y;
var G__30373 = z;
return (g.cljs$core$IFn$_invoke$arity$3 ? g.cljs$core$IFn$_invoke$arity$3(G__30371,G__30372,G__30373) : g.call(null,G__30371,G__30372,G__30373));
})()],null));
});
var G__30404__4 = (function() { 
var G__30405__delegate = function (x,y,z,args){
return (new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,x,y,z,args),cljs.core.apply.cljs$core$IFn$_invoke$arity$5(g,x,y,z,args)],null));
};
var G__30405 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__30406__i = 0, G__30406__a = new Array(arguments.length -  3);
while (G__30406__i < G__30406__a.length) {G__30406__a[G__30406__i] = arguments[G__30406__i + 3]; ++G__30406__i;}
  args = new cljs.core.IndexedSeq(G__30406__a,0);
} 
return G__30405__delegate.call(this,x,y,z,args);};
G__30405.cljs$lang$maxFixedArity = 3;
G__30405.cljs$lang$applyTo = (function (arglist__30407){
var x = cljs.core.first(arglist__30407);
arglist__30407 = cljs.core.next(arglist__30407);
var y = cljs.core.first(arglist__30407);
arglist__30407 = cljs.core.next(arglist__30407);
var z = cljs.core.first(arglist__30407);
var args = cljs.core.rest(arglist__30407);
return G__30405__delegate(x,y,z,args);
});
G__30405.cljs$core$IFn$_invoke$arity$variadic = G__30405__delegate;
return G__30405;
})()
;
G__30404 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__30404__0.call(this);
case 1:
return G__30404__1.call(this,x);
case 2:
return G__30404__2.call(this,x,y);
case 3:
return G__30404__3.call(this,x,y,z);
default:
var G__30408 = null;
if (arguments.length > 3) {
var G__30409__i = 0, G__30409__a = new Array(arguments.length -  3);
while (G__30409__i < G__30409__a.length) {G__30409__a[G__30409__i] = arguments[G__30409__i + 3]; ++G__30409__i;}
G__30408 = new cljs.core.IndexedSeq(G__30409__a,0);
}
return G__30404__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__30408);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__30404.cljs$lang$maxFixedArity = 3;
G__30404.cljs$lang$applyTo = G__30404__4.cljs$lang$applyTo;
G__30404.cljs$core$IFn$_invoke$arity$0 = G__30404__0;
G__30404.cljs$core$IFn$_invoke$arity$1 = G__30404__1;
G__30404.cljs$core$IFn$_invoke$arity$2 = G__30404__2;
G__30404.cljs$core$IFn$_invoke$arity$3 = G__30404__3;
G__30404.cljs$core$IFn$_invoke$arity$variadic = G__30404__4.cljs$core$IFn$_invoke$arity$variadic;
return G__30404;
})()
});
var juxt__3 = (function (f,g,h){
return (function() {
var G__30410 = null;
var G__30410__0 = (function (){
return (new cljs.core.PersistentVector(null,3,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})(),(function (){return (g.cljs$core$IFn$_invoke$arity$0 ? g.cljs$core$IFn$_invoke$arity$0() : g.call(null));
})(),(function (){return (h.cljs$core$IFn$_invoke$arity$0 ? h.cljs$core$IFn$_invoke$arity$0() : h.call(null));
})()],null));
});
var G__30410__1 = (function (x){
return (new cljs.core.PersistentVector(null,3,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__30374 = x;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__30374) : f.call(null,G__30374));
})(),(function (){var G__30375 = x;
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__30375) : g.call(null,G__30375));
})(),(function (){var G__30376 = x;
return (h.cljs$core$IFn$_invoke$arity$1 ? h.cljs$core$IFn$_invoke$arity$1(G__30376) : h.call(null,G__30376));
})()],null));
});
var G__30410__2 = (function (x,y){
return (new cljs.core.PersistentVector(null,3,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__30377 = x;
var G__30378 = y;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__30377,G__30378) : f.call(null,G__30377,G__30378));
})(),(function (){var G__30379 = x;
var G__30380 = y;
return (g.cljs$core$IFn$_invoke$arity$2 ? g.cljs$core$IFn$_invoke$arity$2(G__30379,G__30380) : g.call(null,G__30379,G__30380));
})(),(function (){var G__30381 = x;
var G__30382 = y;
return (h.cljs$core$IFn$_invoke$arity$2 ? h.cljs$core$IFn$_invoke$arity$2(G__30381,G__30382) : h.call(null,G__30381,G__30382));
})()],null));
});
var G__30410__3 = (function (x,y,z){
return (new cljs.core.PersistentVector(null,3,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__30383 = x;
var G__30384 = y;
var G__30385 = z;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__30383,G__30384,G__30385) : f.call(null,G__30383,G__30384,G__30385));
})(),(function (){var G__30386 = x;
var G__30387 = y;
var G__30388 = z;
return (g.cljs$core$IFn$_invoke$arity$3 ? g.cljs$core$IFn$_invoke$arity$3(G__30386,G__30387,G__30388) : g.call(null,G__30386,G__30387,G__30388));
})(),(function (){var G__30389 = x;
var G__30390 = y;
var G__30391 = z;
return (h.cljs$core$IFn$_invoke$arity$3 ? h.cljs$core$IFn$_invoke$arity$3(G__30389,G__30390,G__30391) : h.call(null,G__30389,G__30390,G__30391));
})()],null));
});
var G__30410__4 = (function() { 
var G__30411__delegate = function (x,y,z,args){
return (new cljs.core.PersistentVector(null,3,(5),cljs.core.PersistentVector.EMPTY_NODE,[cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,x,y,z,args),cljs.core.apply.cljs$core$IFn$_invoke$arity$5(g,x,y,z,args),cljs.core.apply.cljs$core$IFn$_invoke$arity$5(h,x,y,z,args)],null));
};
var G__30411 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__30412__i = 0, G__30412__a = new Array(arguments.length -  3);
while (G__30412__i < G__30412__a.length) {G__30412__a[G__30412__i] = arguments[G__30412__i + 3]; ++G__30412__i;}
  args = new cljs.core.IndexedSeq(G__30412__a,0);
} 
return G__30411__delegate.call(this,x,y,z,args);};
G__30411.cljs$lang$maxFixedArity = 3;
G__30411.cljs$lang$applyTo = (function (arglist__30413){
var x = cljs.core.first(arglist__30413);
arglist__30413 = cljs.core.next(arglist__30413);
var y = cljs.core.first(arglist__30413);
arglist__30413 = cljs.core.next(arglist__30413);
var z = cljs.core.first(arglist__30413);
var args = cljs.core.rest(arglist__30413);
return G__30411__delegate(x,y,z,args);
});
G__30411.cljs$core$IFn$_invoke$arity$variadic = G__30411__delegate;
return G__30411;
})()
;
G__30410 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__30410__0.call(this);
case 1:
return G__30410__1.call(this,x);
case 2:
return G__30410__2.call(this,x,y);
case 3:
return G__30410__3.call(this,x,y,z);
default:
var G__30414 = null;
if (arguments.length > 3) {
var G__30415__i = 0, G__30415__a = new Array(arguments.length -  3);
while (G__30415__i < G__30415__a.length) {G__30415__a[G__30415__i] = arguments[G__30415__i + 3]; ++G__30415__i;}
G__30414 = new cljs.core.IndexedSeq(G__30415__a,0);
}
return G__30410__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__30414);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__30410.cljs$lang$maxFixedArity = 3;
G__30410.cljs$lang$applyTo = G__30410__4.cljs$lang$applyTo;
G__30410.cljs$core$IFn$_invoke$arity$0 = G__30410__0;
G__30410.cljs$core$IFn$_invoke$arity$1 = G__30410__1;
G__30410.cljs$core$IFn$_invoke$arity$2 = G__30410__2;
G__30410.cljs$core$IFn$_invoke$arity$3 = G__30410__3;
G__30410.cljs$core$IFn$_invoke$arity$variadic = G__30410__4.cljs$core$IFn$_invoke$arity$variadic;
return G__30410;
})()
});
var juxt__4 = (function() { 
var G__30416__delegate = function (f,g,h,fs){
var fs__$1 = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(f,g,h,fs);
return ((function (fs__$1){
return (function() {
var G__30417 = null;
var G__30417__0 = (function (){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (fs__$1){
return (function (p1__30304_SHARP_,p2__30305_SHARP_){
return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__30304_SHARP_,(function (){return (p2__30305_SHARP_.cljs$core$IFn$_invoke$arity$0 ? p2__30305_SHARP_.cljs$core$IFn$_invoke$arity$0() : p2__30305_SHARP_.call(null));
})());
});})(fs__$1))
,cljs.core.PersistentVector.EMPTY,fs__$1);
});
var G__30417__1 = (function (x){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (fs__$1){
return (function (p1__30306_SHARP_,p2__30307_SHARP_){
return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__30306_SHARP_,(function (){var G__30392 = x;
return (p2__30307_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p2__30307_SHARP_.cljs$core$IFn$_invoke$arity$1(G__30392) : p2__30307_SHARP_.call(null,G__30392));
})());
});})(fs__$1))
,cljs.core.PersistentVector.EMPTY,fs__$1);
});
var G__30417__2 = (function (x,y){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (fs__$1){
return (function (p1__30308_SHARP_,p2__30309_SHARP_){
return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__30308_SHARP_,(function (){var G__30393 = x;
var G__30394 = y;
return (p2__30309_SHARP_.cljs$core$IFn$_invoke$arity$2 ? p2__30309_SHARP_.cljs$core$IFn$_invoke$arity$2(G__30393,G__30394) : p2__30309_SHARP_.call(null,G__30393,G__30394));
})());
});})(fs__$1))
,cljs.core.PersistentVector.EMPTY,fs__$1);
});
var G__30417__3 = (function (x,y,z){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (fs__$1){
return (function (p1__30310_SHARP_,p2__30311_SHARP_){
return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__30310_SHARP_,(function (){var G__30395 = x;
var G__30396 = y;
var G__30397 = z;
return (p2__30311_SHARP_.cljs$core$IFn$_invoke$arity$3 ? p2__30311_SHARP_.cljs$core$IFn$_invoke$arity$3(G__30395,G__30396,G__30397) : p2__30311_SHARP_.call(null,G__30395,G__30396,G__30397));
})());
});})(fs__$1))
,cljs.core.PersistentVector.EMPTY,fs__$1);
});
var G__30417__4 = (function() { 
var G__30418__delegate = function (x,y,z,args){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (fs__$1){
return (function (p1__30312_SHARP_,p2__30313_SHARP_){
return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__30312_SHARP_,cljs.core.apply.cljs$core$IFn$_invoke$arity$5(p2__30313_SHARP_,x,y,z,args));
});})(fs__$1))
,cljs.core.PersistentVector.EMPTY,fs__$1);
};
var G__30418 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__30419__i = 0, G__30419__a = new Array(arguments.length -  3);
while (G__30419__i < G__30419__a.length) {G__30419__a[G__30419__i] = arguments[G__30419__i + 3]; ++G__30419__i;}
  args = new cljs.core.IndexedSeq(G__30419__a,0);
} 
return G__30418__delegate.call(this,x,y,z,args);};
G__30418.cljs$lang$maxFixedArity = 3;
G__30418.cljs$lang$applyTo = (function (arglist__30420){
var x = cljs.core.first(arglist__30420);
arglist__30420 = cljs.core.next(arglist__30420);
var y = cljs.core.first(arglist__30420);
arglist__30420 = cljs.core.next(arglist__30420);
var z = cljs.core.first(arglist__30420);
var args = cljs.core.rest(arglist__30420);
return G__30418__delegate(x,y,z,args);
});
G__30418.cljs$core$IFn$_invoke$arity$variadic = G__30418__delegate;
return G__30418;
})()
;
G__30417 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__30417__0.call(this);
case 1:
return G__30417__1.call(this,x);
case 2:
return G__30417__2.call(this,x,y);
case 3:
return G__30417__3.call(this,x,y,z);
default:
var G__30421 = null;
if (arguments.length > 3) {
var G__30422__i = 0, G__30422__a = new Array(arguments.length -  3);
while (G__30422__i < G__30422__a.length) {G__30422__a[G__30422__i] = arguments[G__30422__i + 3]; ++G__30422__i;}
G__30421 = new cljs.core.IndexedSeq(G__30422__a,0);
}
return G__30417__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__30421);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__30417.cljs$lang$maxFixedArity = 3;
G__30417.cljs$lang$applyTo = G__30417__4.cljs$lang$applyTo;
G__30417.cljs$core$IFn$_invoke$arity$0 = G__30417__0;
G__30417.cljs$core$IFn$_invoke$arity$1 = G__30417__1;
G__30417.cljs$core$IFn$_invoke$arity$2 = G__30417__2;
G__30417.cljs$core$IFn$_invoke$arity$3 = G__30417__3;
G__30417.cljs$core$IFn$_invoke$arity$variadic = G__30417__4.cljs$core$IFn$_invoke$arity$variadic;
return G__30417;
})()
;})(fs__$1))
};
var G__30416 = function (f,g,h,var_args){
var fs = null;
if (arguments.length > 3) {
var G__30423__i = 0, G__30423__a = new Array(arguments.length -  3);
while (G__30423__i < G__30423__a.length) {G__30423__a[G__30423__i] = arguments[G__30423__i + 3]; ++G__30423__i;}
  fs = new cljs.core.IndexedSeq(G__30423__a,0);
} 
return G__30416__delegate.call(this,f,g,h,fs);};
G__30416.cljs$lang$maxFixedArity = 3;
G__30416.cljs$lang$applyTo = (function (arglist__30424){
var f = cljs.core.first(arglist__30424);
arglist__30424 = cljs.core.next(arglist__30424);
var g = cljs.core.first(arglist__30424);
arglist__30424 = cljs.core.next(arglist__30424);
var h = cljs.core.first(arglist__30424);
var fs = cljs.core.rest(arglist__30424);
return G__30416__delegate(f,g,h,fs);
});
G__30416.cljs$core$IFn$_invoke$arity$variadic = G__30416__delegate;
return G__30416;
})()
;
juxt = function(f,g,h,var_args){
var fs = var_args;
switch(arguments.length){
case 1:
return juxt__1.call(this,f);
case 2:
return juxt__2.call(this,f,g);
case 3:
return juxt__3.call(this,f,g,h);
default:
var G__30425 = null;
if (arguments.length > 3) {
var G__30426__i = 0, G__30426__a = new Array(arguments.length -  3);
while (G__30426__i < G__30426__a.length) {G__30426__a[G__30426__i] = arguments[G__30426__i + 3]; ++G__30426__i;}
G__30425 = new cljs.core.IndexedSeq(G__30426__a,0);
}
return juxt__4.cljs$core$IFn$_invoke$arity$variadic(f,g,h, G__30425);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
juxt.cljs$lang$maxFixedArity = 3;
juxt.cljs$lang$applyTo = juxt__4.cljs$lang$applyTo;
juxt.cljs$core$IFn$_invoke$arity$1 = juxt__1;
juxt.cljs$core$IFn$_invoke$arity$2 = juxt__2;
juxt.cljs$core$IFn$_invoke$arity$3 = juxt__3;
juxt.cljs$core$IFn$_invoke$arity$variadic = juxt__4.cljs$core$IFn$_invoke$arity$variadic;
return juxt;
})()
;
/**
* When lazy sequences are produced via functions that have side
* effects, any effects other than those needed to produce the first
* element in the seq do not occur until the seq is consumed. dorun can
* be used to force any effects. Walks through the successive nexts of
* the seq, does not retain the head and returns nil.
*/
cljs.core.dorun = (function() {
var dorun = null;
var dorun__1 = (function (coll){
while(true){
if(cljs.core.seq(coll)){
var G__30427 = cljs.core.next(coll);
coll = G__30427;
continue;
} else {
return null;
}
break;
}
});
var dorun__2 = (function (n,coll){
while(true){
if((cljs.core.seq(coll)) && ((n > (0)))){
var G__30428 = (n - (1));
var G__30429 = cljs.core.next(coll);
n = G__30428;
coll = G__30429;
continue;
} else {
return null;
}
break;
}
});
dorun = function(n,coll){
switch(arguments.length){
case 1:
return dorun__1.call(this,n);
case 2:
return dorun__2.call(this,n,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
dorun.cljs$core$IFn$_invoke$arity$1 = dorun__1;
dorun.cljs$core$IFn$_invoke$arity$2 = dorun__2;
return dorun;
})()
;
/**
* When lazy sequences are produced via functions that have side
* effects, any effects other than those needed to produce the first
* element in the seq do not occur until the seq is consumed. doall can
* be used to force any effects. Walks through the successive nexts of
* the seq, retains the head and returns it, thus causing the entire
* seq to reside in memory at one time.
*/
cljs.core.doall = (function() {
var doall = null;
var doall__1 = (function (coll){
cljs.core.dorun.cljs$core$IFn$_invoke$arity$1(coll);

return coll;
});
var doall__2 = (function (n,coll){
cljs.core.dorun.cljs$core$IFn$_invoke$arity$2(n,coll);

return coll;
});
doall = function(n,coll){
switch(arguments.length){
case 1:
return doall__1.call(this,n);
case 2:
return doall__2.call(this,n,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
doall.cljs$core$IFn$_invoke$arity$1 = doall__1;
doall.cljs$core$IFn$_invoke$arity$2 = doall__2;
return doall;
})()
;
cljs.core.regexp_QMARK_ = (function regexp_QMARK_(o){
return (o instanceof RegExp);
});
/**
* Returns the result of (re-find re s) if re fully matches s.
*/
cljs.core.re_matches = (function re_matches(re,s){
if(typeof s === 'string'){
var matches = re.exec(s);
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.first(matches),s)){
if((cljs.core.count(matches) === (1))){
return cljs.core.first(matches);
} else {
return cljs.core.vec(matches);
}
} else {
return null;
}
} else {
throw (new TypeError("re-matches must match against a string."));
}
});
/**
* Returns the first regex match, if any, of s to re, using
* re.exec(s). Returns a vector, containing first the matching
* substring, then any capturing groups if the regular expression contains
* capturing groups.
*/
cljs.core.re_find = (function re_find(re,s){
if(typeof s === 'string'){
var matches = re.exec(s);
if((matches == null)){
return null;
} else {
if((cljs.core.count(matches) === (1))){
return cljs.core.first(matches);
} else {
return cljs.core.vec(matches);
}
}
} else {
throw (new TypeError("re-find must match against a string."));
}
});
/**
* Returns a lazy sequence of successive matches of re in s.
*/
cljs.core.re_seq = (function re_seq(re,s){
var match_data = cljs.core.re_find(re,s);
var match_idx = s.search(re);
var match_str = ((cljs.core.coll_QMARK_(match_data))?cljs.core.first(match_data):match_data);
var post_match = cljs.core.subs.cljs$core$IFn$_invoke$arity$2(s,(match_idx + cljs.core.count(match_str)));
if(cljs.core.truth_(match_data)){
return (new cljs.core.LazySeq(null,((function (match_data,match_idx,match_str,post_match){
return (function (){
return cljs.core.cons(match_data,((cljs.core.seq(post_match))?re_seq(re,post_match):null));
});})(match_data,match_idx,match_str,post_match))
,null,null));
} else {
return null;
}
});
/**
* Returns an instance of RegExp which has compiled the provided string.
*/
cljs.core.re_pattern = (function re_pattern(s){
if((s instanceof RegExp)){
return s;
} else {
var vec__30433 = cljs.core.re_find(/^(?:\(\?([idmsux]*)\))?(.*)/,s);
var _ = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__30433,(0),null);
var flags = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__30433,(1),null);
var pattern = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__30433,(2),null);
return (new RegExp(pattern,flags));
}
});
cljs.core.pr_sequential_writer = (function pr_sequential_writer(writer,print_one,begin,sep,end,opts,coll){
var _STAR_print_level_STAR_30441 = cljs.core._STAR_print_level_STAR_;
try{cljs.core._STAR_print_level_STAR_ = (((cljs.core._STAR_print_level_STAR_ == null))?null:(cljs.core._STAR_print_level_STAR_ - (1)));

if((!((cljs.core._STAR_print_level_STAR_ == null))) && ((cljs.core._STAR_print_level_STAR_ < (0)))){
return cljs.core._write(writer,"#");
} else {
cljs.core._write(writer,begin);

if(cljs.core.seq(coll)){
var G__30442_30448 = cljs.core.first(coll);
var G__30443_30449 = writer;
var G__30444_30450 = opts;
(print_one.cljs$core$IFn$_invoke$arity$3 ? print_one.cljs$core$IFn$_invoke$arity$3(G__30442_30448,G__30443_30449,G__30444_30450) : print_one.call(null,G__30442_30448,G__30443_30449,G__30444_30450));
} else {
}

var coll_30451__$1 = cljs.core.next(coll);
var n_30452 = (new cljs.core.Keyword(null,"print-length","print-length",1931866356).cljs$core$IFn$_invoke$arity$1(opts) - (1));
while(true){
if((coll_30451__$1) && (((n_30452 == null)) || (!((n_30452 === (0)))))){
cljs.core._write(writer,sep);

var G__30445_30453 = cljs.core.first(coll_30451__$1);
var G__30446_30454 = writer;
var G__30447_30455 = opts;
(print_one.cljs$core$IFn$_invoke$arity$3 ? print_one.cljs$core$IFn$_invoke$arity$3(G__30445_30453,G__30446_30454,G__30447_30455) : print_one.call(null,G__30445_30453,G__30446_30454,G__30447_30455));

var G__30456 = cljs.core.next(coll_30451__$1);
var G__30457 = (n_30452 - (1));
coll_30451__$1 = G__30456;
n_30452 = G__30457;
continue;
} else {
if((cljs.core.seq(coll_30451__$1)) && ((n_30452 === (0)))){
cljs.core._write(writer,sep);

cljs.core._write(writer,"...");
} else {
}
}
break;
}

return cljs.core._write(writer,end);
}
}finally {cljs.core._STAR_print_level_STAR_ = _STAR_print_level_STAR_30441;
}});
/**
* @param {...*} var_args
*/
cljs.core.write_all = (function() { 
var write_all__delegate = function (writer,ss){
var seq__30462 = cljs.core.seq(ss);
var chunk__30463 = null;
var count__30464 = (0);
var i__30465 = (0);
while(true){
if((i__30465 < count__30464)){
var s = chunk__30463.cljs$core$IIndexed$_nth$arity$2(null,i__30465);
cljs.core._write(writer,s);

var G__30466 = seq__30462;
var G__30467 = chunk__30463;
var G__30468 = count__30464;
var G__30469 = (i__30465 + (1));
seq__30462 = G__30466;
chunk__30463 = G__30467;
count__30464 = G__30468;
i__30465 = G__30469;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__30462);
if(temp__4126__auto__){
var seq__30462__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__30462__$1)){
var c__25059__auto__ = cljs.core.chunk_first(seq__30462__$1);
var G__30470 = cljs.core.chunk_rest(seq__30462__$1);
var G__30471 = c__25059__auto__;
var G__30472 = cljs.core.count(c__25059__auto__);
var G__30473 = (0);
seq__30462 = G__30470;
chunk__30463 = G__30471;
count__30464 = G__30472;
i__30465 = G__30473;
continue;
} else {
var s = cljs.core.first(seq__30462__$1);
cljs.core._write(writer,s);

var G__30474 = cljs.core.next(seq__30462__$1);
var G__30475 = null;
var G__30476 = (0);
var G__30477 = (0);
seq__30462 = G__30474;
chunk__30463 = G__30475;
count__30464 = G__30476;
i__30465 = G__30477;
continue;
}
} else {
return null;
}
}
break;
}
};
var write_all = function (writer,var_args){
var ss = null;
if (arguments.length > 1) {
var G__30478__i = 0, G__30478__a = new Array(arguments.length -  1);
while (G__30478__i < G__30478__a.length) {G__30478__a[G__30478__i] = arguments[G__30478__i + 1]; ++G__30478__i;}
  ss = new cljs.core.IndexedSeq(G__30478__a,0);
} 
return write_all__delegate.call(this,writer,ss);};
write_all.cljs$lang$maxFixedArity = 1;
write_all.cljs$lang$applyTo = (function (arglist__30479){
var writer = cljs.core.first(arglist__30479);
var ss = cljs.core.rest(arglist__30479);
return write_all__delegate(writer,ss);
});
write_all.cljs$core$IFn$_invoke$arity$variadic = write_all__delegate;
return write_all;
})()
;
cljs.core.string_print = (function string_print(x){
(cljs.core._STAR_print_fn_STAR_.cljs$core$IFn$_invoke$arity$1 ? cljs.core._STAR_print_fn_STAR_.cljs$core$IFn$_invoke$arity$1(x) : cljs.core._STAR_print_fn_STAR_.call(null,x));

return null;
});
cljs.core.flush = (function flush(){
return null;
});
cljs.core.char_escapes = (function (){var obj30481 = {"\"":"\\\"","\\":"\\\\","\b":"\\b","\f":"\\f","\n":"\\n","\r":"\\r","\t":"\\t"};
return obj30481;
})();
cljs.core.quote_string = (function quote_string(s){
return [cljs.core.str("\""),cljs.core.str(s.replace((function (){var G__30484 = "[\\\\\"\b\f\n\r\t]";
var G__30485 = "g";
return RegExp(G__30484,G__30485);
})(),(function (match){
return (cljs.core.char_escapes[match]);
}))),cljs.core.str("\"")].join('');
});
/**
* Prefer this to pr-seq, because it makes the printing function
* configurable, allowing efficient implementations such as appending
* to a StringBuffer.
*/
cljs.core.pr_writer = (function pr_writer(obj,writer,opts){
if((obj == null)){
return cljs.core._write(writer,"nil");
} else {
if((void 0 === obj)){
return cljs.core._write(writer,"#<undefined>");
} else {
if(cljs.core.truth_((function (){var and__24260__auto__ = cljs.core.get.cljs$core$IFn$_invoke$arity$2(opts,new cljs.core.Keyword(null,"meta","meta",1499536964));
if(cljs.core.truth_(and__24260__auto__)){
var and__24260__auto____$1 = (function (){var G__30499 = obj;
if(G__30499){
var bit__24953__auto__ = (G__30499.cljs$lang$protocol_mask$partition0$ & (131072));
if((bit__24953__auto__) || (G__30499.cljs$core$IMeta$)){
return true;
} else {
if((!G__30499.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IMeta,G__30499);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IMeta,G__30499);
}
})();
if(and__24260__auto____$1){
return cljs.core.meta(obj);
} else {
return and__24260__auto____$1;
}
} else {
return and__24260__auto__;
}
})())){
cljs.core._write(writer,"^");

pr_writer(cljs.core.meta(obj),writer,opts);

cljs.core._write(writer," ");
} else {
}

if((obj == null)){
return cljs.core._write(writer,"nil");
} else {
if(obj.cljs$lang$type){
return obj.cljs$lang$ctorPrWriter(obj,writer,opts);
} else {
if((function (){var G__30500 = obj;
if(G__30500){
var bit__24946__auto__ = (G__30500.cljs$lang$protocol_mask$partition0$ & (2147483648));
if((bit__24946__auto__) || (G__30500.cljs$core$IPrintWithWriter$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return obj.cljs$core$IPrintWithWriter$_pr_writer$arity$3(null,writer,opts);
} else {
if(((cljs.core.type(obj) === Boolean)) || (typeof obj === 'number')){
return cljs.core._write(writer,[cljs.core.str(obj)].join(''));
} else {
if(cljs.core.object_QMARK_(obj)){
cljs.core._write(writer,"#js ");

var G__30501 = cljs.core.map.cljs$core$IFn$_invoke$arity$2((function (k){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.keyword.cljs$core$IFn$_invoke$arity$1(k),(obj[k])], null);
}),cljs.core.js_keys(obj));
var G__30502 = pr_writer;
var G__30503 = writer;
var G__30504 = opts;
return (cljs.core.print_map.cljs$core$IFn$_invoke$arity$4 ? cljs.core.print_map.cljs$core$IFn$_invoke$arity$4(G__30501,G__30502,G__30503,G__30504) : cljs.core.print_map.call(null,G__30501,G__30502,G__30503,G__30504));
} else {
if(obj instanceof Array){
return cljs.core.pr_sequential_writer(writer,pr_writer,"#js ["," ","]",opts,obj);
} else {
if(cljs.core.truth_((function (){var G__30505 = obj;
return goog.isString(G__30505);
})())){
if(cljs.core.truth_(new cljs.core.Keyword(null,"readably","readably",1129599760).cljs$core$IFn$_invoke$arity$1(opts))){
return cljs.core._write(writer,cljs.core.quote_string(obj));
} else {
return cljs.core._write(writer,obj);
}
} else {
if(cljs.core.fn_QMARK_(obj)){
return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(writer,cljs.core.array_seq(["#<",[cljs.core.str(obj)].join(''),">"], 0));
} else {
if((obj instanceof Date)){
var normalize = (function (n,len){
var ns = [cljs.core.str(n)].join('');
while(true){
if((cljs.core.count(ns) < len)){
var G__30507 = [cljs.core.str("0"),cljs.core.str(ns)].join('');
ns = G__30507;
continue;
} else {
return ns;
}
break;
}
});
return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(writer,cljs.core.array_seq(["#inst \"",[cljs.core.str(obj.getUTCFullYear())].join(''),"-",normalize((obj.getUTCMonth() + (1)),(2)),"-",normalize(obj.getUTCDate(),(2)),"T",normalize(obj.getUTCHours(),(2)),":",normalize(obj.getUTCMinutes(),(2)),":",normalize(obj.getUTCSeconds(),(2)),".",normalize(obj.getUTCMilliseconds(),(3)),"-","00:00\""], 0));
} else {
if(cljs.core.regexp_QMARK_(obj)){
return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(writer,cljs.core.array_seq(["#\"",obj.source,"\""], 0));
} else {
if((function (){var G__30506 = obj;
if(G__30506){
var bit__24953__auto__ = (G__30506.cljs$lang$protocol_mask$partition0$ & (2147483648));
if((bit__24953__auto__) || (G__30506.cljs$core$IPrintWithWriter$)){
return true;
} else {
if((!G__30506.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IPrintWithWriter,G__30506);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IPrintWithWriter,G__30506);
}
})()){
return cljs.core._pr_writer(obj,writer,opts);
} else {
return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(writer,cljs.core.array_seq(["#<",[cljs.core.str(obj)].join(''),">"], 0));

}
}
}
}
}
}
}
}
}
}
}

}
}
});
cljs.core.pr_seq_writer = (function pr_seq_writer(objs,writer,opts){
cljs.core.pr_writer(cljs.core.first(objs),writer,opts);

var seq__30512 = cljs.core.seq(cljs.core.next(objs));
var chunk__30513 = null;
var count__30514 = (0);
var i__30515 = (0);
while(true){
if((i__30515 < count__30514)){
var obj = chunk__30513.cljs$core$IIndexed$_nth$arity$2(null,i__30515);
cljs.core._write(writer," ");

cljs.core.pr_writer(obj,writer,opts);

var G__30516 = seq__30512;
var G__30517 = chunk__30513;
var G__30518 = count__30514;
var G__30519 = (i__30515 + (1));
seq__30512 = G__30516;
chunk__30513 = G__30517;
count__30514 = G__30518;
i__30515 = G__30519;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__30512);
if(temp__4126__auto__){
var seq__30512__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__30512__$1)){
var c__25059__auto__ = cljs.core.chunk_first(seq__30512__$1);
var G__30520 = cljs.core.chunk_rest(seq__30512__$1);
var G__30521 = c__25059__auto__;
var G__30522 = cljs.core.count(c__25059__auto__);
var G__30523 = (0);
seq__30512 = G__30520;
chunk__30513 = G__30521;
count__30514 = G__30522;
i__30515 = G__30523;
continue;
} else {
var obj = cljs.core.first(seq__30512__$1);
cljs.core._write(writer," ");

cljs.core.pr_writer(obj,writer,opts);

var G__30524 = cljs.core.next(seq__30512__$1);
var G__30525 = null;
var G__30526 = (0);
var G__30527 = (0);
seq__30512 = G__30524;
chunk__30513 = G__30525;
count__30514 = G__30526;
i__30515 = G__30527;
continue;
}
} else {
return null;
}
}
break;
}
});
cljs.core.pr_sb_with_opts = (function pr_sb_with_opts(objs,opts){
var sb = (new goog.string.StringBuffer());
var writer = (new cljs.core.StringBufferWriter(sb));
cljs.core.pr_seq_writer(objs,writer,opts);

writer.cljs$core$IWriter$_flush$arity$1(null);

return sb;
});
/**
* Prints a sequence of objects to a string, observing all the
* options given in opts
*/
cljs.core.pr_str_with_opts = (function pr_str_with_opts(objs,opts){
if(cljs.core.empty_QMARK_(objs)){
return "";
} else {
return [cljs.core.str(cljs.core.pr_sb_with_opts(objs,opts))].join('');
}
});
/**
* Same as pr-str-with-opts followed by (newline)
*/
cljs.core.prn_str_with_opts = (function prn_str_with_opts(objs,opts){
if(cljs.core.empty_QMARK_(objs)){
return "\n";
} else {
var sb = cljs.core.pr_sb_with_opts(objs,opts);
sb.append("\n");

return [cljs.core.str(sb)].join('');
}
});
/**
* Prints a sequence of objects using string-print, observing all
* the options given in opts
*/
cljs.core.pr_with_opts = (function pr_with_opts(objs,opts){
return cljs.core.string_print(cljs.core.pr_str_with_opts(objs,opts));
});
cljs.core.newline = (function newline(opts){
cljs.core.string_print("\n");

if(cljs.core.truth_(cljs.core.get.cljs$core$IFn$_invoke$arity$2(opts,new cljs.core.Keyword(null,"flush-on-newline","flush-on-newline",-151457939)))){
return cljs.core.flush();
} else {
return null;
}
});
/**
* pr to a string, returning it. Fundamental entrypoint to IPrintWithWriter.
* @param {...*} var_args
*/
cljs.core.pr_str = (function() { 
var pr_str__delegate = function (objs){
return cljs.core.pr_str_with_opts(objs,cljs.core.pr_opts());
};
var pr_str = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__30528__i = 0, G__30528__a = new Array(arguments.length -  0);
while (G__30528__i < G__30528__a.length) {G__30528__a[G__30528__i] = arguments[G__30528__i + 0]; ++G__30528__i;}
  objs = new cljs.core.IndexedSeq(G__30528__a,0);
} 
return pr_str__delegate.call(this,objs);};
pr_str.cljs$lang$maxFixedArity = 0;
pr_str.cljs$lang$applyTo = (function (arglist__30529){
var objs = cljs.core.seq(arglist__30529);
return pr_str__delegate(objs);
});
pr_str.cljs$core$IFn$_invoke$arity$variadic = pr_str__delegate;
return pr_str;
})()
;
/**
* Same as pr-str followed by (newline)
* @param {...*} var_args
*/
cljs.core.prn_str = (function() { 
var prn_str__delegate = function (objs){
return cljs.core.prn_str_with_opts(objs,cljs.core.pr_opts());
};
var prn_str = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__30530__i = 0, G__30530__a = new Array(arguments.length -  0);
while (G__30530__i < G__30530__a.length) {G__30530__a[G__30530__i] = arguments[G__30530__i + 0]; ++G__30530__i;}
  objs = new cljs.core.IndexedSeq(G__30530__a,0);
} 
return prn_str__delegate.call(this,objs);};
prn_str.cljs$lang$maxFixedArity = 0;
prn_str.cljs$lang$applyTo = (function (arglist__30531){
var objs = cljs.core.seq(arglist__30531);
return prn_str__delegate(objs);
});
prn_str.cljs$core$IFn$_invoke$arity$variadic = prn_str__delegate;
return prn_str;
})()
;
/**
* Prints the object(s) using string-print.  Prints the
* object(s), separated by spaces if there is more than one.
* By default, pr and prn print in a way that objects can be
* read by the reader
* @param {...*} var_args
*/
cljs.core.pr = (function() { 
var pr__delegate = function (objs){
return cljs.core.pr_with_opts(objs,cljs.core.pr_opts());
};
var pr = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__30532__i = 0, G__30532__a = new Array(arguments.length -  0);
while (G__30532__i < G__30532__a.length) {G__30532__a[G__30532__i] = arguments[G__30532__i + 0]; ++G__30532__i;}
  objs = new cljs.core.IndexedSeq(G__30532__a,0);
} 
return pr__delegate.call(this,objs);};
pr.cljs$lang$maxFixedArity = 0;
pr.cljs$lang$applyTo = (function (arglist__30533){
var objs = cljs.core.seq(arglist__30533);
return pr__delegate(objs);
});
pr.cljs$core$IFn$_invoke$arity$variadic = pr__delegate;
return pr;
})()
;
/**
* Prints the object(s) using string-print.
* print and println produce output for human consumption.
* @param {...*} var_args
*/
cljs.core.print = (function() { 
var cljs_core_print__delegate = function (objs){
return cljs.core.pr_with_opts(objs,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.pr_opts(),new cljs.core.Keyword(null,"readably","readably",1129599760),false));
};
var cljs_core_print = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__30534__i = 0, G__30534__a = new Array(arguments.length -  0);
while (G__30534__i < G__30534__a.length) {G__30534__a[G__30534__i] = arguments[G__30534__i + 0]; ++G__30534__i;}
  objs = new cljs.core.IndexedSeq(G__30534__a,0);
} 
return cljs_core_print__delegate.call(this,objs);};
cljs_core_print.cljs$lang$maxFixedArity = 0;
cljs_core_print.cljs$lang$applyTo = (function (arglist__30535){
var objs = cljs.core.seq(arglist__30535);
return cljs_core_print__delegate(objs);
});
cljs_core_print.cljs$core$IFn$_invoke$arity$variadic = cljs_core_print__delegate;
return cljs_core_print;
})()
;
/**
* print to a string, returning it
* @param {...*} var_args
*/
cljs.core.print_str = (function() { 
var print_str__delegate = function (objs){
return cljs.core.pr_str_with_opts(objs,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.pr_opts(),new cljs.core.Keyword(null,"readably","readably",1129599760),false));
};
var print_str = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__30536__i = 0, G__30536__a = new Array(arguments.length -  0);
while (G__30536__i < G__30536__a.length) {G__30536__a[G__30536__i] = arguments[G__30536__i + 0]; ++G__30536__i;}
  objs = new cljs.core.IndexedSeq(G__30536__a,0);
} 
return print_str__delegate.call(this,objs);};
print_str.cljs$lang$maxFixedArity = 0;
print_str.cljs$lang$applyTo = (function (arglist__30537){
var objs = cljs.core.seq(arglist__30537);
return print_str__delegate(objs);
});
print_str.cljs$core$IFn$_invoke$arity$variadic = print_str__delegate;
return print_str;
})()
;
/**
* Same as print followed by (newline)
* @param {...*} var_args
*/
cljs.core.println = (function() { 
var println__delegate = function (objs){
cljs.core.pr_with_opts(objs,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.pr_opts(),new cljs.core.Keyword(null,"readably","readably",1129599760),false));

if(cljs.core.truth_(cljs.core._STAR_print_newline_STAR_)){
return cljs.core.newline(cljs.core.pr_opts());
} else {
return null;
}
};
var println = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__30538__i = 0, G__30538__a = new Array(arguments.length -  0);
while (G__30538__i < G__30538__a.length) {G__30538__a[G__30538__i] = arguments[G__30538__i + 0]; ++G__30538__i;}
  objs = new cljs.core.IndexedSeq(G__30538__a,0);
} 
return println__delegate.call(this,objs);};
println.cljs$lang$maxFixedArity = 0;
println.cljs$lang$applyTo = (function (arglist__30539){
var objs = cljs.core.seq(arglist__30539);
return println__delegate(objs);
});
println.cljs$core$IFn$_invoke$arity$variadic = println__delegate;
return println;
})()
;
/**
* println to a string, returning it
* @param {...*} var_args
*/
cljs.core.println_str = (function() { 
var println_str__delegate = function (objs){
return cljs.core.prn_str_with_opts(objs,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.pr_opts(),new cljs.core.Keyword(null,"readably","readably",1129599760),false));
};
var println_str = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__30540__i = 0, G__30540__a = new Array(arguments.length -  0);
while (G__30540__i < G__30540__a.length) {G__30540__a[G__30540__i] = arguments[G__30540__i + 0]; ++G__30540__i;}
  objs = new cljs.core.IndexedSeq(G__30540__a,0);
} 
return println_str__delegate.call(this,objs);};
println_str.cljs$lang$maxFixedArity = 0;
println_str.cljs$lang$applyTo = (function (arglist__30541){
var objs = cljs.core.seq(arglist__30541);
return println_str__delegate(objs);
});
println_str.cljs$core$IFn$_invoke$arity$variadic = println_str__delegate;
return println_str;
})()
;
/**
* Same as pr followed by (newline).
* @param {...*} var_args
*/
cljs.core.prn = (function() { 
var prn__delegate = function (objs){
cljs.core.pr_with_opts(objs,cljs.core.pr_opts());

if(cljs.core.truth_(cljs.core._STAR_print_newline_STAR_)){
return cljs.core.newline(cljs.core.pr_opts());
} else {
return null;
}
};
var prn = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__30542__i = 0, G__30542__a = new Array(arguments.length -  0);
while (G__30542__i < G__30542__a.length) {G__30542__a[G__30542__i] = arguments[G__30542__i + 0]; ++G__30542__i;}
  objs = new cljs.core.IndexedSeq(G__30542__a,0);
} 
return prn__delegate.call(this,objs);};
prn.cljs$lang$maxFixedArity = 0;
prn.cljs$lang$applyTo = (function (arglist__30543){
var objs = cljs.core.seq(arglist__30543);
return prn__delegate(objs);
});
prn.cljs$core$IFn$_invoke$arity$variadic = prn__delegate;
return prn;
})()
;
cljs.core.print_map = (function print_map(m,print_one,writer,opts){
return cljs.core.pr_sequential_writer(writer,(function (e,w,opts__$1){
var G__30550_30556 = cljs.core.key(e);
var G__30551_30557 = w;
var G__30552_30558 = opts__$1;
(print_one.cljs$core$IFn$_invoke$arity$3 ? print_one.cljs$core$IFn$_invoke$arity$3(G__30550_30556,G__30551_30557,G__30552_30558) : print_one.call(null,G__30550_30556,G__30551_30557,G__30552_30558));

cljs.core._write(w," ");

var G__30553 = cljs.core.val(e);
var G__30554 = w;
var G__30555 = opts__$1;
return (print_one.cljs$core$IFn$_invoke$arity$3 ? print_one.cljs$core$IFn$_invoke$arity$3(G__30553,G__30554,G__30555) : print_one.call(null,G__30553,G__30554,G__30555));
}),"{",", ","}",opts,cljs.core.seq(m));
});
cljs.core.Volatile.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.Volatile.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (a,writer,opts){
var a__$1 = this;
cljs.core._write(writer,"#<Volatile: ");

cljs.core.pr_writer(a__$1.state,writer,opts);

return cljs.core._write(writer,">");
});

cljs.core.Var.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.Var.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (a,writer,opts){
var a__$1 = this;
cljs.core._write(writer,"#'");

return cljs.core.pr_writer(a__$1.sym,writer,opts);
});

cljs.core.IndexedSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.IndexedSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.LazySeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.LazySeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.NodeSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.NodeSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.BlackNode.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.BlackNode.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"["," ","]",opts,coll__$1);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.ES6IteratorSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ES6IteratorSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentTreeSet.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"#{"," ","}",opts,coll__$1);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ChunkedSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.ObjMap.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ObjMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.print_map(coll__$1,cljs.core.pr_writer,writer,opts);
});

cljs.core.Cons.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.Cons.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.RSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.RSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.PersistentHashMap.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentHashMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.print_map(coll__$1,cljs.core.pr_writer,writer,opts);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ArrayNodeSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.Subvec.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.Subvec.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"["," ","]",opts,coll__$1);
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentTreeMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.print_map(coll__$1,cljs.core.pr_writer,writer,opts);
});

cljs.core.PersistentHashSet.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentHashSet.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"#{"," ","}",opts,coll__$1);
});

cljs.core.ChunkedCons.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ChunkedCons.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.Atom.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.Atom.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (a,writer,opts){
var a__$1 = this;
cljs.core._write(writer,"#<Atom: ");

cljs.core.pr_writer(a__$1.state,writer,opts);

return cljs.core._write(writer,">");
});

cljs.core.ValSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ValSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.RedNode.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.RedNode.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"["," ","]",opts,coll__$1);
});

cljs.core.PersistentVector.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentVector.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"["," ","]",opts,coll__$1);
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentQueueSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.EmptyList.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.EmptyList.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core._write(writer,"()");
});

cljs.core.LazyTransformer.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.LazyTransformer.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.PersistentQueue.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentQueue.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"#queue ["," ","]",opts,cljs.core.seq(coll__$1));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentArrayMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.print_map(coll__$1,cljs.core.pr_writer,writer,opts);
});

cljs.core.Range.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.Range.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.KeySeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.KeySeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.List.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.List.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});
cljs.core.PersistentVector.prototype.cljs$core$IComparable$ = true;

cljs.core.PersistentVector.prototype.cljs$core$IComparable$_compare$arity$2 = (function (x,y){
var x__$1 = this;
return cljs.core.compare_indexed.cljs$core$IFn$_invoke$arity$2(x__$1,y);
});

cljs.core.Subvec.prototype.cljs$core$IComparable$ = true;

cljs.core.Subvec.prototype.cljs$core$IComparable$_compare$arity$2 = (function (x,y){
var x__$1 = this;
return cljs.core.compare_indexed.cljs$core$IFn$_invoke$arity$2(x__$1,y);
});

cljs.core.Keyword.prototype.cljs$core$IComparable$ = true;

cljs.core.Keyword.prototype.cljs$core$IComparable$_compare$arity$2 = (function (x,y){
var x__$1 = this;
return cljs.core.compare_keywords(x__$1,y);
});

cljs.core.Symbol.prototype.cljs$core$IComparable$ = true;

cljs.core.Symbol.prototype.cljs$core$IComparable$_compare$arity$2 = (function (x,y){
var x__$1 = this;
return cljs.core.compare_symbols(x__$1,y);
});
/**
* Atomically sets the metadata for a namespace/var/ref/agent/atom to be:
* 
* (apply f its-current-meta args)
* 
* f must be free of side-effects
* @param {...*} var_args
*/
cljs.core.alter_meta_BANG_ = (function() { 
var alter_meta_BANG___delegate = function (iref,f,args){
return iref.meta = cljs.core.apply.cljs$core$IFn$_invoke$arity$3(f,iref.meta,args);
};
var alter_meta_BANG_ = function (iref,f,var_args){
var args = null;
if (arguments.length > 2) {
var G__30559__i = 0, G__30559__a = new Array(arguments.length -  2);
while (G__30559__i < G__30559__a.length) {G__30559__a[G__30559__i] = arguments[G__30559__i + 2]; ++G__30559__i;}
  args = new cljs.core.IndexedSeq(G__30559__a,0);
} 
return alter_meta_BANG___delegate.call(this,iref,f,args);};
alter_meta_BANG_.cljs$lang$maxFixedArity = 2;
alter_meta_BANG_.cljs$lang$applyTo = (function (arglist__30560){
var iref = cljs.core.first(arglist__30560);
arglist__30560 = cljs.core.next(arglist__30560);
var f = cljs.core.first(arglist__30560);
var args = cljs.core.rest(arglist__30560);
return alter_meta_BANG___delegate(iref,f,args);
});
alter_meta_BANG_.cljs$core$IFn$_invoke$arity$variadic = alter_meta_BANG___delegate;
return alter_meta_BANG_;
})()
;
/**
* Atomically resets the metadata for an atom
*/
cljs.core.reset_meta_BANG_ = (function reset_meta_BANG_(iref,m){
return iref.meta = m;
});
/**
* Alpha - subject to change.
* 
* Adds a watch function to an atom reference. The watch fn must be a
* fn of 4 args: a key, the reference, its old-state, its
* new-state. Whenever the reference's state might have been changed,
* any registered watches will have their functions called. The watch
* fn will be called synchronously. Note that an atom's state
* may have changed again prior to the fn call, so use old/new-state
* rather than derefing the reference. Keys must be unique per
* reference, and can be used to remove the watch with remove-watch,
* but are otherwise considered opaque by the watch mechanism.  Bear in
* mind that regardless of the result or action of the watch fns the
* atom's value will change.  Example:
* 
* (def a (atom 0))
* (add-watch a :inc (fn [k r o n] (assert (== 0 n))))
* (swap! a inc)
* ;; Assertion Error
* (deref a)
* ;=> 1
*/
cljs.core.add_watch = (function add_watch(iref,key,f){
cljs.core._add_watch(iref,key,f);

return iref;
});
/**
* Alpha - subject to change.
* 
* Removes a watch (set by add-watch) from a reference
*/
cljs.core.remove_watch = (function remove_watch(iref,key){
cljs.core._remove_watch(iref,key);

return iref;
});
cljs.core.gensym_counter = null;
/**
* Returns a new symbol with a unique name. If a prefix string is
* supplied, the name is prefix# where # is some unique number. If
* prefix is not supplied, the prefix is 'G__'.
*/
cljs.core.gensym = (function() {
var gensym = null;
var gensym__0 = (function (){
return gensym.cljs$core$IFn$_invoke$arity$1("G__");
});
var gensym__1 = (function (prefix_string){
if((cljs.core.gensym_counter == null)){
cljs.core.gensym_counter = (function (){var G__30563 = (0);
return (cljs.core.atom.cljs$core$IFn$_invoke$arity$1 ? cljs.core.atom.cljs$core$IFn$_invoke$arity$1(G__30563) : cljs.core.atom.call(null,G__30563));
})();
} else {
}

return cljs.core.symbol.cljs$core$IFn$_invoke$arity$1([cljs.core.str(prefix_string),cljs.core.str(cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(cljs.core.gensym_counter,cljs.core.inc))].join(''));
});
gensym = function(prefix_string){
switch(arguments.length){
case 0:
return gensym__0.call(this);
case 1:
return gensym__1.call(this,prefix_string);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
gensym.cljs$core$IFn$_invoke$arity$0 = gensym__0;
gensym.cljs$core$IFn$_invoke$arity$1 = gensym__1;
return gensym;
})()
;
cljs.core.fixture1 = (1);
cljs.core.fixture2 = (2);

/**
* @constructor
*/
cljs.core.Delay = (function (f,value){
this.f = f;
this.value = value;
this.cljs$lang$protocol_mask$partition1$ = 1;
this.cljs$lang$protocol_mask$partition0$ = 32768;
})
cljs.core.Delay.prototype.cljs$core$IPending$_realized_QMARK_$arity$1 = (function (d){
var self__ = this;
var d__$1 = this;
return cljs.core.not(self__.f);
});

cljs.core.Delay.prototype.cljs$core$IDeref$_deref$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
if(cljs.core.truth_(self__.f)){
self__.value = (function (){return (self__.f.cljs$core$IFn$_invoke$arity$0 ? self__.f.cljs$core$IFn$_invoke$arity$0() : self__.f.call(null));
})();

self__.f = null;
} else {
}

return self__.value;
});

cljs.core.Delay.cljs$lang$type = true;

cljs.core.Delay.cljs$lang$ctorStr = "cljs.core/Delay";

cljs.core.Delay.cljs$lang$ctorPrWriter = (function (this__24859__auto__,writer__24860__auto__,opt__24861__auto__){
return cljs.core._write(writer__24860__auto__,"cljs.core/Delay");
});

cljs.core.__GT_Delay = (function __GT_Delay(f,value){
return (new cljs.core.Delay(f,value));
});

/**
* returns true if x is a Delay created with delay
*/
cljs.core.delay_QMARK_ = (function delay_QMARK_(x){
return (x instanceof cljs.core.Delay);
});
/**
* If x is a Delay, returns the (possibly cached) value of its expression, else returns x
*/
cljs.core.force = (function force(x){
if(cljs.core.delay_QMARK_(x)){
var G__30565 = x;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__30565) : cljs.core.deref.call(null,G__30565));
} else {
return x;
}
});
/**
* Returns true if a value has been produced for a promise, delay, future or lazy sequence.
*/
cljs.core.realized_QMARK_ = (function realized_QMARK_(d){
return cljs.core._realized_QMARK_(d);
});
cljs.core.preserving_reduced = (function preserving_reduced(rf){
return (function (p1__30566_SHARP_,p2__30567_SHARP_){
var ret = (function (){var G__30570 = p1__30566_SHARP_;
var G__30571 = p2__30567_SHARP_;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__30570,G__30571) : rf.call(null,G__30570,G__30571));
})();
if(cljs.core.reduced_QMARK_(ret)){
return cljs.core.reduced(ret);
} else {
return ret;
}
});
});
/**
* A transducer which concatenates the contents of each input, which must be a
* collection, into the reduction.
*/
cljs.core.cat = (function cat(rf){
var rf1 = cljs.core.preserving_reduced(rf);
return ((function (rf1){
return (function() {
var G__30574 = null;
var G__30574__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__30574__1 = (function (result){
var G__30573 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__30573) : rf.call(null,G__30573));
});
var G__30574__2 = (function (result,input){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(rf1,result,input);
});
G__30574 = function(result,input){
switch(arguments.length){
case 0:
return G__30574__0.call(this);
case 1:
return G__30574__1.call(this,result);
case 2:
return G__30574__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__30574.cljs$core$IFn$_invoke$arity$0 = G__30574__0;
G__30574.cljs$core$IFn$_invoke$arity$1 = G__30574__1;
G__30574.cljs$core$IFn$_invoke$arity$2 = G__30574__2;
return G__30574;
})()
;})(rf1))
});
/**
* Returns a lazy sequence removing consecutive duplicates in coll.
* Returns a transducer when no collection is provided.
*/
cljs.core.dedupe = (function() {
var dedupe = null;
var dedupe__0 = (function (){
return (function (rf){
var pa = cljs.core.volatile_BANG_(new cljs.core.Keyword("cljs.core","none","cljs.core/none",926646439));
return ((function (pa){
return (function() {
var G__30583 = null;
var G__30583__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__30583__1 = (function (result){
var G__30579 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__30579) : rf.call(null,G__30579));
});
var G__30583__2 = (function (result,input){
var prior = (function (){var G__30580 = pa;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__30580) : cljs.core.deref.call(null,G__30580));
})();
cljs.core.vreset_BANG_(pa,input);

if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(prior,input)){
return result;
} else {
var G__30581 = result;
var G__30582 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__30581,G__30582) : rf.call(null,G__30581,G__30582));
}
});
G__30583 = function(result,input){
switch(arguments.length){
case 0:
return G__30583__0.call(this);
case 1:
return G__30583__1.call(this,result);
case 2:
return G__30583__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__30583.cljs$core$IFn$_invoke$arity$0 = G__30583__0;
G__30583.cljs$core$IFn$_invoke$arity$1 = G__30583__1;
G__30583.cljs$core$IFn$_invoke$arity$2 = G__30583__2;
return G__30583;
})()
;})(pa))
});
});
var dedupe__1 = (function (coll){
return cljs.core.sequence.cljs$core$IFn$_invoke$arity$2(dedupe.cljs$core$IFn$_invoke$arity$0(),coll);
});
dedupe = function(coll){
switch(arguments.length){
case 0:
return dedupe__0.call(this);
case 1:
return dedupe__1.call(this,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
dedupe.cljs$core$IFn$_invoke$arity$0 = dedupe__0;
dedupe.cljs$core$IFn$_invoke$arity$1 = dedupe__1;
return dedupe;
})()
;
/**
* Returns items from coll with random probability of prob (0.0 -
* 1.0).  Returns a transducer when no collection is provided.
*/
cljs.core.random_sample = (function() {
var random_sample = null;
var random_sample__1 = (function (prob){
return cljs.core.filter.cljs$core$IFn$_invoke$arity$1((function (_){
return ((function (){return (cljs.core.rand.cljs$core$IFn$_invoke$arity$0 ? cljs.core.rand.cljs$core$IFn$_invoke$arity$0() : cljs.core.rand.call(null));
})() < prob);
}));
});
var random_sample__2 = (function (prob,coll){
return cljs.core.filter.cljs$core$IFn$_invoke$arity$2((function (_){
return ((function (){return (cljs.core.rand.cljs$core$IFn$_invoke$arity$0 ? cljs.core.rand.cljs$core$IFn$_invoke$arity$0() : cljs.core.rand.call(null));
})() < prob);
}),coll);
});
random_sample = function(prob,coll){
switch(arguments.length){
case 1:
return random_sample__1.call(this,prob);
case 2:
return random_sample__2.call(this,prob,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
random_sample.cljs$core$IFn$_invoke$arity$1 = random_sample__1;
random_sample.cljs$core$IFn$_invoke$arity$2 = random_sample__2;
return random_sample;
})()
;

/**
* @constructor
*/
cljs.core.Eduction = (function (xform,coll){
this.xform = xform;
this.coll = coll;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 2173173760;
})
cljs.core.Eduction.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll__$1,writer,opts){
var self__ = this;
var coll__$2 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$2);
});

cljs.core.Eduction.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (_,f,init){
var self__ = this;
var ___$1 = this;
return cljs.core.transduce.cljs$core$IFn$_invoke$arity$4(self__.xform,f,init,self__.coll);
});

cljs.core.Eduction.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return cljs.core.seq(cljs.core.sequence.cljs$core$IFn$_invoke$arity$2(self__.xform,self__.coll));
});

cljs.core.Eduction.cljs$lang$type = true;

cljs.core.Eduction.cljs$lang$ctorStr = "cljs.core/Eduction";

cljs.core.Eduction.cljs$lang$ctorPrWriter = (function (this__24859__auto__,writer__24860__auto__,opt__24861__auto__){
return cljs.core._write(writer__24860__auto__,"cljs.core/Eduction");
});

cljs.core.__GT_Eduction = (function __GT_Eduction(xform,coll){
return (new cljs.core.Eduction(xform,coll));
});

(cljs.core.Eduction.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__25250__auto__ = this;
return cljs.core.es6_iterator(this__25250__auto__);
}));
/**
* Returns a reducible/iterable/seqable application of
* the transducer to the items in coll. Note that these applications
* will be performed every time iterator/seq/reduce is called.
*/
cljs.core.eduction = (function eduction(xform,coll){
return (new cljs.core.Eduction(xform,coll));
});
/**
* Runs the supplied procedure (via reduce), for purposes of side
* effects, on successive items in the collection. Returns nil
*/
cljs.core.run_BANG_ = (function run_BANG_(proc,coll){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (p1__30585_SHARP_,p2__30584_SHARP_){
var G__30587 = p2__30584_SHARP_;
return (proc.cljs$core$IFn$_invoke$arity$1 ? proc.cljs$core$IFn$_invoke$arity$1(G__30587) : proc.call(null,G__30587));
}),null,coll);
});

cljs.core.IEncodeJS = (function (){var obj30589 = {};
return obj30589;
})();

cljs.core._clj__GT_js = (function _clj__GT_js(x){
if((function (){var and__24260__auto__ = x;
if(and__24260__auto__){
return x.cljs$core$IEncodeJS$_clj__GT_js$arity$1;
} else {
return and__24260__auto__;
}
})()){
return x.cljs$core$IEncodeJS$_clj__GT_js$arity$1(x);
} else {
var x__24916__auto__ = (((x == null))?null:x);
return (function (){var or__24272__auto__ = (cljs.core._clj__GT_js[(function (){var G__30593 = x__24916__auto__;
return goog.typeOf(G__30593);
})()]);
if(or__24272__auto__){
return or__24272__auto__;
} else {
var or__24272__auto____$1 = (cljs.core._clj__GT_js["_"]);
if(or__24272__auto____$1){
return or__24272__auto____$1;
} else {
throw cljs.core.missing_protocol("IEncodeJS.-clj->js",x);
}
}
})().call(null,x);
}
});

cljs.core._key__GT_js = (function _key__GT_js(x){
if((function (){var and__24260__auto__ = x;
if(and__24260__auto__){
return x.cljs$core$IEncodeJS$_key__GT_js$arity$1;
} else {
return and__24260__auto__;
}
})()){
return x.cljs$core$IEncodeJS$_key__GT_js$arity$1(x);
} else {
var x__24916__auto__ = (((x == null))?null:x);
return (function (){var or__24272__auto__ = (cljs.core._key__GT_js[(function (){var G__30597 = x__24916__auto__;
return goog.typeOf(G__30597);
})()]);
if(or__24272__auto__){
return or__24272__auto__;
} else {
var or__24272__auto____$1 = (cljs.core._key__GT_js["_"]);
if(or__24272__auto____$1){
return or__24272__auto____$1;
} else {
throw cljs.core.missing_protocol("IEncodeJS.-key->js",x);
}
}
})().call(null,x);
}
});

cljs.core.key__GT_js = (function key__GT_js(k){
if((function (){var G__30600 = k;
if(G__30600){
var bit__24953__auto__ = null;
if(cljs.core.truth_((function (){var or__24272__auto__ = bit__24953__auto__;
if(cljs.core.truth_(or__24272__auto__)){
return or__24272__auto__;
} else {
return G__30600.cljs$core$IEncodeJS$;
}
})())){
return true;
} else {
if((!G__30600.cljs$lang$protocol_mask$partition$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeJS,G__30600);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeJS,G__30600);
}
})()){
return cljs.core._clj__GT_js(k);
} else {
if((typeof k === 'string') || (typeof k === 'number') || ((k instanceof cljs.core.Keyword)) || ((k instanceof cljs.core.Symbol))){
var G__30601 = k;
return (cljs.core.clj__GT_js.cljs$core$IFn$_invoke$arity$1 ? cljs.core.clj__GT_js.cljs$core$IFn$_invoke$arity$1(G__30601) : cljs.core.clj__GT_js.call(null,G__30601));
} else {
return cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([k], 0));
}
}
});
/**
* Recursively transforms ClojureScript values to JavaScript.
* sets/vectors/lists become Arrays, Keywords and Symbol become Strings,
* Maps become Objects. Arbitrary keys are encoded to by key->js.
*/
cljs.core.clj__GT_js = (function clj__GT_js(x){
if((x == null)){
return null;
} else {
if((function (){var G__30617 = x;
if(G__30617){
var bit__24953__auto__ = null;
if(cljs.core.truth_((function (){var or__24272__auto__ = bit__24953__auto__;
if(cljs.core.truth_(or__24272__auto__)){
return or__24272__auto__;
} else {
return G__30617.cljs$core$IEncodeJS$;
}
})())){
return true;
} else {
if((!G__30617.cljs$lang$protocol_mask$partition$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeJS,G__30617);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeJS,G__30617);
}
})()){
return cljs.core._clj__GT_js(x);
} else {
if((x instanceof cljs.core.Keyword)){
return cljs.core.name(x);
} else {
if((x instanceof cljs.core.Symbol)){
return [cljs.core.str(x)].join('');
} else {
if(cljs.core.map_QMARK_(x)){
var m = (function (){var obj30619 = {};
return obj30619;
})();
var seq__30620_30630 = cljs.core.seq(x);
var chunk__30621_30631 = null;
var count__30622_30632 = (0);
var i__30623_30633 = (0);
while(true){
if((i__30623_30633 < count__30622_30632)){
var vec__30624_30634 = chunk__30621_30631.cljs$core$IIndexed$_nth$arity$2(null,i__30623_30633);
var k_30635 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__30624_30634,(0),null);
var v_30636 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__30624_30634,(1),null);
(m[cljs.core.key__GT_js(k_30635)] = clj__GT_js(v_30636));

var G__30637 = seq__30620_30630;
var G__30638 = chunk__30621_30631;
var G__30639 = count__30622_30632;
var G__30640 = (i__30623_30633 + (1));
seq__30620_30630 = G__30637;
chunk__30621_30631 = G__30638;
count__30622_30632 = G__30639;
i__30623_30633 = G__30640;
continue;
} else {
var temp__4126__auto___30641 = cljs.core.seq(seq__30620_30630);
if(temp__4126__auto___30641){
var seq__30620_30642__$1 = temp__4126__auto___30641;
if(cljs.core.chunked_seq_QMARK_(seq__30620_30642__$1)){
var c__25059__auto___30643 = cljs.core.chunk_first(seq__30620_30642__$1);
var G__30644 = cljs.core.chunk_rest(seq__30620_30642__$1);
var G__30645 = c__25059__auto___30643;
var G__30646 = cljs.core.count(c__25059__auto___30643);
var G__30647 = (0);
seq__30620_30630 = G__30644;
chunk__30621_30631 = G__30645;
count__30622_30632 = G__30646;
i__30623_30633 = G__30647;
continue;
} else {
var vec__30625_30648 = cljs.core.first(seq__30620_30642__$1);
var k_30649 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__30625_30648,(0),null);
var v_30650 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__30625_30648,(1),null);
(m[cljs.core.key__GT_js(k_30649)] = clj__GT_js(v_30650));

var G__30651 = cljs.core.next(seq__30620_30642__$1);
var G__30652 = null;
var G__30653 = (0);
var G__30654 = (0);
seq__30620_30630 = G__30651;
chunk__30621_30631 = G__30652;
count__30622_30632 = G__30653;
i__30623_30633 = G__30654;
continue;
}
} else {
}
}
break;
}

return m;
} else {
if(cljs.core.coll_QMARK_(x)){
var arr = [];
var seq__30626_30655 = cljs.core.seq(cljs.core.map.cljs$core$IFn$_invoke$arity$2(clj__GT_js,x));
var chunk__30627_30656 = null;
var count__30628_30657 = (0);
var i__30629_30658 = (0);
while(true){
if((i__30629_30658 < count__30628_30657)){
var x_30659__$1 = chunk__30627_30656.cljs$core$IIndexed$_nth$arity$2(null,i__30629_30658);
arr.push(x_30659__$1);

var G__30660 = seq__30626_30655;
var G__30661 = chunk__30627_30656;
var G__30662 = count__30628_30657;
var G__30663 = (i__30629_30658 + (1));
seq__30626_30655 = G__30660;
chunk__30627_30656 = G__30661;
count__30628_30657 = G__30662;
i__30629_30658 = G__30663;
continue;
} else {
var temp__4126__auto___30664 = cljs.core.seq(seq__30626_30655);
if(temp__4126__auto___30664){
var seq__30626_30665__$1 = temp__4126__auto___30664;
if(cljs.core.chunked_seq_QMARK_(seq__30626_30665__$1)){
var c__25059__auto___30666 = cljs.core.chunk_first(seq__30626_30665__$1);
var G__30667 = cljs.core.chunk_rest(seq__30626_30665__$1);
var G__30668 = c__25059__auto___30666;
var G__30669 = cljs.core.count(c__25059__auto___30666);
var G__30670 = (0);
seq__30626_30655 = G__30667;
chunk__30627_30656 = G__30668;
count__30628_30657 = G__30669;
i__30629_30658 = G__30670;
continue;
} else {
var x_30671__$1 = cljs.core.first(seq__30626_30665__$1);
arr.push(x_30671__$1);

var G__30672 = cljs.core.next(seq__30626_30665__$1);
var G__30673 = null;
var G__30674 = (0);
var G__30675 = (0);
seq__30626_30655 = G__30672;
chunk__30627_30656 = G__30673;
count__30628_30657 = G__30674;
i__30629_30658 = G__30675;
continue;
}
} else {
}
}
break;
}

return arr;
} else {
return x;

}
}
}
}
}
}
});

cljs.core.IEncodeClojure = (function (){var obj30677 = {};
return obj30677;
})();

cljs.core._js__GT_clj = (function _js__GT_clj(x,options){
if((function (){var and__24260__auto__ = x;
if(and__24260__auto__){
return x.cljs$core$IEncodeClojure$_js__GT_clj$arity$2;
} else {
return and__24260__auto__;
}
})()){
return x.cljs$core$IEncodeClojure$_js__GT_clj$arity$2(x,options);
} else {
var x__24916__auto__ = (((x == null))?null:x);
return (function (){var or__24272__auto__ = (cljs.core._js__GT_clj[(function (){var G__30681 = x__24916__auto__;
return goog.typeOf(G__30681);
})()]);
if(or__24272__auto__){
return or__24272__auto__;
} else {
var or__24272__auto____$1 = (cljs.core._js__GT_clj["_"]);
if(or__24272__auto____$1){
return or__24272__auto____$1;
} else {
throw cljs.core.missing_protocol("IEncodeClojure.-js->clj",x);
}
}
})().call(null,x,options);
}
});

/**
* Recursively transforms JavaScript arrays into ClojureScript
* vectors, and JavaScript objects into ClojureScript maps.  With
* option ':keywordize-keys true' will convert object fields from
* strings to keywords.
* @param {...*} var_args
*/
cljs.core.js__GT_clj = (function() {
var js__GT_clj = null;
var js__GT_clj__1 = (function (x){
return js__GT_clj.cljs$core$IFn$_invoke$arity$variadic(x,cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,"keywordize-keys","keywordize-keys",1310784252),false], null)], 0));
});
var js__GT_clj__2 = (function() { 
var G__30738__delegate = function (x,opts){
var map__30711 = opts;
var map__30711__$1 = ((cljs.core.seq_QMARK_(map__30711))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__30711):map__30711);
var keywordize_keys = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__30711__$1,new cljs.core.Keyword(null,"keywordize-keys","keywordize-keys",1310784252));
var keyfn = (cljs.core.truth_(keywordize_keys)?cljs.core.keyword:cljs.core.str);
var f = ((function (map__30711,map__30711__$1,keywordize_keys,keyfn){
return (function thisfn(x__$1){
if((function (){var G__30727 = x__$1;
if(G__30727){
var bit__24953__auto__ = null;
if(cljs.core.truth_((function (){var or__24272__auto__ = bit__24953__auto__;
if(cljs.core.truth_(or__24272__auto__)){
return or__24272__auto__;
} else {
return G__30727.cljs$core$IEncodeClojure$;
}
})())){
return true;
} else {
if((!G__30727.cljs$lang$protocol_mask$partition$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeClojure,G__30727);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeClojure,G__30727);
}
})()){
return cljs.core._js__GT_clj(x__$1,cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.array_map,opts));
} else {
if(cljs.core.seq_QMARK_(x__$1)){
return cljs.core.doall.cljs$core$IFn$_invoke$arity$1(cljs.core.map.cljs$core$IFn$_invoke$arity$2(thisfn,x__$1));
} else {
if(cljs.core.coll_QMARK_(x__$1)){
return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.empty(x__$1),cljs.core.map.cljs$core$IFn$_invoke$arity$2(thisfn,x__$1));
} else {
if(x__$1 instanceof Array){
return cljs.core.vec(cljs.core.map.cljs$core$IFn$_invoke$arity$2(thisfn,x__$1));
} else {
if((cljs.core.type(x__$1) === Object)){
return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentArrayMap.EMPTY,(function (){var iter__25028__auto__ = ((function (map__30711,map__30711__$1,keywordize_keys,keyfn){
return (function iter__30728(s__30729){
return (new cljs.core.LazySeq(null,((function (map__30711,map__30711__$1,keywordize_keys,keyfn){
return (function (){
var s__30729__$1 = s__30729;
while(true){
var temp__4126__auto__ = cljs.core.seq(s__30729__$1);
if(temp__4126__auto__){
var s__30729__$2 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(s__30729__$2)){
var c__25026__auto__ = cljs.core.chunk_first(s__30729__$2);
var size__25027__auto__ = cljs.core.count(c__25026__auto__);
var b__30731 = cljs.core.chunk_buffer(size__25027__auto__);
if((function (){var i__30730 = (0);
while(true){
if((i__30730 < size__25027__auto__)){
var k = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c__25026__auto__,i__30730);
cljs.core.chunk_append(b__30731,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__30736 = k;
return (keyfn.cljs$core$IFn$_invoke$arity$1 ? keyfn.cljs$core$IFn$_invoke$arity$1(G__30736) : keyfn.call(null,G__30736));
})(),thisfn((x__$1[k]))], null));

var G__30739 = (i__30730 + (1));
i__30730 = G__30739;
continue;
} else {
return true;
}
break;
}
})()){
return cljs.core.chunk_cons(cljs.core.chunk(b__30731),iter__30728(cljs.core.chunk_rest(s__30729__$2)));
} else {
return cljs.core.chunk_cons(cljs.core.chunk(b__30731),null);
}
} else {
var k = cljs.core.first(s__30729__$2);
return cljs.core.cons(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__30737 = k;
return (keyfn.cljs$core$IFn$_invoke$arity$1 ? keyfn.cljs$core$IFn$_invoke$arity$1(G__30737) : keyfn.call(null,G__30737));
})(),thisfn((x__$1[k]))], null),iter__30728(cljs.core.rest(s__30729__$2)));
}
} else {
return null;
}
break;
}
});})(map__30711,map__30711__$1,keywordize_keys,keyfn))
,null,null));
});})(map__30711,map__30711__$1,keywordize_keys,keyfn))
;
return iter__25028__auto__(cljs.core.js_keys(x__$1));
})());
} else {
return x__$1;

}
}
}
}
}
});})(map__30711,map__30711__$1,keywordize_keys,keyfn))
;
return f(x);
};
var G__30738 = function (x,var_args){
var opts = null;
if (arguments.length > 1) {
var G__30740__i = 0, G__30740__a = new Array(arguments.length -  1);
while (G__30740__i < G__30740__a.length) {G__30740__a[G__30740__i] = arguments[G__30740__i + 1]; ++G__30740__i;}
  opts = new cljs.core.IndexedSeq(G__30740__a,0);
} 
return G__30738__delegate.call(this,x,opts);};
G__30738.cljs$lang$maxFixedArity = 1;
G__30738.cljs$lang$applyTo = (function (arglist__30741){
var x = cljs.core.first(arglist__30741);
var opts = cljs.core.rest(arglist__30741);
return G__30738__delegate(x,opts);
});
G__30738.cljs$core$IFn$_invoke$arity$variadic = G__30738__delegate;
return G__30738;
})()
;
js__GT_clj = function(x,var_args){
var opts = var_args;
switch(arguments.length){
case 1:
return js__GT_clj__1.call(this,x);
default:
var G__30742 = null;
if (arguments.length > 1) {
var G__30743__i = 0, G__30743__a = new Array(arguments.length -  1);
while (G__30743__i < G__30743__a.length) {G__30743__a[G__30743__i] = arguments[G__30743__i + 1]; ++G__30743__i;}
G__30742 = new cljs.core.IndexedSeq(G__30743__a,0);
}
return js__GT_clj__2.cljs$core$IFn$_invoke$arity$variadic(x, G__30742);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
js__GT_clj.cljs$lang$maxFixedArity = 1;
js__GT_clj.cljs$lang$applyTo = js__GT_clj__2.cljs$lang$applyTo;
js__GT_clj.cljs$core$IFn$_invoke$arity$1 = js__GT_clj__1;
js__GT_clj.cljs$core$IFn$_invoke$arity$variadic = js__GT_clj__2.cljs$core$IFn$_invoke$arity$variadic;
return js__GT_clj;
})()
;
/**
* Returns a memoized version of a referentially transparent function. The
* memoized version of the function keeps a cache of the mapping from arguments
* to results and, when calls with the same arguments are repeated often, has
* higher performance at the expense of higher memory use.
*/
cljs.core.memoize = (function memoize(f){
var mem = (function (){var G__30746 = cljs.core.PersistentArrayMap.EMPTY;
return (cljs.core.atom.cljs$core$IFn$_invoke$arity$1 ? cljs.core.atom.cljs$core$IFn$_invoke$arity$1(G__30746) : cljs.core.atom.call(null,G__30746));
})();
return ((function (mem){
return (function() { 
var G__30748__delegate = function (args){
var v = cljs.core.get.cljs$core$IFn$_invoke$arity$3((function (){var G__30747 = mem;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__30747) : cljs.core.deref.call(null,G__30747));
})(),args,cljs.core.lookup_sentinel);
if((v === cljs.core.lookup_sentinel)){
var ret = cljs.core.apply.cljs$core$IFn$_invoke$arity$2(f,args);
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(mem,cljs.core.assoc,args,ret);

return ret;
} else {
return v;
}
};
var G__30748 = function (var_args){
var args = null;
if (arguments.length > 0) {
var G__30749__i = 0, G__30749__a = new Array(arguments.length -  0);
while (G__30749__i < G__30749__a.length) {G__30749__a[G__30749__i] = arguments[G__30749__i + 0]; ++G__30749__i;}
  args = new cljs.core.IndexedSeq(G__30749__a,0);
} 
return G__30748__delegate.call(this,args);};
G__30748.cljs$lang$maxFixedArity = 0;
G__30748.cljs$lang$applyTo = (function (arglist__30750){
var args = cljs.core.seq(arglist__30750);
return G__30748__delegate(args);
});
G__30748.cljs$core$IFn$_invoke$arity$variadic = G__30748__delegate;
return G__30748;
})()
;
;})(mem))
});
/**
* trampoline can be used to convert algorithms requiring mutual
* recursion without stack consumption. Calls f with supplied args, if
* any. If f returns a fn, calls that fn with no arguments, and
* continues to repeat, until the return value is not a fn, then
* returns that non-fn value. Note that if you want to return a fn as a
* final value, you must wrap it in some data structure and unpack it
* after trampoline returns.
* @param {...*} var_args
*/
cljs.core.trampoline = (function() {
var trampoline = null;
var trampoline__1 = (function (f){
while(true){
var ret = (function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})();
if(cljs.core.fn_QMARK_(ret)){
var G__30752 = ret;
f = G__30752;
continue;
} else {
return ret;
}
break;
}
});
var trampoline__2 = (function() { 
var G__30753__delegate = function (f,args){
return trampoline.cljs$core$IFn$_invoke$arity$1((function (){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$2(f,args);
}));
};
var G__30753 = function (f,var_args){
var args = null;
if (arguments.length > 1) {
var G__30754__i = 0, G__30754__a = new Array(arguments.length -  1);
while (G__30754__i < G__30754__a.length) {G__30754__a[G__30754__i] = arguments[G__30754__i + 1]; ++G__30754__i;}
  args = new cljs.core.IndexedSeq(G__30754__a,0);
} 
return G__30753__delegate.call(this,f,args);};
G__30753.cljs$lang$maxFixedArity = 1;
G__30753.cljs$lang$applyTo = (function (arglist__30755){
var f = cljs.core.first(arglist__30755);
var args = cljs.core.rest(arglist__30755);
return G__30753__delegate(f,args);
});
G__30753.cljs$core$IFn$_invoke$arity$variadic = G__30753__delegate;
return G__30753;
})()
;
trampoline = function(f,var_args){
var args = var_args;
switch(arguments.length){
case 1:
return trampoline__1.call(this,f);
default:
var G__30756 = null;
if (arguments.length > 1) {
var G__30757__i = 0, G__30757__a = new Array(arguments.length -  1);
while (G__30757__i < G__30757__a.length) {G__30757__a[G__30757__i] = arguments[G__30757__i + 1]; ++G__30757__i;}
G__30756 = new cljs.core.IndexedSeq(G__30757__a,0);
}
return trampoline__2.cljs$core$IFn$_invoke$arity$variadic(f, G__30756);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
trampoline.cljs$lang$maxFixedArity = 1;
trampoline.cljs$lang$applyTo = trampoline__2.cljs$lang$applyTo;
trampoline.cljs$core$IFn$_invoke$arity$1 = trampoline__1;
trampoline.cljs$core$IFn$_invoke$arity$variadic = trampoline__2.cljs$core$IFn$_invoke$arity$variadic;
return trampoline;
})()
;
/**
* Returns a random floating point number between 0 (inclusive) and
* n (default 1) (exclusive).
*/
cljs.core.rand = (function() {
var rand = null;
var rand__0 = (function (){
return rand.cljs$core$IFn$_invoke$arity$1((1));
});
var rand__1 = (function (n){
return ((function (){return (Math.random.cljs$core$IFn$_invoke$arity$0 ? Math.random.cljs$core$IFn$_invoke$arity$0() : Math.random.call(null));
})() * n);
});
rand = function(n){
switch(arguments.length){
case 0:
return rand__0.call(this);
case 1:
return rand__1.call(this,n);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
rand.cljs$core$IFn$_invoke$arity$0 = rand__0;
rand.cljs$core$IFn$_invoke$arity$1 = rand__1;
return rand;
})()
;
/**
* Returns a random integer between 0 (inclusive) and n (exclusive).
*/
cljs.core.rand_int = (function rand_int(n){
var G__30760 = ((function (){return (Math.random.cljs$core$IFn$_invoke$arity$0 ? Math.random.cljs$core$IFn$_invoke$arity$0() : Math.random.call(null));
})() * n);
return (Math.floor.cljs$core$IFn$_invoke$arity$1 ? Math.floor.cljs$core$IFn$_invoke$arity$1(G__30760) : Math.floor.call(null,G__30760));
});
/**
* Return a random element of the (sequential) collection. Will have
* the same performance characteristics as nth for the given
* collection.
*/
cljs.core.rand_nth = (function rand_nth(coll){
return cljs.core.nth.cljs$core$IFn$_invoke$arity$2(coll,cljs.core.rand_int(cljs.core.count(coll)));
});
/**
* Returns a map of the elements of coll keyed by the result of
* f on each element. The value at each key will be a vector of the
* corresponding elements, in the order they appeared in coll.
*/
cljs.core.group_by = (function group_by(f,coll){
return cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (ret,x){
var k = (function (){var G__30762 = x;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__30762) : f.call(null,G__30762));
})();
return cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(ret,k,cljs.core.conj.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$3(ret,k,cljs.core.PersistentVector.EMPTY),x));
}),cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY),coll));
});
/**
* Creates a hierarchy object for use with derive, isa? etc.
*/
cljs.core.make_hierarchy = (function make_hierarchy(){
return new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,"parents","parents",-2027538891),cljs.core.PersistentArrayMap.EMPTY,new cljs.core.Keyword(null,"descendants","descendants",1824886031),cljs.core.PersistentArrayMap.EMPTY,new cljs.core.Keyword(null,"ancestors","ancestors",-776045424),cljs.core.PersistentArrayMap.EMPTY], null);
});
cljs.core._global_hierarchy = null;
cljs.core.get_global_hierarchy = (function get_global_hierarchy(){
if((cljs.core._global_hierarchy == null)){
cljs.core._global_hierarchy = (function (){var G__30764 = cljs.core.make_hierarchy();
return (cljs.core.atom.cljs$core$IFn$_invoke$arity$1 ? cljs.core.atom.cljs$core$IFn$_invoke$arity$1(G__30764) : cljs.core.atom.call(null,G__30764));
})();
} else {
}

return cljs.core._global_hierarchy;
});
/**
* @param {...*} var_args
*/
cljs.core.swap_global_hierarchy_BANG_ = (function() { 
var swap_global_hierarchy_BANG___delegate = function (f,args){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$4(cljs.core.swap_BANG_,cljs.core.get_global_hierarchy(),f,args);
};
var swap_global_hierarchy_BANG_ = function (f,var_args){
var args = null;
if (arguments.length > 1) {
var G__30765__i = 0, G__30765__a = new Array(arguments.length -  1);
while (G__30765__i < G__30765__a.length) {G__30765__a[G__30765__i] = arguments[G__30765__i + 1]; ++G__30765__i;}
  args = new cljs.core.IndexedSeq(G__30765__a,0);
} 
return swap_global_hierarchy_BANG___delegate.call(this,f,args);};
swap_global_hierarchy_BANG_.cljs$lang$maxFixedArity = 1;
swap_global_hierarchy_BANG_.cljs$lang$applyTo = (function (arglist__30766){
var f = cljs.core.first(arglist__30766);
var args = cljs.core.rest(arglist__30766);
return swap_global_hierarchy_BANG___delegate(f,args);
});
swap_global_hierarchy_BANG_.cljs$core$IFn$_invoke$arity$variadic = swap_global_hierarchy_BANG___delegate;
return swap_global_hierarchy_BANG_;
})()
;
/**
* Returns true if (= child parent), or child is directly or indirectly derived from
* parent, either via a JavaScript type inheritance relationship or a
* relationship established via derive. h must be a hierarchy obtained
* from make-hierarchy, if not supplied defaults to the global
* hierarchy
*/
cljs.core.isa_QMARK_ = (function() {
var isa_QMARK_ = null;
var isa_QMARK___2 = (function (child,parent){
return isa_QMARK_.cljs$core$IFn$_invoke$arity$3((function (){var G__30831 = cljs.core.get_global_hierarchy();
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__30831) : cljs.core.deref.call(null,G__30831));
})(),child,parent);
});
var isa_QMARK___3 = (function (h,child,parent){
var or__24272__auto__ = cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(child,parent);
if(or__24272__auto__){
return or__24272__auto__;
} else {
var or__24272__auto____$1 = cljs.core.contains_QMARK_(new cljs.core.Keyword(null,"ancestors","ancestors",-776045424).cljs$core$IFn$_invoke$arity$1(h).call(null,child),parent);
if(or__24272__auto____$1){
return or__24272__auto____$1;
} else {
var and__24260__auto__ = cljs.core.vector_QMARK_(parent);
if(and__24260__auto__){
var and__24260__auto____$1 = cljs.core.vector_QMARK_(child);
if(and__24260__auto____$1){
var and__24260__auto____$2 = (cljs.core.count(parent) === cljs.core.count(child));
if(and__24260__auto____$2){
var ret = true;
var i = (0);
while(true){
if((!(ret)) || ((i === cljs.core.count(parent)))){
return ret;
} else {
var G__30856 = isa_QMARK_.cljs$core$IFn$_invoke$arity$3(h,(function (){var G__30854 = i;
return (child.cljs$core$IFn$_invoke$arity$1 ? child.cljs$core$IFn$_invoke$arity$1(G__30854) : child.call(null,G__30854));
})(),(function (){var G__30855 = i;
return (parent.cljs$core$IFn$_invoke$arity$1 ? parent.cljs$core$IFn$_invoke$arity$1(G__30855) : parent.call(null,G__30855));
})());
var G__30857 = (i + (1));
ret = G__30856;
i = G__30857;
continue;
}
break;
}
} else {
return and__24260__auto____$2;
}
} else {
return and__24260__auto____$1;
}
} else {
return and__24260__auto__;
}
}
}
});
isa_QMARK_ = function(h,child,parent){
switch(arguments.length){
case 2:
return isa_QMARK___2.call(this,h,child);
case 3:
return isa_QMARK___3.call(this,h,child,parent);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
isa_QMARK_.cljs$core$IFn$_invoke$arity$2 = isa_QMARK___2;
isa_QMARK_.cljs$core$IFn$_invoke$arity$3 = isa_QMARK___3;
return isa_QMARK_;
})()
;
/**
* Returns the immediate parents of tag, either via a JavaScript type
* inheritance relationship or a relationship established via derive. h
* must be a hierarchy obtained from make-hierarchy, if not supplied
* defaults to the global hierarchy
*/
cljs.core.parents = (function() {
var parents = null;
var parents__1 = (function (tag){
return parents.cljs$core$IFn$_invoke$arity$2((function (){var G__30861 = cljs.core.get_global_hierarchy();
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__30861) : cljs.core.deref.call(null,G__30861));
})(),tag);
});
var parents__2 = (function (h,tag){
return cljs.core.not_empty(cljs.core.get.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,"parents","parents",-2027538891).cljs$core$IFn$_invoke$arity$1(h),tag));
});
parents = function(h,tag){
switch(arguments.length){
case 1:
return parents__1.call(this,h);
case 2:
return parents__2.call(this,h,tag);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
parents.cljs$core$IFn$_invoke$arity$1 = parents__1;
parents.cljs$core$IFn$_invoke$arity$2 = parents__2;
return parents;
})()
;
/**
* Returns the immediate and indirect parents of tag, either via a JavaScript type
* inheritance relationship or a relationship established via derive. h
* must be a hierarchy obtained from make-hierarchy, if not supplied
* defaults to the global hierarchy
*/
cljs.core.ancestors = (function() {
var ancestors = null;
var ancestors__1 = (function (tag){
return ancestors.cljs$core$IFn$_invoke$arity$2((function (){var G__30865 = cljs.core.get_global_hierarchy();
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__30865) : cljs.core.deref.call(null,G__30865));
})(),tag);
});
var ancestors__2 = (function (h,tag){
return cljs.core.not_empty(cljs.core.get.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,"ancestors","ancestors",-776045424).cljs$core$IFn$_invoke$arity$1(h),tag));
});
ancestors = function(h,tag){
switch(arguments.length){
case 1:
return ancestors__1.call(this,h);
case 2:
return ancestors__2.call(this,h,tag);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
ancestors.cljs$core$IFn$_invoke$arity$1 = ancestors__1;
ancestors.cljs$core$IFn$_invoke$arity$2 = ancestors__2;
return ancestors;
})()
;
/**
* Returns the immediate and indirect children of tag, through a
* relationship established via derive. h must be a hierarchy obtained
* from make-hierarchy, if not supplied defaults to the global
* hierarchy. Note: does not work on JavaScript type inheritance
* relationships.
*/
cljs.core.descendants = (function() {
var descendants = null;
var descendants__1 = (function (tag){
return descendants.cljs$core$IFn$_invoke$arity$2((function (){var G__30869 = cljs.core.get_global_hierarchy();
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__30869) : cljs.core.deref.call(null,G__30869));
})(),tag);
});
var descendants__2 = (function (h,tag){
return cljs.core.not_empty(cljs.core.get.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,"descendants","descendants",1824886031).cljs$core$IFn$_invoke$arity$1(h),tag));
});
descendants = function(h,tag){
switch(arguments.length){
case 1:
return descendants__1.call(this,h);
case 2:
return descendants__2.call(this,h,tag);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
descendants.cljs$core$IFn$_invoke$arity$1 = descendants__1;
descendants.cljs$core$IFn$_invoke$arity$2 = descendants__2;
return descendants;
})()
;
/**
* Establishes a parent/child relationship between parent and
* tag. Parent must be a namespace-qualified symbol or keyword and
* child can be either a namespace-qualified symbol or keyword or a
* class. h must be a hierarchy obtained from make-hierarchy, if not
* supplied defaults to, and modifies, the global hierarchy.
*/
cljs.core.derive = (function() {
var derive = null;
var derive__2 = (function (tag,parent){
if(cljs.core.truth_(cljs.core.namespace(parent))){
} else {
throw (new Error([cljs.core.str("Assert failed: "),cljs.core.str(cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.list(new cljs.core.Symbol(null,"namespace","namespace",1263021155,null),new cljs.core.Symbol(null,"parent","parent",761652748,null))], 0)))].join('')));
}

cljs.core.swap_global_hierarchy_BANG_.cljs$core$IFn$_invoke$arity$variadic(derive,cljs.core.array_seq([tag,parent], 0));

return null;
});
var derive__3 = (function (h,tag,parent){
if(cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2(tag,parent)){
} else {
throw (new Error([cljs.core.str("Assert failed: "),cljs.core.str(cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.list(new cljs.core.Symbol(null,"not=","not=",1466536204,null),new cljs.core.Symbol(null,"tag","tag",350170304,null),new cljs.core.Symbol(null,"parent","parent",761652748,null))], 0)))].join('')));
}

var tp = new cljs.core.Keyword(null,"parents","parents",-2027538891).cljs$core$IFn$_invoke$arity$1(h);
var td = new cljs.core.Keyword(null,"descendants","descendants",1824886031).cljs$core$IFn$_invoke$arity$1(h);
var ta = new cljs.core.Keyword(null,"ancestors","ancestors",-776045424).cljs$core$IFn$_invoke$arity$1(h);
var tf = ((function (tp,td,ta){
return (function (m,source,sources,target,targets){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (tp,td,ta){
return (function (ret,k){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(ret,k,cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.conj,cljs.core.get.cljs$core$IFn$_invoke$arity$3(targets,k,cljs.core.PersistentHashSet.EMPTY),cljs.core.cons(target,(function (){var G__30878 = target;
return (targets.cljs$core$IFn$_invoke$arity$1 ? targets.cljs$core$IFn$_invoke$arity$1(G__30878) : targets.call(null,G__30878));
})())));
});})(tp,td,ta))
,m,cljs.core.cons(source,(function (){var G__30879 = source;
return (sources.cljs$core$IFn$_invoke$arity$1 ? sources.cljs$core$IFn$_invoke$arity$1(G__30879) : sources.call(null,G__30879));
})()));
});})(tp,td,ta))
;
var or__24272__auto__ = ((cljs.core.contains_QMARK_((function (){var G__30883 = tag;
return (tp.cljs$core$IFn$_invoke$arity$1 ? tp.cljs$core$IFn$_invoke$arity$1(G__30883) : tp.call(null,G__30883));
})(),parent))?null:(function (){
if(cljs.core.contains_QMARK_((function (){var G__30884 = tag;
return (ta.cljs$core$IFn$_invoke$arity$1 ? ta.cljs$core$IFn$_invoke$arity$1(G__30884) : ta.call(null,G__30884));
})(),parent)){
throw (new Error([cljs.core.str(tag),cljs.core.str("already has"),cljs.core.str(parent),cljs.core.str("as ancestor")].join('')));
} else {
}

if(cljs.core.contains_QMARK_((function (){var G__30885 = parent;
return (ta.cljs$core$IFn$_invoke$arity$1 ? ta.cljs$core$IFn$_invoke$arity$1(G__30885) : ta.call(null,G__30885));
})(),tag)){
throw (new Error([cljs.core.str("Cyclic derivation:"),cljs.core.str(parent),cljs.core.str("has"),cljs.core.str(tag),cljs.core.str("as ancestor")].join('')));
} else {
}

return new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,"parents","parents",-2027538891),cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(new cljs.core.Keyword(null,"parents","parents",-2027538891).cljs$core$IFn$_invoke$arity$1(h),tag,cljs.core.conj.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$3(tp,tag,cljs.core.PersistentHashSet.EMPTY),parent)),new cljs.core.Keyword(null,"ancestors","ancestors",-776045424),tf(new cljs.core.Keyword(null,"ancestors","ancestors",-776045424).cljs$core$IFn$_invoke$arity$1(h),tag,td,parent,ta),new cljs.core.Keyword(null,"descendants","descendants",1824886031),tf(new cljs.core.Keyword(null,"descendants","descendants",1824886031).cljs$core$IFn$_invoke$arity$1(h),parent,ta,tag,td)], null);
})()
);
if(cljs.core.truth_(or__24272__auto__)){
return or__24272__auto__;
} else {
return h;
}
});
derive = function(h,tag,parent){
switch(arguments.length){
case 2:
return derive__2.call(this,h,tag);
case 3:
return derive__3.call(this,h,tag,parent);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
derive.cljs$core$IFn$_invoke$arity$2 = derive__2;
derive.cljs$core$IFn$_invoke$arity$3 = derive__3;
return derive;
})()
;
/**
* Removes a parent/child relationship between parent and
* tag. h must be a hierarchy obtained from make-hierarchy, if not
* supplied defaults to, and modifies, the global hierarchy.
*/
cljs.core.underive = (function() {
var underive = null;
var underive__2 = (function (tag,parent){
cljs.core.swap_global_hierarchy_BANG_.cljs$core$IFn$_invoke$arity$variadic(underive,cljs.core.array_seq([tag,parent], 0));

return null;
});
var underive__3 = (function (h,tag,parent){
var parentMap = new cljs.core.Keyword(null,"parents","parents",-2027538891).cljs$core$IFn$_invoke$arity$1(h);
var childsParents = (cljs.core.truth_((function (){var G__30892 = tag;
return (parentMap.cljs$core$IFn$_invoke$arity$1 ? parentMap.cljs$core$IFn$_invoke$arity$1(G__30892) : parentMap.call(null,G__30892));
})())?cljs.core.disj.cljs$core$IFn$_invoke$arity$2((function (){var G__30893 = tag;
return (parentMap.cljs$core$IFn$_invoke$arity$1 ? parentMap.cljs$core$IFn$_invoke$arity$1(G__30893) : parentMap.call(null,G__30893));
})(),parent):cljs.core.PersistentHashSet.EMPTY);
var newParents = (cljs.core.truth_(cljs.core.not_empty(childsParents))?cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(parentMap,tag,childsParents):cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(parentMap,tag));
var deriv_seq = cljs.core.flatten(cljs.core.map.cljs$core$IFn$_invoke$arity$2(((function (parentMap,childsParents,newParents){
return (function (p1__30886_SHARP_){
return cljs.core.cons(cljs.core.first(p1__30886_SHARP_),cljs.core.interpose(cljs.core.first(p1__30886_SHARP_),cljs.core.second(p1__30886_SHARP_)));
});})(parentMap,childsParents,newParents))
,cljs.core.seq(newParents)));
if(cljs.core.contains_QMARK_((function (){var G__30894 = tag;
return (parentMap.cljs$core$IFn$_invoke$arity$1 ? parentMap.cljs$core$IFn$_invoke$arity$1(G__30894) : parentMap.call(null,G__30894));
})(),parent)){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (parentMap,childsParents,newParents,deriv_seq){
return (function (p1__30887_SHARP_,p2__30888_SHARP_){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$3(cljs.core.derive,p1__30887_SHARP_,p2__30888_SHARP_);
});})(parentMap,childsParents,newParents,deriv_seq))
,cljs.core.make_hierarchy(),cljs.core.partition.cljs$core$IFn$_invoke$arity$2((2),deriv_seq));
} else {
return h;
}
});
underive = function(h,tag,parent){
switch(arguments.length){
case 2:
return underive__2.call(this,h,tag);
case 3:
return underive__3.call(this,h,tag,parent);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
underive.cljs$core$IFn$_invoke$arity$2 = underive__2;
underive.cljs$core$IFn$_invoke$arity$3 = underive__3;
return underive;
})()
;
cljs.core.reset_cache = (function reset_cache(method_cache,method_table,cached_hierarchy,hierarchy){
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(method_cache,(function (_){
var G__30897 = method_table;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__30897) : cljs.core.deref.call(null,G__30897));
}));

return cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(cached_hierarchy,(function (_){
var G__30898 = hierarchy;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__30898) : cljs.core.deref.call(null,G__30898));
}));
});
cljs.core.prefers_STAR_ = (function prefers_STAR_(x,y,prefer_table){
var xprefs = (function (){var G__30914 = prefer_table;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__30914) : cljs.core.deref.call(null,G__30914));
})().call(null,x);
var or__24272__auto__ = (cljs.core.truth_((function (){var and__24260__auto__ = xprefs;
if(cljs.core.truth_(and__24260__auto__)){
var G__30916 = y;
return (xprefs.cljs$core$IFn$_invoke$arity$1 ? xprefs.cljs$core$IFn$_invoke$arity$1(G__30916) : xprefs.call(null,G__30916));
} else {
return and__24260__auto__;
}
})())?true:null);
if(cljs.core.truth_(or__24272__auto__)){
return or__24272__auto__;
} else {
var or__24272__auto____$1 = (function (){var ps = cljs.core.parents.cljs$core$IFn$_invoke$arity$1(y);
while(true){
if((cljs.core.count(ps) > (0))){
if(cljs.core.truth_(prefers_STAR_(x,cljs.core.first(ps),prefer_table))){
} else {
}

var G__30917 = cljs.core.rest(ps);
ps = G__30917;
continue;
} else {
return null;
}
break;
}
})();
if(cljs.core.truth_(or__24272__auto____$1)){
return or__24272__auto____$1;
} else {
var or__24272__auto____$2 = (function (){var ps = cljs.core.parents.cljs$core$IFn$_invoke$arity$1(x);
while(true){
if((cljs.core.count(ps) > (0))){
if(cljs.core.truth_(prefers_STAR_(cljs.core.first(ps),y,prefer_table))){
} else {
}

var G__30918 = cljs.core.rest(ps);
ps = G__30918;
continue;
} else {
return null;
}
break;
}
})();
if(cljs.core.truth_(or__24272__auto____$2)){
return or__24272__auto____$2;
} else {
return false;
}
}
}
});
cljs.core.dominates = (function dominates(x,y,prefer_table){
var or__24272__auto__ = cljs.core.prefers_STAR_(x,y,prefer_table);
if(cljs.core.truth_(or__24272__auto__)){
return or__24272__auto__;
} else {
return cljs.core.isa_QMARK_.cljs$core$IFn$_invoke$arity$2(x,y);
}
});
cljs.core.find_and_cache_best_method = (function find_and_cache_best_method(name,dispatch_val,hierarchy,method_table,prefer_table,method_cache,cached_hierarchy){
var best_entry = cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (be,p__30932){
var vec__30933 = p__30932;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__30933,(0),null);
var _ = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__30933,(1),null);
var e = vec__30933;
if(cljs.core.isa_QMARK_.cljs$core$IFn$_invoke$arity$3((function (){var G__30934 = hierarchy;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__30934) : cljs.core.deref.call(null,G__30934));
})(),dispatch_val,k)){
var be2 = (cljs.core.truth_((function (){var or__24272__auto__ = (be == null);
if(or__24272__auto__){
return or__24272__auto__;
} else {
return cljs.core.dominates(k,cljs.core.first(be),prefer_table);
}
})())?e:be);
if(cljs.core.truth_(cljs.core.dominates(cljs.core.first(be2),k,prefer_table))){
} else {
throw (new Error([cljs.core.str("Multiple methods in multimethod '"),cljs.core.str(name),cljs.core.str("' match dispatch value: "),cljs.core.str(dispatch_val),cljs.core.str(" -> "),cljs.core.str(k),cljs.core.str(" and "),cljs.core.str(cljs.core.first(be2)),cljs.core.str(", and neither is preferred")].join('')));
}

return be2;
} else {
return be;
}
}),null,(function (){var G__30935 = method_table;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__30935) : cljs.core.deref.call(null,G__30935));
})());
if(cljs.core.truth_(best_entry)){
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2((function (){var G__30936 = cached_hierarchy;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__30936) : cljs.core.deref.call(null,G__30936));
})(),(function (){var G__30937 = hierarchy;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__30937) : cljs.core.deref.call(null,G__30937));
})())){
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(method_cache,cljs.core.assoc,dispatch_val,cljs.core.second(best_entry));

return cljs.core.second(best_entry);
} else {
cljs.core.reset_cache(method_cache,method_table,cached_hierarchy,hierarchy);

return find_and_cache_best_method(name,dispatch_val,hierarchy,method_table,prefer_table,method_cache,cached_hierarchy);
}
} else {
return null;
}
});

cljs.core.IMultiFn = (function (){var obj30939 = {};
return obj30939;
})();

cljs.core._reset = (function _reset(mf){
if((function (){var and__24260__auto__ = mf;
if(and__24260__auto__){
return mf.cljs$core$IMultiFn$_reset$arity$1;
} else {
return and__24260__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_reset$arity$1(mf);
} else {
var x__24916__auto__ = (((mf == null))?null:mf);
return (function (){var or__24272__auto__ = (cljs.core._reset[(function (){var G__30943 = x__24916__auto__;
return goog.typeOf(G__30943);
})()]);
if(or__24272__auto__){
return or__24272__auto__;
} else {
var or__24272__auto____$1 = (cljs.core._reset["_"]);
if(or__24272__auto____$1){
return or__24272__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-reset",mf);
}
}
})().call(null,mf);
}
});

cljs.core._add_method = (function _add_method(mf,dispatch_val,method){
if((function (){var and__24260__auto__ = mf;
if(and__24260__auto__){
return mf.cljs$core$IMultiFn$_add_method$arity$3;
} else {
return and__24260__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_add_method$arity$3(mf,dispatch_val,method);
} else {
var x__24916__auto__ = (((mf == null))?null:mf);
return (function (){var or__24272__auto__ = (cljs.core._add_method[(function (){var G__30947 = x__24916__auto__;
return goog.typeOf(G__30947);
})()]);
if(or__24272__auto__){
return or__24272__auto__;
} else {
var or__24272__auto____$1 = (cljs.core._add_method["_"]);
if(or__24272__auto____$1){
return or__24272__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-add-method",mf);
}
}
})().call(null,mf,dispatch_val,method);
}
});

cljs.core._remove_method = (function _remove_method(mf,dispatch_val){
if((function (){var and__24260__auto__ = mf;
if(and__24260__auto__){
return mf.cljs$core$IMultiFn$_remove_method$arity$2;
} else {
return and__24260__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_remove_method$arity$2(mf,dispatch_val);
} else {
var x__24916__auto__ = (((mf == null))?null:mf);
return (function (){var or__24272__auto__ = (cljs.core._remove_method[(function (){var G__30951 = x__24916__auto__;
return goog.typeOf(G__30951);
})()]);
if(or__24272__auto__){
return or__24272__auto__;
} else {
var or__24272__auto____$1 = (cljs.core._remove_method["_"]);
if(or__24272__auto____$1){
return or__24272__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-remove-method",mf);
}
}
})().call(null,mf,dispatch_val);
}
});

cljs.core._prefer_method = (function _prefer_method(mf,dispatch_val,dispatch_val_y){
if((function (){var and__24260__auto__ = mf;
if(and__24260__auto__){
return mf.cljs$core$IMultiFn$_prefer_method$arity$3;
} else {
return and__24260__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_prefer_method$arity$3(mf,dispatch_val,dispatch_val_y);
} else {
var x__24916__auto__ = (((mf == null))?null:mf);
return (function (){var or__24272__auto__ = (cljs.core._prefer_method[(function (){var G__30955 = x__24916__auto__;
return goog.typeOf(G__30955);
})()]);
if(or__24272__auto__){
return or__24272__auto__;
} else {
var or__24272__auto____$1 = (cljs.core._prefer_method["_"]);
if(or__24272__auto____$1){
return or__24272__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-prefer-method",mf);
}
}
})().call(null,mf,dispatch_val,dispatch_val_y);
}
});

cljs.core._get_method = (function _get_method(mf,dispatch_val){
if((function (){var and__24260__auto__ = mf;
if(and__24260__auto__){
return mf.cljs$core$IMultiFn$_get_method$arity$2;
} else {
return and__24260__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_get_method$arity$2(mf,dispatch_val);
} else {
var x__24916__auto__ = (((mf == null))?null:mf);
return (function (){var or__24272__auto__ = (cljs.core._get_method[(function (){var G__30959 = x__24916__auto__;
return goog.typeOf(G__30959);
})()]);
if(or__24272__auto__){
return or__24272__auto__;
} else {
var or__24272__auto____$1 = (cljs.core._get_method["_"]);
if(or__24272__auto____$1){
return or__24272__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-get-method",mf);
}
}
})().call(null,mf,dispatch_val);
}
});

cljs.core._methods = (function _methods(mf){
if((function (){var and__24260__auto__ = mf;
if(and__24260__auto__){
return mf.cljs$core$IMultiFn$_methods$arity$1;
} else {
return and__24260__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_methods$arity$1(mf);
} else {
var x__24916__auto__ = (((mf == null))?null:mf);
return (function (){var or__24272__auto__ = (cljs.core._methods[(function (){var G__30963 = x__24916__auto__;
return goog.typeOf(G__30963);
})()]);
if(or__24272__auto__){
return or__24272__auto__;
} else {
var or__24272__auto____$1 = (cljs.core._methods["_"]);
if(or__24272__auto____$1){
return or__24272__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-methods",mf);
}
}
})().call(null,mf);
}
});

cljs.core._prefers = (function _prefers(mf){
if((function (){var and__24260__auto__ = mf;
if(and__24260__auto__){
return mf.cljs$core$IMultiFn$_prefers$arity$1;
} else {
return and__24260__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_prefers$arity$1(mf);
} else {
var x__24916__auto__ = (((mf == null))?null:mf);
return (function (){var or__24272__auto__ = (cljs.core._prefers[(function (){var G__30967 = x__24916__auto__;
return goog.typeOf(G__30967);
})()]);
if(or__24272__auto__){
return or__24272__auto__;
} else {
var or__24272__auto____$1 = (cljs.core._prefers["_"]);
if(or__24272__auto____$1){
return or__24272__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-prefers",mf);
}
}
})().call(null,mf);
}
});

cljs.core.throw_no_method_error = (function throw_no_method_error(name,dispatch_val){
throw (new Error([cljs.core.str("No method in multimethod '"),cljs.core.str(name),cljs.core.str("' for dispatch value: "),cljs.core.str(dispatch_val)].join('')));
});

/**
* @constructor
*/
cljs.core.MultiFn = (function (name,dispatch_fn,default_dispatch_val,hierarchy,method_table,prefer_table,method_cache,cached_hierarchy){
this.name = name;
this.dispatch_fn = dispatch_fn;
this.default_dispatch_val = default_dispatch_val;
this.hierarchy = hierarchy;
this.method_table = method_table;
this.prefer_table = prefer_table;
this.method_cache = method_cache;
this.cached_hierarchy = cached_hierarchy;
this.cljs$lang$protocol_mask$partition0$ = 4194305;
this.cljs$lang$protocol_mask$partition1$ = 4352;
})
cljs.core.MultiFn.prototype.cljs$core$IHash$_hash$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
var G__30969 = this$__$1;
return goog.getUid(G__30969);
});

cljs.core.MultiFn.prototype.cljs$core$INamed$_name$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return cljs.core._name(self__.name);
});

cljs.core.MultiFn.prototype.cljs$core$INamed$_namespace$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return cljs.core._namespace(self__.name);
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_reset$arity$1 = (function (mf){
var self__ = this;
var mf__$1 = this;
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.method_table,((function (mf__$1){
return (function (mf__$2){
return cljs.core.PersistentArrayMap.EMPTY;
});})(mf__$1))
);

cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.method_cache,((function (mf__$1){
return (function (mf__$2){
return cljs.core.PersistentArrayMap.EMPTY;
});})(mf__$1))
);

cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.prefer_table,((function (mf__$1){
return (function (mf__$2){
return cljs.core.PersistentArrayMap.EMPTY;
});})(mf__$1))
);

cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.cached_hierarchy,((function (mf__$1){
return (function (mf__$2){
return null;
});})(mf__$1))
);

return mf__$1;
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_add_method$arity$3 = (function (mf,dispatch_val,method){
var self__ = this;
var mf__$1 = this;
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(self__.method_table,cljs.core.assoc,dispatch_val,method);

cljs.core.reset_cache(self__.method_cache,self__.method_table,self__.cached_hierarchy,self__.hierarchy);

return mf__$1;
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_remove_method$arity$2 = (function (mf,dispatch_val){
var self__ = this;
var mf__$1 = this;
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$3(self__.method_table,cljs.core.dissoc,dispatch_val);

cljs.core.reset_cache(self__.method_cache,self__.method_table,self__.cached_hierarchy,self__.hierarchy);

return mf__$1;
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_get_method$arity$2 = (function (mf,dispatch_val){
var self__ = this;
var mf__$1 = this;
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2((function (){var G__30970 = self__.cached_hierarchy;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__30970) : cljs.core.deref.call(null,G__30970));
})(),(function (){var G__30971 = self__.hierarchy;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__30971) : cljs.core.deref.call(null,G__30971));
})())){
} else {
cljs.core.reset_cache(self__.method_cache,self__.method_table,self__.cached_hierarchy,self__.hierarchy);
}

var temp__4124__auto__ = (function (){var G__30972 = self__.method_cache;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__30972) : cljs.core.deref.call(null,G__30972));
})().call(null,dispatch_val);
if(cljs.core.truth_(temp__4124__auto__)){
var target_fn = temp__4124__auto__;
return target_fn;
} else {
var temp__4124__auto____$1 = cljs.core.find_and_cache_best_method(self__.name,dispatch_val,self__.hierarchy,self__.method_table,self__.prefer_table,self__.method_cache,self__.cached_hierarchy);
if(cljs.core.truth_(temp__4124__auto____$1)){
var target_fn = temp__4124__auto____$1;
return target_fn;
} else {
return (function (){var G__30973 = self__.method_table;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__30973) : cljs.core.deref.call(null,G__30973));
})().call(null,self__.default_dispatch_val);
}
}
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_prefer_method$arity$3 = (function (mf,dispatch_val_x,dispatch_val_y){
var self__ = this;
var mf__$1 = this;
if(cljs.core.truth_(cljs.core.prefers_STAR_(dispatch_val_x,dispatch_val_y,self__.prefer_table))){
throw (new Error([cljs.core.str("Preference conflict in multimethod '"),cljs.core.str(self__.name),cljs.core.str("': "),cljs.core.str(dispatch_val_y),cljs.core.str(" is already preferred to "),cljs.core.str(dispatch_val_x)].join('')));
} else {
}

cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.prefer_table,((function (mf__$1){
return (function (old){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(old,dispatch_val_x,cljs.core.conj.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$3(old,dispatch_val_x,cljs.core.PersistentHashSet.EMPTY),dispatch_val_y));
});})(mf__$1))
);

return cljs.core.reset_cache(self__.method_cache,self__.method_table,self__.cached_hierarchy,self__.hierarchy);
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_methods$arity$1 = (function (mf){
var self__ = this;
var mf__$1 = this;
var G__30974 = self__.method_table;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__30974) : cljs.core.deref.call(null,G__30974));
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_prefers$arity$1 = (function (mf){
var self__ = this;
var mf__$1 = this;
var G__30975 = self__.prefer_table;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__30975) : cljs.core.deref.call(null,G__30975));
});

cljs.core.MultiFn.prototype.call = (function() {
var G__31816 = null;
var G__31816__1 = (function (self__){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$0 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$0() : self__.dispatch_fn.call(null));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

return (target_fn.cljs$core$IFn$_invoke$arity$0 ? target_fn.cljs$core$IFn$_invoke$arity$0() : target_fn.call(null));
});
var G__31816__2 = (function (self__,a){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__30976 = a;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$1 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$1(G__30976) : self__.dispatch_fn.call(null,G__30976));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__30977 = a;
return (target_fn.cljs$core$IFn$_invoke$arity$1 ? target_fn.cljs$core$IFn$_invoke$arity$1(G__30977) : target_fn.call(null,G__30977));
});
var G__31816__3 = (function (self__,a,b){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__30978 = a;
var G__30979 = b;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$2 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$2(G__30978,G__30979) : self__.dispatch_fn.call(null,G__30978,G__30979));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__30980 = a;
var G__30981 = b;
return (target_fn.cljs$core$IFn$_invoke$arity$2 ? target_fn.cljs$core$IFn$_invoke$arity$2(G__30980,G__30981) : target_fn.call(null,G__30980,G__30981));
});
var G__31816__4 = (function (self__,a,b,c){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__30982 = a;
var G__30983 = b;
var G__30984 = c;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$3 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$3(G__30982,G__30983,G__30984) : self__.dispatch_fn.call(null,G__30982,G__30983,G__30984));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__30985 = a;
var G__30986 = b;
var G__30987 = c;
return (target_fn.cljs$core$IFn$_invoke$arity$3 ? target_fn.cljs$core$IFn$_invoke$arity$3(G__30985,G__30986,G__30987) : target_fn.call(null,G__30985,G__30986,G__30987));
});
var G__31816__5 = (function (self__,a,b,c,d){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__30988 = a;
var G__30989 = b;
var G__30990 = c;
var G__30991 = d;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$4 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$4(G__30988,G__30989,G__30990,G__30991) : self__.dispatch_fn.call(null,G__30988,G__30989,G__30990,G__30991));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__30992 = a;
var G__30993 = b;
var G__30994 = c;
var G__30995 = d;
return (target_fn.cljs$core$IFn$_invoke$arity$4 ? target_fn.cljs$core$IFn$_invoke$arity$4(G__30992,G__30993,G__30994,G__30995) : target_fn.call(null,G__30992,G__30993,G__30994,G__30995));
});
var G__31816__6 = (function (self__,a,b,c,d,e){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__30996 = a;
var G__30997 = b;
var G__30998 = c;
var G__30999 = d;
var G__31000 = e;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$5 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$5(G__30996,G__30997,G__30998,G__30999,G__31000) : self__.dispatch_fn.call(null,G__30996,G__30997,G__30998,G__30999,G__31000));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__31001 = a;
var G__31002 = b;
var G__31003 = c;
var G__31004 = d;
var G__31005 = e;
return (target_fn.cljs$core$IFn$_invoke$arity$5 ? target_fn.cljs$core$IFn$_invoke$arity$5(G__31001,G__31002,G__31003,G__31004,G__31005) : target_fn.call(null,G__31001,G__31002,G__31003,G__31004,G__31005));
});
var G__31816__7 = (function (self__,a,b,c,d,e,f){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__31006 = a;
var G__31007 = b;
var G__31008 = c;
var G__31009 = d;
var G__31010 = e;
var G__31011 = f;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$6 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$6(G__31006,G__31007,G__31008,G__31009,G__31010,G__31011) : self__.dispatch_fn.call(null,G__31006,G__31007,G__31008,G__31009,G__31010,G__31011));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__31012 = a;
var G__31013 = b;
var G__31014 = c;
var G__31015 = d;
var G__31016 = e;
var G__31017 = f;
return (target_fn.cljs$core$IFn$_invoke$arity$6 ? target_fn.cljs$core$IFn$_invoke$arity$6(G__31012,G__31013,G__31014,G__31015,G__31016,G__31017) : target_fn.call(null,G__31012,G__31013,G__31014,G__31015,G__31016,G__31017));
});
var G__31816__8 = (function (self__,a,b,c,d,e,f,g){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__31018 = a;
var G__31019 = b;
var G__31020 = c;
var G__31021 = d;
var G__31022 = e;
var G__31023 = f;
var G__31024 = g;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$7 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$7(G__31018,G__31019,G__31020,G__31021,G__31022,G__31023,G__31024) : self__.dispatch_fn.call(null,G__31018,G__31019,G__31020,G__31021,G__31022,G__31023,G__31024));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__31025 = a;
var G__31026 = b;
var G__31027 = c;
var G__31028 = d;
var G__31029 = e;
var G__31030 = f;
var G__31031 = g;
return (target_fn.cljs$core$IFn$_invoke$arity$7 ? target_fn.cljs$core$IFn$_invoke$arity$7(G__31025,G__31026,G__31027,G__31028,G__31029,G__31030,G__31031) : target_fn.call(null,G__31025,G__31026,G__31027,G__31028,G__31029,G__31030,G__31031));
});
var G__31816__9 = (function (self__,a,b,c,d,e,f,g,h){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__31032 = a;
var G__31033 = b;
var G__31034 = c;
var G__31035 = d;
var G__31036 = e;
var G__31037 = f;
var G__31038 = g;
var G__31039 = h;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$8 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$8(G__31032,G__31033,G__31034,G__31035,G__31036,G__31037,G__31038,G__31039) : self__.dispatch_fn.call(null,G__31032,G__31033,G__31034,G__31035,G__31036,G__31037,G__31038,G__31039));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__31040 = a;
var G__31041 = b;
var G__31042 = c;
var G__31043 = d;
var G__31044 = e;
var G__31045 = f;
var G__31046 = g;
var G__31047 = h;
return (target_fn.cljs$core$IFn$_invoke$arity$8 ? target_fn.cljs$core$IFn$_invoke$arity$8(G__31040,G__31041,G__31042,G__31043,G__31044,G__31045,G__31046,G__31047) : target_fn.call(null,G__31040,G__31041,G__31042,G__31043,G__31044,G__31045,G__31046,G__31047));
});
var G__31816__10 = (function (self__,a,b,c,d,e,f,g,h,i){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__31048 = a;
var G__31049 = b;
var G__31050 = c;
var G__31051 = d;
var G__31052 = e;
var G__31053 = f;
var G__31054 = g;
var G__31055 = h;
var G__31056 = i;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$9 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$9(G__31048,G__31049,G__31050,G__31051,G__31052,G__31053,G__31054,G__31055,G__31056) : self__.dispatch_fn.call(null,G__31048,G__31049,G__31050,G__31051,G__31052,G__31053,G__31054,G__31055,G__31056));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__31057 = a;
var G__31058 = b;
var G__31059 = c;
var G__31060 = d;
var G__31061 = e;
var G__31062 = f;
var G__31063 = g;
var G__31064 = h;
var G__31065 = i;
return (target_fn.cljs$core$IFn$_invoke$arity$9 ? target_fn.cljs$core$IFn$_invoke$arity$9(G__31057,G__31058,G__31059,G__31060,G__31061,G__31062,G__31063,G__31064,G__31065) : target_fn.call(null,G__31057,G__31058,G__31059,G__31060,G__31061,G__31062,G__31063,G__31064,G__31065));
});
var G__31816__11 = (function (self__,a,b,c,d,e,f,g,h,i,j){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__31066 = a;
var G__31067 = b;
var G__31068 = c;
var G__31069 = d;
var G__31070 = e;
var G__31071 = f;
var G__31072 = g;
var G__31073 = h;
var G__31074 = i;
var G__31075 = j;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$10 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$10(G__31066,G__31067,G__31068,G__31069,G__31070,G__31071,G__31072,G__31073,G__31074,G__31075) : self__.dispatch_fn.call(null,G__31066,G__31067,G__31068,G__31069,G__31070,G__31071,G__31072,G__31073,G__31074,G__31075));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__31076 = a;
var G__31077 = b;
var G__31078 = c;
var G__31079 = d;
var G__31080 = e;
var G__31081 = f;
var G__31082 = g;
var G__31083 = h;
var G__31084 = i;
var G__31085 = j;
return (target_fn.cljs$core$IFn$_invoke$arity$10 ? target_fn.cljs$core$IFn$_invoke$arity$10(G__31076,G__31077,G__31078,G__31079,G__31080,G__31081,G__31082,G__31083,G__31084,G__31085) : target_fn.call(null,G__31076,G__31077,G__31078,G__31079,G__31080,G__31081,G__31082,G__31083,G__31084,G__31085));
});
var G__31816__12 = (function (self__,a,b,c,d,e,f,g,h,i,j,k){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__31086 = a;
var G__31087 = b;
var G__31088 = c;
var G__31089 = d;
var G__31090 = e;
var G__31091 = f;
var G__31092 = g;
var G__31093 = h;
var G__31094 = i;
var G__31095 = j;
var G__31096 = k;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$11 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$11(G__31086,G__31087,G__31088,G__31089,G__31090,G__31091,G__31092,G__31093,G__31094,G__31095,G__31096) : self__.dispatch_fn.call(null,G__31086,G__31087,G__31088,G__31089,G__31090,G__31091,G__31092,G__31093,G__31094,G__31095,G__31096));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__31097 = a;
var G__31098 = b;
var G__31099 = c;
var G__31100 = d;
var G__31101 = e;
var G__31102 = f;
var G__31103 = g;
var G__31104 = h;
var G__31105 = i;
var G__31106 = j;
var G__31107 = k;
return (target_fn.cljs$core$IFn$_invoke$arity$11 ? target_fn.cljs$core$IFn$_invoke$arity$11(G__31097,G__31098,G__31099,G__31100,G__31101,G__31102,G__31103,G__31104,G__31105,G__31106,G__31107) : target_fn.call(null,G__31097,G__31098,G__31099,G__31100,G__31101,G__31102,G__31103,G__31104,G__31105,G__31106,G__31107));
});
var G__31816__13 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__31108 = a;
var G__31109 = b;
var G__31110 = c;
var G__31111 = d;
var G__31112 = e;
var G__31113 = f;
var G__31114 = g;
var G__31115 = h;
var G__31116 = i;
var G__31117 = j;
var G__31118 = k;
var G__31119 = l;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$12 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$12(G__31108,G__31109,G__31110,G__31111,G__31112,G__31113,G__31114,G__31115,G__31116,G__31117,G__31118,G__31119) : self__.dispatch_fn.call(null,G__31108,G__31109,G__31110,G__31111,G__31112,G__31113,G__31114,G__31115,G__31116,G__31117,G__31118,G__31119));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__31120 = a;
var G__31121 = b;
var G__31122 = c;
var G__31123 = d;
var G__31124 = e;
var G__31125 = f;
var G__31126 = g;
var G__31127 = h;
var G__31128 = i;
var G__31129 = j;
var G__31130 = k;
var G__31131 = l;
return (target_fn.cljs$core$IFn$_invoke$arity$12 ? target_fn.cljs$core$IFn$_invoke$arity$12(G__31120,G__31121,G__31122,G__31123,G__31124,G__31125,G__31126,G__31127,G__31128,G__31129,G__31130,G__31131) : target_fn.call(null,G__31120,G__31121,G__31122,G__31123,G__31124,G__31125,G__31126,G__31127,G__31128,G__31129,G__31130,G__31131));
});
var G__31816__14 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__31132 = a;
var G__31133 = b;
var G__31134 = c;
var G__31135 = d;
var G__31136 = e;
var G__31137 = f;
var G__31138 = g;
var G__31139 = h;
var G__31140 = i;
var G__31141 = j;
var G__31142 = k;
var G__31143 = l;
var G__31144 = m;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$13 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$13(G__31132,G__31133,G__31134,G__31135,G__31136,G__31137,G__31138,G__31139,G__31140,G__31141,G__31142,G__31143,G__31144) : self__.dispatch_fn.call(null,G__31132,G__31133,G__31134,G__31135,G__31136,G__31137,G__31138,G__31139,G__31140,G__31141,G__31142,G__31143,G__31144));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__31145 = a;
var G__31146 = b;
var G__31147 = c;
var G__31148 = d;
var G__31149 = e;
var G__31150 = f;
var G__31151 = g;
var G__31152 = h;
var G__31153 = i;
var G__31154 = j;
var G__31155 = k;
var G__31156 = l;
var G__31157 = m;
return (target_fn.cljs$core$IFn$_invoke$arity$13 ? target_fn.cljs$core$IFn$_invoke$arity$13(G__31145,G__31146,G__31147,G__31148,G__31149,G__31150,G__31151,G__31152,G__31153,G__31154,G__31155,G__31156,G__31157) : target_fn.call(null,G__31145,G__31146,G__31147,G__31148,G__31149,G__31150,G__31151,G__31152,G__31153,G__31154,G__31155,G__31156,G__31157));
});
var G__31816__15 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__31158 = a;
var G__31159 = b;
var G__31160 = c;
var G__31161 = d;
var G__31162 = e;
var G__31163 = f;
var G__31164 = g;
var G__31165 = h;
var G__31166 = i;
var G__31167 = j;
var G__31168 = k;
var G__31169 = l;
var G__31170 = m;
var G__31171 = n;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$14 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$14(G__31158,G__31159,G__31160,G__31161,G__31162,G__31163,G__31164,G__31165,G__31166,G__31167,G__31168,G__31169,G__31170,G__31171) : self__.dispatch_fn.call(null,G__31158,G__31159,G__31160,G__31161,G__31162,G__31163,G__31164,G__31165,G__31166,G__31167,G__31168,G__31169,G__31170,G__31171));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__31172 = a;
var G__31173 = b;
var G__31174 = c;
var G__31175 = d;
var G__31176 = e;
var G__31177 = f;
var G__31178 = g;
var G__31179 = h;
var G__31180 = i;
var G__31181 = j;
var G__31182 = k;
var G__31183 = l;
var G__31184 = m;
var G__31185 = n;
return (target_fn.cljs$core$IFn$_invoke$arity$14 ? target_fn.cljs$core$IFn$_invoke$arity$14(G__31172,G__31173,G__31174,G__31175,G__31176,G__31177,G__31178,G__31179,G__31180,G__31181,G__31182,G__31183,G__31184,G__31185) : target_fn.call(null,G__31172,G__31173,G__31174,G__31175,G__31176,G__31177,G__31178,G__31179,G__31180,G__31181,G__31182,G__31183,G__31184,G__31185));
});
var G__31816__16 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__31186 = a;
var G__31187 = b;
var G__31188 = c;
var G__31189 = d;
var G__31190 = e;
var G__31191 = f;
var G__31192 = g;
var G__31193 = h;
var G__31194 = i;
var G__31195 = j;
var G__31196 = k;
var G__31197 = l;
var G__31198 = m;
var G__31199 = n;
var G__31200 = o;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$15 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$15(G__31186,G__31187,G__31188,G__31189,G__31190,G__31191,G__31192,G__31193,G__31194,G__31195,G__31196,G__31197,G__31198,G__31199,G__31200) : self__.dispatch_fn.call(null,G__31186,G__31187,G__31188,G__31189,G__31190,G__31191,G__31192,G__31193,G__31194,G__31195,G__31196,G__31197,G__31198,G__31199,G__31200));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__31201 = a;
var G__31202 = b;
var G__31203 = c;
var G__31204 = d;
var G__31205 = e;
var G__31206 = f;
var G__31207 = g;
var G__31208 = h;
var G__31209 = i;
var G__31210 = j;
var G__31211 = k;
var G__31212 = l;
var G__31213 = m;
var G__31214 = n;
var G__31215 = o;
return (target_fn.cljs$core$IFn$_invoke$arity$15 ? target_fn.cljs$core$IFn$_invoke$arity$15(G__31201,G__31202,G__31203,G__31204,G__31205,G__31206,G__31207,G__31208,G__31209,G__31210,G__31211,G__31212,G__31213,G__31214,G__31215) : target_fn.call(null,G__31201,G__31202,G__31203,G__31204,G__31205,G__31206,G__31207,G__31208,G__31209,G__31210,G__31211,G__31212,G__31213,G__31214,G__31215));
});
var G__31816__17 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__31216 = a;
var G__31217 = b;
var G__31218 = c;
var G__31219 = d;
var G__31220 = e;
var G__31221 = f;
var G__31222 = g;
var G__31223 = h;
var G__31224 = i;
var G__31225 = j;
var G__31226 = k;
var G__31227 = l;
var G__31228 = m;
var G__31229 = n;
var G__31230 = o;
var G__31231 = p;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$16 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$16(G__31216,G__31217,G__31218,G__31219,G__31220,G__31221,G__31222,G__31223,G__31224,G__31225,G__31226,G__31227,G__31228,G__31229,G__31230,G__31231) : self__.dispatch_fn.call(null,G__31216,G__31217,G__31218,G__31219,G__31220,G__31221,G__31222,G__31223,G__31224,G__31225,G__31226,G__31227,G__31228,G__31229,G__31230,G__31231));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__31232 = a;
var G__31233 = b;
var G__31234 = c;
var G__31235 = d;
var G__31236 = e;
var G__31237 = f;
var G__31238 = g;
var G__31239 = h;
var G__31240 = i;
var G__31241 = j;
var G__31242 = k;
var G__31243 = l;
var G__31244 = m;
var G__31245 = n;
var G__31246 = o;
var G__31247 = p;
return (target_fn.cljs$core$IFn$_invoke$arity$16 ? target_fn.cljs$core$IFn$_invoke$arity$16(G__31232,G__31233,G__31234,G__31235,G__31236,G__31237,G__31238,G__31239,G__31240,G__31241,G__31242,G__31243,G__31244,G__31245,G__31246,G__31247) : target_fn.call(null,G__31232,G__31233,G__31234,G__31235,G__31236,G__31237,G__31238,G__31239,G__31240,G__31241,G__31242,G__31243,G__31244,G__31245,G__31246,G__31247));
});
var G__31816__18 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__31248 = a;
var G__31249 = b;
var G__31250 = c;
var G__31251 = d;
var G__31252 = e;
var G__31253 = f;
var G__31254 = g;
var G__31255 = h;
var G__31256 = i;
var G__31257 = j;
var G__31258 = k;
var G__31259 = l;
var G__31260 = m;
var G__31261 = n;
var G__31262 = o;
var G__31263 = p;
var G__31264 = q;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$17 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$17(G__31248,G__31249,G__31250,G__31251,G__31252,G__31253,G__31254,G__31255,G__31256,G__31257,G__31258,G__31259,G__31260,G__31261,G__31262,G__31263,G__31264) : self__.dispatch_fn.call(null,G__31248,G__31249,G__31250,G__31251,G__31252,G__31253,G__31254,G__31255,G__31256,G__31257,G__31258,G__31259,G__31260,G__31261,G__31262,G__31263,G__31264));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__31265 = a;
var G__31266 = b;
var G__31267 = c;
var G__31268 = d;
var G__31269 = e;
var G__31270 = f;
var G__31271 = g;
var G__31272 = h;
var G__31273 = i;
var G__31274 = j;
var G__31275 = k;
var G__31276 = l;
var G__31277 = m;
var G__31278 = n;
var G__31279 = o;
var G__31280 = p;
var G__31281 = q;
return (target_fn.cljs$core$IFn$_invoke$arity$17 ? target_fn.cljs$core$IFn$_invoke$arity$17(G__31265,G__31266,G__31267,G__31268,G__31269,G__31270,G__31271,G__31272,G__31273,G__31274,G__31275,G__31276,G__31277,G__31278,G__31279,G__31280,G__31281) : target_fn.call(null,G__31265,G__31266,G__31267,G__31268,G__31269,G__31270,G__31271,G__31272,G__31273,G__31274,G__31275,G__31276,G__31277,G__31278,G__31279,G__31280,G__31281));
});
var G__31816__19 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__31282 = a;
var G__31283 = b;
var G__31284 = c;
var G__31285 = d;
var G__31286 = e;
var G__31287 = f;
var G__31288 = g;
var G__31289 = h;
var G__31290 = i;
var G__31291 = j;
var G__31292 = k;
var G__31293 = l;
var G__31294 = m;
var G__31295 = n;
var G__31296 = o;
var G__31297 = p;
var G__31298 = q;
var G__31299 = r;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$18 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$18(G__31282,G__31283,G__31284,G__31285,G__31286,G__31287,G__31288,G__31289,G__31290,G__31291,G__31292,G__31293,G__31294,G__31295,G__31296,G__31297,G__31298,G__31299) : self__.dispatch_fn.call(null,G__31282,G__31283,G__31284,G__31285,G__31286,G__31287,G__31288,G__31289,G__31290,G__31291,G__31292,G__31293,G__31294,G__31295,G__31296,G__31297,G__31298,G__31299));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__31300 = a;
var G__31301 = b;
var G__31302 = c;
var G__31303 = d;
var G__31304 = e;
var G__31305 = f;
var G__31306 = g;
var G__31307 = h;
var G__31308 = i;
var G__31309 = j;
var G__31310 = k;
var G__31311 = l;
var G__31312 = m;
var G__31313 = n;
var G__31314 = o;
var G__31315 = p;
var G__31316 = q;
var G__31317 = r;
return (target_fn.cljs$core$IFn$_invoke$arity$18 ? target_fn.cljs$core$IFn$_invoke$arity$18(G__31300,G__31301,G__31302,G__31303,G__31304,G__31305,G__31306,G__31307,G__31308,G__31309,G__31310,G__31311,G__31312,G__31313,G__31314,G__31315,G__31316,G__31317) : target_fn.call(null,G__31300,G__31301,G__31302,G__31303,G__31304,G__31305,G__31306,G__31307,G__31308,G__31309,G__31310,G__31311,G__31312,G__31313,G__31314,G__31315,G__31316,G__31317));
});
var G__31816__20 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__31318 = a;
var G__31319 = b;
var G__31320 = c;
var G__31321 = d;
var G__31322 = e;
var G__31323 = f;
var G__31324 = g;
var G__31325 = h;
var G__31326 = i;
var G__31327 = j;
var G__31328 = k;
var G__31329 = l;
var G__31330 = m;
var G__31331 = n;
var G__31332 = o;
var G__31333 = p;
var G__31334 = q;
var G__31335 = r;
var G__31336 = s;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$19 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$19(G__31318,G__31319,G__31320,G__31321,G__31322,G__31323,G__31324,G__31325,G__31326,G__31327,G__31328,G__31329,G__31330,G__31331,G__31332,G__31333,G__31334,G__31335,G__31336) : self__.dispatch_fn.call(null,G__31318,G__31319,G__31320,G__31321,G__31322,G__31323,G__31324,G__31325,G__31326,G__31327,G__31328,G__31329,G__31330,G__31331,G__31332,G__31333,G__31334,G__31335,G__31336));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__31337 = a;
var G__31338 = b;
var G__31339 = c;
var G__31340 = d;
var G__31341 = e;
var G__31342 = f;
var G__31343 = g;
var G__31344 = h;
var G__31345 = i;
var G__31346 = j;
var G__31347 = k;
var G__31348 = l;
var G__31349 = m;
var G__31350 = n;
var G__31351 = o;
var G__31352 = p;
var G__31353 = q;
var G__31354 = r;
var G__31355 = s;
return (target_fn.cljs$core$IFn$_invoke$arity$19 ? target_fn.cljs$core$IFn$_invoke$arity$19(G__31337,G__31338,G__31339,G__31340,G__31341,G__31342,G__31343,G__31344,G__31345,G__31346,G__31347,G__31348,G__31349,G__31350,G__31351,G__31352,G__31353,G__31354,G__31355) : target_fn.call(null,G__31337,G__31338,G__31339,G__31340,G__31341,G__31342,G__31343,G__31344,G__31345,G__31346,G__31347,G__31348,G__31349,G__31350,G__31351,G__31352,G__31353,G__31354,G__31355));
});
var G__31816__21 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__31356 = a;
var G__31357 = b;
var G__31358 = c;
var G__31359 = d;
var G__31360 = e;
var G__31361 = f;
var G__31362 = g;
var G__31363 = h;
var G__31364 = i;
var G__31365 = j;
var G__31366 = k;
var G__31367 = l;
var G__31368 = m;
var G__31369 = n;
var G__31370 = o;
var G__31371 = p;
var G__31372 = q;
var G__31373 = r;
var G__31374 = s;
var G__31375 = t;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$20 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$20(G__31356,G__31357,G__31358,G__31359,G__31360,G__31361,G__31362,G__31363,G__31364,G__31365,G__31366,G__31367,G__31368,G__31369,G__31370,G__31371,G__31372,G__31373,G__31374,G__31375) : self__.dispatch_fn.call(null,G__31356,G__31357,G__31358,G__31359,G__31360,G__31361,G__31362,G__31363,G__31364,G__31365,G__31366,G__31367,G__31368,G__31369,G__31370,G__31371,G__31372,G__31373,G__31374,G__31375));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__31376 = a;
var G__31377 = b;
var G__31378 = c;
var G__31379 = d;
var G__31380 = e;
var G__31381 = f;
var G__31382 = g;
var G__31383 = h;
var G__31384 = i;
var G__31385 = j;
var G__31386 = k;
var G__31387 = l;
var G__31388 = m;
var G__31389 = n;
var G__31390 = o;
var G__31391 = p;
var G__31392 = q;
var G__31393 = r;
var G__31394 = s;
var G__31395 = t;
return (target_fn.cljs$core$IFn$_invoke$arity$20 ? target_fn.cljs$core$IFn$_invoke$arity$20(G__31376,G__31377,G__31378,G__31379,G__31380,G__31381,G__31382,G__31383,G__31384,G__31385,G__31386,G__31387,G__31388,G__31389,G__31390,G__31391,G__31392,G__31393,G__31394,G__31395) : target_fn.call(null,G__31376,G__31377,G__31378,G__31379,G__31380,G__31381,G__31382,G__31383,G__31384,G__31385,G__31386,G__31387,G__31388,G__31389,G__31390,G__31391,G__31392,G__31393,G__31394,G__31395));
});
var G__31816__22 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(self__.dispatch_fn,a,b,c,d,cljs.core.array_seq([e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest], 0));
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(target_fn,a,b,c,d,cljs.core.array_seq([e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest], 0));
});
G__31816 = function(self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
switch(arguments.length){
case 1:
return G__31816__1.call(this,self__);
case 2:
return G__31816__2.call(this,self__,a);
case 3:
return G__31816__3.call(this,self__,a,b);
case 4:
return G__31816__4.call(this,self__,a,b,c);
case 5:
return G__31816__5.call(this,self__,a,b,c,d);
case 6:
return G__31816__6.call(this,self__,a,b,c,d,e);
case 7:
return G__31816__7.call(this,self__,a,b,c,d,e,f);
case 8:
return G__31816__8.call(this,self__,a,b,c,d,e,f,g);
case 9:
return G__31816__9.call(this,self__,a,b,c,d,e,f,g,h);
case 10:
return G__31816__10.call(this,self__,a,b,c,d,e,f,g,h,i);
case 11:
return G__31816__11.call(this,self__,a,b,c,d,e,f,g,h,i,j);
case 12:
return G__31816__12.call(this,self__,a,b,c,d,e,f,g,h,i,j,k);
case 13:
return G__31816__13.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l);
case 14:
return G__31816__14.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m);
case 15:
return G__31816__15.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
case 16:
return G__31816__16.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
case 17:
return G__31816__17.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
case 18:
return G__31816__18.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
case 19:
return G__31816__19.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
case 20:
return G__31816__20.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
case 21:
return G__31816__21.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
case 22:
return G__31816__22.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__31816.cljs$core$IFn$_invoke$arity$1 = G__31816__1;
G__31816.cljs$core$IFn$_invoke$arity$2 = G__31816__2;
G__31816.cljs$core$IFn$_invoke$arity$3 = G__31816__3;
G__31816.cljs$core$IFn$_invoke$arity$4 = G__31816__4;
G__31816.cljs$core$IFn$_invoke$arity$5 = G__31816__5;
G__31816.cljs$core$IFn$_invoke$arity$6 = G__31816__6;
G__31816.cljs$core$IFn$_invoke$arity$7 = G__31816__7;
G__31816.cljs$core$IFn$_invoke$arity$8 = G__31816__8;
G__31816.cljs$core$IFn$_invoke$arity$9 = G__31816__9;
G__31816.cljs$core$IFn$_invoke$arity$10 = G__31816__10;
G__31816.cljs$core$IFn$_invoke$arity$11 = G__31816__11;
G__31816.cljs$core$IFn$_invoke$arity$12 = G__31816__12;
G__31816.cljs$core$IFn$_invoke$arity$13 = G__31816__13;
G__31816.cljs$core$IFn$_invoke$arity$14 = G__31816__14;
G__31816.cljs$core$IFn$_invoke$arity$15 = G__31816__15;
G__31816.cljs$core$IFn$_invoke$arity$16 = G__31816__16;
G__31816.cljs$core$IFn$_invoke$arity$17 = G__31816__17;
G__31816.cljs$core$IFn$_invoke$arity$18 = G__31816__18;
G__31816.cljs$core$IFn$_invoke$arity$19 = G__31816__19;
G__31816.cljs$core$IFn$_invoke$arity$20 = G__31816__20;
G__31816.cljs$core$IFn$_invoke$arity$21 = G__31816__21;
G__31816.cljs$core$IFn$_invoke$arity$22 = G__31816__22;
return G__31816;
})()
;

cljs.core.MultiFn.prototype.apply = (function (self__,args30968){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args30968)));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$0 = (function (){
var self__ = this;
var mf = this;
var dispatch_val = (function (){return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$0 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$0() : self__.dispatch_fn.call(null));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

return (target_fn.cljs$core$IFn$_invoke$arity$0 ? target_fn.cljs$core$IFn$_invoke$arity$0() : target_fn.call(null));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$1 = (function (a){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__31396 = a;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$1 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$1(G__31396) : self__.dispatch_fn.call(null,G__31396));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__31397 = a;
return (target_fn.cljs$core$IFn$_invoke$arity$1 ? target_fn.cljs$core$IFn$_invoke$arity$1(G__31397) : target_fn.call(null,G__31397));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$2 = (function (a,b){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__31398 = a;
var G__31399 = b;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$2 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$2(G__31398,G__31399) : self__.dispatch_fn.call(null,G__31398,G__31399));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__31400 = a;
var G__31401 = b;
return (target_fn.cljs$core$IFn$_invoke$arity$2 ? target_fn.cljs$core$IFn$_invoke$arity$2(G__31400,G__31401) : target_fn.call(null,G__31400,G__31401));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$3 = (function (a,b,c){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__31402 = a;
var G__31403 = b;
var G__31404 = c;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$3 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$3(G__31402,G__31403,G__31404) : self__.dispatch_fn.call(null,G__31402,G__31403,G__31404));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__31405 = a;
var G__31406 = b;
var G__31407 = c;
return (target_fn.cljs$core$IFn$_invoke$arity$3 ? target_fn.cljs$core$IFn$_invoke$arity$3(G__31405,G__31406,G__31407) : target_fn.call(null,G__31405,G__31406,G__31407));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$4 = (function (a,b,c,d){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__31408 = a;
var G__31409 = b;
var G__31410 = c;
var G__31411 = d;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$4 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$4(G__31408,G__31409,G__31410,G__31411) : self__.dispatch_fn.call(null,G__31408,G__31409,G__31410,G__31411));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__31412 = a;
var G__31413 = b;
var G__31414 = c;
var G__31415 = d;
return (target_fn.cljs$core$IFn$_invoke$arity$4 ? target_fn.cljs$core$IFn$_invoke$arity$4(G__31412,G__31413,G__31414,G__31415) : target_fn.call(null,G__31412,G__31413,G__31414,G__31415));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$5 = (function (a,b,c,d,e){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__31416 = a;
var G__31417 = b;
var G__31418 = c;
var G__31419 = d;
var G__31420 = e;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$5 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$5(G__31416,G__31417,G__31418,G__31419,G__31420) : self__.dispatch_fn.call(null,G__31416,G__31417,G__31418,G__31419,G__31420));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__31421 = a;
var G__31422 = b;
var G__31423 = c;
var G__31424 = d;
var G__31425 = e;
return (target_fn.cljs$core$IFn$_invoke$arity$5 ? target_fn.cljs$core$IFn$_invoke$arity$5(G__31421,G__31422,G__31423,G__31424,G__31425) : target_fn.call(null,G__31421,G__31422,G__31423,G__31424,G__31425));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$6 = (function (a,b,c,d,e,f){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__31426 = a;
var G__31427 = b;
var G__31428 = c;
var G__31429 = d;
var G__31430 = e;
var G__31431 = f;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$6 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$6(G__31426,G__31427,G__31428,G__31429,G__31430,G__31431) : self__.dispatch_fn.call(null,G__31426,G__31427,G__31428,G__31429,G__31430,G__31431));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__31432 = a;
var G__31433 = b;
var G__31434 = c;
var G__31435 = d;
var G__31436 = e;
var G__31437 = f;
return (target_fn.cljs$core$IFn$_invoke$arity$6 ? target_fn.cljs$core$IFn$_invoke$arity$6(G__31432,G__31433,G__31434,G__31435,G__31436,G__31437) : target_fn.call(null,G__31432,G__31433,G__31434,G__31435,G__31436,G__31437));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$7 = (function (a,b,c,d,e,f,g){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__31438 = a;
var G__31439 = b;
var G__31440 = c;
var G__31441 = d;
var G__31442 = e;
var G__31443 = f;
var G__31444 = g;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$7 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$7(G__31438,G__31439,G__31440,G__31441,G__31442,G__31443,G__31444) : self__.dispatch_fn.call(null,G__31438,G__31439,G__31440,G__31441,G__31442,G__31443,G__31444));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__31445 = a;
var G__31446 = b;
var G__31447 = c;
var G__31448 = d;
var G__31449 = e;
var G__31450 = f;
var G__31451 = g;
return (target_fn.cljs$core$IFn$_invoke$arity$7 ? target_fn.cljs$core$IFn$_invoke$arity$7(G__31445,G__31446,G__31447,G__31448,G__31449,G__31450,G__31451) : target_fn.call(null,G__31445,G__31446,G__31447,G__31448,G__31449,G__31450,G__31451));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$8 = (function (a,b,c,d,e,f,g,h){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__31452 = a;
var G__31453 = b;
var G__31454 = c;
var G__31455 = d;
var G__31456 = e;
var G__31457 = f;
var G__31458 = g;
var G__31459 = h;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$8 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$8(G__31452,G__31453,G__31454,G__31455,G__31456,G__31457,G__31458,G__31459) : self__.dispatch_fn.call(null,G__31452,G__31453,G__31454,G__31455,G__31456,G__31457,G__31458,G__31459));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__31460 = a;
var G__31461 = b;
var G__31462 = c;
var G__31463 = d;
var G__31464 = e;
var G__31465 = f;
var G__31466 = g;
var G__31467 = h;
return (target_fn.cljs$core$IFn$_invoke$arity$8 ? target_fn.cljs$core$IFn$_invoke$arity$8(G__31460,G__31461,G__31462,G__31463,G__31464,G__31465,G__31466,G__31467) : target_fn.call(null,G__31460,G__31461,G__31462,G__31463,G__31464,G__31465,G__31466,G__31467));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$9 = (function (a,b,c,d,e,f,g,h,i){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__31468 = a;
var G__31469 = b;
var G__31470 = c;
var G__31471 = d;
var G__31472 = e;
var G__31473 = f;
var G__31474 = g;
var G__31475 = h;
var G__31476 = i;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$9 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$9(G__31468,G__31469,G__31470,G__31471,G__31472,G__31473,G__31474,G__31475,G__31476) : self__.dispatch_fn.call(null,G__31468,G__31469,G__31470,G__31471,G__31472,G__31473,G__31474,G__31475,G__31476));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__31477 = a;
var G__31478 = b;
var G__31479 = c;
var G__31480 = d;
var G__31481 = e;
var G__31482 = f;
var G__31483 = g;
var G__31484 = h;
var G__31485 = i;
return (target_fn.cljs$core$IFn$_invoke$arity$9 ? target_fn.cljs$core$IFn$_invoke$arity$9(G__31477,G__31478,G__31479,G__31480,G__31481,G__31482,G__31483,G__31484,G__31485) : target_fn.call(null,G__31477,G__31478,G__31479,G__31480,G__31481,G__31482,G__31483,G__31484,G__31485));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$10 = (function (a,b,c,d,e,f,g,h,i,j){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__31486 = a;
var G__31487 = b;
var G__31488 = c;
var G__31489 = d;
var G__31490 = e;
var G__31491 = f;
var G__31492 = g;
var G__31493 = h;
var G__31494 = i;
var G__31495 = j;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$10 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$10(G__31486,G__31487,G__31488,G__31489,G__31490,G__31491,G__31492,G__31493,G__31494,G__31495) : self__.dispatch_fn.call(null,G__31486,G__31487,G__31488,G__31489,G__31490,G__31491,G__31492,G__31493,G__31494,G__31495));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__31496 = a;
var G__31497 = b;
var G__31498 = c;
var G__31499 = d;
var G__31500 = e;
var G__31501 = f;
var G__31502 = g;
var G__31503 = h;
var G__31504 = i;
var G__31505 = j;
return (target_fn.cljs$core$IFn$_invoke$arity$10 ? target_fn.cljs$core$IFn$_invoke$arity$10(G__31496,G__31497,G__31498,G__31499,G__31500,G__31501,G__31502,G__31503,G__31504,G__31505) : target_fn.call(null,G__31496,G__31497,G__31498,G__31499,G__31500,G__31501,G__31502,G__31503,G__31504,G__31505));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$11 = (function (a,b,c,d,e,f,g,h,i,j,k){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__31506 = a;
var G__31507 = b;
var G__31508 = c;
var G__31509 = d;
var G__31510 = e;
var G__31511 = f;
var G__31512 = g;
var G__31513 = h;
var G__31514 = i;
var G__31515 = j;
var G__31516 = k;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$11 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$11(G__31506,G__31507,G__31508,G__31509,G__31510,G__31511,G__31512,G__31513,G__31514,G__31515,G__31516) : self__.dispatch_fn.call(null,G__31506,G__31507,G__31508,G__31509,G__31510,G__31511,G__31512,G__31513,G__31514,G__31515,G__31516));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__31517 = a;
var G__31518 = b;
var G__31519 = c;
var G__31520 = d;
var G__31521 = e;
var G__31522 = f;
var G__31523 = g;
var G__31524 = h;
var G__31525 = i;
var G__31526 = j;
var G__31527 = k;
return (target_fn.cljs$core$IFn$_invoke$arity$11 ? target_fn.cljs$core$IFn$_invoke$arity$11(G__31517,G__31518,G__31519,G__31520,G__31521,G__31522,G__31523,G__31524,G__31525,G__31526,G__31527) : target_fn.call(null,G__31517,G__31518,G__31519,G__31520,G__31521,G__31522,G__31523,G__31524,G__31525,G__31526,G__31527));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$12 = (function (a,b,c,d,e,f,g,h,i,j,k,l){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__31528 = a;
var G__31529 = b;
var G__31530 = c;
var G__31531 = d;
var G__31532 = e;
var G__31533 = f;
var G__31534 = g;
var G__31535 = h;
var G__31536 = i;
var G__31537 = j;
var G__31538 = k;
var G__31539 = l;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$12 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$12(G__31528,G__31529,G__31530,G__31531,G__31532,G__31533,G__31534,G__31535,G__31536,G__31537,G__31538,G__31539) : self__.dispatch_fn.call(null,G__31528,G__31529,G__31530,G__31531,G__31532,G__31533,G__31534,G__31535,G__31536,G__31537,G__31538,G__31539));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__31540 = a;
var G__31541 = b;
var G__31542 = c;
var G__31543 = d;
var G__31544 = e;
var G__31545 = f;
var G__31546 = g;
var G__31547 = h;
var G__31548 = i;
var G__31549 = j;
var G__31550 = k;
var G__31551 = l;
return (target_fn.cljs$core$IFn$_invoke$arity$12 ? target_fn.cljs$core$IFn$_invoke$arity$12(G__31540,G__31541,G__31542,G__31543,G__31544,G__31545,G__31546,G__31547,G__31548,G__31549,G__31550,G__31551) : target_fn.call(null,G__31540,G__31541,G__31542,G__31543,G__31544,G__31545,G__31546,G__31547,G__31548,G__31549,G__31550,G__31551));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$13 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__31552 = a;
var G__31553 = b;
var G__31554 = c;
var G__31555 = d;
var G__31556 = e;
var G__31557 = f;
var G__31558 = g;
var G__31559 = h;
var G__31560 = i;
var G__31561 = j;
var G__31562 = k;
var G__31563 = l;
var G__31564 = m;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$13 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$13(G__31552,G__31553,G__31554,G__31555,G__31556,G__31557,G__31558,G__31559,G__31560,G__31561,G__31562,G__31563,G__31564) : self__.dispatch_fn.call(null,G__31552,G__31553,G__31554,G__31555,G__31556,G__31557,G__31558,G__31559,G__31560,G__31561,G__31562,G__31563,G__31564));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__31565 = a;
var G__31566 = b;
var G__31567 = c;
var G__31568 = d;
var G__31569 = e;
var G__31570 = f;
var G__31571 = g;
var G__31572 = h;
var G__31573 = i;
var G__31574 = j;
var G__31575 = k;
var G__31576 = l;
var G__31577 = m;
return (target_fn.cljs$core$IFn$_invoke$arity$13 ? target_fn.cljs$core$IFn$_invoke$arity$13(G__31565,G__31566,G__31567,G__31568,G__31569,G__31570,G__31571,G__31572,G__31573,G__31574,G__31575,G__31576,G__31577) : target_fn.call(null,G__31565,G__31566,G__31567,G__31568,G__31569,G__31570,G__31571,G__31572,G__31573,G__31574,G__31575,G__31576,G__31577));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$14 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__31578 = a;
var G__31579 = b;
var G__31580 = c;
var G__31581 = d;
var G__31582 = e;
var G__31583 = f;
var G__31584 = g;
var G__31585 = h;
var G__31586 = i;
var G__31587 = j;
var G__31588 = k;
var G__31589 = l;
var G__31590 = m;
var G__31591 = n;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$14 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$14(G__31578,G__31579,G__31580,G__31581,G__31582,G__31583,G__31584,G__31585,G__31586,G__31587,G__31588,G__31589,G__31590,G__31591) : self__.dispatch_fn.call(null,G__31578,G__31579,G__31580,G__31581,G__31582,G__31583,G__31584,G__31585,G__31586,G__31587,G__31588,G__31589,G__31590,G__31591));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__31592 = a;
var G__31593 = b;
var G__31594 = c;
var G__31595 = d;
var G__31596 = e;
var G__31597 = f;
var G__31598 = g;
var G__31599 = h;
var G__31600 = i;
var G__31601 = j;
var G__31602 = k;
var G__31603 = l;
var G__31604 = m;
var G__31605 = n;
return (target_fn.cljs$core$IFn$_invoke$arity$14 ? target_fn.cljs$core$IFn$_invoke$arity$14(G__31592,G__31593,G__31594,G__31595,G__31596,G__31597,G__31598,G__31599,G__31600,G__31601,G__31602,G__31603,G__31604,G__31605) : target_fn.call(null,G__31592,G__31593,G__31594,G__31595,G__31596,G__31597,G__31598,G__31599,G__31600,G__31601,G__31602,G__31603,G__31604,G__31605));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$15 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__31606 = a;
var G__31607 = b;
var G__31608 = c;
var G__31609 = d;
var G__31610 = e;
var G__31611 = f;
var G__31612 = g;
var G__31613 = h;
var G__31614 = i;
var G__31615 = j;
var G__31616 = k;
var G__31617 = l;
var G__31618 = m;
var G__31619 = n;
var G__31620 = o;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$15 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$15(G__31606,G__31607,G__31608,G__31609,G__31610,G__31611,G__31612,G__31613,G__31614,G__31615,G__31616,G__31617,G__31618,G__31619,G__31620) : self__.dispatch_fn.call(null,G__31606,G__31607,G__31608,G__31609,G__31610,G__31611,G__31612,G__31613,G__31614,G__31615,G__31616,G__31617,G__31618,G__31619,G__31620));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__31621 = a;
var G__31622 = b;
var G__31623 = c;
var G__31624 = d;
var G__31625 = e;
var G__31626 = f;
var G__31627 = g;
var G__31628 = h;
var G__31629 = i;
var G__31630 = j;
var G__31631 = k;
var G__31632 = l;
var G__31633 = m;
var G__31634 = n;
var G__31635 = o;
return (target_fn.cljs$core$IFn$_invoke$arity$15 ? target_fn.cljs$core$IFn$_invoke$arity$15(G__31621,G__31622,G__31623,G__31624,G__31625,G__31626,G__31627,G__31628,G__31629,G__31630,G__31631,G__31632,G__31633,G__31634,G__31635) : target_fn.call(null,G__31621,G__31622,G__31623,G__31624,G__31625,G__31626,G__31627,G__31628,G__31629,G__31630,G__31631,G__31632,G__31633,G__31634,G__31635));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$16 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__31636 = a;
var G__31637 = b;
var G__31638 = c;
var G__31639 = d;
var G__31640 = e;
var G__31641 = f;
var G__31642 = g;
var G__31643 = h;
var G__31644 = i;
var G__31645 = j;
var G__31646 = k;
var G__31647 = l;
var G__31648 = m;
var G__31649 = n;
var G__31650 = o;
var G__31651 = p;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$16 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$16(G__31636,G__31637,G__31638,G__31639,G__31640,G__31641,G__31642,G__31643,G__31644,G__31645,G__31646,G__31647,G__31648,G__31649,G__31650,G__31651) : self__.dispatch_fn.call(null,G__31636,G__31637,G__31638,G__31639,G__31640,G__31641,G__31642,G__31643,G__31644,G__31645,G__31646,G__31647,G__31648,G__31649,G__31650,G__31651));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__31652 = a;
var G__31653 = b;
var G__31654 = c;
var G__31655 = d;
var G__31656 = e;
var G__31657 = f;
var G__31658 = g;
var G__31659 = h;
var G__31660 = i;
var G__31661 = j;
var G__31662 = k;
var G__31663 = l;
var G__31664 = m;
var G__31665 = n;
var G__31666 = o;
var G__31667 = p;
return (target_fn.cljs$core$IFn$_invoke$arity$16 ? target_fn.cljs$core$IFn$_invoke$arity$16(G__31652,G__31653,G__31654,G__31655,G__31656,G__31657,G__31658,G__31659,G__31660,G__31661,G__31662,G__31663,G__31664,G__31665,G__31666,G__31667) : target_fn.call(null,G__31652,G__31653,G__31654,G__31655,G__31656,G__31657,G__31658,G__31659,G__31660,G__31661,G__31662,G__31663,G__31664,G__31665,G__31666,G__31667));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$17 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__31668 = a;
var G__31669 = b;
var G__31670 = c;
var G__31671 = d;
var G__31672 = e;
var G__31673 = f;
var G__31674 = g;
var G__31675 = h;
var G__31676 = i;
var G__31677 = j;
var G__31678 = k;
var G__31679 = l;
var G__31680 = m;
var G__31681 = n;
var G__31682 = o;
var G__31683 = p;
var G__31684 = q;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$17 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$17(G__31668,G__31669,G__31670,G__31671,G__31672,G__31673,G__31674,G__31675,G__31676,G__31677,G__31678,G__31679,G__31680,G__31681,G__31682,G__31683,G__31684) : self__.dispatch_fn.call(null,G__31668,G__31669,G__31670,G__31671,G__31672,G__31673,G__31674,G__31675,G__31676,G__31677,G__31678,G__31679,G__31680,G__31681,G__31682,G__31683,G__31684));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__31685 = a;
var G__31686 = b;
var G__31687 = c;
var G__31688 = d;
var G__31689 = e;
var G__31690 = f;
var G__31691 = g;
var G__31692 = h;
var G__31693 = i;
var G__31694 = j;
var G__31695 = k;
var G__31696 = l;
var G__31697 = m;
var G__31698 = n;
var G__31699 = o;
var G__31700 = p;
var G__31701 = q;
return (target_fn.cljs$core$IFn$_invoke$arity$17 ? target_fn.cljs$core$IFn$_invoke$arity$17(G__31685,G__31686,G__31687,G__31688,G__31689,G__31690,G__31691,G__31692,G__31693,G__31694,G__31695,G__31696,G__31697,G__31698,G__31699,G__31700,G__31701) : target_fn.call(null,G__31685,G__31686,G__31687,G__31688,G__31689,G__31690,G__31691,G__31692,G__31693,G__31694,G__31695,G__31696,G__31697,G__31698,G__31699,G__31700,G__31701));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$18 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__31702 = a;
var G__31703 = b;
var G__31704 = c;
var G__31705 = d;
var G__31706 = e;
var G__31707 = f;
var G__31708 = g;
var G__31709 = h;
var G__31710 = i;
var G__31711 = j;
var G__31712 = k;
var G__31713 = l;
var G__31714 = m;
var G__31715 = n;
var G__31716 = o;
var G__31717 = p;
var G__31718 = q;
var G__31719 = r;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$18 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$18(G__31702,G__31703,G__31704,G__31705,G__31706,G__31707,G__31708,G__31709,G__31710,G__31711,G__31712,G__31713,G__31714,G__31715,G__31716,G__31717,G__31718,G__31719) : self__.dispatch_fn.call(null,G__31702,G__31703,G__31704,G__31705,G__31706,G__31707,G__31708,G__31709,G__31710,G__31711,G__31712,G__31713,G__31714,G__31715,G__31716,G__31717,G__31718,G__31719));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__31720 = a;
var G__31721 = b;
var G__31722 = c;
var G__31723 = d;
var G__31724 = e;
var G__31725 = f;
var G__31726 = g;
var G__31727 = h;
var G__31728 = i;
var G__31729 = j;
var G__31730 = k;
var G__31731 = l;
var G__31732 = m;
var G__31733 = n;
var G__31734 = o;
var G__31735 = p;
var G__31736 = q;
var G__31737 = r;
return (target_fn.cljs$core$IFn$_invoke$arity$18 ? target_fn.cljs$core$IFn$_invoke$arity$18(G__31720,G__31721,G__31722,G__31723,G__31724,G__31725,G__31726,G__31727,G__31728,G__31729,G__31730,G__31731,G__31732,G__31733,G__31734,G__31735,G__31736,G__31737) : target_fn.call(null,G__31720,G__31721,G__31722,G__31723,G__31724,G__31725,G__31726,G__31727,G__31728,G__31729,G__31730,G__31731,G__31732,G__31733,G__31734,G__31735,G__31736,G__31737));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$19 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__31738 = a;
var G__31739 = b;
var G__31740 = c;
var G__31741 = d;
var G__31742 = e;
var G__31743 = f;
var G__31744 = g;
var G__31745 = h;
var G__31746 = i;
var G__31747 = j;
var G__31748 = k;
var G__31749 = l;
var G__31750 = m;
var G__31751 = n;
var G__31752 = o;
var G__31753 = p;
var G__31754 = q;
var G__31755 = r;
var G__31756 = s;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$19 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$19(G__31738,G__31739,G__31740,G__31741,G__31742,G__31743,G__31744,G__31745,G__31746,G__31747,G__31748,G__31749,G__31750,G__31751,G__31752,G__31753,G__31754,G__31755,G__31756) : self__.dispatch_fn.call(null,G__31738,G__31739,G__31740,G__31741,G__31742,G__31743,G__31744,G__31745,G__31746,G__31747,G__31748,G__31749,G__31750,G__31751,G__31752,G__31753,G__31754,G__31755,G__31756));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__31757 = a;
var G__31758 = b;
var G__31759 = c;
var G__31760 = d;
var G__31761 = e;
var G__31762 = f;
var G__31763 = g;
var G__31764 = h;
var G__31765 = i;
var G__31766 = j;
var G__31767 = k;
var G__31768 = l;
var G__31769 = m;
var G__31770 = n;
var G__31771 = o;
var G__31772 = p;
var G__31773 = q;
var G__31774 = r;
var G__31775 = s;
return (target_fn.cljs$core$IFn$_invoke$arity$19 ? target_fn.cljs$core$IFn$_invoke$arity$19(G__31757,G__31758,G__31759,G__31760,G__31761,G__31762,G__31763,G__31764,G__31765,G__31766,G__31767,G__31768,G__31769,G__31770,G__31771,G__31772,G__31773,G__31774,G__31775) : target_fn.call(null,G__31757,G__31758,G__31759,G__31760,G__31761,G__31762,G__31763,G__31764,G__31765,G__31766,G__31767,G__31768,G__31769,G__31770,G__31771,G__31772,G__31773,G__31774,G__31775));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$20 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__31776 = a;
var G__31777 = b;
var G__31778 = c;
var G__31779 = d;
var G__31780 = e;
var G__31781 = f;
var G__31782 = g;
var G__31783 = h;
var G__31784 = i;
var G__31785 = j;
var G__31786 = k;
var G__31787 = l;
var G__31788 = m;
var G__31789 = n;
var G__31790 = o;
var G__31791 = p;
var G__31792 = q;
var G__31793 = r;
var G__31794 = s;
var G__31795 = t;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$20 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$20(G__31776,G__31777,G__31778,G__31779,G__31780,G__31781,G__31782,G__31783,G__31784,G__31785,G__31786,G__31787,G__31788,G__31789,G__31790,G__31791,G__31792,G__31793,G__31794,G__31795) : self__.dispatch_fn.call(null,G__31776,G__31777,G__31778,G__31779,G__31780,G__31781,G__31782,G__31783,G__31784,G__31785,G__31786,G__31787,G__31788,G__31789,G__31790,G__31791,G__31792,G__31793,G__31794,G__31795));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__31796 = a;
var G__31797 = b;
var G__31798 = c;
var G__31799 = d;
var G__31800 = e;
var G__31801 = f;
var G__31802 = g;
var G__31803 = h;
var G__31804 = i;
var G__31805 = j;
var G__31806 = k;
var G__31807 = l;
var G__31808 = m;
var G__31809 = n;
var G__31810 = o;
var G__31811 = p;
var G__31812 = q;
var G__31813 = r;
var G__31814 = s;
var G__31815 = t;
return (target_fn.cljs$core$IFn$_invoke$arity$20 ? target_fn.cljs$core$IFn$_invoke$arity$20(G__31796,G__31797,G__31798,G__31799,G__31800,G__31801,G__31802,G__31803,G__31804,G__31805,G__31806,G__31807,G__31808,G__31809,G__31810,G__31811,G__31812,G__31813,G__31814,G__31815) : target_fn.call(null,G__31796,G__31797,G__31798,G__31799,G__31800,G__31801,G__31802,G__31803,G__31804,G__31805,G__31806,G__31807,G__31808,G__31809,G__31810,G__31811,G__31812,G__31813,G__31814,G__31815));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$21 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
var self__ = this;
var mf = this;
var dispatch_val = cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(self__.dispatch_fn,a,b,c,d,cljs.core.array_seq([e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest], 0));
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(target_fn,a,b,c,d,cljs.core.array_seq([e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest], 0));
});

cljs.core.MultiFn.cljs$lang$type = true;

cljs.core.MultiFn.cljs$lang$ctorStr = "cljs.core/MultiFn";

cljs.core.MultiFn.cljs$lang$ctorPrWriter = (function (this__24859__auto__,writer__24860__auto__,opt__24861__auto__){
return cljs.core._write(writer__24860__auto__,"cljs.core/MultiFn");
});

cljs.core.__GT_MultiFn = (function __GT_MultiFn(name,dispatch_fn,default_dispatch_val,hierarchy,method_table,prefer_table,method_cache,cached_hierarchy){
return (new cljs.core.MultiFn(name,dispatch_fn,default_dispatch_val,hierarchy,method_table,prefer_table,method_cache,cached_hierarchy));
});

/**
* Removes all of the methods of multimethod.
*/
cljs.core.remove_all_methods = (function remove_all_methods(multifn){
return cljs.core._reset(multifn);
});
/**
* Removes the method of multimethod associated with dispatch-value.
*/
cljs.core.remove_method = (function remove_method(multifn,dispatch_val){
return cljs.core._remove_method(multifn,dispatch_val);
});
/**
* Causes the multimethod to prefer matches of dispatch-val-x over dispatch-val-y
* when there is a conflict
*/
cljs.core.prefer_method = (function prefer_method(multifn,dispatch_val_x,dispatch_val_y){
return cljs.core._prefer_method(multifn,dispatch_val_x,dispatch_val_y);
});
/**
* Given a multimethod, returns a map of dispatch values -> dispatch fns
*/
cljs.core.methods$ = (function methods$(multifn){
return cljs.core._methods(multifn);
});
/**
* Given a multimethod and a dispatch value, returns the dispatch fn
* that would apply to that value, or nil if none apply and no default
*/
cljs.core.get_method = (function get_method(multifn,dispatch_val){
return cljs.core._get_method(multifn,dispatch_val);
});
/**
* Given a multimethod, returns a map of preferred value -> set of other values
*/
cljs.core.prefers = (function prefers(multifn){
return cljs.core._prefers(multifn);
});

/**
* @constructor
*/
cljs.core.UUID = (function (uuid){
this.uuid = uuid;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 2153775104;
})
cljs.core.UUID.prototype.cljs$core$IHash$_hash$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
var G__31817 = cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([this$__$1], 0));
return goog.string.hashCode(G__31817);
});

cljs.core.UUID.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (_,writer,___$1){
var self__ = this;
var ___$2 = this;
return cljs.core._write(writer,[cljs.core.str("#uuid \""),cljs.core.str(self__.uuid),cljs.core.str("\"")].join(''));
});

cljs.core.UUID.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (_,other){
var self__ = this;
var ___$1 = this;
return ((other instanceof cljs.core.UUID)) && ((self__.uuid === other.uuid));
});

cljs.core.UUID.prototype.toString = (function (){
var self__ = this;
var _ = this;
return self__.uuid;
});

cljs.core.UUID.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.UUID.cljs$lang$type = true;

cljs.core.UUID.cljs$lang$ctorStr = "cljs.core/UUID";

cljs.core.UUID.cljs$lang$ctorPrWriter = (function (this__24859__auto__,writer__24860__auto__,opt__24861__auto__){
return cljs.core._write(writer__24860__auto__,"cljs.core/UUID");
});

cljs.core.__GT_UUID = (function __GT_UUID(uuid){
return (new cljs.core.UUID(uuid));
});


/**
* @constructor
*/
cljs.core.ExceptionInfo = (function (message,data,cause){
this.message = message;
this.data = data;
this.cause = cause;
})

cljs.core.ExceptionInfo.cljs$lang$type = true;

cljs.core.ExceptionInfo.cljs$lang$ctorStr = "cljs.core/ExceptionInfo";

cljs.core.ExceptionInfo.cljs$lang$ctorPrWriter = (function (this__24859__auto__,writer__24860__auto__,opt__24861__auto__){
return cljs.core._write(writer__24860__auto__,"cljs.core/ExceptionInfo");
});

cljs.core.__GT_ExceptionInfo = (function __GT_ExceptionInfo(message,data,cause){
return (new cljs.core.ExceptionInfo(message,data,cause));
});

cljs.core.ExceptionInfo.prototype = (new Error());
cljs.core.ExceptionInfo.prototype.constructor = cljs.core.ExceptionInfo;
/**
* Alpha - subject to change.
* Create an instance of ExceptionInfo, an Error type that carries a
* map of additional data.
*/
cljs.core.ex_info = (function() {
var ex_info = null;
var ex_info__2 = (function (msg,map){
return (new cljs.core.ExceptionInfo(msg,map,null));
});
var ex_info__3 = (function (msg,map,cause){
return (new cljs.core.ExceptionInfo(msg,map,cause));
});
ex_info = function(msg,map,cause){
switch(arguments.length){
case 2:
return ex_info__2.call(this,msg,map);
case 3:
return ex_info__3.call(this,msg,map,cause);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
ex_info.cljs$core$IFn$_invoke$arity$2 = ex_info__2;
ex_info.cljs$core$IFn$_invoke$arity$3 = ex_info__3;
return ex_info;
})()
;
/**
* Alpha - subject to change.
* Returns exception data (a map) if ex is an ExceptionInfo.
* Otherwise returns nil.
*/
cljs.core.ex_data = (function ex_data(ex){
if((ex instanceof cljs.core.ExceptionInfo)){
return ex.data;
} else {
return null;
}
});
/**
* Alpha - subject to change.
* Returns the message attached to the given Error / ExceptionInfo object.
* For non-Errors returns nil.
*/
cljs.core.ex_message = (function ex_message(ex){
if((ex instanceof Error)){
return ex.message;
} else {
return null;
}
});
/**
* Alpha - subject to change.
* Returns exception cause (an Error / ExceptionInfo) if ex is an
* ExceptionInfo.
* Otherwise returns nil.
*/
cljs.core.ex_cause = (function ex_cause(ex){
if((ex instanceof cljs.core.ExceptionInfo)){
return ex.cause;
} else {
return null;
}
});
/**
* Returns an JavaScript compatible comparator based upon pred.
*/
cljs.core.comparator = (function comparator(pred){
return (function (x,y){
if(cljs.core.truth_((function (){var G__31822 = x;
var G__31823 = y;
return (pred.cljs$core$IFn$_invoke$arity$2 ? pred.cljs$core$IFn$_invoke$arity$2(G__31822,G__31823) : pred.call(null,G__31822,G__31823));
})())){
return (-1);
} else {
if(cljs.core.truth_((function (){var G__31824 = y;
var G__31825 = x;
return (pred.cljs$core$IFn$_invoke$arity$2 ? pred.cljs$core$IFn$_invoke$arity$2(G__31824,G__31825) : pred.call(null,G__31824,G__31825));
})())){
return (1);
} else {
return (0);

}
}
});
});
cljs.core.special_symbol_QMARK_ = (function special_symbol_QMARK_(x){
return cljs.core.contains_QMARK_(new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 19, [new cljs.core.Symbol(null,"&","&",-2144855648,null),null,new cljs.core.Symbol(null,"defrecord*","defrecord*",-1936366207,null),null,new cljs.core.Symbol(null,"try","try",-1273693247,null),null,new cljs.core.Symbol(null,"loop*","loop*",615029416,null),null,new cljs.core.Symbol(null,"do","do",1686842252,null),null,new cljs.core.Symbol(null,"letfn*","letfn*",-110097810,null),null,new cljs.core.Symbol(null,"if","if",1181717262,null),null,new cljs.core.Symbol(null,"new","new",-444906321,null),null,new cljs.core.Symbol(null,"ns","ns",2082130287,null),null,new cljs.core.Symbol(null,"deftype*","deftype*",962659890,null),null,new cljs.core.Symbol(null,"let*","let*",1920721458,null),null,new cljs.core.Symbol(null,"js*","js*",-1134233646,null),null,new cljs.core.Symbol(null,"fn*","fn*",-752876845,null),null,new cljs.core.Symbol(null,"recur","recur",1202958259,null),null,new cljs.core.Symbol(null,"set!","set!",250714521,null),null,new cljs.core.Symbol(null,".",".",1975675962,null),null,new cljs.core.Symbol(null,"quote","quote",1377916282,null),null,new cljs.core.Symbol(null,"throw","throw",595905694,null),null,new cljs.core.Symbol(null,"def","def",597100991,null),null], null), null),x);
});
/**
* test [v] finds fn at key :test in var metadata and calls it,
* presuming failure will throw exception
*/
cljs.core.test = (function test(v){
var f = v.cljs$lang$test;
if(cljs.core.truth_(f)){
(f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));

return new cljs.core.Keyword(null,"ok","ok",967785236);
} else {
return new cljs.core.Keyword(null,"no-test","no-test",-1679482642);
}
});
