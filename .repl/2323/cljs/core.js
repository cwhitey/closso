// Compiled by ClojureScript 0.0-2665 {:static-fns true}
goog.provide('cljs.core');
goog.require('goog.string.StringBuffer');
goog.require('goog.array');
goog.require('goog.object');
goog.require('goog.string');
cljs.core._STAR_clojurescript_version_STAR_ = "0.0-2665";
cljs.core._STAR_unchecked_if_STAR_ = false;
if(typeof cljs.core._STAR_print_fn_STAR_ !== 'undefined'){
} else {
/**
* Each runtime environment provides a different way to print output.
* Whatever function *print-fn* is bound to will be passed any
* Strings which should be printed.
*/
cljs.core._STAR_print_fn_STAR_ = (function _STAR_print_fn_STAR_(_){
throw (new Error("No *print-fn* fn set for evaluation environment"));
});
}
/**
* Set *print-fn* to f.
*/
cljs.core.set_print_fn_BANG_ = (function set_print_fn_BANG_(f){
return cljs.core._STAR_print_fn_STAR_ = f;
});
cljs.core._STAR_flush_on_newline_STAR_ = true;
cljs.core._STAR_print_newline_STAR_ = true;
cljs.core._STAR_print_readably_STAR_ = true;
cljs.core._STAR_print_meta_STAR_ = false;
cljs.core._STAR_print_dup_STAR_ = false;
cljs.core._STAR_print_length_STAR_ = null;
cljs.core._STAR_print_level_STAR_ = null;
if(typeof cljs.core._STAR_loaded_libs_STAR_ !== 'undefined'){
} else {
cljs.core._STAR_loaded_libs_STAR_ = null;
}
cljs.core.pr_opts = (function pr_opts(){
return new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null,"flush-on-newline","flush-on-newline",-151457939),cljs.core._STAR_flush_on_newline_STAR_,new cljs.core.Keyword(null,"readably","readably",1129599760),cljs.core._STAR_print_readably_STAR_,new cljs.core.Keyword(null,"meta","meta",1499536964),cljs.core._STAR_print_meta_STAR_,new cljs.core.Keyword(null,"dup","dup",556298533),cljs.core._STAR_print_dup_STAR_,new cljs.core.Keyword(null,"print-length","print-length",1931866356),cljs.core._STAR_print_length_STAR_], null);
});
/**
* Set *print-fn* to console.log
*/
cljs.core.enable_console_print_BANG_ = (function enable_console_print_BANG_(){
cljs.core._STAR_print_newline_STAR_ = false;

return cljs.core._STAR_print_fn_STAR_ = (function() { 
var G__32354__delegate = function (args){
return console.log.apply(console,(function (){var G__32353 = args;
return (cljs.core.into_array.cljs$core$IFn$_invoke$arity$1 ? cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(G__32353) : cljs.core.into_array.call(null,G__32353));
})());
};
var G__32354 = function (var_args){
var args = null;
if (arguments.length > 0) {
var G__32355__i = 0, G__32355__a = new Array(arguments.length -  0);
while (G__32355__i < G__32355__a.length) {G__32355__a[G__32355__i] = arguments[G__32355__i + 0]; ++G__32355__i;}
  args = new cljs.core.IndexedSeq(G__32355__a,0);
} 
return G__32354__delegate.call(this,args);};
G__32354.cljs$lang$maxFixedArity = 0;
G__32354.cljs$lang$applyTo = (function (arglist__32356){
var args = cljs.core.seq(arglist__32356);
return G__32354__delegate(args);
});
G__32354.cljs$core$IFn$_invoke$arity$variadic = G__32354__delegate;
return G__32354;
})()
;
});
/**
* Internal - do not use!
*/
cljs.core.truth_ = (function truth_(x){
return (x != null && x !== false);
});
cljs.core.not_native = null;

/**
* Tests if 2 arguments are the same object
*/
cljs.core.identical_QMARK_ = (function identical_QMARK_(x,y){
return (x === y);
});
/**
* Returns true if x is nil, false otherwise.
*/
cljs.core.nil_QMARK_ = (function nil_QMARK_(x){
return (x == null);
});
cljs.core.array_QMARK_ = (function array_QMARK_(x){
return x instanceof Array;
});
cljs.core.number_QMARK_ = (function number_QMARK_(n){
return typeof n === 'number';
});
/**
* Returns true if x is logical false, false otherwise.
*/
cljs.core.not = (function not(x){
if(cljs.core.truth_(x)){
return false;
} else {
return true;
}
});
/**
* Returns true if x is not nil, false otherwise.
*/
cljs.core.some_QMARK_ = (function some_QMARK_(x){
return !((x == null));
});
cljs.core.object_QMARK_ = (function object_QMARK_(x){
if(!((x == null))){
return (x.constructor === Object);
} else {
return false;
}
});
cljs.core.string_QMARK_ = (function string_QMARK_(x){
var G__32358 = x;
return goog.isString(G__32358);
});
/**
* Internal - do not use!
*/
cljs.core.native_satisfies_QMARK_ = (function native_satisfies_QMARK_(p,x){
var x__$1 = (((x == null))?null:x);
if((p[(function (){var G__32360 = x__$1;
return goog.typeOf(G__32360);
})()])){
return true;
} else {
if((p["_"])){
return true;
} else {
return false;

}
}
});
cljs.core.is_proto_ = (function is_proto_(x){
return (x.constructor.prototype === x);
});
/**
* When compiled for a command-line target, whatever
* function *main-fn* is set to will be called with the command-line
* argv as arguments
*/
cljs.core._STAR_main_cli_fn_STAR_ = null;
cljs.core.type = (function type(x){
if((x == null)){
return null;
} else {
return x.constructor;
}
});
cljs.core.missing_protocol = (function missing_protocol(proto,obj){
var ty = cljs.core.type(obj);
var ty__$1 = (cljs.core.truth_((function (){var and__24262__auto__ = ty;
if(cljs.core.truth_(and__24262__auto__)){
return ty.cljs$lang$type;
} else {
return and__24262__auto__;
}
})())?ty.cljs$lang$ctorStr:(function (){var G__32362 = obj;
return goog.typeOf(G__32362);
})());
return (new Error(["No protocol method ",proto," defined for type ",ty__$1,": ",obj].join("")));
});
cljs.core.type__GT_str = (function type__GT_str(ty){
var temp__4124__auto__ = ty.cljs$lang$ctorStr;
if(cljs.core.truth_(temp__4124__auto__)){
var s = temp__4124__auto__;
return s;
} else {
return [cljs.core.str(ty)].join('');
}
});
if((typeof Symbol !== 'undefined') && (((function (){var G__32364 = Symbol;
return goog.typeOf(G__32364);
})() === "function"))){
cljs.core.ITER_SYMBOL = Symbol.iterator;
} else {
cljs.core.ITER_SYMBOL = "@@iterator";
}
cljs.core.make_array = (function() {
var make_array = null;
var make_array__1 = (function (size){
return (new Array(size));
});
var make_array__2 = (function (type,size){
return make_array.cljs$core$IFn$_invoke$arity$1(size);
});
make_array = function(type,size){
switch(arguments.length){
case 1:
return make_array__1.call(this,type);
case 2:
return make_array__2.call(this,type,size);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
make_array.cljs$core$IFn$_invoke$arity$1 = make_array__1;
make_array.cljs$core$IFn$_invoke$arity$2 = make_array__2;
return make_array;
})()
;
/**
* Returns a javascript array, cloned from the passed in array
*/
cljs.core.aclone = (function aclone(arr){
var len = arr.length;
var new_arr = (new Array(len));
var n__25161__auto___32366 = len;
var i_32367 = (0);
while(true){
if((i_32367 < n__25161__auto___32366)){
(new_arr[i_32367] = (arr[i_32367]));

var G__32368 = (i_32367 + (1));
i_32367 = G__32368;
continue;
} else {
}
break;
}

return new_arr;
});
/**
* Creates a new javascript array.
* @param {...*} var_args
*/
cljs.core.array = (function array(var_args){
var a = (new Array(arguments.length));
var i = (0);
while(true){
if((i < a.length)){
(a[i] = (arguments[i]));

var G__32369 = (i + (1));
i = G__32369;
continue;
} else {
return a;
}
break;
}
});
/**
* Returns the value at the index.
* @param {...*} var_args
*/
cljs.core.aget = (function() {
var aget = null;
var aget__2 = (function (array,i){
return (array[i]);
});
var aget__3 = (function() { 
var G__32378__delegate = function (array,i,idxs){
var G__32375 = aget;
var G__32376 = aget.cljs$core$IFn$_invoke$arity$2(array,i);
var G__32377 = idxs;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$3 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$3(G__32375,G__32376,G__32377) : cljs.core.apply.call(null,G__32375,G__32376,G__32377));
};
var G__32378 = function (array,i,var_args){
var idxs = null;
if (arguments.length > 2) {
var G__32379__i = 0, G__32379__a = new Array(arguments.length -  2);
while (G__32379__i < G__32379__a.length) {G__32379__a[G__32379__i] = arguments[G__32379__i + 2]; ++G__32379__i;}
  idxs = new cljs.core.IndexedSeq(G__32379__a,0);
} 
return G__32378__delegate.call(this,array,i,idxs);};
G__32378.cljs$lang$maxFixedArity = 2;
G__32378.cljs$lang$applyTo = (function (arglist__32380){
var array = cljs.core.first(arglist__32380);
arglist__32380 = cljs.core.next(arglist__32380);
var i = cljs.core.first(arglist__32380);
var idxs = cljs.core.rest(arglist__32380);
return G__32378__delegate(array,i,idxs);
});
G__32378.cljs$core$IFn$_invoke$arity$variadic = G__32378__delegate;
return G__32378;
})()
;
aget = function(array,i,var_args){
var idxs = var_args;
switch(arguments.length){
case 2:
return aget__2.call(this,array,i);
default:
var G__32381 = null;
if (arguments.length > 2) {
var G__32382__i = 0, G__32382__a = new Array(arguments.length -  2);
while (G__32382__i < G__32382__a.length) {G__32382__a[G__32382__i] = arguments[G__32382__i + 2]; ++G__32382__i;}
G__32381 = new cljs.core.IndexedSeq(G__32382__a,0);
}
return aget__3.cljs$core$IFn$_invoke$arity$variadic(array,i, G__32381);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
aget.cljs$lang$maxFixedArity = 2;
aget.cljs$lang$applyTo = aget__3.cljs$lang$applyTo;
aget.cljs$core$IFn$_invoke$arity$2 = aget__2;
aget.cljs$core$IFn$_invoke$arity$variadic = aget__3.cljs$core$IFn$_invoke$arity$variadic;
return aget;
})()
;
/**
* Sets the value at the index.
* @param {...*} var_args
*/
cljs.core.aset = (function() {
var aset = null;
var aset__3 = (function (array,i,val){
return (array[i] = val);
});
var aset__4 = (function() { 
var G__32391__delegate = function (array,idx,idx2,idxv){
var G__32387 = aset;
var G__32388 = (array[idx]);
var G__32389 = idx2;
var G__32390 = idxv;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$4 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$4(G__32387,G__32388,G__32389,G__32390) : cljs.core.apply.call(null,G__32387,G__32388,G__32389,G__32390));
};
var G__32391 = function (array,idx,idx2,var_args){
var idxv = null;
if (arguments.length > 3) {
var G__32392__i = 0, G__32392__a = new Array(arguments.length -  3);
while (G__32392__i < G__32392__a.length) {G__32392__a[G__32392__i] = arguments[G__32392__i + 3]; ++G__32392__i;}
  idxv = new cljs.core.IndexedSeq(G__32392__a,0);
} 
return G__32391__delegate.call(this,array,idx,idx2,idxv);};
G__32391.cljs$lang$maxFixedArity = 3;
G__32391.cljs$lang$applyTo = (function (arglist__32393){
var array = cljs.core.first(arglist__32393);
arglist__32393 = cljs.core.next(arglist__32393);
var idx = cljs.core.first(arglist__32393);
arglist__32393 = cljs.core.next(arglist__32393);
var idx2 = cljs.core.first(arglist__32393);
var idxv = cljs.core.rest(arglist__32393);
return G__32391__delegate(array,idx,idx2,idxv);
});
G__32391.cljs$core$IFn$_invoke$arity$variadic = G__32391__delegate;
return G__32391;
})()
;
aset = function(array,idx,idx2,var_args){
var idxv = var_args;
switch(arguments.length){
case 3:
return aset__3.call(this,array,idx,idx2);
default:
var G__32394 = null;
if (arguments.length > 3) {
var G__32395__i = 0, G__32395__a = new Array(arguments.length -  3);
while (G__32395__i < G__32395__a.length) {G__32395__a[G__32395__i] = arguments[G__32395__i + 3]; ++G__32395__i;}
G__32394 = new cljs.core.IndexedSeq(G__32395__a,0);
}
return aset__4.cljs$core$IFn$_invoke$arity$variadic(array,idx,idx2, G__32394);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
aset.cljs$lang$maxFixedArity = 3;
aset.cljs$lang$applyTo = aset__4.cljs$lang$applyTo;
aset.cljs$core$IFn$_invoke$arity$3 = aset__3;
aset.cljs$core$IFn$_invoke$arity$variadic = aset__4.cljs$core$IFn$_invoke$arity$variadic;
return aset;
})()
;
/**
* Returns the length of the array. Works on arrays of all types.
*/
cljs.core.alength = (function alength(array){
return array.length;
});
cljs.core.into_array = (function() {
var into_array = null;
var into_array__1 = (function (aseq){
return into_array.cljs$core$IFn$_invoke$arity$2(null,aseq);
});
var into_array__2 = (function (type,aseq){
var G__32401 = (function (a,x){
a.push(x);

return a;
});
var G__32402 = [];
var G__32403 = aseq;
return (cljs.core.reduce.cljs$core$IFn$_invoke$arity$3 ? cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(G__32401,G__32402,G__32403) : cljs.core.reduce.call(null,G__32401,G__32402,G__32403));
});
into_array = function(type,aseq){
switch(arguments.length){
case 1:
return into_array__1.call(this,type);
case 2:
return into_array__2.call(this,type,aseq);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
into_array.cljs$core$IFn$_invoke$arity$1 = into_array__1;
into_array.cljs$core$IFn$_invoke$arity$2 = into_array__2;
return into_array;
})()
;
/**
* Invoke JavaScript object method via string. Needed when the
* string is not a valid unquoted property name.
* @param {...*} var_args
*/
cljs.core.js_invoke = (function() { 
var js_invoke__delegate = function (obj,s,args){
return (obj[s]).apply(obj,cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(args));
};
var js_invoke = function (obj,s,var_args){
var args = null;
if (arguments.length > 2) {
var G__32404__i = 0, G__32404__a = new Array(arguments.length -  2);
while (G__32404__i < G__32404__a.length) {G__32404__a[G__32404__i] = arguments[G__32404__i + 2]; ++G__32404__i;}
  args = new cljs.core.IndexedSeq(G__32404__a,0);
} 
return js_invoke__delegate.call(this,obj,s,args);};
js_invoke.cljs$lang$maxFixedArity = 2;
js_invoke.cljs$lang$applyTo = (function (arglist__32405){
var obj = cljs.core.first(arglist__32405);
arglist__32405 = cljs.core.next(arglist__32405);
var s = cljs.core.first(arglist__32405);
var args = cljs.core.rest(arglist__32405);
return js_invoke__delegate(obj,s,args);
});
js_invoke.cljs$core$IFn$_invoke$arity$variadic = js_invoke__delegate;
return js_invoke;
})()
;

cljs.core.Fn = (function (){var obj32407 = {};
return obj32407;
})();


cljs.core.IFn = (function (){var obj32409 = {};
return obj32409;
})();

cljs.core._invoke = (function() {
var _invoke = null;
var _invoke__1 = (function (this$){
if((function (){var and__24262__auto__ = this$;
if(and__24262__auto__){
return this$.cljs$core$IFn$_invoke$arity$1;
} else {
return and__24262__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$1(this$);
} else {
var x__24918__auto__ = (((this$ == null))?null:this$);
return (function (){var or__24274__auto__ = (cljs.core._invoke[(function (){var G__32455 = x__24918__auto__;
return goog.typeOf(G__32455);
})()]);
if(or__24274__auto__){
return or__24274__auto__;
} else {
var or__24274__auto____$1 = (cljs.core._invoke["_"]);
if(or__24274__auto____$1){
return or__24274__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$);
}
});
var _invoke__2 = (function (this$,a){
if((function (){var and__24262__auto__ = this$;
if(and__24262__auto__){
return this$.cljs$core$IFn$_invoke$arity$2;
} else {
return and__24262__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$2(this$,a);
} else {
var x__24918__auto__ = (((this$ == null))?null:this$);
return (function (){var or__24274__auto__ = (cljs.core._invoke[(function (){var G__32457 = x__24918__auto__;
return goog.typeOf(G__32457);
})()]);
if(or__24274__auto__){
return or__24274__auto__;
} else {
var or__24274__auto____$1 = (cljs.core._invoke["_"]);
if(or__24274__auto____$1){
return or__24274__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a);
}
});
var _invoke__3 = (function (this$,a,b){
if((function (){var and__24262__auto__ = this$;
if(and__24262__auto__){
return this$.cljs$core$IFn$_invoke$arity$3;
} else {
return and__24262__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$3(this$,a,b);
} else {
var x__24918__auto__ = (((this$ == null))?null:this$);
return (function (){var or__24274__auto__ = (cljs.core._invoke[(function (){var G__32459 = x__24918__auto__;
return goog.typeOf(G__32459);
})()]);
if(or__24274__auto__){
return or__24274__auto__;
} else {
var or__24274__auto____$1 = (cljs.core._invoke["_"]);
if(or__24274__auto____$1){
return or__24274__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b);
}
});
var _invoke__4 = (function (this$,a,b,c){
if((function (){var and__24262__auto__ = this$;
if(and__24262__auto__){
return this$.cljs$core$IFn$_invoke$arity$4;
} else {
return and__24262__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$4(this$,a,b,c);
} else {
var x__24918__auto__ = (((this$ == null))?null:this$);
return (function (){var or__24274__auto__ = (cljs.core._invoke[(function (){var G__32461 = x__24918__auto__;
return goog.typeOf(G__32461);
})()]);
if(or__24274__auto__){
return or__24274__auto__;
} else {
var or__24274__auto____$1 = (cljs.core._invoke["_"]);
if(or__24274__auto____$1){
return or__24274__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c);
}
});
var _invoke__5 = (function (this$,a,b,c,d){
if((function (){var and__24262__auto__ = this$;
if(and__24262__auto__){
return this$.cljs$core$IFn$_invoke$arity$5;
} else {
return and__24262__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$5(this$,a,b,c,d);
} else {
var x__24918__auto__ = (((this$ == null))?null:this$);
return (function (){var or__24274__auto__ = (cljs.core._invoke[(function (){var G__32463 = x__24918__auto__;
return goog.typeOf(G__32463);
})()]);
if(or__24274__auto__){
return or__24274__auto__;
} else {
var or__24274__auto____$1 = (cljs.core._invoke["_"]);
if(or__24274__auto____$1){
return or__24274__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d);
}
});
var _invoke__6 = (function (this$,a,b,c,d,e){
if((function (){var and__24262__auto__ = this$;
if(and__24262__auto__){
return this$.cljs$core$IFn$_invoke$arity$6;
} else {
return and__24262__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$6(this$,a,b,c,d,e);
} else {
var x__24918__auto__ = (((this$ == null))?null:this$);
return (function (){var or__24274__auto__ = (cljs.core._invoke[(function (){var G__32465 = x__24918__auto__;
return goog.typeOf(G__32465);
})()]);
if(or__24274__auto__){
return or__24274__auto__;
} else {
var or__24274__auto____$1 = (cljs.core._invoke["_"]);
if(or__24274__auto____$1){
return or__24274__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e);
}
});
var _invoke__7 = (function (this$,a,b,c,d,e,f){
if((function (){var and__24262__auto__ = this$;
if(and__24262__auto__){
return this$.cljs$core$IFn$_invoke$arity$7;
} else {
return and__24262__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$7(this$,a,b,c,d,e,f);
} else {
var x__24918__auto__ = (((this$ == null))?null:this$);
return (function (){var or__24274__auto__ = (cljs.core._invoke[(function (){var G__32467 = x__24918__auto__;
return goog.typeOf(G__32467);
})()]);
if(or__24274__auto__){
return or__24274__auto__;
} else {
var or__24274__auto____$1 = (cljs.core._invoke["_"]);
if(or__24274__auto____$1){
return or__24274__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f);
}
});
var _invoke__8 = (function (this$,a,b,c,d,e,f,g){
if((function (){var and__24262__auto__ = this$;
if(and__24262__auto__){
return this$.cljs$core$IFn$_invoke$arity$8;
} else {
return and__24262__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$8(this$,a,b,c,d,e,f,g);
} else {
var x__24918__auto__ = (((this$ == null))?null:this$);
return (function (){var or__24274__auto__ = (cljs.core._invoke[(function (){var G__32469 = x__24918__auto__;
return goog.typeOf(G__32469);
})()]);
if(or__24274__auto__){
return or__24274__auto__;
} else {
var or__24274__auto____$1 = (cljs.core._invoke["_"]);
if(or__24274__auto____$1){
return or__24274__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g);
}
});
var _invoke__9 = (function (this$,a,b,c,d,e,f,g,h){
if((function (){var and__24262__auto__ = this$;
if(and__24262__auto__){
return this$.cljs$core$IFn$_invoke$arity$9;
} else {
return and__24262__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$9(this$,a,b,c,d,e,f,g,h);
} else {
var x__24918__auto__ = (((this$ == null))?null:this$);
return (function (){var or__24274__auto__ = (cljs.core._invoke[(function (){var G__32471 = x__24918__auto__;
return goog.typeOf(G__32471);
})()]);
if(or__24274__auto__){
return or__24274__auto__;
} else {
var or__24274__auto____$1 = (cljs.core._invoke["_"]);
if(or__24274__auto____$1){
return or__24274__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h);
}
});
var _invoke__10 = (function (this$,a,b,c,d,e,f,g,h,i){
if((function (){var and__24262__auto__ = this$;
if(and__24262__auto__){
return this$.cljs$core$IFn$_invoke$arity$10;
} else {
return and__24262__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$10(this$,a,b,c,d,e,f,g,h,i);
} else {
var x__24918__auto__ = (((this$ == null))?null:this$);
return (function (){var or__24274__auto__ = (cljs.core._invoke[(function (){var G__32473 = x__24918__auto__;
return goog.typeOf(G__32473);
})()]);
if(or__24274__auto__){
return or__24274__auto__;
} else {
var or__24274__auto____$1 = (cljs.core._invoke["_"]);
if(or__24274__auto____$1){
return or__24274__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i);
}
});
var _invoke__11 = (function (this$,a,b,c,d,e,f,g,h,i,j){
if((function (){var and__24262__auto__ = this$;
if(and__24262__auto__){
return this$.cljs$core$IFn$_invoke$arity$11;
} else {
return and__24262__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$11(this$,a,b,c,d,e,f,g,h,i,j);
} else {
var x__24918__auto__ = (((this$ == null))?null:this$);
return (function (){var or__24274__auto__ = (cljs.core._invoke[(function (){var G__32475 = x__24918__auto__;
return goog.typeOf(G__32475);
})()]);
if(or__24274__auto__){
return or__24274__auto__;
} else {
var or__24274__auto____$1 = (cljs.core._invoke["_"]);
if(or__24274__auto____$1){
return or__24274__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j);
}
});
var _invoke__12 = (function (this$,a,b,c,d,e,f,g,h,i,j,k){
if((function (){var and__24262__auto__ = this$;
if(and__24262__auto__){
return this$.cljs$core$IFn$_invoke$arity$12;
} else {
return and__24262__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$12(this$,a,b,c,d,e,f,g,h,i,j,k);
} else {
var x__24918__auto__ = (((this$ == null))?null:this$);
return (function (){var or__24274__auto__ = (cljs.core._invoke[(function (){var G__32477 = x__24918__auto__;
return goog.typeOf(G__32477);
})()]);
if(or__24274__auto__){
return or__24274__auto__;
} else {
var or__24274__auto____$1 = (cljs.core._invoke["_"]);
if(or__24274__auto____$1){
return or__24274__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k);
}
});
var _invoke__13 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l){
if((function (){var and__24262__auto__ = this$;
if(and__24262__auto__){
return this$.cljs$core$IFn$_invoke$arity$13;
} else {
return and__24262__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$13(this$,a,b,c,d,e,f,g,h,i,j,k,l);
} else {
var x__24918__auto__ = (((this$ == null))?null:this$);
return (function (){var or__24274__auto__ = (cljs.core._invoke[(function (){var G__32479 = x__24918__auto__;
return goog.typeOf(G__32479);
})()]);
if(or__24274__auto__){
return or__24274__auto__;
} else {
var or__24274__auto____$1 = (cljs.core._invoke["_"]);
if(or__24274__auto____$1){
return or__24274__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l);
}
});
var _invoke__14 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m){
if((function (){var and__24262__auto__ = this$;
if(and__24262__auto__){
return this$.cljs$core$IFn$_invoke$arity$14;
} else {
return and__24262__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$14(this$,a,b,c,d,e,f,g,h,i,j,k,l,m);
} else {
var x__24918__auto__ = (((this$ == null))?null:this$);
return (function (){var or__24274__auto__ = (cljs.core._invoke[(function (){var G__32481 = x__24918__auto__;
return goog.typeOf(G__32481);
})()]);
if(or__24274__auto__){
return or__24274__auto__;
} else {
var or__24274__auto____$1 = (cljs.core._invoke["_"]);
if(or__24274__auto____$1){
return or__24274__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m);
}
});
var _invoke__15 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n){
if((function (){var and__24262__auto__ = this$;
if(and__24262__auto__){
return this$.cljs$core$IFn$_invoke$arity$15;
} else {
return and__24262__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$15(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
} else {
var x__24918__auto__ = (((this$ == null))?null:this$);
return (function (){var or__24274__auto__ = (cljs.core._invoke[(function (){var G__32483 = x__24918__auto__;
return goog.typeOf(G__32483);
})()]);
if(or__24274__auto__){
return or__24274__auto__;
} else {
var or__24274__auto____$1 = (cljs.core._invoke["_"]);
if(or__24274__auto____$1){
return or__24274__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
}
});
var _invoke__16 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
if((function (){var and__24262__auto__ = this$;
if(and__24262__auto__){
return this$.cljs$core$IFn$_invoke$arity$16;
} else {
return and__24262__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$16(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
} else {
var x__24918__auto__ = (((this$ == null))?null:this$);
return (function (){var or__24274__auto__ = (cljs.core._invoke[(function (){var G__32485 = x__24918__auto__;
return goog.typeOf(G__32485);
})()]);
if(or__24274__auto__){
return or__24274__auto__;
} else {
var or__24274__auto____$1 = (cljs.core._invoke["_"]);
if(or__24274__auto____$1){
return or__24274__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
}
});
var _invoke__17 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
if((function (){var and__24262__auto__ = this$;
if(and__24262__auto__){
return this$.cljs$core$IFn$_invoke$arity$17;
} else {
return and__24262__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$17(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
} else {
var x__24918__auto__ = (((this$ == null))?null:this$);
return (function (){var or__24274__auto__ = (cljs.core._invoke[(function (){var G__32487 = x__24918__auto__;
return goog.typeOf(G__32487);
})()]);
if(or__24274__auto__){
return or__24274__auto__;
} else {
var or__24274__auto____$1 = (cljs.core._invoke["_"]);
if(or__24274__auto____$1){
return or__24274__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
}
});
var _invoke__18 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
if((function (){var and__24262__auto__ = this$;
if(and__24262__auto__){
return this$.cljs$core$IFn$_invoke$arity$18;
} else {
return and__24262__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$18(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
} else {
var x__24918__auto__ = (((this$ == null))?null:this$);
return (function (){var or__24274__auto__ = (cljs.core._invoke[(function (){var G__32489 = x__24918__auto__;
return goog.typeOf(G__32489);
})()]);
if(or__24274__auto__){
return or__24274__auto__;
} else {
var or__24274__auto____$1 = (cljs.core._invoke["_"]);
if(or__24274__auto____$1){
return or__24274__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
}
});
var _invoke__19 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
if((function (){var and__24262__auto__ = this$;
if(and__24262__auto__){
return this$.cljs$core$IFn$_invoke$arity$19;
} else {
return and__24262__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$19(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
} else {
var x__24918__auto__ = (((this$ == null))?null:this$);
return (function (){var or__24274__auto__ = (cljs.core._invoke[(function (){var G__32491 = x__24918__auto__;
return goog.typeOf(G__32491);
})()]);
if(or__24274__auto__){
return or__24274__auto__;
} else {
var or__24274__auto____$1 = (cljs.core._invoke["_"]);
if(or__24274__auto____$1){
return or__24274__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
}
});
var _invoke__20 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
if((function (){var and__24262__auto__ = this$;
if(and__24262__auto__){
return this$.cljs$core$IFn$_invoke$arity$20;
} else {
return and__24262__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$20(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
} else {
var x__24918__auto__ = (((this$ == null))?null:this$);
return (function (){var or__24274__auto__ = (cljs.core._invoke[(function (){var G__32493 = x__24918__auto__;
return goog.typeOf(G__32493);
})()]);
if(or__24274__auto__){
return or__24274__auto__;
} else {
var or__24274__auto____$1 = (cljs.core._invoke["_"]);
if(or__24274__auto____$1){
return or__24274__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
}
});
var _invoke__21 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
if((function (){var and__24262__auto__ = this$;
if(and__24262__auto__){
return this$.cljs$core$IFn$_invoke$arity$21;
} else {
return and__24262__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$21(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
} else {
var x__24918__auto__ = (((this$ == null))?null:this$);
return (function (){var or__24274__auto__ = (cljs.core._invoke[(function (){var G__32495 = x__24918__auto__;
return goog.typeOf(G__32495);
})()]);
if(or__24274__auto__){
return or__24274__auto__;
} else {
var or__24274__auto____$1 = (cljs.core._invoke["_"]);
if(or__24274__auto____$1){
return or__24274__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
}
});
var _invoke__22 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
if((function (){var and__24262__auto__ = this$;
if(and__24262__auto__){
return this$.cljs$core$IFn$_invoke$arity$22;
} else {
return and__24262__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$22(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest);
} else {
var x__24918__auto__ = (((this$ == null))?null:this$);
return (function (){var or__24274__auto__ = (cljs.core._invoke[(function (){var G__32497 = x__24918__auto__;
return goog.typeOf(G__32497);
})()]);
if(or__24274__auto__){
return or__24274__auto__;
} else {
var or__24274__auto____$1 = (cljs.core._invoke["_"]);
if(or__24274__auto____$1){
return or__24274__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest);
}
});
_invoke = function(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
switch(arguments.length){
case 1:
return _invoke__1.call(this,this$);
case 2:
return _invoke__2.call(this,this$,a);
case 3:
return _invoke__3.call(this,this$,a,b);
case 4:
return _invoke__4.call(this,this$,a,b,c);
case 5:
return _invoke__5.call(this,this$,a,b,c,d);
case 6:
return _invoke__6.call(this,this$,a,b,c,d,e);
case 7:
return _invoke__7.call(this,this$,a,b,c,d,e,f);
case 8:
return _invoke__8.call(this,this$,a,b,c,d,e,f,g);
case 9:
return _invoke__9.call(this,this$,a,b,c,d,e,f,g,h);
case 10:
return _invoke__10.call(this,this$,a,b,c,d,e,f,g,h,i);
case 11:
return _invoke__11.call(this,this$,a,b,c,d,e,f,g,h,i,j);
case 12:
return _invoke__12.call(this,this$,a,b,c,d,e,f,g,h,i,j,k);
case 13:
return _invoke__13.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l);
case 14:
return _invoke__14.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m);
case 15:
return _invoke__15.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
case 16:
return _invoke__16.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
case 17:
return _invoke__17.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
case 18:
return _invoke__18.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
case 19:
return _invoke__19.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
case 20:
return _invoke__20.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
case 21:
return _invoke__21.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
case 22:
return _invoke__22.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_invoke.cljs$core$IFn$_invoke$arity$1 = _invoke__1;
_invoke.cljs$core$IFn$_invoke$arity$2 = _invoke__2;
_invoke.cljs$core$IFn$_invoke$arity$3 = _invoke__3;
_invoke.cljs$core$IFn$_invoke$arity$4 = _invoke__4;
_invoke.cljs$core$IFn$_invoke$arity$5 = _invoke__5;
_invoke.cljs$core$IFn$_invoke$arity$6 = _invoke__6;
_invoke.cljs$core$IFn$_invoke$arity$7 = _invoke__7;
_invoke.cljs$core$IFn$_invoke$arity$8 = _invoke__8;
_invoke.cljs$core$IFn$_invoke$arity$9 = _invoke__9;
_invoke.cljs$core$IFn$_invoke$arity$10 = _invoke__10;
_invoke.cljs$core$IFn$_invoke$arity$11 = _invoke__11;
_invoke.cljs$core$IFn$_invoke$arity$12 = _invoke__12;
_invoke.cljs$core$IFn$_invoke$arity$13 = _invoke__13;
_invoke.cljs$core$IFn$_invoke$arity$14 = _invoke__14;
_invoke.cljs$core$IFn$_invoke$arity$15 = _invoke__15;
_invoke.cljs$core$IFn$_invoke$arity$16 = _invoke__16;
_invoke.cljs$core$IFn$_invoke$arity$17 = _invoke__17;
_invoke.cljs$core$IFn$_invoke$arity$18 = _invoke__18;
_invoke.cljs$core$IFn$_invoke$arity$19 = _invoke__19;
_invoke.cljs$core$IFn$_invoke$arity$20 = _invoke__20;
_invoke.cljs$core$IFn$_invoke$arity$21 = _invoke__21;
_invoke.cljs$core$IFn$_invoke$arity$22 = _invoke__22;
return _invoke;
})()
;


cljs.core.ICloneable = (function (){var obj32499 = {};
return obj32499;
})();

cljs.core._clone = (function _clone(value){
if((function (){var and__24262__auto__ = value;
if(and__24262__auto__){
return value.cljs$core$ICloneable$_clone$arity$1;
} else {
return and__24262__auto__;
}
})()){
return value.cljs$core$ICloneable$_clone$arity$1(value);
} else {
var x__24918__auto__ = (((value == null))?null:value);
return (function (){var or__24274__auto__ = (cljs.core._clone[(function (){var G__32503 = x__24918__auto__;
return goog.typeOf(G__32503);
})()]);
if(or__24274__auto__){
return or__24274__auto__;
} else {
var or__24274__auto____$1 = (cljs.core._clone["_"]);
if(or__24274__auto____$1){
return or__24274__auto____$1;
} else {
throw cljs.core.missing_protocol("ICloneable.-clone",value);
}
}
})().call(null,value);
}
});


cljs.core.ICounted = (function (){var obj32505 = {};
return obj32505;
})();

cljs.core._count = (function _count(coll){
if((function (){var and__24262__auto__ = coll;
if(and__24262__auto__){
return coll.cljs$core$ICounted$_count$arity$1;
} else {
return and__24262__auto__;
}
})()){
return coll.cljs$core$ICounted$_count$arity$1(coll);
} else {
var x__24918__auto__ = (((coll == null))?null:coll);
return (function (){var or__24274__auto__ = (cljs.core._count[(function (){var G__32509 = x__24918__auto__;
return goog.typeOf(G__32509);
})()]);
if(or__24274__auto__){
return or__24274__auto__;
} else {
var or__24274__auto____$1 = (cljs.core._count["_"]);
if(or__24274__auto____$1){
return or__24274__auto____$1;
} else {
throw cljs.core.missing_protocol("ICounted.-count",coll);
}
}
})().call(null,coll);
}
});


cljs.core.IEmptyableCollection = (function (){var obj32511 = {};
return obj32511;
})();

cljs.core._empty = (function _empty(coll){
if((function (){var and__24262__auto__ = coll;
if(and__24262__auto__){
return coll.cljs$core$IEmptyableCollection$_empty$arity$1;
} else {
return and__24262__auto__;
}
})()){
return coll.cljs$core$IEmptyableCollection$_empty$arity$1(coll);
} else {
var x__24918__auto__ = (((coll == null))?null:coll);
return (function (){var or__24274__auto__ = (cljs.core._empty[(function (){var G__32515 = x__24918__auto__;
return goog.typeOf(G__32515);
})()]);
if(or__24274__auto__){
return or__24274__auto__;
} else {
var or__24274__auto____$1 = (cljs.core._empty["_"]);
if(or__24274__auto____$1){
return or__24274__auto____$1;
} else {
throw cljs.core.missing_protocol("IEmptyableCollection.-empty",coll);
}
}
})().call(null,coll);
}
});


cljs.core.ICollection = (function (){var obj32517 = {};
return obj32517;
})();

cljs.core._conj = (function _conj(coll,o){
if((function (){var and__24262__auto__ = coll;
if(and__24262__auto__){
return coll.cljs$core$ICollection$_conj$arity$2;
} else {
return and__24262__auto__;
}
})()){
return coll.cljs$core$ICollection$_conj$arity$2(coll,o);
} else {
var x__24918__auto__ = (((coll == null))?null:coll);
return (function (){var or__24274__auto__ = (cljs.core._conj[(function (){var G__32521 = x__24918__auto__;
return goog.typeOf(G__32521);
})()]);
if(or__24274__auto__){
return or__24274__auto__;
} else {
var or__24274__auto____$1 = (cljs.core._conj["_"]);
if(or__24274__auto____$1){
return or__24274__auto____$1;
} else {
throw cljs.core.missing_protocol("ICollection.-conj",coll);
}
}
})().call(null,coll,o);
}
});


cljs.core.IIndexed = (function (){var obj32523 = {};
return obj32523;
})();

cljs.core._nth = (function() {
var _nth = null;
var _nth__2 = (function (coll,n){
if((function (){var and__24262__auto__ = coll;
if(and__24262__auto__){
return coll.cljs$core$IIndexed$_nth$arity$2;
} else {
return and__24262__auto__;
}
})()){
return coll.cljs$core$IIndexed$_nth$arity$2(coll,n);
} else {
var x__24918__auto__ = (((coll == null))?null:coll);
return (function (){var or__24274__auto__ = (cljs.core._nth[(function (){var G__32529 = x__24918__auto__;
return goog.typeOf(G__32529);
})()]);
if(or__24274__auto__){
return or__24274__auto__;
} else {
var or__24274__auto____$1 = (cljs.core._nth["_"]);
if(or__24274__auto____$1){
return or__24274__auto____$1;
} else {
throw cljs.core.missing_protocol("IIndexed.-nth",coll);
}
}
})().call(null,coll,n);
}
});
var _nth__3 = (function (coll,n,not_found){
if((function (){var and__24262__auto__ = coll;
if(and__24262__auto__){
return coll.cljs$core$IIndexed$_nth$arity$3;
} else {
return and__24262__auto__;
}
})()){
return coll.cljs$core$IIndexed$_nth$arity$3(coll,n,not_found);
} else {
var x__24918__auto__ = (((coll == null))?null:coll);
return (function (){var or__24274__auto__ = (cljs.core._nth[(function (){var G__32531 = x__24918__auto__;
return goog.typeOf(G__32531);
})()]);
if(or__24274__auto__){
return or__24274__auto__;
} else {
var or__24274__auto____$1 = (cljs.core._nth["_"]);
if(or__24274__auto____$1){
return or__24274__auto____$1;
} else {
throw cljs.core.missing_protocol("IIndexed.-nth",coll);
}
}
})().call(null,coll,n,not_found);
}
});
_nth = function(coll,n,not_found){
switch(arguments.length){
case 2:
return _nth__2.call(this,coll,n);
case 3:
return _nth__3.call(this,coll,n,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_nth.cljs$core$IFn$_invoke$arity$2 = _nth__2;
_nth.cljs$core$IFn$_invoke$arity$3 = _nth__3;
return _nth;
})()
;


cljs.core.ASeq = (function (){var obj32533 = {};
return obj32533;
})();


cljs.core.ISeq = (function (){var obj32535 = {};
return obj32535;
})();

cljs.core._first = (function _first(coll){
if((function (){var and__24262__auto__ = coll;
if(and__24262__auto__){
return coll.cljs$core$ISeq$_first$arity$1;
} else {
return and__24262__auto__;
}
})()){
return coll.cljs$core$ISeq$_first$arity$1(coll);
} else {
var x__24918__auto__ = (((coll == null))?null:coll);
return (function (){var or__24274__auto__ = (cljs.core._first[(function (){var G__32539 = x__24918__auto__;
return goog.typeOf(G__32539);
})()]);
if(or__24274__auto__){
return or__24274__auto__;
} else {
var or__24274__auto____$1 = (cljs.core._first["_"]);
if(or__24274__auto____$1){
return or__24274__auto____$1;
} else {
throw cljs.core.missing_protocol("ISeq.-first",coll);
}
}
})().call(null,coll);
}
});

cljs.core._rest = (function _rest(coll){
if((function (){var and__24262__auto__ = coll;
if(and__24262__auto__){
return coll.cljs$core$ISeq$_rest$arity$1;
} else {
return and__24262__auto__;
}
})()){
return coll.cljs$core$ISeq$_rest$arity$1(coll);
} else {
var x__24918__auto__ = (((coll == null))?null:coll);
return (function (){var or__24274__auto__ = (cljs.core._rest[(function (){var G__32543 = x__24918__auto__;
return goog.typeOf(G__32543);
})()]);
if(or__24274__auto__){
return or__24274__auto__;
} else {
var or__24274__auto____$1 = (cljs.core._rest["_"]);
if(or__24274__auto____$1){
return or__24274__auto____$1;
} else {
throw cljs.core.missing_protocol("ISeq.-rest",coll);
}
}
})().call(null,coll);
}
});


cljs.core.INext = (function (){var obj32545 = {};
return obj32545;
})();

cljs.core._next = (function _next(coll){
if((function (){var and__24262__auto__ = coll;
if(and__24262__auto__){
return coll.cljs$core$INext$_next$arity$1;
} else {
return and__24262__auto__;
}
})()){
return coll.cljs$core$INext$_next$arity$1(coll);
} else {
var x__24918__auto__ = (((coll == null))?null:coll);
return (function (){var or__24274__auto__ = (cljs.core._next[(function (){var G__32549 = x__24918__auto__;
return goog.typeOf(G__32549);
})()]);
if(or__24274__auto__){
return or__24274__auto__;
} else {
var or__24274__auto____$1 = (cljs.core._next["_"]);
if(or__24274__auto____$1){
return or__24274__auto____$1;
} else {
throw cljs.core.missing_protocol("INext.-next",coll);
}
}
})().call(null,coll);
}
});


cljs.core.ILookup = (function (){var obj32551 = {};
return obj32551;
})();

cljs.core._lookup = (function() {
var _lookup = null;
var _lookup__2 = (function (o,k){
if((function (){var and__24262__auto__ = o;
if(and__24262__auto__){
return o.cljs$core$ILookup$_lookup$arity$2;
} else {
return and__24262__auto__;
}
})()){
return o.cljs$core$ILookup$_lookup$arity$2(o,k);
} else {
var x__24918__auto__ = (((o == null))?null:o);
return (function (){var or__24274__auto__ = (cljs.core._lookup[(function (){var G__32557 = x__24918__auto__;
return goog.typeOf(G__32557);
})()]);
if(or__24274__auto__){
return or__24274__auto__;
} else {
var or__24274__auto____$1 = (cljs.core._lookup["_"]);
if(or__24274__auto____$1){
return or__24274__auto____$1;
} else {
throw cljs.core.missing_protocol("ILookup.-lookup",o);
}
}
})().call(null,o,k);
}
});
var _lookup__3 = (function (o,k,not_found){
if((function (){var and__24262__auto__ = o;
if(and__24262__auto__){
return o.cljs$core$ILookup$_lookup$arity$3;
} else {
return and__24262__auto__;
}
})()){
return o.cljs$core$ILookup$_lookup$arity$3(o,k,not_found);
} else {
var x__24918__auto__ = (((o == null))?null:o);
return (function (){var or__24274__auto__ = (cljs.core._lookup[(function (){var G__32559 = x__24918__auto__;
return goog.typeOf(G__32559);
})()]);
if(or__24274__auto__){
return or__24274__auto__;
} else {
var or__24274__auto____$1 = (cljs.core._lookup["_"]);
if(or__24274__auto____$1){
return or__24274__auto____$1;
} else {
throw cljs.core.missing_protocol("ILookup.-lookup",o);
}
}
})().call(null,o,k,not_found);
}
});
_lookup = function(o,k,not_found){
switch(arguments.length){
case 2:
return _lookup__2.call(this,o,k);
case 3:
return _lookup__3.call(this,o,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_lookup.cljs$core$IFn$_invoke$arity$2 = _lookup__2;
_lookup.cljs$core$IFn$_invoke$arity$3 = _lookup__3;
return _lookup;
})()
;


cljs.core.IAssociative = (function (){var obj32561 = {};
return obj32561;
})();

cljs.core._contains_key_QMARK_ = (function _contains_key_QMARK_(coll,k){
if((function (){var and__24262__auto__ = coll;
if(and__24262__auto__){
return coll.cljs$core$IAssociative$_contains_key_QMARK_$arity$2;
} else {
return and__24262__auto__;
}
})()){
return coll.cljs$core$IAssociative$_contains_key_QMARK_$arity$2(coll,k);
} else {
var x__24918__auto__ = (((coll == null))?null:coll);
return (function (){var or__24274__auto__ = (cljs.core._contains_key_QMARK_[(function (){var G__32565 = x__24918__auto__;
return goog.typeOf(G__32565);
})()]);
if(or__24274__auto__){
return or__24274__auto__;
} else {
var or__24274__auto____$1 = (cljs.core._contains_key_QMARK_["_"]);
if(or__24274__auto____$1){
return or__24274__auto____$1;
} else {
throw cljs.core.missing_protocol("IAssociative.-contains-key?",coll);
}
}
})().call(null,coll,k);
}
});

cljs.core._assoc = (function _assoc(coll,k,v){
if((function (){var and__24262__auto__ = coll;
if(and__24262__auto__){
return coll.cljs$core$IAssociative$_assoc$arity$3;
} else {
return and__24262__auto__;
}
})()){
return coll.cljs$core$IAssociative$_assoc$arity$3(coll,k,v);
} else {
var x__24918__auto__ = (((coll == null))?null:coll);
return (function (){var or__24274__auto__ = (cljs.core._assoc[(function (){var G__32569 = x__24918__auto__;
return goog.typeOf(G__32569);
})()]);
if(or__24274__auto__){
return or__24274__auto__;
} else {
var or__24274__auto____$1 = (cljs.core._assoc["_"]);
if(or__24274__auto____$1){
return or__24274__auto____$1;
} else {
throw cljs.core.missing_protocol("IAssociative.-assoc",coll);
}
}
})().call(null,coll,k,v);
}
});


cljs.core.IMap = (function (){var obj32571 = {};
return obj32571;
})();

cljs.core._dissoc = (function _dissoc(coll,k){
if((function (){var and__24262__auto__ = coll;
if(and__24262__auto__){
return coll.cljs$core$IMap$_dissoc$arity$2;
} else {
return and__24262__auto__;
}
})()){
return coll.cljs$core$IMap$_dissoc$arity$2(coll,k);
} else {
var x__24918__auto__ = (((coll == null))?null:coll);
return (function (){var or__24274__auto__ = (cljs.core._dissoc[(function (){var G__32575 = x__24918__auto__;
return goog.typeOf(G__32575);
})()]);
if(or__24274__auto__){
return or__24274__auto__;
} else {
var or__24274__auto____$1 = (cljs.core._dissoc["_"]);
if(or__24274__auto____$1){
return or__24274__auto____$1;
} else {
throw cljs.core.missing_protocol("IMap.-dissoc",coll);
}
}
})().call(null,coll,k);
}
});


cljs.core.IMapEntry = (function (){var obj32577 = {};
return obj32577;
})();

cljs.core._key = (function _key(coll){
if((function (){var and__24262__auto__ = coll;
if(and__24262__auto__){
return coll.cljs$core$IMapEntry$_key$arity$1;
} else {
return and__24262__auto__;
}
})()){
return coll.cljs$core$IMapEntry$_key$arity$1(coll);
} else {
var x__24918__auto__ = (((coll == null))?null:coll);
return (function (){var or__24274__auto__ = (cljs.core._key[(function (){var G__32581 = x__24918__auto__;
return goog.typeOf(G__32581);
})()]);
if(or__24274__auto__){
return or__24274__auto__;
} else {
var or__24274__auto____$1 = (cljs.core._key["_"]);
if(or__24274__auto____$1){
return or__24274__auto____$1;
} else {
throw cljs.core.missing_protocol("IMapEntry.-key",coll);
}
}
})().call(null,coll);
}
});

cljs.core._val = (function _val(coll){
if((function (){var and__24262__auto__ = coll;
if(and__24262__auto__){
return coll.cljs$core$IMapEntry$_val$arity$1;
} else {
return and__24262__auto__;
}
})()){
return coll.cljs$core$IMapEntry$_val$arity$1(coll);
} else {
var x__24918__auto__ = (((coll == null))?null:coll);
return (function (){var or__24274__auto__ = (cljs.core._val[(function (){var G__32585 = x__24918__auto__;
return goog.typeOf(G__32585);
})()]);
if(or__24274__auto__){
return or__24274__auto__;
} else {
var or__24274__auto____$1 = (cljs.core._val["_"]);
if(or__24274__auto____$1){
return or__24274__auto____$1;
} else {
throw cljs.core.missing_protocol("IMapEntry.-val",coll);
}
}
})().call(null,coll);
}
});


cljs.core.ISet = (function (){var obj32587 = {};
return obj32587;
})();

cljs.core._disjoin = (function _disjoin(coll,v){
if((function (){var and__24262__auto__ = coll;
if(and__24262__auto__){
return coll.cljs$core$ISet$_disjoin$arity$2;
} else {
return and__24262__auto__;
}
})()){
return coll.cljs$core$ISet$_disjoin$arity$2(coll,v);
} else {
var x__24918__auto__ = (((coll == null))?null:coll);
return (function (){var or__24274__auto__ = (cljs.core._disjoin[(function (){var G__32591 = x__24918__auto__;
return goog.typeOf(G__32591);
})()]);
if(or__24274__auto__){
return or__24274__auto__;
} else {
var or__24274__auto____$1 = (cljs.core._disjoin["_"]);
if(or__24274__auto____$1){
return or__24274__auto____$1;
} else {
throw cljs.core.missing_protocol("ISet.-disjoin",coll);
}
}
})().call(null,coll,v);
}
});


cljs.core.IStack = (function (){var obj32593 = {};
return obj32593;
})();

cljs.core._peek = (function _peek(coll){
if((function (){var and__24262__auto__ = coll;
if(and__24262__auto__){
return coll.cljs$core$IStack$_peek$arity$1;
} else {
return and__24262__auto__;
}
})()){
return coll.cljs$core$IStack$_peek$arity$1(coll);
} else {
var x__24918__auto__ = (((coll == null))?null:coll);
return (function (){var or__24274__auto__ = (cljs.core._peek[(function (){var G__32597 = x__24918__auto__;
return goog.typeOf(G__32597);
})()]);
if(or__24274__auto__){
return or__24274__auto__;
} else {
var or__24274__auto____$1 = (cljs.core._peek["_"]);
if(or__24274__auto____$1){
return or__24274__auto____$1;
} else {
throw cljs.core.missing_protocol("IStack.-peek",coll);
}
}
})().call(null,coll);
}
});

cljs.core._pop = (function _pop(coll){
if((function (){var and__24262__auto__ = coll;
if(and__24262__auto__){
return coll.cljs$core$IStack$_pop$arity$1;
} else {
return and__24262__auto__;
}
})()){
return coll.cljs$core$IStack$_pop$arity$1(coll);
} else {
var x__24918__auto__ = (((coll == null))?null:coll);
return (function (){var or__24274__auto__ = (cljs.core._pop[(function (){var G__32601 = x__24918__auto__;
return goog.typeOf(G__32601);
})()]);
if(or__24274__auto__){
return or__24274__auto__;
} else {
var or__24274__auto____$1 = (cljs.core._pop["_"]);
if(or__24274__auto____$1){
return or__24274__auto____$1;
} else {
throw cljs.core.missing_protocol("IStack.-pop",coll);
}
}
})().call(null,coll);
}
});


cljs.core.IVector = (function (){var obj32603 = {};
return obj32603;
})();

cljs.core._assoc_n = (function _assoc_n(coll,n,val){
if((function (){var and__24262__auto__ = coll;
if(and__24262__auto__){
return coll.cljs$core$IVector$_assoc_n$arity$3;
} else {
return and__24262__auto__;
}
})()){
return coll.cljs$core$IVector$_assoc_n$arity$3(coll,n,val);
} else {
var x__24918__auto__ = (((coll == null))?null:coll);
return (function (){var or__24274__auto__ = (cljs.core._assoc_n[(function (){var G__32607 = x__24918__auto__;
return goog.typeOf(G__32607);
})()]);
if(or__24274__auto__){
return or__24274__auto__;
} else {
var or__24274__auto____$1 = (cljs.core._assoc_n["_"]);
if(or__24274__auto____$1){
return or__24274__auto____$1;
} else {
throw cljs.core.missing_protocol("IVector.-assoc-n",coll);
}
}
})().call(null,coll,n,val);
}
});


cljs.core.IDeref = (function (){var obj32609 = {};
return obj32609;
})();

cljs.core._deref = (function _deref(o){
if((function (){var and__24262__auto__ = o;
if(and__24262__auto__){
return o.cljs$core$IDeref$_deref$arity$1;
} else {
return and__24262__auto__;
}
})()){
return o.cljs$core$IDeref$_deref$arity$1(o);
} else {
var x__24918__auto__ = (((o == null))?null:o);
return (function (){var or__24274__auto__ = (cljs.core._deref[(function (){var G__32613 = x__24918__auto__;
return goog.typeOf(G__32613);
})()]);
if(or__24274__auto__){
return or__24274__auto__;
} else {
var or__24274__auto____$1 = (cljs.core._deref["_"]);
if(or__24274__auto____$1){
return or__24274__auto____$1;
} else {
throw cljs.core.missing_protocol("IDeref.-deref",o);
}
}
})().call(null,o);
}
});


cljs.core.IDerefWithTimeout = (function (){var obj32615 = {};
return obj32615;
})();

cljs.core._deref_with_timeout = (function _deref_with_timeout(o,msec,timeout_val){
if((function (){var and__24262__auto__ = o;
if(and__24262__auto__){
return o.cljs$core$IDerefWithTimeout$_deref_with_timeout$arity$3;
} else {
return and__24262__auto__;
}
})()){
return o.cljs$core$IDerefWithTimeout$_deref_with_timeout$arity$3(o,msec,timeout_val);
} else {
var x__24918__auto__ = (((o == null))?null:o);
return (function (){var or__24274__auto__ = (cljs.core._deref_with_timeout[(function (){var G__32619 = x__24918__auto__;
return goog.typeOf(G__32619);
})()]);
if(or__24274__auto__){
return or__24274__auto__;
} else {
var or__24274__auto____$1 = (cljs.core._deref_with_timeout["_"]);
if(or__24274__auto____$1){
return or__24274__auto____$1;
} else {
throw cljs.core.missing_protocol("IDerefWithTimeout.-deref-with-timeout",o);
}
}
})().call(null,o,msec,timeout_val);
}
});


cljs.core.IMeta = (function (){var obj32621 = {};
return obj32621;
})();

cljs.core._meta = (function _meta(o){
if((function (){var and__24262__auto__ = o;
if(and__24262__auto__){
return o.cljs$core$IMeta$_meta$arity$1;
} else {
return and__24262__auto__;
}
})()){
return o.cljs$core$IMeta$_meta$arity$1(o);
} else {
var x__24918__auto__ = (((o == null))?null:o);
return (function (){var or__24274__auto__ = (cljs.core._meta[(function (){var G__32625 = x__24918__auto__;
return goog.typeOf(G__32625);
})()]);
if(or__24274__auto__){
return or__24274__auto__;
} else {
var or__24274__auto____$1 = (cljs.core._meta["_"]);
if(or__24274__auto____$1){
return or__24274__auto____$1;
} else {
throw cljs.core.missing_protocol("IMeta.-meta",o);
}
}
})().call(null,o);
}
});


cljs.core.IWithMeta = (function (){var obj32627 = {};
return obj32627;
})();

cljs.core._with_meta = (function _with_meta(o,meta){
if((function (){var and__24262__auto__ = o;
if(and__24262__auto__){
return o.cljs$core$IWithMeta$_with_meta$arity$2;
} else {
return and__24262__auto__;
}
})()){
return o.cljs$core$IWithMeta$_with_meta$arity$2(o,meta);
} else {
var x__24918__auto__ = (((o == null))?null:o);
return (function (){var or__24274__auto__ = (cljs.core._with_meta[(function (){var G__32631 = x__24918__auto__;
return goog.typeOf(G__32631);
})()]);
if(or__24274__auto__){
return or__24274__auto__;
} else {
var or__24274__auto____$1 = (cljs.core._with_meta["_"]);
if(or__24274__auto____$1){
return or__24274__auto____$1;
} else {
throw cljs.core.missing_protocol("IWithMeta.-with-meta",o);
}
}
})().call(null,o,meta);
}
});


cljs.core.IReduce = (function (){var obj32633 = {};
return obj32633;
})();

cljs.core._reduce = (function() {
var _reduce = null;
var _reduce__2 = (function (coll,f){
if((function (){var and__24262__auto__ = coll;
if(and__24262__auto__){
return coll.cljs$core$IReduce$_reduce$arity$2;
} else {
return and__24262__auto__;
}
})()){
return coll.cljs$core$IReduce$_reduce$arity$2(coll,f);
} else {
var x__24918__auto__ = (((coll == null))?null:coll);
return (function (){var or__24274__auto__ = (cljs.core._reduce[(function (){var G__32639 = x__24918__auto__;
return goog.typeOf(G__32639);
})()]);
if(or__24274__auto__){
return or__24274__auto__;
} else {
var or__24274__auto____$1 = (cljs.core._reduce["_"]);
if(or__24274__auto____$1){
return or__24274__auto____$1;
} else {
throw cljs.core.missing_protocol("IReduce.-reduce",coll);
}
}
})().call(null,coll,f);
}
});
var _reduce__3 = (function (coll,f,start){
if((function (){var and__24262__auto__ = coll;
if(and__24262__auto__){
return coll.cljs$core$IReduce$_reduce$arity$3;
} else {
return and__24262__auto__;
}
})()){
return coll.cljs$core$IReduce$_reduce$arity$3(coll,f,start);
} else {
var x__24918__auto__ = (((coll == null))?null:coll);
return (function (){var or__24274__auto__ = (cljs.core._reduce[(function (){var G__32641 = x__24918__auto__;
return goog.typeOf(G__32641);
})()]);
if(or__24274__auto__){
return or__24274__auto__;
} else {
var or__24274__auto____$1 = (cljs.core._reduce["_"]);
if(or__24274__auto____$1){
return or__24274__auto____$1;
} else {
throw cljs.core.missing_protocol("IReduce.-reduce",coll);
}
}
})().call(null,coll,f,start);
}
});
_reduce = function(coll,f,start){
switch(arguments.length){
case 2:
return _reduce__2.call(this,coll,f);
case 3:
return _reduce__3.call(this,coll,f,start);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_reduce.cljs$core$IFn$_invoke$arity$2 = _reduce__2;
_reduce.cljs$core$IFn$_invoke$arity$3 = _reduce__3;
return _reduce;
})()
;


cljs.core.IKVReduce = (function (){var obj32643 = {};
return obj32643;
})();

cljs.core._kv_reduce = (function _kv_reduce(coll,f,init){
if((function (){var and__24262__auto__ = coll;
if(and__24262__auto__){
return coll.cljs$core$IKVReduce$_kv_reduce$arity$3;
} else {
return and__24262__auto__;
}
})()){
return coll.cljs$core$IKVReduce$_kv_reduce$arity$3(coll,f,init);
} else {
var x__24918__auto__ = (((coll == null))?null:coll);
return (function (){var or__24274__auto__ = (cljs.core._kv_reduce[(function (){var G__32647 = x__24918__auto__;
return goog.typeOf(G__32647);
})()]);
if(or__24274__auto__){
return or__24274__auto__;
} else {
var or__24274__auto____$1 = (cljs.core._kv_reduce["_"]);
if(or__24274__auto____$1){
return or__24274__auto____$1;
} else {
throw cljs.core.missing_protocol("IKVReduce.-kv-reduce",coll);
}
}
})().call(null,coll,f,init);
}
});


cljs.core.IEquiv = (function (){var obj32649 = {};
return obj32649;
})();

cljs.core._equiv = (function _equiv(o,other){
if((function (){var and__24262__auto__ = o;
if(and__24262__auto__){
return o.cljs$core$IEquiv$_equiv$arity$2;
} else {
return and__24262__auto__;
}
})()){
return o.cljs$core$IEquiv$_equiv$arity$2(o,other);
} else {
var x__24918__auto__ = (((o == null))?null:o);
return (function (){var or__24274__auto__ = (cljs.core._equiv[(function (){var G__32653 = x__24918__auto__;
return goog.typeOf(G__32653);
})()]);
if(or__24274__auto__){
return or__24274__auto__;
} else {
var or__24274__auto____$1 = (cljs.core._equiv["_"]);
if(or__24274__auto____$1){
return or__24274__auto____$1;
} else {
throw cljs.core.missing_protocol("IEquiv.-equiv",o);
}
}
})().call(null,o,other);
}
});


cljs.core.IHash = (function (){var obj32655 = {};
return obj32655;
})();

cljs.core._hash = (function _hash(o){
if((function (){var and__24262__auto__ = o;
if(and__24262__auto__){
return o.cljs$core$IHash$_hash$arity$1;
} else {
return and__24262__auto__;
}
})()){
return o.cljs$core$IHash$_hash$arity$1(o);
} else {
var x__24918__auto__ = (((o == null))?null:o);
return (function (){var or__24274__auto__ = (cljs.core._hash[(function (){var G__32659 = x__24918__auto__;
return goog.typeOf(G__32659);
})()]);
if(or__24274__auto__){
return or__24274__auto__;
} else {
var or__24274__auto____$1 = (cljs.core._hash["_"]);
if(or__24274__auto____$1){
return or__24274__auto____$1;
} else {
throw cljs.core.missing_protocol("IHash.-hash",o);
}
}
})().call(null,o);
}
});


cljs.core.ISeqable = (function (){var obj32661 = {};
return obj32661;
})();

cljs.core._seq = (function _seq(o){
if((function (){var and__24262__auto__ = o;
if(and__24262__auto__){
return o.cljs$core$ISeqable$_seq$arity$1;
} else {
return and__24262__auto__;
}
})()){
return o.cljs$core$ISeqable$_seq$arity$1(o);
} else {
var x__24918__auto__ = (((o == null))?null:o);
return (function (){var or__24274__auto__ = (cljs.core._seq[(function (){var G__32665 = x__24918__auto__;
return goog.typeOf(G__32665);
})()]);
if(or__24274__auto__){
return or__24274__auto__;
} else {
var or__24274__auto____$1 = (cljs.core._seq["_"]);
if(or__24274__auto____$1){
return or__24274__auto____$1;
} else {
throw cljs.core.missing_protocol("ISeqable.-seq",o);
}
}
})().call(null,o);
}
});


cljs.core.ISequential = (function (){var obj32667 = {};
return obj32667;
})();


cljs.core.IList = (function (){var obj32669 = {};
return obj32669;
})();


cljs.core.IRecord = (function (){var obj32671 = {};
return obj32671;
})();


cljs.core.IReversible = (function (){var obj32673 = {};
return obj32673;
})();

cljs.core._rseq = (function _rseq(coll){
if((function (){var and__24262__auto__ = coll;
if(and__24262__auto__){
return coll.cljs$core$IReversible$_rseq$arity$1;
} else {
return and__24262__auto__;
}
})()){
return coll.cljs$core$IReversible$_rseq$arity$1(coll);
} else {
var x__24918__auto__ = (((coll == null))?null:coll);
return (function (){var or__24274__auto__ = (cljs.core._rseq[(function (){var G__32677 = x__24918__auto__;
return goog.typeOf(G__32677);
})()]);
if(or__24274__auto__){
return or__24274__auto__;
} else {
var or__24274__auto____$1 = (cljs.core._rseq["_"]);
if(or__24274__auto____$1){
return or__24274__auto____$1;
} else {
throw cljs.core.missing_protocol("IReversible.-rseq",coll);
}
}
})().call(null,coll);
}
});


cljs.core.ISorted = (function (){var obj32679 = {};
return obj32679;
})();

cljs.core._sorted_seq = (function _sorted_seq(coll,ascending_QMARK_){
if((function (){var and__24262__auto__ = coll;
if(and__24262__auto__){
return coll.cljs$core$ISorted$_sorted_seq$arity$2;
} else {
return and__24262__auto__;
}
})()){
return coll.cljs$core$ISorted$_sorted_seq$arity$2(coll,ascending_QMARK_);
} else {
var x__24918__auto__ = (((coll == null))?null:coll);
return (function (){var or__24274__auto__ = (cljs.core._sorted_seq[(function (){var G__32683 = x__24918__auto__;
return goog.typeOf(G__32683);
})()]);
if(or__24274__auto__){
return or__24274__auto__;
} else {
var or__24274__auto____$1 = (cljs.core._sorted_seq["_"]);
if(or__24274__auto____$1){
return or__24274__auto____$1;
} else {
throw cljs.core.missing_protocol("ISorted.-sorted-seq",coll);
}
}
})().call(null,coll,ascending_QMARK_);
}
});

cljs.core._sorted_seq_from = (function _sorted_seq_from(coll,k,ascending_QMARK_){
if((function (){var and__24262__auto__ = coll;
if(and__24262__auto__){
return coll.cljs$core$ISorted$_sorted_seq_from$arity$3;
} else {
return and__24262__auto__;
}
})()){
return coll.cljs$core$ISorted$_sorted_seq_from$arity$3(coll,k,ascending_QMARK_);
} else {
var x__24918__auto__ = (((coll == null))?null:coll);
return (function (){var or__24274__auto__ = (cljs.core._sorted_seq_from[(function (){var G__32687 = x__24918__auto__;
return goog.typeOf(G__32687);
})()]);
if(or__24274__auto__){
return or__24274__auto__;
} else {
var or__24274__auto____$1 = (cljs.core._sorted_seq_from["_"]);
if(or__24274__auto____$1){
return or__24274__auto____$1;
} else {
throw cljs.core.missing_protocol("ISorted.-sorted-seq-from",coll);
}
}
})().call(null,coll,k,ascending_QMARK_);
}
});

cljs.core._entry_key = (function _entry_key(coll,entry){
if((function (){var and__24262__auto__ = coll;
if(and__24262__auto__){
return coll.cljs$core$ISorted$_entry_key$arity$2;
} else {
return and__24262__auto__;
}
})()){
return coll.cljs$core$ISorted$_entry_key$arity$2(coll,entry);
} else {
var x__24918__auto__ = (((coll == null))?null:coll);
return (function (){var or__24274__auto__ = (cljs.core._entry_key[(function (){var G__32691 = x__24918__auto__;
return goog.typeOf(G__32691);
})()]);
if(or__24274__auto__){
return or__24274__auto__;
} else {
var or__24274__auto____$1 = (cljs.core._entry_key["_"]);
if(or__24274__auto____$1){
return or__24274__auto____$1;
} else {
throw cljs.core.missing_protocol("ISorted.-entry-key",coll);
}
}
})().call(null,coll,entry);
}
});

cljs.core._comparator = (function _comparator(coll){
if((function (){var and__24262__auto__ = coll;
if(and__24262__auto__){
return coll.cljs$core$ISorted$_comparator$arity$1;
} else {
return and__24262__auto__;
}
})()){
return coll.cljs$core$ISorted$_comparator$arity$1(coll);
} else {
var x__24918__auto__ = (((coll == null))?null:coll);
return (function (){var or__24274__auto__ = (cljs.core._comparator[(function (){var G__32695 = x__24918__auto__;
return goog.typeOf(G__32695);
})()]);
if(or__24274__auto__){
return or__24274__auto__;
} else {
var or__24274__auto____$1 = (cljs.core._comparator["_"]);
if(or__24274__auto____$1){
return or__24274__auto____$1;
} else {
throw cljs.core.missing_protocol("ISorted.-comparator",coll);
}
}
})().call(null,coll);
}
});


cljs.core.IWriter = (function (){var obj32697 = {};
return obj32697;
})();

cljs.core._write = (function _write(writer,s){
if((function (){var and__24262__auto__ = writer;
if(and__24262__auto__){
return writer.cljs$core$IWriter$_write$arity$2;
} else {
return and__24262__auto__;
}
})()){
return writer.cljs$core$IWriter$_write$arity$2(writer,s);
} else {
var x__24918__auto__ = (((writer == null))?null:writer);
return (function (){var or__24274__auto__ = (cljs.core._write[(function (){var G__32701 = x__24918__auto__;
return goog.typeOf(G__32701);
})()]);
if(or__24274__auto__){
return or__24274__auto__;
} else {
var or__24274__auto____$1 = (cljs.core._write["_"]);
if(or__24274__auto____$1){
return or__24274__auto____$1;
} else {
throw cljs.core.missing_protocol("IWriter.-write",writer);
}
}
})().call(null,writer,s);
}
});

cljs.core._flush = (function _flush(writer){
if((function (){var and__24262__auto__ = writer;
if(and__24262__auto__){
return writer.cljs$core$IWriter$_flush$arity$1;
} else {
return and__24262__auto__;
}
})()){
return writer.cljs$core$IWriter$_flush$arity$1(writer);
} else {
var x__24918__auto__ = (((writer == null))?null:writer);
return (function (){var or__24274__auto__ = (cljs.core._flush[(function (){var G__32705 = x__24918__auto__;
return goog.typeOf(G__32705);
})()]);
if(or__24274__auto__){
return or__24274__auto__;
} else {
var or__24274__auto____$1 = (cljs.core._flush["_"]);
if(or__24274__auto____$1){
return or__24274__auto____$1;
} else {
throw cljs.core.missing_protocol("IWriter.-flush",writer);
}
}
})().call(null,writer);
}
});


cljs.core.IPrintWithWriter = (function (){var obj32707 = {};
return obj32707;
})();

cljs.core._pr_writer = (function _pr_writer(o,writer,opts){
if((function (){var and__24262__auto__ = o;
if(and__24262__auto__){
return o.cljs$core$IPrintWithWriter$_pr_writer$arity$3;
} else {
return and__24262__auto__;
}
})()){
return o.cljs$core$IPrintWithWriter$_pr_writer$arity$3(o,writer,opts);
} else {
var x__24918__auto__ = (((o == null))?null:o);
return (function (){var or__24274__auto__ = (cljs.core._pr_writer[(function (){var G__32711 = x__24918__auto__;
return goog.typeOf(G__32711);
})()]);
if(or__24274__auto__){
return or__24274__auto__;
} else {
var or__24274__auto____$1 = (cljs.core._pr_writer["_"]);
if(or__24274__auto____$1){
return or__24274__auto____$1;
} else {
throw cljs.core.missing_protocol("IPrintWithWriter.-pr-writer",o);
}
}
})().call(null,o,writer,opts);
}
});


cljs.core.IPending = (function (){var obj32713 = {};
return obj32713;
})();

cljs.core._realized_QMARK_ = (function _realized_QMARK_(d){
if((function (){var and__24262__auto__ = d;
if(and__24262__auto__){
return d.cljs$core$IPending$_realized_QMARK_$arity$1;
} else {
return and__24262__auto__;
}
})()){
return d.cljs$core$IPending$_realized_QMARK_$arity$1(d);
} else {
var x__24918__auto__ = (((d == null))?null:d);
return (function (){var or__24274__auto__ = (cljs.core._realized_QMARK_[(function (){var G__32717 = x__24918__auto__;
return goog.typeOf(G__32717);
})()]);
if(or__24274__auto__){
return or__24274__auto__;
} else {
var or__24274__auto____$1 = (cljs.core._realized_QMARK_["_"]);
if(or__24274__auto____$1){
return or__24274__auto____$1;
} else {
throw cljs.core.missing_protocol("IPending.-realized?",d);
}
}
})().call(null,d);
}
});


cljs.core.IWatchable = (function (){var obj32719 = {};
return obj32719;
})();

cljs.core._notify_watches = (function _notify_watches(this$,oldval,newval){
if((function (){var and__24262__auto__ = this$;
if(and__24262__auto__){
return this$.cljs$core$IWatchable$_notify_watches$arity$3;
} else {
return and__24262__auto__;
}
})()){
return this$.cljs$core$IWatchable$_notify_watches$arity$3(this$,oldval,newval);
} else {
var x__24918__auto__ = (((this$ == null))?null:this$);
return (function (){var or__24274__auto__ = (cljs.core._notify_watches[(function (){var G__32723 = x__24918__auto__;
return goog.typeOf(G__32723);
})()]);
if(or__24274__auto__){
return or__24274__auto__;
} else {
var or__24274__auto____$1 = (cljs.core._notify_watches["_"]);
if(or__24274__auto____$1){
return or__24274__auto____$1;
} else {
throw cljs.core.missing_protocol("IWatchable.-notify-watches",this$);
}
}
})().call(null,this$,oldval,newval);
}
});

cljs.core._add_watch = (function _add_watch(this$,key,f){
if((function (){var and__24262__auto__ = this$;
if(and__24262__auto__){
return this$.cljs$core$IWatchable$_add_watch$arity$3;
} else {
return and__24262__auto__;
}
})()){
return this$.cljs$core$IWatchable$_add_watch$arity$3(this$,key,f);
} else {
var x__24918__auto__ = (((this$ == null))?null:this$);
return (function (){var or__24274__auto__ = (cljs.core._add_watch[(function (){var G__32727 = x__24918__auto__;
return goog.typeOf(G__32727);
})()]);
if(or__24274__auto__){
return or__24274__auto__;
} else {
var or__24274__auto____$1 = (cljs.core._add_watch["_"]);
if(or__24274__auto____$1){
return or__24274__auto____$1;
} else {
throw cljs.core.missing_protocol("IWatchable.-add-watch",this$);
}
}
})().call(null,this$,key,f);
}
});

cljs.core._remove_watch = (function _remove_watch(this$,key){
if((function (){var and__24262__auto__ = this$;
if(and__24262__auto__){
return this$.cljs$core$IWatchable$_remove_watch$arity$2;
} else {
return and__24262__auto__;
}
})()){
return this$.cljs$core$IWatchable$_remove_watch$arity$2(this$,key);
} else {
var x__24918__auto__ = (((this$ == null))?null:this$);
return (function (){var or__24274__auto__ = (cljs.core._remove_watch[(function (){var G__32731 = x__24918__auto__;
return goog.typeOf(G__32731);
})()]);
if(or__24274__auto__){
return or__24274__auto__;
} else {
var or__24274__auto____$1 = (cljs.core._remove_watch["_"]);
if(or__24274__auto____$1){
return or__24274__auto____$1;
} else {
throw cljs.core.missing_protocol("IWatchable.-remove-watch",this$);
}
}
})().call(null,this$,key);
}
});


cljs.core.IEditableCollection = (function (){var obj32733 = {};
return obj32733;
})();

cljs.core._as_transient = (function _as_transient(coll){
if((function (){var and__24262__auto__ = coll;
if(and__24262__auto__){
return coll.cljs$core$IEditableCollection$_as_transient$arity$1;
} else {
return and__24262__auto__;
}
})()){
return coll.cljs$core$IEditableCollection$_as_transient$arity$1(coll);
} else {
var x__24918__auto__ = (((coll == null))?null:coll);
return (function (){var or__24274__auto__ = (cljs.core._as_transient[(function (){var G__32737 = x__24918__auto__;
return goog.typeOf(G__32737);
})()]);
if(or__24274__auto__){
return or__24274__auto__;
} else {
var or__24274__auto____$1 = (cljs.core._as_transient["_"]);
if(or__24274__auto____$1){
return or__24274__auto____$1;
} else {
throw cljs.core.missing_protocol("IEditableCollection.-as-transient",coll);
}
}
})().call(null,coll);
}
});


cljs.core.ITransientCollection = (function (){var obj32739 = {};
return obj32739;
})();

cljs.core._conj_BANG_ = (function _conj_BANG_(tcoll,val){
if((function (){var and__24262__auto__ = tcoll;
if(and__24262__auto__){
return tcoll.cljs$core$ITransientCollection$_conj_BANG_$arity$2;
} else {
return and__24262__auto__;
}
})()){
return tcoll.cljs$core$ITransientCollection$_conj_BANG_$arity$2(tcoll,val);
} else {
var x__24918__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__24274__auto__ = (cljs.core._conj_BANG_[(function (){var G__32743 = x__24918__auto__;
return goog.typeOf(G__32743);
})()]);
if(or__24274__auto__){
return or__24274__auto__;
} else {
var or__24274__auto____$1 = (cljs.core._conj_BANG_["_"]);
if(or__24274__auto____$1){
return or__24274__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientCollection.-conj!",tcoll);
}
}
})().call(null,tcoll,val);
}
});

cljs.core._persistent_BANG_ = (function _persistent_BANG_(tcoll){
if((function (){var and__24262__auto__ = tcoll;
if(and__24262__auto__){
return tcoll.cljs$core$ITransientCollection$_persistent_BANG_$arity$1;
} else {
return and__24262__auto__;
}
})()){
return tcoll.cljs$core$ITransientCollection$_persistent_BANG_$arity$1(tcoll);
} else {
var x__24918__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__24274__auto__ = (cljs.core._persistent_BANG_[(function (){var G__32747 = x__24918__auto__;
return goog.typeOf(G__32747);
})()]);
if(or__24274__auto__){
return or__24274__auto__;
} else {
var or__24274__auto____$1 = (cljs.core._persistent_BANG_["_"]);
if(or__24274__auto____$1){
return or__24274__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientCollection.-persistent!",tcoll);
}
}
})().call(null,tcoll);
}
});


cljs.core.ITransientAssociative = (function (){var obj32749 = {};
return obj32749;
})();

cljs.core._assoc_BANG_ = (function _assoc_BANG_(tcoll,key,val){
if((function (){var and__24262__auto__ = tcoll;
if(and__24262__auto__){
return tcoll.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3;
} else {
return and__24262__auto__;
}
})()){
return tcoll.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3(tcoll,key,val);
} else {
var x__24918__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__24274__auto__ = (cljs.core._assoc_BANG_[(function (){var G__32753 = x__24918__auto__;
return goog.typeOf(G__32753);
})()]);
if(or__24274__auto__){
return or__24274__auto__;
} else {
var or__24274__auto____$1 = (cljs.core._assoc_BANG_["_"]);
if(or__24274__auto____$1){
return or__24274__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientAssociative.-assoc!",tcoll);
}
}
})().call(null,tcoll,key,val);
}
});


cljs.core.ITransientMap = (function (){var obj32755 = {};
return obj32755;
})();

cljs.core._dissoc_BANG_ = (function _dissoc_BANG_(tcoll,key){
if((function (){var and__24262__auto__ = tcoll;
if(and__24262__auto__){
return tcoll.cljs$core$ITransientMap$_dissoc_BANG_$arity$2;
} else {
return and__24262__auto__;
}
})()){
return tcoll.cljs$core$ITransientMap$_dissoc_BANG_$arity$2(tcoll,key);
} else {
var x__24918__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__24274__auto__ = (cljs.core._dissoc_BANG_[(function (){var G__32759 = x__24918__auto__;
return goog.typeOf(G__32759);
})()]);
if(or__24274__auto__){
return or__24274__auto__;
} else {
var or__24274__auto____$1 = (cljs.core._dissoc_BANG_["_"]);
if(or__24274__auto____$1){
return or__24274__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientMap.-dissoc!",tcoll);
}
}
})().call(null,tcoll,key);
}
});


cljs.core.ITransientVector = (function (){var obj32761 = {};
return obj32761;
})();

cljs.core._assoc_n_BANG_ = (function _assoc_n_BANG_(tcoll,n,val){
if((function (){var and__24262__auto__ = tcoll;
if(and__24262__auto__){
return tcoll.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3;
} else {
return and__24262__auto__;
}
})()){
return tcoll.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3(tcoll,n,val);
} else {
var x__24918__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__24274__auto__ = (cljs.core._assoc_n_BANG_[(function (){var G__32765 = x__24918__auto__;
return goog.typeOf(G__32765);
})()]);
if(or__24274__auto__){
return or__24274__auto__;
} else {
var or__24274__auto____$1 = (cljs.core._assoc_n_BANG_["_"]);
if(or__24274__auto____$1){
return or__24274__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientVector.-assoc-n!",tcoll);
}
}
})().call(null,tcoll,n,val);
}
});

cljs.core._pop_BANG_ = (function _pop_BANG_(tcoll){
if((function (){var and__24262__auto__ = tcoll;
if(and__24262__auto__){
return tcoll.cljs$core$ITransientVector$_pop_BANG_$arity$1;
} else {
return and__24262__auto__;
}
})()){
return tcoll.cljs$core$ITransientVector$_pop_BANG_$arity$1(tcoll);
} else {
var x__24918__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__24274__auto__ = (cljs.core._pop_BANG_[(function (){var G__32769 = x__24918__auto__;
return goog.typeOf(G__32769);
})()]);
if(or__24274__auto__){
return or__24274__auto__;
} else {
var or__24274__auto____$1 = (cljs.core._pop_BANG_["_"]);
if(or__24274__auto____$1){
return or__24274__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientVector.-pop!",tcoll);
}
}
})().call(null,tcoll);
}
});


cljs.core.ITransientSet = (function (){var obj32771 = {};
return obj32771;
})();

cljs.core._disjoin_BANG_ = (function _disjoin_BANG_(tcoll,v){
if((function (){var and__24262__auto__ = tcoll;
if(and__24262__auto__){
return tcoll.cljs$core$ITransientSet$_disjoin_BANG_$arity$2;
} else {
return and__24262__auto__;
}
})()){
return tcoll.cljs$core$ITransientSet$_disjoin_BANG_$arity$2(tcoll,v);
} else {
var x__24918__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__24274__auto__ = (cljs.core._disjoin_BANG_[(function (){var G__32775 = x__24918__auto__;
return goog.typeOf(G__32775);
})()]);
if(or__24274__auto__){
return or__24274__auto__;
} else {
var or__24274__auto____$1 = (cljs.core._disjoin_BANG_["_"]);
if(or__24274__auto____$1){
return or__24274__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientSet.-disjoin!",tcoll);
}
}
})().call(null,tcoll,v);
}
});


cljs.core.IComparable = (function (){var obj32777 = {};
return obj32777;
})();

cljs.core._compare = (function _compare(x,y){
if((function (){var and__24262__auto__ = x;
if(and__24262__auto__){
return x.cljs$core$IComparable$_compare$arity$2;
} else {
return and__24262__auto__;
}
})()){
return x.cljs$core$IComparable$_compare$arity$2(x,y);
} else {
var x__24918__auto__ = (((x == null))?null:x);
return (function (){var or__24274__auto__ = (cljs.core._compare[(function (){var G__32781 = x__24918__auto__;
return goog.typeOf(G__32781);
})()]);
if(or__24274__auto__){
return or__24274__auto__;
} else {
var or__24274__auto____$1 = (cljs.core._compare["_"]);
if(or__24274__auto____$1){
return or__24274__auto____$1;
} else {
throw cljs.core.missing_protocol("IComparable.-compare",x);
}
}
})().call(null,x,y);
}
});


cljs.core.IChunk = (function (){var obj32783 = {};
return obj32783;
})();

cljs.core._drop_first = (function _drop_first(coll){
if((function (){var and__24262__auto__ = coll;
if(and__24262__auto__){
return coll.cljs$core$IChunk$_drop_first$arity$1;
} else {
return and__24262__auto__;
}
})()){
return coll.cljs$core$IChunk$_drop_first$arity$1(coll);
} else {
var x__24918__auto__ = (((coll == null))?null:coll);
return (function (){var or__24274__auto__ = (cljs.core._drop_first[(function (){var G__32787 = x__24918__auto__;
return goog.typeOf(G__32787);
})()]);
if(or__24274__auto__){
return or__24274__auto__;
} else {
var or__24274__auto____$1 = (cljs.core._drop_first["_"]);
if(or__24274__auto____$1){
return or__24274__auto____$1;
} else {
throw cljs.core.missing_protocol("IChunk.-drop-first",coll);
}
}
})().call(null,coll);
}
});


cljs.core.IChunkedSeq = (function (){var obj32789 = {};
return obj32789;
})();

cljs.core._chunked_first = (function _chunked_first(coll){
if((function (){var and__24262__auto__ = coll;
if(and__24262__auto__){
return coll.cljs$core$IChunkedSeq$_chunked_first$arity$1;
} else {
return and__24262__auto__;
}
})()){
return coll.cljs$core$IChunkedSeq$_chunked_first$arity$1(coll);
} else {
var x__24918__auto__ = (((coll == null))?null:coll);
return (function (){var or__24274__auto__ = (cljs.core._chunked_first[(function (){var G__32793 = x__24918__auto__;
return goog.typeOf(G__32793);
})()]);
if(or__24274__auto__){
return or__24274__auto__;
} else {
var or__24274__auto____$1 = (cljs.core._chunked_first["_"]);
if(or__24274__auto____$1){
return or__24274__auto____$1;
} else {
throw cljs.core.missing_protocol("IChunkedSeq.-chunked-first",coll);
}
}
})().call(null,coll);
}
});

cljs.core._chunked_rest = (function _chunked_rest(coll){
if((function (){var and__24262__auto__ = coll;
if(and__24262__auto__){
return coll.cljs$core$IChunkedSeq$_chunked_rest$arity$1;
} else {
return and__24262__auto__;
}
})()){
return coll.cljs$core$IChunkedSeq$_chunked_rest$arity$1(coll);
} else {
var x__24918__auto__ = (((coll == null))?null:coll);
return (function (){var or__24274__auto__ = (cljs.core._chunked_rest[(function (){var G__32797 = x__24918__auto__;
return goog.typeOf(G__32797);
})()]);
if(or__24274__auto__){
return or__24274__auto__;
} else {
var or__24274__auto____$1 = (cljs.core._chunked_rest["_"]);
if(or__24274__auto____$1){
return or__24274__auto____$1;
} else {
throw cljs.core.missing_protocol("IChunkedSeq.-chunked-rest",coll);
}
}
})().call(null,coll);
}
});


cljs.core.IChunkedNext = (function (){var obj32799 = {};
return obj32799;
})();

cljs.core._chunked_next = (function _chunked_next(coll){
if((function (){var and__24262__auto__ = coll;
if(and__24262__auto__){
return coll.cljs$core$IChunkedNext$_chunked_next$arity$1;
} else {
return and__24262__auto__;
}
})()){
return coll.cljs$core$IChunkedNext$_chunked_next$arity$1(coll);
} else {
var x__24918__auto__ = (((coll == null))?null:coll);
return (function (){var or__24274__auto__ = (cljs.core._chunked_next[(function (){var G__32803 = x__24918__auto__;
return goog.typeOf(G__32803);
})()]);
if(or__24274__auto__){
return or__24274__auto__;
} else {
var or__24274__auto____$1 = (cljs.core._chunked_next["_"]);
if(or__24274__auto____$1){
return or__24274__auto____$1;
} else {
throw cljs.core.missing_protocol("IChunkedNext.-chunked-next",coll);
}
}
})().call(null,coll);
}
});


cljs.core.INamed = (function (){var obj32805 = {};
return obj32805;
})();

cljs.core._name = (function _name(x){
if((function (){var and__24262__auto__ = x;
if(and__24262__auto__){
return x.cljs$core$INamed$_name$arity$1;
} else {
return and__24262__auto__;
}
})()){
return x.cljs$core$INamed$_name$arity$1(x);
} else {
var x__24918__auto__ = (((x == null))?null:x);
return (function (){var or__24274__auto__ = (cljs.core._name[(function (){var G__32809 = x__24918__auto__;
return goog.typeOf(G__32809);
})()]);
if(or__24274__auto__){
return or__24274__auto__;
} else {
var or__24274__auto____$1 = (cljs.core._name["_"]);
if(or__24274__auto____$1){
return or__24274__auto____$1;
} else {
throw cljs.core.missing_protocol("INamed.-name",x);
}
}
})().call(null,x);
}
});

cljs.core._namespace = (function _namespace(x){
if((function (){var and__24262__auto__ = x;
if(and__24262__auto__){
return x.cljs$core$INamed$_namespace$arity$1;
} else {
return and__24262__auto__;
}
})()){
return x.cljs$core$INamed$_namespace$arity$1(x);
} else {
var x__24918__auto__ = (((x == null))?null:x);
return (function (){var or__24274__auto__ = (cljs.core._namespace[(function (){var G__32813 = x__24918__auto__;
return goog.typeOf(G__32813);
})()]);
if(or__24274__auto__){
return or__24274__auto__;
} else {
var or__24274__auto____$1 = (cljs.core._namespace["_"]);
if(or__24274__auto____$1){
return or__24274__auto____$1;
} else {
throw cljs.core.missing_protocol("INamed.-namespace",x);
}
}
})().call(null,x);
}
});


cljs.core.IAtom = (function (){var obj32815 = {};
return obj32815;
})();


cljs.core.IReset = (function (){var obj32817 = {};
return obj32817;
})();

cljs.core._reset_BANG_ = (function _reset_BANG_(o,new_value){
if((function (){var and__24262__auto__ = o;
if(and__24262__auto__){
return o.cljs$core$IReset$_reset_BANG_$arity$2;
} else {
return and__24262__auto__;
}
})()){
return o.cljs$core$IReset$_reset_BANG_$arity$2(o,new_value);
} else {
var x__24918__auto__ = (((o == null))?null:o);
return (function (){var or__24274__auto__ = (cljs.core._reset_BANG_[(function (){var G__32821 = x__24918__auto__;
return goog.typeOf(G__32821);
})()]);
if(or__24274__auto__){
return or__24274__auto__;
} else {
var or__24274__auto____$1 = (cljs.core._reset_BANG_["_"]);
if(or__24274__auto____$1){
return or__24274__auto____$1;
} else {
throw cljs.core.missing_protocol("IReset.-reset!",o);
}
}
})().call(null,o,new_value);
}
});


cljs.core.ISwap = (function (){var obj32823 = {};
return obj32823;
})();

cljs.core._swap_BANG_ = (function() {
var _swap_BANG_ = null;
var _swap_BANG___2 = (function (o,f){
if((function (){var and__24262__auto__ = o;
if(and__24262__auto__){
return o.cljs$core$ISwap$_swap_BANG_$arity$2;
} else {
return and__24262__auto__;
}
})()){
return o.cljs$core$ISwap$_swap_BANG_$arity$2(o,f);
} else {
var x__24918__auto__ = (((o == null))?null:o);
return (function (){var or__24274__auto__ = (cljs.core._swap_BANG_[(function (){var G__32833 = x__24918__auto__;
return goog.typeOf(G__32833);
})()]);
if(or__24274__auto__){
return or__24274__auto__;
} else {
var or__24274__auto____$1 = (cljs.core._swap_BANG_["_"]);
if(or__24274__auto____$1){
return or__24274__auto____$1;
} else {
throw cljs.core.missing_protocol("ISwap.-swap!",o);
}
}
})().call(null,o,f);
}
});
var _swap_BANG___3 = (function (o,f,a){
if((function (){var and__24262__auto__ = o;
if(and__24262__auto__){
return o.cljs$core$ISwap$_swap_BANG_$arity$3;
} else {
return and__24262__auto__;
}
})()){
return o.cljs$core$ISwap$_swap_BANG_$arity$3(o,f,a);
} else {
var x__24918__auto__ = (((o == null))?null:o);
return (function (){var or__24274__auto__ = (cljs.core._swap_BANG_[(function (){var G__32835 = x__24918__auto__;
return goog.typeOf(G__32835);
})()]);
if(or__24274__auto__){
return or__24274__auto__;
} else {
var or__24274__auto____$1 = (cljs.core._swap_BANG_["_"]);
if(or__24274__auto____$1){
return or__24274__auto____$1;
} else {
throw cljs.core.missing_protocol("ISwap.-swap!",o);
}
}
})().call(null,o,f,a);
}
});
var _swap_BANG___4 = (function (o,f,a,b){
if((function (){var and__24262__auto__ = o;
if(and__24262__auto__){
return o.cljs$core$ISwap$_swap_BANG_$arity$4;
} else {
return and__24262__auto__;
}
})()){
return o.cljs$core$ISwap$_swap_BANG_$arity$4(o,f,a,b);
} else {
var x__24918__auto__ = (((o == null))?null:o);
return (function (){var or__24274__auto__ = (cljs.core._swap_BANG_[(function (){var G__32837 = x__24918__auto__;
return goog.typeOf(G__32837);
})()]);
if(or__24274__auto__){
return or__24274__auto__;
} else {
var or__24274__auto____$1 = (cljs.core._swap_BANG_["_"]);
if(or__24274__auto____$1){
return or__24274__auto____$1;
} else {
throw cljs.core.missing_protocol("ISwap.-swap!",o);
}
}
})().call(null,o,f,a,b);
}
});
var _swap_BANG___5 = (function (o,f,a,b,xs){
if((function (){var and__24262__auto__ = o;
if(and__24262__auto__){
return o.cljs$core$ISwap$_swap_BANG_$arity$5;
} else {
return and__24262__auto__;
}
})()){
return o.cljs$core$ISwap$_swap_BANG_$arity$5(o,f,a,b,xs);
} else {
var x__24918__auto__ = (((o == null))?null:o);
return (function (){var or__24274__auto__ = (cljs.core._swap_BANG_[(function (){var G__32839 = x__24918__auto__;
return goog.typeOf(G__32839);
})()]);
if(or__24274__auto__){
return or__24274__auto__;
} else {
var or__24274__auto____$1 = (cljs.core._swap_BANG_["_"]);
if(or__24274__auto____$1){
return or__24274__auto____$1;
} else {
throw cljs.core.missing_protocol("ISwap.-swap!",o);
}
}
})().call(null,o,f,a,b,xs);
}
});
_swap_BANG_ = function(o,f,a,b,xs){
switch(arguments.length){
case 2:
return _swap_BANG___2.call(this,o,f);
case 3:
return _swap_BANG___3.call(this,o,f,a);
case 4:
return _swap_BANG___4.call(this,o,f,a,b);
case 5:
return _swap_BANG___5.call(this,o,f,a,b,xs);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_swap_BANG_.cljs$core$IFn$_invoke$arity$2 = _swap_BANG___2;
_swap_BANG_.cljs$core$IFn$_invoke$arity$3 = _swap_BANG___3;
_swap_BANG_.cljs$core$IFn$_invoke$arity$4 = _swap_BANG___4;
_swap_BANG_.cljs$core$IFn$_invoke$arity$5 = _swap_BANG___5;
return _swap_BANG_;
})()
;


cljs.core.IVolatile = (function (){var obj32841 = {};
return obj32841;
})();

cljs.core._vreset_BANG_ = (function _vreset_BANG_(o,new_value){
if((function (){var and__24262__auto__ = o;
if(and__24262__auto__){
return o.cljs$core$IVolatile$_vreset_BANG_$arity$2;
} else {
return and__24262__auto__;
}
})()){
return o.cljs$core$IVolatile$_vreset_BANG_$arity$2(o,new_value);
} else {
var x__24918__auto__ = (((o == null))?null:o);
return (function (){var or__24274__auto__ = (cljs.core._vreset_BANG_[(function (){var G__32845 = x__24918__auto__;
return goog.typeOf(G__32845);
})()]);
if(or__24274__auto__){
return or__24274__auto__;
} else {
var or__24274__auto____$1 = (cljs.core._vreset_BANG_["_"]);
if(or__24274__auto____$1){
return or__24274__auto____$1;
} else {
throw cljs.core.missing_protocol("IVolatile.-vreset!",o);
}
}
})().call(null,o,new_value);
}
});


cljs.core.IIterable = (function (){var obj32847 = {};
return obj32847;
})();

cljs.core._iterator = (function _iterator(coll){
if((function (){var and__24262__auto__ = coll;
if(and__24262__auto__){
return coll.cljs$core$IIterable$_iterator$arity$1;
} else {
return and__24262__auto__;
}
})()){
return coll.cljs$core$IIterable$_iterator$arity$1(coll);
} else {
var x__24918__auto__ = (((coll == null))?null:coll);
return (function (){var or__24274__auto__ = (cljs.core._iterator[(function (){var G__32851 = x__24918__auto__;
return goog.typeOf(G__32851);
})()]);
if(or__24274__auto__){
return or__24274__auto__;
} else {
var or__24274__auto____$1 = (cljs.core._iterator["_"]);
if(or__24274__auto____$1){
return or__24274__auto____$1;
} else {
throw cljs.core.missing_protocol("IIterable.-iterator",coll);
}
}
})().call(null,coll);
}
});


/**
* @constructor
*/
cljs.core.StringBufferWriter = (function (sb){
this.sb = sb;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 1073741824;
})
cljs.core.StringBufferWriter.prototype.cljs$core$IWriter$_write$arity$2 = (function (_,s){
var self__ = this;
var ___$1 = this;
return self__.sb.append(s);
});

cljs.core.StringBufferWriter.prototype.cljs$core$IWriter$_flush$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return null;
});

cljs.core.StringBufferWriter.cljs$lang$type = true;

cljs.core.StringBufferWriter.cljs$lang$ctorStr = "cljs.core/StringBufferWriter";

cljs.core.StringBufferWriter.cljs$lang$ctorPrWriter = (function (this__24861__auto__,writer__24862__auto__,opt__24863__auto__){
return cljs.core._write(writer__24862__auto__,"cljs.core/StringBufferWriter");
});

cljs.core.__GT_StringBufferWriter = (function __GT_StringBufferWriter(sb){
return (new cljs.core.StringBufferWriter(sb));
});

/**
* Support so that collections can implement toString without
* loading all the printing machinery.
*/
cljs.core.pr_str_STAR_ = (function pr_str_STAR_(obj){
var sb = (new goog.string.StringBuffer());
var writer = (new cljs.core.StringBufferWriter(sb));
obj.cljs$core$IPrintWithWriter$_pr_writer$arity$3(null,writer,cljs.core.pr_opts());

writer.cljs$core$IWriter$_flush$arity$1(null);

return [cljs.core.str(sb)].join('');
});
cljs.core.int_rotate_left = (function int_rotate_left(x,n){
return ((x << n) | (x >>> (- n)));
});
if((typeof Math.imul !== 'undefined') && (!(((function (){var G__32854 = (4294967295);
var G__32855 = (5);
return (Math.imul.cljs$core$IFn$_invoke$arity$2 ? Math.imul.cljs$core$IFn$_invoke$arity$2(G__32854,G__32855) : Math.imul.call(null,G__32854,G__32855));
})() === (0))))){
cljs.core.imul = (function imul(a,b){
var G__32858 = a;
var G__32859 = b;
return (Math.imul.cljs$core$IFn$_invoke$arity$2 ? Math.imul.cljs$core$IFn$_invoke$arity$2(G__32858,G__32859) : Math.imul.call(null,G__32858,G__32859));
});
} else {
cljs.core.imul = (function imul(a,b){
var ah = ((a >>> (16)) & (65535));
var al = (a & (65535));
var bh = ((b >>> (16)) & (65535));
var bl = (b & (65535));
return (((al * bl) + ((((ah * bl) + (al * bh)) << (16)) >>> (0))) | (0));
});
}
cljs.core.m3_seed = (0);
cljs.core.m3_C1 = (3432918353);
cljs.core.m3_C2 = (461845907);
cljs.core.m3_mix_K1 = (function m3_mix_K1(k1){
return cljs.core.imul(cljs.core.int_rotate_left(cljs.core.imul(k1,cljs.core.m3_C1),(15)),cljs.core.m3_C2);
});
cljs.core.m3_mix_H1 = (function m3_mix_H1(h1,k1){
return (cljs.core.imul(cljs.core.int_rotate_left((h1 ^ k1),(13)),(5)) + (3864292196));
});
cljs.core.m3_fmix = (function m3_fmix(h1,len){
var h1__$1 = h1;
var h1__$2 = (h1__$1 ^ len);
var h1__$3 = (h1__$2 ^ (h1__$2 >>> (16)));
var h1__$4 = cljs.core.imul(h1__$3,(2246822507));
var h1__$5 = (h1__$4 ^ (h1__$4 >>> (13)));
var h1__$6 = cljs.core.imul(h1__$5,(3266489909));
var h1__$7 = (h1__$6 ^ (h1__$6 >>> (16)));
return h1__$7;
});
cljs.core.m3_hash_int = (function m3_hash_int(in$){
if((in$ === (0))){
return in$;
} else {
var k1 = cljs.core.m3_mix_K1(in$);
var h1 = cljs.core.m3_mix_H1(cljs.core.m3_seed,k1);
return cljs.core.m3_fmix(h1,(4));
}
});
cljs.core.m3_hash_unencoded_chars = (function m3_hash_unencoded_chars(in$){
var h1 = (function (){var i = (1);
var h1 = cljs.core.m3_seed;
while(true){
if((i < in$.length)){
var G__32860 = (i + (2));
var G__32861 = cljs.core.m3_mix_H1(h1,cljs.core.m3_mix_K1((in$.charCodeAt((i - (1))) | (in$.charCodeAt(i) << (16)))));
i = G__32860;
h1 = G__32861;
continue;
} else {
return h1;
}
break;
}
})();
var h1__$1 = ((((in$.length & (1)) === (1)))?(h1 ^ cljs.core.m3_mix_K1(in$.charCodeAt((in$.length - (1))))):h1);
return cljs.core.m3_fmix(h1__$1,cljs.core.imul((2),in$.length));
});



cljs.core.string_hash_cache = (function (){var obj32863 = {};
return obj32863;
})();
cljs.core.string_hash_cache_count = (0);
cljs.core.hash_string_STAR_ = (function hash_string_STAR_(s){
if(!((s == null))){
var len = s.length;
if((len > (0))){
var i = (0);
var hash = (0);
while(true){
if((i < len)){
var G__32864 = (i + (1));
var G__32865 = (cljs.core.imul((31),hash) + s.charCodeAt(i));
i = G__32864;
hash = G__32865;
continue;
} else {
return hash;
}
break;
}
} else {
return (0);
}
} else {
return (0);
}
});
cljs.core.add_to_string_hash_cache = (function add_to_string_hash_cache(k){
var h = cljs.core.hash_string_STAR_(k);
(cljs.core.string_hash_cache[k] = h);

cljs.core.string_hash_cache_count = (cljs.core.string_hash_cache_count + (1));

return h;
});
cljs.core.hash_string = (function hash_string(k){
if((cljs.core.string_hash_cache_count > (255))){
cljs.core.string_hash_cache = (function (){var obj32869 = {};
return obj32869;
})();

cljs.core.string_hash_cache_count = (0);
} else {
}

var h = (cljs.core.string_hash_cache[k]);
if(typeof h === 'number'){
return h;
} else {
return cljs.core.add_to_string_hash_cache(k);
}
});
cljs.core.hash = (function hash(o){
if((function (){var G__32872 = o;
if(G__32872){
var bit__24948__auto__ = (G__32872.cljs$lang$protocol_mask$partition0$ & (4194304));
if((bit__24948__auto__) || (G__32872.cljs$core$IHash$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return o.cljs$core$IHash$_hash$arity$1(null);
} else {
if(typeof o === 'number'){
return ((function (){var G__32873 = o;
return (Math.floor.cljs$core$IFn$_invoke$arity$1 ? Math.floor.cljs$core$IFn$_invoke$arity$1(G__32873) : Math.floor.call(null,G__32873));
})() % (2147483647));
} else {
if(o === true){
return (1);
} else {
if(o === false){
return (0);
} else {
if(typeof o === 'string'){
return cljs.core.m3_hash_int(cljs.core.hash_string(o));
} else {
if((o instanceof Date)){
return o.valueOf();
} else {
if((o == null)){
return (0);
} else {
return cljs.core._hash(o);

}
}
}
}
}
}
}
});
cljs.core.hash_combine = (function hash_combine(seed,hash){
return (seed ^ (((hash + (2654435769)) + (seed << (6))) + (seed >> (2))));
});
cljs.core.instance_QMARK_ = (function instance_QMARK_(t,o){
return (o instanceof t);
});
cljs.core.symbol_QMARK_ = (function symbol_QMARK_(x){
return (x instanceof cljs.core.Symbol);
});
cljs.core.hash_symbol = (function hash_symbol(sym){
return cljs.core.hash_combine(cljs.core.m3_hash_unencoded_chars(sym.name),cljs.core.hash_string(sym.ns));
});
cljs.core.compare_symbols = (function compare_symbols(a,b){
if((a.str === b.str)){
return (0);
} else {
if(cljs.core.truth_((function (){var and__24262__auto__ = cljs.core.not(a.ns);
if(and__24262__auto__){
return b.ns;
} else {
return and__24262__auto__;
}
})())){
return (-1);
} else {
if(cljs.core.truth_(a.ns)){
if(cljs.core.not(b.ns)){
return (1);
} else {
var nsc = (function (){var G__32880 = a.ns;
var G__32881 = b.ns;
return goog.array.defaultCompare(G__32880,G__32881);
})();
if(((0) === nsc)){
var G__32882 = a.name;
var G__32883 = b.name;
return goog.array.defaultCompare(G__32882,G__32883);
} else {
return nsc;
}
}
} else {
var G__32884 = a.name;
var G__32885 = b.name;
return goog.array.defaultCompare(G__32884,G__32885);

}
}
}
});

/**
* @constructor
*/
cljs.core.Symbol = (function (ns,name,str,_hash,_meta){
this.ns = ns;
this.name = name;
this.str = str;
this._hash = _hash;
this._meta = _meta;
this.cljs$lang$protocol_mask$partition0$ = 2154168321;
this.cljs$lang$protocol_mask$partition1$ = 4096;
})
cljs.core.Symbol.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (o,writer,_){
var self__ = this;
var o__$1 = this;
return cljs.core._write(writer,self__.str);
});

cljs.core.Symbol.prototype.cljs$core$INamed$_name$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.name;
});

cljs.core.Symbol.prototype.cljs$core$INamed$_namespace$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.ns;
});

cljs.core.Symbol.prototype.cljs$core$IHash$_hash$arity$1 = (function (sym){
var self__ = this;
var sym__$1 = this;
var h__24695__auto__ = self__._hash;
if(!((h__24695__auto__ == null))){
return h__24695__auto__;
} else {
var h__24695__auto____$1 = cljs.core.hash_symbol(sym__$1);
self__._hash = h__24695__auto____$1;

return h__24695__auto____$1;
}
});

cljs.core.Symbol.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (_,new_meta){
var self__ = this;
var ___$1 = this;
return (new cljs.core.Symbol(self__.ns,self__.name,self__.str,self__._hash,new_meta));
});

cljs.core.Symbol.prototype.cljs$core$IMeta$_meta$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__._meta;
});

cljs.core.Symbol.prototype.call = (function() {
var G__32887 = null;
var G__32887__2 = (function (self__,coll){
var self__ = this;
var self____$1 = this;
var sym = self____$1;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll,sym,null);
});
var G__32887__3 = (function (self__,coll,not_found){
var self__ = this;
var self____$1 = this;
var sym = self____$1;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll,sym,not_found);
});
G__32887 = function(self__,coll,not_found){
switch(arguments.length){
case 2:
return G__32887__2.call(this,self__,coll);
case 3:
return G__32887__3.call(this,self__,coll,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__32887.cljs$core$IFn$_invoke$arity$2 = G__32887__2;
G__32887.cljs$core$IFn$_invoke$arity$3 = G__32887__3;
return G__32887;
})()
;

cljs.core.Symbol.prototype.apply = (function (self__,args32886){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args32886)));
});

cljs.core.Symbol.prototype.cljs$core$IFn$_invoke$arity$1 = (function (coll){
var self__ = this;
var sym = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll,sym,null);
});

cljs.core.Symbol.prototype.cljs$core$IFn$_invoke$arity$2 = (function (coll,not_found){
var self__ = this;
var sym = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll,sym,not_found);
});

cljs.core.Symbol.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (_,other){
var self__ = this;
var ___$1 = this;
if((other instanceof cljs.core.Symbol)){
return (self__.str === other.str);
} else {
return false;
}
});

cljs.core.Symbol.prototype.toString = (function (){
var self__ = this;
var _ = this;
return self__.str;
});

cljs.core.Symbol.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.Symbol.cljs$lang$type = true;

cljs.core.Symbol.cljs$lang$ctorStr = "cljs.core/Symbol";

cljs.core.Symbol.cljs$lang$ctorPrWriter = (function (this__24861__auto__,writer__24862__auto__,opt__24863__auto__){
return cljs.core._write(writer__24862__auto__,"cljs.core/Symbol");
});

cljs.core.__GT_Symbol = (function __GT_Symbol(ns,name,str,_hash,_meta){
return (new cljs.core.Symbol(ns,name,str,_hash,_meta));
});

cljs.core.symbol = (function() {
var symbol = null;
var symbol__1 = (function (name){
if((name instanceof cljs.core.Symbol)){
return name;
} else {
return symbol.cljs$core$IFn$_invoke$arity$2(null,name);
}
});
var symbol__2 = (function (ns,name){
var sym_str = ((!((ns == null)))?[cljs.core.str(ns),cljs.core.str("/"),cljs.core.str(name)].join(''):name);
return (new cljs.core.Symbol(ns,name,sym_str,null,null));
});
symbol = function(ns,name){
switch(arguments.length){
case 1:
return symbol__1.call(this,ns);
case 2:
return symbol__2.call(this,ns,name);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
symbol.cljs$core$IFn$_invoke$arity$1 = symbol__1;
symbol.cljs$core$IFn$_invoke$arity$2 = symbol__2;
return symbol;
})()
;

/**
* @constructor
*/
cljs.core.Var = (function (val,sym,_meta){
this.val = val;
this.sym = sym;
this._meta = _meta;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 163840;
})
cljs.core.Var.prototype.cljs$core$IMeta$_meta$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__._meta;
});

cljs.core.Var.prototype.cljs$core$IDeref$_deref$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.val;
});

cljs.core.Var.cljs$lang$type = true;

cljs.core.Var.cljs$lang$ctorStr = "cljs.core/Var";

cljs.core.Var.cljs$lang$ctorPrWriter = (function (this__24861__auto__,writer__24862__auto__,opt__24863__auto__){
return cljs.core._write(writer__24862__auto__,"cljs.core/Var");
});

cljs.core.__GT_Var = (function __GT_Var(val,sym,_meta){
return (new cljs.core.Var(val,sym,_meta));
});



cljs.core.iterable_QMARK_ = (function iterable_QMARK_(x){
var G__32891 = x;
if(G__32891){
var bit__24955__auto__ = null;
if(cljs.core.truth_((function (){var or__24274__auto__ = bit__24955__auto__;
if(cljs.core.truth_(or__24274__auto__)){
return or__24274__auto__;
} else {
return G__32891.cljs$core$IIterable$;
}
})())){
return true;
} else {
if((!G__32891.cljs$lang$protocol_mask$partition$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IIterable,G__32891);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IIterable,G__32891);
}
});
cljs.core.clone = (function clone(value){
return cljs.core._clone(value);
});
cljs.core.cloneable_QMARK_ = (function cloneable_QMARK_(value){
var G__32893 = value;
if(G__32893){
var bit__24955__auto__ = (G__32893.cljs$lang$protocol_mask$partition1$ & (8192));
if((bit__24955__auto__) || (G__32893.cljs$core$ICloneable$)){
return true;
} else {
if((!G__32893.cljs$lang$protocol_mask$partition1$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ICloneable,G__32893);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ICloneable,G__32893);
}
});
/**
* Returns a seq on the collection. If the collection is
* empty, returns nil.  (seq nil) returns nil. seq also works on
* Strings.
*/
cljs.core.seq = (function seq(coll){
if((coll == null)){
return null;
} else {
if((function (){var G__32895 = coll;
if(G__32895){
var bit__24948__auto__ = (G__32895.cljs$lang$protocol_mask$partition0$ & (8388608));
if((bit__24948__auto__) || (G__32895.cljs$core$ISeqable$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$ISeqable$_seq$arity$1(null);
} else {
if(coll instanceof Array){
if((coll.length === (0))){
return null;
} else {
return (new cljs.core.IndexedSeq(coll,(0)));
}
} else {
if(typeof coll === 'string'){
if((coll.length === (0))){
return null;
} else {
return (new cljs.core.IndexedSeq(coll,(0)));
}
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.ISeqable,coll)){
return cljs.core._seq(coll);
} else {
throw (new Error([cljs.core.str(coll),cljs.core.str(" is not ISeqable")].join('')));

}
}
}
}
}
});
/**
* Returns the first item in the collection. Calls seq on its
* argument. If coll is nil, returns nil.
*/
cljs.core.first = (function first(coll){
if((coll == null)){
return null;
} else {
if((function (){var G__32897 = coll;
if(G__32897){
var bit__24948__auto__ = (G__32897.cljs$lang$protocol_mask$partition0$ & (64));
if((bit__24948__auto__) || (G__32897.cljs$core$ISeq$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$ISeq$_first$arity$1(null);
} else {
var s = cljs.core.seq(coll);
if((s == null)){
return null;
} else {
return cljs.core._first(s);
}
}
}
});
/**
* Returns a possibly empty seq of the items after the first. Calls seq on its
* argument.
*/
cljs.core.rest = (function rest(coll){
if(!((coll == null))){
if((function (){var G__32899 = coll;
if(G__32899){
var bit__24948__auto__ = (G__32899.cljs$lang$protocol_mask$partition0$ & (64));
if((bit__24948__auto__) || (G__32899.cljs$core$ISeq$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$ISeq$_rest$arity$1(null);
} else {
var s = cljs.core.seq(coll);
if(s){
return cljs.core._rest(s);
} else {
return cljs.core.List.EMPTY;
}
}
} else {
return cljs.core.List.EMPTY;
}
});
/**
* Returns a seq of the items after the first. Calls seq on its
* argument.  If there are no more items, returns nil
*/
cljs.core.next = (function next(coll){
if((coll == null)){
return null;
} else {
if((function (){var G__32901 = coll;
if(G__32901){
var bit__24948__auto__ = (G__32901.cljs$lang$protocol_mask$partition0$ & (128));
if((bit__24948__auto__) || (G__32901.cljs$core$INext$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$INext$_next$arity$1(null);
} else {
return cljs.core.seq(cljs.core.rest(coll));
}
}
});
/**
* Equality. Returns true if x equals y, false if not. Compares
* numbers and collections in a type-independent manner.  Clojure's immutable data
* structures define -equiv (and thus =) as a value, not an identity,
* comparison.
* @param {...*} var_args
*/
cljs.core._EQ_ = (function() {
var _EQ_ = null;
var _EQ___1 = (function (x){
return true;
});
var _EQ___2 = (function (x,y){
if((x == null)){
return (y == null);
} else {
return ((x === y)) || (cljs.core._equiv(x,y));
}
});
var _EQ___3 = (function() { 
var G__32906__delegate = function (x,y,more){
while(true){
if(_EQ_.cljs$core$IFn$_invoke$arity$2(x,y)){
if(cljs.core.next(more)){
var G__32907 = y;
var G__32908 = cljs.core.first(more);
var G__32909 = cljs.core.next(more);
x = G__32907;
y = G__32908;
more = G__32909;
continue;
} else {
return _EQ_.cljs$core$IFn$_invoke$arity$2(y,cljs.core.first(more));
}
} else {
return false;
}
break;
}
};
var G__32906 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__32910__i = 0, G__32910__a = new Array(arguments.length -  2);
while (G__32910__i < G__32910__a.length) {G__32910__a[G__32910__i] = arguments[G__32910__i + 2]; ++G__32910__i;}
  more = new cljs.core.IndexedSeq(G__32910__a,0);
} 
return G__32906__delegate.call(this,x,y,more);};
G__32906.cljs$lang$maxFixedArity = 2;
G__32906.cljs$lang$applyTo = (function (arglist__32911){
var x = cljs.core.first(arglist__32911);
arglist__32911 = cljs.core.next(arglist__32911);
var y = cljs.core.first(arglist__32911);
var more = cljs.core.rest(arglist__32911);
return G__32906__delegate(x,y,more);
});
G__32906.cljs$core$IFn$_invoke$arity$variadic = G__32906__delegate;
return G__32906;
})()
;
_EQ_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return _EQ___1.call(this,x);
case 2:
return _EQ___2.call(this,x,y);
default:
var G__32912 = null;
if (arguments.length > 2) {
var G__32913__i = 0, G__32913__a = new Array(arguments.length -  2);
while (G__32913__i < G__32913__a.length) {G__32913__a[G__32913__i] = arguments[G__32913__i + 2]; ++G__32913__i;}
G__32912 = new cljs.core.IndexedSeq(G__32913__a,0);
}
return _EQ___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__32912);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_EQ_.cljs$lang$maxFixedArity = 2;
_EQ_.cljs$lang$applyTo = _EQ___3.cljs$lang$applyTo;
_EQ_.cljs$core$IFn$_invoke$arity$1 = _EQ___1;
_EQ_.cljs$core$IFn$_invoke$arity$2 = _EQ___2;
_EQ_.cljs$core$IFn$_invoke$arity$variadic = _EQ___3.cljs$core$IFn$_invoke$arity$variadic;
return _EQ_;
})()
;

/**
* @constructor
*/
cljs.core.ES6Iterator = (function (s){
this.s = s;
})
cljs.core.ES6Iterator.prototype.next = (function (){
var self__ = this;
var _ = this;
if(!((self__.s == null))){
var x = cljs.core.first(self__.s);
self__.s = cljs.core.next(self__.s);

return {"done": false, "value": x};
} else {
return {"done": true, "value": null};
}
});

cljs.core.ES6Iterator.cljs$lang$type = true;

cljs.core.ES6Iterator.cljs$lang$ctorStr = "cljs.core/ES6Iterator";

cljs.core.ES6Iterator.cljs$lang$ctorPrWriter = (function (this__24861__auto__,writer__24862__auto__,opt__24863__auto__){
return cljs.core._write(writer__24862__auto__,"cljs.core/ES6Iterator");
});

cljs.core.__GT_ES6Iterator = (function __GT_ES6Iterator(s){
return (new cljs.core.ES6Iterator(s));
});

cljs.core.es6_iterator = (function es6_iterator(coll){
return (new cljs.core.ES6Iterator(cljs.core.seq(coll)));
});

/**
* @constructor
*/
cljs.core.ES6IteratorSeq = (function (value,iter,_rest){
this.value = value;
this.iter = iter;
this._rest = _rest;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 8388672;
})
cljs.core.ES6IteratorSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.value;
});

cljs.core.ES6IteratorSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
if((self__._rest == null)){
self__._rest = (function (){var G__32914 = self__.iter;
return (cljs.core.es6_iterator_seq.cljs$core$IFn$_invoke$arity$1 ? cljs.core.es6_iterator_seq.cljs$core$IFn$_invoke$arity$1(G__32914) : cljs.core.es6_iterator_seq.call(null,G__32914));
})();
} else {
}

return self__._rest;
});

cljs.core.ES6IteratorSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return this$__$1;
});

cljs.core.ES6IteratorSeq.cljs$lang$type = true;

cljs.core.ES6IteratorSeq.cljs$lang$ctorStr = "cljs.core/ES6IteratorSeq";

cljs.core.ES6IteratorSeq.cljs$lang$ctorPrWriter = (function (this__24861__auto__,writer__24862__auto__,opt__24863__auto__){
return cljs.core._write(writer__24862__auto__,"cljs.core/ES6IteratorSeq");
});

cljs.core.__GT_ES6IteratorSeq = (function __GT_ES6IteratorSeq(value,iter,_rest){
return (new cljs.core.ES6IteratorSeq(value,iter,_rest));
});

cljs.core.es6_iterator_seq = (function es6_iterator_seq(iter){
var v = iter.next();
if(cljs.core.truth_(v.done)){
return cljs.core.List.EMPTY;
} else {
return (new cljs.core.ES6IteratorSeq(v.value,iter,null));
}
});
/**
* Mix final collection hash for ordered or unordered collections.
* hash-basis is the combined collection hash, count is the number
* of elements included in the basis. Note this is the hash code
* consistent with =, different from .hashCode.
* See http://clojure.org/data_structures#hash for full algorithms.
*/
cljs.core.mix_collection_hash = (function mix_collection_hash(hash_basis,count){
var h1 = cljs.core.m3_seed;
var k1 = cljs.core.m3_mix_K1(hash_basis);
var h1__$1 = cljs.core.m3_mix_H1(h1,k1);
return cljs.core.m3_fmix(h1__$1,count);
});
/**
* Returns the hash code, consistent with =, for an external ordered
* collection implementing Iterable.
* See http://clojure.org/data_structures#hash for full algorithms.
*/
cljs.core.hash_ordered_coll = (function hash_ordered_coll(coll){
var n = (0);
var hash_code = (1);
var coll__$1 = cljs.core.seq(coll);
while(true){
if(!((coll__$1 == null))){
var G__32915 = (n + (1));
var G__32916 = ((cljs.core.imul((31),hash_code) + cljs.core.hash(cljs.core.first(coll__$1))) | (0));
var G__32917 = cljs.core.next(coll__$1);
n = G__32915;
hash_code = G__32916;
coll__$1 = G__32917;
continue;
} else {
return cljs.core.mix_collection_hash(hash_code,n);
}
break;
}
});
/**
* Returns the hash code, consistent with =, for an external unordered
* collection implementing Iterable. For maps, the iterator should
* return map entries whose hash is computed as
* (hash-ordered-coll [k v]).
* See http://clojure.org/data_structures#hash for full algorithms.
*/
cljs.core.hash_unordered_coll = (function hash_unordered_coll(coll){
var n = (0);
var hash_code = (0);
var coll__$1 = cljs.core.seq(coll);
while(true){
if(!((coll__$1 == null))){
var G__32918 = (n + (1));
var G__32919 = ((hash_code + cljs.core.hash(cljs.core.first(coll__$1))) | (0));
var G__32920 = cljs.core.next(coll__$1);
n = G__32918;
hash_code = G__32919;
coll__$1 = G__32920;
continue;
} else {
return cljs.core.mix_collection_hash(hash_code,n);
}
break;
}
});


(cljs.core.ICounted["null"] = true);

(cljs.core._count["null"] = (function (_){
return (0);
}));
Date.prototype.cljs$core$IEquiv$ = true;

Date.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (o,other){
var o__$1 = this;
return ((other instanceof Date)) && ((o__$1.toString() === other.toString()));
});
(cljs.core.IEquiv["number"] = true);

(cljs.core._equiv["number"] = (function (x,o){
return (x === o);
}));
(cljs.core.IMeta["function"] = true);

(cljs.core._meta["function"] = (function (_){
return null;
}));

(cljs.core.Fn["function"] = true);
(cljs.core.IHash["_"] = true);

(cljs.core._hash["_"] = (function (o){
var G__32921 = o;
return goog.getUid(G__32921);
}));
/**
* Returns a number one greater than num.
*/
cljs.core.inc = (function inc(x){
return (x + (1));
});

/**
* @constructor
*/
cljs.core.Reduced = (function (val){
this.val = val;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32768;
})
cljs.core.Reduced.prototype.cljs$core$IDeref$_deref$arity$1 = (function (o){
var self__ = this;
var o__$1 = this;
return self__.val;
});

cljs.core.Reduced.cljs$lang$type = true;

cljs.core.Reduced.cljs$lang$ctorStr = "cljs.core/Reduced";

cljs.core.Reduced.cljs$lang$ctorPrWriter = (function (this__24861__auto__,writer__24862__auto__,opt__24863__auto__){
return cljs.core._write(writer__24862__auto__,"cljs.core/Reduced");
});

cljs.core.__GT_Reduced = (function __GT_Reduced(val){
return (new cljs.core.Reduced(val));
});

/**
* Wraps x in a way such that a reduce will terminate with the value x
*/
cljs.core.reduced = (function reduced(x){
return (new cljs.core.Reduced(x));
});
/**
* Returns true if x is the result of a call to reduced
*/
cljs.core.reduced_QMARK_ = (function reduced_QMARK_(r){
return (r instanceof cljs.core.Reduced);
});
/**
* If x is already reduced?, returns it, else returns (reduced x)
*/
cljs.core.ensure_reduced = (function ensure_reduced(x){
if(cljs.core.reduced_QMARK_(x)){
return x;
} else {
return cljs.core.reduced(x);
}
});
/**
* If x is reduced?, returns (deref x), else returns x
*/
cljs.core.unreduced = (function unreduced(x){
if(cljs.core.reduced_QMARK_(x)){
var G__32923 = x;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__32923) : cljs.core.deref.call(null,G__32923));
} else {
return x;
}
});
cljs.core.deref = (function deref(o){
return cljs.core._deref(o);
});
/**
* Accepts any collection which satisfies the ICount and IIndexed protocols and
* reduces them without incurring seq initialization
*/
cljs.core.ci_reduce = (function() {
var ci_reduce = null;
var ci_reduce__2 = (function (cicoll,f){
var cnt = cljs.core._count(cicoll);
if((cnt === (0))){
return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
} else {
var val = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(cicoll,(0));
var n = (1);
while(true){
if((n < cnt)){
var nval = (function (){var G__32930 = val;
var G__32931 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(cicoll,n);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__32930,G__32931) : f.call(null,G__32930,G__32931));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__32936 = nval;
var G__32937 = (n + (1));
val = G__32936;
n = G__32937;
continue;
}
} else {
return val;
}
break;
}
}
});
var ci_reduce__3 = (function (cicoll,f,val){
var cnt = cljs.core._count(cicoll);
var val__$1 = val;
var n = (0);
while(true){
if((n < cnt)){
var nval = (function (){var G__32932 = val__$1;
var G__32933 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(cicoll,n);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__32932,G__32933) : f.call(null,G__32932,G__32933));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__32938 = nval;
var G__32939 = (n + (1));
val__$1 = G__32938;
n = G__32939;
continue;
}
} else {
return val__$1;
}
break;
}
});
var ci_reduce__4 = (function (cicoll,f,val,idx){
var cnt = cljs.core._count(cicoll);
var val__$1 = val;
var n = idx;
while(true){
if((n < cnt)){
var nval = (function (){var G__32934 = val__$1;
var G__32935 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(cicoll,n);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__32934,G__32935) : f.call(null,G__32934,G__32935));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__32940 = nval;
var G__32941 = (n + (1));
val__$1 = G__32940;
n = G__32941;
continue;
}
} else {
return val__$1;
}
break;
}
});
ci_reduce = function(cicoll,f,val,idx){
switch(arguments.length){
case 2:
return ci_reduce__2.call(this,cicoll,f);
case 3:
return ci_reduce__3.call(this,cicoll,f,val);
case 4:
return ci_reduce__4.call(this,cicoll,f,val,idx);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
ci_reduce.cljs$core$IFn$_invoke$arity$2 = ci_reduce__2;
ci_reduce.cljs$core$IFn$_invoke$arity$3 = ci_reduce__3;
ci_reduce.cljs$core$IFn$_invoke$arity$4 = ci_reduce__4;
return ci_reduce;
})()
;
cljs.core.array_reduce = (function() {
var array_reduce = null;
var array_reduce__2 = (function (arr,f){
var cnt = arr.length;
if((arr.length === (0))){
return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
} else {
var val = (arr[(0)]);
var n = (1);
while(true){
if((n < cnt)){
var nval = (function (){var G__32948 = val;
var G__32949 = (arr[n]);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__32948,G__32949) : f.call(null,G__32948,G__32949));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__32954 = nval;
var G__32955 = (n + (1));
val = G__32954;
n = G__32955;
continue;
}
} else {
return val;
}
break;
}
}
});
var array_reduce__3 = (function (arr,f,val){
var cnt = arr.length;
var val__$1 = val;
var n = (0);
while(true){
if((n < cnt)){
var nval = (function (){var G__32950 = val__$1;
var G__32951 = (arr[n]);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__32950,G__32951) : f.call(null,G__32950,G__32951));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__32956 = nval;
var G__32957 = (n + (1));
val__$1 = G__32956;
n = G__32957;
continue;
}
} else {
return val__$1;
}
break;
}
});
var array_reduce__4 = (function (arr,f,val,idx){
var cnt = arr.length;
var val__$1 = val;
var n = idx;
while(true){
if((n < cnt)){
var nval = (function (){var G__32952 = val__$1;
var G__32953 = (arr[n]);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__32952,G__32953) : f.call(null,G__32952,G__32953));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__32958 = nval;
var G__32959 = (n + (1));
val__$1 = G__32958;
n = G__32959;
continue;
}
} else {
return val__$1;
}
break;
}
});
array_reduce = function(arr,f,val,idx){
switch(arguments.length){
case 2:
return array_reduce__2.call(this,arr,f);
case 3:
return array_reduce__3.call(this,arr,f,val);
case 4:
return array_reduce__4.call(this,arr,f,val,idx);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
array_reduce.cljs$core$IFn$_invoke$arity$2 = array_reduce__2;
array_reduce.cljs$core$IFn$_invoke$arity$3 = array_reduce__3;
array_reduce.cljs$core$IFn$_invoke$arity$4 = array_reduce__4;
return array_reduce;
})()
;



/**
* Returns true if coll implements count in constant time
*/
cljs.core.counted_QMARK_ = (function counted_QMARK_(x){
var G__32961 = x;
if(G__32961){
var bit__24955__auto__ = (G__32961.cljs$lang$protocol_mask$partition0$ & (2));
if((bit__24955__auto__) || (G__32961.cljs$core$ICounted$)){
return true;
} else {
if((!G__32961.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ICounted,G__32961);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ICounted,G__32961);
}
});
/**
* Returns true if coll implements nth in constant time
*/
cljs.core.indexed_QMARK_ = (function indexed_QMARK_(x){
var G__32963 = x;
if(G__32963){
var bit__24955__auto__ = (G__32963.cljs$lang$protocol_mask$partition0$ & (16));
if((bit__24955__auto__) || (G__32963.cljs$core$IIndexed$)){
return true;
} else {
if((!G__32963.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IIndexed,G__32963);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IIndexed,G__32963);
}
});

/**
* @constructor
*/
cljs.core.IndexedSeqIterator = (function (arr,i){
this.arr = arr;
this.i = i;
})
cljs.core.IndexedSeqIterator.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
return (self__.i < self__.arr.length);
});

cljs.core.IndexedSeqIterator.prototype.next = (function (){
var self__ = this;
var _ = this;
var ret = (self__.arr[self__.i]);
self__.i = (self__.i + (1));

return ret;
});

cljs.core.IndexedSeqIterator.cljs$lang$type = true;

cljs.core.IndexedSeqIterator.cljs$lang$ctorStr = "cljs.core/IndexedSeqIterator";

cljs.core.IndexedSeqIterator.cljs$lang$ctorPrWriter = (function (this__24861__auto__,writer__24862__auto__,opt__24863__auto__){
return cljs.core._write(writer__24862__auto__,"cljs.core/IndexedSeqIterator");
});

cljs.core.__GT_IndexedSeqIterator = (function __GT_IndexedSeqIterator(arr,i){
return (new cljs.core.IndexedSeqIterator(arr,i));
});


/**
* @constructor
*/
cljs.core.IndexedSeq = (function (arr,i){
this.arr = arr;
this.i = i;
this.cljs$lang$protocol_mask$partition0$ = 166199550;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.IndexedSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.IndexedSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.IndexedSeq.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (coll,n){
var self__ = this;
var coll__$1 = this;
var i__$1 = (n + self__.i);
if((i__$1 < self__.arr.length)){
return (self__.arr[i__$1]);
} else {
return null;
}
});

cljs.core.IndexedSeq.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (coll,n,not_found){
var self__ = this;
var coll__$1 = this;
var i__$1 = (n + self__.i);
if((i__$1 < self__.arr.length)){
return (self__.arr[i__$1]);
} else {
return not_found;
}
});

cljs.core.IndexedSeq.prototype.cljs$core$IIterable$ = true;

cljs.core.IndexedSeq.prototype.cljs$core$IIterable$_iterator$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.IndexedSeqIterator(self__.arr,self__.i));
});

cljs.core.IndexedSeq.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.IndexedSeq(self__.arr,self__.i));
});

cljs.core.IndexedSeq.prototype.cljs$core$INext$_next$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
if(((self__.i + (1)) < self__.arr.length)){
return (new cljs.core.IndexedSeq(self__.arr,(self__.i + (1))));
} else {
return null;
}
});

cljs.core.IndexedSeq.prototype.cljs$core$ICounted$_count$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (self__.arr.length - self__.i);
});

cljs.core.IndexedSeq.prototype.cljs$core$IReversible$_rseq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var c = cljs.core._count(coll__$1);
if((c > (0))){
return (new cljs.core.RSeq(coll__$1,(c - (1)),null));
} else {
return null;
}
});

cljs.core.IndexedSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.hash_ordered_coll(coll__$1);
});

cljs.core.IndexedSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
var G__32964 = coll__$1;
var G__32965 = other;
return (cljs.core.equiv_sequential.cljs$core$IFn$_invoke$arity$2 ? cljs.core.equiv_sequential.cljs$core$IFn$_invoke$arity$2(G__32964,G__32965) : cljs.core.equiv_sequential.call(null,G__32964,G__32965));
});

cljs.core.IndexedSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.List.EMPTY;
});

cljs.core.IndexedSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4(self__.arr,f,(self__.arr[self__.i]),(self__.i + (1)));
});

cljs.core.IndexedSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4(self__.arr,f,start,self__.i);
});

cljs.core.IndexedSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (self__.arr[self__.i]);
});

cljs.core.IndexedSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
if(((self__.i + (1)) < self__.arr.length)){
return (new cljs.core.IndexedSeq(self__.arr,(self__.i + (1))));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.IndexedSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return this$__$1;
});

cljs.core.IndexedSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
var G__32966 = o;
var G__32967 = coll__$1;
return (cljs.core.cons.cljs$core$IFn$_invoke$arity$2 ? cljs.core.cons.cljs$core$IFn$_invoke$arity$2(G__32966,G__32967) : cljs.core.cons.call(null,G__32966,G__32967));
});

cljs.core.IndexedSeq.cljs$lang$type = true;

cljs.core.IndexedSeq.cljs$lang$ctorStr = "cljs.core/IndexedSeq";

cljs.core.IndexedSeq.cljs$lang$ctorPrWriter = (function (this__24861__auto__,writer__24862__auto__,opt__24863__auto__){
return cljs.core._write(writer__24862__auto__,"cljs.core/IndexedSeq");
});

cljs.core.__GT_IndexedSeq = (function __GT_IndexedSeq(arr,i){
return (new cljs.core.IndexedSeq(arr,i));
});

(cljs.core.IndexedSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__25252__auto__ = this;
return cljs.core.es6_iterator(this__25252__auto__);
}));
cljs.core.prim_seq = (function() {
var prim_seq = null;
var prim_seq__1 = (function (prim){
return prim_seq.cljs$core$IFn$_invoke$arity$2(prim,(0));
});
var prim_seq__2 = (function (prim,i){
if((i < prim.length)){
return (new cljs.core.IndexedSeq(prim,i));
} else {
return null;
}
});
prim_seq = function(prim,i){
switch(arguments.length){
case 1:
return prim_seq__1.call(this,prim);
case 2:
return prim_seq__2.call(this,prim,i);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
prim_seq.cljs$core$IFn$_invoke$arity$1 = prim_seq__1;
prim_seq.cljs$core$IFn$_invoke$arity$2 = prim_seq__2;
return prim_seq;
})()
;
cljs.core.array_seq = (function() {
var array_seq = null;
var array_seq__1 = (function (array){
return cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(array,(0));
});
var array_seq__2 = (function (array,i){
return cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(array,i);
});
array_seq = function(array,i){
switch(arguments.length){
case 1:
return array_seq__1.call(this,array);
case 2:
return array_seq__2.call(this,array,i);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
array_seq.cljs$core$IFn$_invoke$arity$1 = array_seq__1;
array_seq.cljs$core$IFn$_invoke$arity$2 = array_seq__2;
return array_seq;
})()
;


/**
* @constructor
*/
cljs.core.RSeq = (function (ci,i,meta){
this.ci = ci;
this.i = i;
this.meta = meta;
this.cljs$lang$protocol_mask$partition0$ = 32374990;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.RSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.RSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.RSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.RSeq.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.RSeq(self__.ci,self__.i,self__.meta));
});

cljs.core.RSeq.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.i > (0))){
return (new cljs.core.RSeq(self__.ci,(self__.i - (1)),null));
} else {
return null;
}
});

cljs.core.RSeq.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (self__.i + (1));
});

cljs.core.RSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.hash_ordered_coll(coll__$1);
});

cljs.core.RSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
var G__32970 = coll__$1;
var G__32971 = other;
return (cljs.core.equiv_sequential.cljs$core$IFn$_invoke$arity$2 ? cljs.core.equiv_sequential.cljs$core$IFn$_invoke$arity$2(G__32970,G__32971) : cljs.core.equiv_sequential.call(null,G__32970,G__32971));
});

cljs.core.RSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var G__32972 = cljs.core.List.EMPTY;
var G__32973 = self__.meta;
return (cljs.core.with_meta.cljs$core$IFn$_invoke$arity$2 ? cljs.core.with_meta.cljs$core$IFn$_invoke$arity$2(G__32972,G__32973) : cljs.core.with_meta.call(null,G__32972,G__32973));
});

cljs.core.RSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (col,f){
var self__ = this;
var col__$1 = this;
var G__32974 = f;
var G__32975 = col__$1;
return (cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2 ? cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(G__32974,G__32975) : cljs.core.seq_reduce.call(null,G__32974,G__32975));
});

cljs.core.RSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (col,f,start){
var self__ = this;
var col__$1 = this;
var G__32976 = f;
var G__32977 = start;
var G__32978 = col__$1;
return (cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3 ? cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(G__32976,G__32977,G__32978) : cljs.core.seq_reduce.call(null,G__32976,G__32977,G__32978));
});

cljs.core.RSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.ci,self__.i);
});

cljs.core.RSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.i > (0))){
return (new cljs.core.RSeq(self__.ci,(self__.i - (1)),null));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.RSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.RSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,new_meta){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.RSeq(self__.ci,self__.i,new_meta));
});

cljs.core.RSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
var G__32979 = o;
var G__32980 = coll__$1;
return (cljs.core.cons.cljs$core$IFn$_invoke$arity$2 ? cljs.core.cons.cljs$core$IFn$_invoke$arity$2(G__32979,G__32980) : cljs.core.cons.call(null,G__32979,G__32980));
});

cljs.core.RSeq.cljs$lang$type = true;

cljs.core.RSeq.cljs$lang$ctorStr = "cljs.core/RSeq";

cljs.core.RSeq.cljs$lang$ctorPrWriter = (function (this__24861__auto__,writer__24862__auto__,opt__24863__auto__){
return cljs.core._write(writer__24862__auto__,"cljs.core/RSeq");
});

cljs.core.__GT_RSeq = (function __GT_RSeq(ci,i,meta){
return (new cljs.core.RSeq(ci,i,meta));
});

(cljs.core.RSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__25252__auto__ = this;
return cljs.core.es6_iterator(this__25252__auto__);
}));
/**
* Same as (first (next x))
*/
cljs.core.second = (function second(coll){
return cljs.core.first(cljs.core.next(coll));
});
/**
* Same as (first (first x))
*/
cljs.core.ffirst = (function ffirst(coll){
return cljs.core.first(cljs.core.first(coll));
});
/**
* Same as (next (first x))
*/
cljs.core.nfirst = (function nfirst(coll){
return cljs.core.next(cljs.core.first(coll));
});
/**
* Same as (first (next x))
*/
cljs.core.fnext = (function fnext(coll){
return cljs.core.first(cljs.core.next(coll));
});
/**
* Same as (next (next x))
*/
cljs.core.nnext = (function nnext(coll){
return cljs.core.next(cljs.core.next(coll));
});
/**
* Return the last item in coll, in linear time
*/
cljs.core.last = (function last(s){
while(true){
var sn = cljs.core.next(s);
if(!((sn == null))){
var G__32981 = sn;
s = G__32981;
continue;
} else {
return cljs.core.first(s);
}
break;
}
});
(cljs.core.IEquiv["_"] = true);

(cljs.core._equiv["_"] = (function (x,o){
return (x === o);
}));
/**
* conj[oin]. Returns a new collection with the xs
* 'added'. (conj nil item) returns (item).  The 'addition' may
* happen at different 'places' depending on the concrete type.
* @param {...*} var_args
*/
cljs.core.conj = (function() {
var conj = null;
var conj__0 = (function (){
return cljs.core.PersistentVector.EMPTY;
});
var conj__1 = (function (coll){
return coll;
});
var conj__2 = (function (coll,x){
if(!((coll == null))){
return cljs.core._conj(coll,x);
} else {
return cljs.core._conj(cljs.core.List.EMPTY,x);
}
});
var conj__3 = (function() { 
var G__32986__delegate = function (coll,x,xs){
while(true){
if(cljs.core.truth_(xs)){
var G__32987 = conj.cljs$core$IFn$_invoke$arity$2(coll,x);
var G__32988 = cljs.core.first(xs);
var G__32989 = cljs.core.next(xs);
coll = G__32987;
x = G__32988;
xs = G__32989;
continue;
} else {
return conj.cljs$core$IFn$_invoke$arity$2(coll,x);
}
break;
}
};
var G__32986 = function (coll,x,var_args){
var xs = null;
if (arguments.length > 2) {
var G__32990__i = 0, G__32990__a = new Array(arguments.length -  2);
while (G__32990__i < G__32990__a.length) {G__32990__a[G__32990__i] = arguments[G__32990__i + 2]; ++G__32990__i;}
  xs = new cljs.core.IndexedSeq(G__32990__a,0);
} 
return G__32986__delegate.call(this,coll,x,xs);};
G__32986.cljs$lang$maxFixedArity = 2;
G__32986.cljs$lang$applyTo = (function (arglist__32991){
var coll = cljs.core.first(arglist__32991);
arglist__32991 = cljs.core.next(arglist__32991);
var x = cljs.core.first(arglist__32991);
var xs = cljs.core.rest(arglist__32991);
return G__32986__delegate(coll,x,xs);
});
G__32986.cljs$core$IFn$_invoke$arity$variadic = G__32986__delegate;
return G__32986;
})()
;
conj = function(coll,x,var_args){
var xs = var_args;
switch(arguments.length){
case 0:
return conj__0.call(this);
case 1:
return conj__1.call(this,coll);
case 2:
return conj__2.call(this,coll,x);
default:
var G__32992 = null;
if (arguments.length > 2) {
var G__32993__i = 0, G__32993__a = new Array(arguments.length -  2);
while (G__32993__i < G__32993__a.length) {G__32993__a[G__32993__i] = arguments[G__32993__i + 2]; ++G__32993__i;}
G__32992 = new cljs.core.IndexedSeq(G__32993__a,0);
}
return conj__3.cljs$core$IFn$_invoke$arity$variadic(coll,x, G__32992);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
conj.cljs$lang$maxFixedArity = 2;
conj.cljs$lang$applyTo = conj__3.cljs$lang$applyTo;
conj.cljs$core$IFn$_invoke$arity$0 = conj__0;
conj.cljs$core$IFn$_invoke$arity$1 = conj__1;
conj.cljs$core$IFn$_invoke$arity$2 = conj__2;
conj.cljs$core$IFn$_invoke$arity$variadic = conj__3.cljs$core$IFn$_invoke$arity$variadic;
return conj;
})()
;
/**
* Returns an empty collection of the same category as coll, or nil
*/
cljs.core.empty = (function empty(coll){
if((coll == null)){
return null;
} else {
return cljs.core._empty(coll);
}
});
cljs.core.accumulating_seq_count = (function accumulating_seq_count(coll){
var s = cljs.core.seq(coll);
var acc = (0);
while(true){
if(cljs.core.counted_QMARK_(s)){
return (acc + cljs.core._count(s));
} else {
var G__32994 = cljs.core.next(s);
var G__32995 = (acc + (1));
s = G__32994;
acc = G__32995;
continue;
}
break;
}
});
/**
* Returns the number of items in the collection. (count nil) returns
* 0.  Also works on strings, arrays, and Maps
*/
cljs.core.count = (function count(coll){
if(!((coll == null))){
if((function (){var G__32997 = coll;
if(G__32997){
var bit__24948__auto__ = (G__32997.cljs$lang$protocol_mask$partition0$ & (2));
if((bit__24948__auto__) || (G__32997.cljs$core$ICounted$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$ICounted$_count$arity$1(null);
} else {
if(coll instanceof Array){
return coll.length;
} else {
if(typeof coll === 'string'){
return coll.length;
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.ICounted,coll)){
return cljs.core._count(coll);
} else {
return cljs.core.accumulating_seq_count(coll);

}
}
}
}
} else {
return (0);
}
});
cljs.core.linear_traversal_nth = (function() {
var linear_traversal_nth = null;
var linear_traversal_nth__2 = (function (coll,n){
while(true){
if((coll == null)){
throw (new Error("Index out of bounds"));
} else {
if((n === (0))){
if(cljs.core.seq(coll)){
return cljs.core.first(coll);
} else {
throw (new Error("Index out of bounds"));
}
} else {
if(cljs.core.indexed_QMARK_(coll)){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll,n);
} else {
if(cljs.core.seq(coll)){
var G__32998 = cljs.core.next(coll);
var G__32999 = (n - (1));
coll = G__32998;
n = G__32999;
continue;
} else {
throw (new Error("Index out of bounds"));

}
}
}
}
break;
}
});
var linear_traversal_nth__3 = (function (coll,n,not_found){
while(true){
if((coll == null)){
return not_found;
} else {
if((n === (0))){
if(cljs.core.seq(coll)){
return cljs.core.first(coll);
} else {
return not_found;
}
} else {
if(cljs.core.indexed_QMARK_(coll)){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(coll,n,not_found);
} else {
if(cljs.core.seq(coll)){
var G__33000 = cljs.core.next(coll);
var G__33001 = (n - (1));
var G__33002 = not_found;
coll = G__33000;
n = G__33001;
not_found = G__33002;
continue;
} else {
return not_found;

}
}
}
}
break;
}
});
linear_traversal_nth = function(coll,n,not_found){
switch(arguments.length){
case 2:
return linear_traversal_nth__2.call(this,coll,n);
case 3:
return linear_traversal_nth__3.call(this,coll,n,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
linear_traversal_nth.cljs$core$IFn$_invoke$arity$2 = linear_traversal_nth__2;
linear_traversal_nth.cljs$core$IFn$_invoke$arity$3 = linear_traversal_nth__3;
return linear_traversal_nth;
})()
;
/**
* Returns the value at the index. get returns nil if index out of
* bounds, nth throws an exception unless not-found is supplied.  nth
* also works for strings, arrays, regex Matchers and Lists, and,
* in O(n) time, for sequences.
*/
cljs.core.nth = (function() {
var nth = null;
var nth__2 = (function (coll,n){
if(!(typeof n === 'number')){
throw (new Error("index argument to nth must be a number"));
} else {
if((coll == null)){
return coll;
} else {
if((function (){var G__33007 = coll;
if(G__33007){
var bit__24948__auto__ = (G__33007.cljs$lang$protocol_mask$partition0$ & (16));
if((bit__24948__auto__) || (G__33007.cljs$core$IIndexed$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$IIndexed$_nth$arity$2(null,n);
} else {
if(coll instanceof Array){
if((n < coll.length)){
return (coll[n]);
} else {
return null;
}
} else {
if(typeof coll === 'string'){
if((n < coll.length)){
return (coll[n]);
} else {
return null;
}
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.IIndexed,coll)){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll,n);
} else {
if((function (){var G__33008 = coll;
if(G__33008){
var bit__24955__auto__ = (G__33008.cljs$lang$protocol_mask$partition0$ & (64));
if((bit__24955__auto__) || (G__33008.cljs$core$ISeq$)){
return true;
} else {
if((!G__33008.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq,G__33008);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq,G__33008);
}
})()){
return cljs.core.linear_traversal_nth.cljs$core$IFn$_invoke$arity$2(coll,n);
} else {
throw (new Error([cljs.core.str("nth not supported on this type "),cljs.core.str(cljs.core.type__GT_str(cljs.core.type(coll)))].join('')));

}
}
}
}
}
}
}
});
var nth__3 = (function (coll,n,not_found){
if(!(typeof n === 'number')){
throw (new Error("index argument to nth must be a number."));
} else {
if((coll == null)){
return not_found;
} else {
if((function (){var G__33009 = coll;
if(G__33009){
var bit__24948__auto__ = (G__33009.cljs$lang$protocol_mask$partition0$ & (16));
if((bit__24948__auto__) || (G__33009.cljs$core$IIndexed$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$IIndexed$_nth$arity$3(null,n,not_found);
} else {
if(coll instanceof Array){
if((n < coll.length)){
return (coll[n]);
} else {
return not_found;
}
} else {
if(typeof coll === 'string'){
if((n < coll.length)){
return (coll[n]);
} else {
return not_found;
}
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.IIndexed,coll)){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll,n);
} else {
if((function (){var G__33010 = coll;
if(G__33010){
var bit__24955__auto__ = (G__33010.cljs$lang$protocol_mask$partition0$ & (64));
if((bit__24955__auto__) || (G__33010.cljs$core$ISeq$)){
return true;
} else {
if((!G__33010.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq,G__33010);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq,G__33010);
}
})()){
return cljs.core.linear_traversal_nth.cljs$core$IFn$_invoke$arity$3(coll,n,not_found);
} else {
throw (new Error([cljs.core.str("nth not supported on this type "),cljs.core.str(cljs.core.type__GT_str(cljs.core.type(coll)))].join('')));

}
}
}
}
}
}
}
});
nth = function(coll,n,not_found){
switch(arguments.length){
case 2:
return nth__2.call(this,coll,n);
case 3:
return nth__3.call(this,coll,n,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
nth.cljs$core$IFn$_invoke$arity$2 = nth__2;
nth.cljs$core$IFn$_invoke$arity$3 = nth__3;
return nth;
})()
;
/**
* Returns the nth rest of coll, coll when n is 0.
*/
cljs.core.nthrest = (function nthrest(coll,n){
var n__$1 = n;
var xs = coll;
while(true){
if(((n__$1 > (0))) && (cljs.core.seq(xs))){
var G__33011 = (n__$1 - (1));
var G__33012 = cljs.core.rest(xs);
n__$1 = G__33011;
xs = G__33012;
continue;
} else {
return xs;
}
break;
}
});
/**
* Returns the value mapped to key, not-found or nil if key not present.
*/
cljs.core.get = (function() {
var get = null;
var get__2 = (function (o,k){
if((o == null)){
return null;
} else {
if((function (){var G__33015 = o;
if(G__33015){
var bit__24948__auto__ = (G__33015.cljs$lang$protocol_mask$partition0$ & (256));
if((bit__24948__auto__) || (G__33015.cljs$core$ILookup$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return o.cljs$core$ILookup$_lookup$arity$2(null,k);
} else {
if(o instanceof Array){
if((k < o.length)){
return (o[k]);
} else {
return null;
}
} else {
if(typeof o === 'string'){
if((k < o.length)){
return (o[k]);
} else {
return null;
}
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.ILookup,o)){
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$2(o,k);
} else {
return null;

}
}
}
}
}
});
var get__3 = (function (o,k,not_found){
if(!((o == null))){
if((function (){var G__33016 = o;
if(G__33016){
var bit__24948__auto__ = (G__33016.cljs$lang$protocol_mask$partition0$ & (256));
if((bit__24948__auto__) || (G__33016.cljs$core$ILookup$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return o.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
} else {
if(o instanceof Array){
if((k < o.length)){
return (o[k]);
} else {
return not_found;
}
} else {
if(typeof o === 'string'){
if((k < o.length)){
return (o[k]);
} else {
return not_found;
}
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.ILookup,o)){
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(o,k,not_found);
} else {
return not_found;

}
}
}
}
} else {
return not_found;
}
});
get = function(o,k,not_found){
switch(arguments.length){
case 2:
return get__2.call(this,o,k);
case 3:
return get__3.call(this,o,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
get.cljs$core$IFn$_invoke$arity$2 = get__2;
get.cljs$core$IFn$_invoke$arity$3 = get__3;
return get;
})()
;
/**
* assoc[iate]. When applied to a map, returns a new map of the
* same (hashed/sorted) type, that contains the mapping of key(s) to
* val(s). When applied to a vector, returns a new vector that
* contains val at index.
* @param {...*} var_args
*/
cljs.core.assoc = (function() {
var assoc = null;
var assoc__3 = (function (coll,k,v){
if(!((coll == null))){
return cljs.core._assoc(coll,k,v);
} else {
return cljs.core.PersistentHashMap.fromArrays([k],[v]);
}
});
var assoc__4 = (function() { 
var G__33020__delegate = function (coll,k,v,kvs){
while(true){
var ret = assoc.cljs$core$IFn$_invoke$arity$3(coll,k,v);
if(cljs.core.truth_(kvs)){
var G__33021 = ret;
var G__33022 = cljs.core.first(kvs);
var G__33023 = cljs.core.second(kvs);
var G__33024 = cljs.core.nnext(kvs);
coll = G__33021;
k = G__33022;
v = G__33023;
kvs = G__33024;
continue;
} else {
return ret;
}
break;
}
};
var G__33020 = function (coll,k,v,var_args){
var kvs = null;
if (arguments.length > 3) {
var G__33025__i = 0, G__33025__a = new Array(arguments.length -  3);
while (G__33025__i < G__33025__a.length) {G__33025__a[G__33025__i] = arguments[G__33025__i + 3]; ++G__33025__i;}
  kvs = new cljs.core.IndexedSeq(G__33025__a,0);
} 
return G__33020__delegate.call(this,coll,k,v,kvs);};
G__33020.cljs$lang$maxFixedArity = 3;
G__33020.cljs$lang$applyTo = (function (arglist__33026){
var coll = cljs.core.first(arglist__33026);
arglist__33026 = cljs.core.next(arglist__33026);
var k = cljs.core.first(arglist__33026);
arglist__33026 = cljs.core.next(arglist__33026);
var v = cljs.core.first(arglist__33026);
var kvs = cljs.core.rest(arglist__33026);
return G__33020__delegate(coll,k,v,kvs);
});
G__33020.cljs$core$IFn$_invoke$arity$variadic = G__33020__delegate;
return G__33020;
})()
;
assoc = function(coll,k,v,var_args){
var kvs = var_args;
switch(arguments.length){
case 3:
return assoc__3.call(this,coll,k,v);
default:
var G__33027 = null;
if (arguments.length > 3) {
var G__33028__i = 0, G__33028__a = new Array(arguments.length -  3);
while (G__33028__i < G__33028__a.length) {G__33028__a[G__33028__i] = arguments[G__33028__i + 3]; ++G__33028__i;}
G__33027 = new cljs.core.IndexedSeq(G__33028__a,0);
}
return assoc__4.cljs$core$IFn$_invoke$arity$variadic(coll,k,v, G__33027);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
assoc.cljs$lang$maxFixedArity = 3;
assoc.cljs$lang$applyTo = assoc__4.cljs$lang$applyTo;
assoc.cljs$core$IFn$_invoke$arity$3 = assoc__3;
assoc.cljs$core$IFn$_invoke$arity$variadic = assoc__4.cljs$core$IFn$_invoke$arity$variadic;
return assoc;
})()
;
/**
* dissoc[iate]. Returns a new map of the same (hashed/sorted) type,
* that does not contain a mapping for key(s).
* @param {...*} var_args
*/
cljs.core.dissoc = (function() {
var dissoc = null;
var dissoc__1 = (function (coll){
return coll;
});
var dissoc__2 = (function (coll,k){
if((coll == null)){
return null;
} else {
return cljs.core._dissoc(coll,k);
}
});
var dissoc__3 = (function() { 
var G__33031__delegate = function (coll,k,ks){
while(true){
if((coll == null)){
return null;
} else {
var ret = dissoc.cljs$core$IFn$_invoke$arity$2(coll,k);
if(cljs.core.truth_(ks)){
var G__33032 = ret;
var G__33033 = cljs.core.first(ks);
var G__33034 = cljs.core.next(ks);
coll = G__33032;
k = G__33033;
ks = G__33034;
continue;
} else {
return ret;
}
}
break;
}
};
var G__33031 = function (coll,k,var_args){
var ks = null;
if (arguments.length > 2) {
var G__33035__i = 0, G__33035__a = new Array(arguments.length -  2);
while (G__33035__i < G__33035__a.length) {G__33035__a[G__33035__i] = arguments[G__33035__i + 2]; ++G__33035__i;}
  ks = new cljs.core.IndexedSeq(G__33035__a,0);
} 
return G__33031__delegate.call(this,coll,k,ks);};
G__33031.cljs$lang$maxFixedArity = 2;
G__33031.cljs$lang$applyTo = (function (arglist__33036){
var coll = cljs.core.first(arglist__33036);
arglist__33036 = cljs.core.next(arglist__33036);
var k = cljs.core.first(arglist__33036);
var ks = cljs.core.rest(arglist__33036);
return G__33031__delegate(coll,k,ks);
});
G__33031.cljs$core$IFn$_invoke$arity$variadic = G__33031__delegate;
return G__33031;
})()
;
dissoc = function(coll,k,var_args){
var ks = var_args;
switch(arguments.length){
case 1:
return dissoc__1.call(this,coll);
case 2:
return dissoc__2.call(this,coll,k);
default:
var G__33037 = null;
if (arguments.length > 2) {
var G__33038__i = 0, G__33038__a = new Array(arguments.length -  2);
while (G__33038__i < G__33038__a.length) {G__33038__a[G__33038__i] = arguments[G__33038__i + 2]; ++G__33038__i;}
G__33037 = new cljs.core.IndexedSeq(G__33038__a,0);
}
return dissoc__3.cljs$core$IFn$_invoke$arity$variadic(coll,k, G__33037);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
dissoc.cljs$lang$maxFixedArity = 2;
dissoc.cljs$lang$applyTo = dissoc__3.cljs$lang$applyTo;
dissoc.cljs$core$IFn$_invoke$arity$1 = dissoc__1;
dissoc.cljs$core$IFn$_invoke$arity$2 = dissoc__2;
dissoc.cljs$core$IFn$_invoke$arity$variadic = dissoc__3.cljs$core$IFn$_invoke$arity$variadic;
return dissoc;
})()
;
cljs.core.fn_QMARK_ = (function fn_QMARK_(f){
var or__24274__auto__ = (function (){var G__33043 = f;
return goog.isFunction(G__33043);
})();
if(cljs.core.truth_(or__24274__auto__)){
return or__24274__auto__;
} else {
var G__33044 = f;
if(G__33044){
var bit__24955__auto__ = null;
if(cljs.core.truth_((function (){var or__24274__auto____$1 = bit__24955__auto__;
if(cljs.core.truth_(or__24274__auto____$1)){
return or__24274__auto____$1;
} else {
return G__33044.cljs$core$Fn$;
}
})())){
return true;
} else {
if((!G__33044.cljs$lang$protocol_mask$partition$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.Fn,G__33044);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.Fn,G__33044);
}
}
});

/**
* @constructor
*/
cljs.core.MetaFn = (function (afn,meta){
this.afn = afn;
this.meta = meta;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 393217;
})
cljs.core.MetaFn.prototype.call = (function() {
var G__33510 = null;
var G__33510__1 = (function (self__){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (self__.afn.cljs$core$IFn$_invoke$arity$0 ? self__.afn.cljs$core$IFn$_invoke$arity$0() : self__.afn.call(null));
});
var G__33510__2 = (function (self__,a){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__33046 = a;
return (self__.afn.cljs$core$IFn$_invoke$arity$1 ? self__.afn.cljs$core$IFn$_invoke$arity$1(G__33046) : self__.afn.call(null,G__33046));
});
var G__33510__3 = (function (self__,a,b){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__33047 = a;
var G__33048 = b;
return (self__.afn.cljs$core$IFn$_invoke$arity$2 ? self__.afn.cljs$core$IFn$_invoke$arity$2(G__33047,G__33048) : self__.afn.call(null,G__33047,G__33048));
});
var G__33510__4 = (function (self__,a,b,c){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__33049 = a;
var G__33050 = b;
var G__33051 = c;
return (self__.afn.cljs$core$IFn$_invoke$arity$3 ? self__.afn.cljs$core$IFn$_invoke$arity$3(G__33049,G__33050,G__33051) : self__.afn.call(null,G__33049,G__33050,G__33051));
});
var G__33510__5 = (function (self__,a,b,c,d){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__33052 = a;
var G__33053 = b;
var G__33054 = c;
var G__33055 = d;
return (self__.afn.cljs$core$IFn$_invoke$arity$4 ? self__.afn.cljs$core$IFn$_invoke$arity$4(G__33052,G__33053,G__33054,G__33055) : self__.afn.call(null,G__33052,G__33053,G__33054,G__33055));
});
var G__33510__6 = (function (self__,a,b,c,d,e){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__33056 = a;
var G__33057 = b;
var G__33058 = c;
var G__33059 = d;
var G__33060 = e;
return (self__.afn.cljs$core$IFn$_invoke$arity$5 ? self__.afn.cljs$core$IFn$_invoke$arity$5(G__33056,G__33057,G__33058,G__33059,G__33060) : self__.afn.call(null,G__33056,G__33057,G__33058,G__33059,G__33060));
});
var G__33510__7 = (function (self__,a,b,c,d,e,f){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__33061 = a;
var G__33062 = b;
var G__33063 = c;
var G__33064 = d;
var G__33065 = e;
var G__33066 = f;
return (self__.afn.cljs$core$IFn$_invoke$arity$6 ? self__.afn.cljs$core$IFn$_invoke$arity$6(G__33061,G__33062,G__33063,G__33064,G__33065,G__33066) : self__.afn.call(null,G__33061,G__33062,G__33063,G__33064,G__33065,G__33066));
});
var G__33510__8 = (function (self__,a,b,c,d,e,f,g){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__33067 = a;
var G__33068 = b;
var G__33069 = c;
var G__33070 = d;
var G__33071 = e;
var G__33072 = f;
var G__33073 = g;
return (self__.afn.cljs$core$IFn$_invoke$arity$7 ? self__.afn.cljs$core$IFn$_invoke$arity$7(G__33067,G__33068,G__33069,G__33070,G__33071,G__33072,G__33073) : self__.afn.call(null,G__33067,G__33068,G__33069,G__33070,G__33071,G__33072,G__33073));
});
var G__33510__9 = (function (self__,a,b,c,d,e,f,g,h){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__33074 = a;
var G__33075 = b;
var G__33076 = c;
var G__33077 = d;
var G__33078 = e;
var G__33079 = f;
var G__33080 = g;
var G__33081 = h;
return (self__.afn.cljs$core$IFn$_invoke$arity$8 ? self__.afn.cljs$core$IFn$_invoke$arity$8(G__33074,G__33075,G__33076,G__33077,G__33078,G__33079,G__33080,G__33081) : self__.afn.call(null,G__33074,G__33075,G__33076,G__33077,G__33078,G__33079,G__33080,G__33081));
});
var G__33510__10 = (function (self__,a,b,c,d,e,f,g,h,i){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__33082 = a;
var G__33083 = b;
var G__33084 = c;
var G__33085 = d;
var G__33086 = e;
var G__33087 = f;
var G__33088 = g;
var G__33089 = h;
var G__33090 = i;
return (self__.afn.cljs$core$IFn$_invoke$arity$9 ? self__.afn.cljs$core$IFn$_invoke$arity$9(G__33082,G__33083,G__33084,G__33085,G__33086,G__33087,G__33088,G__33089,G__33090) : self__.afn.call(null,G__33082,G__33083,G__33084,G__33085,G__33086,G__33087,G__33088,G__33089,G__33090));
});
var G__33510__11 = (function (self__,a,b,c,d,e,f,g,h,i,j){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__33091 = a;
var G__33092 = b;
var G__33093 = c;
var G__33094 = d;
var G__33095 = e;
var G__33096 = f;
var G__33097 = g;
var G__33098 = h;
var G__33099 = i;
var G__33100 = j;
return (self__.afn.cljs$core$IFn$_invoke$arity$10 ? self__.afn.cljs$core$IFn$_invoke$arity$10(G__33091,G__33092,G__33093,G__33094,G__33095,G__33096,G__33097,G__33098,G__33099,G__33100) : self__.afn.call(null,G__33091,G__33092,G__33093,G__33094,G__33095,G__33096,G__33097,G__33098,G__33099,G__33100));
});
var G__33510__12 = (function (self__,a,b,c,d,e,f,g,h,i,j,k){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__33101 = a;
var G__33102 = b;
var G__33103 = c;
var G__33104 = d;
var G__33105 = e;
var G__33106 = f;
var G__33107 = g;
var G__33108 = h;
var G__33109 = i;
var G__33110 = j;
var G__33111 = k;
return (self__.afn.cljs$core$IFn$_invoke$arity$11 ? self__.afn.cljs$core$IFn$_invoke$arity$11(G__33101,G__33102,G__33103,G__33104,G__33105,G__33106,G__33107,G__33108,G__33109,G__33110,G__33111) : self__.afn.call(null,G__33101,G__33102,G__33103,G__33104,G__33105,G__33106,G__33107,G__33108,G__33109,G__33110,G__33111));
});
var G__33510__13 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__33112 = a;
var G__33113 = b;
var G__33114 = c;
var G__33115 = d;
var G__33116 = e;
var G__33117 = f;
var G__33118 = g;
var G__33119 = h;
var G__33120 = i;
var G__33121 = j;
var G__33122 = k;
var G__33123 = l;
return (self__.afn.cljs$core$IFn$_invoke$arity$12 ? self__.afn.cljs$core$IFn$_invoke$arity$12(G__33112,G__33113,G__33114,G__33115,G__33116,G__33117,G__33118,G__33119,G__33120,G__33121,G__33122,G__33123) : self__.afn.call(null,G__33112,G__33113,G__33114,G__33115,G__33116,G__33117,G__33118,G__33119,G__33120,G__33121,G__33122,G__33123));
});
var G__33510__14 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__33124 = a;
var G__33125 = b;
var G__33126 = c;
var G__33127 = d;
var G__33128 = e;
var G__33129 = f;
var G__33130 = g;
var G__33131 = h;
var G__33132 = i;
var G__33133 = j;
var G__33134 = k;
var G__33135 = l;
var G__33136 = m;
return (self__.afn.cljs$core$IFn$_invoke$arity$13 ? self__.afn.cljs$core$IFn$_invoke$arity$13(G__33124,G__33125,G__33126,G__33127,G__33128,G__33129,G__33130,G__33131,G__33132,G__33133,G__33134,G__33135,G__33136) : self__.afn.call(null,G__33124,G__33125,G__33126,G__33127,G__33128,G__33129,G__33130,G__33131,G__33132,G__33133,G__33134,G__33135,G__33136));
});
var G__33510__15 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__33137 = a;
var G__33138 = b;
var G__33139 = c;
var G__33140 = d;
var G__33141 = e;
var G__33142 = f;
var G__33143 = g;
var G__33144 = h;
var G__33145 = i;
var G__33146 = j;
var G__33147 = k;
var G__33148 = l;
var G__33149 = m;
var G__33150 = n;
return (self__.afn.cljs$core$IFn$_invoke$arity$14 ? self__.afn.cljs$core$IFn$_invoke$arity$14(G__33137,G__33138,G__33139,G__33140,G__33141,G__33142,G__33143,G__33144,G__33145,G__33146,G__33147,G__33148,G__33149,G__33150) : self__.afn.call(null,G__33137,G__33138,G__33139,G__33140,G__33141,G__33142,G__33143,G__33144,G__33145,G__33146,G__33147,G__33148,G__33149,G__33150));
});
var G__33510__16 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__33151 = a;
var G__33152 = b;
var G__33153 = c;
var G__33154 = d;
var G__33155 = e;
var G__33156 = f;
var G__33157 = g;
var G__33158 = h;
var G__33159 = i;
var G__33160 = j;
var G__33161 = k;
var G__33162 = l;
var G__33163 = m;
var G__33164 = n;
var G__33165 = o;
return (self__.afn.cljs$core$IFn$_invoke$arity$15 ? self__.afn.cljs$core$IFn$_invoke$arity$15(G__33151,G__33152,G__33153,G__33154,G__33155,G__33156,G__33157,G__33158,G__33159,G__33160,G__33161,G__33162,G__33163,G__33164,G__33165) : self__.afn.call(null,G__33151,G__33152,G__33153,G__33154,G__33155,G__33156,G__33157,G__33158,G__33159,G__33160,G__33161,G__33162,G__33163,G__33164,G__33165));
});
var G__33510__17 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__33166 = a;
var G__33167 = b;
var G__33168 = c;
var G__33169 = d;
var G__33170 = e;
var G__33171 = f;
var G__33172 = g;
var G__33173 = h;
var G__33174 = i;
var G__33175 = j;
var G__33176 = k;
var G__33177 = l;
var G__33178 = m;
var G__33179 = n;
var G__33180 = o;
var G__33181 = p;
return (self__.afn.cljs$core$IFn$_invoke$arity$16 ? self__.afn.cljs$core$IFn$_invoke$arity$16(G__33166,G__33167,G__33168,G__33169,G__33170,G__33171,G__33172,G__33173,G__33174,G__33175,G__33176,G__33177,G__33178,G__33179,G__33180,G__33181) : self__.afn.call(null,G__33166,G__33167,G__33168,G__33169,G__33170,G__33171,G__33172,G__33173,G__33174,G__33175,G__33176,G__33177,G__33178,G__33179,G__33180,G__33181));
});
var G__33510__18 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__33182 = a;
var G__33183 = b;
var G__33184 = c;
var G__33185 = d;
var G__33186 = e;
var G__33187 = f;
var G__33188 = g;
var G__33189 = h;
var G__33190 = i;
var G__33191 = j;
var G__33192 = k;
var G__33193 = l;
var G__33194 = m;
var G__33195 = n;
var G__33196 = o;
var G__33197 = p;
var G__33198 = q;
return (self__.afn.cljs$core$IFn$_invoke$arity$17 ? self__.afn.cljs$core$IFn$_invoke$arity$17(G__33182,G__33183,G__33184,G__33185,G__33186,G__33187,G__33188,G__33189,G__33190,G__33191,G__33192,G__33193,G__33194,G__33195,G__33196,G__33197,G__33198) : self__.afn.call(null,G__33182,G__33183,G__33184,G__33185,G__33186,G__33187,G__33188,G__33189,G__33190,G__33191,G__33192,G__33193,G__33194,G__33195,G__33196,G__33197,G__33198));
});
var G__33510__19 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__33199 = a;
var G__33200 = b;
var G__33201 = c;
var G__33202 = d;
var G__33203 = e;
var G__33204 = f;
var G__33205 = g;
var G__33206 = h;
var G__33207 = i;
var G__33208 = j;
var G__33209 = k;
var G__33210 = l;
var G__33211 = m;
var G__33212 = n;
var G__33213 = o;
var G__33214 = p;
var G__33215 = q;
var G__33216 = r;
return (self__.afn.cljs$core$IFn$_invoke$arity$18 ? self__.afn.cljs$core$IFn$_invoke$arity$18(G__33199,G__33200,G__33201,G__33202,G__33203,G__33204,G__33205,G__33206,G__33207,G__33208,G__33209,G__33210,G__33211,G__33212,G__33213,G__33214,G__33215,G__33216) : self__.afn.call(null,G__33199,G__33200,G__33201,G__33202,G__33203,G__33204,G__33205,G__33206,G__33207,G__33208,G__33209,G__33210,G__33211,G__33212,G__33213,G__33214,G__33215,G__33216));
});
var G__33510__20 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__33217 = a;
var G__33218 = b;
var G__33219 = c;
var G__33220 = d;
var G__33221 = e;
var G__33222 = f;
var G__33223 = g;
var G__33224 = h;
var G__33225 = i;
var G__33226 = j;
var G__33227 = k;
var G__33228 = l;
var G__33229 = m;
var G__33230 = n;
var G__33231 = o;
var G__33232 = p;
var G__33233 = q;
var G__33234 = r;
var G__33235 = s;
return (self__.afn.cljs$core$IFn$_invoke$arity$19 ? self__.afn.cljs$core$IFn$_invoke$arity$19(G__33217,G__33218,G__33219,G__33220,G__33221,G__33222,G__33223,G__33224,G__33225,G__33226,G__33227,G__33228,G__33229,G__33230,G__33231,G__33232,G__33233,G__33234,G__33235) : self__.afn.call(null,G__33217,G__33218,G__33219,G__33220,G__33221,G__33222,G__33223,G__33224,G__33225,G__33226,G__33227,G__33228,G__33229,G__33230,G__33231,G__33232,G__33233,G__33234,G__33235));
});
var G__33510__21 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__33236 = a;
var G__33237 = b;
var G__33238 = c;
var G__33239 = d;
var G__33240 = e;
var G__33241 = f;
var G__33242 = g;
var G__33243 = h;
var G__33244 = i;
var G__33245 = j;
var G__33246 = k;
var G__33247 = l;
var G__33248 = m;
var G__33249 = n;
var G__33250 = o;
var G__33251 = p;
var G__33252 = q;
var G__33253 = r;
var G__33254 = s;
var G__33255 = t;
return (self__.afn.cljs$core$IFn$_invoke$arity$20 ? self__.afn.cljs$core$IFn$_invoke$arity$20(G__33236,G__33237,G__33238,G__33239,G__33240,G__33241,G__33242,G__33243,G__33244,G__33245,G__33246,G__33247,G__33248,G__33249,G__33250,G__33251,G__33252,G__33253,G__33254,G__33255) : self__.afn.call(null,G__33236,G__33237,G__33238,G__33239,G__33240,G__33241,G__33242,G__33243,G__33244,G__33245,G__33246,G__33247,G__33248,G__33249,G__33250,G__33251,G__33252,G__33253,G__33254,G__33255));
});
var G__33510__22 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__33256 = self__.afn;
var G__33257 = a;
var G__33258 = b;
var G__33259 = c;
var G__33260 = d;
var G__33261 = e;
var G__33262 = f;
var G__33263 = g;
var G__33264 = h;
var G__33265 = i;
var G__33266 = j;
var G__33267 = k;
var G__33268 = l;
var G__33269 = m;
var G__33270 = n;
var G__33271 = o;
var G__33272 = p;
var G__33273 = q;
var G__33274 = r;
var G__33275 = s;
var G__33276 = t;
var G__33277 = rest;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$22 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$22(G__33256,G__33257,G__33258,G__33259,G__33260,G__33261,G__33262,G__33263,G__33264,G__33265,G__33266,G__33267,G__33268,G__33269,G__33270,G__33271,G__33272,G__33273,G__33274,G__33275,G__33276,G__33277) : cljs.core.apply.call(null,G__33256,G__33257,G__33258,G__33259,G__33260,G__33261,G__33262,G__33263,G__33264,G__33265,G__33266,G__33267,G__33268,G__33269,G__33270,G__33271,G__33272,G__33273,G__33274,G__33275,G__33276,G__33277));
});
G__33510 = function(self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
switch(arguments.length){
case 1:
return G__33510__1.call(this,self__);
case 2:
return G__33510__2.call(this,self__,a);
case 3:
return G__33510__3.call(this,self__,a,b);
case 4:
return G__33510__4.call(this,self__,a,b,c);
case 5:
return G__33510__5.call(this,self__,a,b,c,d);
case 6:
return G__33510__6.call(this,self__,a,b,c,d,e);
case 7:
return G__33510__7.call(this,self__,a,b,c,d,e,f);
case 8:
return G__33510__8.call(this,self__,a,b,c,d,e,f,g);
case 9:
return G__33510__9.call(this,self__,a,b,c,d,e,f,g,h);
case 10:
return G__33510__10.call(this,self__,a,b,c,d,e,f,g,h,i);
case 11:
return G__33510__11.call(this,self__,a,b,c,d,e,f,g,h,i,j);
case 12:
return G__33510__12.call(this,self__,a,b,c,d,e,f,g,h,i,j,k);
case 13:
return G__33510__13.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l);
case 14:
return G__33510__14.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m);
case 15:
return G__33510__15.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
case 16:
return G__33510__16.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
case 17:
return G__33510__17.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
case 18:
return G__33510__18.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
case 19:
return G__33510__19.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
case 20:
return G__33510__20.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
case 21:
return G__33510__21.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
case 22:
return G__33510__22.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__33510.cljs$core$IFn$_invoke$arity$1 = G__33510__1;
G__33510.cljs$core$IFn$_invoke$arity$2 = G__33510__2;
G__33510.cljs$core$IFn$_invoke$arity$3 = G__33510__3;
G__33510.cljs$core$IFn$_invoke$arity$4 = G__33510__4;
G__33510.cljs$core$IFn$_invoke$arity$5 = G__33510__5;
G__33510.cljs$core$IFn$_invoke$arity$6 = G__33510__6;
G__33510.cljs$core$IFn$_invoke$arity$7 = G__33510__7;
G__33510.cljs$core$IFn$_invoke$arity$8 = G__33510__8;
G__33510.cljs$core$IFn$_invoke$arity$9 = G__33510__9;
G__33510.cljs$core$IFn$_invoke$arity$10 = G__33510__10;
G__33510.cljs$core$IFn$_invoke$arity$11 = G__33510__11;
G__33510.cljs$core$IFn$_invoke$arity$12 = G__33510__12;
G__33510.cljs$core$IFn$_invoke$arity$13 = G__33510__13;
G__33510.cljs$core$IFn$_invoke$arity$14 = G__33510__14;
G__33510.cljs$core$IFn$_invoke$arity$15 = G__33510__15;
G__33510.cljs$core$IFn$_invoke$arity$16 = G__33510__16;
G__33510.cljs$core$IFn$_invoke$arity$17 = G__33510__17;
G__33510.cljs$core$IFn$_invoke$arity$18 = G__33510__18;
G__33510.cljs$core$IFn$_invoke$arity$19 = G__33510__19;
G__33510.cljs$core$IFn$_invoke$arity$20 = G__33510__20;
G__33510.cljs$core$IFn$_invoke$arity$21 = G__33510__21;
G__33510.cljs$core$IFn$_invoke$arity$22 = G__33510__22;
return G__33510;
})()
;

cljs.core.MetaFn.prototype.apply = (function (self__,args33045){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args33045)));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$0 = (function (){
var self__ = this;
var _ = this;
return (self__.afn.cljs$core$IFn$_invoke$arity$0 ? self__.afn.cljs$core$IFn$_invoke$arity$0() : self__.afn.call(null));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$1 = (function (a){
var self__ = this;
var _ = this;
var G__33278 = a;
return (self__.afn.cljs$core$IFn$_invoke$arity$1 ? self__.afn.cljs$core$IFn$_invoke$arity$1(G__33278) : self__.afn.call(null,G__33278));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$2 = (function (a,b){
var self__ = this;
var _ = this;
var G__33279 = a;
var G__33280 = b;
return (self__.afn.cljs$core$IFn$_invoke$arity$2 ? self__.afn.cljs$core$IFn$_invoke$arity$2(G__33279,G__33280) : self__.afn.call(null,G__33279,G__33280));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$3 = (function (a,b,c){
var self__ = this;
var _ = this;
var G__33281 = a;
var G__33282 = b;
var G__33283 = c;
return (self__.afn.cljs$core$IFn$_invoke$arity$3 ? self__.afn.cljs$core$IFn$_invoke$arity$3(G__33281,G__33282,G__33283) : self__.afn.call(null,G__33281,G__33282,G__33283));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$4 = (function (a,b,c,d){
var self__ = this;
var _ = this;
var G__33284 = a;
var G__33285 = b;
var G__33286 = c;
var G__33287 = d;
return (self__.afn.cljs$core$IFn$_invoke$arity$4 ? self__.afn.cljs$core$IFn$_invoke$arity$4(G__33284,G__33285,G__33286,G__33287) : self__.afn.call(null,G__33284,G__33285,G__33286,G__33287));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$5 = (function (a,b,c,d,e){
var self__ = this;
var _ = this;
var G__33288 = a;
var G__33289 = b;
var G__33290 = c;
var G__33291 = d;
var G__33292 = e;
return (self__.afn.cljs$core$IFn$_invoke$arity$5 ? self__.afn.cljs$core$IFn$_invoke$arity$5(G__33288,G__33289,G__33290,G__33291,G__33292) : self__.afn.call(null,G__33288,G__33289,G__33290,G__33291,G__33292));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$6 = (function (a,b,c,d,e,f){
var self__ = this;
var _ = this;
var G__33293 = a;
var G__33294 = b;
var G__33295 = c;
var G__33296 = d;
var G__33297 = e;
var G__33298 = f;
return (self__.afn.cljs$core$IFn$_invoke$arity$6 ? self__.afn.cljs$core$IFn$_invoke$arity$6(G__33293,G__33294,G__33295,G__33296,G__33297,G__33298) : self__.afn.call(null,G__33293,G__33294,G__33295,G__33296,G__33297,G__33298));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$7 = (function (a,b,c,d,e,f,g){
var self__ = this;
var _ = this;
var G__33299 = a;
var G__33300 = b;
var G__33301 = c;
var G__33302 = d;
var G__33303 = e;
var G__33304 = f;
var G__33305 = g;
return (self__.afn.cljs$core$IFn$_invoke$arity$7 ? self__.afn.cljs$core$IFn$_invoke$arity$7(G__33299,G__33300,G__33301,G__33302,G__33303,G__33304,G__33305) : self__.afn.call(null,G__33299,G__33300,G__33301,G__33302,G__33303,G__33304,G__33305));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$8 = (function (a,b,c,d,e,f,g,h){
var self__ = this;
var _ = this;
var G__33306 = a;
var G__33307 = b;
var G__33308 = c;
var G__33309 = d;
var G__33310 = e;
var G__33311 = f;
var G__33312 = g;
var G__33313 = h;
return (self__.afn.cljs$core$IFn$_invoke$arity$8 ? self__.afn.cljs$core$IFn$_invoke$arity$8(G__33306,G__33307,G__33308,G__33309,G__33310,G__33311,G__33312,G__33313) : self__.afn.call(null,G__33306,G__33307,G__33308,G__33309,G__33310,G__33311,G__33312,G__33313));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$9 = (function (a,b,c,d,e,f,g,h,i){
var self__ = this;
var _ = this;
var G__33314 = a;
var G__33315 = b;
var G__33316 = c;
var G__33317 = d;
var G__33318 = e;
var G__33319 = f;
var G__33320 = g;
var G__33321 = h;
var G__33322 = i;
return (self__.afn.cljs$core$IFn$_invoke$arity$9 ? self__.afn.cljs$core$IFn$_invoke$arity$9(G__33314,G__33315,G__33316,G__33317,G__33318,G__33319,G__33320,G__33321,G__33322) : self__.afn.call(null,G__33314,G__33315,G__33316,G__33317,G__33318,G__33319,G__33320,G__33321,G__33322));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$10 = (function (a,b,c,d,e,f,g,h,i,j){
var self__ = this;
var _ = this;
var G__33323 = a;
var G__33324 = b;
var G__33325 = c;
var G__33326 = d;
var G__33327 = e;
var G__33328 = f;
var G__33329 = g;
var G__33330 = h;
var G__33331 = i;
var G__33332 = j;
return (self__.afn.cljs$core$IFn$_invoke$arity$10 ? self__.afn.cljs$core$IFn$_invoke$arity$10(G__33323,G__33324,G__33325,G__33326,G__33327,G__33328,G__33329,G__33330,G__33331,G__33332) : self__.afn.call(null,G__33323,G__33324,G__33325,G__33326,G__33327,G__33328,G__33329,G__33330,G__33331,G__33332));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$11 = (function (a,b,c,d,e,f,g,h,i,j,k){
var self__ = this;
var _ = this;
var G__33333 = a;
var G__33334 = b;
var G__33335 = c;
var G__33336 = d;
var G__33337 = e;
var G__33338 = f;
var G__33339 = g;
var G__33340 = h;
var G__33341 = i;
var G__33342 = j;
var G__33343 = k;
return (self__.afn.cljs$core$IFn$_invoke$arity$11 ? self__.afn.cljs$core$IFn$_invoke$arity$11(G__33333,G__33334,G__33335,G__33336,G__33337,G__33338,G__33339,G__33340,G__33341,G__33342,G__33343) : self__.afn.call(null,G__33333,G__33334,G__33335,G__33336,G__33337,G__33338,G__33339,G__33340,G__33341,G__33342,G__33343));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$12 = (function (a,b,c,d,e,f,g,h,i,j,k,l){
var self__ = this;
var _ = this;
var G__33344 = a;
var G__33345 = b;
var G__33346 = c;
var G__33347 = d;
var G__33348 = e;
var G__33349 = f;
var G__33350 = g;
var G__33351 = h;
var G__33352 = i;
var G__33353 = j;
var G__33354 = k;
var G__33355 = l;
return (self__.afn.cljs$core$IFn$_invoke$arity$12 ? self__.afn.cljs$core$IFn$_invoke$arity$12(G__33344,G__33345,G__33346,G__33347,G__33348,G__33349,G__33350,G__33351,G__33352,G__33353,G__33354,G__33355) : self__.afn.call(null,G__33344,G__33345,G__33346,G__33347,G__33348,G__33349,G__33350,G__33351,G__33352,G__33353,G__33354,G__33355));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$13 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m){
var self__ = this;
var _ = this;
var G__33356 = a;
var G__33357 = b;
var G__33358 = c;
var G__33359 = d;
var G__33360 = e;
var G__33361 = f;
var G__33362 = g;
var G__33363 = h;
var G__33364 = i;
var G__33365 = j;
var G__33366 = k;
var G__33367 = l;
var G__33368 = m;
return (self__.afn.cljs$core$IFn$_invoke$arity$13 ? self__.afn.cljs$core$IFn$_invoke$arity$13(G__33356,G__33357,G__33358,G__33359,G__33360,G__33361,G__33362,G__33363,G__33364,G__33365,G__33366,G__33367,G__33368) : self__.afn.call(null,G__33356,G__33357,G__33358,G__33359,G__33360,G__33361,G__33362,G__33363,G__33364,G__33365,G__33366,G__33367,G__33368));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$14 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n){
var self__ = this;
var _ = this;
var G__33369 = a;
var G__33370 = b;
var G__33371 = c;
var G__33372 = d;
var G__33373 = e;
var G__33374 = f;
var G__33375 = g;
var G__33376 = h;
var G__33377 = i;
var G__33378 = j;
var G__33379 = k;
var G__33380 = l;
var G__33381 = m;
var G__33382 = n;
return (self__.afn.cljs$core$IFn$_invoke$arity$14 ? self__.afn.cljs$core$IFn$_invoke$arity$14(G__33369,G__33370,G__33371,G__33372,G__33373,G__33374,G__33375,G__33376,G__33377,G__33378,G__33379,G__33380,G__33381,G__33382) : self__.afn.call(null,G__33369,G__33370,G__33371,G__33372,G__33373,G__33374,G__33375,G__33376,G__33377,G__33378,G__33379,G__33380,G__33381,G__33382));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$15 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
var self__ = this;
var _ = this;
var G__33383 = a;
var G__33384 = b;
var G__33385 = c;
var G__33386 = d;
var G__33387 = e;
var G__33388 = f;
var G__33389 = g;
var G__33390 = h;
var G__33391 = i;
var G__33392 = j;
var G__33393 = k;
var G__33394 = l;
var G__33395 = m;
var G__33396 = n;
var G__33397 = o;
return (self__.afn.cljs$core$IFn$_invoke$arity$15 ? self__.afn.cljs$core$IFn$_invoke$arity$15(G__33383,G__33384,G__33385,G__33386,G__33387,G__33388,G__33389,G__33390,G__33391,G__33392,G__33393,G__33394,G__33395,G__33396,G__33397) : self__.afn.call(null,G__33383,G__33384,G__33385,G__33386,G__33387,G__33388,G__33389,G__33390,G__33391,G__33392,G__33393,G__33394,G__33395,G__33396,G__33397));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$16 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
var self__ = this;
var _ = this;
var G__33398 = a;
var G__33399 = b;
var G__33400 = c;
var G__33401 = d;
var G__33402 = e;
var G__33403 = f;
var G__33404 = g;
var G__33405 = h;
var G__33406 = i;
var G__33407 = j;
var G__33408 = k;
var G__33409 = l;
var G__33410 = m;
var G__33411 = n;
var G__33412 = o;
var G__33413 = p;
return (self__.afn.cljs$core$IFn$_invoke$arity$16 ? self__.afn.cljs$core$IFn$_invoke$arity$16(G__33398,G__33399,G__33400,G__33401,G__33402,G__33403,G__33404,G__33405,G__33406,G__33407,G__33408,G__33409,G__33410,G__33411,G__33412,G__33413) : self__.afn.call(null,G__33398,G__33399,G__33400,G__33401,G__33402,G__33403,G__33404,G__33405,G__33406,G__33407,G__33408,G__33409,G__33410,G__33411,G__33412,G__33413));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$17 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
var self__ = this;
var _ = this;
var G__33414 = a;
var G__33415 = b;
var G__33416 = c;
var G__33417 = d;
var G__33418 = e;
var G__33419 = f;
var G__33420 = g;
var G__33421 = h;
var G__33422 = i;
var G__33423 = j;
var G__33424 = k;
var G__33425 = l;
var G__33426 = m;
var G__33427 = n;
var G__33428 = o;
var G__33429 = p;
var G__33430 = q;
return (self__.afn.cljs$core$IFn$_invoke$arity$17 ? self__.afn.cljs$core$IFn$_invoke$arity$17(G__33414,G__33415,G__33416,G__33417,G__33418,G__33419,G__33420,G__33421,G__33422,G__33423,G__33424,G__33425,G__33426,G__33427,G__33428,G__33429,G__33430) : self__.afn.call(null,G__33414,G__33415,G__33416,G__33417,G__33418,G__33419,G__33420,G__33421,G__33422,G__33423,G__33424,G__33425,G__33426,G__33427,G__33428,G__33429,G__33430));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$18 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
var self__ = this;
var _ = this;
var G__33431 = a;
var G__33432 = b;
var G__33433 = c;
var G__33434 = d;
var G__33435 = e;
var G__33436 = f;
var G__33437 = g;
var G__33438 = h;
var G__33439 = i;
var G__33440 = j;
var G__33441 = k;
var G__33442 = l;
var G__33443 = m;
var G__33444 = n;
var G__33445 = o;
var G__33446 = p;
var G__33447 = q;
var G__33448 = r;
return (self__.afn.cljs$core$IFn$_invoke$arity$18 ? self__.afn.cljs$core$IFn$_invoke$arity$18(G__33431,G__33432,G__33433,G__33434,G__33435,G__33436,G__33437,G__33438,G__33439,G__33440,G__33441,G__33442,G__33443,G__33444,G__33445,G__33446,G__33447,G__33448) : self__.afn.call(null,G__33431,G__33432,G__33433,G__33434,G__33435,G__33436,G__33437,G__33438,G__33439,G__33440,G__33441,G__33442,G__33443,G__33444,G__33445,G__33446,G__33447,G__33448));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$19 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
var self__ = this;
var _ = this;
var G__33449 = a;
var G__33450 = b;
var G__33451 = c;
var G__33452 = d;
var G__33453 = e;
var G__33454 = f;
var G__33455 = g;
var G__33456 = h;
var G__33457 = i;
var G__33458 = j;
var G__33459 = k;
var G__33460 = l;
var G__33461 = m;
var G__33462 = n;
var G__33463 = o;
var G__33464 = p;
var G__33465 = q;
var G__33466 = r;
var G__33467 = s;
return (self__.afn.cljs$core$IFn$_invoke$arity$19 ? self__.afn.cljs$core$IFn$_invoke$arity$19(G__33449,G__33450,G__33451,G__33452,G__33453,G__33454,G__33455,G__33456,G__33457,G__33458,G__33459,G__33460,G__33461,G__33462,G__33463,G__33464,G__33465,G__33466,G__33467) : self__.afn.call(null,G__33449,G__33450,G__33451,G__33452,G__33453,G__33454,G__33455,G__33456,G__33457,G__33458,G__33459,G__33460,G__33461,G__33462,G__33463,G__33464,G__33465,G__33466,G__33467));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$20 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
var self__ = this;
var _ = this;
var G__33468 = a;
var G__33469 = b;
var G__33470 = c;
var G__33471 = d;
var G__33472 = e;
var G__33473 = f;
var G__33474 = g;
var G__33475 = h;
var G__33476 = i;
var G__33477 = j;
var G__33478 = k;
var G__33479 = l;
var G__33480 = m;
var G__33481 = n;
var G__33482 = o;
var G__33483 = p;
var G__33484 = q;
var G__33485 = r;
var G__33486 = s;
var G__33487 = t;
return (self__.afn.cljs$core$IFn$_invoke$arity$20 ? self__.afn.cljs$core$IFn$_invoke$arity$20(G__33468,G__33469,G__33470,G__33471,G__33472,G__33473,G__33474,G__33475,G__33476,G__33477,G__33478,G__33479,G__33480,G__33481,G__33482,G__33483,G__33484,G__33485,G__33486,G__33487) : self__.afn.call(null,G__33468,G__33469,G__33470,G__33471,G__33472,G__33473,G__33474,G__33475,G__33476,G__33477,G__33478,G__33479,G__33480,G__33481,G__33482,G__33483,G__33484,G__33485,G__33486,G__33487));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$21 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
var self__ = this;
var _ = this;
var G__33488 = self__.afn;
var G__33489 = a;
var G__33490 = b;
var G__33491 = c;
var G__33492 = d;
var G__33493 = e;
var G__33494 = f;
var G__33495 = g;
var G__33496 = h;
var G__33497 = i;
var G__33498 = j;
var G__33499 = k;
var G__33500 = l;
var G__33501 = m;
var G__33502 = n;
var G__33503 = o;
var G__33504 = p;
var G__33505 = q;
var G__33506 = r;
var G__33507 = s;
var G__33508 = t;
var G__33509 = rest;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$22 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$22(G__33488,G__33489,G__33490,G__33491,G__33492,G__33493,G__33494,G__33495,G__33496,G__33497,G__33498,G__33499,G__33500,G__33501,G__33502,G__33503,G__33504,G__33505,G__33506,G__33507,G__33508,G__33509) : cljs.core.apply.call(null,G__33488,G__33489,G__33490,G__33491,G__33492,G__33493,G__33494,G__33495,G__33496,G__33497,G__33498,G__33499,G__33500,G__33501,G__33502,G__33503,G__33504,G__33505,G__33506,G__33507,G__33508,G__33509));
});

cljs.core.MetaFn.prototype.cljs$core$Fn$ = true;

cljs.core.MetaFn.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (_,new_meta){
var self__ = this;
var ___$1 = this;
return (new cljs.core.MetaFn(self__.afn,new_meta));
});

cljs.core.MetaFn.prototype.cljs$core$IMeta$_meta$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.meta;
});

cljs.core.MetaFn.cljs$lang$type = true;

cljs.core.MetaFn.cljs$lang$ctorStr = "cljs.core/MetaFn";

cljs.core.MetaFn.cljs$lang$ctorPrWriter = (function (this__24861__auto__,writer__24862__auto__,opt__24863__auto__){
return cljs.core._write(writer__24862__auto__,"cljs.core/MetaFn");
});

cljs.core.__GT_MetaFn = (function __GT_MetaFn(afn,meta){
return (new cljs.core.MetaFn(afn,meta));
});

/**
* Returns an object of the same type and value as obj, with
* map m as its metadata.
*/
cljs.core.with_meta = (function with_meta(o,meta){
if((cljs.core.fn_QMARK_(o)) && (!((function (){var G__33514 = o;
if(G__33514){
var bit__24955__auto__ = (G__33514.cljs$lang$protocol_mask$partition0$ & (262144));
if((bit__24955__auto__) || (G__33514.cljs$core$IWithMeta$)){
return true;
} else {
if((!G__33514.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IWithMeta,G__33514);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IWithMeta,G__33514);
}
})()))){
return (new cljs.core.MetaFn(o,meta));
} else {
if((o == null)){
return null;
} else {
return cljs.core._with_meta(o,meta);
}
}
});
/**
* Returns the metadata of obj, returns nil if there is no metadata.
*/
cljs.core.meta = (function meta(o){
if((function (){var and__24262__auto__ = !((o == null));
if(and__24262__auto__){
var G__33518 = o;
if(G__33518){
var bit__24955__auto__ = (G__33518.cljs$lang$protocol_mask$partition0$ & (131072));
if((bit__24955__auto__) || (G__33518.cljs$core$IMeta$)){
return true;
} else {
if((!G__33518.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IMeta,G__33518);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IMeta,G__33518);
}
} else {
return and__24262__auto__;
}
})()){
return cljs.core._meta(o);
} else {
return null;
}
});
/**
* For a list or queue, same as first, for a vector, same as, but much
* more efficient than, last. If the collection is empty, returns nil.
*/
cljs.core.peek = (function peek(coll){
if((coll == null)){
return null;
} else {
return cljs.core._peek(coll);
}
});
/**
* For a list or queue, returns a new list/queue without the first
* item, for a vector, returns a new vector without the last item.
* Note - not the same as next/butlast.
*/
cljs.core.pop = (function pop(coll){
if((coll == null)){
return null;
} else {
return cljs.core._pop(coll);
}
});
/**
* disj[oin]. Returns a new set of the same (hashed/sorted) type, that
* does not contain key(s).
* @param {...*} var_args
*/
cljs.core.disj = (function() {
var disj = null;
var disj__1 = (function (coll){
return coll;
});
var disj__2 = (function (coll,k){
if((coll == null)){
return null;
} else {
return cljs.core._disjoin(coll,k);
}
});
var disj__3 = (function() { 
var G__33521__delegate = function (coll,k,ks){
while(true){
if((coll == null)){
return null;
} else {
var ret = disj.cljs$core$IFn$_invoke$arity$2(coll,k);
if(cljs.core.truth_(ks)){
var G__33522 = ret;
var G__33523 = cljs.core.first(ks);
var G__33524 = cljs.core.next(ks);
coll = G__33522;
k = G__33523;
ks = G__33524;
continue;
} else {
return ret;
}
}
break;
}
};
var G__33521 = function (coll,k,var_args){
var ks = null;
if (arguments.length > 2) {
var G__33525__i = 0, G__33525__a = new Array(arguments.length -  2);
while (G__33525__i < G__33525__a.length) {G__33525__a[G__33525__i] = arguments[G__33525__i + 2]; ++G__33525__i;}
  ks = new cljs.core.IndexedSeq(G__33525__a,0);
} 
return G__33521__delegate.call(this,coll,k,ks);};
G__33521.cljs$lang$maxFixedArity = 2;
G__33521.cljs$lang$applyTo = (function (arglist__33526){
var coll = cljs.core.first(arglist__33526);
arglist__33526 = cljs.core.next(arglist__33526);
var k = cljs.core.first(arglist__33526);
var ks = cljs.core.rest(arglist__33526);
return G__33521__delegate(coll,k,ks);
});
G__33521.cljs$core$IFn$_invoke$arity$variadic = G__33521__delegate;
return G__33521;
})()
;
disj = function(coll,k,var_args){
var ks = var_args;
switch(arguments.length){
case 1:
return disj__1.call(this,coll);
case 2:
return disj__2.call(this,coll,k);
default:
var G__33527 = null;
if (arguments.length > 2) {
var G__33528__i = 0, G__33528__a = new Array(arguments.length -  2);
while (G__33528__i < G__33528__a.length) {G__33528__a[G__33528__i] = arguments[G__33528__i + 2]; ++G__33528__i;}
G__33527 = new cljs.core.IndexedSeq(G__33528__a,0);
}
return disj__3.cljs$core$IFn$_invoke$arity$variadic(coll,k, G__33527);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
disj.cljs$lang$maxFixedArity = 2;
disj.cljs$lang$applyTo = disj__3.cljs$lang$applyTo;
disj.cljs$core$IFn$_invoke$arity$1 = disj__1;
disj.cljs$core$IFn$_invoke$arity$2 = disj__2;
disj.cljs$core$IFn$_invoke$arity$variadic = disj__3.cljs$core$IFn$_invoke$arity$variadic;
return disj;
})()
;
/**
* Returns true if coll has no items - same as (not (seq coll)).
* Please use the idiom (seq x) rather than (not (empty? x))
*/
cljs.core.empty_QMARK_ = (function empty_QMARK_(coll){
return ((coll == null)) || (cljs.core.not(cljs.core.seq(coll)));
});
/**
* Returns true if x satisfies ICollection
*/
cljs.core.coll_QMARK_ = (function coll_QMARK_(x){
if((x == null)){
return false;
} else {
var G__33530 = x;
if(G__33530){
var bit__24955__auto__ = (G__33530.cljs$lang$protocol_mask$partition0$ & (8));
if((bit__24955__auto__) || (G__33530.cljs$core$ICollection$)){
return true;
} else {
if((!G__33530.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ICollection,G__33530);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ICollection,G__33530);
}
}
});
/**
* Returns true if x satisfies ISet
*/
cljs.core.set_QMARK_ = (function set_QMARK_(x){
if((x == null)){
return false;
} else {
var G__33532 = x;
if(G__33532){
var bit__24955__auto__ = (G__33532.cljs$lang$protocol_mask$partition0$ & (4096));
if((bit__24955__auto__) || (G__33532.cljs$core$ISet$)){
return true;
} else {
if((!G__33532.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISet,G__33532);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISet,G__33532);
}
}
});
/**
* Returns true if coll implements Associative
*/
cljs.core.associative_QMARK_ = (function associative_QMARK_(x){
var G__33534 = x;
if(G__33534){
var bit__24955__auto__ = (G__33534.cljs$lang$protocol_mask$partition0$ & (512));
if((bit__24955__auto__) || (G__33534.cljs$core$IAssociative$)){
return true;
} else {
if((!G__33534.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IAssociative,G__33534);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IAssociative,G__33534);
}
});
/**
* Returns true if coll satisfies ISequential
*/
cljs.core.sequential_QMARK_ = (function sequential_QMARK_(x){
var G__33536 = x;
if(G__33536){
var bit__24955__auto__ = (G__33536.cljs$lang$protocol_mask$partition0$ & (16777216));
if((bit__24955__auto__) || (G__33536.cljs$core$ISequential$)){
return true;
} else {
if((!G__33536.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISequential,G__33536);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISequential,G__33536);
}
});
/**
* Returns true if coll satisfies ISorted
*/
cljs.core.sorted_QMARK_ = (function sorted_QMARK_(x){
var G__33538 = x;
if(G__33538){
var bit__24955__auto__ = (G__33538.cljs$lang$protocol_mask$partition0$ & (268435456));
if((bit__24955__auto__) || (G__33538.cljs$core$ISorted$)){
return true;
} else {
if((!G__33538.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISorted,G__33538);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISorted,G__33538);
}
});
/**
* Returns true if coll satisfies IReduce
*/
cljs.core.reduceable_QMARK_ = (function reduceable_QMARK_(x){
var G__33540 = x;
if(G__33540){
var bit__24955__auto__ = (G__33540.cljs$lang$protocol_mask$partition0$ & (524288));
if((bit__24955__auto__) || (G__33540.cljs$core$IReduce$)){
return true;
} else {
if((!G__33540.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IReduce,G__33540);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IReduce,G__33540);
}
});
/**
* Return true if x satisfies IMap
*/
cljs.core.map_QMARK_ = (function map_QMARK_(x){
if((x == null)){
return false;
} else {
var G__33542 = x;
if(G__33542){
var bit__24955__auto__ = (G__33542.cljs$lang$protocol_mask$partition0$ & (1024));
if((bit__24955__auto__) || (G__33542.cljs$core$IMap$)){
return true;
} else {
if((!G__33542.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IMap,G__33542);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IMap,G__33542);
}
}
});
/**
* Return true if x satisfies IVector
*/
cljs.core.vector_QMARK_ = (function vector_QMARK_(x){
var G__33544 = x;
if(G__33544){
var bit__24955__auto__ = (G__33544.cljs$lang$protocol_mask$partition0$ & (16384));
if((bit__24955__auto__) || (G__33544.cljs$core$IVector$)){
return true;
} else {
if((!G__33544.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IVector,G__33544);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IVector,G__33544);
}
});

cljs.core.chunked_seq_QMARK_ = (function chunked_seq_QMARK_(x){
var G__33546 = x;
if(G__33546){
var bit__24948__auto__ = (G__33546.cljs$lang$protocol_mask$partition1$ & (512));
if((bit__24948__auto__) || (G__33546.cljs$core$IChunkedSeq$)){
return true;
} else {
return false;
}
} else {
return false;
}
});
/**
* @param {...*} var_args
*/
cljs.core.js_obj = (function() {
var js_obj = null;
var js_obj__0 = (function (){
var obj33552 = {};
return obj33552;
});
var js_obj__1 = (function() { 
var G__33555__delegate = function (keyvals){
var G__33553 = goog.object.create;
var G__33554 = keyvals;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$2 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$2(G__33553,G__33554) : cljs.core.apply.call(null,G__33553,G__33554));
};
var G__33555 = function (var_args){
var keyvals = null;
if (arguments.length > 0) {
var G__33556__i = 0, G__33556__a = new Array(arguments.length -  0);
while (G__33556__i < G__33556__a.length) {G__33556__a[G__33556__i] = arguments[G__33556__i + 0]; ++G__33556__i;}
  keyvals = new cljs.core.IndexedSeq(G__33556__a,0);
} 
return G__33555__delegate.call(this,keyvals);};
G__33555.cljs$lang$maxFixedArity = 0;
G__33555.cljs$lang$applyTo = (function (arglist__33557){
var keyvals = cljs.core.seq(arglist__33557);
return G__33555__delegate(keyvals);
});
G__33555.cljs$core$IFn$_invoke$arity$variadic = G__33555__delegate;
return G__33555;
})()
;
js_obj = function(var_args){
var keyvals = var_args;
switch(arguments.length){
case 0:
return js_obj__0.call(this);
default:
var G__33558 = null;
if (arguments.length > 0) {
var G__33559__i = 0, G__33559__a = new Array(arguments.length -  0);
while (G__33559__i < G__33559__a.length) {G__33559__a[G__33559__i] = arguments[G__33559__i + 0]; ++G__33559__i;}
G__33558 = new cljs.core.IndexedSeq(G__33559__a,0);
}
return js_obj__1.cljs$core$IFn$_invoke$arity$variadic(G__33558);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
js_obj.cljs$lang$maxFixedArity = 0;
js_obj.cljs$lang$applyTo = js_obj__1.cljs$lang$applyTo;
js_obj.cljs$core$IFn$_invoke$arity$0 = js_obj__0;
js_obj.cljs$core$IFn$_invoke$arity$variadic = js_obj__1.cljs$core$IFn$_invoke$arity$variadic;
return js_obj;
})()
;
cljs.core.js_keys = (function js_keys(obj){
var keys = [];
var G__33562_33564 = obj;
var G__33563_33565 = ((function (G__33562_33564,keys){
return (function (val,key,obj__$1){
return keys.push(key);
});})(G__33562_33564,keys))
;
goog.object.forEach(G__33562_33564,G__33563_33565);

return keys;
});
cljs.core.js_delete = (function js_delete(obj,key){
return delete obj[key];
});
cljs.core.array_copy = (function array_copy(from,i,to,j,len){
var i__$1 = i;
var j__$1 = j;
var len__$1 = len;
while(true){
if((len__$1 === (0))){
return to;
} else {
(to[j__$1] = (from[i__$1]));

var G__33566 = (i__$1 + (1));
var G__33567 = (j__$1 + (1));
var G__33568 = (len__$1 - (1));
i__$1 = G__33566;
j__$1 = G__33567;
len__$1 = G__33568;
continue;
}
break;
}
});
cljs.core.array_copy_downward = (function array_copy_downward(from,i,to,j,len){
var i__$1 = (i + (len - (1)));
var j__$1 = (j + (len - (1)));
var len__$1 = len;
while(true){
if((len__$1 === (0))){
return to;
} else {
(to[j__$1] = (from[i__$1]));

var G__33569 = (i__$1 - (1));
var G__33570 = (j__$1 - (1));
var G__33571 = (len__$1 - (1));
i__$1 = G__33569;
j__$1 = G__33570;
len__$1 = G__33571;
continue;
}
break;
}
});
cljs.core.lookup_sentinel = (function (){var obj33573 = {};
return obj33573;
})();
/**
* Returns true if x is the value false, false otherwise.
*/
cljs.core.false_QMARK_ = (function false_QMARK_(x){
return x === false;
});
/**
* Returns true if x is the value true, false otherwise.
*/
cljs.core.true_QMARK_ = (function true_QMARK_(x){
return x === true;
});
cljs.core.undefined_QMARK_ = (function undefined_QMARK_(x){
return (void 0 === x);
});
/**
* Return true if s satisfies ISeq
*/
cljs.core.seq_QMARK_ = (function seq_QMARK_(s){
if((s == null)){
return false;
} else {
var G__33575 = s;
if(G__33575){
var bit__24955__auto__ = (G__33575.cljs$lang$protocol_mask$partition0$ & (64));
if((bit__24955__auto__) || (G__33575.cljs$core$ISeq$)){
return true;
} else {
if((!G__33575.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq,G__33575);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq,G__33575);
}
}
});
/**
* Return true if s satisfies ISeqable
*/
cljs.core.seqable_QMARK_ = (function seqable_QMARK_(s){
var G__33577 = s;
if(G__33577){
var bit__24955__auto__ = (G__33577.cljs$lang$protocol_mask$partition0$ & (8388608));
if((bit__24955__auto__) || (G__33577.cljs$core$ISeqable$)){
return true;
} else {
if((!G__33577.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeqable,G__33577);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeqable,G__33577);
}
});
cljs.core.boolean$ = (function boolean$(x){
if(cljs.core.truth_(x)){
return true;
} else {
return false;
}
});
cljs.core.ifn_QMARK_ = (function ifn_QMARK_(f){
var or__24274__auto__ = cljs.core.fn_QMARK_(f);
if(or__24274__auto__){
return or__24274__auto__;
} else {
var G__33581 = f;
if(G__33581){
var bit__24955__auto__ = (G__33581.cljs$lang$protocol_mask$partition0$ & (1));
if((bit__24955__auto__) || (G__33581.cljs$core$IFn$)){
return true;
} else {
if((!G__33581.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IFn,G__33581);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IFn,G__33581);
}
}
});
/**
* Returns true if n is an integer.
*/
cljs.core.integer_QMARK_ = (function integer_QMARK_(n){
return (typeof n === 'number') && (cljs.core.not((function (){var G__33594 = n;
return isNaN(G__33594);
})())) && (!((n === Infinity))) && (((function (){var G__33595 = n;
return parseFloat(G__33595);
})() === (function (){var G__33596 = n;
var G__33597 = (10);
return parseInt(G__33596,G__33597);
})()));
});
/**
* Returns true if key is present in the given collection, otherwise
* returns false.  Note that for numerically indexed collections like
* vectors and arrays, this tests if the numeric key is within the
* range of indexes. 'contains?' operates constant or logarithmic time;
* it will not perform a linear search for a value.  See also 'some'.
*/
cljs.core.contains_QMARK_ = (function contains_QMARK_(coll,v){
if((cljs.core.get.cljs$core$IFn$_invoke$arity$3(coll,v,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel)){
return false;
} else {
return true;
}
});
/**
* Returns the map entry for key, or nil if key not present.
*/
cljs.core.find = (function find(coll,k){
if((!((coll == null))) && (cljs.core.associative_QMARK_(coll)) && (cljs.core.contains_QMARK_(coll,k))){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [k,cljs.core.get.cljs$core$IFn$_invoke$arity$2(coll,k)], null);
} else {
return null;
}
});
/**
* Returns true if no two of the arguments are =
* @param {...*} var_args
*/
cljs.core.distinct_QMARK_ = (function() {
var distinct_QMARK_ = null;
var distinct_QMARK___1 = (function (x){
return true;
});
var distinct_QMARK___2 = (function (x,y){
return !(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x,y));
});
var distinct_QMARK___3 = (function() { 
var G__33598__delegate = function (x,y,more){
if(!(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x,y))){
var s = cljs.core.PersistentHashSet.fromArray([x,y], true);
var xs = more;
while(true){
var x__$1 = cljs.core.first(xs);
var etc = cljs.core.next(xs);
if(cljs.core.truth_(xs)){
if(cljs.core.contains_QMARK_(s,x__$1)){
return false;
} else {
var G__33599 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(s,x__$1);
var G__33600 = etc;
s = G__33599;
xs = G__33600;
continue;
}
} else {
return true;
}
break;
}
} else {
return false;
}
};
var G__33598 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__33601__i = 0, G__33601__a = new Array(arguments.length -  2);
while (G__33601__i < G__33601__a.length) {G__33601__a[G__33601__i] = arguments[G__33601__i + 2]; ++G__33601__i;}
  more = new cljs.core.IndexedSeq(G__33601__a,0);
} 
return G__33598__delegate.call(this,x,y,more);};
G__33598.cljs$lang$maxFixedArity = 2;
G__33598.cljs$lang$applyTo = (function (arglist__33602){
var x = cljs.core.first(arglist__33602);
arglist__33602 = cljs.core.next(arglist__33602);
var y = cljs.core.first(arglist__33602);
var more = cljs.core.rest(arglist__33602);
return G__33598__delegate(x,y,more);
});
G__33598.cljs$core$IFn$_invoke$arity$variadic = G__33598__delegate;
return G__33598;
})()
;
distinct_QMARK_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return distinct_QMARK___1.call(this,x);
case 2:
return distinct_QMARK___2.call(this,x,y);
default:
var G__33603 = null;
if (arguments.length > 2) {
var G__33604__i = 0, G__33604__a = new Array(arguments.length -  2);
while (G__33604__i < G__33604__a.length) {G__33604__a[G__33604__i] = arguments[G__33604__i + 2]; ++G__33604__i;}
G__33603 = new cljs.core.IndexedSeq(G__33604__a,0);
}
return distinct_QMARK___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__33603);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
distinct_QMARK_.cljs$lang$maxFixedArity = 2;
distinct_QMARK_.cljs$lang$applyTo = distinct_QMARK___3.cljs$lang$applyTo;
distinct_QMARK_.cljs$core$IFn$_invoke$arity$1 = distinct_QMARK___1;
distinct_QMARK_.cljs$core$IFn$_invoke$arity$2 = distinct_QMARK___2;
distinct_QMARK_.cljs$core$IFn$_invoke$arity$variadic = distinct_QMARK___3.cljs$core$IFn$_invoke$arity$variadic;
return distinct_QMARK_;
})()
;
/**
* Comparator. Returns a negative number, zero, or a positive number
* when x is logically 'less than', 'equal to', or 'greater than'
* y. Uses IComparable if available and google.array.defaultCompare for objects
* of the same type and special-cases nil to be less than any other object.
*/
cljs.core.compare = (function compare(x,y){
if((x === y)){
return (0);
} else {
if((x == null)){
return (-1);
} else {
if((y == null)){
return (1);
} else {
if((cljs.core.type(x) === cljs.core.type(y))){
if((function (){var G__33608 = x;
if(G__33608){
var bit__24948__auto__ = (G__33608.cljs$lang$protocol_mask$partition1$ & (2048));
if((bit__24948__auto__) || (G__33608.cljs$core$IComparable$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return x.cljs$core$IComparable$_compare$arity$2(null,y);
} else {
var G__33609 = x;
var G__33610 = y;
return goog.array.defaultCompare(G__33609,G__33610);
}
} else {
throw (new Error("compare on non-nil objects of different types"));

}
}
}
}
});
/**
* Compare indexed collection.
*/
cljs.core.compare_indexed = (function() {
var compare_indexed = null;
var compare_indexed__2 = (function (xs,ys){
var xl = cljs.core.count(xs);
var yl = cljs.core.count(ys);
if((xl < yl)){
return (-1);
} else {
if((xl > yl)){
return (1);
} else {
return compare_indexed.cljs$core$IFn$_invoke$arity$4(xs,ys,xl,(0));

}
}
});
var compare_indexed__4 = (function (xs,ys,len,n){
while(true){
var d = cljs.core.compare(cljs.core.nth.cljs$core$IFn$_invoke$arity$2(xs,n),cljs.core.nth.cljs$core$IFn$_invoke$arity$2(ys,n));
if(((d === (0))) && (((n + (1)) < len))){
var G__33615 = xs;
var G__33616 = ys;
var G__33617 = len;
var G__33618 = (n + (1));
xs = G__33615;
ys = G__33616;
len = G__33617;
n = G__33618;
continue;
} else {
return d;
}
break;
}
});
compare_indexed = function(xs,ys,len,n){
switch(arguments.length){
case 2:
return compare_indexed__2.call(this,xs,ys);
case 4:
return compare_indexed__4.call(this,xs,ys,len,n);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
compare_indexed.cljs$core$IFn$_invoke$arity$2 = compare_indexed__2;
compare_indexed.cljs$core$IFn$_invoke$arity$4 = compare_indexed__4;
return compare_indexed;
})()
;
/**
* Given a fn that might be boolean valued or a comparator,
* return a fn that is a comparator.
*/
cljs.core.fn__GT_comparator = (function fn__GT_comparator(f){
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(f,cljs.core.compare)){
return cljs.core.compare;
} else {
return (function (x,y){
var r = (function (){var G__33623 = x;
var G__33624 = y;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__33623,G__33624) : f.call(null,G__33623,G__33624));
})();
if(typeof r === 'number'){
return r;
} else {
if(cljs.core.truth_(r)){
return (-1);
} else {
if(cljs.core.truth_((function (){var G__33625 = y;
var G__33626 = x;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__33625,G__33626) : f.call(null,G__33625,G__33626));
})())){
return (1);
} else {
return (0);
}
}
}
});
}
});
/**
* Returns a sorted sequence of the items in coll. Comp can be
* boolean-valued comparison function, or a -/0/+ valued comparator.
* Comp defaults to compare.
*/
cljs.core.sort = (function() {
var sort = null;
var sort__1 = (function (coll){
return sort.cljs$core$IFn$_invoke$arity$2(cljs.core.compare,coll);
});
var sort__2 = (function (comp,coll){
if(cljs.core.seq(coll)){
var a = (function (){var G__33632 = coll;
return (cljs.core.to_array.cljs$core$IFn$_invoke$arity$1 ? cljs.core.to_array.cljs$core$IFn$_invoke$arity$1(G__33632) : cljs.core.to_array.call(null,G__33632));
})();
var G__33633_33635 = a;
var G__33634_33636 = cljs.core.fn__GT_comparator(comp);
goog.array.stableSort(G__33633_33635,G__33634_33636);

return cljs.core.seq(a);
} else {
return cljs.core.List.EMPTY;
}
});
sort = function(comp,coll){
switch(arguments.length){
case 1:
return sort__1.call(this,comp);
case 2:
return sort__2.call(this,comp,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
sort.cljs$core$IFn$_invoke$arity$1 = sort__1;
sort.cljs$core$IFn$_invoke$arity$2 = sort__2;
return sort;
})()
;
/**
* Returns a sorted sequence of the items in coll, where the sort
* order is determined by comparing (keyfn item).  Comp can be
* boolean-valued comparison funcion, or a -/0/+ valued comparator.
* Comp defaults to compare.
*/
cljs.core.sort_by = (function() {
var sort_by = null;
var sort_by__2 = (function (keyfn,coll){
return sort_by.cljs$core$IFn$_invoke$arity$3(keyfn,cljs.core.compare,coll);
});
var sort_by__3 = (function (keyfn,comp,coll){
return cljs.core.sort.cljs$core$IFn$_invoke$arity$2((function (x,y){
return cljs.core.fn__GT_comparator(comp).call(null,(function (){var G__33642 = x;
return (keyfn.cljs$core$IFn$_invoke$arity$1 ? keyfn.cljs$core$IFn$_invoke$arity$1(G__33642) : keyfn.call(null,G__33642));
})(),(function (){var G__33643 = y;
return (keyfn.cljs$core$IFn$_invoke$arity$1 ? keyfn.cljs$core$IFn$_invoke$arity$1(G__33643) : keyfn.call(null,G__33643));
})());
}),coll);
});
sort_by = function(keyfn,comp,coll){
switch(arguments.length){
case 2:
return sort_by__2.call(this,keyfn,comp);
case 3:
return sort_by__3.call(this,keyfn,comp,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
sort_by.cljs$core$IFn$_invoke$arity$2 = sort_by__2;
sort_by.cljs$core$IFn$_invoke$arity$3 = sort_by__3;
return sort_by;
})()
;
cljs.core.seq_reduce = (function() {
var seq_reduce = null;
var seq_reduce__2 = (function (f,coll){
var temp__4124__auto__ = cljs.core.seq(coll);
if(temp__4124__auto__){
var s = temp__4124__auto__;
var G__33649 = f;
var G__33650 = cljs.core.first(s);
var G__33651 = cljs.core.next(s);
return (cljs.core.reduce.cljs$core$IFn$_invoke$arity$3 ? cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(G__33649,G__33650,G__33651) : cljs.core.reduce.call(null,G__33649,G__33650,G__33651));
} else {
return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
}
});
var seq_reduce__3 = (function (f,val,coll){
var val__$1 = val;
var coll__$1 = cljs.core.seq(coll);
while(true){
if(coll__$1){
var nval = (function (){var G__33652 = val__$1;
var G__33653 = cljs.core.first(coll__$1);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__33652,G__33653) : f.call(null,G__33652,G__33653));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__33654 = nval;
var G__33655 = cljs.core.next(coll__$1);
val__$1 = G__33654;
coll__$1 = G__33655;
continue;
}
} else {
return val__$1;
}
break;
}
});
seq_reduce = function(f,val,coll){
switch(arguments.length){
case 2:
return seq_reduce__2.call(this,f,val);
case 3:
return seq_reduce__3.call(this,f,val,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
seq_reduce.cljs$core$IFn$_invoke$arity$2 = seq_reduce__2;
seq_reduce.cljs$core$IFn$_invoke$arity$3 = seq_reduce__3;
return seq_reduce;
})()
;
/**
* Return a random permutation of coll
*/
cljs.core.shuffle = (function shuffle(coll){
var a = (function (){var G__33659 = coll;
return (cljs.core.to_array.cljs$core$IFn$_invoke$arity$1 ? cljs.core.to_array.cljs$core$IFn$_invoke$arity$1(G__33659) : cljs.core.to_array.call(null,G__33659));
})();
var G__33660_33662 = a;
goog.array.shuffle(G__33660_33662);

var G__33661 = a;
return (cljs.core.vec.cljs$core$IFn$_invoke$arity$1 ? cljs.core.vec.cljs$core$IFn$_invoke$arity$1(G__33661) : cljs.core.vec.call(null,G__33661));
});
/**
* f should be a function of 2 arguments. If val is not supplied,
* returns the result of applying f to the first 2 items in coll, then
* applying f to that result and the 3rd item, etc. If coll contains no
* items, f must accept no arguments as well, and reduce returns the
* result of calling f with no arguments.  If coll has only 1 item, it
* is returned and f is not called.  If val is supplied, returns the
* result of applying f to val and the first item in coll, then
* applying f to that result and the 2nd item, etc. If coll contains no
* items, returns val and f is not called.
*/
cljs.core.reduce = (function() {
var reduce = null;
var reduce__2 = (function (f,coll){
if((function (){var G__33665 = coll;
if(G__33665){
var bit__24948__auto__ = (G__33665.cljs$lang$protocol_mask$partition0$ & (524288));
if((bit__24948__auto__) || (G__33665.cljs$core$IReduce$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$IReduce$_reduce$arity$2(null,f);
} else {
if(coll instanceof Array){
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$2(coll,f);
} else {
if(typeof coll === 'string'){
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$2(coll,f);
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.IReduce,coll)){
return cljs.core._reduce.cljs$core$IFn$_invoke$arity$2(coll,f);
} else {
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll);

}
}
}
}
});
var reduce__3 = (function (f,val,coll){
if((function (){var G__33666 = coll;
if(G__33666){
var bit__24948__auto__ = (G__33666.cljs$lang$protocol_mask$partition0$ & (524288));
if((bit__24948__auto__) || (G__33666.cljs$core$IReduce$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$IReduce$_reduce$arity$3(null,f,val);
} else {
if(coll instanceof Array){
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$3(coll,f,val);
} else {
if(typeof coll === 'string'){
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$3(coll,f,val);
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.IReduce,coll)){
return cljs.core._reduce.cljs$core$IFn$_invoke$arity$3(coll,f,val);
} else {
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,val,coll);

}
}
}
}
});
reduce = function(f,val,coll){
switch(arguments.length){
case 2:
return reduce__2.call(this,f,val);
case 3:
return reduce__3.call(this,f,val,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
reduce.cljs$core$IFn$_invoke$arity$2 = reduce__2;
reduce.cljs$core$IFn$_invoke$arity$3 = reduce__3;
return reduce;
})()
;
/**
* Reduces an associative collection. f should be a function of 3
* arguments. Returns the result of applying f to init, the first key
* and the first value in coll, then applying f to that result and the
* 2nd key and value, etc. If coll contains no entries, returns init
* and f is not called. Note that reduce-kv is supported on vectors,
* where the keys will be the ordinals.
*/
cljs.core.reduce_kv = (function reduce_kv(f,init,coll){
if(!((coll == null))){
return cljs.core._kv_reduce(coll,f,init);
} else {
return init;
}
});
cljs.core.identity = (function identity(x){
return x;
});
cljs.core.completing = (function() {
var completing = null;
var completing__1 = (function (f){
return completing.cljs$core$IFn$_invoke$arity$2(f,cljs.core.identity);
});
var completing__2 = (function (f,cf){
return (function() {
var G__33675 = null;
var G__33675__0 = (function (){
return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
});
var G__33675__1 = (function (x){
var G__33672 = x;
return (cf.cljs$core$IFn$_invoke$arity$1 ? cf.cljs$core$IFn$_invoke$arity$1(G__33672) : cf.call(null,G__33672));
});
var G__33675__2 = (function (x,y){
var G__33673 = x;
var G__33674 = y;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__33673,G__33674) : f.call(null,G__33673,G__33674));
});
G__33675 = function(x,y){
switch(arguments.length){
case 0:
return G__33675__0.call(this);
case 1:
return G__33675__1.call(this,x);
case 2:
return G__33675__2.call(this,x,y);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__33675.cljs$core$IFn$_invoke$arity$0 = G__33675__0;
G__33675.cljs$core$IFn$_invoke$arity$1 = G__33675__1;
G__33675.cljs$core$IFn$_invoke$arity$2 = G__33675__2;
return G__33675;
})()
});
completing = function(f,cf){
switch(arguments.length){
case 1:
return completing__1.call(this,f);
case 2:
return completing__2.call(this,f,cf);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
completing.cljs$core$IFn$_invoke$arity$1 = completing__1;
completing.cljs$core$IFn$_invoke$arity$2 = completing__2;
return completing;
})()
;
/**
* reduce with a transformation of f (xf). If init is not
* supplied, (f) will be called to produce it. f should be a reducing
* step function that accepts both 1 and 2 arguments, if it accepts
* only 2 you can add the arity-1 with 'completing'. Returns the result
* of applying (the transformed) xf to init and the first item in coll,
* then applying xf to that result and the 2nd item, etc. If coll
* contains no items, returns init and f is not called. Note that
* certain transforms may inject or skip items.
*/
cljs.core.transduce = (function() {
var transduce = null;
var transduce__3 = (function (xform,f,coll){
return transduce.cljs$core$IFn$_invoke$arity$4(xform,f,(function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})(),coll);
});
var transduce__4 = (function (xform,f,init,coll){
var f__$1 = (function (){var G__33682 = f;
return (xform.cljs$core$IFn$_invoke$arity$1 ? xform.cljs$core$IFn$_invoke$arity$1(G__33682) : xform.call(null,G__33682));
})();
var ret = cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(f__$1,init,coll);
var G__33683 = ret;
return (f__$1.cljs$core$IFn$_invoke$arity$1 ? f__$1.cljs$core$IFn$_invoke$arity$1(G__33683) : f__$1.call(null,G__33683));
});
transduce = function(xform,f,init,coll){
switch(arguments.length){
case 3:
return transduce__3.call(this,xform,f,init);
case 4:
return transduce__4.call(this,xform,f,init,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
transduce.cljs$core$IFn$_invoke$arity$3 = transduce__3;
transduce.cljs$core$IFn$_invoke$arity$4 = transduce__4;
return transduce;
})()
;
/**
* Returns the sum of nums. (+) returns 0.
* @param {...*} var_args
*/
cljs.core._PLUS_ = (function() {
var _PLUS_ = null;
var _PLUS___0 = (function (){
return (0);
});
var _PLUS___1 = (function (x){
return x;
});
var _PLUS___2 = (function (x,y){
return (x + y);
});
var _PLUS___3 = (function() { 
var G__33684__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(_PLUS_,(x + y),more);
};
var G__33684 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__33685__i = 0, G__33685__a = new Array(arguments.length -  2);
while (G__33685__i < G__33685__a.length) {G__33685__a[G__33685__i] = arguments[G__33685__i + 2]; ++G__33685__i;}
  more = new cljs.core.IndexedSeq(G__33685__a,0);
} 
return G__33684__delegate.call(this,x,y,more);};
G__33684.cljs$lang$maxFixedArity = 2;
G__33684.cljs$lang$applyTo = (function (arglist__33686){
var x = cljs.core.first(arglist__33686);
arglist__33686 = cljs.core.next(arglist__33686);
var y = cljs.core.first(arglist__33686);
var more = cljs.core.rest(arglist__33686);
return G__33684__delegate(x,y,more);
});
G__33684.cljs$core$IFn$_invoke$arity$variadic = G__33684__delegate;
return G__33684;
})()
;
_PLUS_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 0:
return _PLUS___0.call(this);
case 1:
return _PLUS___1.call(this,x);
case 2:
return _PLUS___2.call(this,x,y);
default:
var G__33687 = null;
if (arguments.length > 2) {
var G__33688__i = 0, G__33688__a = new Array(arguments.length -  2);
while (G__33688__i < G__33688__a.length) {G__33688__a[G__33688__i] = arguments[G__33688__i + 2]; ++G__33688__i;}
G__33687 = new cljs.core.IndexedSeq(G__33688__a,0);
}
return _PLUS___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__33687);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_PLUS_.cljs$lang$maxFixedArity = 2;
_PLUS_.cljs$lang$applyTo = _PLUS___3.cljs$lang$applyTo;
_PLUS_.cljs$core$IFn$_invoke$arity$0 = _PLUS___0;
_PLUS_.cljs$core$IFn$_invoke$arity$1 = _PLUS___1;
_PLUS_.cljs$core$IFn$_invoke$arity$2 = _PLUS___2;
_PLUS_.cljs$core$IFn$_invoke$arity$variadic = _PLUS___3.cljs$core$IFn$_invoke$arity$variadic;
return _PLUS_;
})()
;
/**
* If no ys are supplied, returns the negation of x, else subtracts
* the ys from x and returns the result.
* @param {...*} var_args
*/
cljs.core._ = (function() {
var _ = null;
var ___1 = (function (x){
return (- x);
});
var ___2 = (function (x,y){
return (x - y);
});
var ___3 = (function() { 
var G__33689__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(_,(x - y),more);
};
var G__33689 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__33690__i = 0, G__33690__a = new Array(arguments.length -  2);
while (G__33690__i < G__33690__a.length) {G__33690__a[G__33690__i] = arguments[G__33690__i + 2]; ++G__33690__i;}
  more = new cljs.core.IndexedSeq(G__33690__a,0);
} 
return G__33689__delegate.call(this,x,y,more);};
G__33689.cljs$lang$maxFixedArity = 2;
G__33689.cljs$lang$applyTo = (function (arglist__33691){
var x = cljs.core.first(arglist__33691);
arglist__33691 = cljs.core.next(arglist__33691);
var y = cljs.core.first(arglist__33691);
var more = cljs.core.rest(arglist__33691);
return G__33689__delegate(x,y,more);
});
G__33689.cljs$core$IFn$_invoke$arity$variadic = G__33689__delegate;
return G__33689;
})()
;
_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return ___1.call(this,x);
case 2:
return ___2.call(this,x,y);
default:
var G__33692 = null;
if (arguments.length > 2) {
var G__33693__i = 0, G__33693__a = new Array(arguments.length -  2);
while (G__33693__i < G__33693__a.length) {G__33693__a[G__33693__i] = arguments[G__33693__i + 2]; ++G__33693__i;}
G__33692 = new cljs.core.IndexedSeq(G__33693__a,0);
}
return ___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__33692);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_.cljs$lang$maxFixedArity = 2;
_.cljs$lang$applyTo = ___3.cljs$lang$applyTo;
_.cljs$core$IFn$_invoke$arity$1 = ___1;
_.cljs$core$IFn$_invoke$arity$2 = ___2;
_.cljs$core$IFn$_invoke$arity$variadic = ___3.cljs$core$IFn$_invoke$arity$variadic;
return _;
})()
;
/**
* Returns the product of nums. (*) returns 1.
* @param {...*} var_args
*/
cljs.core._STAR_ = (function() {
var _STAR_ = null;
var _STAR___0 = (function (){
return (1);
});
var _STAR___1 = (function (x){
return x;
});
var _STAR___2 = (function (x,y){
return (x * y);
});
var _STAR___3 = (function() { 
var G__33694__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(_STAR_,(x * y),more);
};
var G__33694 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__33695__i = 0, G__33695__a = new Array(arguments.length -  2);
while (G__33695__i < G__33695__a.length) {G__33695__a[G__33695__i] = arguments[G__33695__i + 2]; ++G__33695__i;}
  more = new cljs.core.IndexedSeq(G__33695__a,0);
} 
return G__33694__delegate.call(this,x,y,more);};
G__33694.cljs$lang$maxFixedArity = 2;
G__33694.cljs$lang$applyTo = (function (arglist__33696){
var x = cljs.core.first(arglist__33696);
arglist__33696 = cljs.core.next(arglist__33696);
var y = cljs.core.first(arglist__33696);
var more = cljs.core.rest(arglist__33696);
return G__33694__delegate(x,y,more);
});
G__33694.cljs$core$IFn$_invoke$arity$variadic = G__33694__delegate;
return G__33694;
})()
;
_STAR_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 0:
return _STAR___0.call(this);
case 1:
return _STAR___1.call(this,x);
case 2:
return _STAR___2.call(this,x,y);
default:
var G__33697 = null;
if (arguments.length > 2) {
var G__33698__i = 0, G__33698__a = new Array(arguments.length -  2);
while (G__33698__i < G__33698__a.length) {G__33698__a[G__33698__i] = arguments[G__33698__i + 2]; ++G__33698__i;}
G__33697 = new cljs.core.IndexedSeq(G__33698__a,0);
}
return _STAR___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__33697);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_STAR_.cljs$lang$maxFixedArity = 2;
_STAR_.cljs$lang$applyTo = _STAR___3.cljs$lang$applyTo;
_STAR_.cljs$core$IFn$_invoke$arity$0 = _STAR___0;
_STAR_.cljs$core$IFn$_invoke$arity$1 = _STAR___1;
_STAR_.cljs$core$IFn$_invoke$arity$2 = _STAR___2;
_STAR_.cljs$core$IFn$_invoke$arity$variadic = _STAR___3.cljs$core$IFn$_invoke$arity$variadic;
return _STAR_;
})()
;
/**
* If no denominators are supplied, returns 1/numerator,
* else returns numerator divided by all of the denominators.
* @param {...*} var_args
*/
cljs.core._SLASH_ = (function() {
var _SLASH_ = null;
var _SLASH___1 = (function (x){
return _SLASH_.cljs$core$IFn$_invoke$arity$2((1),x);
});
var _SLASH___2 = (function (x,y){
return (x / y);
});
var _SLASH___3 = (function() { 
var G__33703__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(_SLASH_,_SLASH_.cljs$core$IFn$_invoke$arity$2(x,y),more);
};
var G__33703 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__33704__i = 0, G__33704__a = new Array(arguments.length -  2);
while (G__33704__i < G__33704__a.length) {G__33704__a[G__33704__i] = arguments[G__33704__i + 2]; ++G__33704__i;}
  more = new cljs.core.IndexedSeq(G__33704__a,0);
} 
return G__33703__delegate.call(this,x,y,more);};
G__33703.cljs$lang$maxFixedArity = 2;
G__33703.cljs$lang$applyTo = (function (arglist__33705){
var x = cljs.core.first(arglist__33705);
arglist__33705 = cljs.core.next(arglist__33705);
var y = cljs.core.first(arglist__33705);
var more = cljs.core.rest(arglist__33705);
return G__33703__delegate(x,y,more);
});
G__33703.cljs$core$IFn$_invoke$arity$variadic = G__33703__delegate;
return G__33703;
})()
;
_SLASH_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return _SLASH___1.call(this,x);
case 2:
return _SLASH___2.call(this,x,y);
default:
var G__33706 = null;
if (arguments.length > 2) {
var G__33707__i = 0, G__33707__a = new Array(arguments.length -  2);
while (G__33707__i < G__33707__a.length) {G__33707__a[G__33707__i] = arguments[G__33707__i + 2]; ++G__33707__i;}
G__33706 = new cljs.core.IndexedSeq(G__33707__a,0);
}
return _SLASH___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__33706);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_SLASH_.cljs$lang$maxFixedArity = 2;
_SLASH_.cljs$lang$applyTo = _SLASH___3.cljs$lang$applyTo;
_SLASH_.cljs$core$IFn$_invoke$arity$1 = _SLASH___1;
_SLASH_.cljs$core$IFn$_invoke$arity$2 = _SLASH___2;
_SLASH_.cljs$core$IFn$_invoke$arity$variadic = _SLASH___3.cljs$core$IFn$_invoke$arity$variadic;
return _SLASH_;
})()
;
/**
* Returns non-nil if nums are in monotonically increasing order,
* otherwise false.
* @param {...*} var_args
*/
cljs.core._LT_ = (function() {
var _LT_ = null;
var _LT___1 = (function (x){
return true;
});
var _LT___2 = (function (x,y){
return (x < y);
});
var _LT___3 = (function() { 
var G__33708__delegate = function (x,y,more){
while(true){
if((x < y)){
if(cljs.core.next(more)){
var G__33709 = y;
var G__33710 = cljs.core.first(more);
var G__33711 = cljs.core.next(more);
x = G__33709;
y = G__33710;
more = G__33711;
continue;
} else {
return (y < cljs.core.first(more));
}
} else {
return false;
}
break;
}
};
var G__33708 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__33712__i = 0, G__33712__a = new Array(arguments.length -  2);
while (G__33712__i < G__33712__a.length) {G__33712__a[G__33712__i] = arguments[G__33712__i + 2]; ++G__33712__i;}
  more = new cljs.core.IndexedSeq(G__33712__a,0);
} 
return G__33708__delegate.call(this,x,y,more);};
G__33708.cljs$lang$maxFixedArity = 2;
G__33708.cljs$lang$applyTo = (function (arglist__33713){
var x = cljs.core.first(arglist__33713);
arglist__33713 = cljs.core.next(arglist__33713);
var y = cljs.core.first(arglist__33713);
var more = cljs.core.rest(arglist__33713);
return G__33708__delegate(x,y,more);
});
G__33708.cljs$core$IFn$_invoke$arity$variadic = G__33708__delegate;
return G__33708;
})()
;
_LT_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return _LT___1.call(this,x);
case 2:
return _LT___2.call(this,x,y);
default:
var G__33714 = null;
if (arguments.length > 2) {
var G__33715__i = 0, G__33715__a = new Array(arguments.length -  2);
while (G__33715__i < G__33715__a.length) {G__33715__a[G__33715__i] = arguments[G__33715__i + 2]; ++G__33715__i;}
G__33714 = new cljs.core.IndexedSeq(G__33715__a,0);
}
return _LT___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__33714);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_LT_.cljs$lang$maxFixedArity = 2;
_LT_.cljs$lang$applyTo = _LT___3.cljs$lang$applyTo;
_LT_.cljs$core$IFn$_invoke$arity$1 = _LT___1;
_LT_.cljs$core$IFn$_invoke$arity$2 = _LT___2;
_LT_.cljs$core$IFn$_invoke$arity$variadic = _LT___3.cljs$core$IFn$_invoke$arity$variadic;
return _LT_;
})()
;
/**
* Returns non-nil if nums are in monotonically non-decreasing order,
* otherwise false.
* @param {...*} var_args
*/
cljs.core._LT__EQ_ = (function() {
var _LT__EQ_ = null;
var _LT__EQ___1 = (function (x){
return true;
});
var _LT__EQ___2 = (function (x,y){
return (x <= y);
});
var _LT__EQ___3 = (function() { 
var G__33716__delegate = function (x,y,more){
while(true){
if((x <= y)){
if(cljs.core.next(more)){
var G__33717 = y;
var G__33718 = cljs.core.first(more);
var G__33719 = cljs.core.next(more);
x = G__33717;
y = G__33718;
more = G__33719;
continue;
} else {
return (y <= cljs.core.first(more));
}
} else {
return false;
}
break;
}
};
var G__33716 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__33720__i = 0, G__33720__a = new Array(arguments.length -  2);
while (G__33720__i < G__33720__a.length) {G__33720__a[G__33720__i] = arguments[G__33720__i + 2]; ++G__33720__i;}
  more = new cljs.core.IndexedSeq(G__33720__a,0);
} 
return G__33716__delegate.call(this,x,y,more);};
G__33716.cljs$lang$maxFixedArity = 2;
G__33716.cljs$lang$applyTo = (function (arglist__33721){
var x = cljs.core.first(arglist__33721);
arglist__33721 = cljs.core.next(arglist__33721);
var y = cljs.core.first(arglist__33721);
var more = cljs.core.rest(arglist__33721);
return G__33716__delegate(x,y,more);
});
G__33716.cljs$core$IFn$_invoke$arity$variadic = G__33716__delegate;
return G__33716;
})()
;
_LT__EQ_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return _LT__EQ___1.call(this,x);
case 2:
return _LT__EQ___2.call(this,x,y);
default:
var G__33722 = null;
if (arguments.length > 2) {
var G__33723__i = 0, G__33723__a = new Array(arguments.length -  2);
while (G__33723__i < G__33723__a.length) {G__33723__a[G__33723__i] = arguments[G__33723__i + 2]; ++G__33723__i;}
G__33722 = new cljs.core.IndexedSeq(G__33723__a,0);
}
return _LT__EQ___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__33722);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_LT__EQ_.cljs$lang$maxFixedArity = 2;
_LT__EQ_.cljs$lang$applyTo = _LT__EQ___3.cljs$lang$applyTo;
_LT__EQ_.cljs$core$IFn$_invoke$arity$1 = _LT__EQ___1;
_LT__EQ_.cljs$core$IFn$_invoke$arity$2 = _LT__EQ___2;
_LT__EQ_.cljs$core$IFn$_invoke$arity$variadic = _LT__EQ___3.cljs$core$IFn$_invoke$arity$variadic;
return _LT__EQ_;
})()
;
/**
* Returns non-nil if nums are in monotonically decreasing order,
* otherwise false.
* @param {...*} var_args
*/
cljs.core._GT_ = (function() {
var _GT_ = null;
var _GT___1 = (function (x){
return true;
});
var _GT___2 = (function (x,y){
return (x > y);
});
var _GT___3 = (function() { 
var G__33724__delegate = function (x,y,more){
while(true){
if((x > y)){
if(cljs.core.next(more)){
var G__33725 = y;
var G__33726 = cljs.core.first(more);
var G__33727 = cljs.core.next(more);
x = G__33725;
y = G__33726;
more = G__33727;
continue;
} else {
return (y > cljs.core.first(more));
}
} else {
return false;
}
break;
}
};
var G__33724 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__33728__i = 0, G__33728__a = new Array(arguments.length -  2);
while (G__33728__i < G__33728__a.length) {G__33728__a[G__33728__i] = arguments[G__33728__i + 2]; ++G__33728__i;}
  more = new cljs.core.IndexedSeq(G__33728__a,0);
} 
return G__33724__delegate.call(this,x,y,more);};
G__33724.cljs$lang$maxFixedArity = 2;
G__33724.cljs$lang$applyTo = (function (arglist__33729){
var x = cljs.core.first(arglist__33729);
arglist__33729 = cljs.core.next(arglist__33729);
var y = cljs.core.first(arglist__33729);
var more = cljs.core.rest(arglist__33729);
return G__33724__delegate(x,y,more);
});
G__33724.cljs$core$IFn$_invoke$arity$variadic = G__33724__delegate;
return G__33724;
})()
;
_GT_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return _GT___1.call(this,x);
case 2:
return _GT___2.call(this,x,y);
default:
var G__33730 = null;
if (arguments.length > 2) {
var G__33731__i = 0, G__33731__a = new Array(arguments.length -  2);
while (G__33731__i < G__33731__a.length) {G__33731__a[G__33731__i] = arguments[G__33731__i + 2]; ++G__33731__i;}
G__33730 = new cljs.core.IndexedSeq(G__33731__a,0);
}
return _GT___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__33730);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_GT_.cljs$lang$maxFixedArity = 2;
_GT_.cljs$lang$applyTo = _GT___3.cljs$lang$applyTo;
_GT_.cljs$core$IFn$_invoke$arity$1 = _GT___1;
_GT_.cljs$core$IFn$_invoke$arity$2 = _GT___2;
_GT_.cljs$core$IFn$_invoke$arity$variadic = _GT___3.cljs$core$IFn$_invoke$arity$variadic;
return _GT_;
})()
;
/**
* Returns non-nil if nums are in monotonically non-increasing order,
* otherwise false.
* @param {...*} var_args
*/
cljs.core._GT__EQ_ = (function() {
var _GT__EQ_ = null;
var _GT__EQ___1 = (function (x){
return true;
});
var _GT__EQ___2 = (function (x,y){
return (x >= y);
});
var _GT__EQ___3 = (function() { 
var G__33732__delegate = function (x,y,more){
while(true){
if((x >= y)){
if(cljs.core.next(more)){
var G__33733 = y;
var G__33734 = cljs.core.first(more);
var G__33735 = cljs.core.next(more);
x = G__33733;
y = G__33734;
more = G__33735;
continue;
} else {
return (y >= cljs.core.first(more));
}
} else {
return false;
}
break;
}
};
var G__33732 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__33736__i = 0, G__33736__a = new Array(arguments.length -  2);
while (G__33736__i < G__33736__a.length) {G__33736__a[G__33736__i] = arguments[G__33736__i + 2]; ++G__33736__i;}
  more = new cljs.core.IndexedSeq(G__33736__a,0);
} 
return G__33732__delegate.call(this,x,y,more);};
G__33732.cljs$lang$maxFixedArity = 2;
G__33732.cljs$lang$applyTo = (function (arglist__33737){
var x = cljs.core.first(arglist__33737);
arglist__33737 = cljs.core.next(arglist__33737);
var y = cljs.core.first(arglist__33737);
var more = cljs.core.rest(arglist__33737);
return G__33732__delegate(x,y,more);
});
G__33732.cljs$core$IFn$_invoke$arity$variadic = G__33732__delegate;
return G__33732;
})()
;
_GT__EQ_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return _GT__EQ___1.call(this,x);
case 2:
return _GT__EQ___2.call(this,x,y);
default:
var G__33738 = null;
if (arguments.length > 2) {
var G__33739__i = 0, G__33739__a = new Array(arguments.length -  2);
while (G__33739__i < G__33739__a.length) {G__33739__a[G__33739__i] = arguments[G__33739__i + 2]; ++G__33739__i;}
G__33738 = new cljs.core.IndexedSeq(G__33739__a,0);
}
return _GT__EQ___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__33738);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_GT__EQ_.cljs$lang$maxFixedArity = 2;
_GT__EQ_.cljs$lang$applyTo = _GT__EQ___3.cljs$lang$applyTo;
_GT__EQ_.cljs$core$IFn$_invoke$arity$1 = _GT__EQ___1;
_GT__EQ_.cljs$core$IFn$_invoke$arity$2 = _GT__EQ___2;
_GT__EQ_.cljs$core$IFn$_invoke$arity$variadic = _GT__EQ___3.cljs$core$IFn$_invoke$arity$variadic;
return _GT__EQ_;
})()
;
/**
* Returns a number one less than num.
*/
cljs.core.dec = (function dec(x){
return (x - (1));
});
/**
* Returns the greatest of the nums.
* @param {...*} var_args
*/
cljs.core.max = (function() {
var max = null;
var max__1 = (function (x){
return x;
});
var max__2 = (function (x,y){
var x__24591__auto__ = x;
var y__24592__auto__ = y;
return ((x__24591__auto__ > y__24592__auto__) ? x__24591__auto__ : y__24592__auto__);
});
var max__3 = (function() { 
var G__33740__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(max,(function (){var x__24591__auto__ = x;
var y__24592__auto__ = y;
return ((x__24591__auto__ > y__24592__auto__) ? x__24591__auto__ : y__24592__auto__);
})(),more);
};
var G__33740 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__33741__i = 0, G__33741__a = new Array(arguments.length -  2);
while (G__33741__i < G__33741__a.length) {G__33741__a[G__33741__i] = arguments[G__33741__i + 2]; ++G__33741__i;}
  more = new cljs.core.IndexedSeq(G__33741__a,0);
} 
return G__33740__delegate.call(this,x,y,more);};
G__33740.cljs$lang$maxFixedArity = 2;
G__33740.cljs$lang$applyTo = (function (arglist__33742){
var x = cljs.core.first(arglist__33742);
arglist__33742 = cljs.core.next(arglist__33742);
var y = cljs.core.first(arglist__33742);
var more = cljs.core.rest(arglist__33742);
return G__33740__delegate(x,y,more);
});
G__33740.cljs$core$IFn$_invoke$arity$variadic = G__33740__delegate;
return G__33740;
})()
;
max = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return max__1.call(this,x);
case 2:
return max__2.call(this,x,y);
default:
var G__33743 = null;
if (arguments.length > 2) {
var G__33744__i = 0, G__33744__a = new Array(arguments.length -  2);
while (G__33744__i < G__33744__a.length) {G__33744__a[G__33744__i] = arguments[G__33744__i + 2]; ++G__33744__i;}
G__33743 = new cljs.core.IndexedSeq(G__33744__a,0);
}
return max__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__33743);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
max.cljs$lang$maxFixedArity = 2;
max.cljs$lang$applyTo = max__3.cljs$lang$applyTo;
max.cljs$core$IFn$_invoke$arity$1 = max__1;
max.cljs$core$IFn$_invoke$arity$2 = max__2;
max.cljs$core$IFn$_invoke$arity$variadic = max__3.cljs$core$IFn$_invoke$arity$variadic;
return max;
})()
;
/**
* Returns the least of the nums.
* @param {...*} var_args
*/
cljs.core.min = (function() {
var min = null;
var min__1 = (function (x){
return x;
});
var min__2 = (function (x,y){
var x__24598__auto__ = x;
var y__24599__auto__ = y;
return ((x__24598__auto__ < y__24599__auto__) ? x__24598__auto__ : y__24599__auto__);
});
var min__3 = (function() { 
var G__33745__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(min,(function (){var x__24598__auto__ = x;
var y__24599__auto__ = y;
return ((x__24598__auto__ < y__24599__auto__) ? x__24598__auto__ : y__24599__auto__);
})(),more);
};
var G__33745 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__33746__i = 0, G__33746__a = new Array(arguments.length -  2);
while (G__33746__i < G__33746__a.length) {G__33746__a[G__33746__i] = arguments[G__33746__i + 2]; ++G__33746__i;}
  more = new cljs.core.IndexedSeq(G__33746__a,0);
} 
return G__33745__delegate.call(this,x,y,more);};
G__33745.cljs$lang$maxFixedArity = 2;
G__33745.cljs$lang$applyTo = (function (arglist__33747){
var x = cljs.core.first(arglist__33747);
arglist__33747 = cljs.core.next(arglist__33747);
var y = cljs.core.first(arglist__33747);
var more = cljs.core.rest(arglist__33747);
return G__33745__delegate(x,y,more);
});
G__33745.cljs$core$IFn$_invoke$arity$variadic = G__33745__delegate;
return G__33745;
})()
;
min = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return min__1.call(this,x);
case 2:
return min__2.call(this,x,y);
default:
var G__33748 = null;
if (arguments.length > 2) {
var G__33749__i = 0, G__33749__a = new Array(arguments.length -  2);
while (G__33749__i < G__33749__a.length) {G__33749__a[G__33749__i] = arguments[G__33749__i + 2]; ++G__33749__i;}
G__33748 = new cljs.core.IndexedSeq(G__33749__a,0);
}
return min__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__33748);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
min.cljs$lang$maxFixedArity = 2;
min.cljs$lang$applyTo = min__3.cljs$lang$applyTo;
min.cljs$core$IFn$_invoke$arity$1 = min__1;
min.cljs$core$IFn$_invoke$arity$2 = min__2;
min.cljs$core$IFn$_invoke$arity$variadic = min__3.cljs$core$IFn$_invoke$arity$variadic;
return min;
})()
;
cljs.core.byte$ = (function byte$(x){
return x;
});
/**
* Coerce to char
*/
cljs.core.char$ = (function char$(x){
if(typeof x === 'number'){
return String.fromCharCode(x);
} else {
if((typeof x === 'string') && ((x.length === (1)))){
return x;
} else {
throw (new Error("Argument to char must be a character or number"));

}
}
});
cljs.core.short$ = (function short$(x){
return x;
});
cljs.core.float$ = (function float$(x){
return x;
});
cljs.core.double$ = (function double$(x){
return x;
});
cljs.core.unchecked_byte = (function unchecked_byte(x){
return x;
});
cljs.core.unchecked_char = (function unchecked_char(x){
return x;
});
cljs.core.unchecked_short = (function unchecked_short(x){
return x;
});
cljs.core.unchecked_float = (function unchecked_float(x){
return x;
});
cljs.core.unchecked_double = (function unchecked_double(x){
return x;
});
/**
* Returns the sum of nums. (+) returns 0.
* @param {...*} var_args
*/
cljs.core.unchecked_add = (function() {
var unchecked_add = null;
var unchecked_add__0 = (function (){
return (0);
});
var unchecked_add__1 = (function (x){
return x;
});
var unchecked_add__2 = (function (x,y){
return (x + y);
});
var unchecked_add__3 = (function() { 
var G__33750__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_add,(x + y),more);
};
var G__33750 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__33751__i = 0, G__33751__a = new Array(arguments.length -  2);
while (G__33751__i < G__33751__a.length) {G__33751__a[G__33751__i] = arguments[G__33751__i + 2]; ++G__33751__i;}
  more = new cljs.core.IndexedSeq(G__33751__a,0);
} 
return G__33750__delegate.call(this,x,y,more);};
G__33750.cljs$lang$maxFixedArity = 2;
G__33750.cljs$lang$applyTo = (function (arglist__33752){
var x = cljs.core.first(arglist__33752);
arglist__33752 = cljs.core.next(arglist__33752);
var y = cljs.core.first(arglist__33752);
var more = cljs.core.rest(arglist__33752);
return G__33750__delegate(x,y,more);
});
G__33750.cljs$core$IFn$_invoke$arity$variadic = G__33750__delegate;
return G__33750;
})()
;
unchecked_add = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 0:
return unchecked_add__0.call(this);
case 1:
return unchecked_add__1.call(this,x);
case 2:
return unchecked_add__2.call(this,x,y);
default:
var G__33753 = null;
if (arguments.length > 2) {
var G__33754__i = 0, G__33754__a = new Array(arguments.length -  2);
while (G__33754__i < G__33754__a.length) {G__33754__a[G__33754__i] = arguments[G__33754__i + 2]; ++G__33754__i;}
G__33753 = new cljs.core.IndexedSeq(G__33754__a,0);
}
return unchecked_add__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__33753);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
unchecked_add.cljs$lang$maxFixedArity = 2;
unchecked_add.cljs$lang$applyTo = unchecked_add__3.cljs$lang$applyTo;
unchecked_add.cljs$core$IFn$_invoke$arity$0 = unchecked_add__0;
unchecked_add.cljs$core$IFn$_invoke$arity$1 = unchecked_add__1;
unchecked_add.cljs$core$IFn$_invoke$arity$2 = unchecked_add__2;
unchecked_add.cljs$core$IFn$_invoke$arity$variadic = unchecked_add__3.cljs$core$IFn$_invoke$arity$variadic;
return unchecked_add;
})()
;
/**
* Returns the sum of nums. (+) returns 0.
* @param {...*} var_args
*/
cljs.core.unchecked_add_int = (function() {
var unchecked_add_int = null;
var unchecked_add_int__0 = (function (){
return (0);
});
var unchecked_add_int__1 = (function (x){
return x;
});
var unchecked_add_int__2 = (function (x,y){
return (x + y);
});
var unchecked_add_int__3 = (function() { 
var G__33755__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_add_int,(x + y),more);
};
var G__33755 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__33756__i = 0, G__33756__a = new Array(arguments.length -  2);
while (G__33756__i < G__33756__a.length) {G__33756__a[G__33756__i] = arguments[G__33756__i + 2]; ++G__33756__i;}
  more = new cljs.core.IndexedSeq(G__33756__a,0);
} 
return G__33755__delegate.call(this,x,y,more);};
G__33755.cljs$lang$maxFixedArity = 2;
G__33755.cljs$lang$applyTo = (function (arglist__33757){
var x = cljs.core.first(arglist__33757);
arglist__33757 = cljs.core.next(arglist__33757);
var y = cljs.core.first(arglist__33757);
var more = cljs.core.rest(arglist__33757);
return G__33755__delegate(x,y,more);
});
G__33755.cljs$core$IFn$_invoke$arity$variadic = G__33755__delegate;
return G__33755;
})()
;
unchecked_add_int = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 0:
return unchecked_add_int__0.call(this);
case 1:
return unchecked_add_int__1.call(this,x);
case 2:
return unchecked_add_int__2.call(this,x,y);
default:
var G__33758 = null;
if (arguments.length > 2) {
var G__33759__i = 0, G__33759__a = new Array(arguments.length -  2);
while (G__33759__i < G__33759__a.length) {G__33759__a[G__33759__i] = arguments[G__33759__i + 2]; ++G__33759__i;}
G__33758 = new cljs.core.IndexedSeq(G__33759__a,0);
}
return unchecked_add_int__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__33758);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
unchecked_add_int.cljs$lang$maxFixedArity = 2;
unchecked_add_int.cljs$lang$applyTo = unchecked_add_int__3.cljs$lang$applyTo;
unchecked_add_int.cljs$core$IFn$_invoke$arity$0 = unchecked_add_int__0;
unchecked_add_int.cljs$core$IFn$_invoke$arity$1 = unchecked_add_int__1;
unchecked_add_int.cljs$core$IFn$_invoke$arity$2 = unchecked_add_int__2;
unchecked_add_int.cljs$core$IFn$_invoke$arity$variadic = unchecked_add_int__3.cljs$core$IFn$_invoke$arity$variadic;
return unchecked_add_int;
})()
;
cljs.core.unchecked_dec = (function unchecked_dec(x){
return (x - (1));
});
cljs.core.unchecked_dec_int = (function unchecked_dec_int(x){
return (x - (1));
});
/**
* If no denominators are supplied, returns 1/numerator,
* else returns numerator divided by all of the denominators.
* @param {...*} var_args
*/
cljs.core.unchecked_divide_int = (function() {
var unchecked_divide_int = null;
var unchecked_divide_int__1 = (function (x){
return unchecked_divide_int.cljs$core$IFn$_invoke$arity$2((1),x);
});
var unchecked_divide_int__2 = (function (x,y){
return (x / y);
});
var unchecked_divide_int__3 = (function() { 
var G__33764__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_divide_int,unchecked_divide_int.cljs$core$IFn$_invoke$arity$2(x,y),more);
};
var G__33764 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__33765__i = 0, G__33765__a = new Array(arguments.length -  2);
while (G__33765__i < G__33765__a.length) {G__33765__a[G__33765__i] = arguments[G__33765__i + 2]; ++G__33765__i;}
  more = new cljs.core.IndexedSeq(G__33765__a,0);
} 
return G__33764__delegate.call(this,x,y,more);};
G__33764.cljs$lang$maxFixedArity = 2;
G__33764.cljs$lang$applyTo = (function (arglist__33766){
var x = cljs.core.first(arglist__33766);
arglist__33766 = cljs.core.next(arglist__33766);
var y = cljs.core.first(arglist__33766);
var more = cljs.core.rest(arglist__33766);
return G__33764__delegate(x,y,more);
});
G__33764.cljs$core$IFn$_invoke$arity$variadic = G__33764__delegate;
return G__33764;
})()
;
unchecked_divide_int = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return unchecked_divide_int__1.call(this,x);
case 2:
return unchecked_divide_int__2.call(this,x,y);
default:
var G__33767 = null;
if (arguments.length > 2) {
var G__33768__i = 0, G__33768__a = new Array(arguments.length -  2);
while (G__33768__i < G__33768__a.length) {G__33768__a[G__33768__i] = arguments[G__33768__i + 2]; ++G__33768__i;}
G__33767 = new cljs.core.IndexedSeq(G__33768__a,0);
}
return unchecked_divide_int__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__33767);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
unchecked_divide_int.cljs$lang$maxFixedArity = 2;
unchecked_divide_int.cljs$lang$applyTo = unchecked_divide_int__3.cljs$lang$applyTo;
unchecked_divide_int.cljs$core$IFn$_invoke$arity$1 = unchecked_divide_int__1;
unchecked_divide_int.cljs$core$IFn$_invoke$arity$2 = unchecked_divide_int__2;
unchecked_divide_int.cljs$core$IFn$_invoke$arity$variadic = unchecked_divide_int__3.cljs$core$IFn$_invoke$arity$variadic;
return unchecked_divide_int;
})()
;
cljs.core.unchecked_inc = (function unchecked_inc(x){
return (x + (1));
});
cljs.core.unchecked_inc_int = (function unchecked_inc_int(x){
return (x + (1));
});
/**
* Returns the product of nums. (*) returns 1.
* @param {...*} var_args
*/
cljs.core.unchecked_multiply = (function() {
var unchecked_multiply = null;
var unchecked_multiply__0 = (function (){
return (1);
});
var unchecked_multiply__1 = (function (x){
return x;
});
var unchecked_multiply__2 = (function (x,y){
return (x * y);
});
var unchecked_multiply__3 = (function() { 
var G__33769__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_multiply,(x * y),more);
};
var G__33769 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__33770__i = 0, G__33770__a = new Array(arguments.length -  2);
while (G__33770__i < G__33770__a.length) {G__33770__a[G__33770__i] = arguments[G__33770__i + 2]; ++G__33770__i;}
  more = new cljs.core.IndexedSeq(G__33770__a,0);
} 
return G__33769__delegate.call(this,x,y,more);};
G__33769.cljs$lang$maxFixedArity = 2;
G__33769.cljs$lang$applyTo = (function (arglist__33771){
var x = cljs.core.first(arglist__33771);
arglist__33771 = cljs.core.next(arglist__33771);
var y = cljs.core.first(arglist__33771);
var more = cljs.core.rest(arglist__33771);
return G__33769__delegate(x,y,more);
});
G__33769.cljs$core$IFn$_invoke$arity$variadic = G__33769__delegate;
return G__33769;
})()
;
unchecked_multiply = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 0:
return unchecked_multiply__0.call(this);
case 1:
return unchecked_multiply__1.call(this,x);
case 2:
return unchecked_multiply__2.call(this,x,y);
default:
var G__33772 = null;
if (arguments.length > 2) {
var G__33773__i = 0, G__33773__a = new Array(arguments.length -  2);
while (G__33773__i < G__33773__a.length) {G__33773__a[G__33773__i] = arguments[G__33773__i + 2]; ++G__33773__i;}
G__33772 = new cljs.core.IndexedSeq(G__33773__a,0);
}
return unchecked_multiply__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__33772);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
unchecked_multiply.cljs$lang$maxFixedArity = 2;
unchecked_multiply.cljs$lang$applyTo = unchecked_multiply__3.cljs$lang$applyTo;
unchecked_multiply.cljs$core$IFn$_invoke$arity$0 = unchecked_multiply__0;
unchecked_multiply.cljs$core$IFn$_invoke$arity$1 = unchecked_multiply__1;
unchecked_multiply.cljs$core$IFn$_invoke$arity$2 = unchecked_multiply__2;
unchecked_multiply.cljs$core$IFn$_invoke$arity$variadic = unchecked_multiply__3.cljs$core$IFn$_invoke$arity$variadic;
return unchecked_multiply;
})()
;
/**
* Returns the product of nums. (*) returns 1.
* @param {...*} var_args
*/
cljs.core.unchecked_multiply_int = (function() {
var unchecked_multiply_int = null;
var unchecked_multiply_int__0 = (function (){
return (1);
});
var unchecked_multiply_int__1 = (function (x){
return x;
});
var unchecked_multiply_int__2 = (function (x,y){
return (x * y);
});
var unchecked_multiply_int__3 = (function() { 
var G__33774__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_multiply_int,(x * y),more);
};
var G__33774 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__33775__i = 0, G__33775__a = new Array(arguments.length -  2);
while (G__33775__i < G__33775__a.length) {G__33775__a[G__33775__i] = arguments[G__33775__i + 2]; ++G__33775__i;}
  more = new cljs.core.IndexedSeq(G__33775__a,0);
} 
return G__33774__delegate.call(this,x,y,more);};
G__33774.cljs$lang$maxFixedArity = 2;
G__33774.cljs$lang$applyTo = (function (arglist__33776){
var x = cljs.core.first(arglist__33776);
arglist__33776 = cljs.core.next(arglist__33776);
var y = cljs.core.first(arglist__33776);
var more = cljs.core.rest(arglist__33776);
return G__33774__delegate(x,y,more);
});
G__33774.cljs$core$IFn$_invoke$arity$variadic = G__33774__delegate;
return G__33774;
})()
;
unchecked_multiply_int = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 0:
return unchecked_multiply_int__0.call(this);
case 1:
return unchecked_multiply_int__1.call(this,x);
case 2:
return unchecked_multiply_int__2.call(this,x,y);
default:
var G__33777 = null;
if (arguments.length > 2) {
var G__33778__i = 0, G__33778__a = new Array(arguments.length -  2);
while (G__33778__i < G__33778__a.length) {G__33778__a[G__33778__i] = arguments[G__33778__i + 2]; ++G__33778__i;}
G__33777 = new cljs.core.IndexedSeq(G__33778__a,0);
}
return unchecked_multiply_int__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__33777);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
unchecked_multiply_int.cljs$lang$maxFixedArity = 2;
unchecked_multiply_int.cljs$lang$applyTo = unchecked_multiply_int__3.cljs$lang$applyTo;
unchecked_multiply_int.cljs$core$IFn$_invoke$arity$0 = unchecked_multiply_int__0;
unchecked_multiply_int.cljs$core$IFn$_invoke$arity$1 = unchecked_multiply_int__1;
unchecked_multiply_int.cljs$core$IFn$_invoke$arity$2 = unchecked_multiply_int__2;
unchecked_multiply_int.cljs$core$IFn$_invoke$arity$variadic = unchecked_multiply_int__3.cljs$core$IFn$_invoke$arity$variadic;
return unchecked_multiply_int;
})()
;
cljs.core.unchecked_negate = (function unchecked_negate(x){
return (- x);
});
cljs.core.unchecked_negate_int = (function unchecked_negate_int(x){
return (- x);
});
cljs.core.unchecked_remainder_int = (function unchecked_remainder_int(x,n){
var G__33781 = x;
var G__33782 = n;
return (cljs.core.mod.cljs$core$IFn$_invoke$arity$2 ? cljs.core.mod.cljs$core$IFn$_invoke$arity$2(G__33781,G__33782) : cljs.core.mod.call(null,G__33781,G__33782));
});
/**
* If no ys are supplied, returns the negation of x, else subtracts
* the ys from x and returns the result.
* @param {...*} var_args
*/
cljs.core.unchecked_subtract = (function() {
var unchecked_subtract = null;
var unchecked_subtract__1 = (function (x){
return (- x);
});
var unchecked_subtract__2 = (function (x,y){
return (x - y);
});
var unchecked_subtract__3 = (function() { 
var G__33783__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_subtract,(x - y),more);
};
var G__33783 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__33784__i = 0, G__33784__a = new Array(arguments.length -  2);
while (G__33784__i < G__33784__a.length) {G__33784__a[G__33784__i] = arguments[G__33784__i + 2]; ++G__33784__i;}
  more = new cljs.core.IndexedSeq(G__33784__a,0);
} 
return G__33783__delegate.call(this,x,y,more);};
G__33783.cljs$lang$maxFixedArity = 2;
G__33783.cljs$lang$applyTo = (function (arglist__33785){
var x = cljs.core.first(arglist__33785);
arglist__33785 = cljs.core.next(arglist__33785);
var y = cljs.core.first(arglist__33785);
var more = cljs.core.rest(arglist__33785);
return G__33783__delegate(x,y,more);
});
G__33783.cljs$core$IFn$_invoke$arity$variadic = G__33783__delegate;
return G__33783;
})()
;
unchecked_subtract = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return unchecked_subtract__1.call(this,x);
case 2:
return unchecked_subtract__2.call(this,x,y);
default:
var G__33786 = null;
if (arguments.length > 2) {
var G__33787__i = 0, G__33787__a = new Array(arguments.length -  2);
while (G__33787__i < G__33787__a.length) {G__33787__a[G__33787__i] = arguments[G__33787__i + 2]; ++G__33787__i;}
G__33786 = new cljs.core.IndexedSeq(G__33787__a,0);
}
return unchecked_subtract__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__33786);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
unchecked_subtract.cljs$lang$maxFixedArity = 2;
unchecked_subtract.cljs$lang$applyTo = unchecked_subtract__3.cljs$lang$applyTo;
unchecked_subtract.cljs$core$IFn$_invoke$arity$1 = unchecked_subtract__1;
unchecked_subtract.cljs$core$IFn$_invoke$arity$2 = unchecked_subtract__2;
unchecked_subtract.cljs$core$IFn$_invoke$arity$variadic = unchecked_subtract__3.cljs$core$IFn$_invoke$arity$variadic;
return unchecked_subtract;
})()
;
/**
* If no ys are supplied, returns the negation of x, else subtracts
* the ys from x and returns the result.
* @param {...*} var_args
*/
cljs.core.unchecked_subtract_int = (function() {
var unchecked_subtract_int = null;
var unchecked_subtract_int__1 = (function (x){
return (- x);
});
var unchecked_subtract_int__2 = (function (x,y){
return (x - y);
});
var unchecked_subtract_int__3 = (function() { 
var G__33788__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_subtract_int,(x - y),more);
};
var G__33788 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__33789__i = 0, G__33789__a = new Array(arguments.length -  2);
while (G__33789__i < G__33789__a.length) {G__33789__a[G__33789__i] = arguments[G__33789__i + 2]; ++G__33789__i;}
  more = new cljs.core.IndexedSeq(G__33789__a,0);
} 
return G__33788__delegate.call(this,x,y,more);};
G__33788.cljs$lang$maxFixedArity = 2;
G__33788.cljs$lang$applyTo = (function (arglist__33790){
var x = cljs.core.first(arglist__33790);
arglist__33790 = cljs.core.next(arglist__33790);
var y = cljs.core.first(arglist__33790);
var more = cljs.core.rest(arglist__33790);
return G__33788__delegate(x,y,more);
});
G__33788.cljs$core$IFn$_invoke$arity$variadic = G__33788__delegate;
return G__33788;
})()
;
unchecked_subtract_int = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return unchecked_subtract_int__1.call(this,x);
case 2:
return unchecked_subtract_int__2.call(this,x,y);
default:
var G__33791 = null;
if (arguments.length > 2) {
var G__33792__i = 0, G__33792__a = new Array(arguments.length -  2);
while (G__33792__i < G__33792__a.length) {G__33792__a[G__33792__i] = arguments[G__33792__i + 2]; ++G__33792__i;}
G__33791 = new cljs.core.IndexedSeq(G__33792__a,0);
}
return unchecked_subtract_int__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__33791);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
unchecked_subtract_int.cljs$lang$maxFixedArity = 2;
unchecked_subtract_int.cljs$lang$applyTo = unchecked_subtract_int__3.cljs$lang$applyTo;
unchecked_subtract_int.cljs$core$IFn$_invoke$arity$1 = unchecked_subtract_int__1;
unchecked_subtract_int.cljs$core$IFn$_invoke$arity$2 = unchecked_subtract_int__2;
unchecked_subtract_int.cljs$core$IFn$_invoke$arity$variadic = unchecked_subtract_int__3.cljs$core$IFn$_invoke$arity$variadic;
return unchecked_subtract_int;
})()
;
cljs.core.fix = (function fix(q){
if((q >= (0))){
var G__33795 = q;
return (Math.floor.cljs$core$IFn$_invoke$arity$1 ? Math.floor.cljs$core$IFn$_invoke$arity$1(G__33795) : Math.floor.call(null,G__33795));
} else {
var G__33796 = q;
return (Math.ceil.cljs$core$IFn$_invoke$arity$1 ? Math.ceil.cljs$core$IFn$_invoke$arity$1(G__33796) : Math.ceil.call(null,G__33796));
}
});
/**
* Coerce to int by stripping decimal places.
*/
cljs.core.int$ = (function int$(x){
return (x | (0));
});
/**
* Coerce to int by stripping decimal places.
*/
cljs.core.unchecked_int = (function unchecked_int(x){
return cljs.core.fix(x);
});
/**
* Coerce to long by stripping decimal places. Identical to `int'.
*/
cljs.core.long$ = (function long$(x){
return cljs.core.fix(x);
});
/**
* Coerce to long by stripping decimal places. Identical to `int'.
*/
cljs.core.unchecked_long = (function unchecked_long(x){
return cljs.core.fix(x);
});
cljs.core.booleans = (function booleans(x){
return x;
});
cljs.core.bytes = (function bytes(x){
return x;
});
cljs.core.chars = (function chars(x){
return x;
});
cljs.core.shorts = (function shorts(x){
return x;
});
cljs.core.ints = (function ints(x){
return x;
});
cljs.core.floats = (function floats(x){
return x;
});
cljs.core.doubles = (function doubles(x){
return x;
});
cljs.core.longs = (function longs(x){
return x;
});
/**
* Modulus of num and div with original javascript behavior. i.e. bug for negative numbers
*/
cljs.core.js_mod = (function js_mod(n,d){
return (n % d);
});
/**
* Modulus of num and div. Truncates toward negative infinity.
*/
cljs.core.mod = (function mod(n,d){
return (((n % d) + d) % d);
});
/**
* quot[ient] of dividing numerator by denominator.
*/
cljs.core.quot = (function quot(n,d){
var rem = (n % d);
return cljs.core.fix(((n - rem) / d));
});
/**
* remainder of dividing numerator by denominator.
*/
cljs.core.rem = (function rem(n,d){
var q = cljs.core.quot(n,d);
return (n - (d * q));
});
/**
* Bitwise exclusive or
*/
cljs.core.bit_xor = (function bit_xor(x,y){
return (x ^ y);
});
/**
* Bitwise and
*/
cljs.core.bit_and = (function bit_and(x,y){
return (x & y);
});
/**
* Bitwise or
*/
cljs.core.bit_or = (function bit_or(x,y){
return (x | y);
});
/**
* Bitwise and
*/
cljs.core.bit_and_not = (function bit_and_not(x,y){
return (x & ~y);
});
/**
* Clear bit at index n
*/
cljs.core.bit_clear = (function bit_clear(x,n){
return (x & ~(1 << n));
});
/**
* Flip bit at index n
*/
cljs.core.bit_flip = (function bit_flip(x,n){
return (x ^ (1 << n));
});
/**
* Bitwise complement
*/
cljs.core.bit_not = (function bit_not(x){
return (~ x);
});
/**
* Set bit at index n
*/
cljs.core.bit_set = (function bit_set(x,n){
return (x | (1 << n));
});
/**
* Test bit at index n
*/
cljs.core.bit_test = (function bit_test(x,n){
return ((x & (1 << n)) != 0);
});
/**
* Bitwise shift left
*/
cljs.core.bit_shift_left = (function bit_shift_left(x,n){
return (x << n);
});
/**
* Bitwise shift right
*/
cljs.core.bit_shift_right = (function bit_shift_right(x,n){
return (x >> n);
});
/**
* DEPRECATED: Bitwise shift right with zero fill
*/
cljs.core.bit_shift_right_zero_fill = (function bit_shift_right_zero_fill(x,n){
return (x >>> n);
});
/**
* Bitwise shift right with zero fill
*/
cljs.core.unsigned_bit_shift_right = (function unsigned_bit_shift_right(x,n){
return (x >>> n);
});
/**
* Counts the number of bits set in n
*/
cljs.core.bit_count = (function bit_count(v){
var v__$1 = (v - ((v >> (1)) & (1431655765)));
var v__$2 = ((v__$1 & (858993459)) + ((v__$1 >> (2)) & (858993459)));
return ((((v__$2 + (v__$2 >> (4))) & (252645135)) * (16843009)) >> (24));
});
/**
* Returns non-nil if nums all have the equivalent
* value, otherwise false. Behavior on non nums is
* undefined.
* @param {...*} var_args
*/
cljs.core._EQ__EQ_ = (function() {
var _EQ__EQ_ = null;
var _EQ__EQ___1 = (function (x){
return true;
});
var _EQ__EQ___2 = (function (x,y){
return cljs.core._equiv(x,y);
});
var _EQ__EQ___3 = (function() { 
var G__33801__delegate = function (x,y,more){
while(true){
if(_EQ__EQ_.cljs$core$IFn$_invoke$arity$2(x,y)){
if(cljs.core.next(more)){
var G__33802 = y;
var G__33803 = cljs.core.first(more);
var G__33804 = cljs.core.next(more);
x = G__33802;
y = G__33803;
more = G__33804;
continue;
} else {
return _EQ__EQ_.cljs$core$IFn$_invoke$arity$2(y,cljs.core.first(more));
}
} else {
return false;
}
break;
}
};
var G__33801 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__33805__i = 0, G__33805__a = new Array(arguments.length -  2);
while (G__33805__i < G__33805__a.length) {G__33805__a[G__33805__i] = arguments[G__33805__i + 2]; ++G__33805__i;}
  more = new cljs.core.IndexedSeq(G__33805__a,0);
} 
return G__33801__delegate.call(this,x,y,more);};
G__33801.cljs$lang$maxFixedArity = 2;
G__33801.cljs$lang$applyTo = (function (arglist__33806){
var x = cljs.core.first(arglist__33806);
arglist__33806 = cljs.core.next(arglist__33806);
var y = cljs.core.first(arglist__33806);
var more = cljs.core.rest(arglist__33806);
return G__33801__delegate(x,y,more);
});
G__33801.cljs$core$IFn$_invoke$arity$variadic = G__33801__delegate;
return G__33801;
})()
;
_EQ__EQ_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return _EQ__EQ___1.call(this,x);
case 2:
return _EQ__EQ___2.call(this,x,y);
default:
var G__33807 = null;
if (arguments.length > 2) {
var G__33808__i = 0, G__33808__a = new Array(arguments.length -  2);
while (G__33808__i < G__33808__a.length) {G__33808__a[G__33808__i] = arguments[G__33808__i + 2]; ++G__33808__i;}
G__33807 = new cljs.core.IndexedSeq(G__33808__a,0);
}
return _EQ__EQ___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__33807);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_EQ__EQ_.cljs$lang$maxFixedArity = 2;
_EQ__EQ_.cljs$lang$applyTo = _EQ__EQ___3.cljs$lang$applyTo;
_EQ__EQ_.cljs$core$IFn$_invoke$arity$1 = _EQ__EQ___1;
_EQ__EQ_.cljs$core$IFn$_invoke$arity$2 = _EQ__EQ___2;
_EQ__EQ_.cljs$core$IFn$_invoke$arity$variadic = _EQ__EQ___3.cljs$core$IFn$_invoke$arity$variadic;
return _EQ__EQ_;
})()
;
/**
* Returns true if num is greater than zero, else false
*/
cljs.core.pos_QMARK_ = (function pos_QMARK_(n){
return (n > (0));
});
cljs.core.zero_QMARK_ = (function zero_QMARK_(n){
return (n === (0));
});
/**
* Returns true if num is less than zero, else false
*/
cljs.core.neg_QMARK_ = (function neg_QMARK_(x){
return (x < (0));
});
/**
* Returns the nth next of coll, (seq coll) when n is 0.
*/
cljs.core.nthnext = (function nthnext(coll,n){
var n__$1 = n;
var xs = cljs.core.seq(coll);
while(true){
if((xs) && ((n__$1 > (0)))){
var G__33809 = (n__$1 - (1));
var G__33810 = cljs.core.next(xs);
n__$1 = G__33809;
xs = G__33810;
continue;
} else {
return xs;
}
break;
}
});
/**
* With no args, returns the empty string. With one arg x, returns
* x.toString().  (str nil) returns the empty string. With more than
* one arg, returns the concatenation of the str values of the args.
* @param {...*} var_args
*/
cljs.core.str = (function() {
var str = null;
var str__0 = (function (){
return "";
});
var str__1 = (function (x){
if((x == null)){
return "";
} else {
var G__33814 = x;
return goog.string.buildString(G__33814);
}
});
var str__2 = (function() { 
var G__33815__delegate = function (x,ys){
var sb = (new goog.string.StringBuffer(str.cljs$core$IFn$_invoke$arity$1(x)));
var more = ys;
while(true){
if(cljs.core.truth_(more)){
var G__33816 = sb.append(str.cljs$core$IFn$_invoke$arity$1(cljs.core.first(more)));
var G__33817 = cljs.core.next(more);
sb = G__33816;
more = G__33817;
continue;
} else {
return sb.toString();
}
break;
}
};
var G__33815 = function (x,var_args){
var ys = null;
if (arguments.length > 1) {
var G__33818__i = 0, G__33818__a = new Array(arguments.length -  1);
while (G__33818__i < G__33818__a.length) {G__33818__a[G__33818__i] = arguments[G__33818__i + 1]; ++G__33818__i;}
  ys = new cljs.core.IndexedSeq(G__33818__a,0);
} 
return G__33815__delegate.call(this,x,ys);};
G__33815.cljs$lang$maxFixedArity = 1;
G__33815.cljs$lang$applyTo = (function (arglist__33819){
var x = cljs.core.first(arglist__33819);
var ys = cljs.core.rest(arglist__33819);
return G__33815__delegate(x,ys);
});
G__33815.cljs$core$IFn$_invoke$arity$variadic = G__33815__delegate;
return G__33815;
})()
;
str = function(x,var_args){
var ys = var_args;
switch(arguments.length){
case 0:
return str__0.call(this);
case 1:
return str__1.call(this,x);
default:
var G__33820 = null;
if (arguments.length > 1) {
var G__33821__i = 0, G__33821__a = new Array(arguments.length -  1);
while (G__33821__i < G__33821__a.length) {G__33821__a[G__33821__i] = arguments[G__33821__i + 1]; ++G__33821__i;}
G__33820 = new cljs.core.IndexedSeq(G__33821__a,0);
}
return str__2.cljs$core$IFn$_invoke$arity$variadic(x, G__33820);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
str.cljs$lang$maxFixedArity = 1;
str.cljs$lang$applyTo = str__2.cljs$lang$applyTo;
str.cljs$core$IFn$_invoke$arity$0 = str__0;
str.cljs$core$IFn$_invoke$arity$1 = str__1;
str.cljs$core$IFn$_invoke$arity$variadic = str__2.cljs$core$IFn$_invoke$arity$variadic;
return str;
})()
;
/**
* Returns the substring of s beginning at start inclusive, and ending
* at end (defaults to length of string), exclusive.
*/
cljs.core.subs = (function() {
var subs = null;
var subs__2 = (function (s,start){
return s.substring(start);
});
var subs__3 = (function (s,start,end){
return s.substring(start,end);
});
subs = function(s,start,end){
switch(arguments.length){
case 2:
return subs__2.call(this,s,start);
case 3:
return subs__3.call(this,s,start,end);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
subs.cljs$core$IFn$_invoke$arity$2 = subs__2;
subs.cljs$core$IFn$_invoke$arity$3 = subs__3;
return subs;
})()
;

/**
* Assumes x is sequential. Returns true if x equals y, otherwise
* returns false.
*/
cljs.core.equiv_sequential = (function equiv_sequential(x,y){
return cljs.core.boolean$(((cljs.core.sequential_QMARK_(y))?(((cljs.core.counted_QMARK_(x)) && (cljs.core.counted_QMARK_(y)) && (!((cljs.core.count(x) === cljs.core.count(y)))))?false:(function (){var xs = cljs.core.seq(x);
var ys = cljs.core.seq(y);
while(true){
if((xs == null)){
return (ys == null);
} else {
if((ys == null)){
return false;
} else {
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.first(xs),cljs.core.first(ys))){
var G__33822 = cljs.core.next(xs);
var G__33823 = cljs.core.next(ys);
xs = G__33822;
ys = G__33823;
continue;
} else {
return false;

}
}
}
break;
}
})()):null));
});
cljs.core.hash_coll = (function hash_coll(coll){
if(cljs.core.seq(coll)){
var res = cljs.core.hash(cljs.core.first(coll));
var s = cljs.core.next(coll);
while(true){
if((s == null)){
return res;
} else {
var G__33824 = cljs.core.hash_combine(res,cljs.core.hash(cljs.core.first(s)));
var G__33825 = cljs.core.next(s);
res = G__33824;
s = G__33825;
continue;
}
break;
}
} else {
return (0);
}
});

cljs.core.hash_imap = (function hash_imap(m){
var h = (0);
var s = cljs.core.seq(m);
while(true){
if(s){
var e = cljs.core.first(s);
var G__33830 = ((h + (cljs.core.hash((function (){var G__33828 = e;
return (cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__33828) : cljs.core.key.call(null,G__33828));
})()) ^ cljs.core.hash((function (){var G__33829 = e;
return (cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(G__33829) : cljs.core.val.call(null,G__33829));
})()))) % (4503599627370496));
var G__33831 = cljs.core.next(s);
h = G__33830;
s = G__33831;
continue;
} else {
return h;
}
break;
}
});
cljs.core.hash_iset = (function hash_iset(s){
var h = (0);
var s__$1 = cljs.core.seq(s);
while(true){
if(s__$1){
var e = cljs.core.first(s__$1);
var G__33832 = ((h + cljs.core.hash(e)) % (4503599627370496));
var G__33833 = cljs.core.next(s__$1);
h = G__33832;
s__$1 = G__33833;
continue;
} else {
return h;
}
break;
}
});


/**
* Takes a JavaScript object and a map of names to functions and
* attaches said functions as methods on the object.  Any references to
* JavaScript's implicit this (via the this-as macro) will resolve to the
* object that the function is attached.
*/
cljs.core.extend_object_BANG_ = (function extend_object_BANG_(obj,fn_map){
var seq__33844_33854 = cljs.core.seq(fn_map);
var chunk__33845_33855 = null;
var count__33846_33856 = (0);
var i__33847_33857 = (0);
while(true){
if((i__33847_33857 < count__33846_33856)){
var vec__33848_33858 = chunk__33845_33855.cljs$core$IIndexed$_nth$arity$2(null,i__33847_33857);
var key_name_33859 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__33848_33858,(0),null);
var f_33860 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__33848_33858,(1),null);
var str_name_33861 = (function (){var G__33849 = key_name_33859;
return (cljs.core.name.cljs$core$IFn$_invoke$arity$1 ? cljs.core.name.cljs$core$IFn$_invoke$arity$1(G__33849) : cljs.core.name.call(null,G__33849));
})();
(obj[str_name_33861] = f_33860);

var G__33862 = seq__33844_33854;
var G__33863 = chunk__33845_33855;
var G__33864 = count__33846_33856;
var G__33865 = (i__33847_33857 + (1));
seq__33844_33854 = G__33862;
chunk__33845_33855 = G__33863;
count__33846_33856 = G__33864;
i__33847_33857 = G__33865;
continue;
} else {
var temp__4126__auto___33866 = cljs.core.seq(seq__33844_33854);
if(temp__4126__auto___33866){
var seq__33844_33867__$1 = temp__4126__auto___33866;
if(cljs.core.chunked_seq_QMARK_(seq__33844_33867__$1)){
var c__25061__auto___33868 = (function (){var G__33850 = seq__33844_33867__$1;
return (cljs.core.chunk_first.cljs$core$IFn$_invoke$arity$1 ? cljs.core.chunk_first.cljs$core$IFn$_invoke$arity$1(G__33850) : cljs.core.chunk_first.call(null,G__33850));
})();
var G__33869 = (function (){var G__33851 = seq__33844_33867__$1;
return (cljs.core.chunk_rest.cljs$core$IFn$_invoke$arity$1 ? cljs.core.chunk_rest.cljs$core$IFn$_invoke$arity$1(G__33851) : cljs.core.chunk_rest.call(null,G__33851));
})();
var G__33870 = c__25061__auto___33868;
var G__33871 = cljs.core.count(c__25061__auto___33868);
var G__33872 = (0);
seq__33844_33854 = G__33869;
chunk__33845_33855 = G__33870;
count__33846_33856 = G__33871;
i__33847_33857 = G__33872;
continue;
} else {
var vec__33852_33873 = cljs.core.first(seq__33844_33867__$1);
var key_name_33874 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__33852_33873,(0),null);
var f_33875 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__33852_33873,(1),null);
var str_name_33876 = (function (){var G__33853 = key_name_33874;
return (cljs.core.name.cljs$core$IFn$_invoke$arity$1 ? cljs.core.name.cljs$core$IFn$_invoke$arity$1(G__33853) : cljs.core.name.call(null,G__33853));
})();
(obj[str_name_33876] = f_33875);

var G__33877 = cljs.core.next(seq__33844_33867__$1);
var G__33878 = null;
var G__33879 = (0);
var G__33880 = (0);
seq__33844_33854 = G__33877;
chunk__33845_33855 = G__33878;
count__33846_33856 = G__33879;
i__33847_33857 = G__33880;
continue;
}
} else {
}
}
break;
}

return obj;
});

/**
* @constructor
*/
cljs.core.List = (function (meta,first,rest,count,__hash){
this.meta = meta;
this.first = first;
this.rest = rest;
this.count = count;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 65937646;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.List.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.List.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.List.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.List.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.List(self__.meta,self__.first,self__.rest,self__.count,self__.__hash));
});

cljs.core.List.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.count === (1))){
return null;
} else {
return self__.rest;
}
});

cljs.core.List.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.count;
});

cljs.core.List.prototype.cljs$core$IStack$_peek$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.first;
});

cljs.core.List.prototype.cljs$core$IStack$_pop$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._rest(coll__$1);
});

cljs.core.List.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__24695__auto__ = self__.__hash;
if(!((h__24695__auto__ == null))){
return h__24695__auto__;
} else {
var h__24695__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__24695__auto____$1;

return h__24695__auto____$1;
}
});

cljs.core.List.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.List.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.List.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.List.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.List.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.first;
});

cljs.core.List.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.count === (1))){
return cljs.core.List.EMPTY;
} else {
return self__.rest;
}
});

cljs.core.List.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.List.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.List(meta__$1,self__.first,self__.rest,self__.count,self__.__hash));
});

cljs.core.List.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.List(self__.meta,o,coll__$1,(self__.count + (1)),null));
});

cljs.core.List.cljs$lang$type = true;

cljs.core.List.cljs$lang$ctorStr = "cljs.core/List";

cljs.core.List.cljs$lang$ctorPrWriter = (function (this__24861__auto__,writer__24862__auto__,opt__24863__auto__){
return cljs.core._write(writer__24862__auto__,"cljs.core/List");
});

cljs.core.__GT_List = (function __GT_List(meta,first,rest,count,__hash){
return (new cljs.core.List(meta,first,rest,count,__hash));
});

(cljs.core.List.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__25252__auto__ = this;
return cljs.core.es6_iterator(this__25252__auto__);
}));

/**
* @constructor
*/
cljs.core.EmptyList = (function (meta){
this.meta = meta;
this.cljs$lang$protocol_mask$partition0$ = 65937614;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.EmptyList.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.EmptyList.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.EmptyList.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.EmptyList.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.EmptyList(self__.meta));
});

cljs.core.EmptyList.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return null;
});

cljs.core.EmptyList.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (0);
});

cljs.core.EmptyList.prototype.cljs$core$IStack$_peek$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return null;
});

cljs.core.EmptyList.prototype.cljs$core$IStack$_pop$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
throw (new Error("Can't pop empty list"));
});

cljs.core.EmptyList.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (0);
});

cljs.core.EmptyList.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.EmptyList.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.EmptyList.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.EmptyList.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.EmptyList.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return null;
});

cljs.core.EmptyList.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.List.EMPTY;
});

cljs.core.EmptyList.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return null;
});

cljs.core.EmptyList.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.EmptyList(meta__$1));
});

cljs.core.EmptyList.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.List(self__.meta,o,null,(1),null));
});

cljs.core.EmptyList.cljs$lang$type = true;

cljs.core.EmptyList.cljs$lang$ctorStr = "cljs.core/EmptyList";

cljs.core.EmptyList.cljs$lang$ctorPrWriter = (function (this__24861__auto__,writer__24862__auto__,opt__24863__auto__){
return cljs.core._write(writer__24862__auto__,"cljs.core/EmptyList");
});

cljs.core.__GT_EmptyList = (function __GT_EmptyList(meta){
return (new cljs.core.EmptyList(meta));
});

cljs.core.List.EMPTY = (new cljs.core.EmptyList(null));
(cljs.core.EmptyList.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__25252__auto__ = this;
return cljs.core.es6_iterator(this__25252__auto__);
}));
cljs.core.reversible_QMARK_ = (function reversible_QMARK_(coll){
var G__33882 = coll;
if(G__33882){
var bit__24955__auto__ = (G__33882.cljs$lang$protocol_mask$partition0$ & (134217728));
if((bit__24955__auto__) || (G__33882.cljs$core$IReversible$)){
return true;
} else {
if((!G__33882.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IReversible,G__33882);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IReversible,G__33882);
}
});
cljs.core.rseq = (function rseq(coll){
return cljs.core._rseq(coll);
});
/**
* Returns a seq of the items in coll in reverse order. Not lazy.
*/
cljs.core.reverse = (function reverse(coll){
if(cljs.core.reversible_QMARK_(coll)){
return cljs.core.rseq(coll);
} else {
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.conj,cljs.core.List.EMPTY,coll);
}
});
/**
* @param {...*} var_args
*/
cljs.core.list = (function() { 
var list__delegate = function (xs){
var arr = ((((xs instanceof cljs.core.IndexedSeq)) && ((xs.i === (0))))?xs.arr:(function (){var arr = [];
var xs__$1 = xs;
while(true){
if(!((xs__$1 == null))){
arr.push(xs__$1.cljs$core$ISeq$_first$arity$1(null));

var G__33883 = xs__$1.cljs$core$INext$_next$arity$1(null);
xs__$1 = G__33883;
continue;
} else {
return arr;
}
break;
}
})());
var i = arr.length;
var r = cljs.core.List.EMPTY;
while(true){
if((i > (0))){
var G__33884 = (i - (1));
var G__33885 = r.cljs$core$ICollection$_conj$arity$2(null,(arr[(i - (1))]));
i = G__33884;
r = G__33885;
continue;
} else {
return r;
}
break;
}
};
var list = function (var_args){
var xs = null;
if (arguments.length > 0) {
var G__33886__i = 0, G__33886__a = new Array(arguments.length -  0);
while (G__33886__i < G__33886__a.length) {G__33886__a[G__33886__i] = arguments[G__33886__i + 0]; ++G__33886__i;}
  xs = new cljs.core.IndexedSeq(G__33886__a,0);
} 
return list__delegate.call(this,xs);};
list.cljs$lang$maxFixedArity = 0;
list.cljs$lang$applyTo = (function (arglist__33887){
var xs = cljs.core.seq(arglist__33887);
return list__delegate(xs);
});
list.cljs$core$IFn$_invoke$arity$variadic = list__delegate;
return list;
})()
;

/**
* @constructor
*/
cljs.core.Cons = (function (meta,first,rest,__hash){
this.meta = meta;
this.first = first;
this.rest = rest;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 65929452;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.Cons.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.Cons.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.Cons.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.Cons.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.Cons(self__.meta,self__.first,self__.rest,self__.__hash));
});

cljs.core.Cons.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.rest == null)){
return null;
} else {
return cljs.core.seq(self__.rest);
}
});

cljs.core.Cons.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__24695__auto__ = self__.__hash;
if(!((h__24695__auto__ == null))){
return h__24695__auto__;
} else {
var h__24695__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__24695__auto____$1;

return h__24695__auto____$1;
}
});

cljs.core.Cons.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.Cons.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.Cons.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.Cons.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.Cons.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.first;
});

cljs.core.Cons.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.rest == null)){
return cljs.core.List.EMPTY;
} else {
return self__.rest;
}
});

cljs.core.Cons.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.Cons.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.Cons(meta__$1,self__.first,self__.rest,self__.__hash));
});

cljs.core.Cons.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.Cons(null,o,coll__$1,self__.__hash));
});

cljs.core.Cons.cljs$lang$type = true;

cljs.core.Cons.cljs$lang$ctorStr = "cljs.core/Cons";

cljs.core.Cons.cljs$lang$ctorPrWriter = (function (this__24861__auto__,writer__24862__auto__,opt__24863__auto__){
return cljs.core._write(writer__24862__auto__,"cljs.core/Cons");
});

cljs.core.__GT_Cons = (function __GT_Cons(meta,first,rest,__hash){
return (new cljs.core.Cons(meta,first,rest,__hash));
});

(cljs.core.Cons.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__25252__auto__ = this;
return cljs.core.es6_iterator(this__25252__auto__);
}));
/**
* Returns a new seq where x is the first element and seq is the rest.
*/
cljs.core.cons = (function cons(x,coll){
if((function (){var or__24274__auto__ = (coll == null);
if(or__24274__auto__){
return or__24274__auto__;
} else {
var G__33891 = coll;
if(G__33891){
var bit__24948__auto__ = (G__33891.cljs$lang$protocol_mask$partition0$ & (64));
if((bit__24948__auto__) || (G__33891.cljs$core$ISeq$)){
return true;
} else {
return false;
}
} else {
return false;
}
}
})()){
return (new cljs.core.Cons(null,x,coll,null));
} else {
return (new cljs.core.Cons(null,x,cljs.core.seq(coll),null));
}
});
cljs.core.list_QMARK_ = (function list_QMARK_(x){
var G__33893 = x;
if(G__33893){
var bit__24955__auto__ = (G__33893.cljs$lang$protocol_mask$partition0$ & (33554432));
if((bit__24955__auto__) || (G__33893.cljs$core$IList$)){
return true;
} else {
if((!G__33893.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IList,G__33893);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IList,G__33893);
}
});
cljs.core.hash_keyword = (function hash_keyword(k){
return ((cljs.core.hash_symbol(k) + (2654435769)) | (0));
});
cljs.core.compare_keywords = (function compare_keywords(a,b){
if((a.fqn === b.fqn)){
return (0);
} else {
if(cljs.core.truth_((function (){var and__24262__auto__ = cljs.core.not(a.ns);
if(and__24262__auto__){
return b.ns;
} else {
return and__24262__auto__;
}
})())){
return (-1);
} else {
if(cljs.core.truth_(a.ns)){
if(cljs.core.not(b.ns)){
return (1);
} else {
var nsc = (function (){var G__33900 = a.ns;
var G__33901 = b.ns;
return goog.array.defaultCompare(G__33900,G__33901);
})();
if(((0) === nsc)){
var G__33902 = a.name;
var G__33903 = b.name;
return goog.array.defaultCompare(G__33902,G__33903);
} else {
return nsc;
}
}
} else {
var G__33904 = a.name;
var G__33905 = b.name;
return goog.array.defaultCompare(G__33904,G__33905);

}
}
}
});

/**
* @constructor
*/
cljs.core.Keyword = (function (ns,name,fqn,_hash){
this.ns = ns;
this.name = name;
this.fqn = fqn;
this._hash = _hash;
this.cljs$lang$protocol_mask$partition0$ = 2153775105;
this.cljs$lang$protocol_mask$partition1$ = 4096;
})
cljs.core.Keyword.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (o,writer,_){
var self__ = this;
var o__$1 = this;
return cljs.core._write(writer,[cljs.core.str(":"),cljs.core.str(self__.fqn)].join(''));
});

cljs.core.Keyword.prototype.cljs$core$INamed$_name$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.name;
});

cljs.core.Keyword.prototype.cljs$core$INamed$_namespace$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.ns;
});

cljs.core.Keyword.prototype.cljs$core$IHash$_hash$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
var h__24695__auto__ = self__._hash;
if(!((h__24695__auto__ == null))){
return h__24695__auto__;
} else {
var h__24695__auto____$1 = cljs.core.hash_keyword(this$__$1);
self__._hash = h__24695__auto____$1;

return h__24695__auto____$1;
}
});

cljs.core.Keyword.prototype.call = (function() {
var G__33907 = null;
var G__33907__2 = (function (self__,coll){
var self__ = this;
var self____$1 = this;
var kw = self____$1;
return cljs.core.get.cljs$core$IFn$_invoke$arity$2(coll,kw);
});
var G__33907__3 = (function (self__,coll,not_found){
var self__ = this;
var self____$1 = this;
var kw = self____$1;
return cljs.core.get.cljs$core$IFn$_invoke$arity$3(coll,kw,not_found);
});
G__33907 = function(self__,coll,not_found){
switch(arguments.length){
case 2:
return G__33907__2.call(this,self__,coll);
case 3:
return G__33907__3.call(this,self__,coll,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__33907.cljs$core$IFn$_invoke$arity$2 = G__33907__2;
G__33907.cljs$core$IFn$_invoke$arity$3 = G__33907__3;
return G__33907;
})()
;

cljs.core.Keyword.prototype.apply = (function (self__,args33906){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args33906)));
});

cljs.core.Keyword.prototype.cljs$core$IFn$_invoke$arity$1 = (function (coll){
var self__ = this;
var kw = this;
return cljs.core.get.cljs$core$IFn$_invoke$arity$2(coll,kw);
});

cljs.core.Keyword.prototype.cljs$core$IFn$_invoke$arity$2 = (function (coll,not_found){
var self__ = this;
var kw = this;
return cljs.core.get.cljs$core$IFn$_invoke$arity$3(coll,kw,not_found);
});

cljs.core.Keyword.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (_,other){
var self__ = this;
var ___$1 = this;
if((other instanceof cljs.core.Keyword)){
return (self__.fqn === other.fqn);
} else {
return false;
}
});

cljs.core.Keyword.prototype.toString = (function (){
var self__ = this;
var _ = this;
return [cljs.core.str(":"),cljs.core.str(self__.fqn)].join('');
});

cljs.core.Keyword.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.Keyword.cljs$lang$type = true;

cljs.core.Keyword.cljs$lang$ctorStr = "cljs.core/Keyword";

cljs.core.Keyword.cljs$lang$ctorPrWriter = (function (this__24861__auto__,writer__24862__auto__,opt__24863__auto__){
return cljs.core._write(writer__24862__auto__,"cljs.core/Keyword");
});

cljs.core.__GT_Keyword = (function __GT_Keyword(ns,name,fqn,_hash){
return (new cljs.core.Keyword(ns,name,fqn,_hash));
});

cljs.core.keyword_QMARK_ = (function keyword_QMARK_(x){
return (x instanceof cljs.core.Keyword);
});
cljs.core.keyword_identical_QMARK_ = (function keyword_identical_QMARK_(x,y){
if((x === y)){
return true;
} else {
if(((x instanceof cljs.core.Keyword)) && ((y instanceof cljs.core.Keyword))){
return (x.fqn === y.fqn);
} else {
return false;
}
}
});
/**
* Returns the namespace String of a symbol or keyword, or nil if not present.
*/
cljs.core.namespace = (function namespace(x){
if((function (){var G__33909 = x;
if(G__33909){
var bit__24948__auto__ = (G__33909.cljs$lang$protocol_mask$partition1$ & (4096));
if((bit__24948__auto__) || (G__33909.cljs$core$INamed$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return x.cljs$core$INamed$_namespace$arity$1(null);
} else {
throw (new Error([cljs.core.str("Doesn't support namespace: "),cljs.core.str(x)].join('')));
}
});
/**
* Returns a Keyword with the given namespace and name.  Do not use :
* in the keyword strings, it will be added automatically.
*/
cljs.core.keyword = (function() {
var keyword = null;
var keyword__1 = (function (name){
if((name instanceof cljs.core.Keyword)){
return name;
} else {
if((name instanceof cljs.core.Symbol)){
return (new cljs.core.Keyword(cljs.core.namespace(name),(function (){var G__33911 = name;
return (cljs.core.name.cljs$core$IFn$_invoke$arity$1 ? cljs.core.name.cljs$core$IFn$_invoke$arity$1(G__33911) : cljs.core.name.call(null,G__33911));
})(),name.str,null));
} else {
if(typeof name === 'string'){
var parts = name.split("/");
if((parts.length === (2))){
return (new cljs.core.Keyword((parts[(0)]),(parts[(1)]),name,null));
} else {
return (new cljs.core.Keyword(null,(parts[(0)]),name,null));
}
} else {
return null;
}
}
}
});
var keyword__2 = (function (ns,name){
return (new cljs.core.Keyword(ns,name,[cljs.core.str((cljs.core.truth_(ns)?[cljs.core.str(ns),cljs.core.str("/")].join(''):null)),cljs.core.str(name)].join(''),null));
});
keyword = function(ns,name){
switch(arguments.length){
case 1:
return keyword__1.call(this,ns);
case 2:
return keyword__2.call(this,ns,name);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
keyword.cljs$core$IFn$_invoke$arity$1 = keyword__1;
keyword.cljs$core$IFn$_invoke$arity$2 = keyword__2;
return keyword;
})()
;

/**
* @constructor
*/
cljs.core.LazySeq = (function (meta,fn,s,__hash){
this.meta = meta;
this.fn = fn;
this.s = s;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32374988;
})
cljs.core.LazySeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.LazySeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.LazySeq.prototype.sval = (function (){
var self__ = this;
var coll = this;
if((self__.fn == null)){
return self__.s;
} else {
self__.s = (function (){return (self__.fn.cljs$core$IFn$_invoke$arity$0 ? self__.fn.cljs$core$IFn$_invoke$arity$0() : self__.fn.call(null));
})();

self__.fn = null;

return self__.s;
}
});

cljs.core.LazySeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.LazySeq.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
cljs.core._seq(coll__$1);

if((self__.s == null)){
return null;
} else {
return cljs.core.next(self__.s);
}
});

cljs.core.LazySeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__24695__auto__ = self__.__hash;
if(!((h__24695__auto__ == null))){
return h__24695__auto__;
} else {
var h__24695__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__24695__auto____$1;

return h__24695__auto____$1;
}
});

cljs.core.LazySeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.LazySeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.LazySeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.LazySeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.LazySeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
cljs.core._seq(coll__$1);

if((self__.s == null)){
return null;
} else {
return cljs.core.first(self__.s);
}
});

cljs.core.LazySeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
cljs.core._seq(coll__$1);

if(!((self__.s == null))){
return cljs.core.rest(self__.s);
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.LazySeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
coll__$1.sval();

if((self__.s == null)){
return null;
} else {
var ls = self__.s;
while(true){
if((ls instanceof cljs.core.LazySeq)){
var G__33912 = ls.sval();
ls = G__33912;
continue;
} else {
self__.s = ls;

return cljs.core.seq(self__.s);
}
break;
}
}
});

cljs.core.LazySeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.LazySeq(meta__$1,self__.fn,self__.s,self__.__hash));
});

cljs.core.LazySeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.LazySeq.cljs$lang$type = true;

cljs.core.LazySeq.cljs$lang$ctorStr = "cljs.core/LazySeq";

cljs.core.LazySeq.cljs$lang$ctorPrWriter = (function (this__24861__auto__,writer__24862__auto__,opt__24863__auto__){
return cljs.core._write(writer__24862__auto__,"cljs.core/LazySeq");
});

cljs.core.__GT_LazySeq = (function __GT_LazySeq(meta,fn,s,__hash){
return (new cljs.core.LazySeq(meta,fn,s,__hash));
});

(cljs.core.LazySeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__25252__auto__ = this;
return cljs.core.es6_iterator(this__25252__auto__);
}));

/**
* @constructor
*/
cljs.core.ChunkBuffer = (function (buf,end){
this.buf = buf;
this.end = end;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 2;
})
cljs.core.ChunkBuffer.prototype.cljs$core$ICounted$_count$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.end;
});

cljs.core.ChunkBuffer.prototype.add = (function (o){
var self__ = this;
var _ = this;
(self__.buf[self__.end] = o);

return self__.end = (self__.end + (1));
});

cljs.core.ChunkBuffer.prototype.chunk = (function (o){
var self__ = this;
var _ = this;
var ret = (new cljs.core.ArrayChunk(self__.buf,(0),self__.end));
self__.buf = null;

return ret;
});

cljs.core.ChunkBuffer.cljs$lang$type = true;

cljs.core.ChunkBuffer.cljs$lang$ctorStr = "cljs.core/ChunkBuffer";

cljs.core.ChunkBuffer.cljs$lang$ctorPrWriter = (function (this__24861__auto__,writer__24862__auto__,opt__24863__auto__){
return cljs.core._write(writer__24862__auto__,"cljs.core/ChunkBuffer");
});

cljs.core.__GT_ChunkBuffer = (function __GT_ChunkBuffer(buf,end){
return (new cljs.core.ChunkBuffer(buf,end));
});

cljs.core.chunk_buffer = (function chunk_buffer(capacity){
return (new cljs.core.ChunkBuffer((new Array(capacity)),(0)));
});

/**
* @constructor
*/
cljs.core.ArrayChunk = (function (arr,off,end){
this.arr = arr;
this.off = off;
this.end = end;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 524306;
})
cljs.core.ArrayChunk.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4(self__.arr,f,(self__.arr[self__.off]),(self__.off + (1)));
});

cljs.core.ArrayChunk.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4(self__.arr,f,start,self__.off);
});

cljs.core.ArrayChunk.prototype.cljs$core$IChunk$ = true;

cljs.core.ArrayChunk.prototype.cljs$core$IChunk$_drop_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.off === self__.end)){
throw (new Error("-drop-first of empty chunk"));
} else {
return (new cljs.core.ArrayChunk(self__.arr,(self__.off + (1)),self__.end));
}
});

cljs.core.ArrayChunk.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (coll,i){
var self__ = this;
var coll__$1 = this;
return (self__.arr[(self__.off + i)]);
});

cljs.core.ArrayChunk.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (coll,i,not_found){
var self__ = this;
var coll__$1 = this;
if(((i >= (0))) && ((i < (self__.end - self__.off)))){
return (self__.arr[(self__.off + i)]);
} else {
return not_found;
}
});

cljs.core.ArrayChunk.prototype.cljs$core$ICounted$_count$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (self__.end - self__.off);
});

cljs.core.ArrayChunk.cljs$lang$type = true;

cljs.core.ArrayChunk.cljs$lang$ctorStr = "cljs.core/ArrayChunk";

cljs.core.ArrayChunk.cljs$lang$ctorPrWriter = (function (this__24861__auto__,writer__24862__auto__,opt__24863__auto__){
return cljs.core._write(writer__24862__auto__,"cljs.core/ArrayChunk");
});

cljs.core.__GT_ArrayChunk = (function __GT_ArrayChunk(arr,off,end){
return (new cljs.core.ArrayChunk(arr,off,end));
});

cljs.core.array_chunk = (function() {
var array_chunk = null;
var array_chunk__1 = (function (arr){
return (new cljs.core.ArrayChunk(arr,(0),arr.length));
});
var array_chunk__2 = (function (arr,off){
return (new cljs.core.ArrayChunk(arr,off,arr.length));
});
var array_chunk__3 = (function (arr,off,end){
return (new cljs.core.ArrayChunk(arr,off,end));
});
array_chunk = function(arr,off,end){
switch(arguments.length){
case 1:
return array_chunk__1.call(this,arr);
case 2:
return array_chunk__2.call(this,arr,off);
case 3:
return array_chunk__3.call(this,arr,off,end);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
array_chunk.cljs$core$IFn$_invoke$arity$1 = array_chunk__1;
array_chunk.cljs$core$IFn$_invoke$arity$2 = array_chunk__2;
array_chunk.cljs$core$IFn$_invoke$arity$3 = array_chunk__3;
return array_chunk;
})()
;

/**
* @constructor
*/
cljs.core.ChunkedCons = (function (chunk,more,meta,__hash){
this.chunk = chunk;
this.more = more;
this.meta = meta;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 31850732;
this.cljs$lang$protocol_mask$partition1$ = 1536;
})
cljs.core.ChunkedCons.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.ChunkedCons.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.ChunkedCons.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.ChunkedCons.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((cljs.core._count(self__.chunk) > (1))){
return (new cljs.core.ChunkedCons(cljs.core._drop_first(self__.chunk),self__.more,self__.meta,null));
} else {
var more__$1 = cljs.core._seq(self__.more);
if((more__$1 == null)){
return null;
} else {
return more__$1;
}
}
});

cljs.core.ChunkedCons.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__24695__auto__ = self__.__hash;
if(!((h__24695__auto__ == null))){
return h__24695__auto__;
} else {
var h__24695__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__24695__auto____$1;

return h__24695__auto____$1;
}
});

cljs.core.ChunkedCons.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.ChunkedCons.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.ChunkedCons.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.chunk,(0));
});

cljs.core.ChunkedCons.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((cljs.core._count(self__.chunk) > (1))){
return (new cljs.core.ChunkedCons(cljs.core._drop_first(self__.chunk),self__.more,self__.meta,null));
} else {
if((self__.more == null)){
return cljs.core.List.EMPTY;
} else {
return self__.more;
}
}
});

cljs.core.ChunkedCons.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.ChunkedCons.prototype.cljs$core$IChunkedSeq$_chunked_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.chunk;
});

cljs.core.ChunkedCons.prototype.cljs$core$IChunkedSeq$_chunked_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.more == null)){
return cljs.core.List.EMPTY;
} else {
return self__.more;
}
});

cljs.core.ChunkedCons.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,m){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.ChunkedCons(self__.chunk,self__.more,m,self__.__hash));
});

cljs.core.ChunkedCons.prototype.cljs$core$ICollection$_conj$arity$2 = (function (this$,o){
var self__ = this;
var this$__$1 = this;
return cljs.core.cons(o,this$__$1);
});

cljs.core.ChunkedCons.prototype.cljs$core$IChunkedNext$_chunked_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.more == null)){
return null;
} else {
return self__.more;
}
});

cljs.core.ChunkedCons.cljs$lang$type = true;

cljs.core.ChunkedCons.cljs$lang$ctorStr = "cljs.core/ChunkedCons";

cljs.core.ChunkedCons.cljs$lang$ctorPrWriter = (function (this__24861__auto__,writer__24862__auto__,opt__24863__auto__){
return cljs.core._write(writer__24862__auto__,"cljs.core/ChunkedCons");
});

cljs.core.__GT_ChunkedCons = (function __GT_ChunkedCons(chunk,more,meta,__hash){
return (new cljs.core.ChunkedCons(chunk,more,meta,__hash));
});

(cljs.core.ChunkedCons.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__25252__auto__ = this;
return cljs.core.es6_iterator(this__25252__auto__);
}));
cljs.core.chunk_cons = (function chunk_cons(chunk,rest){
if((cljs.core._count(chunk) === (0))){
return rest;
} else {
return (new cljs.core.ChunkedCons(chunk,rest,null,null));
}
});
cljs.core.chunk_append = (function chunk_append(b,x){
return b.add(x);
});
cljs.core.chunk = (function chunk(b){
return b.chunk();
});
cljs.core.chunk_first = (function chunk_first(s){
return cljs.core._chunked_first(s);
});
cljs.core.chunk_rest = (function chunk_rest(s){
return cljs.core._chunked_rest(s);
});
cljs.core.chunk_next = (function chunk_next(s){
if((function (){var G__33914 = s;
if(G__33914){
var bit__24948__auto__ = (G__33914.cljs$lang$protocol_mask$partition1$ & (1024));
if((bit__24948__auto__) || (G__33914.cljs$core$IChunkedNext$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return cljs.core._chunked_next(s);
} else {
return cljs.core.seq(cljs.core._chunked_rest(s));
}
});
/**
* Naive impl of to-array as a start.
*/
cljs.core.to_array = (function to_array(s){
var ary = [];
var s__$1 = s;
while(true){
if(cljs.core.seq(s__$1)){
ary.push(cljs.core.first(s__$1));

var G__33915 = cljs.core.next(s__$1);
s__$1 = G__33915;
continue;
} else {
return ary;
}
break;
}
});
/**
* Returns a (potentially-ragged) 2-dimensional array
* containing the contents of coll.
*/
cljs.core.to_array_2d = (function to_array_2d(coll){
var ret = (new Array(cljs.core.count(coll)));
var i_33916 = (0);
var xs_33917 = cljs.core.seq(coll);
while(true){
if(xs_33917){
(ret[i_33916] = cljs.core.to_array(cljs.core.first(xs_33917)));

var G__33918 = (i_33916 + (1));
var G__33919 = cljs.core.next(xs_33917);
i_33916 = G__33918;
xs_33917 = G__33919;
continue;
} else {
}
break;
}

return ret;
});
cljs.core.int_array = (function() {
var int_array = null;
var int_array__1 = (function (size_or_seq){
if(typeof size_or_seq === 'number'){
return int_array.cljs$core$IFn$_invoke$arity$2(size_or_seq,null);
} else {
return cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(size_or_seq);
}
});
var int_array__2 = (function (size,init_val_or_seq){
var a = (new Array(size));
if(cljs.core.seq_QMARK_(init_val_or_seq)){
var s = cljs.core.seq(init_val_or_seq);
var i = (0);
var s__$1 = s;
while(true){
if((s__$1) && ((i < size))){
(a[i] = cljs.core.first(s__$1));

var G__33922 = (i + (1));
var G__33923 = cljs.core.next(s__$1);
i = G__33922;
s__$1 = G__33923;
continue;
} else {
return a;
}
break;
}
} else {
var n__25161__auto___33924 = size;
var i_33925 = (0);
while(true){
if((i_33925 < n__25161__auto___33924)){
(a[i_33925] = init_val_or_seq);

var G__33926 = (i_33925 + (1));
i_33925 = G__33926;
continue;
} else {
}
break;
}

return a;
}
});
int_array = function(size,init_val_or_seq){
switch(arguments.length){
case 1:
return int_array__1.call(this,size);
case 2:
return int_array__2.call(this,size,init_val_or_seq);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
int_array.cljs$core$IFn$_invoke$arity$1 = int_array__1;
int_array.cljs$core$IFn$_invoke$arity$2 = int_array__2;
return int_array;
})()
;
cljs.core.long_array = (function() {
var long_array = null;
var long_array__1 = (function (size_or_seq){
if(typeof size_or_seq === 'number'){
return long_array.cljs$core$IFn$_invoke$arity$2(size_or_seq,null);
} else {
return cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(size_or_seq);
}
});
var long_array__2 = (function (size,init_val_or_seq){
var a = (new Array(size));
if(cljs.core.seq_QMARK_(init_val_or_seq)){
var s = cljs.core.seq(init_val_or_seq);
var i = (0);
var s__$1 = s;
while(true){
if((s__$1) && ((i < size))){
(a[i] = cljs.core.first(s__$1));

var G__33929 = (i + (1));
var G__33930 = cljs.core.next(s__$1);
i = G__33929;
s__$1 = G__33930;
continue;
} else {
return a;
}
break;
}
} else {
var n__25161__auto___33931 = size;
var i_33932 = (0);
while(true){
if((i_33932 < n__25161__auto___33931)){
(a[i_33932] = init_val_or_seq);

var G__33933 = (i_33932 + (1));
i_33932 = G__33933;
continue;
} else {
}
break;
}

return a;
}
});
long_array = function(size,init_val_or_seq){
switch(arguments.length){
case 1:
return long_array__1.call(this,size);
case 2:
return long_array__2.call(this,size,init_val_or_seq);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
long_array.cljs$core$IFn$_invoke$arity$1 = long_array__1;
long_array.cljs$core$IFn$_invoke$arity$2 = long_array__2;
return long_array;
})()
;
cljs.core.double_array = (function() {
var double_array = null;
var double_array__1 = (function (size_or_seq){
if(typeof size_or_seq === 'number'){
return double_array.cljs$core$IFn$_invoke$arity$2(size_or_seq,null);
} else {
return cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(size_or_seq);
}
});
var double_array__2 = (function (size,init_val_or_seq){
var a = (new Array(size));
if(cljs.core.seq_QMARK_(init_val_or_seq)){
var s = cljs.core.seq(init_val_or_seq);
var i = (0);
var s__$1 = s;
while(true){
if((s__$1) && ((i < size))){
(a[i] = cljs.core.first(s__$1));

var G__33936 = (i + (1));
var G__33937 = cljs.core.next(s__$1);
i = G__33936;
s__$1 = G__33937;
continue;
} else {
return a;
}
break;
}
} else {
var n__25161__auto___33938 = size;
var i_33939 = (0);
while(true){
if((i_33939 < n__25161__auto___33938)){
(a[i_33939] = init_val_or_seq);

var G__33940 = (i_33939 + (1));
i_33939 = G__33940;
continue;
} else {
}
break;
}

return a;
}
});
double_array = function(size,init_val_or_seq){
switch(arguments.length){
case 1:
return double_array__1.call(this,size);
case 2:
return double_array__2.call(this,size,init_val_or_seq);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
double_array.cljs$core$IFn$_invoke$arity$1 = double_array__1;
double_array.cljs$core$IFn$_invoke$arity$2 = double_array__2;
return double_array;
})()
;
cljs.core.object_array = (function() {
var object_array = null;
var object_array__1 = (function (size_or_seq){
if(typeof size_or_seq === 'number'){
return object_array.cljs$core$IFn$_invoke$arity$2(size_or_seq,null);
} else {
return cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(size_or_seq);
}
});
var object_array__2 = (function (size,init_val_or_seq){
var a = (new Array(size));
if(cljs.core.seq_QMARK_(init_val_or_seq)){
var s = cljs.core.seq(init_val_or_seq);
var i = (0);
var s__$1 = s;
while(true){
if((s__$1) && ((i < size))){
(a[i] = cljs.core.first(s__$1));

var G__33943 = (i + (1));
var G__33944 = cljs.core.next(s__$1);
i = G__33943;
s__$1 = G__33944;
continue;
} else {
return a;
}
break;
}
} else {
var n__25161__auto___33945 = size;
var i_33946 = (0);
while(true){
if((i_33946 < n__25161__auto___33945)){
(a[i_33946] = init_val_or_seq);

var G__33947 = (i_33946 + (1));
i_33946 = G__33947;
continue;
} else {
}
break;
}

return a;
}
});
object_array = function(size,init_val_or_seq){
switch(arguments.length){
case 1:
return object_array__1.call(this,size);
case 2:
return object_array__2.call(this,size,init_val_or_seq);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
object_array.cljs$core$IFn$_invoke$arity$1 = object_array__1;
object_array.cljs$core$IFn$_invoke$arity$2 = object_array__2;
return object_array;
})()
;
cljs.core.bounded_count = (function bounded_count(s,n){
if(cljs.core.counted_QMARK_(s)){
return cljs.core.count(s);
} else {
var s__$1 = s;
var i = n;
var sum = (0);
while(true){
if(((i > (0))) && (cljs.core.seq(s__$1))){
var G__33948 = cljs.core.next(s__$1);
var G__33949 = (i - (1));
var G__33950 = (sum + (1));
s__$1 = G__33948;
i = G__33949;
sum = G__33950;
continue;
} else {
return sum;
}
break;
}
}
});
cljs.core.spread = (function spread(arglist){
if((arglist == null)){
return null;
} else {
if((cljs.core.next(arglist) == null)){
return cljs.core.seq(cljs.core.first(arglist));
} else {
return cljs.core.cons(cljs.core.first(arglist),spread(cljs.core.next(arglist)));

}
}
});
/**
* Returns a lazy seq representing the concatenation of the elements in the supplied colls.
* @param {...*} var_args
*/
cljs.core.concat = (function() {
var concat = null;
var concat__0 = (function (){
return (new cljs.core.LazySeq(null,(function (){
return null;
}),null,null));
});
var concat__1 = (function (x){
return (new cljs.core.LazySeq(null,(function (){
return x;
}),null,null));
});
var concat__2 = (function (x,y){
return (new cljs.core.LazySeq(null,(function (){
var s = cljs.core.seq(x);
if(s){
if(cljs.core.chunked_seq_QMARK_(s)){
return cljs.core.chunk_cons(cljs.core.chunk_first(s),concat.cljs$core$IFn$_invoke$arity$2(cljs.core.chunk_rest(s),y));
} else {
return cljs.core.cons(cljs.core.first(s),concat.cljs$core$IFn$_invoke$arity$2(cljs.core.rest(s),y));
}
} else {
return y;
}
}),null,null));
});
var concat__3 = (function() { 
var G__33970__delegate = function (x,y,zs){
var cat = (function cat(xys,zs__$1){
return (new cljs.core.LazySeq(null,(function (){
var xys__$1 = cljs.core.seq(xys);
if(xys__$1){
if(cljs.core.chunked_seq_QMARK_(xys__$1)){
return cljs.core.chunk_cons(cljs.core.chunk_first(xys__$1),cat(cljs.core.chunk_rest(xys__$1),zs__$1));
} else {
return cljs.core.cons(cljs.core.first(xys__$1),cat(cljs.core.rest(xys__$1),zs__$1));
}
} else {
if(cljs.core.truth_(zs__$1)){
return cat(cljs.core.first(zs__$1),cljs.core.next(zs__$1));
} else {
return null;
}
}
}),null,null));
});
return cat(concat.cljs$core$IFn$_invoke$arity$2(x,y),zs);
};
var G__33970 = function (x,y,var_args){
var zs = null;
if (arguments.length > 2) {
var G__33971__i = 0, G__33971__a = new Array(arguments.length -  2);
while (G__33971__i < G__33971__a.length) {G__33971__a[G__33971__i] = arguments[G__33971__i + 2]; ++G__33971__i;}
  zs = new cljs.core.IndexedSeq(G__33971__a,0);
} 
return G__33970__delegate.call(this,x,y,zs);};
G__33970.cljs$lang$maxFixedArity = 2;
G__33970.cljs$lang$applyTo = (function (arglist__33972){
var x = cljs.core.first(arglist__33972);
arglist__33972 = cljs.core.next(arglist__33972);
var y = cljs.core.first(arglist__33972);
var zs = cljs.core.rest(arglist__33972);
return G__33970__delegate(x,y,zs);
});
G__33970.cljs$core$IFn$_invoke$arity$variadic = G__33970__delegate;
return G__33970;
})()
;
concat = function(x,y,var_args){
var zs = var_args;
switch(arguments.length){
case 0:
return concat__0.call(this);
case 1:
return concat__1.call(this,x);
case 2:
return concat__2.call(this,x,y);
default:
var G__33973 = null;
if (arguments.length > 2) {
var G__33974__i = 0, G__33974__a = new Array(arguments.length -  2);
while (G__33974__i < G__33974__a.length) {G__33974__a[G__33974__i] = arguments[G__33974__i + 2]; ++G__33974__i;}
G__33973 = new cljs.core.IndexedSeq(G__33974__a,0);
}
return concat__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__33973);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
concat.cljs$lang$maxFixedArity = 2;
concat.cljs$lang$applyTo = concat__3.cljs$lang$applyTo;
concat.cljs$core$IFn$_invoke$arity$0 = concat__0;
concat.cljs$core$IFn$_invoke$arity$1 = concat__1;
concat.cljs$core$IFn$_invoke$arity$2 = concat__2;
concat.cljs$core$IFn$_invoke$arity$variadic = concat__3.cljs$core$IFn$_invoke$arity$variadic;
return concat;
})()
;
/**
* Creates a new list containing the items prepended to the rest, the
* last of which will be treated as a sequence.
* @param {...*} var_args
*/
cljs.core.list_STAR_ = (function() {
var list_STAR_ = null;
var list_STAR___1 = (function (args){
return cljs.core.seq(args);
});
var list_STAR___2 = (function (a,args){
return cljs.core.cons(a,args);
});
var list_STAR___3 = (function (a,b,args){
return cljs.core.cons(a,cljs.core.cons(b,args));
});
var list_STAR___4 = (function (a,b,c,args){
return cljs.core.cons(a,cljs.core.cons(b,cljs.core.cons(c,args)));
});
var list_STAR___5 = (function() { 
var G__33975__delegate = function (a,b,c,d,more){
return cljs.core.cons(a,cljs.core.cons(b,cljs.core.cons(c,cljs.core.cons(d,cljs.core.spread(more)))));
};
var G__33975 = function (a,b,c,d,var_args){
var more = null;
if (arguments.length > 4) {
var G__33976__i = 0, G__33976__a = new Array(arguments.length -  4);
while (G__33976__i < G__33976__a.length) {G__33976__a[G__33976__i] = arguments[G__33976__i + 4]; ++G__33976__i;}
  more = new cljs.core.IndexedSeq(G__33976__a,0);
} 
return G__33975__delegate.call(this,a,b,c,d,more);};
G__33975.cljs$lang$maxFixedArity = 4;
G__33975.cljs$lang$applyTo = (function (arglist__33977){
var a = cljs.core.first(arglist__33977);
arglist__33977 = cljs.core.next(arglist__33977);
var b = cljs.core.first(arglist__33977);
arglist__33977 = cljs.core.next(arglist__33977);
var c = cljs.core.first(arglist__33977);
arglist__33977 = cljs.core.next(arglist__33977);
var d = cljs.core.first(arglist__33977);
var more = cljs.core.rest(arglist__33977);
return G__33975__delegate(a,b,c,d,more);
});
G__33975.cljs$core$IFn$_invoke$arity$variadic = G__33975__delegate;
return G__33975;
})()
;
list_STAR_ = function(a,b,c,d,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return list_STAR___1.call(this,a);
case 2:
return list_STAR___2.call(this,a,b);
case 3:
return list_STAR___3.call(this,a,b,c);
case 4:
return list_STAR___4.call(this,a,b,c,d);
default:
var G__33978 = null;
if (arguments.length > 4) {
var G__33979__i = 0, G__33979__a = new Array(arguments.length -  4);
while (G__33979__i < G__33979__a.length) {G__33979__a[G__33979__i] = arguments[G__33979__i + 4]; ++G__33979__i;}
G__33978 = new cljs.core.IndexedSeq(G__33979__a,0);
}
return list_STAR___5.cljs$core$IFn$_invoke$arity$variadic(a,b,c,d, G__33978);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
list_STAR_.cljs$lang$maxFixedArity = 4;
list_STAR_.cljs$lang$applyTo = list_STAR___5.cljs$lang$applyTo;
list_STAR_.cljs$core$IFn$_invoke$arity$1 = list_STAR___1;
list_STAR_.cljs$core$IFn$_invoke$arity$2 = list_STAR___2;
list_STAR_.cljs$core$IFn$_invoke$arity$3 = list_STAR___3;
list_STAR_.cljs$core$IFn$_invoke$arity$4 = list_STAR___4;
list_STAR_.cljs$core$IFn$_invoke$arity$variadic = list_STAR___5.cljs$core$IFn$_invoke$arity$variadic;
return list_STAR_;
})()
;
/**
* Returns a new, transient version of the collection, in constant time.
*/
cljs.core.transient$ = (function transient$(coll){
return cljs.core._as_transient(coll);
});
/**
* Returns a new, persistent version of the transient collection, in
* constant time. The transient collection cannot be used after this
* call, any such use will throw an exception.
*/
cljs.core.persistent_BANG_ = (function persistent_BANG_(tcoll){
return cljs.core._persistent_BANG_(tcoll);
});
/**
* Adds x to the transient collection, and return coll. The 'addition'
* may happen at different 'places' depending on the concrete type.
* @param {...*} var_args
*/
cljs.core.conj_BANG_ = (function() {
var conj_BANG_ = null;
var conj_BANG___0 = (function (){
return cljs.core.transient$(cljs.core.PersistentVector.EMPTY);
});
var conj_BANG___1 = (function (coll){
return coll;
});
var conj_BANG___2 = (function (tcoll,val){
return cljs.core._conj_BANG_(tcoll,val);
});
var conj_BANG___3 = (function() { 
var G__33980__delegate = function (tcoll,val,vals){
while(true){
var ntcoll = cljs.core._conj_BANG_(tcoll,val);
if(cljs.core.truth_(vals)){
var G__33981 = ntcoll;
var G__33982 = cljs.core.first(vals);
var G__33983 = cljs.core.next(vals);
tcoll = G__33981;
val = G__33982;
vals = G__33983;
continue;
} else {
return ntcoll;
}
break;
}
};
var G__33980 = function (tcoll,val,var_args){
var vals = null;
if (arguments.length > 2) {
var G__33984__i = 0, G__33984__a = new Array(arguments.length -  2);
while (G__33984__i < G__33984__a.length) {G__33984__a[G__33984__i] = arguments[G__33984__i + 2]; ++G__33984__i;}
  vals = new cljs.core.IndexedSeq(G__33984__a,0);
} 
return G__33980__delegate.call(this,tcoll,val,vals);};
G__33980.cljs$lang$maxFixedArity = 2;
G__33980.cljs$lang$applyTo = (function (arglist__33985){
var tcoll = cljs.core.first(arglist__33985);
arglist__33985 = cljs.core.next(arglist__33985);
var val = cljs.core.first(arglist__33985);
var vals = cljs.core.rest(arglist__33985);
return G__33980__delegate(tcoll,val,vals);
});
G__33980.cljs$core$IFn$_invoke$arity$variadic = G__33980__delegate;
return G__33980;
})()
;
conj_BANG_ = function(tcoll,val,var_args){
var vals = var_args;
switch(arguments.length){
case 0:
return conj_BANG___0.call(this);
case 1:
return conj_BANG___1.call(this,tcoll);
case 2:
return conj_BANG___2.call(this,tcoll,val);
default:
var G__33986 = null;
if (arguments.length > 2) {
var G__33987__i = 0, G__33987__a = new Array(arguments.length -  2);
while (G__33987__i < G__33987__a.length) {G__33987__a[G__33987__i] = arguments[G__33987__i + 2]; ++G__33987__i;}
G__33986 = new cljs.core.IndexedSeq(G__33987__a,0);
}
return conj_BANG___3.cljs$core$IFn$_invoke$arity$variadic(tcoll,val, G__33986);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
conj_BANG_.cljs$lang$maxFixedArity = 2;
conj_BANG_.cljs$lang$applyTo = conj_BANG___3.cljs$lang$applyTo;
conj_BANG_.cljs$core$IFn$_invoke$arity$0 = conj_BANG___0;
conj_BANG_.cljs$core$IFn$_invoke$arity$1 = conj_BANG___1;
conj_BANG_.cljs$core$IFn$_invoke$arity$2 = conj_BANG___2;
conj_BANG_.cljs$core$IFn$_invoke$arity$variadic = conj_BANG___3.cljs$core$IFn$_invoke$arity$variadic;
return conj_BANG_;
})()
;
/**
* When applied to a transient map, adds mapping of key(s) to
* val(s). When applied to a transient vector, sets the val at index.
* Note - index must be <= (count vector). Returns coll.
* @param {...*} var_args
*/
cljs.core.assoc_BANG_ = (function() {
var assoc_BANG_ = null;
var assoc_BANG___3 = (function (tcoll,key,val){
return cljs.core._assoc_BANG_(tcoll,key,val);
});
var assoc_BANG___4 = (function() { 
var G__33988__delegate = function (tcoll,key,val,kvs){
while(true){
var ntcoll = cljs.core._assoc_BANG_(tcoll,key,val);
if(cljs.core.truth_(kvs)){
var G__33989 = ntcoll;
var G__33990 = cljs.core.first(kvs);
var G__33991 = cljs.core.second(kvs);
var G__33992 = cljs.core.nnext(kvs);
tcoll = G__33989;
key = G__33990;
val = G__33991;
kvs = G__33992;
continue;
} else {
return ntcoll;
}
break;
}
};
var G__33988 = function (tcoll,key,val,var_args){
var kvs = null;
if (arguments.length > 3) {
var G__33993__i = 0, G__33993__a = new Array(arguments.length -  3);
while (G__33993__i < G__33993__a.length) {G__33993__a[G__33993__i] = arguments[G__33993__i + 3]; ++G__33993__i;}
  kvs = new cljs.core.IndexedSeq(G__33993__a,0);
} 
return G__33988__delegate.call(this,tcoll,key,val,kvs);};
G__33988.cljs$lang$maxFixedArity = 3;
G__33988.cljs$lang$applyTo = (function (arglist__33994){
var tcoll = cljs.core.first(arglist__33994);
arglist__33994 = cljs.core.next(arglist__33994);
var key = cljs.core.first(arglist__33994);
arglist__33994 = cljs.core.next(arglist__33994);
var val = cljs.core.first(arglist__33994);
var kvs = cljs.core.rest(arglist__33994);
return G__33988__delegate(tcoll,key,val,kvs);
});
G__33988.cljs$core$IFn$_invoke$arity$variadic = G__33988__delegate;
return G__33988;
})()
;
assoc_BANG_ = function(tcoll,key,val,var_args){
var kvs = var_args;
switch(arguments.length){
case 3:
return assoc_BANG___3.call(this,tcoll,key,val);
default:
var G__33995 = null;
if (arguments.length > 3) {
var G__33996__i = 0, G__33996__a = new Array(arguments.length -  3);
while (G__33996__i < G__33996__a.length) {G__33996__a[G__33996__i] = arguments[G__33996__i + 3]; ++G__33996__i;}
G__33995 = new cljs.core.IndexedSeq(G__33996__a,0);
}
return assoc_BANG___4.cljs$core$IFn$_invoke$arity$variadic(tcoll,key,val, G__33995);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
assoc_BANG_.cljs$lang$maxFixedArity = 3;
assoc_BANG_.cljs$lang$applyTo = assoc_BANG___4.cljs$lang$applyTo;
assoc_BANG_.cljs$core$IFn$_invoke$arity$3 = assoc_BANG___3;
assoc_BANG_.cljs$core$IFn$_invoke$arity$variadic = assoc_BANG___4.cljs$core$IFn$_invoke$arity$variadic;
return assoc_BANG_;
})()
;
/**
* Returns a transient map that doesn't contain a mapping for key(s).
* @param {...*} var_args
*/
cljs.core.dissoc_BANG_ = (function() {
var dissoc_BANG_ = null;
var dissoc_BANG___2 = (function (tcoll,key){
return cljs.core._dissoc_BANG_(tcoll,key);
});
var dissoc_BANG___3 = (function() { 
var G__33997__delegate = function (tcoll,key,ks){
while(true){
var ntcoll = cljs.core._dissoc_BANG_(tcoll,key);
if(cljs.core.truth_(ks)){
var G__33998 = ntcoll;
var G__33999 = cljs.core.first(ks);
var G__34000 = cljs.core.next(ks);
tcoll = G__33998;
key = G__33999;
ks = G__34000;
continue;
} else {
return ntcoll;
}
break;
}
};
var G__33997 = function (tcoll,key,var_args){
var ks = null;
if (arguments.length > 2) {
var G__34001__i = 0, G__34001__a = new Array(arguments.length -  2);
while (G__34001__i < G__34001__a.length) {G__34001__a[G__34001__i] = arguments[G__34001__i + 2]; ++G__34001__i;}
  ks = new cljs.core.IndexedSeq(G__34001__a,0);
} 
return G__33997__delegate.call(this,tcoll,key,ks);};
G__33997.cljs$lang$maxFixedArity = 2;
G__33997.cljs$lang$applyTo = (function (arglist__34002){
var tcoll = cljs.core.first(arglist__34002);
arglist__34002 = cljs.core.next(arglist__34002);
var key = cljs.core.first(arglist__34002);
var ks = cljs.core.rest(arglist__34002);
return G__33997__delegate(tcoll,key,ks);
});
G__33997.cljs$core$IFn$_invoke$arity$variadic = G__33997__delegate;
return G__33997;
})()
;
dissoc_BANG_ = function(tcoll,key,var_args){
var ks = var_args;
switch(arguments.length){
case 2:
return dissoc_BANG___2.call(this,tcoll,key);
default:
var G__34003 = null;
if (arguments.length > 2) {
var G__34004__i = 0, G__34004__a = new Array(arguments.length -  2);
while (G__34004__i < G__34004__a.length) {G__34004__a[G__34004__i] = arguments[G__34004__i + 2]; ++G__34004__i;}
G__34003 = new cljs.core.IndexedSeq(G__34004__a,0);
}
return dissoc_BANG___3.cljs$core$IFn$_invoke$arity$variadic(tcoll,key, G__34003);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
dissoc_BANG_.cljs$lang$maxFixedArity = 2;
dissoc_BANG_.cljs$lang$applyTo = dissoc_BANG___3.cljs$lang$applyTo;
dissoc_BANG_.cljs$core$IFn$_invoke$arity$2 = dissoc_BANG___2;
dissoc_BANG_.cljs$core$IFn$_invoke$arity$variadic = dissoc_BANG___3.cljs$core$IFn$_invoke$arity$variadic;
return dissoc_BANG_;
})()
;
/**
* Removes the last item from a transient vector. If
* the collection is empty, throws an exception. Returns coll
*/
cljs.core.pop_BANG_ = (function pop_BANG_(tcoll){
return cljs.core._pop_BANG_(tcoll);
});
/**
* disj[oin]. Returns a transient set of the same (hashed/sorted) type, that
* does not contain key(s).
* @param {...*} var_args
*/
cljs.core.disj_BANG_ = (function() {
var disj_BANG_ = null;
var disj_BANG___2 = (function (tcoll,val){
return cljs.core._disjoin_BANG_(tcoll,val);
});
var disj_BANG___3 = (function() { 
var G__34005__delegate = function (tcoll,val,vals){
while(true){
var ntcoll = cljs.core._disjoin_BANG_(tcoll,val);
if(cljs.core.truth_(vals)){
var G__34006 = ntcoll;
var G__34007 = cljs.core.first(vals);
var G__34008 = cljs.core.next(vals);
tcoll = G__34006;
val = G__34007;
vals = G__34008;
continue;
} else {
return ntcoll;
}
break;
}
};
var G__34005 = function (tcoll,val,var_args){
var vals = null;
if (arguments.length > 2) {
var G__34009__i = 0, G__34009__a = new Array(arguments.length -  2);
while (G__34009__i < G__34009__a.length) {G__34009__a[G__34009__i] = arguments[G__34009__i + 2]; ++G__34009__i;}
  vals = new cljs.core.IndexedSeq(G__34009__a,0);
} 
return G__34005__delegate.call(this,tcoll,val,vals);};
G__34005.cljs$lang$maxFixedArity = 2;
G__34005.cljs$lang$applyTo = (function (arglist__34010){
var tcoll = cljs.core.first(arglist__34010);
arglist__34010 = cljs.core.next(arglist__34010);
var val = cljs.core.first(arglist__34010);
var vals = cljs.core.rest(arglist__34010);
return G__34005__delegate(tcoll,val,vals);
});
G__34005.cljs$core$IFn$_invoke$arity$variadic = G__34005__delegate;
return G__34005;
})()
;
disj_BANG_ = function(tcoll,val,var_args){
var vals = var_args;
switch(arguments.length){
case 2:
return disj_BANG___2.call(this,tcoll,val);
default:
var G__34011 = null;
if (arguments.length > 2) {
var G__34012__i = 0, G__34012__a = new Array(arguments.length -  2);
while (G__34012__i < G__34012__a.length) {G__34012__a[G__34012__i] = arguments[G__34012__i + 2]; ++G__34012__i;}
G__34011 = new cljs.core.IndexedSeq(G__34012__a,0);
}
return disj_BANG___3.cljs$core$IFn$_invoke$arity$variadic(tcoll,val, G__34011);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
disj_BANG_.cljs$lang$maxFixedArity = 2;
disj_BANG_.cljs$lang$applyTo = disj_BANG___3.cljs$lang$applyTo;
disj_BANG_.cljs$core$IFn$_invoke$arity$2 = disj_BANG___2;
disj_BANG_.cljs$core$IFn$_invoke$arity$variadic = disj_BANG___3.cljs$core$IFn$_invoke$arity$variadic;
return disj_BANG_;
})()
;

cljs.core.apply_to = (function apply_to(f,argc,args){
var args__$1 = cljs.core.seq(args);
if((argc === (0))){
return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
} else {
var a25205 = cljs.core._first(args__$1);
var args__$2 = cljs.core._rest(args__$1);
if((argc === (1))){
if(f.cljs$core$IFn$_invoke$arity$1){
return f.cljs$core$IFn$_invoke$arity$1(a25205);
} else {
var G__34223 = a25205;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__34223) : f.call(null,G__34223));
}
} else {
var b25206 = cljs.core._first(args__$2);
var args__$3 = cljs.core._rest(args__$2);
if((argc === (2))){
if(f.cljs$core$IFn$_invoke$arity$2){
return f.cljs$core$IFn$_invoke$arity$2(a25205,b25206);
} else {
var G__34224 = a25205;
var G__34225 = b25206;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__34224,G__34225) : f.call(null,G__34224,G__34225));
}
} else {
var c25207 = cljs.core._first(args__$3);
var args__$4 = cljs.core._rest(args__$3);
if((argc === (3))){
if(f.cljs$core$IFn$_invoke$arity$3){
return f.cljs$core$IFn$_invoke$arity$3(a25205,b25206,c25207);
} else {
var G__34226 = a25205;
var G__34227 = b25206;
var G__34228 = c25207;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__34226,G__34227,G__34228) : f.call(null,G__34226,G__34227,G__34228));
}
} else {
var d25208 = cljs.core._first(args__$4);
var args__$5 = cljs.core._rest(args__$4);
if((argc === (4))){
if(f.cljs$core$IFn$_invoke$arity$4){
return f.cljs$core$IFn$_invoke$arity$4(a25205,b25206,c25207,d25208);
} else {
var G__34229 = a25205;
var G__34230 = b25206;
var G__34231 = c25207;
var G__34232 = d25208;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__34229,G__34230,G__34231,G__34232) : f.call(null,G__34229,G__34230,G__34231,G__34232));
}
} else {
var e25209 = cljs.core._first(args__$5);
var args__$6 = cljs.core._rest(args__$5);
if((argc === (5))){
if(f.cljs$core$IFn$_invoke$arity$5){
return f.cljs$core$IFn$_invoke$arity$5(a25205,b25206,c25207,d25208,e25209);
} else {
var G__34233 = a25205;
var G__34234 = b25206;
var G__34235 = c25207;
var G__34236 = d25208;
var G__34237 = e25209;
return (f.cljs$core$IFn$_invoke$arity$5 ? f.cljs$core$IFn$_invoke$arity$5(G__34233,G__34234,G__34235,G__34236,G__34237) : f.call(null,G__34233,G__34234,G__34235,G__34236,G__34237));
}
} else {
var f25210 = cljs.core._first(args__$6);
var args__$7 = cljs.core._rest(args__$6);
if((argc === (6))){
if(f.cljs$core$IFn$_invoke$arity$6){
return f.cljs$core$IFn$_invoke$arity$6(a25205,b25206,c25207,d25208,e25209,f25210);
} else {
var G__34238 = a25205;
var G__34239 = b25206;
var G__34240 = c25207;
var G__34241 = d25208;
var G__34242 = e25209;
var G__34243 = f25210;
return (f.cljs$core$IFn$_invoke$arity$6 ? f.cljs$core$IFn$_invoke$arity$6(G__34238,G__34239,G__34240,G__34241,G__34242,G__34243) : f.call(null,G__34238,G__34239,G__34240,G__34241,G__34242,G__34243));
}
} else {
var g25211 = cljs.core._first(args__$7);
var args__$8 = cljs.core._rest(args__$7);
if((argc === (7))){
if(f.cljs$core$IFn$_invoke$arity$7){
return f.cljs$core$IFn$_invoke$arity$7(a25205,b25206,c25207,d25208,e25209,f25210,g25211);
} else {
var G__34244 = a25205;
var G__34245 = b25206;
var G__34246 = c25207;
var G__34247 = d25208;
var G__34248 = e25209;
var G__34249 = f25210;
var G__34250 = g25211;
return (f.cljs$core$IFn$_invoke$arity$7 ? f.cljs$core$IFn$_invoke$arity$7(G__34244,G__34245,G__34246,G__34247,G__34248,G__34249,G__34250) : f.call(null,G__34244,G__34245,G__34246,G__34247,G__34248,G__34249,G__34250));
}
} else {
var h25212 = cljs.core._first(args__$8);
var args__$9 = cljs.core._rest(args__$8);
if((argc === (8))){
if(f.cljs$core$IFn$_invoke$arity$8){
return f.cljs$core$IFn$_invoke$arity$8(a25205,b25206,c25207,d25208,e25209,f25210,g25211,h25212);
} else {
var G__34251 = a25205;
var G__34252 = b25206;
var G__34253 = c25207;
var G__34254 = d25208;
var G__34255 = e25209;
var G__34256 = f25210;
var G__34257 = g25211;
var G__34258 = h25212;
return (f.cljs$core$IFn$_invoke$arity$8 ? f.cljs$core$IFn$_invoke$arity$8(G__34251,G__34252,G__34253,G__34254,G__34255,G__34256,G__34257,G__34258) : f.call(null,G__34251,G__34252,G__34253,G__34254,G__34255,G__34256,G__34257,G__34258));
}
} else {
var i25213 = cljs.core._first(args__$9);
var args__$10 = cljs.core._rest(args__$9);
if((argc === (9))){
if(f.cljs$core$IFn$_invoke$arity$9){
return f.cljs$core$IFn$_invoke$arity$9(a25205,b25206,c25207,d25208,e25209,f25210,g25211,h25212,i25213);
} else {
var G__34259 = a25205;
var G__34260 = b25206;
var G__34261 = c25207;
var G__34262 = d25208;
var G__34263 = e25209;
var G__34264 = f25210;
var G__34265 = g25211;
var G__34266 = h25212;
var G__34267 = i25213;
return (f.cljs$core$IFn$_invoke$arity$9 ? f.cljs$core$IFn$_invoke$arity$9(G__34259,G__34260,G__34261,G__34262,G__34263,G__34264,G__34265,G__34266,G__34267) : f.call(null,G__34259,G__34260,G__34261,G__34262,G__34263,G__34264,G__34265,G__34266,G__34267));
}
} else {
var j25214 = cljs.core._first(args__$10);
var args__$11 = cljs.core._rest(args__$10);
if((argc === (10))){
if(f.cljs$core$IFn$_invoke$arity$10){
return f.cljs$core$IFn$_invoke$arity$10(a25205,b25206,c25207,d25208,e25209,f25210,g25211,h25212,i25213,j25214);
} else {
var G__34268 = a25205;
var G__34269 = b25206;
var G__34270 = c25207;
var G__34271 = d25208;
var G__34272 = e25209;
var G__34273 = f25210;
var G__34274 = g25211;
var G__34275 = h25212;
var G__34276 = i25213;
var G__34277 = j25214;
return (f.cljs$core$IFn$_invoke$arity$10 ? f.cljs$core$IFn$_invoke$arity$10(G__34268,G__34269,G__34270,G__34271,G__34272,G__34273,G__34274,G__34275,G__34276,G__34277) : f.call(null,G__34268,G__34269,G__34270,G__34271,G__34272,G__34273,G__34274,G__34275,G__34276,G__34277));
}
} else {
var k25215 = cljs.core._first(args__$11);
var args__$12 = cljs.core._rest(args__$11);
if((argc === (11))){
if(f.cljs$core$IFn$_invoke$arity$11){
return f.cljs$core$IFn$_invoke$arity$11(a25205,b25206,c25207,d25208,e25209,f25210,g25211,h25212,i25213,j25214,k25215);
} else {
var G__34278 = a25205;
var G__34279 = b25206;
var G__34280 = c25207;
var G__34281 = d25208;
var G__34282 = e25209;
var G__34283 = f25210;
var G__34284 = g25211;
var G__34285 = h25212;
var G__34286 = i25213;
var G__34287 = j25214;
var G__34288 = k25215;
return (f.cljs$core$IFn$_invoke$arity$11 ? f.cljs$core$IFn$_invoke$arity$11(G__34278,G__34279,G__34280,G__34281,G__34282,G__34283,G__34284,G__34285,G__34286,G__34287,G__34288) : f.call(null,G__34278,G__34279,G__34280,G__34281,G__34282,G__34283,G__34284,G__34285,G__34286,G__34287,G__34288));
}
} else {
var l25216 = cljs.core._first(args__$12);
var args__$13 = cljs.core._rest(args__$12);
if((argc === (12))){
if(f.cljs$core$IFn$_invoke$arity$12){
return f.cljs$core$IFn$_invoke$arity$12(a25205,b25206,c25207,d25208,e25209,f25210,g25211,h25212,i25213,j25214,k25215,l25216);
} else {
var G__34289 = a25205;
var G__34290 = b25206;
var G__34291 = c25207;
var G__34292 = d25208;
var G__34293 = e25209;
var G__34294 = f25210;
var G__34295 = g25211;
var G__34296 = h25212;
var G__34297 = i25213;
var G__34298 = j25214;
var G__34299 = k25215;
var G__34300 = l25216;
return (f.cljs$core$IFn$_invoke$arity$12 ? f.cljs$core$IFn$_invoke$arity$12(G__34289,G__34290,G__34291,G__34292,G__34293,G__34294,G__34295,G__34296,G__34297,G__34298,G__34299,G__34300) : f.call(null,G__34289,G__34290,G__34291,G__34292,G__34293,G__34294,G__34295,G__34296,G__34297,G__34298,G__34299,G__34300));
}
} else {
var m25217 = cljs.core._first(args__$13);
var args__$14 = cljs.core._rest(args__$13);
if((argc === (13))){
if(f.cljs$core$IFn$_invoke$arity$13){
return f.cljs$core$IFn$_invoke$arity$13(a25205,b25206,c25207,d25208,e25209,f25210,g25211,h25212,i25213,j25214,k25215,l25216,m25217);
} else {
var G__34301 = a25205;
var G__34302 = b25206;
var G__34303 = c25207;
var G__34304 = d25208;
var G__34305 = e25209;
var G__34306 = f25210;
var G__34307 = g25211;
var G__34308 = h25212;
var G__34309 = i25213;
var G__34310 = j25214;
var G__34311 = k25215;
var G__34312 = l25216;
var G__34313 = m25217;
return (f.cljs$core$IFn$_invoke$arity$13 ? f.cljs$core$IFn$_invoke$arity$13(G__34301,G__34302,G__34303,G__34304,G__34305,G__34306,G__34307,G__34308,G__34309,G__34310,G__34311,G__34312,G__34313) : f.call(null,G__34301,G__34302,G__34303,G__34304,G__34305,G__34306,G__34307,G__34308,G__34309,G__34310,G__34311,G__34312,G__34313));
}
} else {
var n25218 = cljs.core._first(args__$14);
var args__$15 = cljs.core._rest(args__$14);
if((argc === (14))){
if(f.cljs$core$IFn$_invoke$arity$14){
return f.cljs$core$IFn$_invoke$arity$14(a25205,b25206,c25207,d25208,e25209,f25210,g25211,h25212,i25213,j25214,k25215,l25216,m25217,n25218);
} else {
var G__34314 = a25205;
var G__34315 = b25206;
var G__34316 = c25207;
var G__34317 = d25208;
var G__34318 = e25209;
var G__34319 = f25210;
var G__34320 = g25211;
var G__34321 = h25212;
var G__34322 = i25213;
var G__34323 = j25214;
var G__34324 = k25215;
var G__34325 = l25216;
var G__34326 = m25217;
var G__34327 = n25218;
return (f.cljs$core$IFn$_invoke$arity$14 ? f.cljs$core$IFn$_invoke$arity$14(G__34314,G__34315,G__34316,G__34317,G__34318,G__34319,G__34320,G__34321,G__34322,G__34323,G__34324,G__34325,G__34326,G__34327) : f.call(null,G__34314,G__34315,G__34316,G__34317,G__34318,G__34319,G__34320,G__34321,G__34322,G__34323,G__34324,G__34325,G__34326,G__34327));
}
} else {
var o25219 = cljs.core._first(args__$15);
var args__$16 = cljs.core._rest(args__$15);
if((argc === (15))){
if(f.cljs$core$IFn$_invoke$arity$15){
return f.cljs$core$IFn$_invoke$arity$15(a25205,b25206,c25207,d25208,e25209,f25210,g25211,h25212,i25213,j25214,k25215,l25216,m25217,n25218,o25219);
} else {
var G__34328 = a25205;
var G__34329 = b25206;
var G__34330 = c25207;
var G__34331 = d25208;
var G__34332 = e25209;
var G__34333 = f25210;
var G__34334 = g25211;
var G__34335 = h25212;
var G__34336 = i25213;
var G__34337 = j25214;
var G__34338 = k25215;
var G__34339 = l25216;
var G__34340 = m25217;
var G__34341 = n25218;
var G__34342 = o25219;
return (f.cljs$core$IFn$_invoke$arity$15 ? f.cljs$core$IFn$_invoke$arity$15(G__34328,G__34329,G__34330,G__34331,G__34332,G__34333,G__34334,G__34335,G__34336,G__34337,G__34338,G__34339,G__34340,G__34341,G__34342) : f.call(null,G__34328,G__34329,G__34330,G__34331,G__34332,G__34333,G__34334,G__34335,G__34336,G__34337,G__34338,G__34339,G__34340,G__34341,G__34342));
}
} else {
var p25220 = cljs.core._first(args__$16);
var args__$17 = cljs.core._rest(args__$16);
if((argc === (16))){
if(f.cljs$core$IFn$_invoke$arity$16){
return f.cljs$core$IFn$_invoke$arity$16(a25205,b25206,c25207,d25208,e25209,f25210,g25211,h25212,i25213,j25214,k25215,l25216,m25217,n25218,o25219,p25220);
} else {
var G__34343 = a25205;
var G__34344 = b25206;
var G__34345 = c25207;
var G__34346 = d25208;
var G__34347 = e25209;
var G__34348 = f25210;
var G__34349 = g25211;
var G__34350 = h25212;
var G__34351 = i25213;
var G__34352 = j25214;
var G__34353 = k25215;
var G__34354 = l25216;
var G__34355 = m25217;
var G__34356 = n25218;
var G__34357 = o25219;
var G__34358 = p25220;
return (f.cljs$core$IFn$_invoke$arity$16 ? f.cljs$core$IFn$_invoke$arity$16(G__34343,G__34344,G__34345,G__34346,G__34347,G__34348,G__34349,G__34350,G__34351,G__34352,G__34353,G__34354,G__34355,G__34356,G__34357,G__34358) : f.call(null,G__34343,G__34344,G__34345,G__34346,G__34347,G__34348,G__34349,G__34350,G__34351,G__34352,G__34353,G__34354,G__34355,G__34356,G__34357,G__34358));
}
} else {
var q25221 = cljs.core._first(args__$17);
var args__$18 = cljs.core._rest(args__$17);
if((argc === (17))){
if(f.cljs$core$IFn$_invoke$arity$17){
return f.cljs$core$IFn$_invoke$arity$17(a25205,b25206,c25207,d25208,e25209,f25210,g25211,h25212,i25213,j25214,k25215,l25216,m25217,n25218,o25219,p25220,q25221);
} else {
var G__34359 = a25205;
var G__34360 = b25206;
var G__34361 = c25207;
var G__34362 = d25208;
var G__34363 = e25209;
var G__34364 = f25210;
var G__34365 = g25211;
var G__34366 = h25212;
var G__34367 = i25213;
var G__34368 = j25214;
var G__34369 = k25215;
var G__34370 = l25216;
var G__34371 = m25217;
var G__34372 = n25218;
var G__34373 = o25219;
var G__34374 = p25220;
var G__34375 = q25221;
return (f.cljs$core$IFn$_invoke$arity$17 ? f.cljs$core$IFn$_invoke$arity$17(G__34359,G__34360,G__34361,G__34362,G__34363,G__34364,G__34365,G__34366,G__34367,G__34368,G__34369,G__34370,G__34371,G__34372,G__34373,G__34374,G__34375) : f.call(null,G__34359,G__34360,G__34361,G__34362,G__34363,G__34364,G__34365,G__34366,G__34367,G__34368,G__34369,G__34370,G__34371,G__34372,G__34373,G__34374,G__34375));
}
} else {
var r25222 = cljs.core._first(args__$18);
var args__$19 = cljs.core._rest(args__$18);
if((argc === (18))){
if(f.cljs$core$IFn$_invoke$arity$18){
return f.cljs$core$IFn$_invoke$arity$18(a25205,b25206,c25207,d25208,e25209,f25210,g25211,h25212,i25213,j25214,k25215,l25216,m25217,n25218,o25219,p25220,q25221,r25222);
} else {
var G__34376 = a25205;
var G__34377 = b25206;
var G__34378 = c25207;
var G__34379 = d25208;
var G__34380 = e25209;
var G__34381 = f25210;
var G__34382 = g25211;
var G__34383 = h25212;
var G__34384 = i25213;
var G__34385 = j25214;
var G__34386 = k25215;
var G__34387 = l25216;
var G__34388 = m25217;
var G__34389 = n25218;
var G__34390 = o25219;
var G__34391 = p25220;
var G__34392 = q25221;
var G__34393 = r25222;
return (f.cljs$core$IFn$_invoke$arity$18 ? f.cljs$core$IFn$_invoke$arity$18(G__34376,G__34377,G__34378,G__34379,G__34380,G__34381,G__34382,G__34383,G__34384,G__34385,G__34386,G__34387,G__34388,G__34389,G__34390,G__34391,G__34392,G__34393) : f.call(null,G__34376,G__34377,G__34378,G__34379,G__34380,G__34381,G__34382,G__34383,G__34384,G__34385,G__34386,G__34387,G__34388,G__34389,G__34390,G__34391,G__34392,G__34393));
}
} else {
var s25223 = cljs.core._first(args__$19);
var args__$20 = cljs.core._rest(args__$19);
if((argc === (19))){
if(f.cljs$core$IFn$_invoke$arity$19){
return f.cljs$core$IFn$_invoke$arity$19(a25205,b25206,c25207,d25208,e25209,f25210,g25211,h25212,i25213,j25214,k25215,l25216,m25217,n25218,o25219,p25220,q25221,r25222,s25223);
} else {
var G__34394 = a25205;
var G__34395 = b25206;
var G__34396 = c25207;
var G__34397 = d25208;
var G__34398 = e25209;
var G__34399 = f25210;
var G__34400 = g25211;
var G__34401 = h25212;
var G__34402 = i25213;
var G__34403 = j25214;
var G__34404 = k25215;
var G__34405 = l25216;
var G__34406 = m25217;
var G__34407 = n25218;
var G__34408 = o25219;
var G__34409 = p25220;
var G__34410 = q25221;
var G__34411 = r25222;
var G__34412 = s25223;
return (f.cljs$core$IFn$_invoke$arity$19 ? f.cljs$core$IFn$_invoke$arity$19(G__34394,G__34395,G__34396,G__34397,G__34398,G__34399,G__34400,G__34401,G__34402,G__34403,G__34404,G__34405,G__34406,G__34407,G__34408,G__34409,G__34410,G__34411,G__34412) : f.call(null,G__34394,G__34395,G__34396,G__34397,G__34398,G__34399,G__34400,G__34401,G__34402,G__34403,G__34404,G__34405,G__34406,G__34407,G__34408,G__34409,G__34410,G__34411,G__34412));
}
} else {
var t25224 = cljs.core._first(args__$20);
var args__$21 = cljs.core._rest(args__$20);
if((argc === (20))){
if(f.cljs$core$IFn$_invoke$arity$20){
return f.cljs$core$IFn$_invoke$arity$20(a25205,b25206,c25207,d25208,e25209,f25210,g25211,h25212,i25213,j25214,k25215,l25216,m25217,n25218,o25219,p25220,q25221,r25222,s25223,t25224);
} else {
var G__34413 = a25205;
var G__34414 = b25206;
var G__34415 = c25207;
var G__34416 = d25208;
var G__34417 = e25209;
var G__34418 = f25210;
var G__34419 = g25211;
var G__34420 = h25212;
var G__34421 = i25213;
var G__34422 = j25214;
var G__34423 = k25215;
var G__34424 = l25216;
var G__34425 = m25217;
var G__34426 = n25218;
var G__34427 = o25219;
var G__34428 = p25220;
var G__34429 = q25221;
var G__34430 = r25222;
var G__34431 = s25223;
var G__34432 = t25224;
return (f.cljs$core$IFn$_invoke$arity$20 ? f.cljs$core$IFn$_invoke$arity$20(G__34413,G__34414,G__34415,G__34416,G__34417,G__34418,G__34419,G__34420,G__34421,G__34422,G__34423,G__34424,G__34425,G__34426,G__34427,G__34428,G__34429,G__34430,G__34431,G__34432) : f.call(null,G__34413,G__34414,G__34415,G__34416,G__34417,G__34418,G__34419,G__34420,G__34421,G__34422,G__34423,G__34424,G__34425,G__34426,G__34427,G__34428,G__34429,G__34430,G__34431,G__34432));
}
} else {
throw (new Error("Only up to 20 arguments supported on functions"));
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
});

/**
* Applies fn f to the argument list formed by prepending intervening arguments to args.
* First cut.  Not lazy.  Needs to use emitted toApply.
* @param {...*} var_args
*/
cljs.core.apply = (function() {
var apply = null;
var apply__2 = (function (f,args){
var fixed_arity = f.cljs$lang$maxFixedArity;
if(f.cljs$lang$applyTo){
var bc = cljs.core.bounded_count(args,(fixed_arity + (1)));
if((bc <= fixed_arity)){
return cljs.core.apply_to(f,bc,args);
} else {
return f.cljs$lang$applyTo(args);
}
} else {
return f.apply(f,cljs.core.to_array(args));
}
});
var apply__3 = (function (f,x,args){
var arglist = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$2(x,args);
var fixed_arity = f.cljs$lang$maxFixedArity;
if(f.cljs$lang$applyTo){
var bc = cljs.core.bounded_count(arglist,(fixed_arity + (1)));
if((bc <= fixed_arity)){
return cljs.core.apply_to(f,bc,arglist);
} else {
return f.cljs$lang$applyTo(arglist);
}
} else {
return f.apply(f,cljs.core.to_array(arglist));
}
});
var apply__4 = (function (f,x,y,args){
var arglist = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$3(x,y,args);
var fixed_arity = f.cljs$lang$maxFixedArity;
if(f.cljs$lang$applyTo){
var bc = cljs.core.bounded_count(arglist,(fixed_arity + (1)));
if((bc <= fixed_arity)){
return cljs.core.apply_to(f,bc,arglist);
} else {
return f.cljs$lang$applyTo(arglist);
}
} else {
return f.apply(f,cljs.core.to_array(arglist));
}
});
var apply__5 = (function (f,x,y,z,args){
var arglist = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(x,y,z,args);
var fixed_arity = f.cljs$lang$maxFixedArity;
if(f.cljs$lang$applyTo){
var bc = cljs.core.bounded_count(arglist,(fixed_arity + (1)));
if((bc <= fixed_arity)){
return cljs.core.apply_to(f,bc,arglist);
} else {
return f.cljs$lang$applyTo(arglist);
}
} else {
return f.apply(f,cljs.core.to_array(arglist));
}
});
var apply__6 = (function() { 
var G__34433__delegate = function (f,a,b,c,d,args){
var arglist = cljs.core.cons(a,cljs.core.cons(b,cljs.core.cons(c,cljs.core.cons(d,cljs.core.spread(args)))));
var fixed_arity = f.cljs$lang$maxFixedArity;
if(f.cljs$lang$applyTo){
var bc = cljs.core.bounded_count(arglist,(fixed_arity + (1)));
if((bc <= fixed_arity)){
return cljs.core.apply_to(f,bc,arglist);
} else {
return f.cljs$lang$applyTo(arglist);
}
} else {
return f.apply(f,cljs.core.to_array(arglist));
}
};
var G__34433 = function (f,a,b,c,d,var_args){
var args = null;
if (arguments.length > 5) {
var G__34434__i = 0, G__34434__a = new Array(arguments.length -  5);
while (G__34434__i < G__34434__a.length) {G__34434__a[G__34434__i] = arguments[G__34434__i + 5]; ++G__34434__i;}
  args = new cljs.core.IndexedSeq(G__34434__a,0);
} 
return G__34433__delegate.call(this,f,a,b,c,d,args);};
G__34433.cljs$lang$maxFixedArity = 5;
G__34433.cljs$lang$applyTo = (function (arglist__34435){
var f = cljs.core.first(arglist__34435);
arglist__34435 = cljs.core.next(arglist__34435);
var a = cljs.core.first(arglist__34435);
arglist__34435 = cljs.core.next(arglist__34435);
var b = cljs.core.first(arglist__34435);
arglist__34435 = cljs.core.next(arglist__34435);
var c = cljs.core.first(arglist__34435);
arglist__34435 = cljs.core.next(arglist__34435);
var d = cljs.core.first(arglist__34435);
var args = cljs.core.rest(arglist__34435);
return G__34433__delegate(f,a,b,c,d,args);
});
G__34433.cljs$core$IFn$_invoke$arity$variadic = G__34433__delegate;
return G__34433;
})()
;
apply = function(f,a,b,c,d,var_args){
var args = var_args;
switch(arguments.length){
case 2:
return apply__2.call(this,f,a);
case 3:
return apply__3.call(this,f,a,b);
case 4:
return apply__4.call(this,f,a,b,c);
case 5:
return apply__5.call(this,f,a,b,c,d);
default:
var G__34436 = null;
if (arguments.length > 5) {
var G__34437__i = 0, G__34437__a = new Array(arguments.length -  5);
while (G__34437__i < G__34437__a.length) {G__34437__a[G__34437__i] = arguments[G__34437__i + 5]; ++G__34437__i;}
G__34436 = new cljs.core.IndexedSeq(G__34437__a,0);
}
return apply__6.cljs$core$IFn$_invoke$arity$variadic(f,a,b,c,d, G__34436);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
apply.cljs$lang$maxFixedArity = 5;
apply.cljs$lang$applyTo = apply__6.cljs$lang$applyTo;
apply.cljs$core$IFn$_invoke$arity$2 = apply__2;
apply.cljs$core$IFn$_invoke$arity$3 = apply__3;
apply.cljs$core$IFn$_invoke$arity$4 = apply__4;
apply.cljs$core$IFn$_invoke$arity$5 = apply__5;
apply.cljs$core$IFn$_invoke$arity$variadic = apply__6.cljs$core$IFn$_invoke$arity$variadic;
return apply;
})()
;
/**
* Returns an object of the same type and value as obj, with
* (apply f (meta obj) args) as its metadata.
* @param {...*} var_args
*/
cljs.core.vary_meta = (function() {
var vary_meta = null;
var vary_meta__2 = (function (obj,f){
return cljs.core.with_meta(obj,(function (){var G__34453 = cljs.core.meta(obj);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__34453) : f.call(null,G__34453));
})());
});
var vary_meta__3 = (function (obj,f,a){
return cljs.core.with_meta(obj,(function (){var G__34454 = cljs.core.meta(obj);
var G__34455 = a;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__34454,G__34455) : f.call(null,G__34454,G__34455));
})());
});
var vary_meta__4 = (function (obj,f,a,b){
return cljs.core.with_meta(obj,(function (){var G__34456 = cljs.core.meta(obj);
var G__34457 = a;
var G__34458 = b;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__34456,G__34457,G__34458) : f.call(null,G__34456,G__34457,G__34458));
})());
});
var vary_meta__5 = (function (obj,f,a,b,c){
return cljs.core.with_meta(obj,(function (){var G__34459 = cljs.core.meta(obj);
var G__34460 = a;
var G__34461 = b;
var G__34462 = c;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__34459,G__34460,G__34461,G__34462) : f.call(null,G__34459,G__34460,G__34461,G__34462));
})());
});
var vary_meta__6 = (function (obj,f,a,b,c,d){
return cljs.core.with_meta(obj,(function (){var G__34463 = cljs.core.meta(obj);
var G__34464 = a;
var G__34465 = b;
var G__34466 = c;
var G__34467 = d;
return (f.cljs$core$IFn$_invoke$arity$5 ? f.cljs$core$IFn$_invoke$arity$5(G__34463,G__34464,G__34465,G__34466,G__34467) : f.call(null,G__34463,G__34464,G__34465,G__34466,G__34467));
})());
});
var vary_meta__7 = (function() { 
var G__34468__delegate = function (obj,f,a,b,c,d,args){
return cljs.core.with_meta(obj,cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f,cljs.core.meta(obj),a,b,c,cljs.core.array_seq([d,args], 0)));
};
var G__34468 = function (obj,f,a,b,c,d,var_args){
var args = null;
if (arguments.length > 6) {
var G__34469__i = 0, G__34469__a = new Array(arguments.length -  6);
while (G__34469__i < G__34469__a.length) {G__34469__a[G__34469__i] = arguments[G__34469__i + 6]; ++G__34469__i;}
  args = new cljs.core.IndexedSeq(G__34469__a,0);
} 
return G__34468__delegate.call(this,obj,f,a,b,c,d,args);};
G__34468.cljs$lang$maxFixedArity = 6;
G__34468.cljs$lang$applyTo = (function (arglist__34470){
var obj = cljs.core.first(arglist__34470);
arglist__34470 = cljs.core.next(arglist__34470);
var f = cljs.core.first(arglist__34470);
arglist__34470 = cljs.core.next(arglist__34470);
var a = cljs.core.first(arglist__34470);
arglist__34470 = cljs.core.next(arglist__34470);
var b = cljs.core.first(arglist__34470);
arglist__34470 = cljs.core.next(arglist__34470);
var c = cljs.core.first(arglist__34470);
arglist__34470 = cljs.core.next(arglist__34470);
var d = cljs.core.first(arglist__34470);
var args = cljs.core.rest(arglist__34470);
return G__34468__delegate(obj,f,a,b,c,d,args);
});
G__34468.cljs$core$IFn$_invoke$arity$variadic = G__34468__delegate;
return G__34468;
})()
;
vary_meta = function(obj,f,a,b,c,d,var_args){
var args = var_args;
switch(arguments.length){
case 2:
return vary_meta__2.call(this,obj,f);
case 3:
return vary_meta__3.call(this,obj,f,a);
case 4:
return vary_meta__4.call(this,obj,f,a,b);
case 5:
return vary_meta__5.call(this,obj,f,a,b,c);
case 6:
return vary_meta__6.call(this,obj,f,a,b,c,d);
default:
var G__34471 = null;
if (arguments.length > 6) {
var G__34472__i = 0, G__34472__a = new Array(arguments.length -  6);
while (G__34472__i < G__34472__a.length) {G__34472__a[G__34472__i] = arguments[G__34472__i + 6]; ++G__34472__i;}
G__34471 = new cljs.core.IndexedSeq(G__34472__a,0);
}
return vary_meta__7.cljs$core$IFn$_invoke$arity$variadic(obj,f,a,b,c,d, G__34471);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
vary_meta.cljs$lang$maxFixedArity = 6;
vary_meta.cljs$lang$applyTo = vary_meta__7.cljs$lang$applyTo;
vary_meta.cljs$core$IFn$_invoke$arity$2 = vary_meta__2;
vary_meta.cljs$core$IFn$_invoke$arity$3 = vary_meta__3;
vary_meta.cljs$core$IFn$_invoke$arity$4 = vary_meta__4;
vary_meta.cljs$core$IFn$_invoke$arity$5 = vary_meta__5;
vary_meta.cljs$core$IFn$_invoke$arity$6 = vary_meta__6;
vary_meta.cljs$core$IFn$_invoke$arity$variadic = vary_meta__7.cljs$core$IFn$_invoke$arity$variadic;
return vary_meta;
})()
;
/**
* Same as (not (= obj1 obj2))
* @param {...*} var_args
*/
cljs.core.not_EQ_ = (function() {
var not_EQ_ = null;
var not_EQ___1 = (function (x){
return false;
});
var not_EQ___2 = (function (x,y){
return !(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x,y));
});
var not_EQ___3 = (function() { 
var G__34473__delegate = function (x,y,more){
return cljs.core.not(cljs.core.apply.cljs$core$IFn$_invoke$arity$4(cljs.core._EQ_,x,y,more));
};
var G__34473 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__34474__i = 0, G__34474__a = new Array(arguments.length -  2);
while (G__34474__i < G__34474__a.length) {G__34474__a[G__34474__i] = arguments[G__34474__i + 2]; ++G__34474__i;}
  more = new cljs.core.IndexedSeq(G__34474__a,0);
} 
return G__34473__delegate.call(this,x,y,more);};
G__34473.cljs$lang$maxFixedArity = 2;
G__34473.cljs$lang$applyTo = (function (arglist__34475){
var x = cljs.core.first(arglist__34475);
arglist__34475 = cljs.core.next(arglist__34475);
var y = cljs.core.first(arglist__34475);
var more = cljs.core.rest(arglist__34475);
return G__34473__delegate(x,y,more);
});
G__34473.cljs$core$IFn$_invoke$arity$variadic = G__34473__delegate;
return G__34473;
})()
;
not_EQ_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return not_EQ___1.call(this,x);
case 2:
return not_EQ___2.call(this,x,y);
default:
var G__34476 = null;
if (arguments.length > 2) {
var G__34477__i = 0, G__34477__a = new Array(arguments.length -  2);
while (G__34477__i < G__34477__a.length) {G__34477__a[G__34477__i] = arguments[G__34477__i + 2]; ++G__34477__i;}
G__34476 = new cljs.core.IndexedSeq(G__34477__a,0);
}
return not_EQ___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__34476);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
not_EQ_.cljs$lang$maxFixedArity = 2;
not_EQ_.cljs$lang$applyTo = not_EQ___3.cljs$lang$applyTo;
not_EQ_.cljs$core$IFn$_invoke$arity$1 = not_EQ___1;
not_EQ_.cljs$core$IFn$_invoke$arity$2 = not_EQ___2;
not_EQ_.cljs$core$IFn$_invoke$arity$variadic = not_EQ___3.cljs$core$IFn$_invoke$arity$variadic;
return not_EQ_;
})()
;
/**
* If coll is empty, returns nil, else coll
*/
cljs.core.not_empty = (function not_empty(coll){
if(cljs.core.seq(coll)){
return coll;
} else {
return null;
}
});
cljs.core.nil_iter = (function nil_iter(){
if(typeof cljs.core.t34481 !== 'undefined'){
} else {

/**
* @constructor
*/
cljs.core.t34481 = (function (nil_iter,meta34482){
this.nil_iter = nil_iter;
this.meta34482 = meta34482;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 393216;
})
cljs.core.t34481.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
return false;
});

cljs.core.t34481.prototype.next = (function (){
var self__ = this;
var _ = this;
return (new Error("No such element"));
});

cljs.core.t34481.prototype.remove = (function (){
var self__ = this;
var _ = this;
return (new Error("Unsupported operation"));
});

cljs.core.t34481.prototype.cljs$core$IMeta$_meta$arity$1 = (function (_34483){
var self__ = this;
var _34483__$1 = this;
return self__.meta34482;
});

cljs.core.t34481.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (_34483,meta34482__$1){
var self__ = this;
var _34483__$1 = this;
return (new cljs.core.t34481(self__.nil_iter,meta34482__$1));
});

cljs.core.t34481.cljs$lang$type = true;

cljs.core.t34481.cljs$lang$ctorStr = "cljs.core/t34481";

cljs.core.t34481.cljs$lang$ctorPrWriter = (function (this__24861__auto__,writer__24862__auto__,opt__24863__auto__){
return cljs.core._write(writer__24862__auto__,"cljs.core/t34481");
});

cljs.core.__GT_t34481 = (function __GT_t34481(nil_iter__$1,meta34482){
return (new cljs.core.t34481(nil_iter__$1,meta34482));
});

}

return (new cljs.core.t34481(nil_iter,new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null,"end-column","end-column",1425389514),54,new cljs.core.Keyword(null,"end-line","end-line",1837326455),2998,new cljs.core.Keyword(null,"column","column",2078222095),3,new cljs.core.Keyword(null,"line","line",212345235),2994,new cljs.core.Keyword(null,"file","file",-1269645878),"/home/callum/projects/closso/.repl/2323/cljs/core.cljs"], null)));
});

/**
* @constructor
*/
cljs.core.StringIter = (function (s,i){
this.s = s;
this.i = i;
})
cljs.core.StringIter.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
return (self__.i < self__.s.length);
});

cljs.core.StringIter.prototype.next = (function (){
var self__ = this;
var _ = this;
var ret = self__.s.charAt(self__.i);
self__.i = (self__.i + (1));

return ret;
});

cljs.core.StringIter.prototype.remove = (function (){
var self__ = this;
var _ = this;
return (new Error("Unsupported operation"));
});

cljs.core.StringIter.cljs$lang$type = true;

cljs.core.StringIter.cljs$lang$ctorStr = "cljs.core/StringIter";

cljs.core.StringIter.cljs$lang$ctorPrWriter = (function (this__24861__auto__,writer__24862__auto__,opt__24863__auto__){
return cljs.core._write(writer__24862__auto__,"cljs.core/StringIter");
});

cljs.core.__GT_StringIter = (function __GT_StringIter(s,i){
return (new cljs.core.StringIter(s,i));
});

cljs.core.string_iter = (function string_iter(x){
return (new cljs.core.StringIter(x,(0)));
});

/**
* @constructor
*/
cljs.core.ArrayIter = (function (arr,i){
this.arr = arr;
this.i = i;
})
cljs.core.ArrayIter.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
return (self__.i < self__.arr.length);
});

cljs.core.ArrayIter.prototype.next = (function (){
var self__ = this;
var _ = this;
var ret = (self__.arr[self__.i]);
self__.i = (self__.i + (1));

return ret;
});

cljs.core.ArrayIter.prototype.remove = (function (){
var self__ = this;
var _ = this;
return (new Error("Unsupported operation"));
});

cljs.core.ArrayIter.cljs$lang$type = true;

cljs.core.ArrayIter.cljs$lang$ctorStr = "cljs.core/ArrayIter";

cljs.core.ArrayIter.cljs$lang$ctorPrWriter = (function (this__24861__auto__,writer__24862__auto__,opt__24863__auto__){
return cljs.core._write(writer__24862__auto__,"cljs.core/ArrayIter");
});

cljs.core.__GT_ArrayIter = (function __GT_ArrayIter(arr,i){
return (new cljs.core.ArrayIter(arr,i));
});

cljs.core.array_iter = (function array_iter(x){
return (new cljs.core.ArrayIter(x,(0)));
});
cljs.core.INIT = {};
cljs.core.START = {};

/**
* @constructor
*/
cljs.core.SeqIter = (function (_seq,_next){
this._seq = _seq;
this._next = _next;
})
cljs.core.SeqIter.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
if((self__._seq === cljs.core.INIT)){
self__._seq = cljs.core.START;

self__._next = cljs.core.seq(self__._next);
} else {
if((self__._seq === self__._next)){
self__._next = cljs.core.next(self__._seq);
} else {
}
}

return !((self__._next == null));
});

cljs.core.SeqIter.prototype.next = (function (){
var self__ = this;
var this$ = this;
if(cljs.core.not(this$.hasNext())){
throw (new Error("No such element"));
} else {
self__._seq = self__._next;

return cljs.core.first(self__._next);
}
});

cljs.core.SeqIter.prototype.remove = (function (){
var self__ = this;
var _ = this;
return (new Error("Unsupported operation"));
});

cljs.core.SeqIter.cljs$lang$type = true;

cljs.core.SeqIter.cljs$lang$ctorStr = "cljs.core/SeqIter";

cljs.core.SeqIter.cljs$lang$ctorPrWriter = (function (this__24861__auto__,writer__24862__auto__,opt__24863__auto__){
return cljs.core._write(writer__24862__auto__,"cljs.core/SeqIter");
});

cljs.core.__GT_SeqIter = (function __GT_SeqIter(_seq,_next){
return (new cljs.core.SeqIter(_seq,_next));
});

cljs.core.seq_iter = (function seq_iter(coll){
return (new cljs.core.SeqIter(cljs.core.INIT,coll));
});
cljs.core.iter = (function iter(coll){
if((coll == null)){
return cljs.core.nil_iter();
} else {
if(typeof coll === 'string'){
return cljs.core.string_iter(coll);
} else {
if(coll instanceof Array){
return cljs.core.array_iter(coll);
} else {
if(cljs.core.iterable_QMARK_(coll)){
return cljs.core._iterator(coll);
} else {
if(cljs.core.seqable_QMARK_(coll)){
return cljs.core.seq_iter(coll);
} else {
throw (new Error([cljs.core.str("Cannot create iterator from "),cljs.core.str(coll)].join('')));

}
}
}
}
}
});
cljs.core.lazy_transformer = (function lazy_transformer(stepper){
return (new cljs.core.LazyTransformer(stepper,null,null,null));
});

/**
* @constructor
*/
cljs.core.Stepper = (function (xform,iter){
this.xform = xform;
this.iter = iter;
})
cljs.core.Stepper.prototype.step = (function (lt){
var self__ = this;
var this$ = this;
while(true){
if(cljs.core.truth_((function (){var and__24262__auto__ = !((lt.stepper == null));
if(and__24262__auto__){
return self__.iter.hasNext();
} else {
return and__24262__auto__;
}
})())){
if(cljs.core.reduced_QMARK_((function (){var G__34484 = lt;
var G__34485 = self__.iter.next();
return (self__.xform.cljs$core$IFn$_invoke$arity$2 ? self__.xform.cljs$core$IFn$_invoke$arity$2(G__34484,G__34485) : self__.xform.call(null,G__34484,G__34485));
})())){
if((lt.rest == null)){
} else {
lt.rest.stepper = null;
}
} else {
continue;
}
} else {
}
break;
}

if((lt.stepper == null)){
return null;
} else {
var G__34486 = lt;
return (self__.xform.cljs$core$IFn$_invoke$arity$1 ? self__.xform.cljs$core$IFn$_invoke$arity$1(G__34486) : self__.xform.call(null,G__34486));
}
});

cljs.core.Stepper.cljs$lang$type = true;

cljs.core.Stepper.cljs$lang$ctorStr = "cljs.core/Stepper";

cljs.core.Stepper.cljs$lang$ctorPrWriter = (function (this__24861__auto__,writer__24862__auto__,opt__24863__auto__){
return cljs.core._write(writer__24862__auto__,"cljs.core/Stepper");
});

cljs.core.__GT_Stepper = (function __GT_Stepper(xform,iter){
return (new cljs.core.Stepper(xform,iter));
});

cljs.core.stepper = (function stepper(xform,iter){
var stepfn = (function() {
var stepfn = null;
var stepfn__1 = (function (result){
var lt = ((cljs.core.reduced_QMARK_(result))?cljs.core.deref(result):result);
lt.stepper = null;

return result;
});
var stepfn__2 = (function (result,input){
var lt = result;
lt.first = input;

lt.rest = cljs.core.lazy_transformer(lt.stepper);

lt.stepper = null;

return lt.rest;
});
stepfn = function(result,input){
switch(arguments.length){
case 1:
return stepfn__1.call(this,result);
case 2:
return stepfn__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
stepfn.cljs$core$IFn$_invoke$arity$1 = stepfn__1;
stepfn.cljs$core$IFn$_invoke$arity$2 = stepfn__2;
return stepfn;
})()
;
return (new cljs.core.Stepper((function (){var G__34488 = stepfn;
return (xform.cljs$core$IFn$_invoke$arity$1 ? xform.cljs$core$IFn$_invoke$arity$1(G__34488) : xform.call(null,G__34488));
})(),iter));
});

/**
* @constructor
*/
cljs.core.MultiStepper = (function (xform,iters,nexts){
this.xform = xform;
this.iters = iters;
this.nexts = nexts;
})
cljs.core.MultiStepper.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
var iters__$1 = cljs.core.seq(self__.iters);
while(true){
if(!((iters__$1 == null))){
var iter = cljs.core.first(iters__$1);
if(cljs.core.not(iter.hasNext())){
return false;
} else {
var G__34490 = cljs.core.next(iters__$1);
iters__$1 = G__34490;
continue;
}
} else {
return true;
}
break;
}
});

cljs.core.MultiStepper.prototype.next = (function (){
var self__ = this;
var _ = this;
var n__25161__auto___34491 = self__.iters.length;
var i_34492 = (0);
while(true){
if((i_34492 < n__25161__auto___34491)){
(self__.nexts[i_34492] = (self__.iters[i_34492]).next());

var G__34493 = (i_34492 + (1));
i_34492 = G__34493;
continue;
} else {
}
break;
}

return cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(self__.nexts,(0));
});

cljs.core.MultiStepper.prototype.step = (function (lt){
var self__ = this;
var this$ = this;
while(true){
if(cljs.core.truth_((function (){var and__24262__auto__ = !((lt.stepper == null));
if(and__24262__auto__){
return this$.hasNext();
} else {
return and__24262__auto__;
}
})())){
if(cljs.core.reduced_QMARK_(cljs.core.apply.cljs$core$IFn$_invoke$arity$2(self__.xform,cljs.core.cons(lt,this$.next())))){
if((lt.rest == null)){
} else {
lt.rest.stepper = null;
}
} else {
continue;
}
} else {
}
break;
}

if((lt.stepper == null)){
return null;
} else {
var G__34489 = lt;
return (self__.xform.cljs$core$IFn$_invoke$arity$1 ? self__.xform.cljs$core$IFn$_invoke$arity$1(G__34489) : self__.xform.call(null,G__34489));
}
});

cljs.core.MultiStepper.cljs$lang$type = true;

cljs.core.MultiStepper.cljs$lang$ctorStr = "cljs.core/MultiStepper";

cljs.core.MultiStepper.cljs$lang$ctorPrWriter = (function (this__24861__auto__,writer__24862__auto__,opt__24863__auto__){
return cljs.core._write(writer__24862__auto__,"cljs.core/MultiStepper");
});

cljs.core.__GT_MultiStepper = (function __GT_MultiStepper(xform,iters,nexts){
return (new cljs.core.MultiStepper(xform,iters,nexts));
});

cljs.core.multi_stepper = (function() {
var multi_stepper = null;
var multi_stepper__2 = (function (xform,iters){
return multi_stepper.cljs$core$IFn$_invoke$arity$3(xform,iters,(new Array(iters.length)));
});
var multi_stepper__3 = (function (xform,iters,nexts){
var stepfn = (function() {
var stepfn = null;
var stepfn__1 = (function (result){
var lt = ((cljs.core.reduced_QMARK_(result))?cljs.core.deref(result):result);
lt.stepper = null;

return lt;
});
var stepfn__2 = (function (result,input){
var lt = result;
lt.first = input;

lt.rest = cljs.core.lazy_transformer(lt.stepper);

lt.stepper = null;

return lt.rest;
});
stepfn = function(result,input){
switch(arguments.length){
case 1:
return stepfn__1.call(this,result);
case 2:
return stepfn__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
stepfn.cljs$core$IFn$_invoke$arity$1 = stepfn__1;
stepfn.cljs$core$IFn$_invoke$arity$2 = stepfn__2;
return stepfn;
})()
;
return (new cljs.core.MultiStepper((function (){var G__34498 = stepfn;
return (xform.cljs$core$IFn$_invoke$arity$1 ? xform.cljs$core$IFn$_invoke$arity$1(G__34498) : xform.call(null,G__34498));
})(),iters,nexts));
});
multi_stepper = function(xform,iters,nexts){
switch(arguments.length){
case 2:
return multi_stepper__2.call(this,xform,iters);
case 3:
return multi_stepper__3.call(this,xform,iters,nexts);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
multi_stepper.cljs$core$IFn$_invoke$arity$2 = multi_stepper__2;
multi_stepper.cljs$core$IFn$_invoke$arity$3 = multi_stepper__3;
return multi_stepper;
})()
;

/**
* @constructor
*/
cljs.core.LazyTransformer = (function (stepper,first,rest,meta){
this.stepper = stepper;
this.first = first;
this.rest = rest;
this.meta = meta;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 31719628;
})
cljs.core.LazyTransformer.prototype.cljs$core$INext$_next$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
if((self__.stepper == null)){
} else {
cljs.core._seq(this$__$1);
}

if((self__.rest == null)){
return null;
} else {
return cljs.core._seq(self__.rest);
}
});

cljs.core.LazyTransformer.prototype.cljs$core$ISeq$_first$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
if((self__.stepper == null)){
} else {
cljs.core._seq(this$__$1);
}

if((self__.rest == null)){
return null;
} else {
return self__.first;
}
});

cljs.core.LazyTransformer.prototype.cljs$core$ISeq$_rest$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
if((self__.stepper == null)){
} else {
cljs.core._seq(this$__$1);
}

if((self__.rest == null)){
return cljs.core.List.EMPTY;
} else {
return self__.rest;
}
});

cljs.core.LazyTransformer.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
if((self__.stepper == null)){
} else {
self__.stepper.step(this$__$1);
}

if((self__.rest == null)){
return null;
} else {
return this$__$1;
}
});

cljs.core.LazyTransformer.prototype.cljs$core$IHash$_hash$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return cljs.core.hash_ordered_coll(this$__$1);
});

cljs.core.LazyTransformer.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (this$,other){
var self__ = this;
var this$__$1 = this;
var s = cljs.core._seq(this$__$1);
if(!((s == null))){
return cljs.core.equiv_sequential(this$__$1,other);
} else {
return (cljs.core.sequential_QMARK_(other)) && ((cljs.core.seq(other) == null));
}
});

cljs.core.LazyTransformer.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return cljs.core.List.EMPTY;
});

cljs.core.LazyTransformer.prototype.cljs$core$ICollection$_conj$arity$2 = (function (this$,o){
var self__ = this;
var this$__$1 = this;
return cljs.core.cons(o,cljs.core._seq(this$__$1));
});

cljs.core.LazyTransformer.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (this$,new_meta){
var self__ = this;
var this$__$1 = this;
return (new cljs.core.LazyTransformer(self__.stepper,self__.first,self__.rest,new_meta));
});

cljs.core.LazyTransformer.cljs$lang$type = true;

cljs.core.LazyTransformer.cljs$lang$ctorStr = "cljs.core/LazyTransformer";

cljs.core.LazyTransformer.cljs$lang$ctorPrWriter = (function (this__24861__auto__,writer__24862__auto__,opt__24863__auto__){
return cljs.core._write(writer__24862__auto__,"cljs.core/LazyTransformer");
});

cljs.core.__GT_LazyTransformer = (function __GT_LazyTransformer(stepper,first,rest,meta){
return (new cljs.core.LazyTransformer(stepper,first,rest,meta));
});

(cljs.core.LazyTransformer.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__25252__auto__ = this;
return cljs.core.es6_iterator(this__25252__auto__);
}));
cljs.core.LazyTransformer.create = (function (xform,coll){
return (new cljs.core.LazyTransformer(cljs.core.stepper(xform,cljs.core.iter(coll)),null,null,null));
});
cljs.core.LazyTransformer.createMulti = (function (xform,colls){
var iters = [];
var seq__34499_34503 = cljs.core.seq(colls);
var chunk__34500_34504 = null;
var count__34501_34505 = (0);
var i__34502_34506 = (0);
while(true){
if((i__34502_34506 < count__34501_34505)){
var coll_34507 = chunk__34500_34504.cljs$core$IIndexed$_nth$arity$2(null,i__34502_34506);
iters.push(cljs.core.iter(coll_34507));

var G__34508 = seq__34499_34503;
var G__34509 = chunk__34500_34504;
var G__34510 = count__34501_34505;
var G__34511 = (i__34502_34506 + (1));
seq__34499_34503 = G__34508;
chunk__34500_34504 = G__34509;
count__34501_34505 = G__34510;
i__34502_34506 = G__34511;
continue;
} else {
var temp__4126__auto___34512 = cljs.core.seq(seq__34499_34503);
if(temp__4126__auto___34512){
var seq__34499_34513__$1 = temp__4126__auto___34512;
if(cljs.core.chunked_seq_QMARK_(seq__34499_34513__$1)){
var c__25061__auto___34514 = cljs.core.chunk_first(seq__34499_34513__$1);
var G__34515 = cljs.core.chunk_rest(seq__34499_34513__$1);
var G__34516 = c__25061__auto___34514;
var G__34517 = cljs.core.count(c__25061__auto___34514);
var G__34518 = (0);
seq__34499_34503 = G__34515;
chunk__34500_34504 = G__34516;
count__34501_34505 = G__34517;
i__34502_34506 = G__34518;
continue;
} else {
var coll_34519 = cljs.core.first(seq__34499_34513__$1);
iters.push(cljs.core.iter(coll_34519));

var G__34520 = cljs.core.next(seq__34499_34513__$1);
var G__34521 = null;
var G__34522 = (0);
var G__34523 = (0);
seq__34499_34503 = G__34520;
chunk__34500_34504 = G__34521;
count__34501_34505 = G__34522;
i__34502_34506 = G__34523;
continue;
}
} else {
}
}
break;
}

return (new cljs.core.LazyTransformer(cljs.core.multi_stepper.cljs$core$IFn$_invoke$arity$3(xform,iters,(new Array(iters.length))),null,null,null));
});
/**
* Coerces coll to a (possibly empty) sequence, if it is not already
* one. Will not force a lazy seq. (sequence nil) yields (), When a
* transducer is supplied, returns a lazy sequence of applications of
* the transform to the items in coll(s), i.e. to the set of first
* items of each coll, followed by the set of second
* items in each coll, until any one of the colls is exhausted.  Any
* remaining items in other colls are ignored. The transform should accept
* number-of-colls arguments
* @param {...*} var_args
*/
cljs.core.sequence = (function() {
var sequence = null;
var sequence__1 = (function (coll){
if(cljs.core.seq_QMARK_(coll)){
return coll;
} else {
var or__24274__auto__ = cljs.core.seq(coll);
if(or__24274__auto__){
return or__24274__auto__;
} else {
return cljs.core.List.EMPTY;
}
}
});
var sequence__2 = (function (xform,coll){
return cljs.core.LazyTransformer.create(xform,coll);
});
var sequence__3 = (function() { 
var G__34524__delegate = function (xform,coll,colls){
return cljs.core.LazyTransformer.createMulti(xform,cljs.core.to_array(cljs.core.cons(coll,colls)));
};
var G__34524 = function (xform,coll,var_args){
var colls = null;
if (arguments.length > 2) {
var G__34525__i = 0, G__34525__a = new Array(arguments.length -  2);
while (G__34525__i < G__34525__a.length) {G__34525__a[G__34525__i] = arguments[G__34525__i + 2]; ++G__34525__i;}
  colls = new cljs.core.IndexedSeq(G__34525__a,0);
} 
return G__34524__delegate.call(this,xform,coll,colls);};
G__34524.cljs$lang$maxFixedArity = 2;
G__34524.cljs$lang$applyTo = (function (arglist__34526){
var xform = cljs.core.first(arglist__34526);
arglist__34526 = cljs.core.next(arglist__34526);
var coll = cljs.core.first(arglist__34526);
var colls = cljs.core.rest(arglist__34526);
return G__34524__delegate(xform,coll,colls);
});
G__34524.cljs$core$IFn$_invoke$arity$variadic = G__34524__delegate;
return G__34524;
})()
;
sequence = function(xform,coll,var_args){
var colls = var_args;
switch(arguments.length){
case 1:
return sequence__1.call(this,xform);
case 2:
return sequence__2.call(this,xform,coll);
default:
var G__34527 = null;
if (arguments.length > 2) {
var G__34528__i = 0, G__34528__a = new Array(arguments.length -  2);
while (G__34528__i < G__34528__a.length) {G__34528__a[G__34528__i] = arguments[G__34528__i + 2]; ++G__34528__i;}
G__34527 = new cljs.core.IndexedSeq(G__34528__a,0);
}
return sequence__3.cljs$core$IFn$_invoke$arity$variadic(xform,coll, G__34527);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
sequence.cljs$lang$maxFixedArity = 2;
sequence.cljs$lang$applyTo = sequence__3.cljs$lang$applyTo;
sequence.cljs$core$IFn$_invoke$arity$1 = sequence__1;
sequence.cljs$core$IFn$_invoke$arity$2 = sequence__2;
sequence.cljs$core$IFn$_invoke$arity$variadic = sequence__3.cljs$core$IFn$_invoke$arity$variadic;
return sequence;
})()
;
/**
* Returns true if (pred x) is logical true for every x in coll, else
* false.
*/
cljs.core.every_QMARK_ = (function every_QMARK_(pred,coll){
while(true){
if((cljs.core.seq(coll) == null)){
return true;
} else {
if(cljs.core.truth_((function (){var G__34530 = cljs.core.first(coll);
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__34530) : pred.call(null,G__34530));
})())){
var G__34531 = pred;
var G__34532 = cljs.core.next(coll);
pred = G__34531;
coll = G__34532;
continue;
} else {
return false;

}
}
break;
}
});
/**
* Returns false if (pred x) is logical true for every x in
* coll, else true.
*/
cljs.core.not_every_QMARK_ = (function not_every_QMARK_(pred,coll){
return !(cljs.core.every_QMARK_(pred,coll));
});
/**
* Returns the first logical true value of (pred x) for any x in coll,
* else nil.  One common idiom is to use a set as pred, for example
* this will return :fred if :fred is in the sequence, otherwise nil:
* (some #{:fred} coll)
*/
cljs.core.some = (function some(pred,coll){
while(true){
if(cljs.core.seq(coll)){
var or__24274__auto__ = (function (){var G__34536 = cljs.core.first(coll);
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__34536) : pred.call(null,G__34536));
})();
if(cljs.core.truth_(or__24274__auto__)){
return or__24274__auto__;
} else {
var G__34537 = pred;
var G__34538 = cljs.core.next(coll);
pred = G__34537;
coll = G__34538;
continue;
}
} else {
return null;
}
break;
}
});
/**
* Returns false if (pred x) is logical true for any x in coll,
* else true.
*/
cljs.core.not_any_QMARK_ = (function not_any_QMARK_(pred,coll){
return cljs.core.not(cljs.core.some(pred,coll));
});
/**
* Returns true if n is even, throws an exception if n is not an integer
*/
cljs.core.even_QMARK_ = (function even_QMARK_(n){
if(cljs.core.integer_QMARK_(n)){
return ((n & (1)) === (0));
} else {
throw (new Error([cljs.core.str("Argument must be an integer: "),cljs.core.str(n)].join('')));
}
});
/**
* Returns true if n is odd, throws an exception if n is not an integer
*/
cljs.core.odd_QMARK_ = (function odd_QMARK_(n){
return !(cljs.core.even_QMARK_(n));
});
/**
* Takes a fn f and returns a fn that takes the same arguments as f,
* has the same effects, if any, and returns the opposite truth value.
*/
cljs.core.complement = (function complement(f){
return (function() {
var G__34545 = null;
var G__34545__0 = (function (){
return cljs.core.not((function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})());
});
var G__34545__1 = (function (x){
return cljs.core.not((function (){var G__34542 = x;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__34542) : f.call(null,G__34542));
})());
});
var G__34545__2 = (function (x,y){
return cljs.core.not((function (){var G__34543 = x;
var G__34544 = y;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__34543,G__34544) : f.call(null,G__34543,G__34544));
})());
});
var G__34545__3 = (function() { 
var G__34546__delegate = function (x,y,zs){
return cljs.core.not(cljs.core.apply.cljs$core$IFn$_invoke$arity$4(f,x,y,zs));
};
var G__34546 = function (x,y,var_args){
var zs = null;
if (arguments.length > 2) {
var G__34547__i = 0, G__34547__a = new Array(arguments.length -  2);
while (G__34547__i < G__34547__a.length) {G__34547__a[G__34547__i] = arguments[G__34547__i + 2]; ++G__34547__i;}
  zs = new cljs.core.IndexedSeq(G__34547__a,0);
} 
return G__34546__delegate.call(this,x,y,zs);};
G__34546.cljs$lang$maxFixedArity = 2;
G__34546.cljs$lang$applyTo = (function (arglist__34548){
var x = cljs.core.first(arglist__34548);
arglist__34548 = cljs.core.next(arglist__34548);
var y = cljs.core.first(arglist__34548);
var zs = cljs.core.rest(arglist__34548);
return G__34546__delegate(x,y,zs);
});
G__34546.cljs$core$IFn$_invoke$arity$variadic = G__34546__delegate;
return G__34546;
})()
;
G__34545 = function(x,y,var_args){
var zs = var_args;
switch(arguments.length){
case 0:
return G__34545__0.call(this);
case 1:
return G__34545__1.call(this,x);
case 2:
return G__34545__2.call(this,x,y);
default:
var G__34549 = null;
if (arguments.length > 2) {
var G__34550__i = 0, G__34550__a = new Array(arguments.length -  2);
while (G__34550__i < G__34550__a.length) {G__34550__a[G__34550__i] = arguments[G__34550__i + 2]; ++G__34550__i;}
G__34549 = new cljs.core.IndexedSeq(G__34550__a,0);
}
return G__34545__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__34549);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__34545.cljs$lang$maxFixedArity = 2;
G__34545.cljs$lang$applyTo = G__34545__3.cljs$lang$applyTo;
G__34545.cljs$core$IFn$_invoke$arity$0 = G__34545__0;
G__34545.cljs$core$IFn$_invoke$arity$1 = G__34545__1;
G__34545.cljs$core$IFn$_invoke$arity$2 = G__34545__2;
G__34545.cljs$core$IFn$_invoke$arity$variadic = G__34545__3.cljs$core$IFn$_invoke$arity$variadic;
return G__34545;
})()
});
/**
* Returns a function that takes any number of arguments and returns x.
*/
cljs.core.constantly = (function constantly(x){
return (function() { 
var G__34551__delegate = function (args){
return x;
};
var G__34551 = function (var_args){
var args = null;
if (arguments.length > 0) {
var G__34552__i = 0, G__34552__a = new Array(arguments.length -  0);
while (G__34552__i < G__34552__a.length) {G__34552__a[G__34552__i] = arguments[G__34552__i + 0]; ++G__34552__i;}
  args = new cljs.core.IndexedSeq(G__34552__a,0);
} 
return G__34551__delegate.call(this,args);};
G__34551.cljs$lang$maxFixedArity = 0;
G__34551.cljs$lang$applyTo = (function (arglist__34553){
var args = cljs.core.seq(arglist__34553);
return G__34551__delegate(args);
});
G__34551.cljs$core$IFn$_invoke$arity$variadic = G__34551__delegate;
return G__34551;
})()
;
});
/**
* Takes a set of functions and returns a fn that is the composition
* of those fns.  The returned fn takes a variable number of args,
* applies the rightmost of fns to the args, the next
* fn (right-to-left) to the result, etc.
* @param {...*} var_args
*/
cljs.core.comp = (function() {
var comp = null;
var comp__0 = (function (){
return cljs.core.identity;
});
var comp__1 = (function (f){
return f;
});
var comp__2 = (function (f,g){
return (function() {
var G__34608 = null;
var G__34608__0 = (function (){
var G__34581 = (function (){return (g.cljs$core$IFn$_invoke$arity$0 ? g.cljs$core$IFn$_invoke$arity$0() : g.call(null));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__34581) : f.call(null,G__34581));
});
var G__34608__1 = (function (x){
var G__34582 = (function (){var G__34583 = x;
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__34583) : g.call(null,G__34583));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__34582) : f.call(null,G__34582));
});
var G__34608__2 = (function (x,y){
var G__34584 = (function (){var G__34585 = x;
var G__34586 = y;
return (g.cljs$core$IFn$_invoke$arity$2 ? g.cljs$core$IFn$_invoke$arity$2(G__34585,G__34586) : g.call(null,G__34585,G__34586));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__34584) : f.call(null,G__34584));
});
var G__34608__3 = (function (x,y,z){
var G__34587 = (function (){var G__34588 = x;
var G__34589 = y;
var G__34590 = z;
return (g.cljs$core$IFn$_invoke$arity$3 ? g.cljs$core$IFn$_invoke$arity$3(G__34588,G__34589,G__34590) : g.call(null,G__34588,G__34589,G__34590));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__34587) : f.call(null,G__34587));
});
var G__34608__4 = (function() { 
var G__34609__delegate = function (x,y,z,args){
var G__34591 = cljs.core.apply.cljs$core$IFn$_invoke$arity$5(g,x,y,z,args);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__34591) : f.call(null,G__34591));
};
var G__34609 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__34610__i = 0, G__34610__a = new Array(arguments.length -  3);
while (G__34610__i < G__34610__a.length) {G__34610__a[G__34610__i] = arguments[G__34610__i + 3]; ++G__34610__i;}
  args = new cljs.core.IndexedSeq(G__34610__a,0);
} 
return G__34609__delegate.call(this,x,y,z,args);};
G__34609.cljs$lang$maxFixedArity = 3;
G__34609.cljs$lang$applyTo = (function (arglist__34611){
var x = cljs.core.first(arglist__34611);
arglist__34611 = cljs.core.next(arglist__34611);
var y = cljs.core.first(arglist__34611);
arglist__34611 = cljs.core.next(arglist__34611);
var z = cljs.core.first(arglist__34611);
var args = cljs.core.rest(arglist__34611);
return G__34609__delegate(x,y,z,args);
});
G__34609.cljs$core$IFn$_invoke$arity$variadic = G__34609__delegate;
return G__34609;
})()
;
G__34608 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__34608__0.call(this);
case 1:
return G__34608__1.call(this,x);
case 2:
return G__34608__2.call(this,x,y);
case 3:
return G__34608__3.call(this,x,y,z);
default:
var G__34612 = null;
if (arguments.length > 3) {
var G__34613__i = 0, G__34613__a = new Array(arguments.length -  3);
while (G__34613__i < G__34613__a.length) {G__34613__a[G__34613__i] = arguments[G__34613__i + 3]; ++G__34613__i;}
G__34612 = new cljs.core.IndexedSeq(G__34613__a,0);
}
return G__34608__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__34612);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__34608.cljs$lang$maxFixedArity = 3;
G__34608.cljs$lang$applyTo = G__34608__4.cljs$lang$applyTo;
G__34608.cljs$core$IFn$_invoke$arity$0 = G__34608__0;
G__34608.cljs$core$IFn$_invoke$arity$1 = G__34608__1;
G__34608.cljs$core$IFn$_invoke$arity$2 = G__34608__2;
G__34608.cljs$core$IFn$_invoke$arity$3 = G__34608__3;
G__34608.cljs$core$IFn$_invoke$arity$variadic = G__34608__4.cljs$core$IFn$_invoke$arity$variadic;
return G__34608;
})()
});
var comp__3 = (function (f,g,h){
return (function() {
var G__34614 = null;
var G__34614__0 = (function (){
var G__34592 = (function (){var G__34593 = (function (){return (h.cljs$core$IFn$_invoke$arity$0 ? h.cljs$core$IFn$_invoke$arity$0() : h.call(null));
})();
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__34593) : g.call(null,G__34593));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__34592) : f.call(null,G__34592));
});
var G__34614__1 = (function (x){
var G__34594 = (function (){var G__34595 = (function (){var G__34596 = x;
return (h.cljs$core$IFn$_invoke$arity$1 ? h.cljs$core$IFn$_invoke$arity$1(G__34596) : h.call(null,G__34596));
})();
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__34595) : g.call(null,G__34595));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__34594) : f.call(null,G__34594));
});
var G__34614__2 = (function (x,y){
var G__34597 = (function (){var G__34598 = (function (){var G__34599 = x;
var G__34600 = y;
return (h.cljs$core$IFn$_invoke$arity$2 ? h.cljs$core$IFn$_invoke$arity$2(G__34599,G__34600) : h.call(null,G__34599,G__34600));
})();
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__34598) : g.call(null,G__34598));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__34597) : f.call(null,G__34597));
});
var G__34614__3 = (function (x,y,z){
var G__34601 = (function (){var G__34602 = (function (){var G__34603 = x;
var G__34604 = y;
var G__34605 = z;
return (h.cljs$core$IFn$_invoke$arity$3 ? h.cljs$core$IFn$_invoke$arity$3(G__34603,G__34604,G__34605) : h.call(null,G__34603,G__34604,G__34605));
})();
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__34602) : g.call(null,G__34602));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__34601) : f.call(null,G__34601));
});
var G__34614__4 = (function() { 
var G__34615__delegate = function (x,y,z,args){
var G__34606 = (function (){var G__34607 = cljs.core.apply.cljs$core$IFn$_invoke$arity$5(h,x,y,z,args);
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__34607) : g.call(null,G__34607));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__34606) : f.call(null,G__34606));
};
var G__34615 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__34616__i = 0, G__34616__a = new Array(arguments.length -  3);
while (G__34616__i < G__34616__a.length) {G__34616__a[G__34616__i] = arguments[G__34616__i + 3]; ++G__34616__i;}
  args = new cljs.core.IndexedSeq(G__34616__a,0);
} 
return G__34615__delegate.call(this,x,y,z,args);};
G__34615.cljs$lang$maxFixedArity = 3;
G__34615.cljs$lang$applyTo = (function (arglist__34617){
var x = cljs.core.first(arglist__34617);
arglist__34617 = cljs.core.next(arglist__34617);
var y = cljs.core.first(arglist__34617);
arglist__34617 = cljs.core.next(arglist__34617);
var z = cljs.core.first(arglist__34617);
var args = cljs.core.rest(arglist__34617);
return G__34615__delegate(x,y,z,args);
});
G__34615.cljs$core$IFn$_invoke$arity$variadic = G__34615__delegate;
return G__34615;
})()
;
G__34614 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__34614__0.call(this);
case 1:
return G__34614__1.call(this,x);
case 2:
return G__34614__2.call(this,x,y);
case 3:
return G__34614__3.call(this,x,y,z);
default:
var G__34618 = null;
if (arguments.length > 3) {
var G__34619__i = 0, G__34619__a = new Array(arguments.length -  3);
while (G__34619__i < G__34619__a.length) {G__34619__a[G__34619__i] = arguments[G__34619__i + 3]; ++G__34619__i;}
G__34618 = new cljs.core.IndexedSeq(G__34619__a,0);
}
return G__34614__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__34618);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__34614.cljs$lang$maxFixedArity = 3;
G__34614.cljs$lang$applyTo = G__34614__4.cljs$lang$applyTo;
G__34614.cljs$core$IFn$_invoke$arity$0 = G__34614__0;
G__34614.cljs$core$IFn$_invoke$arity$1 = G__34614__1;
G__34614.cljs$core$IFn$_invoke$arity$2 = G__34614__2;
G__34614.cljs$core$IFn$_invoke$arity$3 = G__34614__3;
G__34614.cljs$core$IFn$_invoke$arity$variadic = G__34614__4.cljs$core$IFn$_invoke$arity$variadic;
return G__34614;
})()
});
var comp__4 = (function() { 
var G__34620__delegate = function (f1,f2,f3,fs){
var fs__$1 = cljs.core.reverse(cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(f1,f2,f3,fs));
return ((function (fs__$1){
return (function() { 
var G__34621__delegate = function (args){
var ret = cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.first(fs__$1),args);
var fs__$2 = cljs.core.next(fs__$1);
while(true){
if(fs__$2){
var G__34622 = cljs.core.first(fs__$2).call(null,ret);
var G__34623 = cljs.core.next(fs__$2);
ret = G__34622;
fs__$2 = G__34623;
continue;
} else {
return ret;
}
break;
}
};
var G__34621 = function (var_args){
var args = null;
if (arguments.length > 0) {
var G__34624__i = 0, G__34624__a = new Array(arguments.length -  0);
while (G__34624__i < G__34624__a.length) {G__34624__a[G__34624__i] = arguments[G__34624__i + 0]; ++G__34624__i;}
  args = new cljs.core.IndexedSeq(G__34624__a,0);
} 
return G__34621__delegate.call(this,args);};
G__34621.cljs$lang$maxFixedArity = 0;
G__34621.cljs$lang$applyTo = (function (arglist__34625){
var args = cljs.core.seq(arglist__34625);
return G__34621__delegate(args);
});
G__34621.cljs$core$IFn$_invoke$arity$variadic = G__34621__delegate;
return G__34621;
})()
;
;})(fs__$1))
};
var G__34620 = function (f1,f2,f3,var_args){
var fs = null;
if (arguments.length > 3) {
var G__34626__i = 0, G__34626__a = new Array(arguments.length -  3);
while (G__34626__i < G__34626__a.length) {G__34626__a[G__34626__i] = arguments[G__34626__i + 3]; ++G__34626__i;}
  fs = new cljs.core.IndexedSeq(G__34626__a,0);
} 
return G__34620__delegate.call(this,f1,f2,f3,fs);};
G__34620.cljs$lang$maxFixedArity = 3;
G__34620.cljs$lang$applyTo = (function (arglist__34627){
var f1 = cljs.core.first(arglist__34627);
arglist__34627 = cljs.core.next(arglist__34627);
var f2 = cljs.core.first(arglist__34627);
arglist__34627 = cljs.core.next(arglist__34627);
var f3 = cljs.core.first(arglist__34627);
var fs = cljs.core.rest(arglist__34627);
return G__34620__delegate(f1,f2,f3,fs);
});
G__34620.cljs$core$IFn$_invoke$arity$variadic = G__34620__delegate;
return G__34620;
})()
;
comp = function(f1,f2,f3,var_args){
var fs = var_args;
switch(arguments.length){
case 0:
return comp__0.call(this);
case 1:
return comp__1.call(this,f1);
case 2:
return comp__2.call(this,f1,f2);
case 3:
return comp__3.call(this,f1,f2,f3);
default:
var G__34628 = null;
if (arguments.length > 3) {
var G__34629__i = 0, G__34629__a = new Array(arguments.length -  3);
while (G__34629__i < G__34629__a.length) {G__34629__a[G__34629__i] = arguments[G__34629__i + 3]; ++G__34629__i;}
G__34628 = new cljs.core.IndexedSeq(G__34629__a,0);
}
return comp__4.cljs$core$IFn$_invoke$arity$variadic(f1,f2,f3, G__34628);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
comp.cljs$lang$maxFixedArity = 3;
comp.cljs$lang$applyTo = comp__4.cljs$lang$applyTo;
comp.cljs$core$IFn$_invoke$arity$0 = comp__0;
comp.cljs$core$IFn$_invoke$arity$1 = comp__1;
comp.cljs$core$IFn$_invoke$arity$2 = comp__2;
comp.cljs$core$IFn$_invoke$arity$3 = comp__3;
comp.cljs$core$IFn$_invoke$arity$variadic = comp__4.cljs$core$IFn$_invoke$arity$variadic;
return comp;
})()
;
/**
* Takes a function f and fewer than the normal arguments to f, and
* returns a fn that takes a variable number of additional args. When
* called, the returned function calls f with args + additional args.
* @param {...*} var_args
*/
cljs.core.partial = (function() {
var partial = null;
var partial__1 = (function (f){
return f;
});
var partial__2 = (function (f,arg1){
return (function() {
var G__34714 = null;
var G__34714__0 = (function (){
var G__34672 = arg1;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__34672) : f.call(null,G__34672));
});
var G__34714__1 = (function (x){
var G__34673 = arg1;
var G__34674 = x;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__34673,G__34674) : f.call(null,G__34673,G__34674));
});
var G__34714__2 = (function (x,y){
var G__34675 = arg1;
var G__34676 = x;
var G__34677 = y;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__34675,G__34676,G__34677) : f.call(null,G__34675,G__34676,G__34677));
});
var G__34714__3 = (function (x,y,z){
var G__34678 = arg1;
var G__34679 = x;
var G__34680 = y;
var G__34681 = z;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__34678,G__34679,G__34680,G__34681) : f.call(null,G__34678,G__34679,G__34680,G__34681));
});
var G__34714__4 = (function() { 
var G__34715__delegate = function (x,y,z,args){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f,arg1,x,y,z,cljs.core.array_seq([args], 0));
};
var G__34715 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__34716__i = 0, G__34716__a = new Array(arguments.length -  3);
while (G__34716__i < G__34716__a.length) {G__34716__a[G__34716__i] = arguments[G__34716__i + 3]; ++G__34716__i;}
  args = new cljs.core.IndexedSeq(G__34716__a,0);
} 
return G__34715__delegate.call(this,x,y,z,args);};
G__34715.cljs$lang$maxFixedArity = 3;
G__34715.cljs$lang$applyTo = (function (arglist__34717){
var x = cljs.core.first(arglist__34717);
arglist__34717 = cljs.core.next(arglist__34717);
var y = cljs.core.first(arglist__34717);
arglist__34717 = cljs.core.next(arglist__34717);
var z = cljs.core.first(arglist__34717);
var args = cljs.core.rest(arglist__34717);
return G__34715__delegate(x,y,z,args);
});
G__34715.cljs$core$IFn$_invoke$arity$variadic = G__34715__delegate;
return G__34715;
})()
;
G__34714 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__34714__0.call(this);
case 1:
return G__34714__1.call(this,x);
case 2:
return G__34714__2.call(this,x,y);
case 3:
return G__34714__3.call(this,x,y,z);
default:
var G__34718 = null;
if (arguments.length > 3) {
var G__34719__i = 0, G__34719__a = new Array(arguments.length -  3);
while (G__34719__i < G__34719__a.length) {G__34719__a[G__34719__i] = arguments[G__34719__i + 3]; ++G__34719__i;}
G__34718 = new cljs.core.IndexedSeq(G__34719__a,0);
}
return G__34714__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__34718);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__34714.cljs$lang$maxFixedArity = 3;
G__34714.cljs$lang$applyTo = G__34714__4.cljs$lang$applyTo;
G__34714.cljs$core$IFn$_invoke$arity$0 = G__34714__0;
G__34714.cljs$core$IFn$_invoke$arity$1 = G__34714__1;
G__34714.cljs$core$IFn$_invoke$arity$2 = G__34714__2;
G__34714.cljs$core$IFn$_invoke$arity$3 = G__34714__3;
G__34714.cljs$core$IFn$_invoke$arity$variadic = G__34714__4.cljs$core$IFn$_invoke$arity$variadic;
return G__34714;
})()
});
var partial__3 = (function (f,arg1,arg2){
return (function() {
var G__34720 = null;
var G__34720__0 = (function (){
var G__34682 = arg1;
var G__34683 = arg2;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__34682,G__34683) : f.call(null,G__34682,G__34683));
});
var G__34720__1 = (function (x){
var G__34684 = arg1;
var G__34685 = arg2;
var G__34686 = x;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__34684,G__34685,G__34686) : f.call(null,G__34684,G__34685,G__34686));
});
var G__34720__2 = (function (x,y){
var G__34687 = arg1;
var G__34688 = arg2;
var G__34689 = x;
var G__34690 = y;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__34687,G__34688,G__34689,G__34690) : f.call(null,G__34687,G__34688,G__34689,G__34690));
});
var G__34720__3 = (function (x,y,z){
var G__34691 = arg1;
var G__34692 = arg2;
var G__34693 = x;
var G__34694 = y;
var G__34695 = z;
return (f.cljs$core$IFn$_invoke$arity$5 ? f.cljs$core$IFn$_invoke$arity$5(G__34691,G__34692,G__34693,G__34694,G__34695) : f.call(null,G__34691,G__34692,G__34693,G__34694,G__34695));
});
var G__34720__4 = (function() { 
var G__34721__delegate = function (x,y,z,args){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f,arg1,arg2,x,y,cljs.core.array_seq([z,args], 0));
};
var G__34721 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__34722__i = 0, G__34722__a = new Array(arguments.length -  3);
while (G__34722__i < G__34722__a.length) {G__34722__a[G__34722__i] = arguments[G__34722__i + 3]; ++G__34722__i;}
  args = new cljs.core.IndexedSeq(G__34722__a,0);
} 
return G__34721__delegate.call(this,x,y,z,args);};
G__34721.cljs$lang$maxFixedArity = 3;
G__34721.cljs$lang$applyTo = (function (arglist__34723){
var x = cljs.core.first(arglist__34723);
arglist__34723 = cljs.core.next(arglist__34723);
var y = cljs.core.first(arglist__34723);
arglist__34723 = cljs.core.next(arglist__34723);
var z = cljs.core.first(arglist__34723);
var args = cljs.core.rest(arglist__34723);
return G__34721__delegate(x,y,z,args);
});
G__34721.cljs$core$IFn$_invoke$arity$variadic = G__34721__delegate;
return G__34721;
})()
;
G__34720 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__34720__0.call(this);
case 1:
return G__34720__1.call(this,x);
case 2:
return G__34720__2.call(this,x,y);
case 3:
return G__34720__3.call(this,x,y,z);
default:
var G__34724 = null;
if (arguments.length > 3) {
var G__34725__i = 0, G__34725__a = new Array(arguments.length -  3);
while (G__34725__i < G__34725__a.length) {G__34725__a[G__34725__i] = arguments[G__34725__i + 3]; ++G__34725__i;}
G__34724 = new cljs.core.IndexedSeq(G__34725__a,0);
}
return G__34720__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__34724);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__34720.cljs$lang$maxFixedArity = 3;
G__34720.cljs$lang$applyTo = G__34720__4.cljs$lang$applyTo;
G__34720.cljs$core$IFn$_invoke$arity$0 = G__34720__0;
G__34720.cljs$core$IFn$_invoke$arity$1 = G__34720__1;
G__34720.cljs$core$IFn$_invoke$arity$2 = G__34720__2;
G__34720.cljs$core$IFn$_invoke$arity$3 = G__34720__3;
G__34720.cljs$core$IFn$_invoke$arity$variadic = G__34720__4.cljs$core$IFn$_invoke$arity$variadic;
return G__34720;
})()
});
var partial__4 = (function (f,arg1,arg2,arg3){
return (function() {
var G__34726 = null;
var G__34726__0 = (function (){
var G__34696 = arg1;
var G__34697 = arg2;
var G__34698 = arg3;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__34696,G__34697,G__34698) : f.call(null,G__34696,G__34697,G__34698));
});
var G__34726__1 = (function (x){
var G__34699 = arg1;
var G__34700 = arg2;
var G__34701 = arg3;
var G__34702 = x;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__34699,G__34700,G__34701,G__34702) : f.call(null,G__34699,G__34700,G__34701,G__34702));
});
var G__34726__2 = (function (x,y){
var G__34703 = arg1;
var G__34704 = arg2;
var G__34705 = arg3;
var G__34706 = x;
var G__34707 = y;
return (f.cljs$core$IFn$_invoke$arity$5 ? f.cljs$core$IFn$_invoke$arity$5(G__34703,G__34704,G__34705,G__34706,G__34707) : f.call(null,G__34703,G__34704,G__34705,G__34706,G__34707));
});
var G__34726__3 = (function (x,y,z){
var G__34708 = arg1;
var G__34709 = arg2;
var G__34710 = arg3;
var G__34711 = x;
var G__34712 = y;
var G__34713 = z;
return (f.cljs$core$IFn$_invoke$arity$6 ? f.cljs$core$IFn$_invoke$arity$6(G__34708,G__34709,G__34710,G__34711,G__34712,G__34713) : f.call(null,G__34708,G__34709,G__34710,G__34711,G__34712,G__34713));
});
var G__34726__4 = (function() { 
var G__34727__delegate = function (x,y,z,args){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f,arg1,arg2,arg3,x,cljs.core.array_seq([y,z,args], 0));
};
var G__34727 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__34728__i = 0, G__34728__a = new Array(arguments.length -  3);
while (G__34728__i < G__34728__a.length) {G__34728__a[G__34728__i] = arguments[G__34728__i + 3]; ++G__34728__i;}
  args = new cljs.core.IndexedSeq(G__34728__a,0);
} 
return G__34727__delegate.call(this,x,y,z,args);};
G__34727.cljs$lang$maxFixedArity = 3;
G__34727.cljs$lang$applyTo = (function (arglist__34729){
var x = cljs.core.first(arglist__34729);
arglist__34729 = cljs.core.next(arglist__34729);
var y = cljs.core.first(arglist__34729);
arglist__34729 = cljs.core.next(arglist__34729);
var z = cljs.core.first(arglist__34729);
var args = cljs.core.rest(arglist__34729);
return G__34727__delegate(x,y,z,args);
});
G__34727.cljs$core$IFn$_invoke$arity$variadic = G__34727__delegate;
return G__34727;
})()
;
G__34726 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__34726__0.call(this);
case 1:
return G__34726__1.call(this,x);
case 2:
return G__34726__2.call(this,x,y);
case 3:
return G__34726__3.call(this,x,y,z);
default:
var G__34730 = null;
if (arguments.length > 3) {
var G__34731__i = 0, G__34731__a = new Array(arguments.length -  3);
while (G__34731__i < G__34731__a.length) {G__34731__a[G__34731__i] = arguments[G__34731__i + 3]; ++G__34731__i;}
G__34730 = new cljs.core.IndexedSeq(G__34731__a,0);
}
return G__34726__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__34730);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__34726.cljs$lang$maxFixedArity = 3;
G__34726.cljs$lang$applyTo = G__34726__4.cljs$lang$applyTo;
G__34726.cljs$core$IFn$_invoke$arity$0 = G__34726__0;
G__34726.cljs$core$IFn$_invoke$arity$1 = G__34726__1;
G__34726.cljs$core$IFn$_invoke$arity$2 = G__34726__2;
G__34726.cljs$core$IFn$_invoke$arity$3 = G__34726__3;
G__34726.cljs$core$IFn$_invoke$arity$variadic = G__34726__4.cljs$core$IFn$_invoke$arity$variadic;
return G__34726;
})()
});
var partial__5 = (function() { 
var G__34732__delegate = function (f,arg1,arg2,arg3,more){
return (function() { 
var G__34733__delegate = function (args){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,arg1,arg2,arg3,cljs.core.concat.cljs$core$IFn$_invoke$arity$2(more,args));
};
var G__34733 = function (var_args){
var args = null;
if (arguments.length > 0) {
var G__34734__i = 0, G__34734__a = new Array(arguments.length -  0);
while (G__34734__i < G__34734__a.length) {G__34734__a[G__34734__i] = arguments[G__34734__i + 0]; ++G__34734__i;}
  args = new cljs.core.IndexedSeq(G__34734__a,0);
} 
return G__34733__delegate.call(this,args);};
G__34733.cljs$lang$maxFixedArity = 0;
G__34733.cljs$lang$applyTo = (function (arglist__34735){
var args = cljs.core.seq(arglist__34735);
return G__34733__delegate(args);
});
G__34733.cljs$core$IFn$_invoke$arity$variadic = G__34733__delegate;
return G__34733;
})()
;
};
var G__34732 = function (f,arg1,arg2,arg3,var_args){
var more = null;
if (arguments.length > 4) {
var G__34736__i = 0, G__34736__a = new Array(arguments.length -  4);
while (G__34736__i < G__34736__a.length) {G__34736__a[G__34736__i] = arguments[G__34736__i + 4]; ++G__34736__i;}
  more = new cljs.core.IndexedSeq(G__34736__a,0);
} 
return G__34732__delegate.call(this,f,arg1,arg2,arg3,more);};
G__34732.cljs$lang$maxFixedArity = 4;
G__34732.cljs$lang$applyTo = (function (arglist__34737){
var f = cljs.core.first(arglist__34737);
arglist__34737 = cljs.core.next(arglist__34737);
var arg1 = cljs.core.first(arglist__34737);
arglist__34737 = cljs.core.next(arglist__34737);
var arg2 = cljs.core.first(arglist__34737);
arglist__34737 = cljs.core.next(arglist__34737);
var arg3 = cljs.core.first(arglist__34737);
var more = cljs.core.rest(arglist__34737);
return G__34732__delegate(f,arg1,arg2,arg3,more);
});
G__34732.cljs$core$IFn$_invoke$arity$variadic = G__34732__delegate;
return G__34732;
})()
;
partial = function(f,arg1,arg2,arg3,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return partial__1.call(this,f);
case 2:
return partial__2.call(this,f,arg1);
case 3:
return partial__3.call(this,f,arg1,arg2);
case 4:
return partial__4.call(this,f,arg1,arg2,arg3);
default:
var G__34738 = null;
if (arguments.length > 4) {
var G__34739__i = 0, G__34739__a = new Array(arguments.length -  4);
while (G__34739__i < G__34739__a.length) {G__34739__a[G__34739__i] = arguments[G__34739__i + 4]; ++G__34739__i;}
G__34738 = new cljs.core.IndexedSeq(G__34739__a,0);
}
return partial__5.cljs$core$IFn$_invoke$arity$variadic(f,arg1,arg2,arg3, G__34738);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
partial.cljs$lang$maxFixedArity = 4;
partial.cljs$lang$applyTo = partial__5.cljs$lang$applyTo;
partial.cljs$core$IFn$_invoke$arity$1 = partial__1;
partial.cljs$core$IFn$_invoke$arity$2 = partial__2;
partial.cljs$core$IFn$_invoke$arity$3 = partial__3;
partial.cljs$core$IFn$_invoke$arity$4 = partial__4;
partial.cljs$core$IFn$_invoke$arity$variadic = partial__5.cljs$core$IFn$_invoke$arity$variadic;
return partial;
})()
;
/**
* Takes a function f, and returns a function that calls f, replacing
* a nil first argument to f with the supplied value x. Higher arity
* versions can replace arguments in the second and third
* positions (y, z). Note that the function f can take any number of
* arguments, not just the one(s) being nil-patched.
*/
cljs.core.fnil = (function() {
var fnil = null;
var fnil__2 = (function (f,x){
return (function() {
var G__34772 = null;
var G__34772__1 = (function (a){
var G__34756 = (((a == null))?x:a);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__34756) : f.call(null,G__34756));
});
var G__34772__2 = (function (a,b){
var G__34757 = (((a == null))?x:a);
var G__34758 = b;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__34757,G__34758) : f.call(null,G__34757,G__34758));
});
var G__34772__3 = (function (a,b,c){
var G__34759 = (((a == null))?x:a);
var G__34760 = b;
var G__34761 = c;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__34759,G__34760,G__34761) : f.call(null,G__34759,G__34760,G__34761));
});
var G__34772__4 = (function() { 
var G__34773__delegate = function (a,b,c,ds){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,(((a == null))?x:a),b,c,ds);
};
var G__34773 = function (a,b,c,var_args){
var ds = null;
if (arguments.length > 3) {
var G__34774__i = 0, G__34774__a = new Array(arguments.length -  3);
while (G__34774__i < G__34774__a.length) {G__34774__a[G__34774__i] = arguments[G__34774__i + 3]; ++G__34774__i;}
  ds = new cljs.core.IndexedSeq(G__34774__a,0);
} 
return G__34773__delegate.call(this,a,b,c,ds);};
G__34773.cljs$lang$maxFixedArity = 3;
G__34773.cljs$lang$applyTo = (function (arglist__34775){
var a = cljs.core.first(arglist__34775);
arglist__34775 = cljs.core.next(arglist__34775);
var b = cljs.core.first(arglist__34775);
arglist__34775 = cljs.core.next(arglist__34775);
var c = cljs.core.first(arglist__34775);
var ds = cljs.core.rest(arglist__34775);
return G__34773__delegate(a,b,c,ds);
});
G__34773.cljs$core$IFn$_invoke$arity$variadic = G__34773__delegate;
return G__34773;
})()
;
G__34772 = function(a,b,c,var_args){
var ds = var_args;
switch(arguments.length){
case 1:
return G__34772__1.call(this,a);
case 2:
return G__34772__2.call(this,a,b);
case 3:
return G__34772__3.call(this,a,b,c);
default:
var G__34776 = null;
if (arguments.length > 3) {
var G__34777__i = 0, G__34777__a = new Array(arguments.length -  3);
while (G__34777__i < G__34777__a.length) {G__34777__a[G__34777__i] = arguments[G__34777__i + 3]; ++G__34777__i;}
G__34776 = new cljs.core.IndexedSeq(G__34777__a,0);
}
return G__34772__4.cljs$core$IFn$_invoke$arity$variadic(a,b,c, G__34776);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__34772.cljs$lang$maxFixedArity = 3;
G__34772.cljs$lang$applyTo = G__34772__4.cljs$lang$applyTo;
G__34772.cljs$core$IFn$_invoke$arity$1 = G__34772__1;
G__34772.cljs$core$IFn$_invoke$arity$2 = G__34772__2;
G__34772.cljs$core$IFn$_invoke$arity$3 = G__34772__3;
G__34772.cljs$core$IFn$_invoke$arity$variadic = G__34772__4.cljs$core$IFn$_invoke$arity$variadic;
return G__34772;
})()
});
var fnil__3 = (function (f,x,y){
return (function() {
var G__34778 = null;
var G__34778__2 = (function (a,b){
var G__34762 = (((a == null))?x:a);
var G__34763 = (((b == null))?y:b);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__34762,G__34763) : f.call(null,G__34762,G__34763));
});
var G__34778__3 = (function (a,b,c){
var G__34764 = (((a == null))?x:a);
var G__34765 = (((b == null))?y:b);
var G__34766 = c;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__34764,G__34765,G__34766) : f.call(null,G__34764,G__34765,G__34766));
});
var G__34778__4 = (function() { 
var G__34779__delegate = function (a,b,c,ds){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,(((a == null))?x:a),(((b == null))?y:b),c,ds);
};
var G__34779 = function (a,b,c,var_args){
var ds = null;
if (arguments.length > 3) {
var G__34780__i = 0, G__34780__a = new Array(arguments.length -  3);
while (G__34780__i < G__34780__a.length) {G__34780__a[G__34780__i] = arguments[G__34780__i + 3]; ++G__34780__i;}
  ds = new cljs.core.IndexedSeq(G__34780__a,0);
} 
return G__34779__delegate.call(this,a,b,c,ds);};
G__34779.cljs$lang$maxFixedArity = 3;
G__34779.cljs$lang$applyTo = (function (arglist__34781){
var a = cljs.core.first(arglist__34781);
arglist__34781 = cljs.core.next(arglist__34781);
var b = cljs.core.first(arglist__34781);
arglist__34781 = cljs.core.next(arglist__34781);
var c = cljs.core.first(arglist__34781);
var ds = cljs.core.rest(arglist__34781);
return G__34779__delegate(a,b,c,ds);
});
G__34779.cljs$core$IFn$_invoke$arity$variadic = G__34779__delegate;
return G__34779;
})()
;
G__34778 = function(a,b,c,var_args){
var ds = var_args;
switch(arguments.length){
case 2:
return G__34778__2.call(this,a,b);
case 3:
return G__34778__3.call(this,a,b,c);
default:
var G__34782 = null;
if (arguments.length > 3) {
var G__34783__i = 0, G__34783__a = new Array(arguments.length -  3);
while (G__34783__i < G__34783__a.length) {G__34783__a[G__34783__i] = arguments[G__34783__i + 3]; ++G__34783__i;}
G__34782 = new cljs.core.IndexedSeq(G__34783__a,0);
}
return G__34778__4.cljs$core$IFn$_invoke$arity$variadic(a,b,c, G__34782);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__34778.cljs$lang$maxFixedArity = 3;
G__34778.cljs$lang$applyTo = G__34778__4.cljs$lang$applyTo;
G__34778.cljs$core$IFn$_invoke$arity$2 = G__34778__2;
G__34778.cljs$core$IFn$_invoke$arity$3 = G__34778__3;
G__34778.cljs$core$IFn$_invoke$arity$variadic = G__34778__4.cljs$core$IFn$_invoke$arity$variadic;
return G__34778;
})()
});
var fnil__4 = (function (f,x,y,z){
return (function() {
var G__34784 = null;
var G__34784__2 = (function (a,b){
var G__34767 = (((a == null))?x:a);
var G__34768 = (((b == null))?y:b);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__34767,G__34768) : f.call(null,G__34767,G__34768));
});
var G__34784__3 = (function (a,b,c){
var G__34769 = (((a == null))?x:a);
var G__34770 = (((b == null))?y:b);
var G__34771 = (((c == null))?z:c);
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__34769,G__34770,G__34771) : f.call(null,G__34769,G__34770,G__34771));
});
var G__34784__4 = (function() { 
var G__34785__delegate = function (a,b,c,ds){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,(((a == null))?x:a),(((b == null))?y:b),(((c == null))?z:c),ds);
};
var G__34785 = function (a,b,c,var_args){
var ds = null;
if (arguments.length > 3) {
var G__34786__i = 0, G__34786__a = new Array(arguments.length -  3);
while (G__34786__i < G__34786__a.length) {G__34786__a[G__34786__i] = arguments[G__34786__i + 3]; ++G__34786__i;}
  ds = new cljs.core.IndexedSeq(G__34786__a,0);
} 
return G__34785__delegate.call(this,a,b,c,ds);};
G__34785.cljs$lang$maxFixedArity = 3;
G__34785.cljs$lang$applyTo = (function (arglist__34787){
var a = cljs.core.first(arglist__34787);
arglist__34787 = cljs.core.next(arglist__34787);
var b = cljs.core.first(arglist__34787);
arglist__34787 = cljs.core.next(arglist__34787);
var c = cljs.core.first(arglist__34787);
var ds = cljs.core.rest(arglist__34787);
return G__34785__delegate(a,b,c,ds);
});
G__34785.cljs$core$IFn$_invoke$arity$variadic = G__34785__delegate;
return G__34785;
})()
;
G__34784 = function(a,b,c,var_args){
var ds = var_args;
switch(arguments.length){
case 2:
return G__34784__2.call(this,a,b);
case 3:
return G__34784__3.call(this,a,b,c);
default:
var G__34788 = null;
if (arguments.length > 3) {
var G__34789__i = 0, G__34789__a = new Array(arguments.length -  3);
while (G__34789__i < G__34789__a.length) {G__34789__a[G__34789__i] = arguments[G__34789__i + 3]; ++G__34789__i;}
G__34788 = new cljs.core.IndexedSeq(G__34789__a,0);
}
return G__34784__4.cljs$core$IFn$_invoke$arity$variadic(a,b,c, G__34788);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__34784.cljs$lang$maxFixedArity = 3;
G__34784.cljs$lang$applyTo = G__34784__4.cljs$lang$applyTo;
G__34784.cljs$core$IFn$_invoke$arity$2 = G__34784__2;
G__34784.cljs$core$IFn$_invoke$arity$3 = G__34784__3;
G__34784.cljs$core$IFn$_invoke$arity$variadic = G__34784__4.cljs$core$IFn$_invoke$arity$variadic;
return G__34784;
})()
});
fnil = function(f,x,y,z){
switch(arguments.length){
case 2:
return fnil__2.call(this,f,x);
case 3:
return fnil__3.call(this,f,x,y);
case 4:
return fnil__4.call(this,f,x,y,z);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
fnil.cljs$core$IFn$_invoke$arity$2 = fnil__2;
fnil.cljs$core$IFn$_invoke$arity$3 = fnil__3;
fnil.cljs$core$IFn$_invoke$arity$4 = fnil__4;
return fnil;
})()
;
/**
* Returns a lazy sequence consisting of the result of applying f to 0
* and the first item of coll, followed by applying f to 1 and the second
* item in coll, etc, until coll is exhausted. Thus function f should
* accept 2 arguments, index and item.
*/
cljs.core.map_indexed = (function map_indexed(f,coll){
var mapi = (function mapi(idx,coll__$1){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll__$1);
if(temp__4126__auto__){
var s = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(s)){
var c = cljs.core.chunk_first(s);
var size = cljs.core.count(c);
var b = cljs.core.chunk_buffer(size);
var n__25161__auto___34838 = size;
var i_34839 = (0);
while(true){
if((i_34839 < n__25161__auto___34838)){
cljs.core.chunk_append(b,(function (){var G__34834 = (idx + i_34839);
var G__34835 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c,i_34839);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__34834,G__34835) : f.call(null,G__34834,G__34835));
})());

var G__34840 = (i_34839 + (1));
i_34839 = G__34840;
continue;
} else {
}
break;
}

return cljs.core.chunk_cons(cljs.core.chunk(b),mapi((idx + size),cljs.core.chunk_rest(s)));
} else {
return cljs.core.cons((function (){var G__34836 = idx;
var G__34837 = cljs.core.first(s);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__34836,G__34837) : f.call(null,G__34836,G__34837));
})(),mapi((idx + (1)),cljs.core.rest(s)));
}
} else {
return null;
}
}),null,null));
});
return mapi((0),coll);
});
/**
* Returns a lazy sequence of the non-nil results of (f item). Note,
* this means false return values will be included.  f must be free of
* side-effects.  Returns a transducer when no collection is provided.
*/
cljs.core.keep = (function() {
var keep = null;
var keep__1 = (function (f){
return (function (rf){
return (function() {
var G__34859 = null;
var G__34859__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__34859__1 = (function (result){
var G__34853 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__34853) : rf.call(null,G__34853));
});
var G__34859__2 = (function (result,input){
var v = (function (){var G__34854 = input;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__34854) : f.call(null,G__34854));
})();
if((v == null)){
return result;
} else {
var G__34855 = result;
var G__34856 = v;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__34855,G__34856) : rf.call(null,G__34855,G__34856));
}
});
G__34859 = function(result,input){
switch(arguments.length){
case 0:
return G__34859__0.call(this);
case 1:
return G__34859__1.call(this,result);
case 2:
return G__34859__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__34859.cljs$core$IFn$_invoke$arity$0 = G__34859__0;
G__34859.cljs$core$IFn$_invoke$arity$1 = G__34859__1;
G__34859.cljs$core$IFn$_invoke$arity$2 = G__34859__2;
return G__34859;
})()
});
});
var keep__2 = (function (f,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(s)){
var c = cljs.core.chunk_first(s);
var size = cljs.core.count(c);
var b = cljs.core.chunk_buffer(size);
var n__25161__auto___34860 = size;
var i_34861 = (0);
while(true){
if((i_34861 < n__25161__auto___34860)){
var x_34862 = (function (){var G__34857 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c,i_34861);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__34857) : f.call(null,G__34857));
})();
if((x_34862 == null)){
} else {
cljs.core.chunk_append(b,x_34862);
}

var G__34863 = (i_34861 + (1));
i_34861 = G__34863;
continue;
} else {
}
break;
}

return cljs.core.chunk_cons(cljs.core.chunk(b),keep.cljs$core$IFn$_invoke$arity$2(f,cljs.core.chunk_rest(s)));
} else {
var x = (function (){var G__34858 = cljs.core.first(s);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__34858) : f.call(null,G__34858));
})();
if((x == null)){
return keep.cljs$core$IFn$_invoke$arity$2(f,cljs.core.rest(s));
} else {
return cljs.core.cons(x,keep.cljs$core$IFn$_invoke$arity$2(f,cljs.core.rest(s)));
}
}
} else {
return null;
}
}),null,null));
});
keep = function(f,coll){
switch(arguments.length){
case 1:
return keep__1.call(this,f);
case 2:
return keep__2.call(this,f,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
keep.cljs$core$IFn$_invoke$arity$1 = keep__1;
keep.cljs$core$IFn$_invoke$arity$2 = keep__2;
return keep;
})()
;

/**
* @constructor
*/
cljs.core.Atom = (function (state,meta,validator,watches){
this.state = state;
this.meta = meta;
this.validator = validator;
this.watches = watches;
this.cljs$lang$protocol_mask$partition0$ = 6455296;
this.cljs$lang$protocol_mask$partition1$ = 16386;
})
cljs.core.Atom.prototype.cljs$core$IHash$_hash$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
var G__34864 = this$__$1;
return goog.getUid(G__34864);
});

cljs.core.Atom.prototype.cljs$core$IWatchable$_notify_watches$arity$3 = (function (this$,oldval,newval){
var self__ = this;
var this$__$1 = this;
var seq__34865 = cljs.core.seq(self__.watches);
var chunk__34866 = null;
var count__34867 = (0);
var i__34868 = (0);
while(true){
if((i__34868 < count__34867)){
var vec__34869 = chunk__34866.cljs$core$IIndexed$_nth$arity$2(null,i__34868);
var key = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__34869,(0),null);
var f = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__34869,(1),null);
var G__34870_34879 = key;
var G__34871_34880 = this$__$1;
var G__34872_34881 = oldval;
var G__34873_34882 = newval;
(f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__34870_34879,G__34871_34880,G__34872_34881,G__34873_34882) : f.call(null,G__34870_34879,G__34871_34880,G__34872_34881,G__34873_34882));

var G__34883 = seq__34865;
var G__34884 = chunk__34866;
var G__34885 = count__34867;
var G__34886 = (i__34868 + (1));
seq__34865 = G__34883;
chunk__34866 = G__34884;
count__34867 = G__34885;
i__34868 = G__34886;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__34865);
if(temp__4126__auto__){
var seq__34865__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__34865__$1)){
var c__25061__auto__ = cljs.core.chunk_first(seq__34865__$1);
var G__34887 = cljs.core.chunk_rest(seq__34865__$1);
var G__34888 = c__25061__auto__;
var G__34889 = cljs.core.count(c__25061__auto__);
var G__34890 = (0);
seq__34865 = G__34887;
chunk__34866 = G__34888;
count__34867 = G__34889;
i__34868 = G__34890;
continue;
} else {
var vec__34874 = cljs.core.first(seq__34865__$1);
var key = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__34874,(0),null);
var f = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__34874,(1),null);
var G__34875_34891 = key;
var G__34876_34892 = this$__$1;
var G__34877_34893 = oldval;
var G__34878_34894 = newval;
(f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__34875_34891,G__34876_34892,G__34877_34893,G__34878_34894) : f.call(null,G__34875_34891,G__34876_34892,G__34877_34893,G__34878_34894));

var G__34895 = cljs.core.next(seq__34865__$1);
var G__34896 = null;
var G__34897 = (0);
var G__34898 = (0);
seq__34865 = G__34895;
chunk__34866 = G__34896;
count__34867 = G__34897;
i__34868 = G__34898;
continue;
}
} else {
return null;
}
}
break;
}
});

cljs.core.Atom.prototype.cljs$core$IWatchable$_add_watch$arity$3 = (function (this$,key,f){
var self__ = this;
var this$__$1 = this;
this$__$1.watches = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.watches,key,f);

return this$__$1;
});

cljs.core.Atom.prototype.cljs$core$IWatchable$_remove_watch$arity$2 = (function (this$,key){
var self__ = this;
var this$__$1 = this;
return this$__$1.watches = cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(self__.watches,key);
});

cljs.core.Atom.prototype.cljs$core$IMeta$_meta$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.meta;
});

cljs.core.Atom.prototype.cljs$core$IDeref$_deref$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.state;
});

cljs.core.Atom.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (o,other){
var self__ = this;
var o__$1 = this;
return (o__$1 === other);
});

cljs.core.Atom.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.Atom.cljs$lang$type = true;

cljs.core.Atom.cljs$lang$ctorStr = "cljs.core/Atom";

cljs.core.Atom.cljs$lang$ctorPrWriter = (function (this__24861__auto__,writer__24862__auto__,opt__24863__auto__){
return cljs.core._write(writer__24862__auto__,"cljs.core/Atom");
});

cljs.core.__GT_Atom = (function __GT_Atom(state,meta,validator,watches){
return (new cljs.core.Atom(state,meta,validator,watches));
});

/**
* Creates and returns an Atom with an initial value of x and zero or
* more options (in any order):
* 
* :meta metadata-map
* 
* :validator validate-fn
* 
* If metadata-map is supplied, it will be come the metadata on the
* atom. validate-fn must be nil or a side-effect-free fn of one
* argument, which will be passed the intended new state on any state
* change. If the new state is unacceptable, the validate-fn should
* return false or throw an Error.  If either of these error conditions
* occur, then the value of the atom will not change.
* @param {...*} var_args
*/
cljs.core.atom = (function() {
var atom = null;
var atom__1 = (function (x){
return (new cljs.core.Atom(x,null,null,null));
});
var atom__2 = (function() { 
var G__34902__delegate = function (x,p__34899){
var map__34901 = p__34899;
var map__34901__$1 = ((cljs.core.seq_QMARK_(map__34901))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__34901):map__34901);
var validator = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__34901__$1,new cljs.core.Keyword(null,"validator","validator",-1966190681));
var meta = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__34901__$1,new cljs.core.Keyword(null,"meta","meta",1499536964));
return (new cljs.core.Atom(x,meta,validator,null));
};
var G__34902 = function (x,var_args){
var p__34899 = null;
if (arguments.length > 1) {
var G__34903__i = 0, G__34903__a = new Array(arguments.length -  1);
while (G__34903__i < G__34903__a.length) {G__34903__a[G__34903__i] = arguments[G__34903__i + 1]; ++G__34903__i;}
  p__34899 = new cljs.core.IndexedSeq(G__34903__a,0);
} 
return G__34902__delegate.call(this,x,p__34899);};
G__34902.cljs$lang$maxFixedArity = 1;
G__34902.cljs$lang$applyTo = (function (arglist__34904){
var x = cljs.core.first(arglist__34904);
var p__34899 = cljs.core.rest(arglist__34904);
return G__34902__delegate(x,p__34899);
});
G__34902.cljs$core$IFn$_invoke$arity$variadic = G__34902__delegate;
return G__34902;
})()
;
atom = function(x,var_args){
var p__34899 = var_args;
switch(arguments.length){
case 1:
return atom__1.call(this,x);
default:
var G__34905 = null;
if (arguments.length > 1) {
var G__34906__i = 0, G__34906__a = new Array(arguments.length -  1);
while (G__34906__i < G__34906__a.length) {G__34906__a[G__34906__i] = arguments[G__34906__i + 1]; ++G__34906__i;}
G__34905 = new cljs.core.IndexedSeq(G__34906__a,0);
}
return atom__2.cljs$core$IFn$_invoke$arity$variadic(x, G__34905);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
atom.cljs$lang$maxFixedArity = 1;
atom.cljs$lang$applyTo = atom__2.cljs$lang$applyTo;
atom.cljs$core$IFn$_invoke$arity$1 = atom__1;
atom.cljs$core$IFn$_invoke$arity$variadic = atom__2.cljs$core$IFn$_invoke$arity$variadic;
return atom;
})()
;
/**
* Sets the value of atom to newval without regard for the
* current value. Returns newval.
*/
cljs.core.reset_BANG_ = (function reset_BANG_(a,new_value){
if((a instanceof cljs.core.Atom)){
var validate = a.validator;
if((validate == null)){
} else {
if(cljs.core.truth_((function (){var G__34909 = new_value;
return (validate.cljs$core$IFn$_invoke$arity$1 ? validate.cljs$core$IFn$_invoke$arity$1(G__34909) : validate.call(null,G__34909));
})())){
} else {
throw (new Error([cljs.core.str("Assert failed: "),cljs.core.str("Validator rejected reference state"),cljs.core.str("\n"),cljs.core.str((function (){var G__34910 = cljs.core.list(new cljs.core.Symbol(null,"validate","validate",1439230700,null),new cljs.core.Symbol(null,"new-value","new-value",-1567397401,null));
return (cljs.core.pr_str.cljs$core$IFn$_invoke$arity$1 ? cljs.core.pr_str.cljs$core$IFn$_invoke$arity$1(G__34910) : cljs.core.pr_str.call(null,G__34910));
})())].join('')));
}
}

var old_value = a.state;
a.state = new_value;

if((a.watches == null)){
} else {
cljs.core._notify_watches(a,old_value,new_value);
}

return new_value;
} else {
return cljs.core._reset_BANG_(a,new_value);
}
});
/**
* Atomically swaps the value of atom to be:
* (apply f current-value-of-atom args). Note that f may be called
* multiple times, and thus should be free of side effects.  Returns
* the value that was swapped in.
* @param {...*} var_args
*/
cljs.core.swap_BANG_ = (function() {
var swap_BANG_ = null;
var swap_BANG___2 = (function (a,f){
if((a instanceof cljs.core.Atom)){
return cljs.core.reset_BANG_(a,(function (){var G__34917 = a.state;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__34917) : f.call(null,G__34917));
})());
} else {
return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$2(a,f);
}
});
var swap_BANG___3 = (function (a,f,x){
if((a instanceof cljs.core.Atom)){
return cljs.core.reset_BANG_(a,(function (){var G__34918 = a.state;
var G__34919 = x;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__34918,G__34919) : f.call(null,G__34918,G__34919));
})());
} else {
return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$3(a,f,x);
}
});
var swap_BANG___4 = (function (a,f,x,y){
if((a instanceof cljs.core.Atom)){
return cljs.core.reset_BANG_(a,(function (){var G__34920 = a.state;
var G__34921 = x;
var G__34922 = y;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__34920,G__34921,G__34922) : f.call(null,G__34920,G__34921,G__34922));
})());
} else {
return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$4(a,f,x,y);
}
});
var swap_BANG___5 = (function() { 
var G__34923__delegate = function (a,f,x,y,more){
if((a instanceof cljs.core.Atom)){
return cljs.core.reset_BANG_(a,cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,a.state,x,y,more));
} else {
return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$5(a,f,x,y,more);
}
};
var G__34923 = function (a,f,x,y,var_args){
var more = null;
if (arguments.length > 4) {
var G__34924__i = 0, G__34924__a = new Array(arguments.length -  4);
while (G__34924__i < G__34924__a.length) {G__34924__a[G__34924__i] = arguments[G__34924__i + 4]; ++G__34924__i;}
  more = new cljs.core.IndexedSeq(G__34924__a,0);
} 
return G__34923__delegate.call(this,a,f,x,y,more);};
G__34923.cljs$lang$maxFixedArity = 4;
G__34923.cljs$lang$applyTo = (function (arglist__34925){
var a = cljs.core.first(arglist__34925);
arglist__34925 = cljs.core.next(arglist__34925);
var f = cljs.core.first(arglist__34925);
arglist__34925 = cljs.core.next(arglist__34925);
var x = cljs.core.first(arglist__34925);
arglist__34925 = cljs.core.next(arglist__34925);
var y = cljs.core.first(arglist__34925);
var more = cljs.core.rest(arglist__34925);
return G__34923__delegate(a,f,x,y,more);
});
G__34923.cljs$core$IFn$_invoke$arity$variadic = G__34923__delegate;
return G__34923;
})()
;
swap_BANG_ = function(a,f,x,y,var_args){
var more = var_args;
switch(arguments.length){
case 2:
return swap_BANG___2.call(this,a,f);
case 3:
return swap_BANG___3.call(this,a,f,x);
case 4:
return swap_BANG___4.call(this,a,f,x,y);
default:
var G__34926 = null;
if (arguments.length > 4) {
var G__34927__i = 0, G__34927__a = new Array(arguments.length -  4);
while (G__34927__i < G__34927__a.length) {G__34927__a[G__34927__i] = arguments[G__34927__i + 4]; ++G__34927__i;}
G__34926 = new cljs.core.IndexedSeq(G__34927__a,0);
}
return swap_BANG___5.cljs$core$IFn$_invoke$arity$variadic(a,f,x,y, G__34926);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
swap_BANG_.cljs$lang$maxFixedArity = 4;
swap_BANG_.cljs$lang$applyTo = swap_BANG___5.cljs$lang$applyTo;
swap_BANG_.cljs$core$IFn$_invoke$arity$2 = swap_BANG___2;
swap_BANG_.cljs$core$IFn$_invoke$arity$3 = swap_BANG___3;
swap_BANG_.cljs$core$IFn$_invoke$arity$4 = swap_BANG___4;
swap_BANG_.cljs$core$IFn$_invoke$arity$variadic = swap_BANG___5.cljs$core$IFn$_invoke$arity$variadic;
return swap_BANG_;
})()
;
/**
* Atomically sets the value of atom to newval if and only if the
* current value of the atom is equal to oldval. Returns true if
* set happened, else false.
*/
cljs.core.compare_and_set_BANG_ = (function compare_and_set_BANG_(a,oldval,newval){
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(a.cljs$core$IDeref$_deref$arity$1(null),oldval)){
cljs.core.reset_BANG_(a,newval);

return true;
} else {
return false;
}
});
/**
* Sets the validator-fn for an atom. validator-fn must be nil or a
* side-effect-free fn of one argument, which will be passed the intended
* new state on any state change. If the new state is unacceptable, the
* validator-fn should return false or throw an Error. If the current state
* is not acceptable to the new validator, an Error will be thrown and the
* validator will not be changed.
*/
cljs.core.set_validator_BANG_ = (function set_validator_BANG_(iref,val){
return iref.validator = val;
});
/**
* Gets the validator-fn for a var/ref/agent/atom.
*/
cljs.core.get_validator = (function get_validator(iref){
return iref.validator;
});

/**
* @constructor
*/
cljs.core.Volatile = (function (state){
this.state = state;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32768;
})
cljs.core.Volatile.prototype.cljs$core$IDeref$_deref$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.state;
});

cljs.core.Volatile.prototype.cljs$core$IVolatile$ = true;

cljs.core.Volatile.prototype.cljs$core$IVolatile$_vreset_BANG_$arity$2 = (function (_,new_state){
var self__ = this;
var ___$1 = this;
return self__.state = new_state;
});

cljs.core.Volatile.cljs$lang$type = true;

cljs.core.Volatile.cljs$lang$ctorStr = "cljs.core/Volatile";

cljs.core.Volatile.cljs$lang$ctorPrWriter = (function (this__24861__auto__,writer__24862__auto__,opt__24863__auto__){
return cljs.core._write(writer__24862__auto__,"cljs.core/Volatile");
});

cljs.core.__GT_Volatile = (function __GT_Volatile(state){
return (new cljs.core.Volatile(state));
});

/**
* Creates and returns a Volatile with an initial value of val.
*/
cljs.core.volatile_BANG_ = (function volatile_BANG_(val){
return (new cljs.core.Volatile(val));
});
/**
* Returns true if x is a volatile.
*/
cljs.core.volatile_QMARK_ = (function volatile_QMARK_(x){
return (x instanceof cljs.core.Volatile);
});
/**
* Sets the value of volatile to newval without regard for the
* current value. Returns newval.
*/
cljs.core.vreset_BANG_ = (function vreset_BANG_(vol,newval){
return cljs.core._vreset_BANG_(vol,newval);
});
/**
* Returns a lazy sequence of the non-nil results of (f index item). Note,
* this means false return values will be included.  f must be free of
* side-effects.  Returns a stateful transducer when no collection is
* provided.
*/
cljs.core.keep_indexed = (function() {
var keep_indexed = null;
var keep_indexed__1 = (function (f){
return (function (rf){
var ia = cljs.core.volatile_BANG_((-1));
return ((function (ia){
return (function() {
var G__34994 = null;
var G__34994__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__34994__1 = (function (result){
var G__34961 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__34961) : rf.call(null,G__34961));
});
var G__34994__2 = (function (result,input){
var i = ia.cljs$core$IVolatile$_vreset_BANG_$arity$2(null,(ia.cljs$core$IDeref$_deref$arity$1(null) + (1)));
var v = (function (){var G__34962 = i;
var G__34963 = input;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__34962,G__34963) : f.call(null,G__34962,G__34963));
})();
if((v == null)){
return result;
} else {
var G__34964 = result;
var G__34965 = v;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__34964,G__34965) : rf.call(null,G__34964,G__34965));
}
});
G__34994 = function(result,input){
switch(arguments.length){
case 0:
return G__34994__0.call(this);
case 1:
return G__34994__1.call(this,result);
case 2:
return G__34994__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__34994.cljs$core$IFn$_invoke$arity$0 = G__34994__0;
G__34994.cljs$core$IFn$_invoke$arity$1 = G__34994__1;
G__34994.cljs$core$IFn$_invoke$arity$2 = G__34994__2;
return G__34994;
})()
;})(ia))
});
});
var keep_indexed__2 = (function (f,coll){
var keepi = (function keepi(idx,coll__$1){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll__$1);
if(temp__4126__auto__){
var s = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(s)){
var c = cljs.core.chunk_first(s);
var size = cljs.core.count(c);
var b = cljs.core.chunk_buffer(size);
var n__25161__auto___34995 = size;
var i_34996 = (0);
while(true){
if((i_34996 < n__25161__auto___34995)){
var x_34997 = (function (){var G__34990 = (idx + i_34996);
var G__34991 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c,i_34996);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__34990,G__34991) : f.call(null,G__34990,G__34991));
})();
if((x_34997 == null)){
} else {
cljs.core.chunk_append(b,x_34997);
}

var G__34998 = (i_34996 + (1));
i_34996 = G__34998;
continue;
} else {
}
break;
}

return cljs.core.chunk_cons(cljs.core.chunk(b),keepi((idx + size),cljs.core.chunk_rest(s)));
} else {
var x = (function (){var G__34992 = idx;
var G__34993 = cljs.core.first(s);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__34992,G__34993) : f.call(null,G__34992,G__34993));
})();
if((x == null)){
return keepi((idx + (1)),cljs.core.rest(s));
} else {
return cljs.core.cons(x,keepi((idx + (1)),cljs.core.rest(s)));
}
}
} else {
return null;
}
}),null,null));
});
return keepi((0),coll);
});
keep_indexed = function(f,coll){
switch(arguments.length){
case 1:
return keep_indexed__1.call(this,f);
case 2:
return keep_indexed__2.call(this,f,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
keep_indexed.cljs$core$IFn$_invoke$arity$1 = keep_indexed__1;
keep_indexed.cljs$core$IFn$_invoke$arity$2 = keep_indexed__2;
return keep_indexed;
})()
;
/**
* Takes a set of predicates and returns a function f that returns true if all of its
* composing predicates return a logical true value against all of its arguments, else it returns
* false. Note that f is short-circuiting in that it will stop execution on the first
* argument that triggers a logical false result against the original predicates.
* @param {...*} var_args
*/
cljs.core.every_pred = (function() {
var every_pred = null;
var every_pred__1 = (function (p){
return (function() {
var ep1 = null;
var ep1__0 = (function (){
return true;
});
var ep1__1 = (function (x){
return cljs.core.boolean$((function (){var G__35212 = x;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__35212) : p.call(null,G__35212));
})());
});
var ep1__2 = (function (x,y){
return cljs.core.boolean$((function (){var and__24262__auto__ = (function (){var G__35214 = x;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__35214) : p.call(null,G__35214));
})();
if(cljs.core.truth_(and__24262__auto__)){
var G__35215 = y;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__35215) : p.call(null,G__35215));
} else {
return and__24262__auto__;
}
})());
});
var ep1__3 = (function (x,y,z){
return cljs.core.boolean$((function (){var and__24262__auto__ = (function (){var G__35217 = x;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__35217) : p.call(null,G__35217));
})();
if(cljs.core.truth_(and__24262__auto__)){
var and__24262__auto____$1 = (function (){var G__35219 = y;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__35219) : p.call(null,G__35219));
})();
if(cljs.core.truth_(and__24262__auto____$1)){
var G__35220 = z;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__35220) : p.call(null,G__35220));
} else {
return and__24262__auto____$1;
}
} else {
return and__24262__auto__;
}
})());
});
var ep1__4 = (function() { 
var G__35389__delegate = function (x,y,z,args){
return cljs.core.boolean$((ep1.cljs$core$IFn$_invoke$arity$3(x,y,z)) && (cljs.core.every_QMARK_(p,args)));
};
var G__35389 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__35390__i = 0, G__35390__a = new Array(arguments.length -  3);
while (G__35390__i < G__35390__a.length) {G__35390__a[G__35390__i] = arguments[G__35390__i + 3]; ++G__35390__i;}
  args = new cljs.core.IndexedSeq(G__35390__a,0);
} 
return G__35389__delegate.call(this,x,y,z,args);};
G__35389.cljs$lang$maxFixedArity = 3;
G__35389.cljs$lang$applyTo = (function (arglist__35391){
var x = cljs.core.first(arglist__35391);
arglist__35391 = cljs.core.next(arglist__35391);
var y = cljs.core.first(arglist__35391);
arglist__35391 = cljs.core.next(arglist__35391);
var z = cljs.core.first(arglist__35391);
var args = cljs.core.rest(arglist__35391);
return G__35389__delegate(x,y,z,args);
});
G__35389.cljs$core$IFn$_invoke$arity$variadic = G__35389__delegate;
return G__35389;
})()
;
ep1 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return ep1__0.call(this);
case 1:
return ep1__1.call(this,x);
case 2:
return ep1__2.call(this,x,y);
case 3:
return ep1__3.call(this,x,y,z);
default:
var G__35392 = null;
if (arguments.length > 3) {
var G__35393__i = 0, G__35393__a = new Array(arguments.length -  3);
while (G__35393__i < G__35393__a.length) {G__35393__a[G__35393__i] = arguments[G__35393__i + 3]; ++G__35393__i;}
G__35392 = new cljs.core.IndexedSeq(G__35393__a,0);
}
return ep1__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__35392);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
ep1.cljs$lang$maxFixedArity = 3;
ep1.cljs$lang$applyTo = ep1__4.cljs$lang$applyTo;
ep1.cljs$core$IFn$_invoke$arity$0 = ep1__0;
ep1.cljs$core$IFn$_invoke$arity$1 = ep1__1;
ep1.cljs$core$IFn$_invoke$arity$2 = ep1__2;
ep1.cljs$core$IFn$_invoke$arity$3 = ep1__3;
ep1.cljs$core$IFn$_invoke$arity$variadic = ep1__4.cljs$core$IFn$_invoke$arity$variadic;
return ep1;
})()
});
var every_pred__2 = (function (p1,p2){
return (function() {
var ep2 = null;
var ep2__0 = (function (){
return true;
});
var ep2__1 = (function (x){
return cljs.core.boolean$((function (){var and__24262__auto__ = (function (){var G__35252 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__35252) : p1.call(null,G__35252));
})();
if(cljs.core.truth_(and__24262__auto__)){
var G__35253 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__35253) : p2.call(null,G__35253));
} else {
return and__24262__auto__;
}
})());
});
var ep2__2 = (function (x,y){
return cljs.core.boolean$((function (){var and__24262__auto__ = (function (){var G__35255 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__35255) : p1.call(null,G__35255));
})();
if(cljs.core.truth_(and__24262__auto__)){
var and__24262__auto____$1 = (function (){var G__35257 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__35257) : p1.call(null,G__35257));
})();
if(cljs.core.truth_(and__24262__auto____$1)){
var and__24262__auto____$2 = (function (){var G__35259 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__35259) : p2.call(null,G__35259));
})();
if(cljs.core.truth_(and__24262__auto____$2)){
var G__35260 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__35260) : p2.call(null,G__35260));
} else {
return and__24262__auto____$2;
}
} else {
return and__24262__auto____$1;
}
} else {
return and__24262__auto__;
}
})());
});
var ep2__3 = (function (x,y,z){
return cljs.core.boolean$((function (){var and__24262__auto__ = (function (){var G__35262 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__35262) : p1.call(null,G__35262));
})();
if(cljs.core.truth_(and__24262__auto__)){
var and__24262__auto____$1 = (function (){var G__35264 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__35264) : p1.call(null,G__35264));
})();
if(cljs.core.truth_(and__24262__auto____$1)){
var and__24262__auto____$2 = (function (){var G__35266 = z;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__35266) : p1.call(null,G__35266));
})();
if(cljs.core.truth_(and__24262__auto____$2)){
var and__24262__auto____$3 = (function (){var G__35268 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__35268) : p2.call(null,G__35268));
})();
if(cljs.core.truth_(and__24262__auto____$3)){
var and__24262__auto____$4 = (function (){var G__35270 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__35270) : p2.call(null,G__35270));
})();
if(cljs.core.truth_(and__24262__auto____$4)){
var G__35271 = z;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__35271) : p2.call(null,G__35271));
} else {
return and__24262__auto____$4;
}
} else {
return and__24262__auto____$3;
}
} else {
return and__24262__auto____$2;
}
} else {
return and__24262__auto____$1;
}
} else {
return and__24262__auto__;
}
})());
});
var ep2__4 = (function() { 
var G__35394__delegate = function (x,y,z,args){
return cljs.core.boolean$((ep2.cljs$core$IFn$_invoke$arity$3(x,y,z)) && (cljs.core.every_QMARK_((function (p1__34999_SHARP_){
var and__24262__auto__ = (function (){var G__35276 = p1__34999_SHARP_;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__35276) : p1.call(null,G__35276));
})();
if(cljs.core.truth_(and__24262__auto__)){
var G__35277 = p1__34999_SHARP_;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__35277) : p2.call(null,G__35277));
} else {
return and__24262__auto__;
}
}),args)));
};
var G__35394 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__35395__i = 0, G__35395__a = new Array(arguments.length -  3);
while (G__35395__i < G__35395__a.length) {G__35395__a[G__35395__i] = arguments[G__35395__i + 3]; ++G__35395__i;}
  args = new cljs.core.IndexedSeq(G__35395__a,0);
} 
return G__35394__delegate.call(this,x,y,z,args);};
G__35394.cljs$lang$maxFixedArity = 3;
G__35394.cljs$lang$applyTo = (function (arglist__35396){
var x = cljs.core.first(arglist__35396);
arglist__35396 = cljs.core.next(arglist__35396);
var y = cljs.core.first(arglist__35396);
arglist__35396 = cljs.core.next(arglist__35396);
var z = cljs.core.first(arglist__35396);
var args = cljs.core.rest(arglist__35396);
return G__35394__delegate(x,y,z,args);
});
G__35394.cljs$core$IFn$_invoke$arity$variadic = G__35394__delegate;
return G__35394;
})()
;
ep2 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return ep2__0.call(this);
case 1:
return ep2__1.call(this,x);
case 2:
return ep2__2.call(this,x,y);
case 3:
return ep2__3.call(this,x,y,z);
default:
var G__35397 = null;
if (arguments.length > 3) {
var G__35398__i = 0, G__35398__a = new Array(arguments.length -  3);
while (G__35398__i < G__35398__a.length) {G__35398__a[G__35398__i] = arguments[G__35398__i + 3]; ++G__35398__i;}
G__35397 = new cljs.core.IndexedSeq(G__35398__a,0);
}
return ep2__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__35397);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
ep2.cljs$lang$maxFixedArity = 3;
ep2.cljs$lang$applyTo = ep2__4.cljs$lang$applyTo;
ep2.cljs$core$IFn$_invoke$arity$0 = ep2__0;
ep2.cljs$core$IFn$_invoke$arity$1 = ep2__1;
ep2.cljs$core$IFn$_invoke$arity$2 = ep2__2;
ep2.cljs$core$IFn$_invoke$arity$3 = ep2__3;
ep2.cljs$core$IFn$_invoke$arity$variadic = ep2__4.cljs$core$IFn$_invoke$arity$variadic;
return ep2;
})()
});
var every_pred__3 = (function (p1,p2,p3){
return (function() {
var ep3 = null;
var ep3__0 = (function (){
return true;
});
var ep3__1 = (function (x){
return cljs.core.boolean$((function (){var and__24262__auto__ = (function (){var G__35323 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__35323) : p1.call(null,G__35323));
})();
if(cljs.core.truth_(and__24262__auto__)){
var and__24262__auto____$1 = (function (){var G__35325 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__35325) : p2.call(null,G__35325));
})();
if(cljs.core.truth_(and__24262__auto____$1)){
var G__35326 = x;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__35326) : p3.call(null,G__35326));
} else {
return and__24262__auto____$1;
}
} else {
return and__24262__auto__;
}
})());
});
var ep3__2 = (function (x,y){
return cljs.core.boolean$((function (){var and__24262__auto__ = (function (){var G__35328 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__35328) : p1.call(null,G__35328));
})();
if(cljs.core.truth_(and__24262__auto__)){
var and__24262__auto____$1 = (function (){var G__35330 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__35330) : p2.call(null,G__35330));
})();
if(cljs.core.truth_(and__24262__auto____$1)){
var and__24262__auto____$2 = (function (){var G__35332 = x;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__35332) : p3.call(null,G__35332));
})();
if(cljs.core.truth_(and__24262__auto____$2)){
var and__24262__auto____$3 = (function (){var G__35334 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__35334) : p1.call(null,G__35334));
})();
if(cljs.core.truth_(and__24262__auto____$3)){
var and__24262__auto____$4 = (function (){var G__35336 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__35336) : p2.call(null,G__35336));
})();
if(cljs.core.truth_(and__24262__auto____$4)){
var G__35337 = y;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__35337) : p3.call(null,G__35337));
} else {
return and__24262__auto____$4;
}
} else {
return and__24262__auto____$3;
}
} else {
return and__24262__auto____$2;
}
} else {
return and__24262__auto____$1;
}
} else {
return and__24262__auto__;
}
})());
});
var ep3__3 = (function (x,y,z){
return cljs.core.boolean$((function (){var and__24262__auto__ = (function (){var G__35339 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__35339) : p1.call(null,G__35339));
})();
if(cljs.core.truth_(and__24262__auto__)){
var and__24262__auto____$1 = (function (){var G__35341 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__35341) : p2.call(null,G__35341));
})();
if(cljs.core.truth_(and__24262__auto____$1)){
var and__24262__auto____$2 = (function (){var G__35343 = x;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__35343) : p3.call(null,G__35343));
})();
if(cljs.core.truth_(and__24262__auto____$2)){
var and__24262__auto____$3 = (function (){var G__35345 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__35345) : p1.call(null,G__35345));
})();
if(cljs.core.truth_(and__24262__auto____$3)){
var and__24262__auto____$4 = (function (){var G__35347 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__35347) : p2.call(null,G__35347));
})();
if(cljs.core.truth_(and__24262__auto____$4)){
var and__24262__auto____$5 = (function (){var G__35349 = y;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__35349) : p3.call(null,G__35349));
})();
if(cljs.core.truth_(and__24262__auto____$5)){
var and__24262__auto____$6 = (function (){var G__35351 = z;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__35351) : p1.call(null,G__35351));
})();
if(cljs.core.truth_(and__24262__auto____$6)){
var and__24262__auto____$7 = (function (){var G__35353 = z;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__35353) : p2.call(null,G__35353));
})();
if(cljs.core.truth_(and__24262__auto____$7)){
var G__35354 = z;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__35354) : p3.call(null,G__35354));
} else {
return and__24262__auto____$7;
}
} else {
return and__24262__auto____$6;
}
} else {
return and__24262__auto____$5;
}
} else {
return and__24262__auto____$4;
}
} else {
return and__24262__auto____$3;
}
} else {
return and__24262__auto____$2;
}
} else {
return and__24262__auto____$1;
}
} else {
return and__24262__auto__;
}
})());
});
var ep3__4 = (function() { 
var G__35399__delegate = function (x,y,z,args){
return cljs.core.boolean$((ep3.cljs$core$IFn$_invoke$arity$3(x,y,z)) && (cljs.core.every_QMARK_((function (p1__35000_SHARP_){
var and__24262__auto__ = (function (){var G__35361 = p1__35000_SHARP_;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__35361) : p1.call(null,G__35361));
})();
if(cljs.core.truth_(and__24262__auto__)){
var and__24262__auto____$1 = (function (){var G__35363 = p1__35000_SHARP_;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__35363) : p2.call(null,G__35363));
})();
if(cljs.core.truth_(and__24262__auto____$1)){
var G__35364 = p1__35000_SHARP_;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__35364) : p3.call(null,G__35364));
} else {
return and__24262__auto____$1;
}
} else {
return and__24262__auto__;
}
}),args)));
};
var G__35399 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__35400__i = 0, G__35400__a = new Array(arguments.length -  3);
while (G__35400__i < G__35400__a.length) {G__35400__a[G__35400__i] = arguments[G__35400__i + 3]; ++G__35400__i;}
  args = new cljs.core.IndexedSeq(G__35400__a,0);
} 
return G__35399__delegate.call(this,x,y,z,args);};
G__35399.cljs$lang$maxFixedArity = 3;
G__35399.cljs$lang$applyTo = (function (arglist__35401){
var x = cljs.core.first(arglist__35401);
arglist__35401 = cljs.core.next(arglist__35401);
var y = cljs.core.first(arglist__35401);
arglist__35401 = cljs.core.next(arglist__35401);
var z = cljs.core.first(arglist__35401);
var args = cljs.core.rest(arglist__35401);
return G__35399__delegate(x,y,z,args);
});
G__35399.cljs$core$IFn$_invoke$arity$variadic = G__35399__delegate;
return G__35399;
})()
;
ep3 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return ep3__0.call(this);
case 1:
return ep3__1.call(this,x);
case 2:
return ep3__2.call(this,x,y);
case 3:
return ep3__3.call(this,x,y,z);
default:
var G__35402 = null;
if (arguments.length > 3) {
var G__35403__i = 0, G__35403__a = new Array(arguments.length -  3);
while (G__35403__i < G__35403__a.length) {G__35403__a[G__35403__i] = arguments[G__35403__i + 3]; ++G__35403__i;}
G__35402 = new cljs.core.IndexedSeq(G__35403__a,0);
}
return ep3__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__35402);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
ep3.cljs$lang$maxFixedArity = 3;
ep3.cljs$lang$applyTo = ep3__4.cljs$lang$applyTo;
ep3.cljs$core$IFn$_invoke$arity$0 = ep3__0;
ep3.cljs$core$IFn$_invoke$arity$1 = ep3__1;
ep3.cljs$core$IFn$_invoke$arity$2 = ep3__2;
ep3.cljs$core$IFn$_invoke$arity$3 = ep3__3;
ep3.cljs$core$IFn$_invoke$arity$variadic = ep3__4.cljs$core$IFn$_invoke$arity$variadic;
return ep3;
})()
});
var every_pred__4 = (function() { 
var G__35404__delegate = function (p1,p2,p3,ps){
var ps__$1 = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(p1,p2,p3,ps);
return ((function (ps__$1){
return (function() {
var epn = null;
var epn__0 = (function (){
return true;
});
var epn__1 = (function (x){
return cljs.core.every_QMARK_(((function (ps__$1){
return (function (p1__35001_SHARP_){
var G__35380 = x;
return (p1__35001_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__35001_SHARP_.cljs$core$IFn$_invoke$arity$1(G__35380) : p1__35001_SHARP_.call(null,G__35380));
});})(ps__$1))
,ps__$1);
});
var epn__2 = (function (x,y){
return cljs.core.every_QMARK_(((function (ps__$1){
return (function (p1__35002_SHARP_){
var and__24262__auto__ = (function (){var G__35382 = x;
return (p1__35002_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__35002_SHARP_.cljs$core$IFn$_invoke$arity$1(G__35382) : p1__35002_SHARP_.call(null,G__35382));
})();
if(cljs.core.truth_(and__24262__auto__)){
var G__35383 = y;
return (p1__35002_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__35002_SHARP_.cljs$core$IFn$_invoke$arity$1(G__35383) : p1__35002_SHARP_.call(null,G__35383));
} else {
return and__24262__auto__;
}
});})(ps__$1))
,ps__$1);
});
var epn__3 = (function (x,y,z){
return cljs.core.every_QMARK_(((function (ps__$1){
return (function (p1__35003_SHARP_){
var and__24262__auto__ = (function (){var G__35385 = x;
return (p1__35003_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__35003_SHARP_.cljs$core$IFn$_invoke$arity$1(G__35385) : p1__35003_SHARP_.call(null,G__35385));
})();
if(cljs.core.truth_(and__24262__auto__)){
var and__24262__auto____$1 = (function (){var G__35387 = y;
return (p1__35003_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__35003_SHARP_.cljs$core$IFn$_invoke$arity$1(G__35387) : p1__35003_SHARP_.call(null,G__35387));
})();
if(cljs.core.truth_(and__24262__auto____$1)){
var G__35388 = z;
return (p1__35003_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__35003_SHARP_.cljs$core$IFn$_invoke$arity$1(G__35388) : p1__35003_SHARP_.call(null,G__35388));
} else {
return and__24262__auto____$1;
}
} else {
return and__24262__auto__;
}
});})(ps__$1))
,ps__$1);
});
var epn__4 = (function() { 
var G__35405__delegate = function (x,y,z,args){
return cljs.core.boolean$((epn.cljs$core$IFn$_invoke$arity$3(x,y,z)) && (cljs.core.every_QMARK_(((function (ps__$1){
return (function (p1__35004_SHARP_){
return cljs.core.every_QMARK_(p1__35004_SHARP_,args);
});})(ps__$1))
,ps__$1)));
};
var G__35405 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__35406__i = 0, G__35406__a = new Array(arguments.length -  3);
while (G__35406__i < G__35406__a.length) {G__35406__a[G__35406__i] = arguments[G__35406__i + 3]; ++G__35406__i;}
  args = new cljs.core.IndexedSeq(G__35406__a,0);
} 
return G__35405__delegate.call(this,x,y,z,args);};
G__35405.cljs$lang$maxFixedArity = 3;
G__35405.cljs$lang$applyTo = (function (arglist__35407){
var x = cljs.core.first(arglist__35407);
arglist__35407 = cljs.core.next(arglist__35407);
var y = cljs.core.first(arglist__35407);
arglist__35407 = cljs.core.next(arglist__35407);
var z = cljs.core.first(arglist__35407);
var args = cljs.core.rest(arglist__35407);
return G__35405__delegate(x,y,z,args);
});
G__35405.cljs$core$IFn$_invoke$arity$variadic = G__35405__delegate;
return G__35405;
})()
;
epn = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return epn__0.call(this);
case 1:
return epn__1.call(this,x);
case 2:
return epn__2.call(this,x,y);
case 3:
return epn__3.call(this,x,y,z);
default:
var G__35408 = null;
if (arguments.length > 3) {
var G__35409__i = 0, G__35409__a = new Array(arguments.length -  3);
while (G__35409__i < G__35409__a.length) {G__35409__a[G__35409__i] = arguments[G__35409__i + 3]; ++G__35409__i;}
G__35408 = new cljs.core.IndexedSeq(G__35409__a,0);
}
return epn__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__35408);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
epn.cljs$lang$maxFixedArity = 3;
epn.cljs$lang$applyTo = epn__4.cljs$lang$applyTo;
epn.cljs$core$IFn$_invoke$arity$0 = epn__0;
epn.cljs$core$IFn$_invoke$arity$1 = epn__1;
epn.cljs$core$IFn$_invoke$arity$2 = epn__2;
epn.cljs$core$IFn$_invoke$arity$3 = epn__3;
epn.cljs$core$IFn$_invoke$arity$variadic = epn__4.cljs$core$IFn$_invoke$arity$variadic;
return epn;
})()
;})(ps__$1))
};
var G__35404 = function (p1,p2,p3,var_args){
var ps = null;
if (arguments.length > 3) {
var G__35410__i = 0, G__35410__a = new Array(arguments.length -  3);
while (G__35410__i < G__35410__a.length) {G__35410__a[G__35410__i] = arguments[G__35410__i + 3]; ++G__35410__i;}
  ps = new cljs.core.IndexedSeq(G__35410__a,0);
} 
return G__35404__delegate.call(this,p1,p2,p3,ps);};
G__35404.cljs$lang$maxFixedArity = 3;
G__35404.cljs$lang$applyTo = (function (arglist__35411){
var p1 = cljs.core.first(arglist__35411);
arglist__35411 = cljs.core.next(arglist__35411);
var p2 = cljs.core.first(arglist__35411);
arglist__35411 = cljs.core.next(arglist__35411);
var p3 = cljs.core.first(arglist__35411);
var ps = cljs.core.rest(arglist__35411);
return G__35404__delegate(p1,p2,p3,ps);
});
G__35404.cljs$core$IFn$_invoke$arity$variadic = G__35404__delegate;
return G__35404;
})()
;
every_pred = function(p1,p2,p3,var_args){
var ps = var_args;
switch(arguments.length){
case 1:
return every_pred__1.call(this,p1);
case 2:
return every_pred__2.call(this,p1,p2);
case 3:
return every_pred__3.call(this,p1,p2,p3);
default:
var G__35412 = null;
if (arguments.length > 3) {
var G__35413__i = 0, G__35413__a = new Array(arguments.length -  3);
while (G__35413__i < G__35413__a.length) {G__35413__a[G__35413__i] = arguments[G__35413__i + 3]; ++G__35413__i;}
G__35412 = new cljs.core.IndexedSeq(G__35413__a,0);
}
return every_pred__4.cljs$core$IFn$_invoke$arity$variadic(p1,p2,p3, G__35412);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
every_pred.cljs$lang$maxFixedArity = 3;
every_pred.cljs$lang$applyTo = every_pred__4.cljs$lang$applyTo;
every_pred.cljs$core$IFn$_invoke$arity$1 = every_pred__1;
every_pred.cljs$core$IFn$_invoke$arity$2 = every_pred__2;
every_pred.cljs$core$IFn$_invoke$arity$3 = every_pred__3;
every_pred.cljs$core$IFn$_invoke$arity$variadic = every_pred__4.cljs$core$IFn$_invoke$arity$variadic;
return every_pred;
})()
;
/**
* Takes a set of predicates and returns a function f that returns the first logical true value
* returned by one of its composing predicates against any of its arguments, else it returns
* logical false. Note that f is short-circuiting in that it will stop execution on the first
* argument that triggers a logical true result against the original predicates.
* @param {...*} var_args
*/
cljs.core.some_fn = (function() {
var some_fn = null;
var some_fn__1 = (function (p){
return (function() {
var sp1 = null;
var sp1__0 = (function (){
return null;
});
var sp1__1 = (function (x){
var G__35619 = x;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__35619) : p.call(null,G__35619));
});
var sp1__2 = (function (x,y){
var or__24274__auto__ = (function (){var G__35621 = x;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__35621) : p.call(null,G__35621));
})();
if(cljs.core.truth_(or__24274__auto__)){
return or__24274__auto__;
} else {
var G__35622 = y;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__35622) : p.call(null,G__35622));
}
});
var sp1__3 = (function (x,y,z){
var or__24274__auto__ = (function (){var G__35624 = x;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__35624) : p.call(null,G__35624));
})();
if(cljs.core.truth_(or__24274__auto__)){
return or__24274__auto__;
} else {
var or__24274__auto____$1 = (function (){var G__35626 = y;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__35626) : p.call(null,G__35626));
})();
if(cljs.core.truth_(or__24274__auto____$1)){
return or__24274__auto____$1;
} else {
var G__35627 = z;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__35627) : p.call(null,G__35627));
}
}
});
var sp1__4 = (function() { 
var G__35788__delegate = function (x,y,z,args){
var or__24274__auto__ = sp1.cljs$core$IFn$_invoke$arity$3(x,y,z);
if(cljs.core.truth_(or__24274__auto__)){
return or__24274__auto__;
} else {
return cljs.core.some(p,args);
}
};
var G__35788 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__35789__i = 0, G__35789__a = new Array(arguments.length -  3);
while (G__35789__i < G__35789__a.length) {G__35789__a[G__35789__i] = arguments[G__35789__i + 3]; ++G__35789__i;}
  args = new cljs.core.IndexedSeq(G__35789__a,0);
} 
return G__35788__delegate.call(this,x,y,z,args);};
G__35788.cljs$lang$maxFixedArity = 3;
G__35788.cljs$lang$applyTo = (function (arglist__35790){
var x = cljs.core.first(arglist__35790);
arglist__35790 = cljs.core.next(arglist__35790);
var y = cljs.core.first(arglist__35790);
arglist__35790 = cljs.core.next(arglist__35790);
var z = cljs.core.first(arglist__35790);
var args = cljs.core.rest(arglist__35790);
return G__35788__delegate(x,y,z,args);
});
G__35788.cljs$core$IFn$_invoke$arity$variadic = G__35788__delegate;
return G__35788;
})()
;
sp1 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return sp1__0.call(this);
case 1:
return sp1__1.call(this,x);
case 2:
return sp1__2.call(this,x,y);
case 3:
return sp1__3.call(this,x,y,z);
default:
var G__35791 = null;
if (arguments.length > 3) {
var G__35792__i = 0, G__35792__a = new Array(arguments.length -  3);
while (G__35792__i < G__35792__a.length) {G__35792__a[G__35792__i] = arguments[G__35792__i + 3]; ++G__35792__i;}
G__35791 = new cljs.core.IndexedSeq(G__35792__a,0);
}
return sp1__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__35791);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
sp1.cljs$lang$maxFixedArity = 3;
sp1.cljs$lang$applyTo = sp1__4.cljs$lang$applyTo;
sp1.cljs$core$IFn$_invoke$arity$0 = sp1__0;
sp1.cljs$core$IFn$_invoke$arity$1 = sp1__1;
sp1.cljs$core$IFn$_invoke$arity$2 = sp1__2;
sp1.cljs$core$IFn$_invoke$arity$3 = sp1__3;
sp1.cljs$core$IFn$_invoke$arity$variadic = sp1__4.cljs$core$IFn$_invoke$arity$variadic;
return sp1;
})()
});
var some_fn__2 = (function (p1,p2){
return (function() {
var sp2 = null;
var sp2__0 = (function (){
return null;
});
var sp2__1 = (function (x){
var or__24274__auto__ = (function (){var G__35659 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__35659) : p1.call(null,G__35659));
})();
if(cljs.core.truth_(or__24274__auto__)){
return or__24274__auto__;
} else {
var G__35660 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__35660) : p2.call(null,G__35660));
}
});
var sp2__2 = (function (x,y){
var or__24274__auto__ = (function (){var G__35662 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__35662) : p1.call(null,G__35662));
})();
if(cljs.core.truth_(or__24274__auto__)){
return or__24274__auto__;
} else {
var or__24274__auto____$1 = (function (){var G__35664 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__35664) : p1.call(null,G__35664));
})();
if(cljs.core.truth_(or__24274__auto____$1)){
return or__24274__auto____$1;
} else {
var or__24274__auto____$2 = (function (){var G__35666 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__35666) : p2.call(null,G__35666));
})();
if(cljs.core.truth_(or__24274__auto____$2)){
return or__24274__auto____$2;
} else {
var G__35667 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__35667) : p2.call(null,G__35667));
}
}
}
});
var sp2__3 = (function (x,y,z){
var or__24274__auto__ = (function (){var G__35669 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__35669) : p1.call(null,G__35669));
})();
if(cljs.core.truth_(or__24274__auto__)){
return or__24274__auto__;
} else {
var or__24274__auto____$1 = (function (){var G__35671 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__35671) : p1.call(null,G__35671));
})();
if(cljs.core.truth_(or__24274__auto____$1)){
return or__24274__auto____$1;
} else {
var or__24274__auto____$2 = (function (){var G__35673 = z;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__35673) : p1.call(null,G__35673));
})();
if(cljs.core.truth_(or__24274__auto____$2)){
return or__24274__auto____$2;
} else {
var or__24274__auto____$3 = (function (){var G__35675 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__35675) : p2.call(null,G__35675));
})();
if(cljs.core.truth_(or__24274__auto____$3)){
return or__24274__auto____$3;
} else {
var or__24274__auto____$4 = (function (){var G__35677 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__35677) : p2.call(null,G__35677));
})();
if(cljs.core.truth_(or__24274__auto____$4)){
return or__24274__auto____$4;
} else {
var G__35678 = z;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__35678) : p2.call(null,G__35678));
}
}
}
}
}
});
var sp2__4 = (function() { 
var G__35793__delegate = function (x,y,z,args){
var or__24274__auto__ = sp2.cljs$core$IFn$_invoke$arity$3(x,y,z);
if(cljs.core.truth_(or__24274__auto__)){
return or__24274__auto__;
} else {
return cljs.core.some(((function (or__24274__auto__){
return (function (p1__35414_SHARP_){
var or__24274__auto____$1 = (function (){var G__35680 = p1__35414_SHARP_;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__35680) : p1.call(null,G__35680));
})();
if(cljs.core.truth_(or__24274__auto____$1)){
return or__24274__auto____$1;
} else {
var G__35681 = p1__35414_SHARP_;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__35681) : p2.call(null,G__35681));
}
});})(or__24274__auto__))
,args);
}
};
var G__35793 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__35794__i = 0, G__35794__a = new Array(arguments.length -  3);
while (G__35794__i < G__35794__a.length) {G__35794__a[G__35794__i] = arguments[G__35794__i + 3]; ++G__35794__i;}
  args = new cljs.core.IndexedSeq(G__35794__a,0);
} 
return G__35793__delegate.call(this,x,y,z,args);};
G__35793.cljs$lang$maxFixedArity = 3;
G__35793.cljs$lang$applyTo = (function (arglist__35795){
var x = cljs.core.first(arglist__35795);
arglist__35795 = cljs.core.next(arglist__35795);
var y = cljs.core.first(arglist__35795);
arglist__35795 = cljs.core.next(arglist__35795);
var z = cljs.core.first(arglist__35795);
var args = cljs.core.rest(arglist__35795);
return G__35793__delegate(x,y,z,args);
});
G__35793.cljs$core$IFn$_invoke$arity$variadic = G__35793__delegate;
return G__35793;
})()
;
sp2 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return sp2__0.call(this);
case 1:
return sp2__1.call(this,x);
case 2:
return sp2__2.call(this,x,y);
case 3:
return sp2__3.call(this,x,y,z);
default:
var G__35796 = null;
if (arguments.length > 3) {
var G__35797__i = 0, G__35797__a = new Array(arguments.length -  3);
while (G__35797__i < G__35797__a.length) {G__35797__a[G__35797__i] = arguments[G__35797__i + 3]; ++G__35797__i;}
G__35796 = new cljs.core.IndexedSeq(G__35797__a,0);
}
return sp2__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__35796);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
sp2.cljs$lang$maxFixedArity = 3;
sp2.cljs$lang$applyTo = sp2__4.cljs$lang$applyTo;
sp2.cljs$core$IFn$_invoke$arity$0 = sp2__0;
sp2.cljs$core$IFn$_invoke$arity$1 = sp2__1;
sp2.cljs$core$IFn$_invoke$arity$2 = sp2__2;
sp2.cljs$core$IFn$_invoke$arity$3 = sp2__3;
sp2.cljs$core$IFn$_invoke$arity$variadic = sp2__4.cljs$core$IFn$_invoke$arity$variadic;
return sp2;
})()
});
var some_fn__3 = (function (p1,p2,p3){
return (function() {
var sp3 = null;
var sp3__0 = (function (){
return null;
});
var sp3__1 = (function (x){
var or__24274__auto__ = (function (){var G__35727 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__35727) : p1.call(null,G__35727));
})();
if(cljs.core.truth_(or__24274__auto__)){
return or__24274__auto__;
} else {
var or__24274__auto____$1 = (function (){var G__35729 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__35729) : p2.call(null,G__35729));
})();
if(cljs.core.truth_(or__24274__auto____$1)){
return or__24274__auto____$1;
} else {
var G__35730 = x;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__35730) : p3.call(null,G__35730));
}
}
});
var sp3__2 = (function (x,y){
var or__24274__auto__ = (function (){var G__35732 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__35732) : p1.call(null,G__35732));
})();
if(cljs.core.truth_(or__24274__auto__)){
return or__24274__auto__;
} else {
var or__24274__auto____$1 = (function (){var G__35734 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__35734) : p2.call(null,G__35734));
})();
if(cljs.core.truth_(or__24274__auto____$1)){
return or__24274__auto____$1;
} else {
var or__24274__auto____$2 = (function (){var G__35736 = x;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__35736) : p3.call(null,G__35736));
})();
if(cljs.core.truth_(or__24274__auto____$2)){
return or__24274__auto____$2;
} else {
var or__24274__auto____$3 = (function (){var G__35738 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__35738) : p1.call(null,G__35738));
})();
if(cljs.core.truth_(or__24274__auto____$3)){
return or__24274__auto____$3;
} else {
var or__24274__auto____$4 = (function (){var G__35740 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__35740) : p2.call(null,G__35740));
})();
if(cljs.core.truth_(or__24274__auto____$4)){
return or__24274__auto____$4;
} else {
var G__35741 = y;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__35741) : p3.call(null,G__35741));
}
}
}
}
}
});
var sp3__3 = (function (x,y,z){
var or__24274__auto__ = (function (){var G__35743 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__35743) : p1.call(null,G__35743));
})();
if(cljs.core.truth_(or__24274__auto__)){
return or__24274__auto__;
} else {
var or__24274__auto____$1 = (function (){var G__35745 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__35745) : p2.call(null,G__35745));
})();
if(cljs.core.truth_(or__24274__auto____$1)){
return or__24274__auto____$1;
} else {
var or__24274__auto____$2 = (function (){var G__35747 = x;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__35747) : p3.call(null,G__35747));
})();
if(cljs.core.truth_(or__24274__auto____$2)){
return or__24274__auto____$2;
} else {
var or__24274__auto____$3 = (function (){var G__35749 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__35749) : p1.call(null,G__35749));
})();
if(cljs.core.truth_(or__24274__auto____$3)){
return or__24274__auto____$3;
} else {
var or__24274__auto____$4 = (function (){var G__35751 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__35751) : p2.call(null,G__35751));
})();
if(cljs.core.truth_(or__24274__auto____$4)){
return or__24274__auto____$4;
} else {
var or__24274__auto____$5 = (function (){var G__35753 = y;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__35753) : p3.call(null,G__35753));
})();
if(cljs.core.truth_(or__24274__auto____$5)){
return or__24274__auto____$5;
} else {
var or__24274__auto____$6 = (function (){var G__35755 = z;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__35755) : p1.call(null,G__35755));
})();
if(cljs.core.truth_(or__24274__auto____$6)){
return or__24274__auto____$6;
} else {
var or__24274__auto____$7 = (function (){var G__35757 = z;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__35757) : p2.call(null,G__35757));
})();
if(cljs.core.truth_(or__24274__auto____$7)){
return or__24274__auto____$7;
} else {
var G__35758 = z;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__35758) : p3.call(null,G__35758));
}
}
}
}
}
}
}
}
});
var sp3__4 = (function() { 
var G__35798__delegate = function (x,y,z,args){
var or__24274__auto__ = sp3.cljs$core$IFn$_invoke$arity$3(x,y,z);
if(cljs.core.truth_(or__24274__auto__)){
return or__24274__auto__;
} else {
return cljs.core.some(((function (or__24274__auto__){
return (function (p1__35415_SHARP_){
var or__24274__auto____$1 = (function (){var G__35760 = p1__35415_SHARP_;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__35760) : p1.call(null,G__35760));
})();
if(cljs.core.truth_(or__24274__auto____$1)){
return or__24274__auto____$1;
} else {
var or__24274__auto____$2 = (function (){var G__35762 = p1__35415_SHARP_;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__35762) : p2.call(null,G__35762));
})();
if(cljs.core.truth_(or__24274__auto____$2)){
return or__24274__auto____$2;
} else {
var G__35763 = p1__35415_SHARP_;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__35763) : p3.call(null,G__35763));
}
}
});})(or__24274__auto__))
,args);
}
};
var G__35798 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__35799__i = 0, G__35799__a = new Array(arguments.length -  3);
while (G__35799__i < G__35799__a.length) {G__35799__a[G__35799__i] = arguments[G__35799__i + 3]; ++G__35799__i;}
  args = new cljs.core.IndexedSeq(G__35799__a,0);
} 
return G__35798__delegate.call(this,x,y,z,args);};
G__35798.cljs$lang$maxFixedArity = 3;
G__35798.cljs$lang$applyTo = (function (arglist__35800){
var x = cljs.core.first(arglist__35800);
arglist__35800 = cljs.core.next(arglist__35800);
var y = cljs.core.first(arglist__35800);
arglist__35800 = cljs.core.next(arglist__35800);
var z = cljs.core.first(arglist__35800);
var args = cljs.core.rest(arglist__35800);
return G__35798__delegate(x,y,z,args);
});
G__35798.cljs$core$IFn$_invoke$arity$variadic = G__35798__delegate;
return G__35798;
})()
;
sp3 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return sp3__0.call(this);
case 1:
return sp3__1.call(this,x);
case 2:
return sp3__2.call(this,x,y);
case 3:
return sp3__3.call(this,x,y,z);
default:
var G__35801 = null;
if (arguments.length > 3) {
var G__35802__i = 0, G__35802__a = new Array(arguments.length -  3);
while (G__35802__i < G__35802__a.length) {G__35802__a[G__35802__i] = arguments[G__35802__i + 3]; ++G__35802__i;}
G__35801 = new cljs.core.IndexedSeq(G__35802__a,0);
}
return sp3__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__35801);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
sp3.cljs$lang$maxFixedArity = 3;
sp3.cljs$lang$applyTo = sp3__4.cljs$lang$applyTo;
sp3.cljs$core$IFn$_invoke$arity$0 = sp3__0;
sp3.cljs$core$IFn$_invoke$arity$1 = sp3__1;
sp3.cljs$core$IFn$_invoke$arity$2 = sp3__2;
sp3.cljs$core$IFn$_invoke$arity$3 = sp3__3;
sp3.cljs$core$IFn$_invoke$arity$variadic = sp3__4.cljs$core$IFn$_invoke$arity$variadic;
return sp3;
})()
});
var some_fn__4 = (function() { 
var G__35803__delegate = function (p1,p2,p3,ps){
var ps__$1 = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(p1,p2,p3,ps);
return ((function (ps__$1){
return (function() {
var spn = null;
var spn__0 = (function (){
return null;
});
var spn__1 = (function (x){
return cljs.core.some(((function (ps__$1){
return (function (p1__35416_SHARP_){
var G__35779 = x;
return (p1__35416_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__35416_SHARP_.cljs$core$IFn$_invoke$arity$1(G__35779) : p1__35416_SHARP_.call(null,G__35779));
});})(ps__$1))
,ps__$1);
});
var spn__2 = (function (x,y){
return cljs.core.some(((function (ps__$1){
return (function (p1__35417_SHARP_){
var or__24274__auto__ = (function (){var G__35781 = x;
return (p1__35417_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__35417_SHARP_.cljs$core$IFn$_invoke$arity$1(G__35781) : p1__35417_SHARP_.call(null,G__35781));
})();
if(cljs.core.truth_(or__24274__auto__)){
return or__24274__auto__;
} else {
var G__35782 = y;
return (p1__35417_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__35417_SHARP_.cljs$core$IFn$_invoke$arity$1(G__35782) : p1__35417_SHARP_.call(null,G__35782));
}
});})(ps__$1))
,ps__$1);
});
var spn__3 = (function (x,y,z){
return cljs.core.some(((function (ps__$1){
return (function (p1__35418_SHARP_){
var or__24274__auto__ = (function (){var G__35784 = x;
return (p1__35418_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__35418_SHARP_.cljs$core$IFn$_invoke$arity$1(G__35784) : p1__35418_SHARP_.call(null,G__35784));
})();
if(cljs.core.truth_(or__24274__auto__)){
return or__24274__auto__;
} else {
var or__24274__auto____$1 = (function (){var G__35786 = y;
return (p1__35418_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__35418_SHARP_.cljs$core$IFn$_invoke$arity$1(G__35786) : p1__35418_SHARP_.call(null,G__35786));
})();
if(cljs.core.truth_(or__24274__auto____$1)){
return or__24274__auto____$1;
} else {
var G__35787 = z;
return (p1__35418_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__35418_SHARP_.cljs$core$IFn$_invoke$arity$1(G__35787) : p1__35418_SHARP_.call(null,G__35787));
}
}
});})(ps__$1))
,ps__$1);
});
var spn__4 = (function() { 
var G__35804__delegate = function (x,y,z,args){
var or__24274__auto__ = spn.cljs$core$IFn$_invoke$arity$3(x,y,z);
if(cljs.core.truth_(or__24274__auto__)){
return or__24274__auto__;
} else {
return cljs.core.some(((function (or__24274__auto__,ps__$1){
return (function (p1__35419_SHARP_){
return cljs.core.some(p1__35419_SHARP_,args);
});})(or__24274__auto__,ps__$1))
,ps__$1);
}
};
var G__35804 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__35805__i = 0, G__35805__a = new Array(arguments.length -  3);
while (G__35805__i < G__35805__a.length) {G__35805__a[G__35805__i] = arguments[G__35805__i + 3]; ++G__35805__i;}
  args = new cljs.core.IndexedSeq(G__35805__a,0);
} 
return G__35804__delegate.call(this,x,y,z,args);};
G__35804.cljs$lang$maxFixedArity = 3;
G__35804.cljs$lang$applyTo = (function (arglist__35806){
var x = cljs.core.first(arglist__35806);
arglist__35806 = cljs.core.next(arglist__35806);
var y = cljs.core.first(arglist__35806);
arglist__35806 = cljs.core.next(arglist__35806);
var z = cljs.core.first(arglist__35806);
var args = cljs.core.rest(arglist__35806);
return G__35804__delegate(x,y,z,args);
});
G__35804.cljs$core$IFn$_invoke$arity$variadic = G__35804__delegate;
return G__35804;
})()
;
spn = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return spn__0.call(this);
case 1:
return spn__1.call(this,x);
case 2:
return spn__2.call(this,x,y);
case 3:
return spn__3.call(this,x,y,z);
default:
var G__35807 = null;
if (arguments.length > 3) {
var G__35808__i = 0, G__35808__a = new Array(arguments.length -  3);
while (G__35808__i < G__35808__a.length) {G__35808__a[G__35808__i] = arguments[G__35808__i + 3]; ++G__35808__i;}
G__35807 = new cljs.core.IndexedSeq(G__35808__a,0);
}
return spn__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__35807);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
spn.cljs$lang$maxFixedArity = 3;
spn.cljs$lang$applyTo = spn__4.cljs$lang$applyTo;
spn.cljs$core$IFn$_invoke$arity$0 = spn__0;
spn.cljs$core$IFn$_invoke$arity$1 = spn__1;
spn.cljs$core$IFn$_invoke$arity$2 = spn__2;
spn.cljs$core$IFn$_invoke$arity$3 = spn__3;
spn.cljs$core$IFn$_invoke$arity$variadic = spn__4.cljs$core$IFn$_invoke$arity$variadic;
return spn;
})()
;})(ps__$1))
};
var G__35803 = function (p1,p2,p3,var_args){
var ps = null;
if (arguments.length > 3) {
var G__35809__i = 0, G__35809__a = new Array(arguments.length -  3);
while (G__35809__i < G__35809__a.length) {G__35809__a[G__35809__i] = arguments[G__35809__i + 3]; ++G__35809__i;}
  ps = new cljs.core.IndexedSeq(G__35809__a,0);
} 
return G__35803__delegate.call(this,p1,p2,p3,ps);};
G__35803.cljs$lang$maxFixedArity = 3;
G__35803.cljs$lang$applyTo = (function (arglist__35810){
var p1 = cljs.core.first(arglist__35810);
arglist__35810 = cljs.core.next(arglist__35810);
var p2 = cljs.core.first(arglist__35810);
arglist__35810 = cljs.core.next(arglist__35810);
var p3 = cljs.core.first(arglist__35810);
var ps = cljs.core.rest(arglist__35810);
return G__35803__delegate(p1,p2,p3,ps);
});
G__35803.cljs$core$IFn$_invoke$arity$variadic = G__35803__delegate;
return G__35803;
})()
;
some_fn = function(p1,p2,p3,var_args){
var ps = var_args;
switch(arguments.length){
case 1:
return some_fn__1.call(this,p1);
case 2:
return some_fn__2.call(this,p1,p2);
case 3:
return some_fn__3.call(this,p1,p2,p3);
default:
var G__35811 = null;
if (arguments.length > 3) {
var G__35812__i = 0, G__35812__a = new Array(arguments.length -  3);
while (G__35812__i < G__35812__a.length) {G__35812__a[G__35812__i] = arguments[G__35812__i + 3]; ++G__35812__i;}
G__35811 = new cljs.core.IndexedSeq(G__35812__a,0);
}
return some_fn__4.cljs$core$IFn$_invoke$arity$variadic(p1,p2,p3, G__35811);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
some_fn.cljs$lang$maxFixedArity = 3;
some_fn.cljs$lang$applyTo = some_fn__4.cljs$lang$applyTo;
some_fn.cljs$core$IFn$_invoke$arity$1 = some_fn__1;
some_fn.cljs$core$IFn$_invoke$arity$2 = some_fn__2;
some_fn.cljs$core$IFn$_invoke$arity$3 = some_fn__3;
some_fn.cljs$core$IFn$_invoke$arity$variadic = some_fn__4.cljs$core$IFn$_invoke$arity$variadic;
return some_fn;
})()
;
/**
* Returns a lazy sequence consisting of the result of applying f to
* the set of first items of each coll, followed by applying f to the
* set of second items in each coll, until any one of the colls is
* exhausted.  Any remaining items in other colls are ignored. Function
* f should accept number-of-colls arguments. Returns a transducer when
* no collection is provided.
* @param {...*} var_args
*/
cljs.core.map = (function() {
var map = null;
var map__1 = (function (f){
return (function (rf){
return (function() {
var G__35867 = null;
var G__35867__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__35867__1 = (function (result){
var G__35853 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__35853) : rf.call(null,G__35853));
});
var G__35867__2 = (function (result,input){
var G__35854 = result;
var G__35855 = (function (){var G__35856 = input;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__35856) : f.call(null,G__35856));
})();
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__35854,G__35855) : rf.call(null,G__35854,G__35855));
});
var G__35867__3 = (function() { 
var G__35868__delegate = function (result,input,inputs){
var G__35857 = result;
var G__35858 = cljs.core.apply.cljs$core$IFn$_invoke$arity$3(f,input,inputs);
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__35857,G__35858) : rf.call(null,G__35857,G__35858));
};
var G__35868 = function (result,input,var_args){
var inputs = null;
if (arguments.length > 2) {
var G__35869__i = 0, G__35869__a = new Array(arguments.length -  2);
while (G__35869__i < G__35869__a.length) {G__35869__a[G__35869__i] = arguments[G__35869__i + 2]; ++G__35869__i;}
  inputs = new cljs.core.IndexedSeq(G__35869__a,0);
} 
return G__35868__delegate.call(this,result,input,inputs);};
G__35868.cljs$lang$maxFixedArity = 2;
G__35868.cljs$lang$applyTo = (function (arglist__35870){
var result = cljs.core.first(arglist__35870);
arglist__35870 = cljs.core.next(arglist__35870);
var input = cljs.core.first(arglist__35870);
var inputs = cljs.core.rest(arglist__35870);
return G__35868__delegate(result,input,inputs);
});
G__35868.cljs$core$IFn$_invoke$arity$variadic = G__35868__delegate;
return G__35868;
})()
;
G__35867 = function(result,input,var_args){
var inputs = var_args;
switch(arguments.length){
case 0:
return G__35867__0.call(this);
case 1:
return G__35867__1.call(this,result);
case 2:
return G__35867__2.call(this,result,input);
default:
var G__35871 = null;
if (arguments.length > 2) {
var G__35872__i = 0, G__35872__a = new Array(arguments.length -  2);
while (G__35872__i < G__35872__a.length) {G__35872__a[G__35872__i] = arguments[G__35872__i + 2]; ++G__35872__i;}
G__35871 = new cljs.core.IndexedSeq(G__35872__a,0);
}
return G__35867__3.cljs$core$IFn$_invoke$arity$variadic(result,input, G__35871);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__35867.cljs$lang$maxFixedArity = 2;
G__35867.cljs$lang$applyTo = G__35867__3.cljs$lang$applyTo;
G__35867.cljs$core$IFn$_invoke$arity$0 = G__35867__0;
G__35867.cljs$core$IFn$_invoke$arity$1 = G__35867__1;
G__35867.cljs$core$IFn$_invoke$arity$2 = G__35867__2;
G__35867.cljs$core$IFn$_invoke$arity$variadic = G__35867__3.cljs$core$IFn$_invoke$arity$variadic;
return G__35867;
})()
});
});
var map__2 = (function (f,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(s)){
var c = cljs.core.chunk_first(s);
var size = cljs.core.count(c);
var b = cljs.core.chunk_buffer(size);
var n__25161__auto___35873 = size;
var i_35874 = (0);
while(true){
if((i_35874 < n__25161__auto___35873)){
cljs.core.chunk_append(b,(function (){var G__35859 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c,i_35874);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__35859) : f.call(null,G__35859));
})());

var G__35875 = (i_35874 + (1));
i_35874 = G__35875;
continue;
} else {
}
break;
}

return cljs.core.chunk_cons(cljs.core.chunk(b),map.cljs$core$IFn$_invoke$arity$2(f,cljs.core.chunk_rest(s)));
} else {
return cljs.core.cons((function (){var G__35860 = cljs.core.first(s);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__35860) : f.call(null,G__35860));
})(),map.cljs$core$IFn$_invoke$arity$2(f,cljs.core.rest(s)));
}
} else {
return null;
}
}),null,null));
});
var map__3 = (function (f,c1,c2){
return (new cljs.core.LazySeq(null,(function (){
var s1 = cljs.core.seq(c1);
var s2 = cljs.core.seq(c2);
if((s1) && (s2)){
return cljs.core.cons((function (){var G__35861 = cljs.core.first(s1);
var G__35862 = cljs.core.first(s2);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__35861,G__35862) : f.call(null,G__35861,G__35862));
})(),map.cljs$core$IFn$_invoke$arity$3(f,cljs.core.rest(s1),cljs.core.rest(s2)));
} else {
return null;
}
}),null,null));
});
var map__4 = (function (f,c1,c2,c3){
return (new cljs.core.LazySeq(null,(function (){
var s1 = cljs.core.seq(c1);
var s2 = cljs.core.seq(c2);
var s3 = cljs.core.seq(c3);
if((s1) && (s2) && (s3)){
return cljs.core.cons((function (){var G__35863 = cljs.core.first(s1);
var G__35864 = cljs.core.first(s2);
var G__35865 = cljs.core.first(s3);
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__35863,G__35864,G__35865) : f.call(null,G__35863,G__35864,G__35865));
})(),map.cljs$core$IFn$_invoke$arity$4(f,cljs.core.rest(s1),cljs.core.rest(s2),cljs.core.rest(s3)));
} else {
return null;
}
}),null,null));
});
var map__5 = (function() { 
var G__35876__delegate = function (f,c1,c2,c3,colls){
var step = (function step(cs){
return (new cljs.core.LazySeq(null,(function (){
var ss = map.cljs$core$IFn$_invoke$arity$2(cljs.core.seq,cs);
if(cljs.core.every_QMARK_(cljs.core.identity,ss)){
return cljs.core.cons(map.cljs$core$IFn$_invoke$arity$2(cljs.core.first,ss),step(map.cljs$core$IFn$_invoke$arity$2(cljs.core.rest,ss)));
} else {
return null;
}
}),null,null));
});
return map.cljs$core$IFn$_invoke$arity$2(((function (step){
return (function (p1__35813_SHARP_){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$2(f,p1__35813_SHARP_);
});})(step))
,step(cljs.core.conj.cljs$core$IFn$_invoke$arity$variadic(colls,c3,cljs.core.array_seq([c2,c1], 0))));
};
var G__35876 = function (f,c1,c2,c3,var_args){
var colls = null;
if (arguments.length > 4) {
var G__35877__i = 0, G__35877__a = new Array(arguments.length -  4);
while (G__35877__i < G__35877__a.length) {G__35877__a[G__35877__i] = arguments[G__35877__i + 4]; ++G__35877__i;}
  colls = new cljs.core.IndexedSeq(G__35877__a,0);
} 
return G__35876__delegate.call(this,f,c1,c2,c3,colls);};
G__35876.cljs$lang$maxFixedArity = 4;
G__35876.cljs$lang$applyTo = (function (arglist__35878){
var f = cljs.core.first(arglist__35878);
arglist__35878 = cljs.core.next(arglist__35878);
var c1 = cljs.core.first(arglist__35878);
arglist__35878 = cljs.core.next(arglist__35878);
var c2 = cljs.core.first(arglist__35878);
arglist__35878 = cljs.core.next(arglist__35878);
var c3 = cljs.core.first(arglist__35878);
var colls = cljs.core.rest(arglist__35878);
return G__35876__delegate(f,c1,c2,c3,colls);
});
G__35876.cljs$core$IFn$_invoke$arity$variadic = G__35876__delegate;
return G__35876;
})()
;
map = function(f,c1,c2,c3,var_args){
var colls = var_args;
switch(arguments.length){
case 1:
return map__1.call(this,f);
case 2:
return map__2.call(this,f,c1);
case 3:
return map__3.call(this,f,c1,c2);
case 4:
return map__4.call(this,f,c1,c2,c3);
default:
var G__35879 = null;
if (arguments.length > 4) {
var G__35880__i = 0, G__35880__a = new Array(arguments.length -  4);
while (G__35880__i < G__35880__a.length) {G__35880__a[G__35880__i] = arguments[G__35880__i + 4]; ++G__35880__i;}
G__35879 = new cljs.core.IndexedSeq(G__35880__a,0);
}
return map__5.cljs$core$IFn$_invoke$arity$variadic(f,c1,c2,c3, G__35879);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
map.cljs$lang$maxFixedArity = 4;
map.cljs$lang$applyTo = map__5.cljs$lang$applyTo;
map.cljs$core$IFn$_invoke$arity$1 = map__1;
map.cljs$core$IFn$_invoke$arity$2 = map__2;
map.cljs$core$IFn$_invoke$arity$3 = map__3;
map.cljs$core$IFn$_invoke$arity$4 = map__4;
map.cljs$core$IFn$_invoke$arity$variadic = map__5.cljs$core$IFn$_invoke$arity$variadic;
return map;
})()
;
/**
* Returns a lazy sequence of the first n items in coll, or all items if
* there are fewer than n.  Returns a stateful transducer when
* no collection is provided.
*/
cljs.core.take = (function() {
var take = null;
var take__1 = (function (n){
return (function (rf){
var na = cljs.core.volatile_BANG_(n);
return ((function (na){
return (function() {
var G__35889 = null;
var G__35889__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__35889__1 = (function (result){
var G__35886 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__35886) : rf.call(null,G__35886));
});
var G__35889__2 = (function (result,input){
var n__$1 = cljs.core.deref(na);
var nn = na.cljs$core$IVolatile$_vreset_BANG_$arity$2(null,(na.cljs$core$IDeref$_deref$arity$1(null) - (1)));
var result__$1 = (((n__$1 > (0)))?(function (){var G__35887 = result;
var G__35888 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__35887,G__35888) : rf.call(null,G__35887,G__35888));
})():result);
if(!((nn > (0)))){
return cljs.core.ensure_reduced(result__$1);
} else {
return result__$1;
}
});
G__35889 = function(result,input){
switch(arguments.length){
case 0:
return G__35889__0.call(this);
case 1:
return G__35889__1.call(this,result);
case 2:
return G__35889__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__35889.cljs$core$IFn$_invoke$arity$0 = G__35889__0;
G__35889.cljs$core$IFn$_invoke$arity$1 = G__35889__1;
G__35889.cljs$core$IFn$_invoke$arity$2 = G__35889__2;
return G__35889;
})()
;})(na))
});
});
var take__2 = (function (n,coll){
return (new cljs.core.LazySeq(null,(function (){
if((n > (0))){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
return cljs.core.cons(cljs.core.first(s),take.cljs$core$IFn$_invoke$arity$2((n - (1)),cljs.core.rest(s)));
} else {
return null;
}
} else {
return null;
}
}),null,null));
});
take = function(n,coll){
switch(arguments.length){
case 1:
return take__1.call(this,n);
case 2:
return take__2.call(this,n,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
take.cljs$core$IFn$_invoke$arity$1 = take__1;
take.cljs$core$IFn$_invoke$arity$2 = take__2;
return take;
})()
;
/**
* Returns a lazy sequence of all but the first n items in coll.
* Returns a stateful transducer when no collection is provided.
*/
cljs.core.drop = (function() {
var drop = null;
var drop__1 = (function (n){
return (function (rf){
var na = cljs.core.volatile_BANG_(n);
return ((function (na){
return (function() {
var G__35896 = null;
var G__35896__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__35896__1 = (function (result){
var G__35893 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__35893) : rf.call(null,G__35893));
});
var G__35896__2 = (function (result,input){
var n__$1 = cljs.core.deref(na);
na.cljs$core$IVolatile$_vreset_BANG_$arity$2(null,(na.cljs$core$IDeref$_deref$arity$1(null) - (1)));

if((n__$1 > (0))){
return result;
} else {
var G__35894 = result;
var G__35895 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__35894,G__35895) : rf.call(null,G__35894,G__35895));
}
});
G__35896 = function(result,input){
switch(arguments.length){
case 0:
return G__35896__0.call(this);
case 1:
return G__35896__1.call(this,result);
case 2:
return G__35896__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__35896.cljs$core$IFn$_invoke$arity$0 = G__35896__0;
G__35896.cljs$core$IFn$_invoke$arity$1 = G__35896__1;
G__35896.cljs$core$IFn$_invoke$arity$2 = G__35896__2;
return G__35896;
})()
;})(na))
});
});
var drop__2 = (function (n,coll){
var step = (function (n__$1,coll__$1){
while(true){
var s = cljs.core.seq(coll__$1);
if(((n__$1 > (0))) && (s)){
var G__35897 = (n__$1 - (1));
var G__35898 = cljs.core.rest(s);
n__$1 = G__35897;
coll__$1 = G__35898;
continue;
} else {
return s;
}
break;
}
});
return (new cljs.core.LazySeq(null,((function (step){
return (function (){
return step(n,coll);
});})(step))
,null,null));
});
drop = function(n,coll){
switch(arguments.length){
case 1:
return drop__1.call(this,n);
case 2:
return drop__2.call(this,n,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
drop.cljs$core$IFn$_invoke$arity$1 = drop__1;
drop.cljs$core$IFn$_invoke$arity$2 = drop__2;
return drop;
})()
;
/**
* Return a lazy sequence of all but the last n (default 1) items in coll
*/
cljs.core.drop_last = (function() {
var drop_last = null;
var drop_last__1 = (function (s){
return drop_last.cljs$core$IFn$_invoke$arity$2((1),s);
});
var drop_last__2 = (function (n,s){
return cljs.core.map.cljs$core$IFn$_invoke$arity$3((function (x,_){
return x;
}),s,cljs.core.drop.cljs$core$IFn$_invoke$arity$2(n,s));
});
drop_last = function(n,s){
switch(arguments.length){
case 1:
return drop_last__1.call(this,n);
case 2:
return drop_last__2.call(this,n,s);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
drop_last.cljs$core$IFn$_invoke$arity$1 = drop_last__1;
drop_last.cljs$core$IFn$_invoke$arity$2 = drop_last__2;
return drop_last;
})()
;
/**
* Returns a seq of the last n items in coll.  Depending on the type
* of coll may be no better than linear time.  For vectors, see also subvec.
*/
cljs.core.take_last = (function take_last(n,coll){
var s = cljs.core.seq(coll);
var lead = cljs.core.seq(cljs.core.drop.cljs$core$IFn$_invoke$arity$2(n,coll));
while(true){
if(lead){
var G__35901 = cljs.core.next(s);
var G__35902 = cljs.core.next(lead);
s = G__35901;
lead = G__35902;
continue;
} else {
return s;
}
break;
}
});
/**
* Returns a lazy sequence of the items in coll starting from the
* first item for which (pred item) returns logical false.  Returns a
* stateful transducer when no collection is provided.
*/
cljs.core.drop_while = (function() {
var drop_while = null;
var drop_while__1 = (function (pred){
return (function (rf){
var da = cljs.core.volatile_BANG_(true);
return ((function (da){
return (function() {
var G__35915 = null;
var G__35915__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__35915__1 = (function (result){
var G__35909 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__35909) : rf.call(null,G__35909));
});
var G__35915__2 = (function (result,input){
var drop_QMARK_ = cljs.core.deref(da);
if(cljs.core.truth_((function (){var and__24262__auto__ = drop_QMARK_;
if(cljs.core.truth_(and__24262__auto__)){
var G__35910 = input;
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__35910) : pred.call(null,G__35910));
} else {
return and__24262__auto__;
}
})())){
return result;
} else {
cljs.core.vreset_BANG_(da,null);

var G__35911 = result;
var G__35912 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__35911,G__35912) : rf.call(null,G__35911,G__35912));
}
});
G__35915 = function(result,input){
switch(arguments.length){
case 0:
return G__35915__0.call(this);
case 1:
return G__35915__1.call(this,result);
case 2:
return G__35915__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__35915.cljs$core$IFn$_invoke$arity$0 = G__35915__0;
G__35915.cljs$core$IFn$_invoke$arity$1 = G__35915__1;
G__35915.cljs$core$IFn$_invoke$arity$2 = G__35915__2;
return G__35915;
})()
;})(da))
});
});
var drop_while__2 = (function (pred,coll){
var step = (function (pred__$1,coll__$1){
while(true){
var s = cljs.core.seq(coll__$1);
if(cljs.core.truth_((function (){var and__24262__auto__ = s;
if(and__24262__auto__){
var G__35914 = cljs.core.first(s);
return (pred__$1.cljs$core$IFn$_invoke$arity$1 ? pred__$1.cljs$core$IFn$_invoke$arity$1(G__35914) : pred__$1.call(null,G__35914));
} else {
return and__24262__auto__;
}
})())){
var G__35916 = pred__$1;
var G__35917 = cljs.core.rest(s);
pred__$1 = G__35916;
coll__$1 = G__35917;
continue;
} else {
return s;
}
break;
}
});
return (new cljs.core.LazySeq(null,((function (step){
return (function (){
return step(pred,coll);
});})(step))
,null,null));
});
drop_while = function(pred,coll){
switch(arguments.length){
case 1:
return drop_while__1.call(this,pred);
case 2:
return drop_while__2.call(this,pred,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
drop_while.cljs$core$IFn$_invoke$arity$1 = drop_while__1;
drop_while.cljs$core$IFn$_invoke$arity$2 = drop_while__2;
return drop_while;
})()
;
/**
* Returns a lazy (infinite!) sequence of repetitions of the items in coll.
*/
cljs.core.cycle = (function cycle(coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
return cljs.core.concat.cljs$core$IFn$_invoke$arity$2(s,cycle(s));
} else {
return null;
}
}),null,null));
});
/**
* Returns a vector of [(take n coll) (drop n coll)]
*/
cljs.core.split_at = (function split_at(n,coll){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,coll),cljs.core.drop.cljs$core$IFn$_invoke$arity$2(n,coll)], null);
});
/**
* Returns a lazy (infinite!, or length n if supplied) sequence of xs.
*/
cljs.core.repeat = (function() {
var repeat = null;
var repeat__1 = (function (x){
return (new cljs.core.LazySeq(null,(function (){
return cljs.core.cons(x,repeat.cljs$core$IFn$_invoke$arity$1(x));
}),null,null));
});
var repeat__2 = (function (n,x){
return cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,repeat.cljs$core$IFn$_invoke$arity$1(x));
});
repeat = function(n,x){
switch(arguments.length){
case 1:
return repeat__1.call(this,n);
case 2:
return repeat__2.call(this,n,x);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
repeat.cljs$core$IFn$_invoke$arity$1 = repeat__1;
repeat.cljs$core$IFn$_invoke$arity$2 = repeat__2;
return repeat;
})()
;
/**
* Returns a lazy seq of n xs.
*/
cljs.core.replicate = (function replicate(n,x){
return cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,cljs.core.repeat.cljs$core$IFn$_invoke$arity$1(x));
});
/**
* Takes a function of no args, presumably with side effects, and
* returns an infinite (or length n if supplied) lazy sequence of calls
* to it
*/
cljs.core.repeatedly = (function() {
var repeatedly = null;
var repeatedly__1 = (function (f){
return (new cljs.core.LazySeq(null,(function (){
return cljs.core.cons((function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})(),repeatedly.cljs$core$IFn$_invoke$arity$1(f));
}),null,null));
});
var repeatedly__2 = (function (n,f){
return cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,repeatedly.cljs$core$IFn$_invoke$arity$1(f));
});
repeatedly = function(n,f){
switch(arguments.length){
case 1:
return repeatedly__1.call(this,n);
case 2:
return repeatedly__2.call(this,n,f);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
repeatedly.cljs$core$IFn$_invoke$arity$1 = repeatedly__1;
repeatedly.cljs$core$IFn$_invoke$arity$2 = repeatedly__2;
return repeatedly;
})()
;
/**
* Returns a lazy sequence of x, (f x), (f (f x)) etc. f must be free of side-effects
*/
cljs.core.iterate = (function iterate(f,x){
return cljs.core.cons(x,(new cljs.core.LazySeq(null,(function (){
return iterate(f,(function (){var G__35926 = x;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__35926) : f.call(null,G__35926));
})());
}),null,null)));
});
/**
* Returns a lazy seq of the first item in each coll, then the second etc.
* @param {...*} var_args
*/
cljs.core.interleave = (function() {
var interleave = null;
var interleave__2 = (function (c1,c2){
return (new cljs.core.LazySeq(null,(function (){
var s1 = cljs.core.seq(c1);
var s2 = cljs.core.seq(c2);
if((s1) && (s2)){
return cljs.core.cons(cljs.core.first(s1),cljs.core.cons(cljs.core.first(s2),interleave.cljs$core$IFn$_invoke$arity$2(cljs.core.rest(s1),cljs.core.rest(s2))));
} else {
return null;
}
}),null,null));
});
var interleave__3 = (function() { 
var G__35929__delegate = function (c1,c2,colls){
return (new cljs.core.LazySeq(null,(function (){
var ss = cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.seq,cljs.core.conj.cljs$core$IFn$_invoke$arity$variadic(colls,c2,cljs.core.array_seq([c1], 0)));
if(cljs.core.every_QMARK_(cljs.core.identity,ss)){
return cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.first,ss),cljs.core.apply.cljs$core$IFn$_invoke$arity$2(interleave,cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.rest,ss)));
} else {
return null;
}
}),null,null));
};
var G__35929 = function (c1,c2,var_args){
var colls = null;
if (arguments.length > 2) {
var G__35930__i = 0, G__35930__a = new Array(arguments.length -  2);
while (G__35930__i < G__35930__a.length) {G__35930__a[G__35930__i] = arguments[G__35930__i + 2]; ++G__35930__i;}
  colls = new cljs.core.IndexedSeq(G__35930__a,0);
} 
return G__35929__delegate.call(this,c1,c2,colls);};
G__35929.cljs$lang$maxFixedArity = 2;
G__35929.cljs$lang$applyTo = (function (arglist__35931){
var c1 = cljs.core.first(arglist__35931);
arglist__35931 = cljs.core.next(arglist__35931);
var c2 = cljs.core.first(arglist__35931);
var colls = cljs.core.rest(arglist__35931);
return G__35929__delegate(c1,c2,colls);
});
G__35929.cljs$core$IFn$_invoke$arity$variadic = G__35929__delegate;
return G__35929;
})()
;
interleave = function(c1,c2,var_args){
var colls = var_args;
switch(arguments.length){
case 2:
return interleave__2.call(this,c1,c2);
default:
var G__35932 = null;
if (arguments.length > 2) {
var G__35933__i = 0, G__35933__a = new Array(arguments.length -  2);
while (G__35933__i < G__35933__a.length) {G__35933__a[G__35933__i] = arguments[G__35933__i + 2]; ++G__35933__i;}
G__35932 = new cljs.core.IndexedSeq(G__35933__a,0);
}
return interleave__3.cljs$core$IFn$_invoke$arity$variadic(c1,c2, G__35932);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
interleave.cljs$lang$maxFixedArity = 2;
interleave.cljs$lang$applyTo = interleave__3.cljs$lang$applyTo;
interleave.cljs$core$IFn$_invoke$arity$2 = interleave__2;
interleave.cljs$core$IFn$_invoke$arity$variadic = interleave__3.cljs$core$IFn$_invoke$arity$variadic;
return interleave;
})()
;
/**
* Returns a lazy seq of the elements of coll separated by sep
*/
cljs.core.interpose = (function interpose(sep,coll){
return cljs.core.drop.cljs$core$IFn$_invoke$arity$2((1),cljs.core.interleave.cljs$core$IFn$_invoke$arity$2(cljs.core.repeat.cljs$core$IFn$_invoke$arity$1(sep),coll));
});
/**
* Take a collection of collections, and return a lazy seq
* of items from the inner collection
*/
cljs.core.flatten1 = (function flatten1(colls){
var cat = (function cat(coll,colls__$1){
return (new cljs.core.LazySeq(null,(function (){
var temp__4124__auto__ = cljs.core.seq(coll);
if(temp__4124__auto__){
var coll__$1 = temp__4124__auto__;
return cljs.core.cons(cljs.core.first(coll__$1),cat(cljs.core.rest(coll__$1),colls__$1));
} else {
if(cljs.core.seq(colls__$1)){
return cat(cljs.core.first(colls__$1),cljs.core.rest(colls__$1));
} else {
return null;
}
}
}),null,null));
});
return cat(null,colls);
});
/**
* Returns the result of applying concat to the result of applying map
* to f and colls.  Thus function f should return a collection. Returns
* a transducer when no collections are provided
* @param {...*} var_args
*/
cljs.core.mapcat = (function() {
var mapcat = null;
var mapcat__1 = (function (f){
return cljs.core.comp.cljs$core$IFn$_invoke$arity$2(cljs.core.map.cljs$core$IFn$_invoke$arity$1(f),cljs.core.cat);
});
var mapcat__2 = (function() { 
var G__35942__delegate = function (f,colls){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.concat,cljs.core.apply.cljs$core$IFn$_invoke$arity$3(cljs.core.map,f,colls));
};
var G__35942 = function (f,var_args){
var colls = null;
if (arguments.length > 1) {
var G__35943__i = 0, G__35943__a = new Array(arguments.length -  1);
while (G__35943__i < G__35943__a.length) {G__35943__a[G__35943__i] = arguments[G__35943__i + 1]; ++G__35943__i;}
  colls = new cljs.core.IndexedSeq(G__35943__a,0);
} 
return G__35942__delegate.call(this,f,colls);};
G__35942.cljs$lang$maxFixedArity = 1;
G__35942.cljs$lang$applyTo = (function (arglist__35944){
var f = cljs.core.first(arglist__35944);
var colls = cljs.core.rest(arglist__35944);
return G__35942__delegate(f,colls);
});
G__35942.cljs$core$IFn$_invoke$arity$variadic = G__35942__delegate;
return G__35942;
})()
;
mapcat = function(f,var_args){
var colls = var_args;
switch(arguments.length){
case 1:
return mapcat__1.call(this,f);
default:
var G__35945 = null;
if (arguments.length > 1) {
var G__35946__i = 0, G__35946__a = new Array(arguments.length -  1);
while (G__35946__i < G__35946__a.length) {G__35946__a[G__35946__i] = arguments[G__35946__i + 1]; ++G__35946__i;}
G__35945 = new cljs.core.IndexedSeq(G__35946__a,0);
}
return mapcat__2.cljs$core$IFn$_invoke$arity$variadic(f, G__35945);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
mapcat.cljs$lang$maxFixedArity = 1;
mapcat.cljs$lang$applyTo = mapcat__2.cljs$lang$applyTo;
mapcat.cljs$core$IFn$_invoke$arity$1 = mapcat__1;
mapcat.cljs$core$IFn$_invoke$arity$variadic = mapcat__2.cljs$core$IFn$_invoke$arity$variadic;
return mapcat;
})()
;
/**
* Returns a lazy sequence of the items in coll for which
* (pred item) returns true. pred must be free of side-effects.
* Returns a transducer when no collection is provided.
*/
cljs.core.filter = (function() {
var filter = null;
var filter__1 = (function (pred){
return (function (rf){
return (function() {
var G__35965 = null;
var G__35965__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__35965__1 = (function (result){
var G__35959 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__35959) : rf.call(null,G__35959));
});
var G__35965__2 = (function (result,input){
if(cljs.core.truth_((function (){var G__35960 = input;
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__35960) : pred.call(null,G__35960));
})())){
var G__35961 = result;
var G__35962 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__35961,G__35962) : rf.call(null,G__35961,G__35962));
} else {
return result;
}
});
G__35965 = function(result,input){
switch(arguments.length){
case 0:
return G__35965__0.call(this);
case 1:
return G__35965__1.call(this,result);
case 2:
return G__35965__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__35965.cljs$core$IFn$_invoke$arity$0 = G__35965__0;
G__35965.cljs$core$IFn$_invoke$arity$1 = G__35965__1;
G__35965.cljs$core$IFn$_invoke$arity$2 = G__35965__2;
return G__35965;
})()
});
});
var filter__2 = (function (pred,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(s)){
var c = cljs.core.chunk_first(s);
var size = cljs.core.count(c);
var b = cljs.core.chunk_buffer(size);
var n__25161__auto___35966 = size;
var i_35967 = (0);
while(true){
if((i_35967 < n__25161__auto___35966)){
if(cljs.core.truth_((function (){var G__35963 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c,i_35967);
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__35963) : pred.call(null,G__35963));
})())){
cljs.core.chunk_append(b,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c,i_35967));
} else {
}

var G__35968 = (i_35967 + (1));
i_35967 = G__35968;
continue;
} else {
}
break;
}

return cljs.core.chunk_cons(cljs.core.chunk(b),filter.cljs$core$IFn$_invoke$arity$2(pred,cljs.core.chunk_rest(s)));
} else {
var f = cljs.core.first(s);
var r = cljs.core.rest(s);
if(cljs.core.truth_((function (){var G__35964 = f;
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__35964) : pred.call(null,G__35964));
})())){
return cljs.core.cons(f,filter.cljs$core$IFn$_invoke$arity$2(pred,r));
} else {
return filter.cljs$core$IFn$_invoke$arity$2(pred,r);
}
}
} else {
return null;
}
}),null,null));
});
filter = function(pred,coll){
switch(arguments.length){
case 1:
return filter__1.call(this,pred);
case 2:
return filter__2.call(this,pred,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
filter.cljs$core$IFn$_invoke$arity$1 = filter__1;
filter.cljs$core$IFn$_invoke$arity$2 = filter__2;
return filter;
})()
;
/**
* Returns a lazy sequence of the items in coll for which
* (pred item) returns false. pred must be free of side-effects.
* Returns a transducer when no collection is provided.
*/
cljs.core.remove = (function() {
var remove = null;
var remove__1 = (function (pred){
return cljs.core.filter.cljs$core$IFn$_invoke$arity$1(cljs.core.complement(pred));
});
var remove__2 = (function (pred,coll){
return cljs.core.filter.cljs$core$IFn$_invoke$arity$2(cljs.core.complement(pred),coll);
});
remove = function(pred,coll){
switch(arguments.length){
case 1:
return remove__1.call(this,pred);
case 2:
return remove__2.call(this,pred,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
remove.cljs$core$IFn$_invoke$arity$1 = remove__1;
remove.cljs$core$IFn$_invoke$arity$2 = remove__2;
return remove;
})()
;
/**
* Returns a lazy sequence of the nodes in a tree, via a depth-first walk.
* branch? must be a fn of one arg that returns true if passed a node
* that can have children (but may not).  children must be a fn of one
* arg that returns a sequence of the children. Will only be called on
* nodes for which branch? returns true. Root is the root node of the
* tree.
*/
cljs.core.tree_seq = (function tree_seq(branch_QMARK_,children,root){
var walk = (function walk(node){
return (new cljs.core.LazySeq(null,(function (){
return cljs.core.cons(node,(cljs.core.truth_((function (){var G__35975 = node;
return (branch_QMARK_.cljs$core$IFn$_invoke$arity$1 ? branch_QMARK_.cljs$core$IFn$_invoke$arity$1(G__35975) : branch_QMARK_.call(null,G__35975));
})())?cljs.core.mapcat.cljs$core$IFn$_invoke$arity$variadic(walk,cljs.core.array_seq([(function (){var G__35976 = node;
return (children.cljs$core$IFn$_invoke$arity$1 ? children.cljs$core$IFn$_invoke$arity$1(G__35976) : children.call(null,G__35976));
})()], 0)):null));
}),null,null));
});
return walk(root);
});
/**
* Takes any nested combination of sequential things (lists, vectors,
* etc.) and returns their contents as a single, flat sequence.
* (flatten nil) returns nil.
*/
cljs.core.flatten = (function flatten(x){
return cljs.core.filter.cljs$core$IFn$_invoke$arity$2((function (p1__35977_SHARP_){
return !(cljs.core.sequential_QMARK_(p1__35977_SHARP_));
}),cljs.core.rest(cljs.core.tree_seq(cljs.core.sequential_QMARK_,cljs.core.seq,x)));
});
/**
* Returns a new coll consisting of to-coll with all of the items of
* from-coll conjoined. A transducer may be supplied.
*/
cljs.core.into = (function() {
var into = null;
var into__2 = (function (to,from){
if(!((to == null))){
if((function (){var G__35980 = to;
if(G__35980){
var bit__24948__auto__ = (G__35980.cljs$lang$protocol_mask$partition1$ & (4));
if((bit__24948__auto__) || (G__35980.cljs$core$IEditableCollection$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return cljs.core.with_meta(cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj_BANG_,cljs.core.transient$(to),from)),cljs.core.meta(to));
} else {
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj,to,from);
}
} else {
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.conj,cljs.core.List.EMPTY,from);
}
});
var into__3 = (function (to,xform,from){
if((function (){var G__35981 = to;
if(G__35981){
var bit__24948__auto__ = (G__35981.cljs$lang$protocol_mask$partition1$ & (4));
if((bit__24948__auto__) || (G__35981.cljs$core$IEditableCollection$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return cljs.core.with_meta(cljs.core.persistent_BANG_(cljs.core.transduce.cljs$core$IFn$_invoke$arity$4(xform,cljs.core.conj_BANG_,cljs.core.transient$(to),from)),cljs.core.meta(to));
} else {
return cljs.core.transduce.cljs$core$IFn$_invoke$arity$4(xform,cljs.core.conj,to,from);
}
});
into = function(to,xform,from){
switch(arguments.length){
case 2:
return into__2.call(this,to,xform);
case 3:
return into__3.call(this,to,xform,from);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
into.cljs$core$IFn$_invoke$arity$2 = into__2;
into.cljs$core$IFn$_invoke$arity$3 = into__3;
return into;
})()
;
/**
* Returns a vector consisting of the result of applying f to the
* set of first items of each coll, followed by applying f to the set
* of second items in each coll, until any one of the colls is
* exhausted.  Any remaining items in other colls are ignored. Function
* f should accept number-of-colls arguments.
* @param {...*} var_args
*/
cljs.core.mapv = (function() {
var mapv = null;
var mapv__2 = (function (f,coll){
return cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (v,o){
return cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$2(v,(function (){var G__35983 = o;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__35983) : f.call(null,G__35983));
})());
}),cljs.core.transient$(cljs.core.PersistentVector.EMPTY),coll));
});
var mapv__3 = (function (f,c1,c2){
return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentVector.EMPTY,cljs.core.map.cljs$core$IFn$_invoke$arity$3(f,c1,c2));
});
var mapv__4 = (function (f,c1,c2,c3){
return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentVector.EMPTY,cljs.core.map.cljs$core$IFn$_invoke$arity$4(f,c1,c2,c3));
});
var mapv__5 = (function() { 
var G__35984__delegate = function (f,c1,c2,c3,colls){
return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentVector.EMPTY,cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(cljs.core.map,f,c1,c2,c3,cljs.core.array_seq([colls], 0)));
};
var G__35984 = function (f,c1,c2,c3,var_args){
var colls = null;
if (arguments.length > 4) {
var G__35985__i = 0, G__35985__a = new Array(arguments.length -  4);
while (G__35985__i < G__35985__a.length) {G__35985__a[G__35985__i] = arguments[G__35985__i + 4]; ++G__35985__i;}
  colls = new cljs.core.IndexedSeq(G__35985__a,0);
} 
return G__35984__delegate.call(this,f,c1,c2,c3,colls);};
G__35984.cljs$lang$maxFixedArity = 4;
G__35984.cljs$lang$applyTo = (function (arglist__35986){
var f = cljs.core.first(arglist__35986);
arglist__35986 = cljs.core.next(arglist__35986);
var c1 = cljs.core.first(arglist__35986);
arglist__35986 = cljs.core.next(arglist__35986);
var c2 = cljs.core.first(arglist__35986);
arglist__35986 = cljs.core.next(arglist__35986);
var c3 = cljs.core.first(arglist__35986);
var colls = cljs.core.rest(arglist__35986);
return G__35984__delegate(f,c1,c2,c3,colls);
});
G__35984.cljs$core$IFn$_invoke$arity$variadic = G__35984__delegate;
return G__35984;
})()
;
mapv = function(f,c1,c2,c3,var_args){
var colls = var_args;
switch(arguments.length){
case 2:
return mapv__2.call(this,f,c1);
case 3:
return mapv__3.call(this,f,c1,c2);
case 4:
return mapv__4.call(this,f,c1,c2,c3);
default:
var G__35987 = null;
if (arguments.length > 4) {
var G__35988__i = 0, G__35988__a = new Array(arguments.length -  4);
while (G__35988__i < G__35988__a.length) {G__35988__a[G__35988__i] = arguments[G__35988__i + 4]; ++G__35988__i;}
G__35987 = new cljs.core.IndexedSeq(G__35988__a,0);
}
return mapv__5.cljs$core$IFn$_invoke$arity$variadic(f,c1,c2,c3, G__35987);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
mapv.cljs$lang$maxFixedArity = 4;
mapv.cljs$lang$applyTo = mapv__5.cljs$lang$applyTo;
mapv.cljs$core$IFn$_invoke$arity$2 = mapv__2;
mapv.cljs$core$IFn$_invoke$arity$3 = mapv__3;
mapv.cljs$core$IFn$_invoke$arity$4 = mapv__4;
mapv.cljs$core$IFn$_invoke$arity$variadic = mapv__5.cljs$core$IFn$_invoke$arity$variadic;
return mapv;
})()
;
/**
* Returns a vector of the items in coll for which
* (pred item) returns true. pred must be free of side-effects.
*/
cljs.core.filterv = (function filterv(pred,coll){
return cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (v,o){
if(cljs.core.truth_((function (){var G__35990 = o;
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__35990) : pred.call(null,G__35990));
})())){
return cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$2(v,o);
} else {
return v;
}
}),cljs.core.transient$(cljs.core.PersistentVector.EMPTY),coll));
});
/**
* Returns a lazy sequence of lists of n items each, at offsets step
* apart. If step is not supplied, defaults to n, i.e. the partitions
* do not overlap. If a pad collection is supplied, use its elements as
* necessary to complete last partition up to n items. In case there are
* not enough padding elements, return a partition with less than n items.
*/
cljs.core.partition = (function() {
var partition = null;
var partition__2 = (function (n,coll){
return partition.cljs$core$IFn$_invoke$arity$3(n,n,coll);
});
var partition__3 = (function (n,step,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
var p = cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,s);
if((n === cljs.core.count(p))){
return cljs.core.cons(p,partition.cljs$core$IFn$_invoke$arity$3(n,step,cljs.core.drop.cljs$core$IFn$_invoke$arity$2(step,s)));
} else {
return null;
}
} else {
return null;
}
}),null,null));
});
var partition__4 = (function (n,step,pad,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
var p = cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,s);
if((n === cljs.core.count(p))){
return cljs.core.cons(p,partition.cljs$core$IFn$_invoke$arity$4(n,step,pad,cljs.core.drop.cljs$core$IFn$_invoke$arity$2(step,s)));
} else {
return cljs.core._conj(cljs.core.List.EMPTY,cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,cljs.core.concat.cljs$core$IFn$_invoke$arity$2(p,pad)));
}
} else {
return null;
}
}),null,null));
});
partition = function(n,step,pad,coll){
switch(arguments.length){
case 2:
return partition__2.call(this,n,step);
case 3:
return partition__3.call(this,n,step,pad);
case 4:
return partition__4.call(this,n,step,pad,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
partition.cljs$core$IFn$_invoke$arity$2 = partition__2;
partition.cljs$core$IFn$_invoke$arity$3 = partition__3;
partition.cljs$core$IFn$_invoke$arity$4 = partition__4;
return partition;
})()
;
/**
* Returns the value in a nested associative structure,
* where ks is a sequence of keys. Returns nil if the key is not present,
* or the not-found value if supplied.
*/
cljs.core.get_in = (function() {
var get_in = null;
var get_in__2 = (function (m,ks){
return get_in.cljs$core$IFn$_invoke$arity$3(m,ks,null);
});
var get_in__3 = (function (m,ks,not_found){
var sentinel = cljs.core.lookup_sentinel;
var m__$1 = m;
var ks__$1 = cljs.core.seq(ks);
while(true){
if(ks__$1){
if(!((function (){var G__36005 = m__$1;
if(G__36005){
var bit__24955__auto__ = (G__36005.cljs$lang$protocol_mask$partition0$ & (256));
if((bit__24955__auto__) || (G__36005.cljs$core$ILookup$)){
return true;
} else {
if((!G__36005.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ILookup,G__36005);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ILookup,G__36005);
}
})())){
return not_found;
} else {
var m__$2 = cljs.core.get.cljs$core$IFn$_invoke$arity$3(m__$1,cljs.core.first(ks__$1),sentinel);
if((sentinel === m__$2)){
return not_found;
} else {
var G__36006 = sentinel;
var G__36007 = m__$2;
var G__36008 = cljs.core.next(ks__$1);
sentinel = G__36006;
m__$1 = G__36007;
ks__$1 = G__36008;
continue;
}
}
} else {
return m__$1;
}
break;
}
});
get_in = function(m,ks,not_found){
switch(arguments.length){
case 2:
return get_in__2.call(this,m,ks);
case 3:
return get_in__3.call(this,m,ks,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
get_in.cljs$core$IFn$_invoke$arity$2 = get_in__2;
get_in.cljs$core$IFn$_invoke$arity$3 = get_in__3;
return get_in;
})()
;
/**
* Associates a value in a nested associative structure, where ks is a
* sequence of keys and v is the new value and returns a new nested structure.
* If any levels do not exist, hash-maps will be created.
*/
cljs.core.assoc_in = (function assoc_in(m,p__36009,v){
var vec__36014 = p__36009;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__36014,(0),null);
var ks = cljs.core.nthnext(vec__36014,(1));
if(ks){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,assoc_in(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),ks,v));
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,v);
}
});
/**
* 'Updates' a value in a nested associative structure, where ks is a
* sequence of keys and f is a function that will take the old value
* and any supplied args and return the new value, and returns a new
* nested structure.  If any levels do not exist, hash-maps will be
* created.
* @param {...*} var_args
*/
cljs.core.update_in = (function() {
var update_in = null;
var update_in__3 = (function (m,p__36015,f){
var vec__36053 = p__36015;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__36053,(0),null);
var ks = cljs.core.nthnext(vec__36053,(1));
if(ks){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,update_in.cljs$core$IFn$_invoke$arity$3(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),ks,f));
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__36054 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__36054) : f.call(null,G__36054));
})());
}
});
var update_in__4 = (function (m,p__36016,f,a){
var vec__36055 = p__36016;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__36055,(0),null);
var ks = cljs.core.nthnext(vec__36055,(1));
if(ks){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,update_in.cljs$core$IFn$_invoke$arity$4(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),ks,f,a));
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__36056 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__36057 = a;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__36056,G__36057) : f.call(null,G__36056,G__36057));
})());
}
});
var update_in__5 = (function (m,p__36017,f,a,b){
var vec__36058 = p__36017;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__36058,(0),null);
var ks = cljs.core.nthnext(vec__36058,(1));
if(ks){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,update_in.cljs$core$IFn$_invoke$arity$5(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),ks,f,a,b));
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__36059 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__36060 = a;
var G__36061 = b;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__36059,G__36060,G__36061) : f.call(null,G__36059,G__36060,G__36061));
})());
}
});
var update_in__6 = (function (m,p__36018,f,a,b,c){
var vec__36062 = p__36018;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__36062,(0),null);
var ks = cljs.core.nthnext(vec__36062,(1));
if(ks){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,update_in.cljs$core$IFn$_invoke$arity$6(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),ks,f,a,b,c));
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__36063 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__36064 = a;
var G__36065 = b;
var G__36066 = c;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__36063,G__36064,G__36065,G__36066) : f.call(null,G__36063,G__36064,G__36065,G__36066));
})());
}
});
var update_in__7 = (function() { 
var G__36068__delegate = function (m,p__36019,f,a,b,c,args){
var vec__36067 = p__36019;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__36067,(0),null);
var ks = cljs.core.nthnext(vec__36067,(1));
if(ks){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(update_in,cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),ks,f,a,cljs.core.array_seq([b,c,args], 0)));
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f,cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),a,b,c,cljs.core.array_seq([args], 0)));
}
};
var G__36068 = function (m,p__36019,f,a,b,c,var_args){
var args = null;
if (arguments.length > 6) {
var G__36069__i = 0, G__36069__a = new Array(arguments.length -  6);
while (G__36069__i < G__36069__a.length) {G__36069__a[G__36069__i] = arguments[G__36069__i + 6]; ++G__36069__i;}
  args = new cljs.core.IndexedSeq(G__36069__a,0);
} 
return G__36068__delegate.call(this,m,p__36019,f,a,b,c,args);};
G__36068.cljs$lang$maxFixedArity = 6;
G__36068.cljs$lang$applyTo = (function (arglist__36070){
var m = cljs.core.first(arglist__36070);
arglist__36070 = cljs.core.next(arglist__36070);
var p__36019 = cljs.core.first(arglist__36070);
arglist__36070 = cljs.core.next(arglist__36070);
var f = cljs.core.first(arglist__36070);
arglist__36070 = cljs.core.next(arglist__36070);
var a = cljs.core.first(arglist__36070);
arglist__36070 = cljs.core.next(arglist__36070);
var b = cljs.core.first(arglist__36070);
arglist__36070 = cljs.core.next(arglist__36070);
var c = cljs.core.first(arglist__36070);
var args = cljs.core.rest(arglist__36070);
return G__36068__delegate(m,p__36019,f,a,b,c,args);
});
G__36068.cljs$core$IFn$_invoke$arity$variadic = G__36068__delegate;
return G__36068;
})()
;
update_in = function(m,p__36019,f,a,b,c,var_args){
var args = var_args;
switch(arguments.length){
case 3:
return update_in__3.call(this,m,p__36019,f);
case 4:
return update_in__4.call(this,m,p__36019,f,a);
case 5:
return update_in__5.call(this,m,p__36019,f,a,b);
case 6:
return update_in__6.call(this,m,p__36019,f,a,b,c);
default:
var G__36071 = null;
if (arguments.length > 6) {
var G__36072__i = 0, G__36072__a = new Array(arguments.length -  6);
while (G__36072__i < G__36072__a.length) {G__36072__a[G__36072__i] = arguments[G__36072__i + 6]; ++G__36072__i;}
G__36071 = new cljs.core.IndexedSeq(G__36072__a,0);
}
return update_in__7.cljs$core$IFn$_invoke$arity$variadic(m,p__36019,f,a,b,c, G__36071);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
update_in.cljs$lang$maxFixedArity = 6;
update_in.cljs$lang$applyTo = update_in__7.cljs$lang$applyTo;
update_in.cljs$core$IFn$_invoke$arity$3 = update_in__3;
update_in.cljs$core$IFn$_invoke$arity$4 = update_in__4;
update_in.cljs$core$IFn$_invoke$arity$5 = update_in__5;
update_in.cljs$core$IFn$_invoke$arity$6 = update_in__6;
update_in.cljs$core$IFn$_invoke$arity$variadic = update_in__7.cljs$core$IFn$_invoke$arity$variadic;
return update_in;
})()
;
/**
* 'Updates' a value in an associative structure, where k is a
* key and f is a function that will take the old value
* and any supplied args and return the new value, and returns a new
* structure.  If the key does not exist, nil is passed as the old value.
* @param {...*} var_args
*/
cljs.core.update = (function() {
var update = null;
var update__3 = (function (m,k,f){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__36083 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__36083) : f.call(null,G__36083));
})());
});
var update__4 = (function (m,k,f,x){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__36084 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__36085 = x;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__36084,G__36085) : f.call(null,G__36084,G__36085));
})());
});
var update__5 = (function (m,k,f,x,y){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__36086 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__36087 = x;
var G__36088 = y;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__36086,G__36087,G__36088) : f.call(null,G__36086,G__36087,G__36088));
})());
});
var update__6 = (function (m,k,f,x,y,z){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__36089 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__36090 = x;
var G__36091 = y;
var G__36092 = z;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__36089,G__36090,G__36091,G__36092) : f.call(null,G__36089,G__36090,G__36091,G__36092));
})());
});
var update__7 = (function() { 
var G__36093__delegate = function (m,k,f,x,y,z,more){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f,cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),x,y,z,cljs.core.array_seq([more], 0)));
};
var G__36093 = function (m,k,f,x,y,z,var_args){
var more = null;
if (arguments.length > 6) {
var G__36094__i = 0, G__36094__a = new Array(arguments.length -  6);
while (G__36094__i < G__36094__a.length) {G__36094__a[G__36094__i] = arguments[G__36094__i + 6]; ++G__36094__i;}
  more = new cljs.core.IndexedSeq(G__36094__a,0);
} 
return G__36093__delegate.call(this,m,k,f,x,y,z,more);};
G__36093.cljs$lang$maxFixedArity = 6;
G__36093.cljs$lang$applyTo = (function (arglist__36095){
var m = cljs.core.first(arglist__36095);
arglist__36095 = cljs.core.next(arglist__36095);
var k = cljs.core.first(arglist__36095);
arglist__36095 = cljs.core.next(arglist__36095);
var f = cljs.core.first(arglist__36095);
arglist__36095 = cljs.core.next(arglist__36095);
var x = cljs.core.first(arglist__36095);
arglist__36095 = cljs.core.next(arglist__36095);
var y = cljs.core.first(arglist__36095);
arglist__36095 = cljs.core.next(arglist__36095);
var z = cljs.core.first(arglist__36095);
var more = cljs.core.rest(arglist__36095);
return G__36093__delegate(m,k,f,x,y,z,more);
});
G__36093.cljs$core$IFn$_invoke$arity$variadic = G__36093__delegate;
return G__36093;
})()
;
update = function(m,k,f,x,y,z,var_args){
var more = var_args;
switch(arguments.length){
case 3:
return update__3.call(this,m,k,f);
case 4:
return update__4.call(this,m,k,f,x);
case 5:
return update__5.call(this,m,k,f,x,y);
case 6:
return update__6.call(this,m,k,f,x,y,z);
default:
var G__36096 = null;
if (arguments.length > 6) {
var G__36097__i = 0, G__36097__a = new Array(arguments.length -  6);
while (G__36097__i < G__36097__a.length) {G__36097__a[G__36097__i] = arguments[G__36097__i + 6]; ++G__36097__i;}
G__36096 = new cljs.core.IndexedSeq(G__36097__a,0);
}
return update__7.cljs$core$IFn$_invoke$arity$variadic(m,k,f,x,y,z, G__36096);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
update.cljs$lang$maxFixedArity = 6;
update.cljs$lang$applyTo = update__7.cljs$lang$applyTo;
update.cljs$core$IFn$_invoke$arity$3 = update__3;
update.cljs$core$IFn$_invoke$arity$4 = update__4;
update.cljs$core$IFn$_invoke$arity$5 = update__5;
update.cljs$core$IFn$_invoke$arity$6 = update__6;
update.cljs$core$IFn$_invoke$arity$variadic = update__7.cljs$core$IFn$_invoke$arity$variadic;
return update;
})()
;

/**
* @constructor
*/
cljs.core.VectorNode = (function (edit,arr){
this.edit = edit;
this.arr = arr;
})

cljs.core.VectorNode.cljs$lang$type = true;

cljs.core.VectorNode.cljs$lang$ctorStr = "cljs.core/VectorNode";

cljs.core.VectorNode.cljs$lang$ctorPrWriter = (function (this__24861__auto__,writer__24862__auto__,opt__24863__auto__){
return cljs.core._write(writer__24862__auto__,"cljs.core/VectorNode");
});

cljs.core.__GT_VectorNode = (function __GT_VectorNode(edit,arr){
return (new cljs.core.VectorNode(edit,arr));
});

cljs.core.pv_fresh_node = (function pv_fresh_node(edit){
return (new cljs.core.VectorNode(edit,[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null]));
});
cljs.core.pv_aget = (function pv_aget(node,idx){
return (node.arr[idx]);
});
cljs.core.pv_aset = (function pv_aset(node,idx,val){
return (node.arr[idx] = val);
});
cljs.core.pv_clone_node = (function pv_clone_node(node){
return (new cljs.core.VectorNode(node.edit,cljs.core.aclone(node.arr)));
});
cljs.core.tail_off = (function tail_off(pv){
var cnt = pv.cnt;
if((cnt < (32))){
return (0);
} else {
return (((cnt - (1)) >>> (5)) << (5));
}
});
cljs.core.new_path = (function new_path(edit,level,node){
var ll = level;
var ret = node;
while(true){
if((ll === (0))){
return ret;
} else {
var embed = ret;
var r = cljs.core.pv_fresh_node(edit);
var _ = cljs.core.pv_aset(r,(0),embed);
var G__36098 = (ll - (5));
var G__36099 = r;
ll = G__36098;
ret = G__36099;
continue;
}
break;
}
});
cljs.core.push_tail = (function push_tail(pv,level,parent,tailnode){
var ret = cljs.core.pv_clone_node(parent);
var subidx = (((pv.cnt - (1)) >>> level) & (31));
if(((5) === level)){
cljs.core.pv_aset(ret,subidx,tailnode);

return ret;
} else {
var child = cljs.core.pv_aget(parent,subidx);
if(!((child == null))){
var node_to_insert = push_tail(pv,(level - (5)),child,tailnode);
cljs.core.pv_aset(ret,subidx,node_to_insert);

return ret;
} else {
var node_to_insert = cljs.core.new_path(null,(level - (5)),tailnode);
cljs.core.pv_aset(ret,subidx,node_to_insert);

return ret;
}
}
});
cljs.core.vector_index_out_of_bounds = (function vector_index_out_of_bounds(i,cnt){
throw (new Error([cljs.core.str("No item "),cljs.core.str(i),cljs.core.str(" in vector of length "),cljs.core.str(cnt)].join('')));
});
cljs.core.first_array_for_longvec = (function first_array_for_longvec(pv){
var node = pv.root;
var level = pv.shift;
while(true){
if((level > (0))){
var G__36104 = cljs.core.pv_aget(node,(0));
var G__36105 = (level - (5));
node = G__36104;
level = G__36105;
continue;
} else {
return node.arr;
}
break;
}
});
cljs.core.unchecked_array_for = (function unchecked_array_for(pv,i){
if((i >= cljs.core.tail_off(pv))){
return pv.tail;
} else {
var node = pv.root;
var level = pv.shift;
while(true){
if((level > (0))){
var G__36106 = cljs.core.pv_aget(node,((i >>> level) & (31)));
var G__36107 = (level - (5));
node = G__36106;
level = G__36107;
continue;
} else {
return node.arr;
}
break;
}
}
});
cljs.core.array_for = (function array_for(pv,i){
if((((0) <= i)) && ((i < pv.cnt))){
return cljs.core.unchecked_array_for(pv,i);
} else {
return cljs.core.vector_index_out_of_bounds(i,pv.cnt);
}
});
cljs.core.do_assoc = (function do_assoc(pv,level,node,i,val){
var ret = cljs.core.pv_clone_node(node);
if((level === (0))){
cljs.core.pv_aset(ret,(i & (31)),val);

return ret;
} else {
var subidx = ((i >>> level) & (31));
cljs.core.pv_aset(ret,subidx,do_assoc(pv,(level - (5)),cljs.core.pv_aget(node,subidx),i,val));

return ret;
}
});
cljs.core.pop_tail = (function pop_tail(pv,level,node){
var subidx = (((pv.cnt - (2)) >>> level) & (31));
if((level > (5))){
var new_child = pop_tail(pv,(level - (5)),cljs.core.pv_aget(node,subidx));
if(((new_child == null)) && ((subidx === (0)))){
return null;
} else {
var ret = cljs.core.pv_clone_node(node);
cljs.core.pv_aset(ret,subidx,new_child);

return ret;
}
} else {
if((subidx === (0))){
return null;
} else {
var ret = cljs.core.pv_clone_node(node);
cljs.core.pv_aset(ret,subidx,null);

return ret;

}
}
});

/**
* @constructor
*/
cljs.core.RangedIterator = (function (i,base,arr,v,start,end){
this.i = i;
this.base = base;
this.arr = arr;
this.v = v;
this.start = start;
this.end = end;
})
cljs.core.RangedIterator.prototype.hasNext = (function (){
var self__ = this;
var this$ = this;
return (self__.i < self__.end);
});

cljs.core.RangedIterator.prototype.next = (function (){
var self__ = this;
var this$ = this;
if(((self__.i - self__.base) === (32))){
self__.arr = cljs.core.unchecked_array_for(self__.v,self__.i);

self__.base = (self__.base + (32));
} else {
}

var ret = (self__.arr[(self__.i & (31))]);
self__.i = (self__.i + (1));

return ret;
});

cljs.core.RangedIterator.cljs$lang$type = true;

cljs.core.RangedIterator.cljs$lang$ctorStr = "cljs.core/RangedIterator";

cljs.core.RangedIterator.cljs$lang$ctorPrWriter = (function (this__24861__auto__,writer__24862__auto__,opt__24863__auto__){
return cljs.core._write(writer__24862__auto__,"cljs.core/RangedIterator");
});

cljs.core.__GT_RangedIterator = (function __GT_RangedIterator(i,base,arr,v,start,end){
return (new cljs.core.RangedIterator(i,base,arr,v,start,end));
});

cljs.core.ranged_iterator = (function ranged_iterator(v,start,end){
var i = start;
return (new cljs.core.RangedIterator(i,(i - (i % (32))),(((start < cljs.core.count(v)))?cljs.core.unchecked_array_for(v,i):null),v,start,end));
});







/**
* @constructor
*/
cljs.core.PersistentVector = (function (meta,cnt,shift,root,tail,__hash){
this.meta = meta;
this.cnt = cnt;
this.shift = shift;
this.root = root;
this.tail = tail;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 167668511;
this.cljs$lang$protocol_mask$partition1$ = 8196;
})
cljs.core.PersistentVector.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentVector.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentVector.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.PersistentVector.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
if(typeof k === 'number'){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(coll__$1,k,not_found);
} else {
return not_found;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = (function (v,f,init){
var self__ = this;
var v__$1 = this;
var i = (0);
var init__$1 = init;
while(true){
if((i < self__.cnt)){
var arr = cljs.core.unchecked_array_for(v__$1,i);
var len = arr.length;
var init__$2 = (function (){var j = (0);
var init__$2 = init__$1;
while(true){
if((j < len)){
var init__$3 = (function (){var G__36117 = init__$2;
var G__36118 = (j + i);
var G__36119 = (arr[j]);
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__36117,G__36118,G__36119) : f.call(null,G__36117,G__36118,G__36119));
})();
if(cljs.core.reduced_QMARK_(init__$3)){
return init__$3;
} else {
var G__36130 = (j + (1));
var G__36131 = init__$3;
j = G__36130;
init__$2 = G__36131;
continue;
}
} else {
return init__$2;
}
break;
}
})();
if(cljs.core.reduced_QMARK_(init__$2)){
var G__36120 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__36120) : cljs.core.deref.call(null,G__36120));
} else {
var G__36132 = (i + len);
var G__36133 = init__$2;
i = G__36132;
init__$1 = G__36133;
continue;
}
} else {
return init__$1;
}
break;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (coll,n){
var self__ = this;
var coll__$1 = this;
return (cljs.core.array_for(coll__$1,n)[(n & (31))]);
});

cljs.core.PersistentVector.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (coll,n,not_found){
var self__ = this;
var coll__$1 = this;
if((((0) <= n)) && ((n < self__.cnt))){
return (cljs.core.unchecked_array_for(coll__$1,n)[(n & (31))]);
} else {
return not_found;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IVector$_assoc_n$arity$3 = (function (coll,n,val){
var self__ = this;
var coll__$1 = this;
if((((0) <= n)) && ((n < self__.cnt))){
if((cljs.core.tail_off(coll__$1) <= n)){
var new_tail = cljs.core.aclone(self__.tail);
(new_tail[(n & (31))] = val);

return (new cljs.core.PersistentVector(self__.meta,self__.cnt,self__.shift,self__.root,new_tail,null));
} else {
return (new cljs.core.PersistentVector(self__.meta,self__.cnt,self__.shift,cljs.core.do_assoc(coll__$1,self__.shift,self__.root,n,val),self__.tail,null));
}
} else {
if((n === self__.cnt)){
return cljs.core._conj(coll__$1,val);
} else {
throw (new Error([cljs.core.str("Index "),cljs.core.str(n),cljs.core.str(" out of bounds  [0,"),cljs.core.str(self__.cnt),cljs.core.str("]")].join('')));

}
}
});

cljs.core.PersistentVector.prototype.cljs$core$IIterable$ = true;

cljs.core.PersistentVector.prototype.cljs$core$IIterable$_iterator$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return cljs.core.ranged_iterator(this$__$1,(0),self__.cnt);
});

cljs.core.PersistentVector.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentVector.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.PersistentVector(self__.meta,self__.cnt,self__.shift,self__.root,self__.tail,self__.__hash));
});

cljs.core.PersistentVector.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.cnt;
});

cljs.core.PersistentVector.prototype.cljs$core$IMapEntry$_key$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll__$1,(0));
});

cljs.core.PersistentVector.prototype.cljs$core$IMapEntry$_val$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll__$1,(1));
});

cljs.core.PersistentVector.prototype.cljs$core$IStack$_peek$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll__$1,(self__.cnt - (1)));
} else {
return null;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IStack$_pop$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt === (0))){
throw (new Error("Can't pop empty vector"));
} else {
if(((1) === self__.cnt)){
return cljs.core._with_meta(cljs.core.PersistentVector.EMPTY,self__.meta);
} else {
if(((1) < (self__.cnt - cljs.core.tail_off(coll__$1)))){
return (new cljs.core.PersistentVector(self__.meta,(self__.cnt - (1)),self__.shift,self__.root,self__.tail.slice((0),(-1)),null));
} else {
var new_tail = cljs.core.unchecked_array_for(coll__$1,(self__.cnt - (2)));
var nr = cljs.core.pop_tail(coll__$1,self__.shift,self__.root);
var new_root = (((nr == null))?cljs.core.PersistentVector.EMPTY_NODE:nr);
var cnt_1 = (self__.cnt - (1));
if((((5) < self__.shift)) && ((cljs.core.pv_aget(new_root,(1)) == null))){
return (new cljs.core.PersistentVector(self__.meta,cnt_1,(self__.shift - (5)),cljs.core.pv_aget(new_root,(0)),new_tail,null));
} else {
return (new cljs.core.PersistentVector(self__.meta,cnt_1,self__.shift,new_root,new_tail,null));
}

}
}
}
});

cljs.core.PersistentVector.prototype.cljs$core$IReversible$_rseq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
return (new cljs.core.RSeq(coll__$1,(self__.cnt - (1)),null));
} else {
return null;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__24695__auto__ = self__.__hash;
if(!((h__24695__auto__ == null))){
return h__24695__auto__;
} else {
var h__24695__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__24695__auto____$1;

return h__24695__auto____$1;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
if((other instanceof cljs.core.PersistentVector)){
if((self__.cnt === cljs.core.count(other))){
var me_iter = cljs.core._iterator(coll__$1);
var you_iter = cljs.core._iterator(other);
while(true){
if(cljs.core.truth_(me_iter.hasNext())){
var x = me_iter.next();
var y = you_iter.next();
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x,y)){
continue;
} else {
return false;
}
} else {
return true;
}
break;
}
} else {
return false;
}
} else {
return cljs.core.equiv_sequential(coll__$1,other);
}
});

cljs.core.PersistentVector.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.TransientVector(self__.cnt,self__.shift,(function (){var G__36121 = self__.root;
return (cljs.core.tv_editable_root.cljs$core$IFn$_invoke$arity$1 ? cljs.core.tv_editable_root.cljs$core$IFn$_invoke$arity$1(G__36121) : cljs.core.tv_editable_root.call(null,G__36121));
})(),(function (){var G__36122 = self__.tail;
return (cljs.core.tv_editable_tail.cljs$core$IFn$_invoke$arity$1 ? cljs.core.tv_editable_tail.cljs$core$IFn$_invoke$arity$1(G__36122) : cljs.core.tv_editable_tail.call(null,G__36122));
})()));
});

cljs.core.PersistentVector.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.PersistentVector.EMPTY,self__.meta);
});

cljs.core.PersistentVector.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (v,f){
var self__ = this;
var v__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(v__$1,f);
});

cljs.core.PersistentVector.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (v,f,init){
var self__ = this;
var v__$1 = this;
var i = (0);
var init__$1 = init;
while(true){
if((i < self__.cnt)){
var arr = cljs.core.unchecked_array_for(v__$1,i);
var len = arr.length;
var init__$2 = (function (){var j = (0);
var init__$2 = init__$1;
while(true){
if((j < len)){
var init__$3 = (function (){var G__36123 = init__$2;
var G__36124 = (arr[j]);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__36123,G__36124) : f.call(null,G__36123,G__36124));
})();
if(cljs.core.reduced_QMARK_(init__$3)){
return init__$3;
} else {
var G__36134 = (j + (1));
var G__36135 = init__$3;
j = G__36134;
init__$2 = G__36135;
continue;
}
} else {
return init__$2;
}
break;
}
})();
if(cljs.core.reduced_QMARK_(init__$2)){
var G__36125 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__36125) : cljs.core.deref.call(null,G__36125));
} else {
var G__36136 = (i + len);
var G__36137 = init__$2;
i = G__36136;
init__$1 = G__36137;
continue;
}
} else {
return init__$1;
}
break;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (coll,k,v){
var self__ = this;
var coll__$1 = this;
if(typeof k === 'number'){
return cljs.core._assoc_n(coll__$1,k,v);
} else {
throw (new Error("Vector's key for assoc must be a number."));
}
});

cljs.core.PersistentVector.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt === (0))){
return null;
} else {
if((self__.cnt <= (32))){
return (new cljs.core.IndexedSeq(self__.tail,(0)));
} else {
var G__36126 = coll__$1;
var G__36127 = cljs.core.first_array_for_longvec(coll__$1);
var G__36128 = (0);
var G__36129 = (0);
return (cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__36126,G__36127,G__36128,G__36129) : cljs.core.chunked_seq.call(null,G__36126,G__36127,G__36128,G__36129));

}
}
});

cljs.core.PersistentVector.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentVector(meta__$1,self__.cnt,self__.shift,self__.root,self__.tail,self__.__hash));
});

cljs.core.PersistentVector.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
if(((self__.cnt - cljs.core.tail_off(coll__$1)) < (32))){
var len = self__.tail.length;
var new_tail = (new Array((len + (1))));
var n__25161__auto___36138 = len;
var i_36139 = (0);
while(true){
if((i_36139 < n__25161__auto___36138)){
(new_tail[i_36139] = (self__.tail[i_36139]));

var G__36140 = (i_36139 + (1));
i_36139 = G__36140;
continue;
} else {
}
break;
}

(new_tail[len] = o);

return (new cljs.core.PersistentVector(self__.meta,(self__.cnt + (1)),self__.shift,self__.root,new_tail,null));
} else {
var root_overflow_QMARK_ = ((self__.cnt >>> (5)) > ((1) << self__.shift));
var new_shift = ((root_overflow_QMARK_)?(self__.shift + (5)):self__.shift);
var new_root = ((root_overflow_QMARK_)?(function (){var n_r = cljs.core.pv_fresh_node(null);
cljs.core.pv_aset(n_r,(0),self__.root);

cljs.core.pv_aset(n_r,(1),cljs.core.new_path(null,self__.shift,(new cljs.core.VectorNode(null,self__.tail))));

return n_r;
})():cljs.core.push_tail(coll__$1,self__.shift,self__.root,(new cljs.core.VectorNode(null,self__.tail))));
return (new cljs.core.PersistentVector(self__.meta,(self__.cnt + (1)),new_shift,new_root,[o],null));
}
});

cljs.core.PersistentVector.prototype.call = (function() {
var G__36141 = null;
var G__36141__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$IIndexed$_nth$arity$2(null,k);
});
var G__36141__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$IIndexed$_nth$arity$3(null,k,not_found);
});
G__36141 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__36141__2.call(this,self__,k);
case 3:
return G__36141__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__36141.cljs$core$IFn$_invoke$arity$2 = G__36141__2;
G__36141.cljs$core$IFn$_invoke$arity$3 = G__36141__3;
return G__36141;
})()
;

cljs.core.PersistentVector.prototype.apply = (function (self__,args36116){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args36116)));
});

cljs.core.PersistentVector.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$IIndexed$_nth$arity$2(null,k);
});

cljs.core.PersistentVector.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$IIndexed$_nth$arity$3(null,k,not_found);
});

cljs.core.PersistentVector.cljs$lang$type = true;

cljs.core.PersistentVector.cljs$lang$ctorStr = "cljs.core/PersistentVector";

cljs.core.PersistentVector.cljs$lang$ctorPrWriter = (function (this__24861__auto__,writer__24862__auto__,opt__24863__auto__){
return cljs.core._write(writer__24862__auto__,"cljs.core/PersistentVector");
});

cljs.core.__GT_PersistentVector = (function __GT_PersistentVector(meta,cnt,shift,root,tail,__hash){
return (new cljs.core.PersistentVector(meta,cnt,shift,root,tail,__hash));
});

cljs.core.PersistentVector.EMPTY_NODE = (new cljs.core.VectorNode(null,[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null]));
cljs.core.PersistentVector.EMPTY = (new cljs.core.PersistentVector(null,(0),(5),cljs.core.PersistentVector.EMPTY_NODE,[],(0)));
cljs.core.PersistentVector.fromArray = (function (xs,no_clone){
var l = xs.length;
var xs__$1 = ((no_clone)?xs:cljs.core.aclone(xs));
if((l < (32))){
return (new cljs.core.PersistentVector(null,l,(5),cljs.core.PersistentVector.EMPTY_NODE,xs__$1,null));
} else {
var node = xs__$1.slice((0),(32));
var v = (new cljs.core.PersistentVector(null,(32),(5),cljs.core.PersistentVector.EMPTY_NODE,node,null));
var i = (32);
var out = v.cljs$core$IEditableCollection$_as_transient$arity$1(null);
while(true){
if((i < l)){
var G__36142 = (i + (1));
var G__36143 = cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$2(out,(xs__$1[i]));
i = G__36142;
out = G__36143;
continue;
} else {
return cljs.core.persistent_BANG_(out);
}
break;
}
}
});
(cljs.core.PersistentVector.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__25252__auto__ = this;
return cljs.core.es6_iterator(this__25252__auto__);
}));
cljs.core.vec = (function vec(coll){
return cljs.core._persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj_BANG_,cljs.core._as_transient(cljs.core.PersistentVector.EMPTY),coll));
});
/**
* @param {...*} var_args
*/
cljs.core.vector = (function() { 
var vector__delegate = function (args){
if(((args instanceof cljs.core.IndexedSeq)) && ((args.i === (0)))){
return cljs.core.PersistentVector.fromArray(args.arr,true);
} else {
return cljs.core.vec(args);
}
};
var vector = function (var_args){
var args = null;
if (arguments.length > 0) {
var G__36144__i = 0, G__36144__a = new Array(arguments.length -  0);
while (G__36144__i < G__36144__a.length) {G__36144__a[G__36144__i] = arguments[G__36144__i + 0]; ++G__36144__i;}
  args = new cljs.core.IndexedSeq(G__36144__a,0);
} 
return vector__delegate.call(this,args);};
vector.cljs$lang$maxFixedArity = 0;
vector.cljs$lang$applyTo = (function (arglist__36145){
var args = cljs.core.seq(arglist__36145);
return vector__delegate(args);
});
vector.cljs$core$IFn$_invoke$arity$variadic = vector__delegate;
return vector;
})()
;

/**
* @constructor
*/
cljs.core.ChunkedSeq = (function (vec,node,i,off,meta,__hash){
this.vec = vec;
this.node = node;
this.i = i;
this.off = off;
this.meta = meta;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 32375020;
this.cljs$lang$protocol_mask$partition1$ = 1536;
})
cljs.core.ChunkedSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.ChunkedSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.ChunkedSeq.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if(((self__.off + (1)) < self__.node.length)){
var s = (function (){var G__36146 = self__.vec;
var G__36147 = self__.node;
var G__36148 = self__.i;
var G__36149 = (self__.off + (1));
return (cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__36146,G__36147,G__36148,G__36149) : cljs.core.chunked_seq.call(null,G__36146,G__36147,G__36148,G__36149));
})();
if((s == null)){
return null;
} else {
return s;
}
} else {
return cljs.core._chunked_next(coll__$1);
}
});

cljs.core.ChunkedSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__24695__auto__ = self__.__hash;
if(!((h__24695__auto__ == null))){
return h__24695__auto__;
} else {
var h__24695__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__24695__auto____$1;

return h__24695__auto____$1;
}
});

cljs.core.ChunkedSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.PersistentVector.EMPTY,self__.meta);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2((function (){var G__36150 = self__.vec;
var G__36151 = (self__.i + self__.off);
var G__36152 = cljs.core.count(self__.vec);
return (cljs.core.subvec.cljs$core$IFn$_invoke$arity$3 ? cljs.core.subvec.cljs$core$IFn$_invoke$arity$3(G__36150,G__36151,G__36152) : cljs.core.subvec.call(null,G__36150,G__36151,G__36152));
})(),f);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3((function (){var G__36153 = self__.vec;
var G__36154 = (self__.i + self__.off);
var G__36155 = cljs.core.count(self__.vec);
return (cljs.core.subvec.cljs$core$IFn$_invoke$arity$3 ? cljs.core.subvec.cljs$core$IFn$_invoke$arity$3(G__36153,G__36154,G__36155) : cljs.core.subvec.call(null,G__36153,G__36154,G__36155));
})(),f,start);
});

cljs.core.ChunkedSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (self__.node[self__.off]);
});

cljs.core.ChunkedSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if(((self__.off + (1)) < self__.node.length)){
var s = (function (){var G__36156 = self__.vec;
var G__36157 = self__.node;
var G__36158 = self__.i;
var G__36159 = (self__.off + (1));
return (cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__36156,G__36157,G__36158,G__36159) : cljs.core.chunked_seq.call(null,G__36156,G__36157,G__36158,G__36159));
})();
if((s == null)){
return cljs.core.List.EMPTY;
} else {
return s;
}
} else {
return cljs.core._chunked_rest(coll__$1);
}
});

cljs.core.ChunkedSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedSeq$_chunked_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.array_chunk.cljs$core$IFn$_invoke$arity$2(self__.node,self__.off);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedSeq$_chunked_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var end = (self__.i + self__.node.length);
if((end < cljs.core._count(self__.vec))){
var G__36160 = self__.vec;
var G__36161 = cljs.core.unchecked_array_for(self__.vec,end);
var G__36162 = end;
var G__36163 = (0);
return (cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__36160,G__36161,G__36162,G__36163) : cljs.core.chunked_seq.call(null,G__36160,G__36161,G__36162,G__36163));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.ChunkedSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,m){
var self__ = this;
var coll__$1 = this;
var G__36164 = self__.vec;
var G__36165 = self__.node;
var G__36166 = self__.i;
var G__36167 = self__.off;
var G__36168 = m;
return (cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$5 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$5(G__36164,G__36165,G__36166,G__36167,G__36168) : cljs.core.chunked_seq.call(null,G__36164,G__36165,G__36166,G__36167,G__36168));
});

cljs.core.ChunkedSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedNext$_chunked_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var end = (self__.i + self__.node.length);
if((end < cljs.core._count(self__.vec))){
var G__36169 = self__.vec;
var G__36170 = cljs.core.unchecked_array_for(self__.vec,end);
var G__36171 = end;
var G__36172 = (0);
return (cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__36169,G__36170,G__36171,G__36172) : cljs.core.chunked_seq.call(null,G__36169,G__36170,G__36171,G__36172));
} else {
return null;
}
});

cljs.core.ChunkedSeq.cljs$lang$type = true;

cljs.core.ChunkedSeq.cljs$lang$ctorStr = "cljs.core/ChunkedSeq";

cljs.core.ChunkedSeq.cljs$lang$ctorPrWriter = (function (this__24861__auto__,writer__24862__auto__,opt__24863__auto__){
return cljs.core._write(writer__24862__auto__,"cljs.core/ChunkedSeq");
});

cljs.core.__GT_ChunkedSeq = (function __GT_ChunkedSeq(vec,node,i,off,meta,__hash){
return (new cljs.core.ChunkedSeq(vec,node,i,off,meta,__hash));
});

(cljs.core.ChunkedSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__25252__auto__ = this;
return cljs.core.es6_iterator(this__25252__auto__);
}));
cljs.core.chunked_seq = (function() {
var chunked_seq = null;
var chunked_seq__3 = (function (vec,i,off){
return (new cljs.core.ChunkedSeq(vec,cljs.core.array_for(vec,i),i,off,null,null));
});
var chunked_seq__4 = (function (vec,node,i,off){
return (new cljs.core.ChunkedSeq(vec,node,i,off,null,null));
});
var chunked_seq__5 = (function (vec,node,i,off,meta){
return (new cljs.core.ChunkedSeq(vec,node,i,off,meta,null));
});
chunked_seq = function(vec,node,i,off,meta){
switch(arguments.length){
case 3:
return chunked_seq__3.call(this,vec,node,i);
case 4:
return chunked_seq__4.call(this,vec,node,i,off);
case 5:
return chunked_seq__5.call(this,vec,node,i,off,meta);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
chunked_seq.cljs$core$IFn$_invoke$arity$3 = chunked_seq__3;
chunked_seq.cljs$core$IFn$_invoke$arity$4 = chunked_seq__4;
chunked_seq.cljs$core$IFn$_invoke$arity$5 = chunked_seq__5;
return chunked_seq;
})()
;

/**
* @constructor
*/
cljs.core.Subvec = (function (meta,v,start,end,__hash){
this.meta = meta;
this.v = v;
this.start = start;
this.end = end;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 166617887;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.Subvec.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.Subvec.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.Subvec.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.Subvec.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
if(typeof k === 'number'){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(coll__$1,k,not_found);
} else {
return not_found;
}
});

cljs.core.Subvec.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (coll,n){
var self__ = this;
var coll__$1 = this;
if(((n < (0))) || ((self__.end <= (self__.start + n)))){
return cljs.core.vector_index_out_of_bounds(n,(self__.end - self__.start));
} else {
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.v,(self__.start + n));
}
});

cljs.core.Subvec.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (coll,n,not_found){
var self__ = this;
var coll__$1 = this;
if(((n < (0))) || ((self__.end <= (self__.start + n)))){
return not_found;
} else {
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(self__.v,(self__.start + n),not_found);
}
});

cljs.core.Subvec.prototype.cljs$core$IVector$_assoc_n$arity$3 = (function (coll,n,val){
var self__ = this;
var coll__$1 = this;
var v_pos = (self__.start + n);
var G__36174 = self__.meta;
var G__36175 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.v,v_pos,val);
var G__36176 = self__.start;
var G__36177 = (function (){var x__24591__auto__ = self__.end;
var y__24592__auto__ = (v_pos + (1));
return ((x__24591__auto__ > y__24592__auto__) ? x__24591__auto__ : y__24592__auto__);
})();
var G__36178 = null;
return (cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5 ? cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5(G__36174,G__36175,G__36176,G__36177,G__36178) : cljs.core.build_subvec.call(null,G__36174,G__36175,G__36176,G__36177,G__36178));
});

cljs.core.Subvec.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.Subvec.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.Subvec(self__.meta,self__.v,self__.start,self__.end,self__.__hash));
});

cljs.core.Subvec.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (self__.end - self__.start);
});

cljs.core.Subvec.prototype.cljs$core$IStack$_peek$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.v,(self__.end - (1)));
});

cljs.core.Subvec.prototype.cljs$core$IStack$_pop$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.start === self__.end)){
throw (new Error("Can't pop empty vector"));
} else {
var G__36179 = self__.meta;
var G__36180 = self__.v;
var G__36181 = self__.start;
var G__36182 = (self__.end - (1));
var G__36183 = null;
return (cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5 ? cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5(G__36179,G__36180,G__36181,G__36182,G__36183) : cljs.core.build_subvec.call(null,G__36179,G__36180,G__36181,G__36182,G__36183));
}
});

cljs.core.Subvec.prototype.cljs$core$IReversible$_rseq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if(!((self__.start === self__.end))){
return (new cljs.core.RSeq(coll__$1,((self__.end - self__.start) - (1)),null));
} else {
return null;
}
});

cljs.core.Subvec.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__24695__auto__ = self__.__hash;
if(!((h__24695__auto__ == null))){
return h__24695__auto__;
} else {
var h__24695__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__24695__auto____$1;

return h__24695__auto____$1;
}
});

cljs.core.Subvec.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.Subvec.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.PersistentVector.EMPTY,self__.meta);
});

cljs.core.Subvec.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(coll__$1,f);
});

cljs.core.Subvec.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start__$1){
var self__ = this;
var coll__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3(coll__$1,f,start__$1);
});

cljs.core.Subvec.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (coll,key,val){
var self__ = this;
var coll__$1 = this;
if(typeof key === 'number'){
return cljs.core._assoc_n(coll__$1,key,val);
} else {
throw (new Error("Subvec's key for assoc must be a number."));
}
});

cljs.core.Subvec.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var subvec_seq = ((function (coll__$1){
return (function subvec_seq(i){
if((i === self__.end)){
return null;
} else {
return cljs.core.cons(cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.v,i),(new cljs.core.LazySeq(null,((function (coll__$1){
return (function (){
return subvec_seq((i + (1)));
});})(coll__$1))
,null,null)));
}
});})(coll__$1))
;
return subvec_seq(self__.start);
});

cljs.core.Subvec.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
var G__36185 = meta__$1;
var G__36186 = self__.v;
var G__36187 = self__.start;
var G__36188 = self__.end;
var G__36189 = self__.__hash;
return (cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5 ? cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5(G__36185,G__36186,G__36187,G__36188,G__36189) : cljs.core.build_subvec.call(null,G__36185,G__36186,G__36187,G__36188,G__36189));
});

cljs.core.Subvec.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
var G__36190 = self__.meta;
var G__36191 = cljs.core._assoc_n(self__.v,self__.end,o);
var G__36192 = self__.start;
var G__36193 = (self__.end + (1));
var G__36194 = null;
return (cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5 ? cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5(G__36190,G__36191,G__36192,G__36193,G__36194) : cljs.core.build_subvec.call(null,G__36190,G__36191,G__36192,G__36193,G__36194));
});

cljs.core.Subvec.prototype.call = (function() {
var G__36195 = null;
var G__36195__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$IIndexed$_nth$arity$2(null,k);
});
var G__36195__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$IIndexed$_nth$arity$3(null,k,not_found);
});
G__36195 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__36195__2.call(this,self__,k);
case 3:
return G__36195__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__36195.cljs$core$IFn$_invoke$arity$2 = G__36195__2;
G__36195.cljs$core$IFn$_invoke$arity$3 = G__36195__3;
return G__36195;
})()
;

cljs.core.Subvec.prototype.apply = (function (self__,args36173){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args36173)));
});

cljs.core.Subvec.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$IIndexed$_nth$arity$2(null,k);
});

cljs.core.Subvec.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$IIndexed$_nth$arity$3(null,k,not_found);
});

cljs.core.Subvec.cljs$lang$type = true;

cljs.core.Subvec.cljs$lang$ctorStr = "cljs.core/Subvec";

cljs.core.Subvec.cljs$lang$ctorPrWriter = (function (this__24861__auto__,writer__24862__auto__,opt__24863__auto__){
return cljs.core._write(writer__24862__auto__,"cljs.core/Subvec");
});

cljs.core.__GT_Subvec = (function __GT_Subvec(meta,v,start,end,__hash){
return (new cljs.core.Subvec(meta,v,start,end,__hash));
});

(cljs.core.Subvec.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__25252__auto__ = this;
return cljs.core.es6_iterator(this__25252__auto__);
}));
cljs.core.build_subvec = (function build_subvec(meta,v,start,end,__hash){
while(true){
if((v instanceof cljs.core.Subvec)){
var G__36196 = meta;
var G__36197 = v.v;
var G__36198 = (v.start + start);
var G__36199 = (v.start + end);
var G__36200 = __hash;
meta = G__36196;
v = G__36197;
start = G__36198;
end = G__36199;
__hash = G__36200;
continue;
} else {
var c = cljs.core.count(v);
if(((start < (0))) || ((end < (0))) || ((start > c)) || ((end > c))){
throw (new Error("Index out of bounds"));
} else {
}

return (new cljs.core.Subvec(meta,v,start,end,__hash));
}
break;
}
});
/**
* Returns a persistent vector of the items in vector from
* start (inclusive) to end (exclusive).  If end is not supplied,
* defaults to (count vector). This operation is O(1) and very fast, as
* the resulting vector shares structure with the original and no
* trimming is done.
*/
cljs.core.subvec = (function() {
var subvec = null;
var subvec__2 = (function (v,start){
return subvec.cljs$core$IFn$_invoke$arity$3(v,start,cljs.core.count(v));
});
var subvec__3 = (function (v,start,end){
return cljs.core.build_subvec(null,v,start,end,null);
});
subvec = function(v,start,end){
switch(arguments.length){
case 2:
return subvec__2.call(this,v,start);
case 3:
return subvec__3.call(this,v,start,end);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
subvec.cljs$core$IFn$_invoke$arity$2 = subvec__2;
subvec.cljs$core$IFn$_invoke$arity$3 = subvec__3;
return subvec;
})()
;
cljs.core.tv_ensure_editable = (function tv_ensure_editable(edit,node){
if((edit === node.edit)){
return node;
} else {
return (new cljs.core.VectorNode(edit,cljs.core.aclone(node.arr)));
}
});
cljs.core.tv_editable_root = (function tv_editable_root(node){
return (new cljs.core.VectorNode((function (){var obj36207 = {};
return obj36207;
})(),cljs.core.aclone(node.arr)));
});
cljs.core.tv_editable_tail = (function tv_editable_tail(tl){
var ret = [null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null];
cljs.core.array_copy(tl,(0),ret,(0),tl.length);

return ret;
});
cljs.core.tv_push_tail = (function tv_push_tail(tv,level,parent,tail_node){
var ret = cljs.core.tv_ensure_editable(tv.root.edit,parent);
var subidx = (((tv.cnt - (1)) >>> level) & (31));
cljs.core.pv_aset(ret,subidx,(((level === (5)))?tail_node:(function (){var child = cljs.core.pv_aget(ret,subidx);
if(!((child == null))){
return tv_push_tail(tv,(level - (5)),child,tail_node);
} else {
return cljs.core.new_path(tv.root.edit,(level - (5)),tail_node);
}
})()));

return ret;
});
cljs.core.tv_pop_tail = (function tv_pop_tail(tv,level,node){
var node__$1 = cljs.core.tv_ensure_editable(tv.root.edit,node);
var subidx = (((tv.cnt - (2)) >>> level) & (31));
if((level > (5))){
var new_child = tv_pop_tail(tv,(level - (5)),cljs.core.pv_aget(node__$1,subidx));
if(((new_child == null)) && ((subidx === (0)))){
return null;
} else {
cljs.core.pv_aset(node__$1,subidx,new_child);

return node__$1;
}
} else {
if((subidx === (0))){
return null;
} else {
cljs.core.pv_aset(node__$1,subidx,null);

return node__$1;

}
}
});
cljs.core.unchecked_editable_array_for = (function unchecked_editable_array_for(tv,i){
if((i >= cljs.core.tail_off(tv))){
return tv.tail;
} else {
var root = tv.root;
var node = root;
var level = tv.shift;
while(true){
if((level > (0))){
var G__36215 = cljs.core.tv_ensure_editable(root.edit,cljs.core.pv_aget(node,((i >>> level) & (31))));
var G__36216 = (level - (5));
node = G__36215;
level = G__36216;
continue;
} else {
return node.arr;
}
break;
}
}
});

/**
* @constructor
*/
cljs.core.TransientVector = (function (cnt,shift,root,tail){
this.cnt = cnt;
this.shift = shift;
this.root = root;
this.tail = tail;
this.cljs$lang$protocol_mask$partition0$ = 275;
this.cljs$lang$protocol_mask$partition1$ = 88;
})
cljs.core.TransientVector.prototype.call = (function() {
var G__36220 = null;
var G__36220__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__36220__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__36220 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__36220__2.call(this,self__,k);
case 3:
return G__36220__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__36220.cljs$core$IFn$_invoke$arity$2 = G__36220__2;
G__36220.cljs$core$IFn$_invoke$arity$3 = G__36220__3;
return G__36220;
})()
;

cljs.core.TransientVector.prototype.apply = (function (self__,args36217){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args36217)));
});

cljs.core.TransientVector.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.TransientVector.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.TransientVector.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.TransientVector.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
if(typeof k === 'number'){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(coll__$1,k,not_found);
} else {
return not_found;
}
});

cljs.core.TransientVector.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (coll,n){
var self__ = this;
var coll__$1 = this;
if(self__.root.edit){
return (cljs.core.array_for(coll__$1,n)[(n & (31))]);
} else {
throw (new Error("nth after persistent!"));
}
});

cljs.core.TransientVector.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (coll,n,not_found){
var self__ = this;
var coll__$1 = this;
if((((0) <= n)) && ((n < self__.cnt))){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll__$1,n);
} else {
return not_found;
}
});

cljs.core.TransientVector.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if(self__.root.edit){
return self__.cnt;
} else {
throw (new Error("count after persistent!"));
}
});

cljs.core.TransientVector.prototype.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3 = (function (tcoll,n,val){
var self__ = this;
var tcoll__$1 = this;
if(self__.root.edit){
if((((0) <= n)) && ((n < self__.cnt))){
if((cljs.core.tail_off(tcoll__$1) <= n)){
(self__.tail[(n & (31))] = val);

return tcoll__$1;
} else {
var new_root = ((function (tcoll__$1){
return (function go(level,node){
var node__$1 = cljs.core.tv_ensure_editable(self__.root.edit,node);
if((level === (0))){
cljs.core.pv_aset(node__$1,(n & (31)),val);

return node__$1;
} else {
var subidx = ((n >>> level) & (31));
cljs.core.pv_aset(node__$1,subidx,go((level - (5)),cljs.core.pv_aget(node__$1,subidx)));

return node__$1;
}
});})(tcoll__$1))
.call(null,self__.shift,self__.root);
self__.root = new_root;

return tcoll__$1;
}
} else {
if((n === self__.cnt)){
return cljs.core._conj_BANG_(tcoll__$1,val);
} else {
throw (new Error([cljs.core.str("Index "),cljs.core.str(n),cljs.core.str(" out of bounds for TransientVector of length"),cljs.core.str(self__.cnt)].join('')));

}
}
} else {
throw (new Error("assoc! after persistent!"));
}
});

cljs.core.TransientVector.prototype.cljs$core$ITransientVector$_pop_BANG_$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
if(self__.root.edit){
if((self__.cnt === (0))){
throw (new Error("Can't pop empty vector"));
} else {
if(((1) === self__.cnt)){
self__.cnt = (0);

return tcoll__$1;
} else {
if((((self__.cnt - (1)) & (31)) > (0))){
self__.cnt = (self__.cnt - (1));

return tcoll__$1;
} else {
var new_tail = cljs.core.unchecked_editable_array_for(tcoll__$1,(self__.cnt - (2)));
var new_root = (function (){var nr = cljs.core.tv_pop_tail(tcoll__$1,self__.shift,self__.root);
if(!((nr == null))){
return nr;
} else {
return (new cljs.core.VectorNode(self__.root.edit,[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null]));
}
})();
if((((5) < self__.shift)) && ((cljs.core.pv_aget(new_root,(1)) == null))){
var new_root__$1 = cljs.core.tv_ensure_editable(self__.root.edit,cljs.core.pv_aget(new_root,(0)));
self__.root = new_root__$1;

self__.shift = (self__.shift - (5));

self__.cnt = (self__.cnt - (1));

self__.tail = new_tail;

return tcoll__$1;
} else {
self__.root = new_root;

self__.cnt = (self__.cnt - (1));

self__.tail = new_tail;

return tcoll__$1;
}

}
}
}
} else {
throw (new Error("pop! after persistent!"));
}
});

cljs.core.TransientVector.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = (function (tcoll,key,val){
var self__ = this;
var tcoll__$1 = this;
if(typeof key === 'number'){
return cljs.core._assoc_n_BANG_(tcoll__$1,key,val);
} else {
throw (new Error("TransientVector's key for assoc! must be a number."));
}
});

cljs.core.TransientVector.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = (function (tcoll,o){
var self__ = this;
var tcoll__$1 = this;
if(self__.root.edit){
if(((self__.cnt - cljs.core.tail_off(tcoll__$1)) < (32))){
(self__.tail[(self__.cnt & (31))] = o);

self__.cnt = (self__.cnt + (1));

return tcoll__$1;
} else {
var tail_node = (new cljs.core.VectorNode(self__.root.edit,self__.tail));
var new_tail = [null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null];
(new_tail[(0)] = o);

self__.tail = new_tail;

if(((self__.cnt >>> (5)) > ((1) << self__.shift))){
var new_root_array = [null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null];
var new_shift = (self__.shift + (5));
(new_root_array[(0)] = self__.root);

(new_root_array[(1)] = cljs.core.new_path(self__.root.edit,self__.shift,tail_node));

self__.root = (new cljs.core.VectorNode(self__.root.edit,new_root_array));

self__.shift = new_shift;

self__.cnt = (self__.cnt + (1));

return tcoll__$1;
} else {
var new_root = cljs.core.tv_push_tail(tcoll__$1,self__.shift,self__.root,tail_node);
self__.root = new_root;

self__.cnt = (self__.cnt + (1));

return tcoll__$1;
}
}
} else {
throw (new Error("conj! after persistent!"));
}
});

cljs.core.TransientVector.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
if(self__.root.edit){
self__.root.edit = null;

var len = (self__.cnt - cljs.core.tail_off(tcoll__$1));
var trimmed_tail = (new Array(len));
cljs.core.array_copy(self__.tail,(0),trimmed_tail,(0),len);

return (new cljs.core.PersistentVector(null,self__.cnt,self__.shift,self__.root,trimmed_tail,null));
} else {
throw (new Error("persistent! called twice"));
}
});

cljs.core.TransientVector.cljs$lang$type = true;

cljs.core.TransientVector.cljs$lang$ctorStr = "cljs.core/TransientVector";

cljs.core.TransientVector.cljs$lang$ctorPrWriter = (function (this__24861__auto__,writer__24862__auto__,opt__24863__auto__){
return cljs.core._write(writer__24862__auto__,"cljs.core/TransientVector");
});

cljs.core.__GT_TransientVector = (function __GT_TransientVector(cnt,shift,root,tail){
return (new cljs.core.TransientVector(cnt,shift,root,tail));
});


/**
* @constructor
*/
cljs.core.PersistentQueueSeq = (function (meta,front,rear,__hash){
this.meta = meta;
this.front = front;
this.rear = rear;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 31850572;
})
cljs.core.PersistentQueueSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentQueueSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__24695__auto__ = self__.__hash;
if(!((h__24695__auto__ == null))){
return h__24695__auto__;
} else {
var h__24695__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__24695__auto____$1;

return h__24695__auto____$1;
}
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.first(self__.front);
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var temp__4124__auto__ = cljs.core.next(self__.front);
if(temp__4124__auto__){
var f1 = temp__4124__auto__;
return (new cljs.core.PersistentQueueSeq(self__.meta,f1,self__.rear,null));
} else {
if((self__.rear == null)){
return cljs.core._empty(coll__$1);
} else {
return (new cljs.core.PersistentQueueSeq(self__.meta,self__.rear,null,null));
}
}
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentQueueSeq(meta__$1,self__.front,self__.rear,self__.__hash));
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.PersistentQueueSeq.cljs$lang$type = true;

cljs.core.PersistentQueueSeq.cljs$lang$ctorStr = "cljs.core/PersistentQueueSeq";

cljs.core.PersistentQueueSeq.cljs$lang$ctorPrWriter = (function (this__24861__auto__,writer__24862__auto__,opt__24863__auto__){
return cljs.core._write(writer__24862__auto__,"cljs.core/PersistentQueueSeq");
});

cljs.core.__GT_PersistentQueueSeq = (function __GT_PersistentQueueSeq(meta,front,rear,__hash){
return (new cljs.core.PersistentQueueSeq(meta,front,rear,__hash));
});

(cljs.core.PersistentQueueSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__25252__auto__ = this;
return cljs.core.es6_iterator(this__25252__auto__);
}));

/**
* @constructor
*/
cljs.core.PersistentQueue = (function (meta,count,front,rear,__hash){
this.meta = meta;
this.count = count;
this.front = front;
this.rear = rear;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 31858766;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.PersistentQueue.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentQueue.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentQueue.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentQueue.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentQueue(self__.meta,self__.count,self__.front,self__.rear,self__.__hash));
});

cljs.core.PersistentQueue.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.count;
});

cljs.core.PersistentQueue.prototype.cljs$core$IStack$_peek$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.first(self__.front);
});

cljs.core.PersistentQueue.prototype.cljs$core$IStack$_pop$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if(cljs.core.truth_(self__.front)){
var temp__4124__auto__ = cljs.core.next(self__.front);
if(temp__4124__auto__){
var f1 = temp__4124__auto__;
return (new cljs.core.PersistentQueue(self__.meta,(self__.count - (1)),f1,self__.rear,null));
} else {
return (new cljs.core.PersistentQueue(self__.meta,(self__.count - (1)),cljs.core.seq(self__.rear),cljs.core.PersistentVector.EMPTY,null));
}
} else {
return coll__$1;
}
});

cljs.core.PersistentQueue.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__24695__auto__ = self__.__hash;
if(!((h__24695__auto__ == null))){
return h__24695__auto__;
} else {
var h__24695__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__24695__auto____$1;

return h__24695__auto____$1;
}
});

cljs.core.PersistentQueue.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.PersistentQueue.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.PersistentQueue.EMPTY,self__.meta);
});

cljs.core.PersistentQueue.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.first(self__.front);
});

cljs.core.PersistentQueue.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.rest(cljs.core.seq(coll__$1));
});

cljs.core.PersistentQueue.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var rear__$1 = cljs.core.seq(self__.rear);
if(cljs.core.truth_((function (){var or__24274__auto__ = self__.front;
if(cljs.core.truth_(or__24274__auto__)){
return or__24274__auto__;
} else {
return rear__$1;
}
})())){
return (new cljs.core.PersistentQueueSeq(null,self__.front,cljs.core.seq(rear__$1),null));
} else {
return null;
}
});

cljs.core.PersistentQueue.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentQueue(meta__$1,self__.count,self__.front,self__.rear,self__.__hash));
});

cljs.core.PersistentQueue.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
if(cljs.core.truth_(self__.front)){
return (new cljs.core.PersistentQueue(self__.meta,(self__.count + (1)),self__.front,cljs.core.conj.cljs$core$IFn$_invoke$arity$2((function (){var or__24274__auto__ = self__.rear;
if(cljs.core.truth_(or__24274__auto__)){
return or__24274__auto__;
} else {
return cljs.core.PersistentVector.EMPTY;
}
})(),o),null));
} else {
return (new cljs.core.PersistentQueue(self__.meta,(self__.count + (1)),cljs.core.conj.cljs$core$IFn$_invoke$arity$2(self__.front,o),cljs.core.PersistentVector.EMPTY,null));
}
});

cljs.core.PersistentQueue.cljs$lang$type = true;

cljs.core.PersistentQueue.cljs$lang$ctorStr = "cljs.core/PersistentQueue";

cljs.core.PersistentQueue.cljs$lang$ctorPrWriter = (function (this__24861__auto__,writer__24862__auto__,opt__24863__auto__){
return cljs.core._write(writer__24862__auto__,"cljs.core/PersistentQueue");
});

cljs.core.__GT_PersistentQueue = (function __GT_PersistentQueue(meta,count,front,rear,__hash){
return (new cljs.core.PersistentQueue(meta,count,front,rear,__hash));
});

cljs.core.PersistentQueue.EMPTY = (new cljs.core.PersistentQueue(null,(0),null,cljs.core.PersistentVector.EMPTY,(0)));
(cljs.core.PersistentQueue.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__25252__auto__ = this;
return cljs.core.es6_iterator(this__25252__auto__);
}));

/**
* @constructor
*/
cljs.core.NeverEquiv = (function (){
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 2097152;
})
cljs.core.NeverEquiv.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (o,other){
var self__ = this;
var o__$1 = this;
return false;
});

cljs.core.NeverEquiv.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.NeverEquiv.cljs$lang$type = true;

cljs.core.NeverEquiv.cljs$lang$ctorStr = "cljs.core/NeverEquiv";

cljs.core.NeverEquiv.cljs$lang$ctorPrWriter = (function (this__24861__auto__,writer__24862__auto__,opt__24863__auto__){
return cljs.core._write(writer__24862__auto__,"cljs.core/NeverEquiv");
});

cljs.core.__GT_NeverEquiv = (function __GT_NeverEquiv(){
return (new cljs.core.NeverEquiv());
});

cljs.core.never_equiv = (new cljs.core.NeverEquiv());
/**
* Assumes y is a map. Returns true if x equals y, otherwise returns
* false.
*/
cljs.core.equiv_map = (function equiv_map(x,y){
return cljs.core.boolean$(((cljs.core.map_QMARK_(y))?(((cljs.core.count(x) === cljs.core.count(y)))?cljs.core.every_QMARK_(cljs.core.identity,cljs.core.map.cljs$core$IFn$_invoke$arity$2((function (xkv){
return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$3(y,cljs.core.first(xkv),cljs.core.never_equiv),cljs.core.second(xkv));
}),x)):null):null));
});
cljs.core.scan_array = (function scan_array(incr,k,array){
var len = array.length;
var i = (0);
while(true){
if((i < len)){
if((k === (array[i]))){
return i;
} else {
var G__36221 = (i + incr);
i = G__36221;
continue;
}
} else {
return null;
}
break;
}
});
cljs.core.obj_map_compare_keys = (function obj_map_compare_keys(a,b){
var a__$1 = cljs.core.hash(a);
var b__$1 = cljs.core.hash(b);
if((a__$1 < b__$1)){
return (-1);
} else {
if((a__$1 > b__$1)){
return (1);
} else {
return (0);

}
}
});
cljs.core.obj_map__GT_hash_map = (function obj_map__GT_hash_map(m,k,v){
var ks = m.keys;
var len = ks.length;
var so = m.strobj;
var mm = cljs.core.meta(m);
var i = (0);
var out = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
while(true){
if((i < len)){
var k__$1 = (ks[i]);
var G__36222 = (i + (1));
var G__36223 = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(out,k__$1,(so[k__$1]));
i = G__36222;
out = G__36223;
continue;
} else {
return cljs.core.with_meta(cljs.core.persistent_BANG_(cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(out,k,v)),mm);
}
break;
}
});
cljs.core.obj_clone = (function obj_clone(obj,ks){
var new_obj = (function (){var obj36227 = {};
return obj36227;
})();
var l = ks.length;
var i_36228 = (0);
while(true){
if((i_36228 < l)){
var k_36229 = (ks[i_36228]);
(new_obj[k_36229] = (obj[k_36229]));

var G__36230 = (i_36228 + (1));
i_36228 = G__36230;
continue;
} else {
}
break;
}

return new_obj;
});

/**
* @constructor
*/
cljs.core.ObjMap = (function (meta,keys,strobj,update_count,__hash){
this.meta = meta;
this.keys = keys;
this.strobj = strobj;
this.update_count = update_count;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 16123663;
this.cljs$lang$protocol_mask$partition1$ = 4;
})
cljs.core.ObjMap.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.ObjMap.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.ObjMap.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.ObjMap.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
if(cljs.core.truth_((function (){var and__24262__auto__ = (function (){var G__36234 = k;
return goog.isString(G__36234);
})();
if(cljs.core.truth_(and__24262__auto__)){
return !((cljs.core.scan_array((1),k,self__.keys) == null));
} else {
return and__24262__auto__;
}
})())){
return (self__.strobj[k]);
} else {
return not_found;
}
});

cljs.core.ObjMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = (function (coll,f,init){
var self__ = this;
var coll__$1 = this;
var len = self__.keys.length;
var keys__$1 = self__.keys.sort(cljs.core.obj_map_compare_keys);
var init__$1 = init;
while(true){
if(cljs.core.seq(keys__$1)){
var k = cljs.core.first(keys__$1);
var init__$2 = (function (){var G__36235 = init__$1;
var G__36236 = k;
var G__36237 = (self__.strobj[k]);
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__36235,G__36236,G__36237) : f.call(null,G__36235,G__36236,G__36237));
})();
if(cljs.core.reduced_QMARK_(init__$2)){
var G__36238 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__36238) : cljs.core.deref.call(null,G__36238));
} else {
var G__36244 = cljs.core.rest(keys__$1);
var G__36245 = init__$2;
keys__$1 = G__36244;
init__$1 = G__36245;
continue;
}
} else {
return init__$1;
}
break;
}
});

cljs.core.ObjMap.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.ObjMap.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.keys.length;
});

cljs.core.ObjMap.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__24695__auto__ = self__.__hash;
if(!((h__24695__auto__ == null))){
return h__24695__auto__;
} else {
var h__24695__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
self__.__hash = h__24695__auto____$1;

return h__24695__auto____$1;
}
});

cljs.core.ObjMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_map(coll__$1,other);
});

cljs.core.ObjMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.transient$(cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentHashMap.EMPTY,coll__$1));
});

cljs.core.ObjMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.ObjMap.EMPTY,self__.meta);
});

cljs.core.ObjMap.prototype.cljs$core$IMap$_dissoc$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
if(cljs.core.truth_((function (){var and__24262__auto__ = (function (){var G__36240 = k;
return goog.isString(G__36240);
})();
if(cljs.core.truth_(and__24262__auto__)){
return !((cljs.core.scan_array((1),k,self__.keys) == null));
} else {
return and__24262__auto__;
}
})())){
var new_keys = cljs.core.aclone(self__.keys);
var new_strobj = cljs.core.obj_clone(self__.strobj,self__.keys);
new_keys.splice(cljs.core.scan_array((1),k,new_keys),(1));

delete new_strobj[k];

return (new cljs.core.ObjMap(self__.meta,new_keys,new_strobj,(self__.update_count + (1)),null));
} else {
return coll__$1;
}
});

cljs.core.ObjMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (coll,k,v){
var self__ = this;
var coll__$1 = this;
if(cljs.core.truth_((function (){var G__36241 = k;
return goog.isString(G__36241);
})())){
if(((self__.update_count > cljs.core.ObjMap.HASHMAP_THRESHOLD)) || ((self__.keys.length >= cljs.core.ObjMap.HASHMAP_THRESHOLD))){
return cljs.core.obj_map__GT_hash_map(coll__$1,k,v);
} else {
if(!((cljs.core.scan_array((1),k,self__.keys) == null))){
var new_strobj = cljs.core.obj_clone(self__.strobj,self__.keys);
(new_strobj[k] = v);

return (new cljs.core.ObjMap(self__.meta,self__.keys,new_strobj,(self__.update_count + (1)),null));
} else {
var new_strobj = cljs.core.obj_clone(self__.strobj,self__.keys);
var new_keys = cljs.core.aclone(self__.keys);
(new_strobj[k] = v);

new_keys.push(k);

return (new cljs.core.ObjMap(self__.meta,new_keys,new_strobj,(self__.update_count + (1)),null));
}
}
} else {
return cljs.core.obj_map__GT_hash_map(coll__$1,k,v);
}
});

cljs.core.ObjMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
if(cljs.core.truth_((function (){var and__24262__auto__ = (function (){var G__36243 = k;
return goog.isString(G__36243);
})();
if(cljs.core.truth_(and__24262__auto__)){
return !((cljs.core.scan_array((1),k,self__.keys) == null));
} else {
return and__24262__auto__;
}
})())){
return true;
} else {
return false;
}
});

cljs.core.ObjMap.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.keys.length > (0))){
return cljs.core.map.cljs$core$IFn$_invoke$arity$2(((function (coll__$1){
return (function (p1__36231_SHARP_){
return (new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[p1__36231_SHARP_,(self__.strobj[p1__36231_SHARP_])],null));
});})(coll__$1))
,self__.keys.sort(cljs.core.obj_map_compare_keys));
} else {
return null;
}
});

cljs.core.ObjMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.ObjMap(meta__$1,self__.keys,self__.strobj,self__.update_count,self__.__hash));
});

cljs.core.ObjMap.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,entry){
var self__ = this;
var coll__$1 = this;
if(cljs.core.vector_QMARK_(entry)){
return cljs.core._assoc(coll__$1,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(1)));
} else {
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj,coll__$1,entry);
}
});

cljs.core.ObjMap.prototype.call = (function() {
var G__36246 = null;
var G__36246__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__36246__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__36246 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__36246__2.call(this,self__,k);
case 3:
return G__36246__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__36246.cljs$core$IFn$_invoke$arity$2 = G__36246__2;
G__36246.cljs$core$IFn$_invoke$arity$3 = G__36246__3;
return G__36246;
})()
;

cljs.core.ObjMap.prototype.apply = (function (self__,args36232){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args36232)));
});

cljs.core.ObjMap.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.ObjMap.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.ObjMap.cljs$lang$type = true;

cljs.core.ObjMap.cljs$lang$ctorStr = "cljs.core/ObjMap";

cljs.core.ObjMap.cljs$lang$ctorPrWriter = (function (this__24861__auto__,writer__24862__auto__,opt__24863__auto__){
return cljs.core._write(writer__24862__auto__,"cljs.core/ObjMap");
});

cljs.core.__GT_ObjMap = (function __GT_ObjMap(meta,keys,strobj,update_count,__hash){
return (new cljs.core.ObjMap(meta,keys,strobj,update_count,__hash));
});

cljs.core.ObjMap.EMPTY = (new cljs.core.ObjMap(null,[],(function (){var obj36248 = {};
return obj36248;
})(),(0),(0)));
cljs.core.ObjMap.HASHMAP_THRESHOLD = (8);
cljs.core.ObjMap.fromObject = (function (ks,obj){
return (new cljs.core.ObjMap(null,ks,obj,(0),null));
});

/**
* @constructor
*/
cljs.core.ES6EntriesIterator = (function (s){
this.s = s;
})
cljs.core.ES6EntriesIterator.prototype.next = (function (){
var self__ = this;
var _ = this;
if(!((self__.s == null))){
var vec__36249 = cljs.core.first(self__.s);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__36249,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__36249,(1),null);
self__.s = cljs.core.next(self__.s);

return {"done": false, "value": [k,v]};
} else {
return {"done": true, "value": null};
}
});

cljs.core.ES6EntriesIterator.cljs$lang$type = true;

cljs.core.ES6EntriesIterator.cljs$lang$ctorStr = "cljs.core/ES6EntriesIterator";

cljs.core.ES6EntriesIterator.cljs$lang$ctorPrWriter = (function (this__24861__auto__,writer__24862__auto__,opt__24863__auto__){
return cljs.core._write(writer__24862__auto__,"cljs.core/ES6EntriesIterator");
});

cljs.core.__GT_ES6EntriesIterator = (function __GT_ES6EntriesIterator(s){
return (new cljs.core.ES6EntriesIterator(s));
});

cljs.core.es6_entries_iterator = (function es6_entries_iterator(coll){
return (new cljs.core.ES6EntriesIterator(cljs.core.seq(coll)));
});

/**
* @constructor
*/
cljs.core.ES6SetEntriesIterator = (function (s){
this.s = s;
})
cljs.core.ES6SetEntriesIterator.prototype.next = (function (){
var self__ = this;
var _ = this;
if(!((self__.s == null))){
var x = cljs.core.first(self__.s);
self__.s = cljs.core.next(self__.s);

return {"done": false, "value": [x,x]};
} else {
return {"done": true, "value": null};
}
});

cljs.core.ES6SetEntriesIterator.cljs$lang$type = true;

cljs.core.ES6SetEntriesIterator.cljs$lang$ctorStr = "cljs.core/ES6SetEntriesIterator";

cljs.core.ES6SetEntriesIterator.cljs$lang$ctorPrWriter = (function (this__24861__auto__,writer__24862__auto__,opt__24863__auto__){
return cljs.core._write(writer__24862__auto__,"cljs.core/ES6SetEntriesIterator");
});

cljs.core.__GT_ES6SetEntriesIterator = (function __GT_ES6SetEntriesIterator(s){
return (new cljs.core.ES6SetEntriesIterator(s));
});

cljs.core.es6_set_entries_iterator = (function es6_set_entries_iterator(coll){
return (new cljs.core.ES6SetEntriesIterator(cljs.core.seq(coll)));
});
cljs.core.array_map_index_of_nil_QMARK_ = (function array_map_index_of_nil_QMARK_(arr,m,k){
var len = arr.length;
var i = (0);
while(true){
if((len <= i)){
return (-1);
} else {
if(((arr[i]) == null)){
return i;
} else {
var G__36250 = (i + (2));
i = G__36250;
continue;

}
}
break;
}
});
cljs.core.array_map_index_of_keyword_QMARK_ = (function array_map_index_of_keyword_QMARK_(arr,m,k){
var len = arr.length;
var kstr = k.fqn;
var i = (0);
while(true){
if((len <= i)){
return (-1);
} else {
if((function (){var k_SINGLEQUOTE_ = (arr[i]);
return ((k_SINGLEQUOTE_ instanceof cljs.core.Keyword)) && ((kstr === k_SINGLEQUOTE_.fqn));
})()){
return i;
} else {
var G__36251 = (i + (2));
i = G__36251;
continue;

}
}
break;
}
});
cljs.core.array_map_index_of_symbol_QMARK_ = (function array_map_index_of_symbol_QMARK_(arr,m,k){
var len = arr.length;
var kstr = k.str;
var i = (0);
while(true){
if((len <= i)){
return (-1);
} else {
if((function (){var k_SINGLEQUOTE_ = (arr[i]);
return ((k_SINGLEQUOTE_ instanceof cljs.core.Symbol)) && ((kstr === k_SINGLEQUOTE_.str));
})()){
return i;
} else {
var G__36252 = (i + (2));
i = G__36252;
continue;

}
}
break;
}
});
cljs.core.array_map_index_of_identical_QMARK_ = (function array_map_index_of_identical_QMARK_(arr,m,k){
var len = arr.length;
var i = (0);
while(true){
if((len <= i)){
return (-1);
} else {
if((k === (arr[i]))){
return i;
} else {
var G__36253 = (i + (2));
i = G__36253;
continue;

}
}
break;
}
});
cljs.core.array_map_index_of_equiv_QMARK_ = (function array_map_index_of_equiv_QMARK_(arr,m,k){
var len = arr.length;
var i = (0);
while(true){
if((len <= i)){
return (-1);
} else {
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(k,(arr[i]))){
return i;
} else {
var G__36254 = (i + (2));
i = G__36254;
continue;

}
}
break;
}
});
cljs.core.array_map_index_of = (function array_map_index_of(m,k){
var arr = m.arr;
if((k instanceof cljs.core.Keyword)){
return cljs.core.array_map_index_of_keyword_QMARK_(arr,m,k);
} else {
if(cljs.core.truth_((function (){var or__24274__auto__ = (function (){var G__36258 = k;
return goog.isString(G__36258);
})();
if(cljs.core.truth_(or__24274__auto__)){
return or__24274__auto__;
} else {
return typeof k === 'number';
}
})())){
return cljs.core.array_map_index_of_identical_QMARK_(arr,m,k);
} else {
if((k instanceof cljs.core.Symbol)){
return cljs.core.array_map_index_of_symbol_QMARK_(arr,m,k);
} else {
if((k == null)){
return cljs.core.array_map_index_of_nil_QMARK_(arr,m,k);
} else {
return cljs.core.array_map_index_of_equiv_QMARK_(arr,m,k);

}
}
}
}
});
cljs.core.array_map_extend_kv = (function array_map_extend_kv(m,k,v){
var arr = m.arr;
var l = arr.length;
var narr = (new Array((l + (2))));
var i_36259 = (0);
while(true){
if((i_36259 < l)){
(narr[i_36259] = (arr[i_36259]));

var G__36260 = (i_36259 + (1));
i_36259 = G__36260;
continue;
} else {
}
break;
}

(narr[l] = k);

(narr[(l + (1))] = v);

return narr;
});

/**
* @constructor
*/
cljs.core.PersistentArrayMapSeq = (function (arr,i,_meta){
this.arr = arr;
this.i = i;
this._meta = _meta;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32374990;
})
cljs.core.PersistentArrayMapSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentArrayMapSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__._meta;
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.i < (self__.arr.length - (2)))){
return (new cljs.core.PersistentArrayMapSeq(self__.arr,(self__.i + (2)),self__._meta));
} else {
return null;
}
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return ((self__.arr.length - self__.i) / (2));
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.hash_ordered_coll(coll__$1);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__._meta);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(self__.arr[self__.i]),(self__.arr[(self__.i + (1))])], null);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.i < (self__.arr.length - (2)))){
return (new cljs.core.PersistentArrayMapSeq(self__.arr,(self__.i + (2)),self__._meta));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,new_meta){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentArrayMapSeq(self__.arr,self__.i,new_meta));
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.PersistentArrayMapSeq.cljs$lang$type = true;

cljs.core.PersistentArrayMapSeq.cljs$lang$ctorStr = "cljs.core/PersistentArrayMapSeq";

cljs.core.PersistentArrayMapSeq.cljs$lang$ctorPrWriter = (function (this__24861__auto__,writer__24862__auto__,opt__24863__auto__){
return cljs.core._write(writer__24862__auto__,"cljs.core/PersistentArrayMapSeq");
});

cljs.core.__GT_PersistentArrayMapSeq = (function __GT_PersistentArrayMapSeq(arr,i,_meta){
return (new cljs.core.PersistentArrayMapSeq(arr,i,_meta));
});

(cljs.core.PersistentArrayMapSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__25252__auto__ = this;
return cljs.core.es6_iterator(this__25252__auto__);
}));
cljs.core.persistent_array_map_seq = (function persistent_array_map_seq(arr,i,_meta){
if((i <= (arr.length - (2)))){
return (new cljs.core.PersistentArrayMapSeq(arr,i,_meta));
} else {
return null;
}
});


/**
* @constructor
*/
cljs.core.PersistentArrayMapIterator = (function (arr,i,cnt){
this.arr = arr;
this.i = i;
this.cnt = cnt;
})
cljs.core.PersistentArrayMapIterator.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
return (self__.i < self__.cnt);
});

cljs.core.PersistentArrayMapIterator.prototype.next = (function (){
var self__ = this;
var _ = this;
var ret = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(self__.arr[self__.i]),(self__.arr[(self__.i + (1))])], null);
self__.i = (self__.i + (2));

return ret;
});

cljs.core.PersistentArrayMapIterator.cljs$lang$type = true;

cljs.core.PersistentArrayMapIterator.cljs$lang$ctorStr = "cljs.core/PersistentArrayMapIterator";

cljs.core.PersistentArrayMapIterator.cljs$lang$ctorPrWriter = (function (this__24861__auto__,writer__24862__auto__,opt__24863__auto__){
return cljs.core._write(writer__24862__auto__,"cljs.core/PersistentArrayMapIterator");
});

cljs.core.__GT_PersistentArrayMapIterator = (function __GT_PersistentArrayMapIterator(arr,i,cnt){
return (new cljs.core.PersistentArrayMapIterator(arr,i,cnt));
});


/**
* @constructor
*/
cljs.core.PersistentArrayMap = (function (meta,cnt,arr,__hash){
this.meta = meta;
this.cnt = cnt;
this.arr = arr;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 16647951;
this.cljs$lang$protocol_mask$partition1$ = 8196;
})
cljs.core.PersistentArrayMap.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentArrayMap.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentArrayMap.prototype.keys = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator((function (){var G__36262 = coll;
return (cljs.core.keys.cljs$core$IFn$_invoke$arity$1 ? cljs.core.keys.cljs$core$IFn$_invoke$arity$1(G__36262) : cljs.core.keys.call(null,G__36262));
})());
});

cljs.core.PersistentArrayMap.prototype.entries = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_entries_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentArrayMap.prototype.values = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator((function (){var G__36263 = coll;
return (cljs.core.vals.cljs$core$IFn$_invoke$arity$1 ? cljs.core.vals.cljs$core$IFn$_invoke$arity$1(G__36263) : cljs.core.vals.call(null,G__36263));
})());
});

cljs.core.PersistentArrayMap.prototype.has = (function (k){
var self__ = this;
var coll = this;
return cljs.core.contains_QMARK_(coll,k);
});

cljs.core.PersistentArrayMap.prototype.get = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentArrayMap.prototype.forEach = (function (f){
var self__ = this;
var coll = this;
var seq__36264 = cljs.core.seq(coll);
var chunk__36265 = null;
var count__36266 = (0);
var i__36267 = (0);
while(true){
if((i__36267 < count__36266)){
var vec__36268 = chunk__36265.cljs$core$IIndexed$_nth$arity$2(null,i__36267);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__36268,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__36268,(1),null);
var G__36269_36282 = v;
var G__36270_36283 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__36269_36282,G__36270_36283) : f.call(null,G__36269_36282,G__36270_36283));

var G__36284 = seq__36264;
var G__36285 = chunk__36265;
var G__36286 = count__36266;
var G__36287 = (i__36267 + (1));
seq__36264 = G__36284;
chunk__36265 = G__36285;
count__36266 = G__36286;
i__36267 = G__36287;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__36264);
if(temp__4126__auto__){
var seq__36264__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__36264__$1)){
var c__25061__auto__ = cljs.core.chunk_first(seq__36264__$1);
var G__36288 = cljs.core.chunk_rest(seq__36264__$1);
var G__36289 = c__25061__auto__;
var G__36290 = cljs.core.count(c__25061__auto__);
var G__36291 = (0);
seq__36264 = G__36288;
chunk__36265 = G__36289;
count__36266 = G__36290;
i__36267 = G__36291;
continue;
} else {
var vec__36271 = cljs.core.first(seq__36264__$1);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__36271,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__36271,(1),null);
var G__36272_36292 = v;
var G__36273_36293 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__36272_36292,G__36273_36293) : f.call(null,G__36272_36292,G__36273_36293));

var G__36294 = cljs.core.next(seq__36264__$1);
var G__36295 = null;
var G__36296 = (0);
var G__36297 = (0);
seq__36264 = G__36294;
chunk__36265 = G__36295;
count__36266 = G__36296;
i__36267 = G__36297;
continue;
}
} else {
return null;
}
}
break;
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.PersistentArrayMap.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
var idx = cljs.core.array_map_index_of(coll__$1,k);
if((idx === (-1))){
return not_found;
} else {
return (self__.arr[(idx + (1))]);
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = (function (coll,f,init){
var self__ = this;
var coll__$1 = this;
var len = self__.arr.length;
var i = (0);
var init__$1 = init;
while(true){
if((i < len)){
var init__$2 = (function (){var G__36274 = init__$1;
var G__36275 = (self__.arr[i]);
var G__36276 = (self__.arr[(i + (1))]);
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__36274,G__36275,G__36276) : f.call(null,G__36274,G__36275,G__36276));
})();
if(cljs.core.reduced_QMARK_(init__$2)){
var G__36277 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__36277) : cljs.core.deref.call(null,G__36277));
} else {
var G__36298 = (i + (2));
var G__36299 = init__$2;
i = G__36298;
init__$1 = G__36299;
continue;
}
} else {
return init__$1;
}
break;
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IIterable$ = true;

cljs.core.PersistentArrayMap.prototype.cljs$core$IIterable$_iterator$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return (new cljs.core.PersistentArrayMapIterator(self__.arr,(0),(self__.cnt * (2))));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentArrayMap.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.PersistentArrayMap(self__.meta,self__.cnt,self__.arr,self__.__hash));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.cnt;
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__24695__auto__ = self__.__hash;
if(!((h__24695__auto__ == null))){
return h__24695__auto__;
} else {
var h__24695__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
self__.__hash = h__24695__auto____$1;

return h__24695__auto____$1;
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
if((function (){var G__36278 = other;
if(G__36278){
var bit__24948__auto__ = (G__36278.cljs$lang$protocol_mask$partition0$ & (1024));
if((bit__24948__auto__) || (G__36278.cljs$core$IMap$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
var alen = self__.arr.length;
var other__$1 = other;
if((self__.cnt === other__$1.cljs$core$ICounted$_count$arity$1(null))){
var i = (0);
while(true){
if((i < alen)){
var v = other__$1.cljs$core$ILookup$_lookup$arity$3(null,(self__.arr[i]),cljs.core.lookup_sentinel);
if(!((v === cljs.core.lookup_sentinel))){
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2((self__.arr[(i + (1))]),v)){
var G__36300 = (i + (2));
i = G__36300;
continue;
} else {
return false;
}
} else {
return false;
}
} else {
return true;
}
break;
}
} else {
return false;
}
} else {
return cljs.core.equiv_map(coll__$1,other);
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.TransientArrayMap((function (){var obj36280 = {};
return obj36280;
})(),self__.arr.length,cljs.core.aclone(self__.arr)));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._with_meta(cljs.core.PersistentArrayMap.EMPTY,self__.meta);
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IMap$_dissoc$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
var idx = cljs.core.array_map_index_of(coll__$1,k);
if((idx >= (0))){
var len = self__.arr.length;
var new_len = (len - (2));
if((new_len === (0))){
return cljs.core._empty(coll__$1);
} else {
var new_arr = (new Array(new_len));
var s = (0);
var d = (0);
while(true){
if((s >= len)){
return (new cljs.core.PersistentArrayMap(self__.meta,(self__.cnt - (1)),new_arr,null));
} else {
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(k,(self__.arr[s]))){
var G__36301 = (s + (2));
var G__36302 = d;
s = G__36301;
d = G__36302;
continue;
} else {
(new_arr[d] = (self__.arr[s]));

(new_arr[(d + (1))] = (self__.arr[(s + (1))]));

var G__36303 = (s + (2));
var G__36304 = (d + (2));
s = G__36303;
d = G__36304;
continue;

}
}
break;
}
}
} else {
return coll__$1;
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (coll,k,v){
var self__ = this;
var coll__$1 = this;
var idx = cljs.core.array_map_index_of(coll__$1,k);
if((idx === (-1))){
if((self__.cnt < cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD)){
var arr__$1 = cljs.core.array_map_extend_kv(coll__$1,k,v);
return (new cljs.core.PersistentArrayMap(self__.meta,(self__.cnt + (1)),arr__$1,null));
} else {
return cljs.core._with_meta(cljs.core._assoc(cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentHashMap.EMPTY,coll__$1),k,v),self__.meta);
}
} else {
if((v === (self__.arr[(idx + (1))]))){
return coll__$1;
} else {
var arr__$1 = (function (){var G__36281 = cljs.core.aclone(self__.arr);
(G__36281[(idx + (1))] = v);

return G__36281;
})();
return (new cljs.core.PersistentArrayMap(self__.meta,self__.cnt,arr__$1,null));

}
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return !((cljs.core.array_map_index_of(coll__$1,k) === (-1)));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.persistent_array_map_seq(self__.arr,(0),null);
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentArrayMap(meta__$1,self__.cnt,self__.arr,self__.__hash));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,entry){
var self__ = this;
var coll__$1 = this;
if(cljs.core.vector_QMARK_(entry)){
return cljs.core._assoc(coll__$1,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(1)));
} else {
var ret = coll__$1;
var es = cljs.core.seq(entry);
while(true){
if((es == null)){
return ret;
} else {
var e = cljs.core.first(es);
if(cljs.core.vector_QMARK_(e)){
var G__36305 = cljs.core._assoc(ret,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e,(1)));
var G__36306 = cljs.core.next(es);
ret = G__36305;
es = G__36306;
continue;
} else {
throw (new Error("conj on a map takes map entries or seqables of map entries"));
}
}
break;
}
}
});

cljs.core.PersistentArrayMap.prototype.call = (function() {
var G__36307 = null;
var G__36307__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__36307__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__36307 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__36307__2.call(this,self__,k);
case 3:
return G__36307__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__36307.cljs$core$IFn$_invoke$arity$2 = G__36307__2;
G__36307.cljs$core$IFn$_invoke$arity$3 = G__36307__3;
return G__36307;
})()
;

cljs.core.PersistentArrayMap.prototype.apply = (function (self__,args36261){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args36261)));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.PersistentArrayMap.cljs$lang$type = true;

cljs.core.PersistentArrayMap.cljs$lang$ctorStr = "cljs.core/PersistentArrayMap";

cljs.core.PersistentArrayMap.cljs$lang$ctorPrWriter = (function (this__24861__auto__,writer__24862__auto__,opt__24863__auto__){
return cljs.core._write(writer__24862__auto__,"cljs.core/PersistentArrayMap");
});

cljs.core.__GT_PersistentArrayMap = (function __GT_PersistentArrayMap(meta,cnt,arr,__hash){
return (new cljs.core.PersistentArrayMap(meta,cnt,arr,__hash));
});

cljs.core.PersistentArrayMap.EMPTY = (new cljs.core.PersistentArrayMap(null,(0),[],null));
cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD = (8);
cljs.core.PersistentArrayMap.fromArray = (function (arr,no_clone,no_check){
var arr__$1 = ((no_clone)?arr:cljs.core.aclone(arr));
if(no_check){
var cnt = (arr__$1.length / (2));
return (new cljs.core.PersistentArrayMap(null,cnt,arr__$1,null));
} else {
var len = arr__$1.length;
var i = (0);
var ret = cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY);
while(true){
if((i < len)){
var G__36308 = (i + (2));
var G__36309 = cljs.core._assoc_BANG_(ret,(arr__$1[i]),(arr__$1[(i + (1))]));
i = G__36308;
ret = G__36309;
continue;
} else {
return cljs.core._persistent_BANG_(ret);
}
break;
}
}
});
(cljs.core.PersistentArrayMap.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__25252__auto__ = this;
return cljs.core.es6_iterator(this__25252__auto__);
}));

/**
* @constructor
*/
cljs.core.TransientArrayMap = (function (editable_QMARK_,len,arr){
this.editable_QMARK_ = editable_QMARK_;
this.len = len;
this.arr = arr;
this.cljs$lang$protocol_mask$partition1$ = 56;
this.cljs$lang$protocol_mask$partition0$ = 258;
})
cljs.core.TransientArrayMap.prototype.cljs$core$ITransientMap$_dissoc_BANG_$arity$2 = (function (tcoll,key){
var self__ = this;
var tcoll__$1 = this;
if(cljs.core.truth_(self__.editable_QMARK_)){
var idx = cljs.core.array_map_index_of(tcoll__$1,key);
if((idx >= (0))){
(self__.arr[idx] = (self__.arr[(self__.len - (2))]));

(self__.arr[(idx + (1))] = (self__.arr[(self__.len - (1))]));

var G__36310_36318 = self__.arr;
G__36310_36318.pop();

G__36310_36318.pop();


self__.len = (self__.len - (2));
} else {
}

return tcoll__$1;
} else {
throw (new Error("dissoc! after persistent!"));
}
});

cljs.core.TransientArrayMap.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = (function (tcoll,key,val){
var self__ = this;
var tcoll__$1 = this;
if(cljs.core.truth_(self__.editable_QMARK_)){
var idx = cljs.core.array_map_index_of(tcoll__$1,key);
if((idx === (-1))){
if(((self__.len + (2)) <= ((2) * cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD))){
self__.len = (self__.len + (2));

self__.arr.push(key);

self__.arr.push(val);

return tcoll__$1;
} else {
return cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3((function (){var G__36311 = self__.len;
var G__36312 = self__.arr;
return (cljs.core.array__GT_transient_hash_map.cljs$core$IFn$_invoke$arity$2 ? cljs.core.array__GT_transient_hash_map.cljs$core$IFn$_invoke$arity$2(G__36311,G__36312) : cljs.core.array__GT_transient_hash_map.call(null,G__36311,G__36312));
})(),key,val);
}
} else {
if((val === (self__.arr[(idx + (1))]))){
return tcoll__$1;
} else {
(self__.arr[(idx + (1))] = val);

return tcoll__$1;
}
}
} else {
throw (new Error("assoc! after persistent!"));
}
});

cljs.core.TransientArrayMap.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = (function (tcoll,o){
var self__ = this;
var tcoll__$1 = this;
if(cljs.core.truth_(self__.editable_QMARK_)){
if((function (){var G__36313 = o;
if(G__36313){
var bit__24955__auto__ = (G__36313.cljs$lang$protocol_mask$partition0$ & (2048));
if((bit__24955__auto__) || (G__36313.cljs$core$IMapEntry$)){
return true;
} else {
if((!G__36313.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IMapEntry,G__36313);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IMapEntry,G__36313);
}
})()){
return cljs.core._assoc_BANG_(tcoll__$1,(function (){var G__36314 = o;
return (cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__36314) : cljs.core.key.call(null,G__36314));
})(),(function (){var G__36315 = o;
return (cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(G__36315) : cljs.core.val.call(null,G__36315));
})());
} else {
var es = cljs.core.seq(o);
var tcoll__$2 = tcoll__$1;
while(true){
var temp__4124__auto__ = cljs.core.first(es);
if(cljs.core.truth_(temp__4124__auto__)){
var e = temp__4124__auto__;
var G__36319 = cljs.core.next(es);
var G__36320 = cljs.core._assoc_BANG_(tcoll__$2,(function (){var G__36316 = e;
return (cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__36316) : cljs.core.key.call(null,G__36316));
})(),(function (){var G__36317 = e;
return (cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(G__36317) : cljs.core.val.call(null,G__36317));
})());
es = G__36319;
tcoll__$2 = G__36320;
continue;
} else {
return tcoll__$2;
}
break;
}
}
} else {
throw (new Error("conj! after persistent!"));
}
});

cljs.core.TransientArrayMap.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
if(cljs.core.truth_(self__.editable_QMARK_)){
self__.editable_QMARK_ = false;

return (new cljs.core.PersistentArrayMap(null,cljs.core.quot(self__.len,(2)),self__.arr,null));
} else {
throw (new Error("persistent! called twice"));
}
});

cljs.core.TransientArrayMap.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (tcoll,k){
var self__ = this;
var tcoll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(tcoll__$1,k,null);
});

cljs.core.TransientArrayMap.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (tcoll,k,not_found){
var self__ = this;
var tcoll__$1 = this;
if(cljs.core.truth_(self__.editable_QMARK_)){
var idx = cljs.core.array_map_index_of(tcoll__$1,k);
if((idx === (-1))){
return not_found;
} else {
return (self__.arr[(idx + (1))]);
}
} else {
throw (new Error("lookup after persistent!"));
}
});

cljs.core.TransientArrayMap.prototype.cljs$core$ICounted$_count$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
if(cljs.core.truth_(self__.editable_QMARK_)){
return cljs.core.quot(self__.len,(2));
} else {
throw (new Error("count after persistent!"));
}
});

cljs.core.TransientArrayMap.cljs$lang$type = true;

cljs.core.TransientArrayMap.cljs$lang$ctorStr = "cljs.core/TransientArrayMap";

cljs.core.TransientArrayMap.cljs$lang$ctorPrWriter = (function (this__24861__auto__,writer__24862__auto__,opt__24863__auto__){
return cljs.core._write(writer__24862__auto__,"cljs.core/TransientArrayMap");
});

cljs.core.__GT_TransientArrayMap = (function __GT_TransientArrayMap(editable_QMARK_,len,arr){
return (new cljs.core.TransientArrayMap(editable_QMARK_,len,arr));
});


cljs.core.array__GT_transient_hash_map = (function array__GT_transient_hash_map(len,arr){
var out = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
var i = (0);
while(true){
if((i < len)){
var G__36321 = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(out,(arr[i]),(arr[(i + (1))]));
var G__36322 = (i + (2));
out = G__36321;
i = G__36322;
continue;
} else {
return out;
}
break;
}
});

/**
* @constructor
*/
cljs.core.Box = (function (val){
this.val = val;
})

cljs.core.Box.cljs$lang$type = true;

cljs.core.Box.cljs$lang$ctorStr = "cljs.core/Box";

cljs.core.Box.cljs$lang$ctorPrWriter = (function (this__24861__auto__,writer__24862__auto__,opt__24863__auto__){
return cljs.core._write(writer__24862__auto__,"cljs.core/Box");
});

cljs.core.__GT_Box = (function __GT_Box(val){
return (new cljs.core.Box(val));
});






cljs.core.key_test = (function key_test(key,other){
if((key === other)){
return true;
} else {
if(cljs.core.keyword_identical_QMARK_(key,other)){
return true;
} else {
return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(key,other);

}
}
});
cljs.core.mask = (function mask(hash,shift){
return ((hash >>> shift) & (31));
});
cljs.core.clone_and_set = (function() {
var clone_and_set = null;
var clone_and_set__3 = (function (arr,i,a){
var G__36325 = cljs.core.aclone(arr);
(G__36325[i] = a);

return G__36325;
});
var clone_and_set__5 = (function (arr,i,a,j,b){
var G__36326 = cljs.core.aclone(arr);
(G__36326[i] = a);

(G__36326[j] = b);

return G__36326;
});
clone_and_set = function(arr,i,a,j,b){
switch(arguments.length){
case 3:
return clone_and_set__3.call(this,arr,i,a);
case 5:
return clone_and_set__5.call(this,arr,i,a,j,b);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
clone_and_set.cljs$core$IFn$_invoke$arity$3 = clone_and_set__3;
clone_and_set.cljs$core$IFn$_invoke$arity$5 = clone_and_set__5;
return clone_and_set;
})()
;
cljs.core.remove_pair = (function remove_pair(arr,i){
var new_arr = (new Array((arr.length - (2))));
cljs.core.array_copy(arr,(0),new_arr,(0),((2) * i));

cljs.core.array_copy(arr,((2) * (i + (1))),new_arr,((2) * i),(new_arr.length - ((2) * i)));

return new_arr;
});
cljs.core.bitmap_indexed_node_index = (function bitmap_indexed_node_index(bitmap,bit){
return cljs.core.bit_count((bitmap & (bit - (1))));
});
cljs.core.bitpos = (function bitpos(hash,shift){
return ((1) << ((hash >>> shift) & 0x01f));
});
cljs.core.edit_and_set = (function() {
var edit_and_set = null;
var edit_and_set__4 = (function (inode,edit,i,a){
var editable = inode.ensure_editable(edit);
(editable.arr[i] = a);

return editable;
});
var edit_and_set__6 = (function (inode,edit,i,a,j,b){
var editable = inode.ensure_editable(edit);
(editable.arr[i] = a);

(editable.arr[j] = b);

return editable;
});
edit_and_set = function(inode,edit,i,a,j,b){
switch(arguments.length){
case 4:
return edit_and_set__4.call(this,inode,edit,i,a);
case 6:
return edit_and_set__6.call(this,inode,edit,i,a,j,b);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
edit_and_set.cljs$core$IFn$_invoke$arity$4 = edit_and_set__4;
edit_and_set.cljs$core$IFn$_invoke$arity$6 = edit_and_set__6;
return edit_and_set;
})()
;
cljs.core.inode_kv_reduce = (function inode_kv_reduce(arr,f,init){
var len = arr.length;
var i = (0);
var init__$1 = init;
while(true){
if((i < len)){
var init__$2 = (function (){var k = (arr[i]);
if(!((k == null))){
var G__36331 = init__$1;
var G__36332 = k;
var G__36333 = (arr[(i + (1))]);
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__36331,G__36332,G__36333) : f.call(null,G__36331,G__36332,G__36333));
} else {
var node = (arr[(i + (1))]);
if(!((node == null))){
return node.kv_reduce(f,init__$1);
} else {
return init__$1;
}
}
})();
if(cljs.core.reduced_QMARK_(init__$2)){
var G__36334 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__36334) : cljs.core.deref.call(null,G__36334));
} else {
var G__36335 = (i + (2));
var G__36336 = init__$2;
i = G__36335;
init__$1 = G__36336;
continue;
}
} else {
return init__$1;
}
break;
}
});

/**
* @constructor
*/
cljs.core.BitmapIndexedNode = (function (edit,bitmap,arr){
this.edit = edit;
this.bitmap = bitmap;
this.arr = arr;
})
cljs.core.BitmapIndexedNode.prototype.ensure_editable = (function (e){
var self__ = this;
var inode = this;
if((e === self__.edit)){
return inode;
} else {
var n = cljs.core.bit_count(self__.bitmap);
var new_arr = (new Array((((n < (0)))?(4):((2) * (n + (1))))));
cljs.core.array_copy(self__.arr,(0),new_arr,(0),((2) * n));

return (new cljs.core.BitmapIndexedNode(e,self__.bitmap,new_arr));
}
});

cljs.core.BitmapIndexedNode.prototype.inode_without_BANG_ = (function (edit__$1,shift,hash,key,removed_leaf_QMARK_){
var self__ = this;
var inode = this;
var bit = (1 << ((hash >>> shift) & 0x01f));
if(((self__.bitmap & bit) === (0))){
return inode;
} else {
var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap,bit);
var key_or_nil = (self__.arr[((2) * idx)]);
var val_or_node = (self__.arr[(((2) * idx) + (1))]);
if((key_or_nil == null)){
var n = val_or_node.inode_without_BANG_(edit__$1,(shift + (5)),hash,key,removed_leaf_QMARK_);
if((n === val_or_node)){
return inode;
} else {
if(!((n == null))){
return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,(((2) * idx) + (1)),n);
} else {
if((self__.bitmap === bit)){
return null;
} else {
return inode.edit_and_remove_pair(edit__$1,bit,idx);

}
}
}
} else {
if(cljs.core.key_test(key,key_or_nil)){
(removed_leaf_QMARK_[(0)] = true);

return inode.edit_and_remove_pair(edit__$1,bit,idx);
} else {
return inode;

}
}
}
});

cljs.core.BitmapIndexedNode.prototype.edit_and_remove_pair = (function (e,bit,i){
var self__ = this;
var inode = this;
if((self__.bitmap === bit)){
return null;
} else {
var editable = inode.ensure_editable(e);
var earr = editable.arr;
var len = earr.length;
editable.bitmap = (bit ^ editable.bitmap);

cljs.core.array_copy(earr,((2) * (i + (1))),earr,((2) * i),(len - ((2) * (i + (1)))));

(earr[(len - (2))] = null);

(earr[(len - (1))] = null);

return editable;
}
});

cljs.core.BitmapIndexedNode.prototype.inode_seq = (function (){
var self__ = this;
var inode = this;
var G__36337 = self__.arr;
return (cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1 ? cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1(G__36337) : cljs.core.create_inode_seq.call(null,G__36337));
});

cljs.core.BitmapIndexedNode.prototype.kv_reduce = (function (f,init){
var self__ = this;
var inode = this;
return cljs.core.inode_kv_reduce(self__.arr,f,init);
});

cljs.core.BitmapIndexedNode.prototype.inode_lookup = (function (shift,hash,key,not_found){
var self__ = this;
var inode = this;
var bit = (1 << ((hash >>> shift) & 0x01f));
if(((self__.bitmap & bit) === (0))){
return not_found;
} else {
var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap,bit);
var key_or_nil = (self__.arr[((2) * idx)]);
var val_or_node = (self__.arr[(((2) * idx) + (1))]);
if((key_or_nil == null)){
return val_or_node.inode_lookup((shift + (5)),hash,key,not_found);
} else {
if(cljs.core.key_test(key,key_or_nil)){
return val_or_node;
} else {
return not_found;

}
}
}
});

cljs.core.BitmapIndexedNode.prototype.inode_assoc_BANG_ = (function (edit__$1,shift,hash,key,val,added_leaf_QMARK_){
var self__ = this;
var inode = this;
var bit = (1 << ((hash >>> shift) & 0x01f));
var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap,bit);
if(((self__.bitmap & bit) === (0))){
var n = cljs.core.bit_count(self__.bitmap);
if((((2) * n) < self__.arr.length)){
var editable = inode.ensure_editable(edit__$1);
var earr = editable.arr;
added_leaf_QMARK_.val = true;

cljs.core.array_copy_downward(earr,((2) * idx),earr,((2) * (idx + (1))),((2) * (n - idx)));

(earr[((2) * idx)] = key);

(earr[(((2) * idx) + (1))] = val);

editable.bitmap = (editable.bitmap | bit);

return editable;
} else {
if((n >= (16))){
var nodes = [null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null];
var jdx = ((hash >>> shift) & 0x01f);
(nodes[jdx] = cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit__$1,(shift + (5)),hash,key,val,added_leaf_QMARK_));

var i_36351 = (0);
var j_36352 = (0);
while(true){
if((i_36351 < (32))){
if((((self__.bitmap >>> i_36351) & (1)) === (0))){
var G__36353 = (i_36351 + (1));
var G__36354 = j_36352;
i_36351 = G__36353;
j_36352 = G__36354;
continue;
} else {
(nodes[i_36351] = ((!(((self__.arr[j_36352]) == null)))?cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit__$1,(shift + (5)),cljs.core.hash((self__.arr[j_36352])),(self__.arr[j_36352]),(self__.arr[(j_36352 + (1))]),added_leaf_QMARK_):(self__.arr[(j_36352 + (1))])));

var G__36355 = (i_36351 + (1));
var G__36356 = (j_36352 + (2));
i_36351 = G__36355;
j_36352 = G__36356;
continue;
}
} else {
}
break;
}

return (new cljs.core.ArrayNode(edit__$1,(n + (1)),nodes));
} else {
var new_arr = (new Array(((2) * (n + (4)))));
cljs.core.array_copy(self__.arr,(0),new_arr,(0),((2) * idx));

(new_arr[((2) * idx)] = key);

(new_arr[(((2) * idx) + (1))] = val);

cljs.core.array_copy(self__.arr,((2) * idx),new_arr,((2) * (idx + (1))),((2) * (n - idx)));

added_leaf_QMARK_.val = true;

var editable = inode.ensure_editable(edit__$1);
editable.arr = new_arr;

editable.bitmap = (editable.bitmap | bit);

return editable;

}
}
} else {
var key_or_nil = (self__.arr[((2) * idx)]);
var val_or_node = (self__.arr[(((2) * idx) + (1))]);
if((key_or_nil == null)){
var n = val_or_node.inode_assoc_BANG_(edit__$1,(shift + (5)),hash,key,val,added_leaf_QMARK_);
if((n === val_or_node)){
return inode;
} else {
return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,(((2) * idx) + (1)),n);
}
} else {
if(cljs.core.key_test(key,key_or_nil)){
if((val === val_or_node)){
return inode;
} else {
return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,(((2) * idx) + (1)),val);
}
} else {
added_leaf_QMARK_.val = true;

return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$6(inode,edit__$1,((2) * idx),null,(((2) * idx) + (1)),(function (){var G__36338 = edit__$1;
var G__36339 = (shift + (5));
var G__36340 = key_or_nil;
var G__36341 = val_or_node;
var G__36342 = hash;
var G__36343 = key;
var G__36344 = val;
return (cljs.core.create_node.cljs$core$IFn$_invoke$arity$7 ? cljs.core.create_node.cljs$core$IFn$_invoke$arity$7(G__36338,G__36339,G__36340,G__36341,G__36342,G__36343,G__36344) : cljs.core.create_node.call(null,G__36338,G__36339,G__36340,G__36341,G__36342,G__36343,G__36344));
})());

}
}
}
});

cljs.core.BitmapIndexedNode.prototype.inode_assoc = (function (shift,hash,key,val,added_leaf_QMARK_){
var self__ = this;
var inode = this;
var bit = (1 << ((hash >>> shift) & 0x01f));
var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap,bit);
if(((self__.bitmap & bit) === (0))){
var n = cljs.core.bit_count(self__.bitmap);
if((n >= (16))){
var nodes = [null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null];
var jdx = ((hash >>> shift) & 0x01f);
(nodes[jdx] = cljs.core.BitmapIndexedNode.EMPTY.inode_assoc((shift + (5)),hash,key,val,added_leaf_QMARK_));

var i_36357 = (0);
var j_36358 = (0);
while(true){
if((i_36357 < (32))){
if((((self__.bitmap >>> i_36357) & (1)) === (0))){
var G__36359 = (i_36357 + (1));
var G__36360 = j_36358;
i_36357 = G__36359;
j_36358 = G__36360;
continue;
} else {
(nodes[i_36357] = ((!(((self__.arr[j_36358]) == null)))?cljs.core.BitmapIndexedNode.EMPTY.inode_assoc((shift + (5)),cljs.core.hash((self__.arr[j_36358])),(self__.arr[j_36358]),(self__.arr[(j_36358 + (1))]),added_leaf_QMARK_):(self__.arr[(j_36358 + (1))])));

var G__36361 = (i_36357 + (1));
var G__36362 = (j_36358 + (2));
i_36357 = G__36361;
j_36358 = G__36362;
continue;
}
} else {
}
break;
}

return (new cljs.core.ArrayNode(null,(n + (1)),nodes));
} else {
var new_arr = (new Array(((2) * (n + (1)))));
cljs.core.array_copy(self__.arr,(0),new_arr,(0),((2) * idx));

(new_arr[((2) * idx)] = key);

(new_arr[(((2) * idx) + (1))] = val);

cljs.core.array_copy(self__.arr,((2) * idx),new_arr,((2) * (idx + (1))),((2) * (n - idx)));

added_leaf_QMARK_.val = true;

return (new cljs.core.BitmapIndexedNode(null,(self__.bitmap | bit),new_arr));
}
} else {
var key_or_nil = (self__.arr[((2) * idx)]);
var val_or_node = (self__.arr[(((2) * idx) + (1))]);
if((key_or_nil == null)){
var n = val_or_node.inode_assoc((shift + (5)),hash,key,val,added_leaf_QMARK_);
if((n === val_or_node)){
return inode;
} else {
return (new cljs.core.BitmapIndexedNode(null,self__.bitmap,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,(((2) * idx) + (1)),n)));
}
} else {
if(cljs.core.key_test(key,key_or_nil)){
if((val === val_or_node)){
return inode;
} else {
return (new cljs.core.BitmapIndexedNode(null,self__.bitmap,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,(((2) * idx) + (1)),val)));
}
} else {
added_leaf_QMARK_.val = true;

return (new cljs.core.BitmapIndexedNode(null,self__.bitmap,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$5(self__.arr,((2) * idx),null,(((2) * idx) + (1)),(function (){var G__36345 = (shift + (5));
var G__36346 = key_or_nil;
var G__36347 = val_or_node;
var G__36348 = hash;
var G__36349 = key;
var G__36350 = val;
return (cljs.core.create_node.cljs$core$IFn$_invoke$arity$6 ? cljs.core.create_node.cljs$core$IFn$_invoke$arity$6(G__36345,G__36346,G__36347,G__36348,G__36349,G__36350) : cljs.core.create_node.call(null,G__36345,G__36346,G__36347,G__36348,G__36349,G__36350));
})())));

}
}
}
});

cljs.core.BitmapIndexedNode.prototype.inode_find = (function (shift,hash,key,not_found){
var self__ = this;
var inode = this;
var bit = (1 << ((hash >>> shift) & 0x01f));
if(((self__.bitmap & bit) === (0))){
return not_found;
} else {
var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap,bit);
var key_or_nil = (self__.arr[((2) * idx)]);
var val_or_node = (self__.arr[(((2) * idx) + (1))]);
if((key_or_nil == null)){
return val_or_node.inode_find((shift + (5)),hash,key,not_found);
} else {
if(cljs.core.key_test(key,key_or_nil)){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [key_or_nil,val_or_node], null);
} else {
return not_found;

}
}
}
});

cljs.core.BitmapIndexedNode.prototype.inode_without = (function (shift,hash,key){
var self__ = this;
var inode = this;
var bit = (1 << ((hash >>> shift) & 0x01f));
if(((self__.bitmap & bit) === (0))){
return inode;
} else {
var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap,bit);
var key_or_nil = (self__.arr[((2) * idx)]);
var val_or_node = (self__.arr[(((2) * idx) + (1))]);
if((key_or_nil == null)){
var n = val_or_node.inode_without((shift + (5)),hash,key);
if((n === val_or_node)){
return inode;
} else {
if(!((n == null))){
return (new cljs.core.BitmapIndexedNode(null,self__.bitmap,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,(((2) * idx) + (1)),n)));
} else {
if((self__.bitmap === bit)){
return null;
} else {
return (new cljs.core.BitmapIndexedNode(null,(self__.bitmap ^ bit),cljs.core.remove_pair(self__.arr,idx)));

}
}
}
} else {
if(cljs.core.key_test(key,key_or_nil)){
return (new cljs.core.BitmapIndexedNode(null,(self__.bitmap ^ bit),cljs.core.remove_pair(self__.arr,idx)));
} else {
return inode;

}
}
}
});

cljs.core.BitmapIndexedNode.cljs$lang$type = true;

cljs.core.BitmapIndexedNode.cljs$lang$ctorStr = "cljs.core/BitmapIndexedNode";

cljs.core.BitmapIndexedNode.cljs$lang$ctorPrWriter = (function (this__24861__auto__,writer__24862__auto__,opt__24863__auto__){
return cljs.core._write(writer__24862__auto__,"cljs.core/BitmapIndexedNode");
});

cljs.core.__GT_BitmapIndexedNode = (function __GT_BitmapIndexedNode(edit,bitmap,arr){
return (new cljs.core.BitmapIndexedNode(edit,bitmap,arr));
});

cljs.core.BitmapIndexedNode.EMPTY = (new cljs.core.BitmapIndexedNode(null,(0),[]));
cljs.core.pack_array_node = (function pack_array_node(array_node,edit,idx){
var arr = array_node.arr;
var len = arr.length;
var new_arr = (new Array(((2) * (array_node.cnt - (1)))));
var i = (0);
var j = (1);
var bitmap = (0);
while(true){
if((i < len)){
if((!((i === idx))) && (!(((arr[i]) == null)))){
(new_arr[j] = (arr[i]));

var G__36363 = (i + (1));
var G__36364 = (j + (2));
var G__36365 = (bitmap | ((1) << i));
i = G__36363;
j = G__36364;
bitmap = G__36365;
continue;
} else {
var G__36366 = (i + (1));
var G__36367 = j;
var G__36368 = bitmap;
i = G__36366;
j = G__36367;
bitmap = G__36368;
continue;
}
} else {
return (new cljs.core.BitmapIndexedNode(edit,bitmap,new_arr));
}
break;
}
});

/**
* @constructor
*/
cljs.core.ArrayNode = (function (edit,cnt,arr){
this.edit = edit;
this.cnt = cnt;
this.arr = arr;
})
cljs.core.ArrayNode.prototype.ensure_editable = (function (e){
var self__ = this;
var inode = this;
if((e === self__.edit)){
return inode;
} else {
return (new cljs.core.ArrayNode(e,self__.cnt,cljs.core.aclone(self__.arr)));
}
});

cljs.core.ArrayNode.prototype.inode_without_BANG_ = (function (edit__$1,shift,hash,key,removed_leaf_QMARK_){
var self__ = this;
var inode = this;
var idx = ((hash >>> shift) & 0x01f);
var node = (self__.arr[idx]);
if((node == null)){
return inode;
} else {
var n = node.inode_without_BANG_(edit__$1,(shift + (5)),hash,key,removed_leaf_QMARK_);
if((n === node)){
return inode;
} else {
if((n == null)){
if((self__.cnt <= (8))){
return cljs.core.pack_array_node(inode,edit__$1,idx);
} else {
var editable = cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,idx,n);
editable.cnt = (editable.cnt - (1));

return editable;
}
} else {
return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,idx,n);

}
}
}
});

cljs.core.ArrayNode.prototype.inode_seq = (function (){
var self__ = this;
var inode = this;
var G__36369 = self__.arr;
return (cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$1 ? cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$1(G__36369) : cljs.core.create_array_node_seq.call(null,G__36369));
});

cljs.core.ArrayNode.prototype.kv_reduce = (function (f,init){
var self__ = this;
var inode = this;
var len = self__.arr.length;
var i = (0);
var init__$1 = init;
while(true){
if((i < len)){
var node = (self__.arr[i]);
if(!((node == null))){
var init__$2 = node.kv_reduce(f,init__$1);
if(cljs.core.reduced_QMARK_(init__$2)){
var G__36370 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__36370) : cljs.core.deref.call(null,G__36370));
} else {
var G__36371 = (i + (1));
var G__36372 = init__$2;
i = G__36371;
init__$1 = G__36372;
continue;
}
} else {
var G__36373 = (i + (1));
var G__36374 = init__$1;
i = G__36373;
init__$1 = G__36374;
continue;
}
} else {
return init__$1;
}
break;
}
});

cljs.core.ArrayNode.prototype.inode_lookup = (function (shift,hash,key,not_found){
var self__ = this;
var inode = this;
var idx = ((hash >>> shift) & 0x01f);
var node = (self__.arr[idx]);
if(!((node == null))){
return node.inode_lookup((shift + (5)),hash,key,not_found);
} else {
return not_found;
}
});

cljs.core.ArrayNode.prototype.inode_assoc_BANG_ = (function (edit__$1,shift,hash,key,val,added_leaf_QMARK_){
var self__ = this;
var inode = this;
var idx = ((hash >>> shift) & 0x01f);
var node = (self__.arr[idx]);
if((node == null)){
var editable = cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,idx,cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit__$1,(shift + (5)),hash,key,val,added_leaf_QMARK_));
editable.cnt = (editable.cnt + (1));

return editable;
} else {
var n = node.inode_assoc_BANG_(edit__$1,(shift + (5)),hash,key,val,added_leaf_QMARK_);
if((n === node)){
return inode;
} else {
return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,idx,n);
}
}
});

cljs.core.ArrayNode.prototype.inode_assoc = (function (shift,hash,key,val,added_leaf_QMARK_){
var self__ = this;
var inode = this;
var idx = ((hash >>> shift) & 0x01f);
var node = (self__.arr[idx]);
if((node == null)){
return (new cljs.core.ArrayNode(null,(self__.cnt + (1)),cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,idx,cljs.core.BitmapIndexedNode.EMPTY.inode_assoc((shift + (5)),hash,key,val,added_leaf_QMARK_))));
} else {
var n = node.inode_assoc((shift + (5)),hash,key,val,added_leaf_QMARK_);
if((n === node)){
return inode;
} else {
return (new cljs.core.ArrayNode(null,self__.cnt,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,idx,n)));
}
}
});

cljs.core.ArrayNode.prototype.inode_find = (function (shift,hash,key,not_found){
var self__ = this;
var inode = this;
var idx = ((hash >>> shift) & 0x01f);
var node = (self__.arr[idx]);
if(!((node == null))){
return node.inode_find((shift + (5)),hash,key,not_found);
} else {
return not_found;
}
});

cljs.core.ArrayNode.prototype.inode_without = (function (shift,hash,key){
var self__ = this;
var inode = this;
var idx = ((hash >>> shift) & 0x01f);
var node = (self__.arr[idx]);
if(!((node == null))){
var n = node.inode_without((shift + (5)),hash,key);
if((n === node)){
return inode;
} else {
if((n == null)){
if((self__.cnt <= (8))){
return cljs.core.pack_array_node(inode,null,idx);
} else {
return (new cljs.core.ArrayNode(null,(self__.cnt - (1)),cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,idx,n)));
}
} else {
return (new cljs.core.ArrayNode(null,self__.cnt,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,idx,n)));

}
}
} else {
return inode;
}
});

cljs.core.ArrayNode.cljs$lang$type = true;

cljs.core.ArrayNode.cljs$lang$ctorStr = "cljs.core/ArrayNode";

cljs.core.ArrayNode.cljs$lang$ctorPrWriter = (function (this__24861__auto__,writer__24862__auto__,opt__24863__auto__){
return cljs.core._write(writer__24862__auto__,"cljs.core/ArrayNode");
});

cljs.core.__GT_ArrayNode = (function __GT_ArrayNode(edit,cnt,arr){
return (new cljs.core.ArrayNode(edit,cnt,arr));
});

cljs.core.hash_collision_node_find_index = (function hash_collision_node_find_index(arr,cnt,key){
var lim = ((2) * cnt);
var i = (0);
while(true){
if((i < lim)){
if(cljs.core.key_test(key,(arr[i]))){
return i;
} else {
var G__36375 = (i + (2));
i = G__36375;
continue;
}
} else {
return (-1);
}
break;
}
});

/**
* @constructor
*/
cljs.core.HashCollisionNode = (function (edit,collision_hash,cnt,arr){
this.edit = edit;
this.collision_hash = collision_hash;
this.cnt = cnt;
this.arr = arr;
})
cljs.core.HashCollisionNode.prototype.ensure_editable = (function (e){
var self__ = this;
var inode = this;
if((e === self__.edit)){
return inode;
} else {
var new_arr = (new Array(((2) * (self__.cnt + (1)))));
cljs.core.array_copy(self__.arr,(0),new_arr,(0),((2) * self__.cnt));

return (new cljs.core.HashCollisionNode(e,self__.collision_hash,self__.cnt,new_arr));
}
});

cljs.core.HashCollisionNode.prototype.inode_without_BANG_ = (function (edit__$1,shift,hash,key,removed_leaf_QMARK_){
var self__ = this;
var inode = this;
var idx = cljs.core.hash_collision_node_find_index(self__.arr,self__.cnt,key);
if((idx === (-1))){
return inode;
} else {
(removed_leaf_QMARK_[(0)] = true);

if((self__.cnt === (1))){
return null;
} else {
var editable = inode.ensure_editable(edit__$1);
var earr = editable.arr;
(earr[idx] = (earr[(((2) * self__.cnt) - (2))]));

(earr[(idx + (1))] = (earr[(((2) * self__.cnt) - (1))]));

(earr[(((2) * self__.cnt) - (1))] = null);

(earr[(((2) * self__.cnt) - (2))] = null);

editable.cnt = (editable.cnt - (1));

return editable;
}
}
});

cljs.core.HashCollisionNode.prototype.inode_seq = (function (){
var self__ = this;
var inode = this;
var G__36376 = self__.arr;
return (cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1 ? cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1(G__36376) : cljs.core.create_inode_seq.call(null,G__36376));
});

cljs.core.HashCollisionNode.prototype.kv_reduce = (function (f,init){
var self__ = this;
var inode = this;
return cljs.core.inode_kv_reduce(self__.arr,f,init);
});

cljs.core.HashCollisionNode.prototype.inode_lookup = (function (shift,hash,key,not_found){
var self__ = this;
var inode = this;
var idx = cljs.core.hash_collision_node_find_index(self__.arr,self__.cnt,key);
if((idx < (0))){
return not_found;
} else {
if(cljs.core.key_test(key,(self__.arr[idx]))){
return (self__.arr[(idx + (1))]);
} else {
return not_found;

}
}
});

cljs.core.HashCollisionNode.prototype.inode_assoc_BANG_ = (function (edit__$1,shift,hash,key,val,added_leaf_QMARK_){
var self__ = this;
var inode = this;
if((hash === self__.collision_hash)){
var idx = cljs.core.hash_collision_node_find_index(self__.arr,self__.cnt,key);
if((idx === (-1))){
if((self__.arr.length > ((2) * self__.cnt))){
var editable = cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$6(inode,edit__$1,((2) * self__.cnt),key,(((2) * self__.cnt) + (1)),val);
added_leaf_QMARK_.val = true;

editable.cnt = (editable.cnt + (1));

return editable;
} else {
var len = self__.arr.length;
var new_arr = (new Array((len + (2))));
cljs.core.array_copy(self__.arr,(0),new_arr,(0),len);

(new_arr[len] = key);

(new_arr[(len + (1))] = val);

added_leaf_QMARK_.val = true;

return inode.ensure_editable_array(edit__$1,(self__.cnt + (1)),new_arr);
}
} else {
if(((self__.arr[(idx + (1))]) === val)){
return inode;
} else {
return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,(idx + (1)),val);
}
}
} else {
return (new cljs.core.BitmapIndexedNode(edit__$1,(1 << ((self__.collision_hash >>> shift) & 0x01f)),[null,inode,null,null])).inode_assoc_BANG_(edit__$1,shift,hash,key,val,added_leaf_QMARK_);
}
});

cljs.core.HashCollisionNode.prototype.inode_assoc = (function (shift,hash,key,val,added_leaf_QMARK_){
var self__ = this;
var inode = this;
if((hash === self__.collision_hash)){
var idx = cljs.core.hash_collision_node_find_index(self__.arr,self__.cnt,key);
if((idx === (-1))){
var len = ((2) * self__.cnt);
var new_arr = (new Array((len + (2))));
cljs.core.array_copy(self__.arr,(0),new_arr,(0),len);

(new_arr[len] = key);

(new_arr[(len + (1))] = val);

added_leaf_QMARK_.val = true;

return (new cljs.core.HashCollisionNode(null,self__.collision_hash,(self__.cnt + (1)),new_arr));
} else {
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2((self__.arr[idx]),val)){
return inode;
} else {
return (new cljs.core.HashCollisionNode(null,self__.collision_hash,self__.cnt,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,(idx + (1)),val)));
}
}
} else {
return (new cljs.core.BitmapIndexedNode(null,(1 << ((self__.collision_hash >>> shift) & 0x01f)),[null,inode])).inode_assoc(shift,hash,key,val,added_leaf_QMARK_);
}
});

cljs.core.HashCollisionNode.prototype.ensure_editable_array = (function (e,count,array){
var self__ = this;
var inode = this;
if((e === self__.edit)){
self__.arr = array;

self__.cnt = count;

return inode;
} else {
return (new cljs.core.HashCollisionNode(self__.edit,self__.collision_hash,count,array));
}
});

cljs.core.HashCollisionNode.prototype.inode_find = (function (shift,hash,key,not_found){
var self__ = this;
var inode = this;
var idx = cljs.core.hash_collision_node_find_index(self__.arr,self__.cnt,key);
if((idx < (0))){
return not_found;
} else {
if(cljs.core.key_test(key,(self__.arr[idx]))){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(self__.arr[idx]),(self__.arr[(idx + (1))])], null);
} else {
return not_found;

}
}
});

cljs.core.HashCollisionNode.prototype.inode_without = (function (shift,hash,key){
var self__ = this;
var inode = this;
var idx = cljs.core.hash_collision_node_find_index(self__.arr,self__.cnt,key);
if((idx === (-1))){
return inode;
} else {
if((self__.cnt === (1))){
return null;
} else {
return (new cljs.core.HashCollisionNode(null,self__.collision_hash,(self__.cnt - (1)),cljs.core.remove_pair(self__.arr,cljs.core.quot(idx,(2)))));

}
}
});

cljs.core.HashCollisionNode.cljs$lang$type = true;

cljs.core.HashCollisionNode.cljs$lang$ctorStr = "cljs.core/HashCollisionNode";

cljs.core.HashCollisionNode.cljs$lang$ctorPrWriter = (function (this__24861__auto__,writer__24862__auto__,opt__24863__auto__){
return cljs.core._write(writer__24862__auto__,"cljs.core/HashCollisionNode");
});

cljs.core.__GT_HashCollisionNode = (function __GT_HashCollisionNode(edit,collision_hash,cnt,arr){
return (new cljs.core.HashCollisionNode(edit,collision_hash,cnt,arr));
});

cljs.core.create_node = (function() {
var create_node = null;
var create_node__6 = (function (shift,key1,val1,key2hash,key2,val2){
var key1hash = cljs.core.hash(key1);
if((key1hash === key2hash)){
return (new cljs.core.HashCollisionNode(null,key1hash,(2),[key1,val1,key2,val2]));
} else {
var added_leaf_QMARK_ = (new cljs.core.Box(false));
return cljs.core.BitmapIndexedNode.EMPTY.inode_assoc(shift,key1hash,key1,val1,added_leaf_QMARK_).inode_assoc(shift,key2hash,key2,val2,added_leaf_QMARK_);
}
});
var create_node__7 = (function (edit,shift,key1,val1,key2hash,key2,val2){
var key1hash = cljs.core.hash(key1);
if((key1hash === key2hash)){
return (new cljs.core.HashCollisionNode(null,key1hash,(2),[key1,val1,key2,val2]));
} else {
var added_leaf_QMARK_ = (new cljs.core.Box(false));
return cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit,shift,key1hash,key1,val1,added_leaf_QMARK_).inode_assoc_BANG_(edit,shift,key2hash,key2,val2,added_leaf_QMARK_);
}
});
create_node = function(edit,shift,key1,val1,key2hash,key2,val2){
switch(arguments.length){
case 6:
return create_node__6.call(this,edit,shift,key1,val1,key2hash,key2);
case 7:
return create_node__7.call(this,edit,shift,key1,val1,key2hash,key2,val2);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
create_node.cljs$core$IFn$_invoke$arity$6 = create_node__6;
create_node.cljs$core$IFn$_invoke$arity$7 = create_node__7;
return create_node;
})()
;

/**
* @constructor
*/
cljs.core.NodeSeq = (function (meta,nodes,i,s,__hash){
this.meta = meta;
this.nodes = nodes;
this.i = i;
this.s = s;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32374860;
})
cljs.core.NodeSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.NodeSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.NodeSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.NodeSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__24695__auto__ = self__.__hash;
if(!((h__24695__auto__ == null))){
return h__24695__auto__;
} else {
var h__24695__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__24695__auto____$1;

return h__24695__auto____$1;
}
});

cljs.core.NodeSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.NodeSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.NodeSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.NodeSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.NodeSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.s == null)){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(self__.nodes[self__.i]),(self__.nodes[(self__.i + (1))])], null);
} else {
return cljs.core.first(self__.s);
}
});

cljs.core.NodeSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.s == null)){
var G__36377 = self__.nodes;
var G__36378 = (self__.i + (2));
var G__36379 = null;
return (cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3 ? cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3(G__36377,G__36378,G__36379) : cljs.core.create_inode_seq.call(null,G__36377,G__36378,G__36379));
} else {
var G__36380 = self__.nodes;
var G__36381 = self__.i;
var G__36382 = cljs.core.next(self__.s);
return (cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3 ? cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3(G__36380,G__36381,G__36382) : cljs.core.create_inode_seq.call(null,G__36380,G__36381,G__36382));
}
});

cljs.core.NodeSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return this$__$1;
});

cljs.core.NodeSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.NodeSeq(meta__$1,self__.nodes,self__.i,self__.s,self__.__hash));
});

cljs.core.NodeSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.NodeSeq.cljs$lang$type = true;

cljs.core.NodeSeq.cljs$lang$ctorStr = "cljs.core/NodeSeq";

cljs.core.NodeSeq.cljs$lang$ctorPrWriter = (function (this__24861__auto__,writer__24862__auto__,opt__24863__auto__){
return cljs.core._write(writer__24862__auto__,"cljs.core/NodeSeq");
});

cljs.core.__GT_NodeSeq = (function __GT_NodeSeq(meta,nodes,i,s,__hash){
return (new cljs.core.NodeSeq(meta,nodes,i,s,__hash));
});

(cljs.core.NodeSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__25252__auto__ = this;
return cljs.core.es6_iterator(this__25252__auto__);
}));
cljs.core.create_inode_seq = (function() {
var create_inode_seq = null;
var create_inode_seq__1 = (function (nodes){
return create_inode_seq.cljs$core$IFn$_invoke$arity$3(nodes,(0),null);
});
var create_inode_seq__3 = (function (nodes,i,s){
if((s == null)){
var len = nodes.length;
var j = i;
while(true){
if((j < len)){
if(!(((nodes[j]) == null))){
return (new cljs.core.NodeSeq(null,nodes,j,null,null));
} else {
var temp__4124__auto__ = (nodes[(j + (1))]);
if(cljs.core.truth_(temp__4124__auto__)){
var node = temp__4124__auto__;
var temp__4124__auto____$1 = node.inode_seq();
if(cljs.core.truth_(temp__4124__auto____$1)){
var node_seq = temp__4124__auto____$1;
return (new cljs.core.NodeSeq(null,nodes,(j + (2)),node_seq,null));
} else {
var G__36386 = (j + (2));
j = G__36386;
continue;
}
} else {
var G__36387 = (j + (2));
j = G__36387;
continue;
}
}
} else {
return null;
}
break;
}
} else {
return (new cljs.core.NodeSeq(null,nodes,i,s,null));
}
});
create_inode_seq = function(nodes,i,s){
switch(arguments.length){
case 1:
return create_inode_seq__1.call(this,nodes);
case 3:
return create_inode_seq__3.call(this,nodes,i,s);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
create_inode_seq.cljs$core$IFn$_invoke$arity$1 = create_inode_seq__1;
create_inode_seq.cljs$core$IFn$_invoke$arity$3 = create_inode_seq__3;
return create_inode_seq;
})()
;

/**
* @constructor
*/
cljs.core.ArrayNodeSeq = (function (meta,nodes,i,s,__hash){
this.meta = meta;
this.nodes = nodes;
this.i = i;
this.s = s;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32374860;
})
cljs.core.ArrayNodeSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.ArrayNodeSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__24695__auto__ = self__.__hash;
if(!((h__24695__auto__ == null))){
return h__24695__auto__;
} else {
var h__24695__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__24695__auto____$1;

return h__24695__auto____$1;
}
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.first(self__.s);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var G__36388 = null;
var G__36389 = self__.nodes;
var G__36390 = self__.i;
var G__36391 = cljs.core.next(self__.s);
return (cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$4(G__36388,G__36389,G__36390,G__36391) : cljs.core.create_array_node_seq.call(null,G__36388,G__36389,G__36390,G__36391));
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return this$__$1;
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.ArrayNodeSeq(meta__$1,self__.nodes,self__.i,self__.s,self__.__hash));
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.ArrayNodeSeq.cljs$lang$type = true;

cljs.core.ArrayNodeSeq.cljs$lang$ctorStr = "cljs.core/ArrayNodeSeq";

cljs.core.ArrayNodeSeq.cljs$lang$ctorPrWriter = (function (this__24861__auto__,writer__24862__auto__,opt__24863__auto__){
return cljs.core._write(writer__24862__auto__,"cljs.core/ArrayNodeSeq");
});

cljs.core.__GT_ArrayNodeSeq = (function __GT_ArrayNodeSeq(meta,nodes,i,s,__hash){
return (new cljs.core.ArrayNodeSeq(meta,nodes,i,s,__hash));
});

(cljs.core.ArrayNodeSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__25252__auto__ = this;
return cljs.core.es6_iterator(this__25252__auto__);
}));
cljs.core.create_array_node_seq = (function() {
var create_array_node_seq = null;
var create_array_node_seq__1 = (function (nodes){
return create_array_node_seq.cljs$core$IFn$_invoke$arity$4(null,nodes,(0),null);
});
var create_array_node_seq__4 = (function (meta,nodes,i,s){
if((s == null)){
var len = nodes.length;
var j = i;
while(true){
if((j < len)){
var temp__4124__auto__ = (nodes[j]);
if(cljs.core.truth_(temp__4124__auto__)){
var nj = temp__4124__auto__;
var temp__4124__auto____$1 = nj.inode_seq();
if(cljs.core.truth_(temp__4124__auto____$1)){
var ns = temp__4124__auto____$1;
return (new cljs.core.ArrayNodeSeq(meta,nodes,(j + (1)),ns,null));
} else {
var G__36396 = (j + (1));
j = G__36396;
continue;
}
} else {
var G__36397 = (j + (1));
j = G__36397;
continue;
}
} else {
return null;
}
break;
}
} else {
return (new cljs.core.ArrayNodeSeq(meta,nodes,i,s,null));
}
});
create_array_node_seq = function(meta,nodes,i,s){
switch(arguments.length){
case 1:
return create_array_node_seq__1.call(this,meta);
case 4:
return create_array_node_seq__4.call(this,meta,nodes,i,s);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
create_array_node_seq.cljs$core$IFn$_invoke$arity$1 = create_array_node_seq__1;
create_array_node_seq.cljs$core$IFn$_invoke$arity$4 = create_array_node_seq__4;
return create_array_node_seq;
})()
;

/**
* @constructor
*/
cljs.core.PersistentHashMap = (function (meta,cnt,root,has_nil_QMARK_,nil_val,__hash){
this.meta = meta;
this.cnt = cnt;
this.root = root;
this.has_nil_QMARK_ = has_nil_QMARK_;
this.nil_val = nil_val;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 16123663;
this.cljs$lang$protocol_mask$partition1$ = 8196;
})
cljs.core.PersistentHashMap.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentHashMap.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentHashMap.prototype.keys = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator((function (){var G__36399 = coll;
return (cljs.core.keys.cljs$core$IFn$_invoke$arity$1 ? cljs.core.keys.cljs$core$IFn$_invoke$arity$1(G__36399) : cljs.core.keys.call(null,G__36399));
})());
});

cljs.core.PersistentHashMap.prototype.entries = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_entries_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentHashMap.prototype.values = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator((function (){var G__36400 = coll;
return (cljs.core.vals.cljs$core$IFn$_invoke$arity$1 ? cljs.core.vals.cljs$core$IFn$_invoke$arity$1(G__36400) : cljs.core.vals.call(null,G__36400));
})());
});

cljs.core.PersistentHashMap.prototype.has = (function (k){
var self__ = this;
var coll = this;
return cljs.core.contains_QMARK_(coll,k);
});

cljs.core.PersistentHashMap.prototype.get = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentHashMap.prototype.forEach = (function (f){
var self__ = this;
var coll = this;
var seq__36401 = cljs.core.seq(coll);
var chunk__36402 = null;
var count__36403 = (0);
var i__36404 = (0);
while(true){
if((i__36404 < count__36403)){
var vec__36405 = chunk__36402.cljs$core$IIndexed$_nth$arity$2(null,i__36404);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__36405,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__36405,(1),null);
var G__36406_36417 = v;
var G__36407_36418 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__36406_36417,G__36407_36418) : f.call(null,G__36406_36417,G__36407_36418));

var G__36419 = seq__36401;
var G__36420 = chunk__36402;
var G__36421 = count__36403;
var G__36422 = (i__36404 + (1));
seq__36401 = G__36419;
chunk__36402 = G__36420;
count__36403 = G__36421;
i__36404 = G__36422;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__36401);
if(temp__4126__auto__){
var seq__36401__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__36401__$1)){
var c__25061__auto__ = cljs.core.chunk_first(seq__36401__$1);
var G__36423 = cljs.core.chunk_rest(seq__36401__$1);
var G__36424 = c__25061__auto__;
var G__36425 = cljs.core.count(c__25061__auto__);
var G__36426 = (0);
seq__36401 = G__36423;
chunk__36402 = G__36424;
count__36403 = G__36425;
i__36404 = G__36426;
continue;
} else {
var vec__36408 = cljs.core.first(seq__36401__$1);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__36408,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__36408,(1),null);
var G__36409_36427 = v;
var G__36410_36428 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__36409_36427,G__36410_36428) : f.call(null,G__36409_36427,G__36410_36428));

var G__36429 = cljs.core.next(seq__36401__$1);
var G__36430 = null;
var G__36431 = (0);
var G__36432 = (0);
seq__36401 = G__36429;
chunk__36402 = G__36430;
count__36403 = G__36431;
i__36404 = G__36432;
continue;
}
} else {
return null;
}
}
break;
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.PersistentHashMap.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
if((k == null)){
if(self__.has_nil_QMARK_){
return self__.nil_val;
} else {
return not_found;
}
} else {
if((self__.root == null)){
return not_found;
} else {
return self__.root.inode_lookup((0),cljs.core.hash(k),k,not_found);

}
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = (function (coll,f,init){
var self__ = this;
var coll__$1 = this;
var init__$1 = ((self__.has_nil_QMARK_)?(function (){var G__36411 = init;
var G__36412 = null;
var G__36413 = self__.nil_val;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__36411,G__36412,G__36413) : f.call(null,G__36411,G__36412,G__36413));
})():init);
if(cljs.core.reduced_QMARK_(init__$1)){
var G__36414 = init__$1;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__36414) : cljs.core.deref.call(null,G__36414));
} else {
if(!((self__.root == null))){
return self__.root.kv_reduce(f,init__$1);
} else {
return init__$1;

}
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentHashMap.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.PersistentHashMap(self__.meta,self__.cnt,self__.root,self__.has_nil_QMARK_,self__.nil_val,self__.__hash));
});

cljs.core.PersistentHashMap.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.cnt;
});

cljs.core.PersistentHashMap.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__24695__auto__ = self__.__hash;
if(!((h__24695__auto__ == null))){
return h__24695__auto__;
} else {
var h__24695__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
self__.__hash = h__24695__auto____$1;

return h__24695__auto____$1;
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_map(coll__$1,other);
});

cljs.core.PersistentHashMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.TransientHashMap((function (){var obj36416 = {};
return obj36416;
})(),self__.root,self__.cnt,self__.has_nil_QMARK_,self__.nil_val));
});

cljs.core.PersistentHashMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._with_meta(cljs.core.PersistentHashMap.EMPTY,self__.meta);
});

cljs.core.PersistentHashMap.prototype.cljs$core$IMap$_dissoc$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
if((k == null)){
if(self__.has_nil_QMARK_){
return (new cljs.core.PersistentHashMap(self__.meta,(self__.cnt - (1)),self__.root,false,null,null));
} else {
return coll__$1;
}
} else {
if((self__.root == null)){
return coll__$1;
} else {
var new_root = self__.root.inode_without((0),cljs.core.hash(k),k);
if((new_root === self__.root)){
return coll__$1;
} else {
return (new cljs.core.PersistentHashMap(self__.meta,(self__.cnt - (1)),new_root,self__.has_nil_QMARK_,self__.nil_val,null));
}

}
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (coll,k,v){
var self__ = this;
var coll__$1 = this;
if((k == null)){
if((self__.has_nil_QMARK_) && ((v === self__.nil_val))){
return coll__$1;
} else {
return (new cljs.core.PersistentHashMap(self__.meta,((self__.has_nil_QMARK_)?self__.cnt:(self__.cnt + (1))),self__.root,true,v,null));
}
} else {
var added_leaf_QMARK_ = (new cljs.core.Box(false));
var new_root = (((self__.root == null))?cljs.core.BitmapIndexedNode.EMPTY:self__.root).inode_assoc((0),cljs.core.hash(k),k,v,added_leaf_QMARK_);
if((new_root === self__.root)){
return coll__$1;
} else {
return (new cljs.core.PersistentHashMap(self__.meta,((added_leaf_QMARK_.val)?(self__.cnt + (1)):self__.cnt),new_root,self__.has_nil_QMARK_,self__.nil_val,null));
}
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
if((k == null)){
return self__.has_nil_QMARK_;
} else {
if((self__.root == null)){
return false;
} else {
return !((self__.root.inode_lookup((0),cljs.core.hash(k),k,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel));

}
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
var s = ((!((self__.root == null)))?self__.root.inode_seq():null);
if(self__.has_nil_QMARK_){
return cljs.core.cons(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null,self__.nil_val], null),s);
} else {
return s;
}
} else {
return null;
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentHashMap(meta__$1,self__.cnt,self__.root,self__.has_nil_QMARK_,self__.nil_val,self__.__hash));
});

cljs.core.PersistentHashMap.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,entry){
var self__ = this;
var coll__$1 = this;
if(cljs.core.vector_QMARK_(entry)){
return cljs.core._assoc(coll__$1,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(1)));
} else {
var ret = coll__$1;
var es = cljs.core.seq(entry);
while(true){
if((es == null)){
return ret;
} else {
var e = cljs.core.first(es);
if(cljs.core.vector_QMARK_(e)){
var G__36433 = cljs.core._assoc(ret,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e,(1)));
var G__36434 = cljs.core.next(es);
ret = G__36433;
es = G__36434;
continue;
} else {
throw (new Error("conj on a map takes map entries or seqables of map entries"));
}
}
break;
}
}
});

cljs.core.PersistentHashMap.prototype.call = (function() {
var G__36435 = null;
var G__36435__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__36435__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__36435 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__36435__2.call(this,self__,k);
case 3:
return G__36435__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__36435.cljs$core$IFn$_invoke$arity$2 = G__36435__2;
G__36435.cljs$core$IFn$_invoke$arity$3 = G__36435__3;
return G__36435;
})()
;

cljs.core.PersistentHashMap.prototype.apply = (function (self__,args36398){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args36398)));
});

cljs.core.PersistentHashMap.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentHashMap.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.PersistentHashMap.cljs$lang$type = true;

cljs.core.PersistentHashMap.cljs$lang$ctorStr = "cljs.core/PersistentHashMap";

cljs.core.PersistentHashMap.cljs$lang$ctorPrWriter = (function (this__24861__auto__,writer__24862__auto__,opt__24863__auto__){
return cljs.core._write(writer__24862__auto__,"cljs.core/PersistentHashMap");
});

cljs.core.__GT_PersistentHashMap = (function __GT_PersistentHashMap(meta,cnt,root,has_nil_QMARK_,nil_val,__hash){
return (new cljs.core.PersistentHashMap(meta,cnt,root,has_nil_QMARK_,nil_val,__hash));
});

cljs.core.PersistentHashMap.EMPTY = (new cljs.core.PersistentHashMap(null,(0),null,false,null,(0)));
cljs.core.PersistentHashMap.fromArrays = (function (ks,vs){
var len = ks.length;
var i = (0);
var out = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
while(true){
if((i < len)){
var G__36436 = (i + (1));
var G__36437 = out.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3(null,(ks[i]),(vs[i]));
i = G__36436;
out = G__36437;
continue;
} else {
return cljs.core.persistent_BANG_(out);
}
break;
}
});
(cljs.core.PersistentHashMap.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__25252__auto__ = this;
return cljs.core.es6_iterator(this__25252__auto__);
}));

/**
* @constructor
*/
cljs.core.TransientHashMap = (function (edit,root,count,has_nil_QMARK_,nil_val){
this.edit = edit;
this.root = root;
this.count = count;
this.has_nil_QMARK_ = has_nil_QMARK_;
this.nil_val = nil_val;
this.cljs$lang$protocol_mask$partition1$ = 56;
this.cljs$lang$protocol_mask$partition0$ = 258;
})
cljs.core.TransientHashMap.prototype.cljs$core$ITransientMap$_dissoc_BANG_$arity$2 = (function (tcoll,key){
var self__ = this;
var tcoll__$1 = this;
return tcoll__$1.without_BANG_(key);
});

cljs.core.TransientHashMap.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = (function (tcoll,key,val){
var self__ = this;
var tcoll__$1 = this;
return tcoll__$1.assoc_BANG_(key,val);
});

cljs.core.TransientHashMap.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = (function (tcoll,val){
var self__ = this;
var tcoll__$1 = this;
return tcoll__$1.conj_BANG_(val);
});

cljs.core.TransientHashMap.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
return tcoll__$1.persistent_BANG_();
});

cljs.core.TransientHashMap.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (tcoll,k){
var self__ = this;
var tcoll__$1 = this;
if((k == null)){
if(self__.has_nil_QMARK_){
return self__.nil_val;
} else {
return null;
}
} else {
if((self__.root == null)){
return null;
} else {
return self__.root.inode_lookup((0),cljs.core.hash(k),k);
}
}
});

cljs.core.TransientHashMap.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (tcoll,k,not_found){
var self__ = this;
var tcoll__$1 = this;
if((k == null)){
if(self__.has_nil_QMARK_){
return self__.nil_val;
} else {
return not_found;
}
} else {
if((self__.root == null)){
return not_found;
} else {
return self__.root.inode_lookup((0),cljs.core.hash(k),k,not_found);
}
}
});

cljs.core.TransientHashMap.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if(self__.edit){
return self__.count;
} else {
throw (new Error("count after persistent!"));
}
});

cljs.core.TransientHashMap.prototype.conj_BANG_ = (function (o){
var self__ = this;
var tcoll = this;
if(self__.edit){
if((function (){var G__36438 = o;
if(G__36438){
var bit__24955__auto__ = (G__36438.cljs$lang$protocol_mask$partition0$ & (2048));
if((bit__24955__auto__) || (G__36438.cljs$core$IMapEntry$)){
return true;
} else {
if((!G__36438.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IMapEntry,G__36438);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IMapEntry,G__36438);
}
})()){
return tcoll.assoc_BANG_((function (){var G__36439 = o;
return (cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__36439) : cljs.core.key.call(null,G__36439));
})(),(function (){var G__36440 = o;
return (cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(G__36440) : cljs.core.val.call(null,G__36440));
})());
} else {
var es = cljs.core.seq(o);
var tcoll__$1 = tcoll;
while(true){
var temp__4124__auto__ = cljs.core.first(es);
if(cljs.core.truth_(temp__4124__auto__)){
var e = temp__4124__auto__;
var G__36443 = cljs.core.next(es);
var G__36444 = tcoll__$1.assoc_BANG_((function (){var G__36441 = e;
return (cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__36441) : cljs.core.key.call(null,G__36441));
})(),(function (){var G__36442 = e;
return (cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(G__36442) : cljs.core.val.call(null,G__36442));
})());
es = G__36443;
tcoll__$1 = G__36444;
continue;
} else {
return tcoll__$1;
}
break;
}
}
} else {
throw (new Error("conj! after persistent"));
}
});

cljs.core.TransientHashMap.prototype.assoc_BANG_ = (function (k,v){
var self__ = this;
var tcoll = this;
if(self__.edit){
if((k == null)){
if((self__.nil_val === v)){
} else {
self__.nil_val = v;
}

if(self__.has_nil_QMARK_){
} else {
self__.count = (self__.count + (1));

self__.has_nil_QMARK_ = true;
}

return tcoll;
} else {
var added_leaf_QMARK_ = (new cljs.core.Box(false));
var node = (((self__.root == null))?cljs.core.BitmapIndexedNode.EMPTY:self__.root).inode_assoc_BANG_(self__.edit,(0),cljs.core.hash(k),k,v,added_leaf_QMARK_);
if((node === self__.root)){
} else {
self__.root = node;
}

if(added_leaf_QMARK_.val){
self__.count = (self__.count + (1));
} else {
}

return tcoll;
}
} else {
throw (new Error("assoc! after persistent!"));
}
});

cljs.core.TransientHashMap.prototype.without_BANG_ = (function (k){
var self__ = this;
var tcoll = this;
if(self__.edit){
if((k == null)){
if(self__.has_nil_QMARK_){
self__.has_nil_QMARK_ = false;

self__.nil_val = null;

self__.count = (self__.count - (1));

return tcoll;
} else {
return tcoll;
}
} else {
if((self__.root == null)){
return tcoll;
} else {
var removed_leaf_QMARK_ = (new cljs.core.Box(false));
var node = self__.root.inode_without_BANG_(self__.edit,(0),cljs.core.hash(k),k,removed_leaf_QMARK_);
if((node === self__.root)){
} else {
self__.root = node;
}

if(cljs.core.truth_((removed_leaf_QMARK_[(0)]))){
self__.count = (self__.count - (1));
} else {
}

return tcoll;
}
}
} else {
throw (new Error("dissoc! after persistent!"));
}
});

cljs.core.TransientHashMap.prototype.persistent_BANG_ = (function (){
var self__ = this;
var tcoll = this;
if(self__.edit){
self__.edit = null;

return (new cljs.core.PersistentHashMap(null,self__.count,self__.root,self__.has_nil_QMARK_,self__.nil_val,null));
} else {
throw (new Error("persistent! called twice"));
}
});

cljs.core.TransientHashMap.cljs$lang$type = true;

cljs.core.TransientHashMap.cljs$lang$ctorStr = "cljs.core/TransientHashMap";

cljs.core.TransientHashMap.cljs$lang$ctorPrWriter = (function (this__24861__auto__,writer__24862__auto__,opt__24863__auto__){
return cljs.core._write(writer__24862__auto__,"cljs.core/TransientHashMap");
});

cljs.core.__GT_TransientHashMap = (function __GT_TransientHashMap(edit,root,count,has_nil_QMARK_,nil_val){
return (new cljs.core.TransientHashMap(edit,root,count,has_nil_QMARK_,nil_val));
});

cljs.core.tree_map_seq_push = (function tree_map_seq_push(node,stack,ascending_QMARK_){
var t = node;
var stack__$1 = stack;
while(true){
if(!((t == null))){
var G__36445 = ((ascending_QMARK_)?t.left:t.right);
var G__36446 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(stack__$1,t);
t = G__36445;
stack__$1 = G__36446;
continue;
} else {
return stack__$1;
}
break;
}
});

/**
* @constructor
*/
cljs.core.PersistentTreeMapSeq = (function (meta,stack,ascending_QMARK_,cnt,__hash){
this.meta = meta;
this.stack = stack;
this.ascending_QMARK_ = ascending_QMARK_;
this.cnt = cnt;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32374862;
})
cljs.core.PersistentTreeMapSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentTreeMapSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt < (0))){
return (cljs.core.count(cljs.core.next(coll__$1)) + (1));
} else {
return self__.cnt;
}
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__24695__auto__ = self__.__hash;
if(!((h__24695__auto__ == null))){
return h__24695__auto__;
} else {
var h__24695__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__24695__auto____$1;

return h__24695__auto____$1;
}
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return cljs.core.peek(self__.stack);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
var t = cljs.core.first(self__.stack);
var next_stack = cljs.core.tree_map_seq_push(((self__.ascending_QMARK_)?t.right:t.left),cljs.core.next(self__.stack),self__.ascending_QMARK_);
if(!((next_stack == null))){
return (new cljs.core.PersistentTreeMapSeq(null,next_stack,self__.ascending_QMARK_,(self__.cnt - (1)),null));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return this$__$1;
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeMapSeq(meta__$1,self__.stack,self__.ascending_QMARK_,self__.cnt,self__.__hash));
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.PersistentTreeMapSeq.cljs$lang$type = true;

cljs.core.PersistentTreeMapSeq.cljs$lang$ctorStr = "cljs.core/PersistentTreeMapSeq";

cljs.core.PersistentTreeMapSeq.cljs$lang$ctorPrWriter = (function (this__24861__auto__,writer__24862__auto__,opt__24863__auto__){
return cljs.core._write(writer__24862__auto__,"cljs.core/PersistentTreeMapSeq");
});

cljs.core.__GT_PersistentTreeMapSeq = (function __GT_PersistentTreeMapSeq(meta,stack,ascending_QMARK_,cnt,__hash){
return (new cljs.core.PersistentTreeMapSeq(meta,stack,ascending_QMARK_,cnt,__hash));
});

(cljs.core.PersistentTreeMapSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__25252__auto__ = this;
return cljs.core.es6_iterator(this__25252__auto__);
}));
cljs.core.create_tree_map_seq = (function create_tree_map_seq(tree,ascending_QMARK_,cnt){
return (new cljs.core.PersistentTreeMapSeq(null,cljs.core.tree_map_seq_push(tree,null,ascending_QMARK_),ascending_QMARK_,cnt,null));
});

cljs.core.balance_left = (function balance_left(key,val,ins,right){
if((ins instanceof cljs.core.RedNode)){
if((ins.left instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(ins.key,ins.val,ins.left.blacken(),(new cljs.core.BlackNode(key,val,ins.right,right,null)),null));
} else {
if((ins.right instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(ins.right.key,ins.right.val,(new cljs.core.BlackNode(ins.key,ins.val,ins.left,ins.right.left,null)),(new cljs.core.BlackNode(key,val,ins.right.right,right,null)),null));
} else {
return (new cljs.core.BlackNode(key,val,ins,right,null));

}
}
} else {
return (new cljs.core.BlackNode(key,val,ins,right,null));
}
});
cljs.core.balance_right = (function balance_right(key,val,left,ins){
if((ins instanceof cljs.core.RedNode)){
if((ins.right instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(ins.key,ins.val,(new cljs.core.BlackNode(key,val,left,ins.left,null)),ins.right.blacken(),null));
} else {
if((ins.left instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(ins.left.key,ins.left.val,(new cljs.core.BlackNode(key,val,left,ins.left.left,null)),(new cljs.core.BlackNode(ins.key,ins.val,ins.left.right,ins.right,null)),null));
} else {
return (new cljs.core.BlackNode(key,val,left,ins,null));

}
}
} else {
return (new cljs.core.BlackNode(key,val,left,ins,null));
}
});
cljs.core.balance_left_del = (function balance_left_del(key,val,del,right){
if((del instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(key,val,del.blacken(),right,null));
} else {
if((right instanceof cljs.core.BlackNode)){
return cljs.core.balance_right(key,val,del,right.redden());
} else {
if(((right instanceof cljs.core.RedNode)) && ((right.left instanceof cljs.core.BlackNode))){
return (new cljs.core.RedNode(right.left.key,right.left.val,(new cljs.core.BlackNode(key,val,del,right.left.left,null)),cljs.core.balance_right(right.key,right.val,right.left.right,right.right.redden()),null));
} else {
throw (new Error("red-black tree invariant violation"));

}
}
}
});
cljs.core.balance_right_del = (function balance_right_del(key,val,left,del){
if((del instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(key,val,left,del.blacken(),null));
} else {
if((left instanceof cljs.core.BlackNode)){
return cljs.core.balance_left(key,val,left.redden(),del);
} else {
if(((left instanceof cljs.core.RedNode)) && ((left.right instanceof cljs.core.BlackNode))){
return (new cljs.core.RedNode(left.right.key,left.right.val,cljs.core.balance_left(left.key,left.val,left.left.redden(),left.right.left),(new cljs.core.BlackNode(key,val,left.right.right,del,null)),null));
} else {
throw (new Error("red-black tree invariant violation"));

}
}
}
});
cljs.core.tree_map_kv_reduce = (function tree_map_kv_reduce(node,f,init){
var init__$1 = ((!((node.left == null)))?tree_map_kv_reduce(node.left,f,init):init);
if(cljs.core.reduced_QMARK_(init__$1)){
var G__36459 = init__$1;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__36459) : cljs.core.deref.call(null,G__36459));
} else {
var init__$2 = (function (){var G__36460 = init__$1;
var G__36461 = node.key;
var G__36462 = node.val;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__36460,G__36461,G__36462) : f.call(null,G__36460,G__36461,G__36462));
})();
if(cljs.core.reduced_QMARK_(init__$2)){
var G__36463 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__36463) : cljs.core.deref.call(null,G__36463));
} else {
var init__$3 = ((!((node.right == null)))?tree_map_kv_reduce(node.right,f,init__$2):init__$2);
if(cljs.core.reduced_QMARK_(init__$3)){
var G__36464 = init__$3;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__36464) : cljs.core.deref.call(null,G__36464));
} else {
return init__$3;
}
}
}
});

/**
* @constructor
*/
cljs.core.BlackNode = (function (key,val,left,right,__hash){
this.key = key;
this.val = val;
this.left = left;
this.right = right;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32402207;
})
cljs.core.BlackNode.prototype.add_right = (function (ins){
var self__ = this;
var node = this;
return ins.balance_right(node);
});

cljs.core.BlackNode.prototype.redden = (function (){
var self__ = this;
var node = this;
return (new cljs.core.RedNode(self__.key,self__.val,self__.left,self__.right,null));
});

cljs.core.BlackNode.prototype.blacken = (function (){
var self__ = this;
var node = this;
return node;
});

cljs.core.BlackNode.prototype.add_left = (function (ins){
var self__ = this;
var node = this;
return ins.balance_left(node);
});

cljs.core.BlackNode.prototype.replace = (function (key__$1,val__$1,left__$1,right__$1){
var self__ = this;
var node = this;
return (new cljs.core.BlackNode(key__$1,val__$1,left__$1,right__$1,null));
});

cljs.core.BlackNode.prototype.balance_left = (function (parent){
var self__ = this;
var node = this;
return (new cljs.core.BlackNode(parent.key,parent.val,node,parent.right,null));
});

cljs.core.BlackNode.prototype.balance_right = (function (parent){
var self__ = this;
var node = this;
return (new cljs.core.BlackNode(parent.key,parent.val,parent.left,node,null));
});

cljs.core.BlackNode.prototype.remove_left = (function (del){
var self__ = this;
var node = this;
return cljs.core.balance_left_del(self__.key,self__.val,del,self__.right);
});

cljs.core.BlackNode.prototype.kv_reduce = (function (f,init){
var self__ = this;
var node = this;
return cljs.core.tree_map_kv_reduce(node,f,init);
});

cljs.core.BlackNode.prototype.remove_right = (function (del){
var self__ = this;
var node = this;
return cljs.core.balance_right_del(self__.key,self__.val,self__.left,del);
});

cljs.core.BlackNode.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (node,k){
var self__ = this;
var node__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(node__$1,k,null);
});

cljs.core.BlackNode.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (node,k,not_found){
var self__ = this;
var node__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(node__$1,k,not_found);
});

cljs.core.BlackNode.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (node,n){
var self__ = this;
var node__$1 = this;
if((n === (0))){
return self__.key;
} else {
if((n === (1))){
return self__.val;
} else {
return null;

}
}
});

cljs.core.BlackNode.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (node,n,not_found){
var self__ = this;
var node__$1 = this;
if((n === (0))){
return self__.key;
} else {
if((n === (1))){
return self__.val;
} else {
return not_found;

}
}
});

cljs.core.BlackNode.prototype.cljs$core$IVector$_assoc_n$arity$3 = (function (node,n,v){
var self__ = this;
var node__$1 = this;
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val], null).cljs$core$IVector$_assoc_n$arity$3(null,n,v);
});

cljs.core.BlackNode.prototype.cljs$core$IMeta$_meta$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return null;
});

cljs.core.BlackNode.prototype.cljs$core$ICounted$_count$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return (2);
});

cljs.core.BlackNode.prototype.cljs$core$IMapEntry$_key$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return self__.key;
});

cljs.core.BlackNode.prototype.cljs$core$IMapEntry$_val$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return self__.val;
});

cljs.core.BlackNode.prototype.cljs$core$IStack$_peek$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return self__.val;
});

cljs.core.BlackNode.prototype.cljs$core$IStack$_pop$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key], null);
});

cljs.core.BlackNode.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__24695__auto__ = self__.__hash;
if(!((h__24695__auto__ == null))){
return h__24695__auto__;
} else {
var h__24695__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__24695__auto____$1;

return h__24695__auto____$1;
}
});

cljs.core.BlackNode.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.BlackNode.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return cljs.core.PersistentVector.EMPTY;
});

cljs.core.BlackNode.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (node,f){
var self__ = this;
var node__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(node__$1,f);
});

cljs.core.BlackNode.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (node,f,start){
var self__ = this;
var node__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3(node__$1,f,start);
});

cljs.core.BlackNode.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (node,k,v){
var self__ = this;
var node__$1 = this;
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val], null),k,v);
});

cljs.core.BlackNode.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return cljs.core._conj(cljs.core._conj(cljs.core.List.EMPTY,self__.val),self__.key);
});

cljs.core.BlackNode.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (node,meta){
var self__ = this;
var node__$1 = this;
return cljs.core.with_meta(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val], null),meta);
});

cljs.core.BlackNode.prototype.cljs$core$ICollection$_conj$arity$2 = (function (node,o){
var self__ = this;
var node__$1 = this;
return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val,o], null);
});

cljs.core.BlackNode.prototype.call = (function() {
var G__36466 = null;
var G__36466__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var node = self____$1;
return node.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__36466__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var node = self____$1;
return node.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__36466 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__36466__2.call(this,self__,k);
case 3:
return G__36466__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__36466.cljs$core$IFn$_invoke$arity$2 = G__36466__2;
G__36466.cljs$core$IFn$_invoke$arity$3 = G__36466__3;
return G__36466;
})()
;

cljs.core.BlackNode.prototype.apply = (function (self__,args36465){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args36465)));
});

cljs.core.BlackNode.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var node = this;
return node.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.BlackNode.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var node = this;
return node.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.BlackNode.cljs$lang$type = true;

cljs.core.BlackNode.cljs$lang$ctorStr = "cljs.core/BlackNode";

cljs.core.BlackNode.cljs$lang$ctorPrWriter = (function (this__24861__auto__,writer__24862__auto__,opt__24863__auto__){
return cljs.core._write(writer__24862__auto__,"cljs.core/BlackNode");
});

cljs.core.__GT_BlackNode = (function __GT_BlackNode(key,val,left,right,__hash){
return (new cljs.core.BlackNode(key,val,left,right,__hash));
});

(cljs.core.BlackNode.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__25252__auto__ = this;
return cljs.core.es6_iterator(this__25252__auto__);
}));

/**
* @constructor
*/
cljs.core.RedNode = (function (key,val,left,right,__hash){
this.key = key;
this.val = val;
this.left = left;
this.right = right;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32402207;
})
cljs.core.RedNode.prototype.add_right = (function (ins){
var self__ = this;
var node = this;
return (new cljs.core.RedNode(self__.key,self__.val,self__.left,ins,null));
});

cljs.core.RedNode.prototype.redden = (function (){
var self__ = this;
var node = this;
throw (new Error("red-black tree invariant violation"));
});

cljs.core.RedNode.prototype.blacken = (function (){
var self__ = this;
var node = this;
return (new cljs.core.BlackNode(self__.key,self__.val,self__.left,self__.right,null));
});

cljs.core.RedNode.prototype.add_left = (function (ins){
var self__ = this;
var node = this;
return (new cljs.core.RedNode(self__.key,self__.val,ins,self__.right,null));
});

cljs.core.RedNode.prototype.replace = (function (key__$1,val__$1,left__$1,right__$1){
var self__ = this;
var node = this;
return (new cljs.core.RedNode(key__$1,val__$1,left__$1,right__$1,null));
});

cljs.core.RedNode.prototype.balance_left = (function (parent){
var self__ = this;
var node = this;
if((self__.left instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(self__.key,self__.val,self__.left.blacken(),(new cljs.core.BlackNode(parent.key,parent.val,self__.right,parent.right,null)),null));
} else {
if((self__.right instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(self__.right.key,self__.right.val,(new cljs.core.BlackNode(self__.key,self__.val,self__.left,self__.right.left,null)),(new cljs.core.BlackNode(parent.key,parent.val,self__.right.right,parent.right,null)),null));
} else {
return (new cljs.core.BlackNode(parent.key,parent.val,node,parent.right,null));

}
}
});

cljs.core.RedNode.prototype.balance_right = (function (parent){
var self__ = this;
var node = this;
if((self__.right instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(self__.key,self__.val,(new cljs.core.BlackNode(parent.key,parent.val,parent.left,self__.left,null)),self__.right.blacken(),null));
} else {
if((self__.left instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(self__.left.key,self__.left.val,(new cljs.core.BlackNode(parent.key,parent.val,parent.left,self__.left.left,null)),(new cljs.core.BlackNode(self__.key,self__.val,self__.left.right,self__.right,null)),null));
} else {
return (new cljs.core.BlackNode(parent.key,parent.val,parent.left,node,null));

}
}
});

cljs.core.RedNode.prototype.remove_left = (function (del){
var self__ = this;
var node = this;
return (new cljs.core.RedNode(self__.key,self__.val,del,self__.right,null));
});

cljs.core.RedNode.prototype.kv_reduce = (function (f,init){
var self__ = this;
var node = this;
return cljs.core.tree_map_kv_reduce(node,f,init);
});

cljs.core.RedNode.prototype.remove_right = (function (del){
var self__ = this;
var node = this;
return (new cljs.core.RedNode(self__.key,self__.val,self__.left,del,null));
});

cljs.core.RedNode.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (node,k){
var self__ = this;
var node__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(node__$1,k,null);
});

cljs.core.RedNode.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (node,k,not_found){
var self__ = this;
var node__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(node__$1,k,not_found);
});

cljs.core.RedNode.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (node,n){
var self__ = this;
var node__$1 = this;
if((n === (0))){
return self__.key;
} else {
if((n === (1))){
return self__.val;
} else {
return null;

}
}
});

cljs.core.RedNode.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (node,n,not_found){
var self__ = this;
var node__$1 = this;
if((n === (0))){
return self__.key;
} else {
if((n === (1))){
return self__.val;
} else {
return not_found;

}
}
});

cljs.core.RedNode.prototype.cljs$core$IVector$_assoc_n$arity$3 = (function (node,n,v){
var self__ = this;
var node__$1 = this;
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val], null).cljs$core$IVector$_assoc_n$arity$3(null,n,v);
});

cljs.core.RedNode.prototype.cljs$core$IMeta$_meta$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return null;
});

cljs.core.RedNode.prototype.cljs$core$ICounted$_count$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return (2);
});

cljs.core.RedNode.prototype.cljs$core$IMapEntry$_key$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return self__.key;
});

cljs.core.RedNode.prototype.cljs$core$IMapEntry$_val$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return self__.val;
});

cljs.core.RedNode.prototype.cljs$core$IStack$_peek$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return self__.val;
});

cljs.core.RedNode.prototype.cljs$core$IStack$_pop$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key], null);
});

cljs.core.RedNode.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__24695__auto__ = self__.__hash;
if(!((h__24695__auto__ == null))){
return h__24695__auto__;
} else {
var h__24695__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__24695__auto____$1;

return h__24695__auto____$1;
}
});

cljs.core.RedNode.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.RedNode.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return cljs.core.PersistentVector.EMPTY;
});

cljs.core.RedNode.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (node,f){
var self__ = this;
var node__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(node__$1,f);
});

cljs.core.RedNode.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (node,f,start){
var self__ = this;
var node__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3(node__$1,f,start);
});

cljs.core.RedNode.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (node,k,v){
var self__ = this;
var node__$1 = this;
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val], null),k,v);
});

cljs.core.RedNode.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return cljs.core._conj(cljs.core._conj(cljs.core.List.EMPTY,self__.val),self__.key);
});

cljs.core.RedNode.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (node,meta){
var self__ = this;
var node__$1 = this;
return cljs.core.with_meta(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val], null),meta);
});

cljs.core.RedNode.prototype.cljs$core$ICollection$_conj$arity$2 = (function (node,o){
var self__ = this;
var node__$1 = this;
return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val,o], null);
});

cljs.core.RedNode.prototype.call = (function() {
var G__36468 = null;
var G__36468__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var node = self____$1;
return node.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__36468__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var node = self____$1;
return node.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__36468 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__36468__2.call(this,self__,k);
case 3:
return G__36468__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__36468.cljs$core$IFn$_invoke$arity$2 = G__36468__2;
G__36468.cljs$core$IFn$_invoke$arity$3 = G__36468__3;
return G__36468;
})()
;

cljs.core.RedNode.prototype.apply = (function (self__,args36467){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args36467)));
});

cljs.core.RedNode.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var node = this;
return node.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.RedNode.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var node = this;
return node.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.RedNode.cljs$lang$type = true;

cljs.core.RedNode.cljs$lang$ctorStr = "cljs.core/RedNode";

cljs.core.RedNode.cljs$lang$ctorPrWriter = (function (this__24861__auto__,writer__24862__auto__,opt__24863__auto__){
return cljs.core._write(writer__24862__auto__,"cljs.core/RedNode");
});

cljs.core.__GT_RedNode = (function __GT_RedNode(key,val,left,right,__hash){
return (new cljs.core.RedNode(key,val,left,right,__hash));
});

(cljs.core.RedNode.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__25252__auto__ = this;
return cljs.core.es6_iterator(this__25252__auto__);
}));
cljs.core.tree_map_add = (function tree_map_add(comp,tree,k,v,found){
if((tree == null)){
return (new cljs.core.RedNode(k,v,null,null,null));
} else {
var c = (function (){var G__36481 = k;
var G__36482 = tree.key;
return (comp.cljs$core$IFn$_invoke$arity$2 ? comp.cljs$core$IFn$_invoke$arity$2(G__36481,G__36482) : comp.call(null,G__36481,G__36482));
})();
if((c === (0))){
(found[(0)] = tree);

return null;
} else {
if((c < (0))){
var ins = tree_map_add(comp,tree.left,k,v,found);
if(!((ins == null))){
return tree.add_left(ins);
} else {
return null;
}
} else {
var ins = tree_map_add(comp,tree.right,k,v,found);
if(!((ins == null))){
return tree.add_right(ins);
} else {
return null;
}

}
}
}
});
cljs.core.tree_map_append = (function tree_map_append(left,right){
if((left == null)){
return right;
} else {
if((right == null)){
return left;
} else {
if((left instanceof cljs.core.RedNode)){
if((right instanceof cljs.core.RedNode)){
var app = tree_map_append(left.right,right.left);
if((app instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(app.key,app.val,(new cljs.core.RedNode(left.key,left.val,left.left,app.left,null)),(new cljs.core.RedNode(right.key,right.val,app.right,right.right,null)),null));
} else {
return (new cljs.core.RedNode(left.key,left.val,left.left,(new cljs.core.RedNode(right.key,right.val,app,right.right,null)),null));
}
} else {
return (new cljs.core.RedNode(left.key,left.val,left.left,tree_map_append(left.right,right),null));
}
} else {
if((right instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(right.key,right.val,tree_map_append(left,right.left),right.right,null));
} else {
var app = tree_map_append(left.right,right.left);
if((app instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(app.key,app.val,(new cljs.core.BlackNode(left.key,left.val,left.left,app.left,null)),(new cljs.core.BlackNode(right.key,right.val,app.right,right.right,null)),null));
} else {
return cljs.core.balance_left_del(left.key,left.val,left.left,(new cljs.core.BlackNode(right.key,right.val,app,right.right,null)));
}

}
}
}
}
});
cljs.core.tree_map_remove = (function tree_map_remove(comp,tree,k,found){
if(!((tree == null))){
var c = (function (){var G__36501 = k;
var G__36502 = tree.key;
return (comp.cljs$core$IFn$_invoke$arity$2 ? comp.cljs$core$IFn$_invoke$arity$2(G__36501,G__36502) : comp.call(null,G__36501,G__36502));
})();
if((c === (0))){
(found[(0)] = tree);

return cljs.core.tree_map_append(tree.left,tree.right);
} else {
if((c < (0))){
var del = tree_map_remove(comp,tree.left,k,found);
if((!((del == null))) || (!(((found[(0)]) == null)))){
if((tree.left instanceof cljs.core.BlackNode)){
return cljs.core.balance_left_del(tree.key,tree.val,del,tree.right);
} else {
return (new cljs.core.RedNode(tree.key,tree.val,del,tree.right,null));
}
} else {
return null;
}
} else {
var del = tree_map_remove(comp,tree.right,k,found);
if((!((del == null))) || (!(((found[(0)]) == null)))){
if((tree.right instanceof cljs.core.BlackNode)){
return cljs.core.balance_right_del(tree.key,tree.val,tree.left,del);
} else {
return (new cljs.core.RedNode(tree.key,tree.val,tree.left,del,null));
}
} else {
return null;
}

}
}
} else {
return null;
}
});
cljs.core.tree_map_replace = (function tree_map_replace(comp,tree,k,v){
var tk = tree.key;
var c = (function (){var G__36513 = k;
var G__36514 = tk;
return (comp.cljs$core$IFn$_invoke$arity$2 ? comp.cljs$core$IFn$_invoke$arity$2(G__36513,G__36514) : comp.call(null,G__36513,G__36514));
})();
if((c === (0))){
return tree.replace(tk,v,tree.left,tree.right);
} else {
if((c < (0))){
return tree.replace(tk,tree.val,tree_map_replace(comp,tree.left,k,v),tree.right);
} else {
return tree.replace(tk,tree.val,tree.left,tree_map_replace(comp,tree.right,k,v));

}
}
});

/**
* @constructor
*/
cljs.core.PersistentTreeMap = (function (comp,tree,cnt,meta,__hash){
this.comp = comp;
this.tree = tree;
this.cnt = cnt;
this.meta = meta;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 418776847;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.PersistentTreeMap.prototype.forEach = (function (f){
var self__ = this;
var coll = this;
var seq__36516 = cljs.core.seq(coll);
var chunk__36517 = null;
var count__36518 = (0);
var i__36519 = (0);
while(true){
if((i__36519 < count__36518)){
var vec__36520 = chunk__36517.cljs$core$IIndexed$_nth$arity$2(null,i__36519);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__36520,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__36520,(1),null);
var G__36521_36533 = v;
var G__36522_36534 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__36521_36533,G__36522_36534) : f.call(null,G__36521_36533,G__36522_36534));

var G__36535 = seq__36516;
var G__36536 = chunk__36517;
var G__36537 = count__36518;
var G__36538 = (i__36519 + (1));
seq__36516 = G__36535;
chunk__36517 = G__36536;
count__36518 = G__36537;
i__36519 = G__36538;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__36516);
if(temp__4126__auto__){
var seq__36516__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__36516__$1)){
var c__25061__auto__ = cljs.core.chunk_first(seq__36516__$1);
var G__36539 = cljs.core.chunk_rest(seq__36516__$1);
var G__36540 = c__25061__auto__;
var G__36541 = cljs.core.count(c__25061__auto__);
var G__36542 = (0);
seq__36516 = G__36539;
chunk__36517 = G__36540;
count__36518 = G__36541;
i__36519 = G__36542;
continue;
} else {
var vec__36523 = cljs.core.first(seq__36516__$1);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__36523,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__36523,(1),null);
var G__36524_36543 = v;
var G__36525_36544 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__36524_36543,G__36525_36544) : f.call(null,G__36524_36543,G__36525_36544));

var G__36545 = cljs.core.next(seq__36516__$1);
var G__36546 = null;
var G__36547 = (0);
var G__36548 = (0);
seq__36516 = G__36545;
chunk__36517 = G__36546;
count__36518 = G__36547;
i__36519 = G__36548;
continue;
}
} else {
return null;
}
}
break;
}
});

cljs.core.PersistentTreeMap.prototype.get = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentTreeMap.prototype.entries = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_entries_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentTreeMap.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentTreeMap.prototype.keys = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator((function (){var G__36526 = coll;
return (cljs.core.keys.cljs$core$IFn$_invoke$arity$1 ? cljs.core.keys.cljs$core$IFn$_invoke$arity$1(G__36526) : cljs.core.keys.call(null,G__36526));
})());
});

cljs.core.PersistentTreeMap.prototype.values = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator((function (){var G__36527 = coll;
return (cljs.core.vals.cljs$core$IFn$_invoke$arity$1 ? cljs.core.vals.cljs$core$IFn$_invoke$arity$1(G__36527) : cljs.core.vals.call(null,G__36527));
})());
});

cljs.core.PersistentTreeMap.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentTreeMap.prototype.entry_at = (function (k){
var self__ = this;
var coll = this;
var t = self__.tree;
while(true){
if(!((t == null))){
var c = (function (){var G__36528 = k;
var G__36529 = t.key;
return (self__.comp.cljs$core$IFn$_invoke$arity$2 ? self__.comp.cljs$core$IFn$_invoke$arity$2(G__36528,G__36529) : self__.comp.call(null,G__36528,G__36529));
})();
if((c === (0))){
return t;
} else {
if((c < (0))){
var G__36549 = t.left;
t = G__36549;
continue;
} else {
var G__36550 = t.right;
t = G__36550;
continue;

}
}
} else {
return null;
}
break;
}
});

cljs.core.PersistentTreeMap.prototype.has = (function (k){
var self__ = this;
var coll = this;
return cljs.core.contains_QMARK_(coll,k);
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
var n = coll__$1.entry_at(k);
if(!((n == null))){
return n.val;
} else {
return not_found;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = (function (coll,f,init){
var self__ = this;
var coll__$1 = this;
if(!((self__.tree == null))){
return cljs.core.tree_map_kv_reduce(self__.tree,f,init);
} else {
return init;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.PersistentTreeMap(self__.comp,self__.tree,self__.cnt,self__.meta,self__.__hash));
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.cnt;
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IReversible$_rseq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
return cljs.core.create_tree_map_seq(self__.tree,false,self__.cnt);
} else {
return null;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__24695__auto__ = self__.__hash;
if(!((h__24695__auto__ == null))){
return h__24695__auto__;
} else {
var h__24695__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
self__.__hash = h__24695__auto____$1;

return h__24695__auto____$1;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_map(coll__$1,other);
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeMap(self__.comp,null,(0),self__.meta,(0)));
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IMap$_dissoc$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
var found = [null];
var t = cljs.core.tree_map_remove(self__.comp,self__.tree,k,found);
if((t == null)){
if((cljs.core.nth.cljs$core$IFn$_invoke$arity$2(found,(0)) == null)){
return coll__$1;
} else {
return (new cljs.core.PersistentTreeMap(self__.comp,null,(0),self__.meta,null));
}
} else {
return (new cljs.core.PersistentTreeMap(self__.comp,t.blacken(),(self__.cnt - (1)),self__.meta,null));
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (coll,k,v){
var self__ = this;
var coll__$1 = this;
var found = [null];
var t = cljs.core.tree_map_add(self__.comp,self__.tree,k,v,found);
if((t == null)){
var found_node = cljs.core.nth.cljs$core$IFn$_invoke$arity$2(found,(0));
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(v,found_node.val)){
return coll__$1;
} else {
return (new cljs.core.PersistentTreeMap(self__.comp,cljs.core.tree_map_replace(self__.comp,self__.tree,k,v),self__.cnt,self__.meta,null));
}
} else {
return (new cljs.core.PersistentTreeMap(self__.comp,t.blacken(),(self__.cnt + (1)),self__.meta,null));
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return !((coll__$1.entry_at(k) == null));
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
return cljs.core.create_tree_map_seq(self__.tree,true,self__.cnt);
} else {
return null;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeMap(self__.comp,self__.tree,self__.cnt,meta__$1,self__.__hash));
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,entry){
var self__ = this;
var coll__$1 = this;
if(cljs.core.vector_QMARK_(entry)){
return cljs.core._assoc(coll__$1,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(1)));
} else {
var ret = coll__$1;
var es = cljs.core.seq(entry);
while(true){
if((es == null)){
return ret;
} else {
var e = cljs.core.first(es);
if(cljs.core.vector_QMARK_(e)){
var G__36551 = cljs.core._assoc(ret,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e,(1)));
var G__36552 = cljs.core.next(es);
ret = G__36551;
es = G__36552;
continue;
} else {
throw (new Error("conj on a map takes map entries or seqables of map entries"));
}
}
break;
}
}
});

cljs.core.PersistentTreeMap.prototype.call = (function() {
var G__36553 = null;
var G__36553__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__36553__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__36553 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__36553__2.call(this,self__,k);
case 3:
return G__36553__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__36553.cljs$core$IFn$_invoke$arity$2 = G__36553__2;
G__36553.cljs$core$IFn$_invoke$arity$3 = G__36553__3;
return G__36553;
})()
;

cljs.core.PersistentTreeMap.prototype.apply = (function (self__,args36515){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args36515)));
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_sorted_seq$arity$2 = (function (coll,ascending_QMARK_){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
return cljs.core.create_tree_map_seq(self__.tree,ascending_QMARK_,self__.cnt);
} else {
return null;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_sorted_seq_from$arity$3 = (function (coll,k,ascending_QMARK_){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
var stack = null;
var t = self__.tree;
while(true){
if(!((t == null))){
var c = (function (){var G__36530 = k;
var G__36531 = t.key;
return (self__.comp.cljs$core$IFn$_invoke$arity$2 ? self__.comp.cljs$core$IFn$_invoke$arity$2(G__36530,G__36531) : self__.comp.call(null,G__36530,G__36531));
})();
if((c === (0))){
return (new cljs.core.PersistentTreeMapSeq(null,cljs.core.conj.cljs$core$IFn$_invoke$arity$2(stack,t),ascending_QMARK_,(-1),null));
} else {
if(cljs.core.truth_(ascending_QMARK_)){
if((c < (0))){
var G__36554 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(stack,t);
var G__36555 = t.left;
stack = G__36554;
t = G__36555;
continue;
} else {
var G__36556 = stack;
var G__36557 = t.right;
stack = G__36556;
t = G__36557;
continue;
}
} else {
if((c > (0))){
var G__36558 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(stack,t);
var G__36559 = t.right;
stack = G__36558;
t = G__36559;
continue;
} else {
var G__36560 = stack;
var G__36561 = t.left;
stack = G__36560;
t = G__36561;
continue;
}

}
}
} else {
if((stack == null)){
return null;
} else {
return (new cljs.core.PersistentTreeMapSeq(null,stack,ascending_QMARK_,(-1),null));
}
}
break;
}
} else {
return null;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_entry_key$arity$2 = (function (coll,entry){
var self__ = this;
var coll__$1 = this;
var G__36532 = entry;
return (cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__36532) : cljs.core.key.call(null,G__36532));
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_comparator$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.comp;
});

cljs.core.PersistentTreeMap.cljs$lang$type = true;

cljs.core.PersistentTreeMap.cljs$lang$ctorStr = "cljs.core/PersistentTreeMap";

cljs.core.PersistentTreeMap.cljs$lang$ctorPrWriter = (function (this__24861__auto__,writer__24862__auto__,opt__24863__auto__){
return cljs.core._write(writer__24862__auto__,"cljs.core/PersistentTreeMap");
});

cljs.core.__GT_PersistentTreeMap = (function __GT_PersistentTreeMap(comp,tree,cnt,meta,__hash){
return (new cljs.core.PersistentTreeMap(comp,tree,cnt,meta,__hash));
});

cljs.core.PersistentTreeMap.EMPTY = (new cljs.core.PersistentTreeMap(cljs.core.compare,null,(0),null,(0)));
(cljs.core.PersistentTreeMap.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__25252__auto__ = this;
return cljs.core.es6_iterator(this__25252__auto__);
}));
/**
* keyval => key val
* Returns a new hash map with supplied mappings.
* @param {...*} var_args
*/
cljs.core.hash_map = (function() { 
var hash_map__delegate = function (keyvals){
var in$ = cljs.core.seq(keyvals);
var out = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
while(true){
if(in$){
var G__36562 = cljs.core.nnext(in$);
var G__36563 = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(out,cljs.core.first(in$),cljs.core.second(in$));
in$ = G__36562;
out = G__36563;
continue;
} else {
return cljs.core.persistent_BANG_(out);
}
break;
}
};
var hash_map = function (var_args){
var keyvals = null;
if (arguments.length > 0) {
var G__36564__i = 0, G__36564__a = new Array(arguments.length -  0);
while (G__36564__i < G__36564__a.length) {G__36564__a[G__36564__i] = arguments[G__36564__i + 0]; ++G__36564__i;}
  keyvals = new cljs.core.IndexedSeq(G__36564__a,0);
} 
return hash_map__delegate.call(this,keyvals);};
hash_map.cljs$lang$maxFixedArity = 0;
hash_map.cljs$lang$applyTo = (function (arglist__36565){
var keyvals = cljs.core.seq(arglist__36565);
return hash_map__delegate(keyvals);
});
hash_map.cljs$core$IFn$_invoke$arity$variadic = hash_map__delegate;
return hash_map;
})()
;
/**
* keyval => key val
* Returns a new array map with supplied mappings.
* @param {...*} var_args
*/
cljs.core.array_map = (function() { 
var array_map__delegate = function (keyvals){
return cljs.core.PersistentArrayMap.fromArray(cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.array,keyvals),true,false);
};
var array_map = function (var_args){
var keyvals = null;
if (arguments.length > 0) {
var G__36566__i = 0, G__36566__a = new Array(arguments.length -  0);
while (G__36566__i < G__36566__a.length) {G__36566__a[G__36566__i] = arguments[G__36566__i + 0]; ++G__36566__i;}
  keyvals = new cljs.core.IndexedSeq(G__36566__a,0);
} 
return array_map__delegate.call(this,keyvals);};
array_map.cljs$lang$maxFixedArity = 0;
array_map.cljs$lang$applyTo = (function (arglist__36567){
var keyvals = cljs.core.seq(arglist__36567);
return array_map__delegate(keyvals);
});
array_map.cljs$core$IFn$_invoke$arity$variadic = array_map__delegate;
return array_map;
})()
;
/**
* keyval => key val
* Returns a new object map with supplied mappings.
* @param {...*} var_args
*/
cljs.core.obj_map = (function() { 
var obj_map__delegate = function (keyvals){
var ks = [];
var obj = (function (){var obj36571 = {};
return obj36571;
})();
var kvs = cljs.core.seq(keyvals);
while(true){
if(kvs){
ks.push(cljs.core.first(kvs));

(obj[cljs.core.first(kvs)] = cljs.core.second(kvs));

var G__36572 = cljs.core.nnext(kvs);
kvs = G__36572;
continue;
} else {
return cljs.core.ObjMap.fromObject(ks,obj);
}
break;
}
};
var obj_map = function (var_args){
var keyvals = null;
if (arguments.length > 0) {
var G__36573__i = 0, G__36573__a = new Array(arguments.length -  0);
while (G__36573__i < G__36573__a.length) {G__36573__a[G__36573__i] = arguments[G__36573__i + 0]; ++G__36573__i;}
  keyvals = new cljs.core.IndexedSeq(G__36573__a,0);
} 
return obj_map__delegate.call(this,keyvals);};
obj_map.cljs$lang$maxFixedArity = 0;
obj_map.cljs$lang$applyTo = (function (arglist__36574){
var keyvals = cljs.core.seq(arglist__36574);
return obj_map__delegate(keyvals);
});
obj_map.cljs$core$IFn$_invoke$arity$variadic = obj_map__delegate;
return obj_map;
})()
;
/**
* keyval => key val
* Returns a new sorted map with supplied mappings.
* @param {...*} var_args
*/
cljs.core.sorted_map = (function() { 
var sorted_map__delegate = function (keyvals){
var in$ = cljs.core.seq(keyvals);
var out = cljs.core.PersistentTreeMap.EMPTY;
while(true){
if(in$){
var G__36575 = cljs.core.nnext(in$);
var G__36576 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(out,cljs.core.first(in$),cljs.core.second(in$));
in$ = G__36575;
out = G__36576;
continue;
} else {
return out;
}
break;
}
};
var sorted_map = function (var_args){
var keyvals = null;
if (arguments.length > 0) {
var G__36577__i = 0, G__36577__a = new Array(arguments.length -  0);
while (G__36577__i < G__36577__a.length) {G__36577__a[G__36577__i] = arguments[G__36577__i + 0]; ++G__36577__i;}
  keyvals = new cljs.core.IndexedSeq(G__36577__a,0);
} 
return sorted_map__delegate.call(this,keyvals);};
sorted_map.cljs$lang$maxFixedArity = 0;
sorted_map.cljs$lang$applyTo = (function (arglist__36578){
var keyvals = cljs.core.seq(arglist__36578);
return sorted_map__delegate(keyvals);
});
sorted_map.cljs$core$IFn$_invoke$arity$variadic = sorted_map__delegate;
return sorted_map;
})()
;
/**
* keyval => key val
* Returns a new sorted map with supplied mappings, using the supplied comparator.
* @param {...*} var_args
*/
cljs.core.sorted_map_by = (function() { 
var sorted_map_by__delegate = function (comparator,keyvals){
var in$ = cljs.core.seq(keyvals);
var out = (new cljs.core.PersistentTreeMap(cljs.core.fn__GT_comparator(comparator),null,(0),null,(0)));
while(true){
if(in$){
var G__36579 = cljs.core.nnext(in$);
var G__36580 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(out,cljs.core.first(in$),cljs.core.second(in$));
in$ = G__36579;
out = G__36580;
continue;
} else {
return out;
}
break;
}
};
var sorted_map_by = function (comparator,var_args){
var keyvals = null;
if (arguments.length > 1) {
var G__36581__i = 0, G__36581__a = new Array(arguments.length -  1);
while (G__36581__i < G__36581__a.length) {G__36581__a[G__36581__i] = arguments[G__36581__i + 1]; ++G__36581__i;}
  keyvals = new cljs.core.IndexedSeq(G__36581__a,0);
} 
return sorted_map_by__delegate.call(this,comparator,keyvals);};
sorted_map_by.cljs$lang$maxFixedArity = 1;
sorted_map_by.cljs$lang$applyTo = (function (arglist__36582){
var comparator = cljs.core.first(arglist__36582);
var keyvals = cljs.core.rest(arglist__36582);
return sorted_map_by__delegate(comparator,keyvals);
});
sorted_map_by.cljs$core$IFn$_invoke$arity$variadic = sorted_map_by__delegate;
return sorted_map_by;
})()
;

/**
* @constructor
*/
cljs.core.KeySeq = (function (mseq,_meta){
this.mseq = mseq;
this._meta = _meta;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32374988;
})
cljs.core.KeySeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.KeySeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.KeySeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__._meta;
});

cljs.core.KeySeq.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var nseq = (((function (){var G__36583 = self__.mseq;
if(G__36583){
var bit__24955__auto__ = (G__36583.cljs$lang$protocol_mask$partition0$ & (128));
if((bit__24955__auto__) || (G__36583.cljs$core$INext$)){
return true;
} else {
if((!G__36583.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__36583);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__36583);
}
})())?self__.mseq.cljs$core$INext$_next$arity$1(null):cljs.core.next(self__.mseq));
if((nseq == null)){
return null;
} else {
return (new cljs.core.KeySeq(nseq,self__._meta));
}
});

cljs.core.KeySeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.hash_ordered_coll(coll__$1);
});

cljs.core.KeySeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.KeySeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__._meta);
});

cljs.core.KeySeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.KeySeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.KeySeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var me = self__.mseq.cljs$core$ISeq$_first$arity$1(null);
return me.cljs$core$IMapEntry$_key$arity$1(null);
});

cljs.core.KeySeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var nseq = (((function (){var G__36584 = self__.mseq;
if(G__36584){
var bit__24955__auto__ = (G__36584.cljs$lang$protocol_mask$partition0$ & (128));
if((bit__24955__auto__) || (G__36584.cljs$core$INext$)){
return true;
} else {
if((!G__36584.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__36584);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__36584);
}
})())?self__.mseq.cljs$core$INext$_next$arity$1(null):cljs.core.next(self__.mseq));
if(!((nseq == null))){
return (new cljs.core.KeySeq(nseq,self__._meta));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.KeySeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.KeySeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,new_meta){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.KeySeq(self__.mseq,new_meta));
});

cljs.core.KeySeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.KeySeq.cljs$lang$type = true;

cljs.core.KeySeq.cljs$lang$ctorStr = "cljs.core/KeySeq";

cljs.core.KeySeq.cljs$lang$ctorPrWriter = (function (this__24861__auto__,writer__24862__auto__,opt__24863__auto__){
return cljs.core._write(writer__24862__auto__,"cljs.core/KeySeq");
});

cljs.core.__GT_KeySeq = (function __GT_KeySeq(mseq,_meta){
return (new cljs.core.KeySeq(mseq,_meta));
});

(cljs.core.KeySeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__25252__auto__ = this;
return cljs.core.es6_iterator(this__25252__auto__);
}));
/**
* Returns a sequence of the map's keys.
*/
cljs.core.keys = (function keys(hash_map){
var temp__4126__auto__ = cljs.core.seq(hash_map);
if(temp__4126__auto__){
var mseq = temp__4126__auto__;
return (new cljs.core.KeySeq(mseq,null));
} else {
return null;
}
});
/**
* Returns the key of the map entry.
*/
cljs.core.key = (function key(map_entry){
return cljs.core._key(map_entry);
});

/**
* @constructor
*/
cljs.core.ValSeq = (function (mseq,_meta){
this.mseq = mseq;
this._meta = _meta;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32374988;
})
cljs.core.ValSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.ValSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.ValSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__._meta;
});

cljs.core.ValSeq.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var nseq = (((function (){var G__36585 = self__.mseq;
if(G__36585){
var bit__24955__auto__ = (G__36585.cljs$lang$protocol_mask$partition0$ & (128));
if((bit__24955__auto__) || (G__36585.cljs$core$INext$)){
return true;
} else {
if((!G__36585.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__36585);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__36585);
}
})())?self__.mseq.cljs$core$INext$_next$arity$1(null):cljs.core.next(self__.mseq));
if((nseq == null)){
return null;
} else {
return (new cljs.core.ValSeq(nseq,self__._meta));
}
});

cljs.core.ValSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.hash_ordered_coll(coll__$1);
});

cljs.core.ValSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.ValSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__._meta);
});

cljs.core.ValSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.ValSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.ValSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var me = self__.mseq.cljs$core$ISeq$_first$arity$1(null);
return me.cljs$core$IMapEntry$_val$arity$1(null);
});

cljs.core.ValSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var nseq = (((function (){var G__36586 = self__.mseq;
if(G__36586){
var bit__24955__auto__ = (G__36586.cljs$lang$protocol_mask$partition0$ & (128));
if((bit__24955__auto__) || (G__36586.cljs$core$INext$)){
return true;
} else {
if((!G__36586.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__36586);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__36586);
}
})())?self__.mseq.cljs$core$INext$_next$arity$1(null):cljs.core.next(self__.mseq));
if(!((nseq == null))){
return (new cljs.core.ValSeq(nseq,self__._meta));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.ValSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.ValSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,new_meta){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.ValSeq(self__.mseq,new_meta));
});

cljs.core.ValSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.ValSeq.cljs$lang$type = true;

cljs.core.ValSeq.cljs$lang$ctorStr = "cljs.core/ValSeq";

cljs.core.ValSeq.cljs$lang$ctorPrWriter = (function (this__24861__auto__,writer__24862__auto__,opt__24863__auto__){
return cljs.core._write(writer__24862__auto__,"cljs.core/ValSeq");
});

cljs.core.__GT_ValSeq = (function __GT_ValSeq(mseq,_meta){
return (new cljs.core.ValSeq(mseq,_meta));
});

(cljs.core.ValSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__25252__auto__ = this;
return cljs.core.es6_iterator(this__25252__auto__);
}));
/**
* Returns a sequence of the map's values.
*/
cljs.core.vals = (function vals(hash_map){
var temp__4126__auto__ = cljs.core.seq(hash_map);
if(temp__4126__auto__){
var mseq = temp__4126__auto__;
return (new cljs.core.ValSeq(mseq,null));
} else {
return null;
}
});
/**
* Returns the value in the map entry.
*/
cljs.core.val = (function val(map_entry){
return cljs.core._val(map_entry);
});
/**
* Returns a map that consists of the rest of the maps conj-ed onto
* the first.  If a key occurs in more than one map, the mapping from
* the latter (left-to-right) will be the mapping in the result.
* @param {...*} var_args
*/
cljs.core.merge = (function() { 
var merge__delegate = function (maps){
if(cljs.core.truth_(cljs.core.some(cljs.core.identity,maps))){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$2((function (p1__36587_SHARP_,p2__36588_SHARP_){
return cljs.core.conj.cljs$core$IFn$_invoke$arity$2((function (){var or__24274__auto__ = p1__36587_SHARP_;
if(cljs.core.truth_(or__24274__auto__)){
return or__24274__auto__;
} else {
return cljs.core.PersistentArrayMap.EMPTY;
}
})(),p2__36588_SHARP_);
}),maps);
} else {
return null;
}
};
var merge = function (var_args){
var maps = null;
if (arguments.length > 0) {
var G__36589__i = 0, G__36589__a = new Array(arguments.length -  0);
while (G__36589__i < G__36589__a.length) {G__36589__a[G__36589__i] = arguments[G__36589__i + 0]; ++G__36589__i;}
  maps = new cljs.core.IndexedSeq(G__36589__a,0);
} 
return merge__delegate.call(this,maps);};
merge.cljs$lang$maxFixedArity = 0;
merge.cljs$lang$applyTo = (function (arglist__36590){
var maps = cljs.core.seq(arglist__36590);
return merge__delegate(maps);
});
merge.cljs$core$IFn$_invoke$arity$variadic = merge__delegate;
return merge;
})()
;
/**
* Returns a map that consists of the rest of the maps conj-ed onto
* the first.  If a key occurs in more than one map, the mapping(s)
* from the latter (left-to-right) will be combined with the mapping in
* the result by calling (f val-in-result val-in-latter).
* @param {...*} var_args
*/
cljs.core.merge_with = (function() { 
var merge_with__delegate = function (f,maps){
if(cljs.core.truth_(cljs.core.some(cljs.core.identity,maps))){
var merge_entry = (function (m,e){
var k = cljs.core.first(e);
var v = cljs.core.second(e);
if(cljs.core.contains_QMARK_(m,k)){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__36593 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__36594 = v;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__36593,G__36594) : f.call(null,G__36593,G__36594));
})());
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,v);
}
});
var merge2 = ((function (merge_entry){
return (function (m1,m2){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(merge_entry,(function (){var or__24274__auto__ = m1;
if(cljs.core.truth_(or__24274__auto__)){
return or__24274__auto__;
} else {
return cljs.core.PersistentArrayMap.EMPTY;
}
})(),cljs.core.seq(m2));
});})(merge_entry))
;
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$2(merge2,maps);
} else {
return null;
}
};
var merge_with = function (f,var_args){
var maps = null;
if (arguments.length > 1) {
var G__36595__i = 0, G__36595__a = new Array(arguments.length -  1);
while (G__36595__i < G__36595__a.length) {G__36595__a[G__36595__i] = arguments[G__36595__i + 1]; ++G__36595__i;}
  maps = new cljs.core.IndexedSeq(G__36595__a,0);
} 
return merge_with__delegate.call(this,f,maps);};
merge_with.cljs$lang$maxFixedArity = 1;
merge_with.cljs$lang$applyTo = (function (arglist__36596){
var f = cljs.core.first(arglist__36596);
var maps = cljs.core.rest(arglist__36596);
return merge_with__delegate(f,maps);
});
merge_with.cljs$core$IFn$_invoke$arity$variadic = merge_with__delegate;
return merge_with;
})()
;
/**
* Returns a map containing only those entries in map whose key is in keys
*/
cljs.core.select_keys = (function select_keys(map,keyseq){
var ret = cljs.core.PersistentArrayMap.EMPTY;
var keys = cljs.core.seq(keyseq);
while(true){
if(keys){
var key = cljs.core.first(keys);
var entry = cljs.core.get.cljs$core$IFn$_invoke$arity$3(map,key,new cljs.core.Keyword("cljs.core","not-found","cljs.core/not-found",-1572889185));
var G__36597 = ((cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2(entry,new cljs.core.Keyword("cljs.core","not-found","cljs.core/not-found",-1572889185)))?cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(ret,key,entry):ret);
var G__36598 = cljs.core.next(keys);
ret = G__36597;
keys = G__36598;
continue;
} else {
return cljs.core.with_meta(ret,cljs.core.meta(map));
}
break;
}
});

/**
* @constructor
*/
cljs.core.PersistentHashSet = (function (meta,hash_map,__hash){
this.meta = meta;
this.hash_map = hash_map;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 15077647;
this.cljs$lang$protocol_mask$partition1$ = 8196;
})
cljs.core.PersistentHashSet.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentHashSet.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentHashSet.prototype.keys = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentHashSet.prototype.entries = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_set_entries_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentHashSet.prototype.values = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentHashSet.prototype.has = (function (k){
var self__ = this;
var coll = this;
return cljs.core.contains_QMARK_(coll,k);
});

cljs.core.PersistentHashSet.prototype.forEach = (function (f){
var self__ = this;
var coll = this;
var seq__36601 = cljs.core.seq(coll);
var chunk__36602 = null;
var count__36603 = (0);
var i__36604 = (0);
while(true){
if((i__36604 < count__36603)){
var vec__36605 = chunk__36602.cljs$core$IIndexed$_nth$arity$2(null,i__36604);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__36605,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__36605,(1),null);
var G__36606_36611 = v;
var G__36607_36612 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__36606_36611,G__36607_36612) : f.call(null,G__36606_36611,G__36607_36612));

var G__36613 = seq__36601;
var G__36614 = chunk__36602;
var G__36615 = count__36603;
var G__36616 = (i__36604 + (1));
seq__36601 = G__36613;
chunk__36602 = G__36614;
count__36603 = G__36615;
i__36604 = G__36616;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__36601);
if(temp__4126__auto__){
var seq__36601__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__36601__$1)){
var c__25061__auto__ = cljs.core.chunk_first(seq__36601__$1);
var G__36617 = cljs.core.chunk_rest(seq__36601__$1);
var G__36618 = c__25061__auto__;
var G__36619 = cljs.core.count(c__25061__auto__);
var G__36620 = (0);
seq__36601 = G__36617;
chunk__36602 = G__36618;
count__36603 = G__36619;
i__36604 = G__36620;
continue;
} else {
var vec__36608 = cljs.core.first(seq__36601__$1);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__36608,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__36608,(1),null);
var G__36609_36621 = v;
var G__36610_36622 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__36609_36621,G__36610_36622) : f.call(null,G__36609_36621,G__36610_36622));

var G__36623 = cljs.core.next(seq__36601__$1);
var G__36624 = null;
var G__36625 = (0);
var G__36626 = (0);
seq__36601 = G__36623;
chunk__36602 = G__36624;
count__36603 = G__36625;
i__36604 = G__36626;
continue;
}
} else {
return null;
}
}
break;
}
});

cljs.core.PersistentHashSet.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,v){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,v,null);
});

cljs.core.PersistentHashSet.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,v,not_found){
var self__ = this;
var coll__$1 = this;
if(cljs.core._contains_key_QMARK_(self__.hash_map,v)){
return v;
} else {
return not_found;
}
});

cljs.core.PersistentHashSet.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentHashSet.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.PersistentHashSet(self__.meta,self__.hash_map,self__.__hash));
});

cljs.core.PersistentHashSet.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._count(self__.hash_map);
});

cljs.core.PersistentHashSet.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__24695__auto__ = self__.__hash;
if(!((h__24695__auto__ == null))){
return h__24695__auto__;
} else {
var h__24695__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
self__.__hash = h__24695__auto____$1;

return h__24695__auto____$1;
}
});

cljs.core.PersistentHashSet.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return (cljs.core.set_QMARK_(other)) && ((cljs.core.count(coll__$1) === cljs.core.count(other))) && (cljs.core.every_QMARK_(((function (coll__$1){
return (function (p1__36599_SHARP_){
return cljs.core.contains_QMARK_(coll__$1,p1__36599_SHARP_);
});})(coll__$1))
,other));
});

cljs.core.PersistentHashSet.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.TransientHashSet(cljs.core._as_transient(self__.hash_map)));
});

cljs.core.PersistentHashSet.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.PersistentHashSet.EMPTY,self__.meta);
});

cljs.core.PersistentHashSet.prototype.cljs$core$ISet$_disjoin$arity$2 = (function (coll,v){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentHashSet(self__.meta,cljs.core._dissoc(self__.hash_map,v),null));
});

cljs.core.PersistentHashSet.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.keys(self__.hash_map);
});

cljs.core.PersistentHashSet.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentHashSet(meta__$1,self__.hash_map,self__.__hash));
});

cljs.core.PersistentHashSet.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentHashSet(self__.meta,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.hash_map,o,null),null));
});

cljs.core.PersistentHashSet.prototype.call = (function() {
var G__36627 = null;
var G__36627__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__36627__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__36627 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__36627__2.call(this,self__,k);
case 3:
return G__36627__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__36627.cljs$core$IFn$_invoke$arity$2 = G__36627__2;
G__36627.cljs$core$IFn$_invoke$arity$3 = G__36627__3;
return G__36627;
})()
;

cljs.core.PersistentHashSet.prototype.apply = (function (self__,args36600){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args36600)));
});

cljs.core.PersistentHashSet.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentHashSet.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.PersistentHashSet.cljs$lang$type = true;

cljs.core.PersistentHashSet.cljs$lang$ctorStr = "cljs.core/PersistentHashSet";

cljs.core.PersistentHashSet.cljs$lang$ctorPrWriter = (function (this__24861__auto__,writer__24862__auto__,opt__24863__auto__){
return cljs.core._write(writer__24862__auto__,"cljs.core/PersistentHashSet");
});

cljs.core.__GT_PersistentHashSet = (function __GT_PersistentHashSet(meta,hash_map,__hash){
return (new cljs.core.PersistentHashSet(meta,hash_map,__hash));
});

cljs.core.PersistentHashSet.EMPTY = (new cljs.core.PersistentHashSet(null,cljs.core.PersistentArrayMap.EMPTY,(0)));
cljs.core.PersistentHashSet.fromArray = (function (items,no_clone){
var len = items.length;
if((len <= cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD)){
var arr = ((no_clone)?items:cljs.core.aclone(items));
var i = (0);
var out = cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY);
while(true){
if((i < len)){
var G__36628 = (i + (1));
var G__36629 = cljs.core._assoc_BANG_(out,(items[i]),null);
i = G__36628;
out = G__36629;
continue;
} else {
return (new cljs.core.PersistentHashSet(null,cljs.core._persistent_BANG_(out),null));
}
break;
}
} else {
var i = (0);
var out = cljs.core.transient$(cljs.core.PersistentHashSet.EMPTY);
while(true){
if((i < len)){
var G__36630 = (i + (1));
var G__36631 = cljs.core._conj_BANG_(out,(items[i]));
i = G__36630;
out = G__36631;
continue;
} else {
return cljs.core._persistent_BANG_(out);
}
break;
}
}
});
(cljs.core.PersistentHashSet.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__25252__auto__ = this;
return cljs.core.es6_iterator(this__25252__auto__);
}));

/**
* @constructor
*/
cljs.core.TransientHashSet = (function (transient_map){
this.transient_map = transient_map;
this.cljs$lang$protocol_mask$partition0$ = 259;
this.cljs$lang$protocol_mask$partition1$ = 136;
})
cljs.core.TransientHashSet.prototype.call = (function() {
var G__36633 = null;
var G__36633__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var tcoll = self____$1;
if((cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map,k,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel)){
return null;
} else {
return k;
}
});
var G__36633__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var tcoll = self____$1;
if((cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map,k,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel)){
return not_found;
} else {
return k;
}
});
G__36633 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__36633__2.call(this,self__,k);
case 3:
return G__36633__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__36633.cljs$core$IFn$_invoke$arity$2 = G__36633__2;
G__36633.cljs$core$IFn$_invoke$arity$3 = G__36633__3;
return G__36633;
})()
;

cljs.core.TransientHashSet.prototype.apply = (function (self__,args36632){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args36632)));
});

cljs.core.TransientHashSet.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var tcoll = this;
if((cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map,k,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel)){
return null;
} else {
return k;
}
});

cljs.core.TransientHashSet.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var tcoll = this;
if((cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map,k,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel)){
return not_found;
} else {
return k;
}
});

cljs.core.TransientHashSet.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (tcoll,v){
var self__ = this;
var tcoll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(tcoll__$1,v,null);
});

cljs.core.TransientHashSet.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (tcoll,v,not_found){
var self__ = this;
var tcoll__$1 = this;
if((cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map,v,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel)){
return not_found;
} else {
return v;
}
});

cljs.core.TransientHashSet.prototype.cljs$core$ICounted$_count$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
return cljs.core.count(self__.transient_map);
});

cljs.core.TransientHashSet.prototype.cljs$core$ITransientSet$_disjoin_BANG_$arity$2 = (function (tcoll,v){
var self__ = this;
var tcoll__$1 = this;
self__.transient_map = cljs.core.dissoc_BANG_.cljs$core$IFn$_invoke$arity$2(self__.transient_map,v);

return tcoll__$1;
});

cljs.core.TransientHashSet.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = (function (tcoll,o){
var self__ = this;
var tcoll__$1 = this;
self__.transient_map = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(self__.transient_map,o,null);

return tcoll__$1;
});

cljs.core.TransientHashSet.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
return (new cljs.core.PersistentHashSet(null,cljs.core.persistent_BANG_(self__.transient_map),null));
});

cljs.core.TransientHashSet.cljs$lang$type = true;

cljs.core.TransientHashSet.cljs$lang$ctorStr = "cljs.core/TransientHashSet";

cljs.core.TransientHashSet.cljs$lang$ctorPrWriter = (function (this__24861__auto__,writer__24862__auto__,opt__24863__auto__){
return cljs.core._write(writer__24862__auto__,"cljs.core/TransientHashSet");
});

cljs.core.__GT_TransientHashSet = (function __GT_TransientHashSet(transient_map){
return (new cljs.core.TransientHashSet(transient_map));
});


/**
* @constructor
*/
cljs.core.PersistentTreeSet = (function (meta,tree_map,__hash){
this.meta = meta;
this.tree_map = tree_map;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 417730831;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.PersistentTreeSet.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentTreeSet.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentTreeSet.prototype.keys = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentTreeSet.prototype.entries = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_set_entries_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentTreeSet.prototype.values = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentTreeSet.prototype.has = (function (k){
var self__ = this;
var coll = this;
return cljs.core.contains_QMARK_(coll,k);
});

cljs.core.PersistentTreeSet.prototype.forEach = (function (f){
var self__ = this;
var coll = this;
var seq__36636 = cljs.core.seq(coll);
var chunk__36637 = null;
var count__36638 = (0);
var i__36639 = (0);
while(true){
if((i__36639 < count__36638)){
var vec__36640 = chunk__36637.cljs$core$IIndexed$_nth$arity$2(null,i__36639);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__36640,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__36640,(1),null);
var G__36641_36646 = v;
var G__36642_36647 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__36641_36646,G__36642_36647) : f.call(null,G__36641_36646,G__36642_36647));

var G__36648 = seq__36636;
var G__36649 = chunk__36637;
var G__36650 = count__36638;
var G__36651 = (i__36639 + (1));
seq__36636 = G__36648;
chunk__36637 = G__36649;
count__36638 = G__36650;
i__36639 = G__36651;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__36636);
if(temp__4126__auto__){
var seq__36636__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__36636__$1)){
var c__25061__auto__ = cljs.core.chunk_first(seq__36636__$1);
var G__36652 = cljs.core.chunk_rest(seq__36636__$1);
var G__36653 = c__25061__auto__;
var G__36654 = cljs.core.count(c__25061__auto__);
var G__36655 = (0);
seq__36636 = G__36652;
chunk__36637 = G__36653;
count__36638 = G__36654;
i__36639 = G__36655;
continue;
} else {
var vec__36643 = cljs.core.first(seq__36636__$1);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__36643,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__36643,(1),null);
var G__36644_36656 = v;
var G__36645_36657 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__36644_36656,G__36645_36657) : f.call(null,G__36644_36656,G__36645_36657));

var G__36658 = cljs.core.next(seq__36636__$1);
var G__36659 = null;
var G__36660 = (0);
var G__36661 = (0);
seq__36636 = G__36658;
chunk__36637 = G__36659;
count__36638 = G__36660;
i__36639 = G__36661;
continue;
}
} else {
return null;
}
}
break;
}
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,v){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,v,null);
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,v,not_found){
var self__ = this;
var coll__$1 = this;
var n = self__.tree_map.entry_at(v);
if(!((n == null))){
return n.key;
} else {
return not_found;
}
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.PersistentTreeSet(self__.meta,self__.tree_map,self__.__hash));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.count(self__.tree_map);
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IReversible$_rseq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((cljs.core.count(self__.tree_map) > (0))){
return cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.key,cljs.core.rseq(self__.tree_map));
} else {
return null;
}
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__24695__auto__ = self__.__hash;
if(!((h__24695__auto__ == null))){
return h__24695__auto__;
} else {
var h__24695__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
self__.__hash = h__24695__auto____$1;

return h__24695__auto____$1;
}
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return (cljs.core.set_QMARK_(other)) && ((cljs.core.count(coll__$1) === cljs.core.count(other))) && (cljs.core.every_QMARK_(((function (coll__$1){
return (function (p1__36634_SHARP_){
return cljs.core.contains_QMARK_(coll__$1,p1__36634_SHARP_);
});})(coll__$1))
,other));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeSet(self__.meta,cljs.core._empty(self__.tree_map),(0)));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ISet$_disjoin$arity$2 = (function (coll,v){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeSet(self__.meta,cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(self__.tree_map,v),null));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.keys(self__.tree_map);
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeSet(meta__$1,self__.tree_map,self__.__hash));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeSet(self__.meta,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.tree_map,o,null),null));
});

cljs.core.PersistentTreeSet.prototype.call = (function() {
var G__36662 = null;
var G__36662__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__36662__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__36662 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__36662__2.call(this,self__,k);
case 3:
return G__36662__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__36662.cljs$core$IFn$_invoke$arity$2 = G__36662__2;
G__36662.cljs$core$IFn$_invoke$arity$3 = G__36662__3;
return G__36662;
})()
;

cljs.core.PersistentTreeSet.prototype.apply = (function (self__,args36635){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args36635)));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_sorted_seq$arity$2 = (function (coll,ascending_QMARK_){
var self__ = this;
var coll__$1 = this;
return cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.key,cljs.core._sorted_seq(self__.tree_map,ascending_QMARK_));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_sorted_seq_from$arity$3 = (function (coll,k,ascending_QMARK_){
var self__ = this;
var coll__$1 = this;
return cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.key,cljs.core._sorted_seq_from(self__.tree_map,k,ascending_QMARK_));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_entry_key$arity$2 = (function (coll,entry){
var self__ = this;
var coll__$1 = this;
return entry;
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_comparator$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._comparator(self__.tree_map);
});

cljs.core.PersistentTreeSet.cljs$lang$type = true;

cljs.core.PersistentTreeSet.cljs$lang$ctorStr = "cljs.core/PersistentTreeSet";

cljs.core.PersistentTreeSet.cljs$lang$ctorPrWriter = (function (this__24861__auto__,writer__24862__auto__,opt__24863__auto__){
return cljs.core._write(writer__24862__auto__,"cljs.core/PersistentTreeSet");
});

cljs.core.__GT_PersistentTreeSet = (function __GT_PersistentTreeSet(meta,tree_map,__hash){
return (new cljs.core.PersistentTreeSet(meta,tree_map,__hash));
});

cljs.core.PersistentTreeSet.EMPTY = (new cljs.core.PersistentTreeSet(null,cljs.core.PersistentTreeMap.EMPTY,(0)));
(cljs.core.PersistentTreeSet.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__25252__auto__ = this;
return cljs.core.es6_iterator(this__25252__auto__);
}));
cljs.core.set_from_indexed_seq = (function set_from_indexed_seq(iseq){
var arr = iseq.arr;
var ret = (function (){var a__25155__auto__ = arr;
var i = (0);
var res = cljs.core._as_transient(cljs.core.PersistentHashSet.EMPTY);
while(true){
if((i < a__25155__auto__.length)){
var G__36663 = (i + (1));
var G__36664 = res.cljs$core$ITransientCollection$_conj_BANG_$arity$2(null,(arr[i]));
i = G__36663;
res = G__36664;
continue;
} else {
return res;
}
break;
}
})();
return ret.cljs$core$ITransientCollection$_persistent_BANG_$arity$1(null);
});
/**
* Returns a set of the distinct elements of coll.
*/
cljs.core.set = (function set(coll){
var in$ = cljs.core.seq(coll);
if((in$ == null)){
return cljs.core.PersistentHashSet.EMPTY;
} else {
if(((in$ instanceof cljs.core.IndexedSeq)) && ((in$.i === (0)))){
return cljs.core.set_from_indexed_seq(in$);
} else {
var in$__$1 = in$;
var out = cljs.core._as_transient(cljs.core.PersistentHashSet.EMPTY);
while(true){
if(!((in$__$1 == null))){
var G__36665 = in$__$1.cljs$core$INext$_next$arity$1(null);
var G__36666 = out.cljs$core$ITransientCollection$_conj_BANG_$arity$2(null,in$__$1.cljs$core$ISeq$_first$arity$1(null));
in$__$1 = G__36665;
out = G__36666;
continue;
} else {
return out.cljs$core$ITransientCollection$_persistent_BANG_$arity$1(null);
}
break;
}

}
}
});
/**
* @param {...*} var_args
*/
cljs.core.hash_set = (function() {
var hash_set = null;
var hash_set__0 = (function (){
return cljs.core.PersistentHashSet.EMPTY;
});
var hash_set__1 = (function() { 
var G__36667__delegate = function (keys){
return cljs.core.set(keys);
};
var G__36667 = function (var_args){
var keys = null;
if (arguments.length > 0) {
var G__36668__i = 0, G__36668__a = new Array(arguments.length -  0);
while (G__36668__i < G__36668__a.length) {G__36668__a[G__36668__i] = arguments[G__36668__i + 0]; ++G__36668__i;}
  keys = new cljs.core.IndexedSeq(G__36668__a,0);
} 
return G__36667__delegate.call(this,keys);};
G__36667.cljs$lang$maxFixedArity = 0;
G__36667.cljs$lang$applyTo = (function (arglist__36669){
var keys = cljs.core.seq(arglist__36669);
return G__36667__delegate(keys);
});
G__36667.cljs$core$IFn$_invoke$arity$variadic = G__36667__delegate;
return G__36667;
})()
;
hash_set = function(var_args){
var keys = var_args;
switch(arguments.length){
case 0:
return hash_set__0.call(this);
default:
var G__36670 = null;
if (arguments.length > 0) {
var G__36671__i = 0, G__36671__a = new Array(arguments.length -  0);
while (G__36671__i < G__36671__a.length) {G__36671__a[G__36671__i] = arguments[G__36671__i + 0]; ++G__36671__i;}
G__36670 = new cljs.core.IndexedSeq(G__36671__a,0);
}
return hash_set__1.cljs$core$IFn$_invoke$arity$variadic(G__36670);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
hash_set.cljs$lang$maxFixedArity = 0;
hash_set.cljs$lang$applyTo = hash_set__1.cljs$lang$applyTo;
hash_set.cljs$core$IFn$_invoke$arity$0 = hash_set__0;
hash_set.cljs$core$IFn$_invoke$arity$variadic = hash_set__1.cljs$core$IFn$_invoke$arity$variadic;
return hash_set;
})()
;
/**
* Returns a new sorted set with supplied keys.
* @param {...*} var_args
*/
cljs.core.sorted_set = (function() { 
var sorted_set__delegate = function (keys){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj,cljs.core.PersistentTreeSet.EMPTY,keys);
};
var sorted_set = function (var_args){
var keys = null;
if (arguments.length > 0) {
var G__36672__i = 0, G__36672__a = new Array(arguments.length -  0);
while (G__36672__i < G__36672__a.length) {G__36672__a[G__36672__i] = arguments[G__36672__i + 0]; ++G__36672__i;}
  keys = new cljs.core.IndexedSeq(G__36672__a,0);
} 
return sorted_set__delegate.call(this,keys);};
sorted_set.cljs$lang$maxFixedArity = 0;
sorted_set.cljs$lang$applyTo = (function (arglist__36673){
var keys = cljs.core.seq(arglist__36673);
return sorted_set__delegate(keys);
});
sorted_set.cljs$core$IFn$_invoke$arity$variadic = sorted_set__delegate;
return sorted_set;
})()
;
/**
* Returns a new sorted set with supplied keys, using the supplied comparator.
* @param {...*} var_args
*/
cljs.core.sorted_set_by = (function() { 
var sorted_set_by__delegate = function (comparator,keys){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj,(new cljs.core.PersistentTreeSet(null,cljs.core.sorted_map_by(comparator),(0))),keys);
};
var sorted_set_by = function (comparator,var_args){
var keys = null;
if (arguments.length > 1) {
var G__36674__i = 0, G__36674__a = new Array(arguments.length -  1);
while (G__36674__i < G__36674__a.length) {G__36674__a[G__36674__i] = arguments[G__36674__i + 1]; ++G__36674__i;}
  keys = new cljs.core.IndexedSeq(G__36674__a,0);
} 
return sorted_set_by__delegate.call(this,comparator,keys);};
sorted_set_by.cljs$lang$maxFixedArity = 1;
sorted_set_by.cljs$lang$applyTo = (function (arglist__36675){
var comparator = cljs.core.first(arglist__36675);
var keys = cljs.core.rest(arglist__36675);
return sorted_set_by__delegate(comparator,keys);
});
sorted_set_by.cljs$core$IFn$_invoke$arity$variadic = sorted_set_by__delegate;
return sorted_set_by;
})()
;
/**
* Given a map of replacement pairs and a vector/collection, returns a
* vector/seq with any elements = a key in smap replaced with the
* corresponding val in smap.  Returns a transducer when no collection
* is provided.
*/
cljs.core.replace = (function() {
var replace = null;
var replace__1 = (function (smap){
return cljs.core.map.cljs$core$IFn$_invoke$arity$1((function (p1__36676_SHARP_){
var temp__4124__auto__ = cljs.core.find(smap,p1__36676_SHARP_);
if(cljs.core.truth_(temp__4124__auto__)){
var e = temp__4124__auto__;
return cljs.core.val(e);
} else {
return p1__36676_SHARP_;
}
}));
});
var replace__2 = (function (smap,coll){
if(cljs.core.vector_QMARK_(coll)){
var n = cljs.core.count(coll);
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (n){
return (function (v,i){
var temp__4124__auto__ = cljs.core.find(smap,cljs.core.nth.cljs$core$IFn$_invoke$arity$2(v,i));
if(cljs.core.truth_(temp__4124__auto__)){
var e = temp__4124__auto__;
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(v,i,cljs.core.second(e));
} else {
return v;
}
});})(n))
,coll,cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,cljs.core.iterate(cljs.core.inc,(0))));
} else {
return cljs.core.map.cljs$core$IFn$_invoke$arity$2((function (p1__36677_SHARP_){
var temp__4124__auto__ = cljs.core.find(smap,p1__36677_SHARP_);
if(cljs.core.truth_(temp__4124__auto__)){
var e = temp__4124__auto__;
return cljs.core.second(e);
} else {
return p1__36677_SHARP_;
}
}),coll);
}
});
replace = function(smap,coll){
switch(arguments.length){
case 1:
return replace__1.call(this,smap);
case 2:
return replace__2.call(this,smap,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
replace.cljs$core$IFn$_invoke$arity$1 = replace__1;
replace.cljs$core$IFn$_invoke$arity$2 = replace__2;
return replace;
})()
;
/**
* Returns a lazy sequence of the elements of coll with duplicates removed
*/
cljs.core.distinct = (function distinct(coll){
var step = (function step(xs,seen){
return (new cljs.core.LazySeq(null,(function (){
return (function (p__36688,seen__$1){
while(true){
var vec__36689 = p__36688;
var f = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__36689,(0),null);
var xs__$1 = vec__36689;
var temp__4126__auto__ = cljs.core.seq(xs__$1);
if(temp__4126__auto__){
var s = temp__4126__auto__;
if(cljs.core.contains_QMARK_(seen__$1,f)){
var G__36690 = cljs.core.rest(s);
var G__36691 = seen__$1;
p__36688 = G__36690;
seen__$1 = G__36691;
continue;
} else {
return cljs.core.cons(f,step(cljs.core.rest(s),cljs.core.conj.cljs$core$IFn$_invoke$arity$2(seen__$1,f)));
}
} else {
return null;
}
break;
}
}).call(null,xs,seen);
}),null,null));
});
return step(coll,cljs.core.PersistentHashSet.EMPTY);
});
cljs.core.butlast = (function butlast(s){
var ret = cljs.core.PersistentVector.EMPTY;
var s__$1 = s;
while(true){
if(cljs.core.next(s__$1)){
var G__36692 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(ret,cljs.core.first(s__$1));
var G__36693 = cljs.core.next(s__$1);
ret = G__36692;
s__$1 = G__36693;
continue;
} else {
return cljs.core.seq(ret);
}
break;
}
});
/**
* Returns the name String of a string, symbol or keyword.
*/
cljs.core.name = (function name(x){
if((function (){var G__36695 = x;
if(G__36695){
var bit__24948__auto__ = (G__36695.cljs$lang$protocol_mask$partition1$ & (4096));
if((bit__24948__auto__) || (G__36695.cljs$core$INamed$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return x.cljs$core$INamed$_name$arity$1(null);
} else {
if(typeof x === 'string'){
return x;
} else {
throw (new Error([cljs.core.str("Doesn't support name: "),cljs.core.str(x)].join('')));
}
}
});
/**
* Returns a map with the keys mapped to the corresponding vals.
*/
cljs.core.zipmap = (function zipmap(keys,vals){
var map = cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY);
var ks = cljs.core.seq(keys);
var vs = cljs.core.seq(vals);
while(true){
if((ks) && (vs)){
var G__36696 = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(map,cljs.core.first(ks),cljs.core.first(vs));
var G__36697 = cljs.core.next(ks);
var G__36698 = cljs.core.next(vs);
map = G__36696;
ks = G__36697;
vs = G__36698;
continue;
} else {
return cljs.core.persistent_BANG_(map);
}
break;
}
});
/**
* Returns the x for which (k x), a number, is greatest.
* @param {...*} var_args
*/
cljs.core.max_key = (function() {
var max_key = null;
var max_key__2 = (function (k,x){
return x;
});
var max_key__3 = (function (k,x,y){
if(((function (){var G__36709 = x;
return (k.cljs$core$IFn$_invoke$arity$1 ? k.cljs$core$IFn$_invoke$arity$1(G__36709) : k.call(null,G__36709));
})() > (function (){var G__36710 = y;
return (k.cljs$core$IFn$_invoke$arity$1 ? k.cljs$core$IFn$_invoke$arity$1(G__36710) : k.call(null,G__36710));
})())){
return x;
} else {
return y;
}
});
var max_key__4 = (function() { 
var G__36711__delegate = function (k,x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (p1__36699_SHARP_,p2__36700_SHARP_){
return max_key.cljs$core$IFn$_invoke$arity$3(k,p1__36699_SHARP_,p2__36700_SHARP_);
}),max_key.cljs$core$IFn$_invoke$arity$3(k,x,y),more);
};
var G__36711 = function (k,x,y,var_args){
var more = null;
if (arguments.length > 3) {
var G__36712__i = 0, G__36712__a = new Array(arguments.length -  3);
while (G__36712__i < G__36712__a.length) {G__36712__a[G__36712__i] = arguments[G__36712__i + 3]; ++G__36712__i;}
  more = new cljs.core.IndexedSeq(G__36712__a,0);
} 
return G__36711__delegate.call(this,k,x,y,more);};
G__36711.cljs$lang$maxFixedArity = 3;
G__36711.cljs$lang$applyTo = (function (arglist__36713){
var k = cljs.core.first(arglist__36713);
arglist__36713 = cljs.core.next(arglist__36713);
var x = cljs.core.first(arglist__36713);
arglist__36713 = cljs.core.next(arglist__36713);
var y = cljs.core.first(arglist__36713);
var more = cljs.core.rest(arglist__36713);
return G__36711__delegate(k,x,y,more);
});
G__36711.cljs$core$IFn$_invoke$arity$variadic = G__36711__delegate;
return G__36711;
})()
;
max_key = function(k,x,y,var_args){
var more = var_args;
switch(arguments.length){
case 2:
return max_key__2.call(this,k,x);
case 3:
return max_key__3.call(this,k,x,y);
default:
var G__36714 = null;
if (arguments.length > 3) {
var G__36715__i = 0, G__36715__a = new Array(arguments.length -  3);
while (G__36715__i < G__36715__a.length) {G__36715__a[G__36715__i] = arguments[G__36715__i + 3]; ++G__36715__i;}
G__36714 = new cljs.core.IndexedSeq(G__36715__a,0);
}
return max_key__4.cljs$core$IFn$_invoke$arity$variadic(k,x,y, G__36714);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
max_key.cljs$lang$maxFixedArity = 3;
max_key.cljs$lang$applyTo = max_key__4.cljs$lang$applyTo;
max_key.cljs$core$IFn$_invoke$arity$2 = max_key__2;
max_key.cljs$core$IFn$_invoke$arity$3 = max_key__3;
max_key.cljs$core$IFn$_invoke$arity$variadic = max_key__4.cljs$core$IFn$_invoke$arity$variadic;
return max_key;
})()
;
/**
* Returns the x for which (k x), a number, is least.
* @param {...*} var_args
*/
cljs.core.min_key = (function() {
var min_key = null;
var min_key__2 = (function (k,x){
return x;
});
var min_key__3 = (function (k,x,y){
if(((function (){var G__36726 = x;
return (k.cljs$core$IFn$_invoke$arity$1 ? k.cljs$core$IFn$_invoke$arity$1(G__36726) : k.call(null,G__36726));
})() < (function (){var G__36727 = y;
return (k.cljs$core$IFn$_invoke$arity$1 ? k.cljs$core$IFn$_invoke$arity$1(G__36727) : k.call(null,G__36727));
})())){
return x;
} else {
return y;
}
});
var min_key__4 = (function() { 
var G__36728__delegate = function (k,x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (p1__36716_SHARP_,p2__36717_SHARP_){
return min_key.cljs$core$IFn$_invoke$arity$3(k,p1__36716_SHARP_,p2__36717_SHARP_);
}),min_key.cljs$core$IFn$_invoke$arity$3(k,x,y),more);
};
var G__36728 = function (k,x,y,var_args){
var more = null;
if (arguments.length > 3) {
var G__36729__i = 0, G__36729__a = new Array(arguments.length -  3);
while (G__36729__i < G__36729__a.length) {G__36729__a[G__36729__i] = arguments[G__36729__i + 3]; ++G__36729__i;}
  more = new cljs.core.IndexedSeq(G__36729__a,0);
} 
return G__36728__delegate.call(this,k,x,y,more);};
G__36728.cljs$lang$maxFixedArity = 3;
G__36728.cljs$lang$applyTo = (function (arglist__36730){
var k = cljs.core.first(arglist__36730);
arglist__36730 = cljs.core.next(arglist__36730);
var x = cljs.core.first(arglist__36730);
arglist__36730 = cljs.core.next(arglist__36730);
var y = cljs.core.first(arglist__36730);
var more = cljs.core.rest(arglist__36730);
return G__36728__delegate(k,x,y,more);
});
G__36728.cljs$core$IFn$_invoke$arity$variadic = G__36728__delegate;
return G__36728;
})()
;
min_key = function(k,x,y,var_args){
var more = var_args;
switch(arguments.length){
case 2:
return min_key__2.call(this,k,x);
case 3:
return min_key__3.call(this,k,x,y);
default:
var G__36731 = null;
if (arguments.length > 3) {
var G__36732__i = 0, G__36732__a = new Array(arguments.length -  3);
while (G__36732__i < G__36732__a.length) {G__36732__a[G__36732__i] = arguments[G__36732__i + 3]; ++G__36732__i;}
G__36731 = new cljs.core.IndexedSeq(G__36732__a,0);
}
return min_key__4.cljs$core$IFn$_invoke$arity$variadic(k,x,y, G__36731);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
min_key.cljs$lang$maxFixedArity = 3;
min_key.cljs$lang$applyTo = min_key__4.cljs$lang$applyTo;
min_key.cljs$core$IFn$_invoke$arity$2 = min_key__2;
min_key.cljs$core$IFn$_invoke$arity$3 = min_key__3;
min_key.cljs$core$IFn$_invoke$arity$variadic = min_key__4.cljs$core$IFn$_invoke$arity$variadic;
return min_key;
})()
;

/**
* @constructor
*/
cljs.core.ArrayList = (function (arr){
this.arr = arr;
})
cljs.core.ArrayList.prototype.add = (function (x){
var self__ = this;
var _ = this;
return self__.arr.push(x);
});

cljs.core.ArrayList.prototype.size = (function (){
var self__ = this;
var _ = this;
return self__.arr.length;
});

cljs.core.ArrayList.prototype.clear = (function (){
var self__ = this;
var _ = this;
return self__.arr = [];
});

cljs.core.ArrayList.prototype.isEmpty = (function (){
var self__ = this;
var _ = this;
return (self__.arr.length === (0));
});

cljs.core.ArrayList.prototype.toArray = (function (){
var self__ = this;
var _ = this;
return self__.arr;
});

cljs.core.ArrayList.cljs$lang$type = true;

cljs.core.ArrayList.cljs$lang$ctorStr = "cljs.core/ArrayList";

cljs.core.ArrayList.cljs$lang$ctorPrWriter = (function (this__24861__auto__,writer__24862__auto__,opt__24863__auto__){
return cljs.core._write(writer__24862__auto__,"cljs.core/ArrayList");
});

cljs.core.__GT_ArrayList = (function __GT_ArrayList(arr){
return (new cljs.core.ArrayList(arr));
});

cljs.core.array_list = (function array_list(){
return (new cljs.core.ArrayList([]));
});
/**
* Returns a lazy sequence of lists like partition, but may include
* partitions with fewer than n items at the end.  Returns a stateful
* transducer when no collection is provided.
*/
cljs.core.partition_all = (function() {
var partition_all = null;
var partition_all__1 = (function (n){
return (function (rf){
var a = cljs.core.array_list();
return ((function (a){
return (function() {
var G__36749 = null;
var G__36749__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__36749__1 = (function (result){
var result__$1 = (cljs.core.truth_(a.isEmpty())?result:(function (){var v = cljs.core.vec(a.toArray());
a.clear();

return cljs.core.unreduced((function (){var G__36744 = result;
var G__36745 = v;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__36744,G__36745) : rf.call(null,G__36744,G__36745));
})());
})());
var G__36746 = result__$1;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__36746) : rf.call(null,G__36746));
});
var G__36749__2 = (function (result,input){
a.add(input);

if((n === a.size())){
var v = cljs.core.vec(a.toArray());
a.clear();

var G__36747 = result;
var G__36748 = v;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__36747,G__36748) : rf.call(null,G__36747,G__36748));
} else {
return result;
}
});
G__36749 = function(result,input){
switch(arguments.length){
case 0:
return G__36749__0.call(this);
case 1:
return G__36749__1.call(this,result);
case 2:
return G__36749__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__36749.cljs$core$IFn$_invoke$arity$0 = G__36749__0;
G__36749.cljs$core$IFn$_invoke$arity$1 = G__36749__1;
G__36749.cljs$core$IFn$_invoke$arity$2 = G__36749__2;
return G__36749;
})()
;})(a))
});
});
var partition_all__2 = (function (n,coll){
return partition_all.cljs$core$IFn$_invoke$arity$3(n,n,coll);
});
var partition_all__3 = (function (n,step,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
return cljs.core.cons(cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,s),partition_all.cljs$core$IFn$_invoke$arity$3(n,step,cljs.core.drop.cljs$core$IFn$_invoke$arity$2(step,s)));
} else {
return null;
}
}),null,null));
});
partition_all = function(n,step,coll){
switch(arguments.length){
case 1:
return partition_all__1.call(this,n);
case 2:
return partition_all__2.call(this,n,step);
case 3:
return partition_all__3.call(this,n,step,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
partition_all.cljs$core$IFn$_invoke$arity$1 = partition_all__1;
partition_all.cljs$core$IFn$_invoke$arity$2 = partition_all__2;
partition_all.cljs$core$IFn$_invoke$arity$3 = partition_all__3;
return partition_all;
})()
;
/**
* Returns a lazy sequence of successive items from coll while
* (pred item) returns true. pred must be free of side-effects.
* Returns a transducer when no collection is provided.
*/
cljs.core.take_while = (function() {
var take_while = null;
var take_while__1 = (function (pred){
return (function (rf){
return (function() {
var G__36762 = null;
var G__36762__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__36762__1 = (function (result){
var G__36757 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__36757) : rf.call(null,G__36757));
});
var G__36762__2 = (function (result,input){
if(cljs.core.truth_((function (){var G__36758 = input;
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__36758) : pred.call(null,G__36758));
})())){
var G__36759 = result;
var G__36760 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__36759,G__36760) : rf.call(null,G__36759,G__36760));
} else {
return cljs.core.reduced(result);
}
});
G__36762 = function(result,input){
switch(arguments.length){
case 0:
return G__36762__0.call(this);
case 1:
return G__36762__1.call(this,result);
case 2:
return G__36762__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__36762.cljs$core$IFn$_invoke$arity$0 = G__36762__0;
G__36762.cljs$core$IFn$_invoke$arity$1 = G__36762__1;
G__36762.cljs$core$IFn$_invoke$arity$2 = G__36762__2;
return G__36762;
})()
});
});
var take_while__2 = (function (pred,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
if(cljs.core.truth_((function (){var G__36761 = cljs.core.first(s);
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__36761) : pred.call(null,G__36761));
})())){
return cljs.core.cons(cljs.core.first(s),take_while.cljs$core$IFn$_invoke$arity$2(pred,cljs.core.rest(s)));
} else {
return null;
}
} else {
return null;
}
}),null,null));
});
take_while = function(pred,coll){
switch(arguments.length){
case 1:
return take_while__1.call(this,pred);
case 2:
return take_while__2.call(this,pred,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
take_while.cljs$core$IFn$_invoke$arity$1 = take_while__1;
take_while.cljs$core$IFn$_invoke$arity$2 = take_while__2;
return take_while;
})()
;
cljs.core.mk_bound_fn = (function mk_bound_fn(sc,test,key){
return (function (e){
var comp = cljs.core._comparator(sc);
var G__36767 = (function (){var G__36769 = cljs.core._entry_key(sc,e);
var G__36770 = key;
return (comp.cljs$core$IFn$_invoke$arity$2 ? comp.cljs$core$IFn$_invoke$arity$2(G__36769,G__36770) : comp.call(null,G__36769,G__36770));
})();
var G__36768 = (0);
return (test.cljs$core$IFn$_invoke$arity$2 ? test.cljs$core$IFn$_invoke$arity$2(G__36767,G__36768) : test.call(null,G__36767,G__36768));
});
});
/**
* sc must be a sorted collection, test(s) one of <, <=, > or
* >=. Returns a seq of those entries with keys ek for
* which (test (.. sc comparator (compare ek key)) 0) is true
*/
cljs.core.subseq = (function() {
var subseq = null;
var subseq__3 = (function (sc,test,key){
var include = cljs.core.mk_bound_fn(sc,test,key);
if(cljs.core.truth_(cljs.core.PersistentHashSet.fromArray([cljs.core._GT_,cljs.core._GT__EQ_], true).call(null,test))){
var temp__4126__auto__ = cljs.core._sorted_seq_from(sc,key,true);
if(cljs.core.truth_(temp__4126__auto__)){
var vec__36774 = temp__4126__auto__;
var e = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__36774,(0),null);
var s = vec__36774;
if(cljs.core.truth_((function (){var G__36775 = e;
return (include.cljs$core$IFn$_invoke$arity$1 ? include.cljs$core$IFn$_invoke$arity$1(G__36775) : include.call(null,G__36775));
})())){
return s;
} else {
return cljs.core.next(s);
}
} else {
return null;
}
} else {
return cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(include,cljs.core._sorted_seq(sc,true));
}
});
var subseq__5 = (function (sc,start_test,start_key,end_test,end_key){
var temp__4126__auto__ = cljs.core._sorted_seq_from(sc,start_key,true);
if(cljs.core.truth_(temp__4126__auto__)){
var vec__36776 = temp__4126__auto__;
var e = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__36776,(0),null);
var s = vec__36776;
return cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(cljs.core.mk_bound_fn(sc,end_test,end_key),(cljs.core.truth_(cljs.core.mk_bound_fn(sc,start_test,start_key).call(null,e))?s:cljs.core.next(s)));
} else {
return null;
}
});
subseq = function(sc,start_test,start_key,end_test,end_key){
switch(arguments.length){
case 3:
return subseq__3.call(this,sc,start_test,start_key);
case 5:
return subseq__5.call(this,sc,start_test,start_key,end_test,end_key);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
subseq.cljs$core$IFn$_invoke$arity$3 = subseq__3;
subseq.cljs$core$IFn$_invoke$arity$5 = subseq__5;
return subseq;
})()
;
/**
* sc must be a sorted collection, test(s) one of <, <=, > or
* >=. Returns a reverse seq of those entries with keys ek for
* which (test (.. sc comparator (compare ek key)) 0) is true
*/
cljs.core.rsubseq = (function() {
var rsubseq = null;
var rsubseq__3 = (function (sc,test,key){
var include = cljs.core.mk_bound_fn(sc,test,key);
if(cljs.core.truth_(cljs.core.PersistentHashSet.fromArray([cljs.core._LT_,cljs.core._LT__EQ_], true).call(null,test))){
var temp__4126__auto__ = cljs.core._sorted_seq_from(sc,key,false);
if(cljs.core.truth_(temp__4126__auto__)){
var vec__36780 = temp__4126__auto__;
var e = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__36780,(0),null);
var s = vec__36780;
if(cljs.core.truth_((function (){var G__36781 = e;
return (include.cljs$core$IFn$_invoke$arity$1 ? include.cljs$core$IFn$_invoke$arity$1(G__36781) : include.call(null,G__36781));
})())){
return s;
} else {
return cljs.core.next(s);
}
} else {
return null;
}
} else {
return cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(include,cljs.core._sorted_seq(sc,false));
}
});
var rsubseq__5 = (function (sc,start_test,start_key,end_test,end_key){
var temp__4126__auto__ = cljs.core._sorted_seq_from(sc,end_key,false);
if(cljs.core.truth_(temp__4126__auto__)){
var vec__36782 = temp__4126__auto__;
var e = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__36782,(0),null);
var s = vec__36782;
return cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(cljs.core.mk_bound_fn(sc,start_test,start_key),(cljs.core.truth_(cljs.core.mk_bound_fn(sc,end_test,end_key).call(null,e))?s:cljs.core.next(s)));
} else {
return null;
}
});
rsubseq = function(sc,start_test,start_key,end_test,end_key){
switch(arguments.length){
case 3:
return rsubseq__3.call(this,sc,start_test,start_key);
case 5:
return rsubseq__5.call(this,sc,start_test,start_key,end_test,end_key);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
rsubseq.cljs$core$IFn$_invoke$arity$3 = rsubseq__3;
rsubseq.cljs$core$IFn$_invoke$arity$5 = rsubseq__5;
return rsubseq;
})()
;

/**
* @constructor
*/
cljs.core.RangeIterator = (function (i,end,step){
this.i = i;
this.end = end;
this.step = step;
})
cljs.core.RangeIterator.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
if((self__.step > (0))){
return (self__.i < self__.end);
} else {
return (self__.i > self__.end);
}
});

cljs.core.RangeIterator.prototype.next = (function (){
var self__ = this;
var _ = this;
var ret = self__.i;
self__.i = (self__.i + self__.step);

return ret;
});

cljs.core.RangeIterator.cljs$lang$type = true;

cljs.core.RangeIterator.cljs$lang$ctorStr = "cljs.core/RangeIterator";

cljs.core.RangeIterator.cljs$lang$ctorPrWriter = (function (this__24861__auto__,writer__24862__auto__,opt__24863__auto__){
return cljs.core._write(writer__24862__auto__,"cljs.core/RangeIterator");
});

cljs.core.__GT_RangeIterator = (function __GT_RangeIterator(i,end,step){
return (new cljs.core.RangeIterator(i,end,step));
});


/**
* @constructor
*/
cljs.core.Range = (function (meta,start,end,step,__hash){
this.meta = meta;
this.start = start;
this.end = end;
this.step = step;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 32375006;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.Range.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.Range.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.Range.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (rng,n){
var self__ = this;
var rng__$1 = this;
if((n < cljs.core._count(rng__$1))){
return (self__.start + (n * self__.step));
} else {
if(((self__.start > self__.end)) && ((self__.step === (0)))){
return self__.start;
} else {
throw (new Error("Index out of bounds"));
}
}
});

cljs.core.Range.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (rng,n,not_found){
var self__ = this;
var rng__$1 = this;
if((n < cljs.core._count(rng__$1))){
return (self__.start + (n * self__.step));
} else {
if(((self__.start > self__.end)) && ((self__.step === (0)))){
return self__.start;
} else {
return not_found;
}
}
});

cljs.core.Range.prototype.cljs$core$IIterable$ = true;

cljs.core.Range.prototype.cljs$core$IIterable$_iterator$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.RangeIterator(self__.start,self__.end,self__.step));
});

cljs.core.Range.prototype.cljs$core$IMeta$_meta$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
return self__.meta;
});

cljs.core.Range.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.Range(self__.meta,self__.start,self__.end,self__.step,self__.__hash));
});

cljs.core.Range.prototype.cljs$core$INext$_next$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
if((self__.step > (0))){
if(((self__.start + self__.step) < self__.end)){
return (new cljs.core.Range(self__.meta,(self__.start + self__.step),self__.end,self__.step,null));
} else {
return null;
}
} else {
if(((self__.start + self__.step) > self__.end)){
return (new cljs.core.Range(self__.meta,(self__.start + self__.step),self__.end,self__.step,null));
} else {
return null;
}
}
});

cljs.core.Range.prototype.cljs$core$ICounted$_count$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
if(cljs.core.not(cljs.core._seq(rng__$1))){
return (0);
} else {
var G__36783 = ((self__.end - self__.start) / self__.step);
return (Math.ceil.cljs$core$IFn$_invoke$arity$1 ? Math.ceil.cljs$core$IFn$_invoke$arity$1(G__36783) : Math.ceil.call(null,G__36783));
}
});

cljs.core.Range.prototype.cljs$core$IHash$_hash$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
var h__24695__auto__ = self__.__hash;
if(!((h__24695__auto__ == null))){
return h__24695__auto__;
} else {
var h__24695__auto____$1 = cljs.core.hash_ordered_coll(rng__$1);
self__.__hash = h__24695__auto____$1;

return h__24695__auto____$1;
}
});

cljs.core.Range.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (rng,other){
var self__ = this;
var rng__$1 = this;
return cljs.core.equiv_sequential(rng__$1,other);
});

cljs.core.Range.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.Range.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (rng,f){
var self__ = this;
var rng__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(rng__$1,f);
});

cljs.core.Range.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (rng,f,init){
var self__ = this;
var rng__$1 = this;
var i = self__.start;
var ret = init;
while(true){
if((((self__.step > (0)))?(i < self__.end):(i > self__.end))){
var ret__$1 = (function (){var G__36784 = ret;
var G__36785 = i;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__36784,G__36785) : f.call(null,G__36784,G__36785));
})();
if(cljs.core.reduced_QMARK_(ret__$1)){
var G__36786 = ret__$1;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__36786) : cljs.core.deref.call(null,G__36786));
} else {
var G__36787 = (i + self__.step);
var G__36788 = ret__$1;
i = G__36787;
ret = G__36788;
continue;
}
} else {
return ret;
}
break;
}
});

cljs.core.Range.prototype.cljs$core$ISeq$_first$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
if((cljs.core._seq(rng__$1) == null)){
return null;
} else {
return self__.start;
}
});

cljs.core.Range.prototype.cljs$core$ISeq$_rest$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
if(!((cljs.core._seq(rng__$1) == null))){
return (new cljs.core.Range(self__.meta,(self__.start + self__.step),self__.end,self__.step,null));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.Range.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
if((self__.step > (0))){
if((self__.start < self__.end)){
return rng__$1;
} else {
return null;
}
} else {
if((self__.start > self__.end)){
return rng__$1;
} else {
return null;
}
}
});

cljs.core.Range.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (rng,meta__$1){
var self__ = this;
var rng__$1 = this;
return (new cljs.core.Range(meta__$1,self__.start,self__.end,self__.step,self__.__hash));
});

cljs.core.Range.prototype.cljs$core$ICollection$_conj$arity$2 = (function (rng,o){
var self__ = this;
var rng__$1 = this;
return cljs.core.cons(o,rng__$1);
});

cljs.core.Range.cljs$lang$type = true;

cljs.core.Range.cljs$lang$ctorStr = "cljs.core/Range";

cljs.core.Range.cljs$lang$ctorPrWriter = (function (this__24861__auto__,writer__24862__auto__,opt__24863__auto__){
return cljs.core._write(writer__24862__auto__,"cljs.core/Range");
});

cljs.core.__GT_Range = (function __GT_Range(meta,start,end,step,__hash){
return (new cljs.core.Range(meta,start,end,step,__hash));
});

(cljs.core.Range.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__25252__auto__ = this;
return cljs.core.es6_iterator(this__25252__auto__);
}));
/**
* Returns a lazy seq of nums from start (inclusive) to end
* (exclusive), by step, where start defaults to 0, step to 1,
* and end to infinity.
*/
cljs.core.range = (function() {
var range = null;
var range__0 = (function (){
return range.cljs$core$IFn$_invoke$arity$3((0),Number.MAX_VALUE,(1));
});
var range__1 = (function (end){
return range.cljs$core$IFn$_invoke$arity$3((0),end,(1));
});
var range__2 = (function (start,end){
return range.cljs$core$IFn$_invoke$arity$3(start,end,(1));
});
var range__3 = (function (start,end,step){
return (new cljs.core.Range(null,start,end,step,null));
});
range = function(start,end,step){
switch(arguments.length){
case 0:
return range__0.call(this);
case 1:
return range__1.call(this,start);
case 2:
return range__2.call(this,start,end);
case 3:
return range__3.call(this,start,end,step);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
range.cljs$core$IFn$_invoke$arity$0 = range__0;
range.cljs$core$IFn$_invoke$arity$1 = range__1;
range.cljs$core$IFn$_invoke$arity$2 = range__2;
range.cljs$core$IFn$_invoke$arity$3 = range__3;
return range;
})()
;
/**
* Returns a lazy seq of every nth item in coll.  Returns a stateful
* transducer when no collection is provided.
*/
cljs.core.take_nth = (function() {
var take_nth = null;
var take_nth__1 = (function (n){
return (function (rf){
var ia = cljs.core.volatile_BANG_((-1));
return ((function (ia){
return (function() {
var G__36806 = null;
var G__36806__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__36806__1 = (function (result){
var G__36803 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__36803) : rf.call(null,G__36803));
});
var G__36806__2 = (function (result,input){
var i = ia.cljs$core$IVolatile$_vreset_BANG_$arity$2(null,(ia.cljs$core$IDeref$_deref$arity$1(null) + (1)));
if((cljs.core.rem(i,n) === (0))){
var G__36804 = result;
var G__36805 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__36804,G__36805) : rf.call(null,G__36804,G__36805));
} else {
return result;
}
});
G__36806 = function(result,input){
switch(arguments.length){
case 0:
return G__36806__0.call(this);
case 1:
return G__36806__1.call(this,result);
case 2:
return G__36806__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__36806.cljs$core$IFn$_invoke$arity$0 = G__36806__0;
G__36806.cljs$core$IFn$_invoke$arity$1 = G__36806__1;
G__36806.cljs$core$IFn$_invoke$arity$2 = G__36806__2;
return G__36806;
})()
;})(ia))
});
});
var take_nth__2 = (function (n,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
return cljs.core.cons(cljs.core.first(s),take_nth.cljs$core$IFn$_invoke$arity$2(n,cljs.core.drop.cljs$core$IFn$_invoke$arity$2(n,s)));
} else {
return null;
}
}),null,null));
});
take_nth = function(n,coll){
switch(arguments.length){
case 1:
return take_nth__1.call(this,n);
case 2:
return take_nth__2.call(this,n,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
take_nth.cljs$core$IFn$_invoke$arity$1 = take_nth__1;
take_nth.cljs$core$IFn$_invoke$arity$2 = take_nth__2;
return take_nth;
})()
;
/**
* Returns a vector of [(take-while pred coll) (drop-while pred coll)]
*/
cljs.core.split_with = (function split_with(pred,coll){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(pred,coll),cljs.core.drop_while.cljs$core$IFn$_invoke$arity$2(pred,coll)], null);
});
/**
* Applies f to each value in coll, splitting it each time f returns a
* new value.  Returns a lazy seq of partitions.  Returns a stateful
* transducer when no collection is provided.
*/
cljs.core.partition_by = (function() {
var partition_by = null;
var partition_by__1 = (function (f){
return (function (rf){
var a = cljs.core.array_list();
var pa = cljs.core.volatile_BANG_(new cljs.core.Keyword("cljs.core","none","cljs.core/none",926646439));
return ((function (a,pa){
return (function() {
var G__36828 = null;
var G__36828__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__36828__1 = (function (result){
var result__$1 = (cljs.core.truth_(a.isEmpty())?result:(function (){var v = cljs.core.vec(a.toArray());
a.clear();

return cljs.core.unreduced((function (){var G__36819 = result;
var G__36820 = v;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__36819,G__36820) : rf.call(null,G__36819,G__36820));
})());
})());
var G__36821 = result__$1;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__36821) : rf.call(null,G__36821));
});
var G__36828__2 = (function (result,input){
var pval = (function (){var G__36822 = pa;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__36822) : cljs.core.deref.call(null,G__36822));
})();
var val = (function (){var G__36823 = input;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__36823) : f.call(null,G__36823));
})();
cljs.core.vreset_BANG_(pa,val);

if((cljs.core.keyword_identical_QMARK_(pval,new cljs.core.Keyword("cljs.core","none","cljs.core/none",926646439))) || (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(val,pval))){
a.add(input);

return result;
} else {
var v = cljs.core.vec(a.toArray());
a.clear();

var ret = (function (){var G__36824 = result;
var G__36825 = v;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__36824,G__36825) : rf.call(null,G__36824,G__36825));
})();
if(cljs.core.reduced_QMARK_(ret)){
} else {
a.add(input);
}

return ret;
}
});
G__36828 = function(result,input){
switch(arguments.length){
case 0:
return G__36828__0.call(this);
case 1:
return G__36828__1.call(this,result);
case 2:
return G__36828__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__36828.cljs$core$IFn$_invoke$arity$0 = G__36828__0;
G__36828.cljs$core$IFn$_invoke$arity$1 = G__36828__1;
G__36828.cljs$core$IFn$_invoke$arity$2 = G__36828__2;
return G__36828;
})()
;})(a,pa))
});
});
var partition_by__2 = (function (f,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
var fst = cljs.core.first(s);
var fv = (function (){var G__36826 = fst;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__36826) : f.call(null,G__36826));
})();
var run = cljs.core.cons(fst,cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(((function (fst,fv,s,temp__4126__auto__){
return (function (p1__36807_SHARP_){
return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(fv,(function (){var G__36827 = p1__36807_SHARP_;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__36827) : f.call(null,G__36827));
})());
});})(fst,fv,s,temp__4126__auto__))
,cljs.core.next(s)));
return cljs.core.cons(run,partition_by.cljs$core$IFn$_invoke$arity$2(f,cljs.core.seq(cljs.core.drop.cljs$core$IFn$_invoke$arity$2(cljs.core.count(run),s))));
} else {
return null;
}
}),null,null));
});
partition_by = function(f,coll){
switch(arguments.length){
case 1:
return partition_by__1.call(this,f);
case 2:
return partition_by__2.call(this,f,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
partition_by.cljs$core$IFn$_invoke$arity$1 = partition_by__1;
partition_by.cljs$core$IFn$_invoke$arity$2 = partition_by__2;
return partition_by;
})()
;
/**
* Returns a map from distinct items in coll to the number of times
* they appear.
*/
cljs.core.frequencies = (function frequencies(coll){
return cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (counts,x){
return cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(counts,x,(cljs.core.get.cljs$core$IFn$_invoke$arity$3(counts,x,(0)) + (1)));
}),cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY),coll));
});
/**
* Returns a lazy seq of the intermediate values of the reduction (as
* per reduce) of coll by f, starting with init.
*/
cljs.core.reductions = (function() {
var reductions = null;
var reductions__2 = (function (f,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4124__auto__ = cljs.core.seq(coll);
if(temp__4124__auto__){
var s = temp__4124__auto__;
return reductions.cljs$core$IFn$_invoke$arity$3(f,cljs.core.first(s),cljs.core.rest(s));
} else {
return cljs.core._conj(cljs.core.List.EMPTY,(function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})());
}
}),null,null));
});
var reductions__3 = (function (f,init,coll){
return cljs.core.cons(init,(new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
return reductions.cljs$core$IFn$_invoke$arity$3(f,(function (){var G__36837 = init;
var G__36838 = cljs.core.first(s);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__36837,G__36838) : f.call(null,G__36837,G__36838));
})(),cljs.core.rest(s));
} else {
return null;
}
}),null,null)));
});
reductions = function(f,init,coll){
switch(arguments.length){
case 2:
return reductions__2.call(this,f,init);
case 3:
return reductions__3.call(this,f,init,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
reductions.cljs$core$IFn$_invoke$arity$2 = reductions__2;
reductions.cljs$core$IFn$_invoke$arity$3 = reductions__3;
return reductions;
})()
;
/**
* Takes a set of functions and returns a fn that is the juxtaposition
* of those fns.  The returned fn takes a variable number of args, and
* returns a vector containing the result of applying each fn to the
* args (left-to-right).
* ((juxt a b c) x) => [(a x) (b x) (c x)]
* @param {...*} var_args
*/
cljs.core.juxt = (function() {
var juxt = null;
var juxt__1 = (function (f){
return (function() {
var G__36933 = null;
var G__36933__0 = (function (){
return (new cljs.core.PersistentVector(null,1,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})()],null));
});
var G__36933__1 = (function (x){
return (new cljs.core.PersistentVector(null,1,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__36891 = x;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__36891) : f.call(null,G__36891));
})()],null));
});
var G__36933__2 = (function (x,y){
return (new cljs.core.PersistentVector(null,1,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__36892 = x;
var G__36893 = y;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__36892,G__36893) : f.call(null,G__36892,G__36893));
})()],null));
});
var G__36933__3 = (function (x,y,z){
return (new cljs.core.PersistentVector(null,1,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__36894 = x;
var G__36895 = y;
var G__36896 = z;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__36894,G__36895,G__36896) : f.call(null,G__36894,G__36895,G__36896));
})()],null));
});
var G__36933__4 = (function() { 
var G__36934__delegate = function (x,y,z,args){
return (new cljs.core.PersistentVector(null,1,(5),cljs.core.PersistentVector.EMPTY_NODE,[cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,x,y,z,args)],null));
};
var G__36934 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__36935__i = 0, G__36935__a = new Array(arguments.length -  3);
while (G__36935__i < G__36935__a.length) {G__36935__a[G__36935__i] = arguments[G__36935__i + 3]; ++G__36935__i;}
  args = new cljs.core.IndexedSeq(G__36935__a,0);
} 
return G__36934__delegate.call(this,x,y,z,args);};
G__36934.cljs$lang$maxFixedArity = 3;
G__36934.cljs$lang$applyTo = (function (arglist__36936){
var x = cljs.core.first(arglist__36936);
arglist__36936 = cljs.core.next(arglist__36936);
var y = cljs.core.first(arglist__36936);
arglist__36936 = cljs.core.next(arglist__36936);
var z = cljs.core.first(arglist__36936);
var args = cljs.core.rest(arglist__36936);
return G__36934__delegate(x,y,z,args);
});
G__36934.cljs$core$IFn$_invoke$arity$variadic = G__36934__delegate;
return G__36934;
})()
;
G__36933 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__36933__0.call(this);
case 1:
return G__36933__1.call(this,x);
case 2:
return G__36933__2.call(this,x,y);
case 3:
return G__36933__3.call(this,x,y,z);
default:
var G__36937 = null;
if (arguments.length > 3) {
var G__36938__i = 0, G__36938__a = new Array(arguments.length -  3);
while (G__36938__i < G__36938__a.length) {G__36938__a[G__36938__i] = arguments[G__36938__i + 3]; ++G__36938__i;}
G__36937 = new cljs.core.IndexedSeq(G__36938__a,0);
}
return G__36933__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__36937);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__36933.cljs$lang$maxFixedArity = 3;
G__36933.cljs$lang$applyTo = G__36933__4.cljs$lang$applyTo;
G__36933.cljs$core$IFn$_invoke$arity$0 = G__36933__0;
G__36933.cljs$core$IFn$_invoke$arity$1 = G__36933__1;
G__36933.cljs$core$IFn$_invoke$arity$2 = G__36933__2;
G__36933.cljs$core$IFn$_invoke$arity$3 = G__36933__3;
G__36933.cljs$core$IFn$_invoke$arity$variadic = G__36933__4.cljs$core$IFn$_invoke$arity$variadic;
return G__36933;
})()
});
var juxt__2 = (function (f,g){
return (function() {
var G__36939 = null;
var G__36939__0 = (function (){
return (new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})(),(function (){return (g.cljs$core$IFn$_invoke$arity$0 ? g.cljs$core$IFn$_invoke$arity$0() : g.call(null));
})()],null));
});
var G__36939__1 = (function (x){
return (new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__36897 = x;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__36897) : f.call(null,G__36897));
})(),(function (){var G__36898 = x;
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__36898) : g.call(null,G__36898));
})()],null));
});
var G__36939__2 = (function (x,y){
return (new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__36899 = x;
var G__36900 = y;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__36899,G__36900) : f.call(null,G__36899,G__36900));
})(),(function (){var G__36901 = x;
var G__36902 = y;
return (g.cljs$core$IFn$_invoke$arity$2 ? g.cljs$core$IFn$_invoke$arity$2(G__36901,G__36902) : g.call(null,G__36901,G__36902));
})()],null));
});
var G__36939__3 = (function (x,y,z){
return (new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__36903 = x;
var G__36904 = y;
var G__36905 = z;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__36903,G__36904,G__36905) : f.call(null,G__36903,G__36904,G__36905));
})(),(function (){var G__36906 = x;
var G__36907 = y;
var G__36908 = z;
return (g.cljs$core$IFn$_invoke$arity$3 ? g.cljs$core$IFn$_invoke$arity$3(G__36906,G__36907,G__36908) : g.call(null,G__36906,G__36907,G__36908));
})()],null));
});
var G__36939__4 = (function() { 
var G__36940__delegate = function (x,y,z,args){
return (new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,x,y,z,args),cljs.core.apply.cljs$core$IFn$_invoke$arity$5(g,x,y,z,args)],null));
};
var G__36940 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__36941__i = 0, G__36941__a = new Array(arguments.length -  3);
while (G__36941__i < G__36941__a.length) {G__36941__a[G__36941__i] = arguments[G__36941__i + 3]; ++G__36941__i;}
  args = new cljs.core.IndexedSeq(G__36941__a,0);
} 
return G__36940__delegate.call(this,x,y,z,args);};
G__36940.cljs$lang$maxFixedArity = 3;
G__36940.cljs$lang$applyTo = (function (arglist__36942){
var x = cljs.core.first(arglist__36942);
arglist__36942 = cljs.core.next(arglist__36942);
var y = cljs.core.first(arglist__36942);
arglist__36942 = cljs.core.next(arglist__36942);
var z = cljs.core.first(arglist__36942);
var args = cljs.core.rest(arglist__36942);
return G__36940__delegate(x,y,z,args);
});
G__36940.cljs$core$IFn$_invoke$arity$variadic = G__36940__delegate;
return G__36940;
})()
;
G__36939 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__36939__0.call(this);
case 1:
return G__36939__1.call(this,x);
case 2:
return G__36939__2.call(this,x,y);
case 3:
return G__36939__3.call(this,x,y,z);
default:
var G__36943 = null;
if (arguments.length > 3) {
var G__36944__i = 0, G__36944__a = new Array(arguments.length -  3);
while (G__36944__i < G__36944__a.length) {G__36944__a[G__36944__i] = arguments[G__36944__i + 3]; ++G__36944__i;}
G__36943 = new cljs.core.IndexedSeq(G__36944__a,0);
}
return G__36939__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__36943);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__36939.cljs$lang$maxFixedArity = 3;
G__36939.cljs$lang$applyTo = G__36939__4.cljs$lang$applyTo;
G__36939.cljs$core$IFn$_invoke$arity$0 = G__36939__0;
G__36939.cljs$core$IFn$_invoke$arity$1 = G__36939__1;
G__36939.cljs$core$IFn$_invoke$arity$2 = G__36939__2;
G__36939.cljs$core$IFn$_invoke$arity$3 = G__36939__3;
G__36939.cljs$core$IFn$_invoke$arity$variadic = G__36939__4.cljs$core$IFn$_invoke$arity$variadic;
return G__36939;
})()
});
var juxt__3 = (function (f,g,h){
return (function() {
var G__36945 = null;
var G__36945__0 = (function (){
return (new cljs.core.PersistentVector(null,3,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})(),(function (){return (g.cljs$core$IFn$_invoke$arity$0 ? g.cljs$core$IFn$_invoke$arity$0() : g.call(null));
})(),(function (){return (h.cljs$core$IFn$_invoke$arity$0 ? h.cljs$core$IFn$_invoke$arity$0() : h.call(null));
})()],null));
});
var G__36945__1 = (function (x){
return (new cljs.core.PersistentVector(null,3,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__36909 = x;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__36909) : f.call(null,G__36909));
})(),(function (){var G__36910 = x;
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__36910) : g.call(null,G__36910));
})(),(function (){var G__36911 = x;
return (h.cljs$core$IFn$_invoke$arity$1 ? h.cljs$core$IFn$_invoke$arity$1(G__36911) : h.call(null,G__36911));
})()],null));
});
var G__36945__2 = (function (x,y){
return (new cljs.core.PersistentVector(null,3,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__36912 = x;
var G__36913 = y;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__36912,G__36913) : f.call(null,G__36912,G__36913));
})(),(function (){var G__36914 = x;
var G__36915 = y;
return (g.cljs$core$IFn$_invoke$arity$2 ? g.cljs$core$IFn$_invoke$arity$2(G__36914,G__36915) : g.call(null,G__36914,G__36915));
})(),(function (){var G__36916 = x;
var G__36917 = y;
return (h.cljs$core$IFn$_invoke$arity$2 ? h.cljs$core$IFn$_invoke$arity$2(G__36916,G__36917) : h.call(null,G__36916,G__36917));
})()],null));
});
var G__36945__3 = (function (x,y,z){
return (new cljs.core.PersistentVector(null,3,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__36918 = x;
var G__36919 = y;
var G__36920 = z;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__36918,G__36919,G__36920) : f.call(null,G__36918,G__36919,G__36920));
})(),(function (){var G__36921 = x;
var G__36922 = y;
var G__36923 = z;
return (g.cljs$core$IFn$_invoke$arity$3 ? g.cljs$core$IFn$_invoke$arity$3(G__36921,G__36922,G__36923) : g.call(null,G__36921,G__36922,G__36923));
})(),(function (){var G__36924 = x;
var G__36925 = y;
var G__36926 = z;
return (h.cljs$core$IFn$_invoke$arity$3 ? h.cljs$core$IFn$_invoke$arity$3(G__36924,G__36925,G__36926) : h.call(null,G__36924,G__36925,G__36926));
})()],null));
});
var G__36945__4 = (function() { 
var G__36946__delegate = function (x,y,z,args){
return (new cljs.core.PersistentVector(null,3,(5),cljs.core.PersistentVector.EMPTY_NODE,[cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,x,y,z,args),cljs.core.apply.cljs$core$IFn$_invoke$arity$5(g,x,y,z,args),cljs.core.apply.cljs$core$IFn$_invoke$arity$5(h,x,y,z,args)],null));
};
var G__36946 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__36947__i = 0, G__36947__a = new Array(arguments.length -  3);
while (G__36947__i < G__36947__a.length) {G__36947__a[G__36947__i] = arguments[G__36947__i + 3]; ++G__36947__i;}
  args = new cljs.core.IndexedSeq(G__36947__a,0);
} 
return G__36946__delegate.call(this,x,y,z,args);};
G__36946.cljs$lang$maxFixedArity = 3;
G__36946.cljs$lang$applyTo = (function (arglist__36948){
var x = cljs.core.first(arglist__36948);
arglist__36948 = cljs.core.next(arglist__36948);
var y = cljs.core.first(arglist__36948);
arglist__36948 = cljs.core.next(arglist__36948);
var z = cljs.core.first(arglist__36948);
var args = cljs.core.rest(arglist__36948);
return G__36946__delegate(x,y,z,args);
});
G__36946.cljs$core$IFn$_invoke$arity$variadic = G__36946__delegate;
return G__36946;
})()
;
G__36945 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__36945__0.call(this);
case 1:
return G__36945__1.call(this,x);
case 2:
return G__36945__2.call(this,x,y);
case 3:
return G__36945__3.call(this,x,y,z);
default:
var G__36949 = null;
if (arguments.length > 3) {
var G__36950__i = 0, G__36950__a = new Array(arguments.length -  3);
while (G__36950__i < G__36950__a.length) {G__36950__a[G__36950__i] = arguments[G__36950__i + 3]; ++G__36950__i;}
G__36949 = new cljs.core.IndexedSeq(G__36950__a,0);
}
return G__36945__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__36949);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__36945.cljs$lang$maxFixedArity = 3;
G__36945.cljs$lang$applyTo = G__36945__4.cljs$lang$applyTo;
G__36945.cljs$core$IFn$_invoke$arity$0 = G__36945__0;
G__36945.cljs$core$IFn$_invoke$arity$1 = G__36945__1;
G__36945.cljs$core$IFn$_invoke$arity$2 = G__36945__2;
G__36945.cljs$core$IFn$_invoke$arity$3 = G__36945__3;
G__36945.cljs$core$IFn$_invoke$arity$variadic = G__36945__4.cljs$core$IFn$_invoke$arity$variadic;
return G__36945;
})()
});
var juxt__4 = (function() { 
var G__36951__delegate = function (f,g,h,fs){
var fs__$1 = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(f,g,h,fs);
return ((function (fs__$1){
return (function() {
var G__36952 = null;
var G__36952__0 = (function (){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (fs__$1){
return (function (p1__36839_SHARP_,p2__36840_SHARP_){
return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__36839_SHARP_,(function (){return (p2__36840_SHARP_.cljs$core$IFn$_invoke$arity$0 ? p2__36840_SHARP_.cljs$core$IFn$_invoke$arity$0() : p2__36840_SHARP_.call(null));
})());
});})(fs__$1))
,cljs.core.PersistentVector.EMPTY,fs__$1);
});
var G__36952__1 = (function (x){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (fs__$1){
return (function (p1__36841_SHARP_,p2__36842_SHARP_){
return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__36841_SHARP_,(function (){var G__36927 = x;
return (p2__36842_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p2__36842_SHARP_.cljs$core$IFn$_invoke$arity$1(G__36927) : p2__36842_SHARP_.call(null,G__36927));
})());
});})(fs__$1))
,cljs.core.PersistentVector.EMPTY,fs__$1);
});
var G__36952__2 = (function (x,y){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (fs__$1){
return (function (p1__36843_SHARP_,p2__36844_SHARP_){
return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__36843_SHARP_,(function (){var G__36928 = x;
var G__36929 = y;
return (p2__36844_SHARP_.cljs$core$IFn$_invoke$arity$2 ? p2__36844_SHARP_.cljs$core$IFn$_invoke$arity$2(G__36928,G__36929) : p2__36844_SHARP_.call(null,G__36928,G__36929));
})());
});})(fs__$1))
,cljs.core.PersistentVector.EMPTY,fs__$1);
});
var G__36952__3 = (function (x,y,z){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (fs__$1){
return (function (p1__36845_SHARP_,p2__36846_SHARP_){
return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__36845_SHARP_,(function (){var G__36930 = x;
var G__36931 = y;
var G__36932 = z;
return (p2__36846_SHARP_.cljs$core$IFn$_invoke$arity$3 ? p2__36846_SHARP_.cljs$core$IFn$_invoke$arity$3(G__36930,G__36931,G__36932) : p2__36846_SHARP_.call(null,G__36930,G__36931,G__36932));
})());
});})(fs__$1))
,cljs.core.PersistentVector.EMPTY,fs__$1);
});
var G__36952__4 = (function() { 
var G__36953__delegate = function (x,y,z,args){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (fs__$1){
return (function (p1__36847_SHARP_,p2__36848_SHARP_){
return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__36847_SHARP_,cljs.core.apply.cljs$core$IFn$_invoke$arity$5(p2__36848_SHARP_,x,y,z,args));
});})(fs__$1))
,cljs.core.PersistentVector.EMPTY,fs__$1);
};
var G__36953 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__36954__i = 0, G__36954__a = new Array(arguments.length -  3);
while (G__36954__i < G__36954__a.length) {G__36954__a[G__36954__i] = arguments[G__36954__i + 3]; ++G__36954__i;}
  args = new cljs.core.IndexedSeq(G__36954__a,0);
} 
return G__36953__delegate.call(this,x,y,z,args);};
G__36953.cljs$lang$maxFixedArity = 3;
G__36953.cljs$lang$applyTo = (function (arglist__36955){
var x = cljs.core.first(arglist__36955);
arglist__36955 = cljs.core.next(arglist__36955);
var y = cljs.core.first(arglist__36955);
arglist__36955 = cljs.core.next(arglist__36955);
var z = cljs.core.first(arglist__36955);
var args = cljs.core.rest(arglist__36955);
return G__36953__delegate(x,y,z,args);
});
G__36953.cljs$core$IFn$_invoke$arity$variadic = G__36953__delegate;
return G__36953;
})()
;
G__36952 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__36952__0.call(this);
case 1:
return G__36952__1.call(this,x);
case 2:
return G__36952__2.call(this,x,y);
case 3:
return G__36952__3.call(this,x,y,z);
default:
var G__36956 = null;
if (arguments.length > 3) {
var G__36957__i = 0, G__36957__a = new Array(arguments.length -  3);
while (G__36957__i < G__36957__a.length) {G__36957__a[G__36957__i] = arguments[G__36957__i + 3]; ++G__36957__i;}
G__36956 = new cljs.core.IndexedSeq(G__36957__a,0);
}
return G__36952__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__36956);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__36952.cljs$lang$maxFixedArity = 3;
G__36952.cljs$lang$applyTo = G__36952__4.cljs$lang$applyTo;
G__36952.cljs$core$IFn$_invoke$arity$0 = G__36952__0;
G__36952.cljs$core$IFn$_invoke$arity$1 = G__36952__1;
G__36952.cljs$core$IFn$_invoke$arity$2 = G__36952__2;
G__36952.cljs$core$IFn$_invoke$arity$3 = G__36952__3;
G__36952.cljs$core$IFn$_invoke$arity$variadic = G__36952__4.cljs$core$IFn$_invoke$arity$variadic;
return G__36952;
})()
;})(fs__$1))
};
var G__36951 = function (f,g,h,var_args){
var fs = null;
if (arguments.length > 3) {
var G__36958__i = 0, G__36958__a = new Array(arguments.length -  3);
while (G__36958__i < G__36958__a.length) {G__36958__a[G__36958__i] = arguments[G__36958__i + 3]; ++G__36958__i;}
  fs = new cljs.core.IndexedSeq(G__36958__a,0);
} 
return G__36951__delegate.call(this,f,g,h,fs);};
G__36951.cljs$lang$maxFixedArity = 3;
G__36951.cljs$lang$applyTo = (function (arglist__36959){
var f = cljs.core.first(arglist__36959);
arglist__36959 = cljs.core.next(arglist__36959);
var g = cljs.core.first(arglist__36959);
arglist__36959 = cljs.core.next(arglist__36959);
var h = cljs.core.first(arglist__36959);
var fs = cljs.core.rest(arglist__36959);
return G__36951__delegate(f,g,h,fs);
});
G__36951.cljs$core$IFn$_invoke$arity$variadic = G__36951__delegate;
return G__36951;
})()
;
juxt = function(f,g,h,var_args){
var fs = var_args;
switch(arguments.length){
case 1:
return juxt__1.call(this,f);
case 2:
return juxt__2.call(this,f,g);
case 3:
return juxt__3.call(this,f,g,h);
default:
var G__36960 = null;
if (arguments.length > 3) {
var G__36961__i = 0, G__36961__a = new Array(arguments.length -  3);
while (G__36961__i < G__36961__a.length) {G__36961__a[G__36961__i] = arguments[G__36961__i + 3]; ++G__36961__i;}
G__36960 = new cljs.core.IndexedSeq(G__36961__a,0);
}
return juxt__4.cljs$core$IFn$_invoke$arity$variadic(f,g,h, G__36960);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
juxt.cljs$lang$maxFixedArity = 3;
juxt.cljs$lang$applyTo = juxt__4.cljs$lang$applyTo;
juxt.cljs$core$IFn$_invoke$arity$1 = juxt__1;
juxt.cljs$core$IFn$_invoke$arity$2 = juxt__2;
juxt.cljs$core$IFn$_invoke$arity$3 = juxt__3;
juxt.cljs$core$IFn$_invoke$arity$variadic = juxt__4.cljs$core$IFn$_invoke$arity$variadic;
return juxt;
})()
;
/**
* When lazy sequences are produced via functions that have side
* effects, any effects other than those needed to produce the first
* element in the seq do not occur until the seq is consumed. dorun can
* be used to force any effects. Walks through the successive nexts of
* the seq, does not retain the head and returns nil.
*/
cljs.core.dorun = (function() {
var dorun = null;
var dorun__1 = (function (coll){
while(true){
if(cljs.core.seq(coll)){
var G__36962 = cljs.core.next(coll);
coll = G__36962;
continue;
} else {
return null;
}
break;
}
});
var dorun__2 = (function (n,coll){
while(true){
if((cljs.core.seq(coll)) && ((n > (0)))){
var G__36963 = (n - (1));
var G__36964 = cljs.core.next(coll);
n = G__36963;
coll = G__36964;
continue;
} else {
return null;
}
break;
}
});
dorun = function(n,coll){
switch(arguments.length){
case 1:
return dorun__1.call(this,n);
case 2:
return dorun__2.call(this,n,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
dorun.cljs$core$IFn$_invoke$arity$1 = dorun__1;
dorun.cljs$core$IFn$_invoke$arity$2 = dorun__2;
return dorun;
})()
;
/**
* When lazy sequences are produced via functions that have side
* effects, any effects other than those needed to produce the first
* element in the seq do not occur until the seq is consumed. doall can
* be used to force any effects. Walks through the successive nexts of
* the seq, retains the head and returns it, thus causing the entire
* seq to reside in memory at one time.
*/
cljs.core.doall = (function() {
var doall = null;
var doall__1 = (function (coll){
cljs.core.dorun.cljs$core$IFn$_invoke$arity$1(coll);

return coll;
});
var doall__2 = (function (n,coll){
cljs.core.dorun.cljs$core$IFn$_invoke$arity$2(n,coll);

return coll;
});
doall = function(n,coll){
switch(arguments.length){
case 1:
return doall__1.call(this,n);
case 2:
return doall__2.call(this,n,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
doall.cljs$core$IFn$_invoke$arity$1 = doall__1;
doall.cljs$core$IFn$_invoke$arity$2 = doall__2;
return doall;
})()
;
cljs.core.regexp_QMARK_ = (function regexp_QMARK_(o){
return (o instanceof RegExp);
});
/**
* Returns the result of (re-find re s) if re fully matches s.
*/
cljs.core.re_matches = (function re_matches(re,s){
if(typeof s === 'string'){
var matches = re.exec(s);
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.first(matches),s)){
if((cljs.core.count(matches) === (1))){
return cljs.core.first(matches);
} else {
return cljs.core.vec(matches);
}
} else {
return null;
}
} else {
throw (new TypeError("re-matches must match against a string."));
}
});
/**
* Returns the first regex match, if any, of s to re, using
* re.exec(s). Returns a vector, containing first the matching
* substring, then any capturing groups if the regular expression contains
* capturing groups.
*/
cljs.core.re_find = (function re_find(re,s){
if(typeof s === 'string'){
var matches = re.exec(s);
if((matches == null)){
return null;
} else {
if((cljs.core.count(matches) === (1))){
return cljs.core.first(matches);
} else {
return cljs.core.vec(matches);
}
}
} else {
throw (new TypeError("re-find must match against a string."));
}
});
/**
* Returns a lazy sequence of successive matches of re in s.
*/
cljs.core.re_seq = (function re_seq(re,s){
var match_data = cljs.core.re_find(re,s);
var match_idx = s.search(re);
var match_str = ((cljs.core.coll_QMARK_(match_data))?cljs.core.first(match_data):match_data);
var post_match = cljs.core.subs.cljs$core$IFn$_invoke$arity$2(s,(match_idx + cljs.core.count(match_str)));
if(cljs.core.truth_(match_data)){
return (new cljs.core.LazySeq(null,((function (match_data,match_idx,match_str,post_match){
return (function (){
return cljs.core.cons(match_data,((cljs.core.seq(post_match))?re_seq(re,post_match):null));
});})(match_data,match_idx,match_str,post_match))
,null,null));
} else {
return null;
}
});
/**
* Returns an instance of RegExp which has compiled the provided string.
*/
cljs.core.re_pattern = (function re_pattern(s){
if((s instanceof RegExp)){
return s;
} else {
var vec__36968 = cljs.core.re_find(/^(?:\(\?([idmsux]*)\))?(.*)/,s);
var _ = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__36968,(0),null);
var flags = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__36968,(1),null);
var pattern = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__36968,(2),null);
return (new RegExp(pattern,flags));
}
});
cljs.core.pr_sequential_writer = (function pr_sequential_writer(writer,print_one,begin,sep,end,opts,coll){
var _STAR_print_level_STAR_36976 = cljs.core._STAR_print_level_STAR_;
try{cljs.core._STAR_print_level_STAR_ = (((cljs.core._STAR_print_level_STAR_ == null))?null:(cljs.core._STAR_print_level_STAR_ - (1)));

if((!((cljs.core._STAR_print_level_STAR_ == null))) && ((cljs.core._STAR_print_level_STAR_ < (0)))){
return cljs.core._write(writer,"#");
} else {
cljs.core._write(writer,begin);

if(cljs.core.seq(coll)){
var G__36977_36983 = cljs.core.first(coll);
var G__36978_36984 = writer;
var G__36979_36985 = opts;
(print_one.cljs$core$IFn$_invoke$arity$3 ? print_one.cljs$core$IFn$_invoke$arity$3(G__36977_36983,G__36978_36984,G__36979_36985) : print_one.call(null,G__36977_36983,G__36978_36984,G__36979_36985));
} else {
}

var coll_36986__$1 = cljs.core.next(coll);
var n_36987 = (new cljs.core.Keyword(null,"print-length","print-length",1931866356).cljs$core$IFn$_invoke$arity$1(opts) - (1));
while(true){
if((coll_36986__$1) && (((n_36987 == null)) || (!((n_36987 === (0)))))){
cljs.core._write(writer,sep);

var G__36980_36988 = cljs.core.first(coll_36986__$1);
var G__36981_36989 = writer;
var G__36982_36990 = opts;
(print_one.cljs$core$IFn$_invoke$arity$3 ? print_one.cljs$core$IFn$_invoke$arity$3(G__36980_36988,G__36981_36989,G__36982_36990) : print_one.call(null,G__36980_36988,G__36981_36989,G__36982_36990));

var G__36991 = cljs.core.next(coll_36986__$1);
var G__36992 = (n_36987 - (1));
coll_36986__$1 = G__36991;
n_36987 = G__36992;
continue;
} else {
if((cljs.core.seq(coll_36986__$1)) && ((n_36987 === (0)))){
cljs.core._write(writer,sep);

cljs.core._write(writer,"...");
} else {
}
}
break;
}

return cljs.core._write(writer,end);
}
}finally {cljs.core._STAR_print_level_STAR_ = _STAR_print_level_STAR_36976;
}});
/**
* @param {...*} var_args
*/
cljs.core.write_all = (function() { 
var write_all__delegate = function (writer,ss){
var seq__36997 = cljs.core.seq(ss);
var chunk__36998 = null;
var count__36999 = (0);
var i__37000 = (0);
while(true){
if((i__37000 < count__36999)){
var s = chunk__36998.cljs$core$IIndexed$_nth$arity$2(null,i__37000);
cljs.core._write(writer,s);

var G__37001 = seq__36997;
var G__37002 = chunk__36998;
var G__37003 = count__36999;
var G__37004 = (i__37000 + (1));
seq__36997 = G__37001;
chunk__36998 = G__37002;
count__36999 = G__37003;
i__37000 = G__37004;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__36997);
if(temp__4126__auto__){
var seq__36997__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__36997__$1)){
var c__25061__auto__ = cljs.core.chunk_first(seq__36997__$1);
var G__37005 = cljs.core.chunk_rest(seq__36997__$1);
var G__37006 = c__25061__auto__;
var G__37007 = cljs.core.count(c__25061__auto__);
var G__37008 = (0);
seq__36997 = G__37005;
chunk__36998 = G__37006;
count__36999 = G__37007;
i__37000 = G__37008;
continue;
} else {
var s = cljs.core.first(seq__36997__$1);
cljs.core._write(writer,s);

var G__37009 = cljs.core.next(seq__36997__$1);
var G__37010 = null;
var G__37011 = (0);
var G__37012 = (0);
seq__36997 = G__37009;
chunk__36998 = G__37010;
count__36999 = G__37011;
i__37000 = G__37012;
continue;
}
} else {
return null;
}
}
break;
}
};
var write_all = function (writer,var_args){
var ss = null;
if (arguments.length > 1) {
var G__37013__i = 0, G__37013__a = new Array(arguments.length -  1);
while (G__37013__i < G__37013__a.length) {G__37013__a[G__37013__i] = arguments[G__37013__i + 1]; ++G__37013__i;}
  ss = new cljs.core.IndexedSeq(G__37013__a,0);
} 
return write_all__delegate.call(this,writer,ss);};
write_all.cljs$lang$maxFixedArity = 1;
write_all.cljs$lang$applyTo = (function (arglist__37014){
var writer = cljs.core.first(arglist__37014);
var ss = cljs.core.rest(arglist__37014);
return write_all__delegate(writer,ss);
});
write_all.cljs$core$IFn$_invoke$arity$variadic = write_all__delegate;
return write_all;
})()
;
cljs.core.string_print = (function string_print(x){
(cljs.core._STAR_print_fn_STAR_.cljs$core$IFn$_invoke$arity$1 ? cljs.core._STAR_print_fn_STAR_.cljs$core$IFn$_invoke$arity$1(x) : cljs.core._STAR_print_fn_STAR_.call(null,x));

return null;
});
cljs.core.flush = (function flush(){
return null;
});
cljs.core.char_escapes = (function (){var obj37016 = {"\"":"\\\"","\\":"\\\\","\b":"\\b","\f":"\\f","\n":"\\n","\r":"\\r","\t":"\\t"};
return obj37016;
})();
cljs.core.quote_string = (function quote_string(s){
return [cljs.core.str("\""),cljs.core.str(s.replace((function (){var G__37019 = "[\\\\\"\b\f\n\r\t]";
var G__37020 = "g";
return RegExp(G__37019,G__37020);
})(),(function (match){
return (cljs.core.char_escapes[match]);
}))),cljs.core.str("\"")].join('');
});
/**
* Prefer this to pr-seq, because it makes the printing function
* configurable, allowing efficient implementations such as appending
* to a StringBuffer.
*/
cljs.core.pr_writer = (function pr_writer(obj,writer,opts){
if((obj == null)){
return cljs.core._write(writer,"nil");
} else {
if((void 0 === obj)){
return cljs.core._write(writer,"#<undefined>");
} else {
if(cljs.core.truth_((function (){var and__24262__auto__ = cljs.core.get.cljs$core$IFn$_invoke$arity$2(opts,new cljs.core.Keyword(null,"meta","meta",1499536964));
if(cljs.core.truth_(and__24262__auto__)){
var and__24262__auto____$1 = (function (){var G__37034 = obj;
if(G__37034){
var bit__24955__auto__ = (G__37034.cljs$lang$protocol_mask$partition0$ & (131072));
if((bit__24955__auto__) || (G__37034.cljs$core$IMeta$)){
return true;
} else {
if((!G__37034.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IMeta,G__37034);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IMeta,G__37034);
}
})();
if(and__24262__auto____$1){
return cljs.core.meta(obj);
} else {
return and__24262__auto____$1;
}
} else {
return and__24262__auto__;
}
})())){
cljs.core._write(writer,"^");

pr_writer(cljs.core.meta(obj),writer,opts);

cljs.core._write(writer," ");
} else {
}

if((obj == null)){
return cljs.core._write(writer,"nil");
} else {
if(obj.cljs$lang$type){
return obj.cljs$lang$ctorPrWriter(obj,writer,opts);
} else {
if((function (){var G__37035 = obj;
if(G__37035){
var bit__24948__auto__ = (G__37035.cljs$lang$protocol_mask$partition0$ & (2147483648));
if((bit__24948__auto__) || (G__37035.cljs$core$IPrintWithWriter$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return obj.cljs$core$IPrintWithWriter$_pr_writer$arity$3(null,writer,opts);
} else {
if(((cljs.core.type(obj) === Boolean)) || (typeof obj === 'number')){
return cljs.core._write(writer,[cljs.core.str(obj)].join(''));
} else {
if(cljs.core.object_QMARK_(obj)){
cljs.core._write(writer,"#js ");

var G__37036 = cljs.core.map.cljs$core$IFn$_invoke$arity$2((function (k){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.keyword.cljs$core$IFn$_invoke$arity$1(k),(obj[k])], null);
}),cljs.core.js_keys(obj));
var G__37037 = pr_writer;
var G__37038 = writer;
var G__37039 = opts;
return (cljs.core.print_map.cljs$core$IFn$_invoke$arity$4 ? cljs.core.print_map.cljs$core$IFn$_invoke$arity$4(G__37036,G__37037,G__37038,G__37039) : cljs.core.print_map.call(null,G__37036,G__37037,G__37038,G__37039));
} else {
if(obj instanceof Array){
return cljs.core.pr_sequential_writer(writer,pr_writer,"#js ["," ","]",opts,obj);
} else {
if(cljs.core.truth_((function (){var G__37040 = obj;
return goog.isString(G__37040);
})())){
if(cljs.core.truth_(new cljs.core.Keyword(null,"readably","readably",1129599760).cljs$core$IFn$_invoke$arity$1(opts))){
return cljs.core._write(writer,cljs.core.quote_string(obj));
} else {
return cljs.core._write(writer,obj);
}
} else {
if(cljs.core.fn_QMARK_(obj)){
return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(writer,cljs.core.array_seq(["#<",[cljs.core.str(obj)].join(''),">"], 0));
} else {
if((obj instanceof Date)){
var normalize = (function (n,len){
var ns = [cljs.core.str(n)].join('');
while(true){
if((cljs.core.count(ns) < len)){
var G__37042 = [cljs.core.str("0"),cljs.core.str(ns)].join('');
ns = G__37042;
continue;
} else {
return ns;
}
break;
}
});
return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(writer,cljs.core.array_seq(["#inst \"",[cljs.core.str(obj.getUTCFullYear())].join(''),"-",normalize((obj.getUTCMonth() + (1)),(2)),"-",normalize(obj.getUTCDate(),(2)),"T",normalize(obj.getUTCHours(),(2)),":",normalize(obj.getUTCMinutes(),(2)),":",normalize(obj.getUTCSeconds(),(2)),".",normalize(obj.getUTCMilliseconds(),(3)),"-","00:00\""], 0));
} else {
if(cljs.core.regexp_QMARK_(obj)){
return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(writer,cljs.core.array_seq(["#\"",obj.source,"\""], 0));
} else {
if((function (){var G__37041 = obj;
if(G__37041){
var bit__24955__auto__ = (G__37041.cljs$lang$protocol_mask$partition0$ & (2147483648));
if((bit__24955__auto__) || (G__37041.cljs$core$IPrintWithWriter$)){
return true;
} else {
if((!G__37041.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IPrintWithWriter,G__37041);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IPrintWithWriter,G__37041);
}
})()){
return cljs.core._pr_writer(obj,writer,opts);
} else {
return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(writer,cljs.core.array_seq(["#<",[cljs.core.str(obj)].join(''),">"], 0));

}
}
}
}
}
}
}
}
}
}
}

}
}
});
cljs.core.pr_seq_writer = (function pr_seq_writer(objs,writer,opts){
cljs.core.pr_writer(cljs.core.first(objs),writer,opts);

var seq__37047 = cljs.core.seq(cljs.core.next(objs));
var chunk__37048 = null;
var count__37049 = (0);
var i__37050 = (0);
while(true){
if((i__37050 < count__37049)){
var obj = chunk__37048.cljs$core$IIndexed$_nth$arity$2(null,i__37050);
cljs.core._write(writer," ");

cljs.core.pr_writer(obj,writer,opts);

var G__37051 = seq__37047;
var G__37052 = chunk__37048;
var G__37053 = count__37049;
var G__37054 = (i__37050 + (1));
seq__37047 = G__37051;
chunk__37048 = G__37052;
count__37049 = G__37053;
i__37050 = G__37054;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__37047);
if(temp__4126__auto__){
var seq__37047__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__37047__$1)){
var c__25061__auto__ = cljs.core.chunk_first(seq__37047__$1);
var G__37055 = cljs.core.chunk_rest(seq__37047__$1);
var G__37056 = c__25061__auto__;
var G__37057 = cljs.core.count(c__25061__auto__);
var G__37058 = (0);
seq__37047 = G__37055;
chunk__37048 = G__37056;
count__37049 = G__37057;
i__37050 = G__37058;
continue;
} else {
var obj = cljs.core.first(seq__37047__$1);
cljs.core._write(writer," ");

cljs.core.pr_writer(obj,writer,opts);

var G__37059 = cljs.core.next(seq__37047__$1);
var G__37060 = null;
var G__37061 = (0);
var G__37062 = (0);
seq__37047 = G__37059;
chunk__37048 = G__37060;
count__37049 = G__37061;
i__37050 = G__37062;
continue;
}
} else {
return null;
}
}
break;
}
});
cljs.core.pr_sb_with_opts = (function pr_sb_with_opts(objs,opts){
var sb = (new goog.string.StringBuffer());
var writer = (new cljs.core.StringBufferWriter(sb));
cljs.core.pr_seq_writer(objs,writer,opts);

writer.cljs$core$IWriter$_flush$arity$1(null);

return sb;
});
/**
* Prints a sequence of objects to a string, observing all the
* options given in opts
*/
cljs.core.pr_str_with_opts = (function pr_str_with_opts(objs,opts){
if(cljs.core.empty_QMARK_(objs)){
return "";
} else {
return [cljs.core.str(cljs.core.pr_sb_with_opts(objs,opts))].join('');
}
});
/**
* Same as pr-str-with-opts followed by (newline)
*/
cljs.core.prn_str_with_opts = (function prn_str_with_opts(objs,opts){
if(cljs.core.empty_QMARK_(objs)){
return "\n";
} else {
var sb = cljs.core.pr_sb_with_opts(objs,opts);
sb.append("\n");

return [cljs.core.str(sb)].join('');
}
});
/**
* Prints a sequence of objects using string-print, observing all
* the options given in opts
*/
cljs.core.pr_with_opts = (function pr_with_opts(objs,opts){
return cljs.core.string_print(cljs.core.pr_str_with_opts(objs,opts));
});
cljs.core.newline = (function newline(opts){
cljs.core.string_print("\n");

if(cljs.core.truth_(cljs.core.get.cljs$core$IFn$_invoke$arity$2(opts,new cljs.core.Keyword(null,"flush-on-newline","flush-on-newline",-151457939)))){
return cljs.core.flush();
} else {
return null;
}
});
/**
* pr to a string, returning it. Fundamental entrypoint to IPrintWithWriter.
* @param {...*} var_args
*/
cljs.core.pr_str = (function() { 
var pr_str__delegate = function (objs){
return cljs.core.pr_str_with_opts(objs,cljs.core.pr_opts());
};
var pr_str = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__37063__i = 0, G__37063__a = new Array(arguments.length -  0);
while (G__37063__i < G__37063__a.length) {G__37063__a[G__37063__i] = arguments[G__37063__i + 0]; ++G__37063__i;}
  objs = new cljs.core.IndexedSeq(G__37063__a,0);
} 
return pr_str__delegate.call(this,objs);};
pr_str.cljs$lang$maxFixedArity = 0;
pr_str.cljs$lang$applyTo = (function (arglist__37064){
var objs = cljs.core.seq(arglist__37064);
return pr_str__delegate(objs);
});
pr_str.cljs$core$IFn$_invoke$arity$variadic = pr_str__delegate;
return pr_str;
})()
;
/**
* Same as pr-str followed by (newline)
* @param {...*} var_args
*/
cljs.core.prn_str = (function() { 
var prn_str__delegate = function (objs){
return cljs.core.prn_str_with_opts(objs,cljs.core.pr_opts());
};
var prn_str = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__37065__i = 0, G__37065__a = new Array(arguments.length -  0);
while (G__37065__i < G__37065__a.length) {G__37065__a[G__37065__i] = arguments[G__37065__i + 0]; ++G__37065__i;}
  objs = new cljs.core.IndexedSeq(G__37065__a,0);
} 
return prn_str__delegate.call(this,objs);};
prn_str.cljs$lang$maxFixedArity = 0;
prn_str.cljs$lang$applyTo = (function (arglist__37066){
var objs = cljs.core.seq(arglist__37066);
return prn_str__delegate(objs);
});
prn_str.cljs$core$IFn$_invoke$arity$variadic = prn_str__delegate;
return prn_str;
})()
;
/**
* Prints the object(s) using string-print.  Prints the
* object(s), separated by spaces if there is more than one.
* By default, pr and prn print in a way that objects can be
* read by the reader
* @param {...*} var_args
*/
cljs.core.pr = (function() { 
var pr__delegate = function (objs){
return cljs.core.pr_with_opts(objs,cljs.core.pr_opts());
};
var pr = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__37067__i = 0, G__37067__a = new Array(arguments.length -  0);
while (G__37067__i < G__37067__a.length) {G__37067__a[G__37067__i] = arguments[G__37067__i + 0]; ++G__37067__i;}
  objs = new cljs.core.IndexedSeq(G__37067__a,0);
} 
return pr__delegate.call(this,objs);};
pr.cljs$lang$maxFixedArity = 0;
pr.cljs$lang$applyTo = (function (arglist__37068){
var objs = cljs.core.seq(arglist__37068);
return pr__delegate(objs);
});
pr.cljs$core$IFn$_invoke$arity$variadic = pr__delegate;
return pr;
})()
;
/**
* Prints the object(s) using string-print.
* print and println produce output for human consumption.
* @param {...*} var_args
*/
cljs.core.print = (function() { 
var cljs_core_print__delegate = function (objs){
return cljs.core.pr_with_opts(objs,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.pr_opts(),new cljs.core.Keyword(null,"readably","readably",1129599760),false));
};
var cljs_core_print = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__37069__i = 0, G__37069__a = new Array(arguments.length -  0);
while (G__37069__i < G__37069__a.length) {G__37069__a[G__37069__i] = arguments[G__37069__i + 0]; ++G__37069__i;}
  objs = new cljs.core.IndexedSeq(G__37069__a,0);
} 
return cljs_core_print__delegate.call(this,objs);};
cljs_core_print.cljs$lang$maxFixedArity = 0;
cljs_core_print.cljs$lang$applyTo = (function (arglist__37070){
var objs = cljs.core.seq(arglist__37070);
return cljs_core_print__delegate(objs);
});
cljs_core_print.cljs$core$IFn$_invoke$arity$variadic = cljs_core_print__delegate;
return cljs_core_print;
})()
;
/**
* print to a string, returning it
* @param {...*} var_args
*/
cljs.core.print_str = (function() { 
var print_str__delegate = function (objs){
return cljs.core.pr_str_with_opts(objs,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.pr_opts(),new cljs.core.Keyword(null,"readably","readably",1129599760),false));
};
var print_str = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__37071__i = 0, G__37071__a = new Array(arguments.length -  0);
while (G__37071__i < G__37071__a.length) {G__37071__a[G__37071__i] = arguments[G__37071__i + 0]; ++G__37071__i;}
  objs = new cljs.core.IndexedSeq(G__37071__a,0);
} 
return print_str__delegate.call(this,objs);};
print_str.cljs$lang$maxFixedArity = 0;
print_str.cljs$lang$applyTo = (function (arglist__37072){
var objs = cljs.core.seq(arglist__37072);
return print_str__delegate(objs);
});
print_str.cljs$core$IFn$_invoke$arity$variadic = print_str__delegate;
return print_str;
})()
;
/**
* Same as print followed by (newline)
* @param {...*} var_args
*/
cljs.core.println = (function() { 
var println__delegate = function (objs){
cljs.core.pr_with_opts(objs,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.pr_opts(),new cljs.core.Keyword(null,"readably","readably",1129599760),false));

if(cljs.core.truth_(cljs.core._STAR_print_newline_STAR_)){
return cljs.core.newline(cljs.core.pr_opts());
} else {
return null;
}
};
var println = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__37073__i = 0, G__37073__a = new Array(arguments.length -  0);
while (G__37073__i < G__37073__a.length) {G__37073__a[G__37073__i] = arguments[G__37073__i + 0]; ++G__37073__i;}
  objs = new cljs.core.IndexedSeq(G__37073__a,0);
} 
return println__delegate.call(this,objs);};
println.cljs$lang$maxFixedArity = 0;
println.cljs$lang$applyTo = (function (arglist__37074){
var objs = cljs.core.seq(arglist__37074);
return println__delegate(objs);
});
println.cljs$core$IFn$_invoke$arity$variadic = println__delegate;
return println;
})()
;
/**
* println to a string, returning it
* @param {...*} var_args
*/
cljs.core.println_str = (function() { 
var println_str__delegate = function (objs){
return cljs.core.prn_str_with_opts(objs,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.pr_opts(),new cljs.core.Keyword(null,"readably","readably",1129599760),false));
};
var println_str = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__37075__i = 0, G__37075__a = new Array(arguments.length -  0);
while (G__37075__i < G__37075__a.length) {G__37075__a[G__37075__i] = arguments[G__37075__i + 0]; ++G__37075__i;}
  objs = new cljs.core.IndexedSeq(G__37075__a,0);
} 
return println_str__delegate.call(this,objs);};
println_str.cljs$lang$maxFixedArity = 0;
println_str.cljs$lang$applyTo = (function (arglist__37076){
var objs = cljs.core.seq(arglist__37076);
return println_str__delegate(objs);
});
println_str.cljs$core$IFn$_invoke$arity$variadic = println_str__delegate;
return println_str;
})()
;
/**
* Same as pr followed by (newline).
* @param {...*} var_args
*/
cljs.core.prn = (function() { 
var prn__delegate = function (objs){
cljs.core.pr_with_opts(objs,cljs.core.pr_opts());

if(cljs.core.truth_(cljs.core._STAR_print_newline_STAR_)){
return cljs.core.newline(cljs.core.pr_opts());
} else {
return null;
}
};
var prn = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__37077__i = 0, G__37077__a = new Array(arguments.length -  0);
while (G__37077__i < G__37077__a.length) {G__37077__a[G__37077__i] = arguments[G__37077__i + 0]; ++G__37077__i;}
  objs = new cljs.core.IndexedSeq(G__37077__a,0);
} 
return prn__delegate.call(this,objs);};
prn.cljs$lang$maxFixedArity = 0;
prn.cljs$lang$applyTo = (function (arglist__37078){
var objs = cljs.core.seq(arglist__37078);
return prn__delegate(objs);
});
prn.cljs$core$IFn$_invoke$arity$variadic = prn__delegate;
return prn;
})()
;
cljs.core.print_map = (function print_map(m,print_one,writer,opts){
return cljs.core.pr_sequential_writer(writer,(function (e,w,opts__$1){
var G__37085_37091 = cljs.core.key(e);
var G__37086_37092 = w;
var G__37087_37093 = opts__$1;
(print_one.cljs$core$IFn$_invoke$arity$3 ? print_one.cljs$core$IFn$_invoke$arity$3(G__37085_37091,G__37086_37092,G__37087_37093) : print_one.call(null,G__37085_37091,G__37086_37092,G__37087_37093));

cljs.core._write(w," ");

var G__37088 = cljs.core.val(e);
var G__37089 = w;
var G__37090 = opts__$1;
return (print_one.cljs$core$IFn$_invoke$arity$3 ? print_one.cljs$core$IFn$_invoke$arity$3(G__37088,G__37089,G__37090) : print_one.call(null,G__37088,G__37089,G__37090));
}),"{",", ","}",opts,cljs.core.seq(m));
});
cljs.core.Volatile.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.Volatile.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (a,writer,opts){
var a__$1 = this;
cljs.core._write(writer,"#<Volatile: ");

cljs.core.pr_writer(a__$1.state,writer,opts);

return cljs.core._write(writer,">");
});

cljs.core.Var.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.Var.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (a,writer,opts){
var a__$1 = this;
cljs.core._write(writer,"#'");

return cljs.core.pr_writer(a__$1.sym,writer,opts);
});

cljs.core.IndexedSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.IndexedSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.LazySeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.LazySeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.NodeSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.NodeSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.BlackNode.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.BlackNode.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"["," ","]",opts,coll__$1);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.ES6IteratorSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ES6IteratorSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentTreeSet.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"#{"," ","}",opts,coll__$1);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ChunkedSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.ObjMap.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ObjMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.print_map(coll__$1,cljs.core.pr_writer,writer,opts);
});

cljs.core.Cons.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.Cons.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.RSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.RSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.PersistentHashMap.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentHashMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.print_map(coll__$1,cljs.core.pr_writer,writer,opts);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ArrayNodeSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.Subvec.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.Subvec.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"["," ","]",opts,coll__$1);
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentTreeMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.print_map(coll__$1,cljs.core.pr_writer,writer,opts);
});

cljs.core.PersistentHashSet.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentHashSet.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"#{"," ","}",opts,coll__$1);
});

cljs.core.ChunkedCons.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ChunkedCons.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.Atom.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.Atom.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (a,writer,opts){
var a__$1 = this;
cljs.core._write(writer,"#<Atom: ");

cljs.core.pr_writer(a__$1.state,writer,opts);

return cljs.core._write(writer,">");
});

cljs.core.ValSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ValSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.RedNode.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.RedNode.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"["," ","]",opts,coll__$1);
});

cljs.core.PersistentVector.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentVector.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"["," ","]",opts,coll__$1);
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentQueueSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.EmptyList.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.EmptyList.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core._write(writer,"()");
});

cljs.core.LazyTransformer.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.LazyTransformer.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.PersistentQueue.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentQueue.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"#queue ["," ","]",opts,cljs.core.seq(coll__$1));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentArrayMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.print_map(coll__$1,cljs.core.pr_writer,writer,opts);
});

cljs.core.Range.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.Range.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.KeySeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.KeySeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.List.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.List.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});
cljs.core.PersistentVector.prototype.cljs$core$IComparable$ = true;

cljs.core.PersistentVector.prototype.cljs$core$IComparable$_compare$arity$2 = (function (x,y){
var x__$1 = this;
return cljs.core.compare_indexed.cljs$core$IFn$_invoke$arity$2(x__$1,y);
});

cljs.core.Subvec.prototype.cljs$core$IComparable$ = true;

cljs.core.Subvec.prototype.cljs$core$IComparable$_compare$arity$2 = (function (x,y){
var x__$1 = this;
return cljs.core.compare_indexed.cljs$core$IFn$_invoke$arity$2(x__$1,y);
});

cljs.core.Keyword.prototype.cljs$core$IComparable$ = true;

cljs.core.Keyword.prototype.cljs$core$IComparable$_compare$arity$2 = (function (x,y){
var x__$1 = this;
return cljs.core.compare_keywords(x__$1,y);
});

cljs.core.Symbol.prototype.cljs$core$IComparable$ = true;

cljs.core.Symbol.prototype.cljs$core$IComparable$_compare$arity$2 = (function (x,y){
var x__$1 = this;
return cljs.core.compare_symbols(x__$1,y);
});
/**
* Atomically sets the metadata for a namespace/var/ref/agent/atom to be:
* 
* (apply f its-current-meta args)
* 
* f must be free of side-effects
* @param {...*} var_args
*/
cljs.core.alter_meta_BANG_ = (function() { 
var alter_meta_BANG___delegate = function (iref,f,args){
return iref.meta = cljs.core.apply.cljs$core$IFn$_invoke$arity$3(f,iref.meta,args);
};
var alter_meta_BANG_ = function (iref,f,var_args){
var args = null;
if (arguments.length > 2) {
var G__37094__i = 0, G__37094__a = new Array(arguments.length -  2);
while (G__37094__i < G__37094__a.length) {G__37094__a[G__37094__i] = arguments[G__37094__i + 2]; ++G__37094__i;}
  args = new cljs.core.IndexedSeq(G__37094__a,0);
} 
return alter_meta_BANG___delegate.call(this,iref,f,args);};
alter_meta_BANG_.cljs$lang$maxFixedArity = 2;
alter_meta_BANG_.cljs$lang$applyTo = (function (arglist__37095){
var iref = cljs.core.first(arglist__37095);
arglist__37095 = cljs.core.next(arglist__37095);
var f = cljs.core.first(arglist__37095);
var args = cljs.core.rest(arglist__37095);
return alter_meta_BANG___delegate(iref,f,args);
});
alter_meta_BANG_.cljs$core$IFn$_invoke$arity$variadic = alter_meta_BANG___delegate;
return alter_meta_BANG_;
})()
;
/**
* Atomically resets the metadata for an atom
*/
cljs.core.reset_meta_BANG_ = (function reset_meta_BANG_(iref,m){
return iref.meta = m;
});
/**
* Alpha - subject to change.
* 
* Adds a watch function to an atom reference. The watch fn must be a
* fn of 4 args: a key, the reference, its old-state, its
* new-state. Whenever the reference's state might have been changed,
* any registered watches will have their functions called. The watch
* fn will be called synchronously. Note that an atom's state
* may have changed again prior to the fn call, so use old/new-state
* rather than derefing the reference. Keys must be unique per
* reference, and can be used to remove the watch with remove-watch,
* but are otherwise considered opaque by the watch mechanism.  Bear in
* mind that regardless of the result or action of the watch fns the
* atom's value will change.  Example:
* 
* (def a (atom 0))
* (add-watch a :inc (fn [k r o n] (assert (== 0 n))))
* (swap! a inc)
* ;; Assertion Error
* (deref a)
* ;=> 1
*/
cljs.core.add_watch = (function add_watch(iref,key,f){
cljs.core._add_watch(iref,key,f);

return iref;
});
/**
* Alpha - subject to change.
* 
* Removes a watch (set by add-watch) from a reference
*/
cljs.core.remove_watch = (function remove_watch(iref,key){
cljs.core._remove_watch(iref,key);

return iref;
});
cljs.core.gensym_counter = null;
/**
* Returns a new symbol with a unique name. If a prefix string is
* supplied, the name is prefix# where # is some unique number. If
* prefix is not supplied, the prefix is 'G__'.
*/
cljs.core.gensym = (function() {
var gensym = null;
var gensym__0 = (function (){
return gensym.cljs$core$IFn$_invoke$arity$1("G__");
});
var gensym__1 = (function (prefix_string){
if((cljs.core.gensym_counter == null)){
cljs.core.gensym_counter = (function (){var G__37098 = (0);
return (cljs.core.atom.cljs$core$IFn$_invoke$arity$1 ? cljs.core.atom.cljs$core$IFn$_invoke$arity$1(G__37098) : cljs.core.atom.call(null,G__37098));
})();
} else {
}

return cljs.core.symbol.cljs$core$IFn$_invoke$arity$1([cljs.core.str(prefix_string),cljs.core.str(cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(cljs.core.gensym_counter,cljs.core.inc))].join(''));
});
gensym = function(prefix_string){
switch(arguments.length){
case 0:
return gensym__0.call(this);
case 1:
return gensym__1.call(this,prefix_string);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
gensym.cljs$core$IFn$_invoke$arity$0 = gensym__0;
gensym.cljs$core$IFn$_invoke$arity$1 = gensym__1;
return gensym;
})()
;
cljs.core.fixture1 = (1);
cljs.core.fixture2 = (2);

/**
* @constructor
*/
cljs.core.Delay = (function (f,value){
this.f = f;
this.value = value;
this.cljs$lang$protocol_mask$partition1$ = 1;
this.cljs$lang$protocol_mask$partition0$ = 32768;
})
cljs.core.Delay.prototype.cljs$core$IPending$_realized_QMARK_$arity$1 = (function (d){
var self__ = this;
var d__$1 = this;
return cljs.core.not(self__.f);
});

cljs.core.Delay.prototype.cljs$core$IDeref$_deref$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
if(cljs.core.truth_(self__.f)){
self__.value = (function (){return (self__.f.cljs$core$IFn$_invoke$arity$0 ? self__.f.cljs$core$IFn$_invoke$arity$0() : self__.f.call(null));
})();

self__.f = null;
} else {
}

return self__.value;
});

cljs.core.Delay.cljs$lang$type = true;

cljs.core.Delay.cljs$lang$ctorStr = "cljs.core/Delay";

cljs.core.Delay.cljs$lang$ctorPrWriter = (function (this__24861__auto__,writer__24862__auto__,opt__24863__auto__){
return cljs.core._write(writer__24862__auto__,"cljs.core/Delay");
});

cljs.core.__GT_Delay = (function __GT_Delay(f,value){
return (new cljs.core.Delay(f,value));
});

/**
* returns true if x is a Delay created with delay
*/
cljs.core.delay_QMARK_ = (function delay_QMARK_(x){
return (x instanceof cljs.core.Delay);
});
/**
* If x is a Delay, returns the (possibly cached) value of its expression, else returns x
*/
cljs.core.force = (function force(x){
if(cljs.core.delay_QMARK_(x)){
var G__37100 = x;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__37100) : cljs.core.deref.call(null,G__37100));
} else {
return x;
}
});
/**
* Returns true if a value has been produced for a promise, delay, future or lazy sequence.
*/
cljs.core.realized_QMARK_ = (function realized_QMARK_(d){
return cljs.core._realized_QMARK_(d);
});
cljs.core.preserving_reduced = (function preserving_reduced(rf){
return (function (p1__37101_SHARP_,p2__37102_SHARP_){
var ret = (function (){var G__37105 = p1__37101_SHARP_;
var G__37106 = p2__37102_SHARP_;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__37105,G__37106) : rf.call(null,G__37105,G__37106));
})();
if(cljs.core.reduced_QMARK_(ret)){
return cljs.core.reduced(ret);
} else {
return ret;
}
});
});
/**
* A transducer which concatenates the contents of each input, which must be a
* collection, into the reduction.
*/
cljs.core.cat = (function cat(rf){
var rf1 = cljs.core.preserving_reduced(rf);
return ((function (rf1){
return (function() {
var G__37109 = null;
var G__37109__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__37109__1 = (function (result){
var G__37108 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__37108) : rf.call(null,G__37108));
});
var G__37109__2 = (function (result,input){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(rf1,result,input);
});
G__37109 = function(result,input){
switch(arguments.length){
case 0:
return G__37109__0.call(this);
case 1:
return G__37109__1.call(this,result);
case 2:
return G__37109__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__37109.cljs$core$IFn$_invoke$arity$0 = G__37109__0;
G__37109.cljs$core$IFn$_invoke$arity$1 = G__37109__1;
G__37109.cljs$core$IFn$_invoke$arity$2 = G__37109__2;
return G__37109;
})()
;})(rf1))
});
/**
* Returns a lazy sequence removing consecutive duplicates in coll.
* Returns a transducer when no collection is provided.
*/
cljs.core.dedupe = (function() {
var dedupe = null;
var dedupe__0 = (function (){
return (function (rf){
var pa = cljs.core.volatile_BANG_(new cljs.core.Keyword("cljs.core","none","cljs.core/none",926646439));
return ((function (pa){
return (function() {
var G__37118 = null;
var G__37118__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__37118__1 = (function (result){
var G__37114 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__37114) : rf.call(null,G__37114));
});
var G__37118__2 = (function (result,input){
var prior = (function (){var G__37115 = pa;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__37115) : cljs.core.deref.call(null,G__37115));
})();
cljs.core.vreset_BANG_(pa,input);

if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(prior,input)){
return result;
} else {
var G__37116 = result;
var G__37117 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__37116,G__37117) : rf.call(null,G__37116,G__37117));
}
});
G__37118 = function(result,input){
switch(arguments.length){
case 0:
return G__37118__0.call(this);
case 1:
return G__37118__1.call(this,result);
case 2:
return G__37118__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__37118.cljs$core$IFn$_invoke$arity$0 = G__37118__0;
G__37118.cljs$core$IFn$_invoke$arity$1 = G__37118__1;
G__37118.cljs$core$IFn$_invoke$arity$2 = G__37118__2;
return G__37118;
})()
;})(pa))
});
});
var dedupe__1 = (function (coll){
return cljs.core.sequence.cljs$core$IFn$_invoke$arity$2(dedupe.cljs$core$IFn$_invoke$arity$0(),coll);
});
dedupe = function(coll){
switch(arguments.length){
case 0:
return dedupe__0.call(this);
case 1:
return dedupe__1.call(this,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
dedupe.cljs$core$IFn$_invoke$arity$0 = dedupe__0;
dedupe.cljs$core$IFn$_invoke$arity$1 = dedupe__1;
return dedupe;
})()
;
/**
* Returns items from coll with random probability of prob (0.0 -
* 1.0).  Returns a transducer when no collection is provided.
*/
cljs.core.random_sample = (function() {
var random_sample = null;
var random_sample__1 = (function (prob){
return cljs.core.filter.cljs$core$IFn$_invoke$arity$1((function (_){
return ((function (){return (cljs.core.rand.cljs$core$IFn$_invoke$arity$0 ? cljs.core.rand.cljs$core$IFn$_invoke$arity$0() : cljs.core.rand.call(null));
})() < prob);
}));
});
var random_sample__2 = (function (prob,coll){
return cljs.core.filter.cljs$core$IFn$_invoke$arity$2((function (_){
return ((function (){return (cljs.core.rand.cljs$core$IFn$_invoke$arity$0 ? cljs.core.rand.cljs$core$IFn$_invoke$arity$0() : cljs.core.rand.call(null));
})() < prob);
}),coll);
});
random_sample = function(prob,coll){
switch(arguments.length){
case 1:
return random_sample__1.call(this,prob);
case 2:
return random_sample__2.call(this,prob,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
random_sample.cljs$core$IFn$_invoke$arity$1 = random_sample__1;
random_sample.cljs$core$IFn$_invoke$arity$2 = random_sample__2;
return random_sample;
})()
;

/**
* @constructor
*/
cljs.core.Eduction = (function (xform,coll){
this.xform = xform;
this.coll = coll;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 2173173760;
})
cljs.core.Eduction.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll__$1,writer,opts){
var self__ = this;
var coll__$2 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$2);
});

cljs.core.Eduction.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (_,f,init){
var self__ = this;
var ___$1 = this;
return cljs.core.transduce.cljs$core$IFn$_invoke$arity$4(self__.xform,f,init,self__.coll);
});

cljs.core.Eduction.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return cljs.core.seq(cljs.core.sequence.cljs$core$IFn$_invoke$arity$2(self__.xform,self__.coll));
});

cljs.core.Eduction.cljs$lang$type = true;

cljs.core.Eduction.cljs$lang$ctorStr = "cljs.core/Eduction";

cljs.core.Eduction.cljs$lang$ctorPrWriter = (function (this__24861__auto__,writer__24862__auto__,opt__24863__auto__){
return cljs.core._write(writer__24862__auto__,"cljs.core/Eduction");
});

cljs.core.__GT_Eduction = (function __GT_Eduction(xform,coll){
return (new cljs.core.Eduction(xform,coll));
});

(cljs.core.Eduction.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__25252__auto__ = this;
return cljs.core.es6_iterator(this__25252__auto__);
}));
/**
* Returns a reducible/iterable/seqable application of
* the transducer to the items in coll. Note that these applications
* will be performed every time iterator/seq/reduce is called.
*/
cljs.core.eduction = (function eduction(xform,coll){
return (new cljs.core.Eduction(xform,coll));
});
/**
* Runs the supplied procedure (via reduce), for purposes of side
* effects, on successive items in the collection. Returns nil
*/
cljs.core.run_BANG_ = (function run_BANG_(proc,coll){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (p1__37120_SHARP_,p2__37119_SHARP_){
var G__37122 = p2__37119_SHARP_;
return (proc.cljs$core$IFn$_invoke$arity$1 ? proc.cljs$core$IFn$_invoke$arity$1(G__37122) : proc.call(null,G__37122));
}),null,coll);
});

cljs.core.IEncodeJS = (function (){var obj37124 = {};
return obj37124;
})();

cljs.core._clj__GT_js = (function _clj__GT_js(x){
if((function (){var and__24262__auto__ = x;
if(and__24262__auto__){
return x.cljs$core$IEncodeJS$_clj__GT_js$arity$1;
} else {
return and__24262__auto__;
}
})()){
return x.cljs$core$IEncodeJS$_clj__GT_js$arity$1(x);
} else {
var x__24918__auto__ = (((x == null))?null:x);
return (function (){var or__24274__auto__ = (cljs.core._clj__GT_js[(function (){var G__37128 = x__24918__auto__;
return goog.typeOf(G__37128);
})()]);
if(or__24274__auto__){
return or__24274__auto__;
} else {
var or__24274__auto____$1 = (cljs.core._clj__GT_js["_"]);
if(or__24274__auto____$1){
return or__24274__auto____$1;
} else {
throw cljs.core.missing_protocol("IEncodeJS.-clj->js",x);
}
}
})().call(null,x);
}
});

cljs.core._key__GT_js = (function _key__GT_js(x){
if((function (){var and__24262__auto__ = x;
if(and__24262__auto__){
return x.cljs$core$IEncodeJS$_key__GT_js$arity$1;
} else {
return and__24262__auto__;
}
})()){
return x.cljs$core$IEncodeJS$_key__GT_js$arity$1(x);
} else {
var x__24918__auto__ = (((x == null))?null:x);
return (function (){var or__24274__auto__ = (cljs.core._key__GT_js[(function (){var G__37132 = x__24918__auto__;
return goog.typeOf(G__37132);
})()]);
if(or__24274__auto__){
return or__24274__auto__;
} else {
var or__24274__auto____$1 = (cljs.core._key__GT_js["_"]);
if(or__24274__auto____$1){
return or__24274__auto____$1;
} else {
throw cljs.core.missing_protocol("IEncodeJS.-key->js",x);
}
}
})().call(null,x);
}
});

cljs.core.key__GT_js = (function key__GT_js(k){
if((function (){var G__37135 = k;
if(G__37135){
var bit__24955__auto__ = null;
if(cljs.core.truth_((function (){var or__24274__auto__ = bit__24955__auto__;
if(cljs.core.truth_(or__24274__auto__)){
return or__24274__auto__;
} else {
return G__37135.cljs$core$IEncodeJS$;
}
})())){
return true;
} else {
if((!G__37135.cljs$lang$protocol_mask$partition$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeJS,G__37135);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeJS,G__37135);
}
})()){
return cljs.core._clj__GT_js(k);
} else {
if((typeof k === 'string') || (typeof k === 'number') || ((k instanceof cljs.core.Keyword)) || ((k instanceof cljs.core.Symbol))){
var G__37136 = k;
return (cljs.core.clj__GT_js.cljs$core$IFn$_invoke$arity$1 ? cljs.core.clj__GT_js.cljs$core$IFn$_invoke$arity$1(G__37136) : cljs.core.clj__GT_js.call(null,G__37136));
} else {
return cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([k], 0));
}
}
});
/**
* Recursively transforms ClojureScript values to JavaScript.
* sets/vectors/lists become Arrays, Keywords and Symbol become Strings,
* Maps become Objects. Arbitrary keys are encoded to by key->js.
*/
cljs.core.clj__GT_js = (function clj__GT_js(x){
if((x == null)){
return null;
} else {
if((function (){var G__37152 = x;
if(G__37152){
var bit__24955__auto__ = null;
if(cljs.core.truth_((function (){var or__24274__auto__ = bit__24955__auto__;
if(cljs.core.truth_(or__24274__auto__)){
return or__24274__auto__;
} else {
return G__37152.cljs$core$IEncodeJS$;
}
})())){
return true;
} else {
if((!G__37152.cljs$lang$protocol_mask$partition$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeJS,G__37152);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeJS,G__37152);
}
})()){
return cljs.core._clj__GT_js(x);
} else {
if((x instanceof cljs.core.Keyword)){
return cljs.core.name(x);
} else {
if((x instanceof cljs.core.Symbol)){
return [cljs.core.str(x)].join('');
} else {
if(cljs.core.map_QMARK_(x)){
var m = (function (){var obj37154 = {};
return obj37154;
})();
var seq__37155_37165 = cljs.core.seq(x);
var chunk__37156_37166 = null;
var count__37157_37167 = (0);
var i__37158_37168 = (0);
while(true){
if((i__37158_37168 < count__37157_37167)){
var vec__37159_37169 = chunk__37156_37166.cljs$core$IIndexed$_nth$arity$2(null,i__37158_37168);
var k_37170 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__37159_37169,(0),null);
var v_37171 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__37159_37169,(1),null);
(m[cljs.core.key__GT_js(k_37170)] = clj__GT_js(v_37171));

var G__37172 = seq__37155_37165;
var G__37173 = chunk__37156_37166;
var G__37174 = count__37157_37167;
var G__37175 = (i__37158_37168 + (1));
seq__37155_37165 = G__37172;
chunk__37156_37166 = G__37173;
count__37157_37167 = G__37174;
i__37158_37168 = G__37175;
continue;
} else {
var temp__4126__auto___37176 = cljs.core.seq(seq__37155_37165);
if(temp__4126__auto___37176){
var seq__37155_37177__$1 = temp__4126__auto___37176;
if(cljs.core.chunked_seq_QMARK_(seq__37155_37177__$1)){
var c__25061__auto___37178 = cljs.core.chunk_first(seq__37155_37177__$1);
var G__37179 = cljs.core.chunk_rest(seq__37155_37177__$1);
var G__37180 = c__25061__auto___37178;
var G__37181 = cljs.core.count(c__25061__auto___37178);
var G__37182 = (0);
seq__37155_37165 = G__37179;
chunk__37156_37166 = G__37180;
count__37157_37167 = G__37181;
i__37158_37168 = G__37182;
continue;
} else {
var vec__37160_37183 = cljs.core.first(seq__37155_37177__$1);
var k_37184 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__37160_37183,(0),null);
var v_37185 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__37160_37183,(1),null);
(m[cljs.core.key__GT_js(k_37184)] = clj__GT_js(v_37185));

var G__37186 = cljs.core.next(seq__37155_37177__$1);
var G__37187 = null;
var G__37188 = (0);
var G__37189 = (0);
seq__37155_37165 = G__37186;
chunk__37156_37166 = G__37187;
count__37157_37167 = G__37188;
i__37158_37168 = G__37189;
continue;
}
} else {
}
}
break;
}

return m;
} else {
if(cljs.core.coll_QMARK_(x)){
var arr = [];
var seq__37161_37190 = cljs.core.seq(cljs.core.map.cljs$core$IFn$_invoke$arity$2(clj__GT_js,x));
var chunk__37162_37191 = null;
var count__37163_37192 = (0);
var i__37164_37193 = (0);
while(true){
if((i__37164_37193 < count__37163_37192)){
var x_37194__$1 = chunk__37162_37191.cljs$core$IIndexed$_nth$arity$2(null,i__37164_37193);
arr.push(x_37194__$1);

var G__37195 = seq__37161_37190;
var G__37196 = chunk__37162_37191;
var G__37197 = count__37163_37192;
var G__37198 = (i__37164_37193 + (1));
seq__37161_37190 = G__37195;
chunk__37162_37191 = G__37196;
count__37163_37192 = G__37197;
i__37164_37193 = G__37198;
continue;
} else {
var temp__4126__auto___37199 = cljs.core.seq(seq__37161_37190);
if(temp__4126__auto___37199){
var seq__37161_37200__$1 = temp__4126__auto___37199;
if(cljs.core.chunked_seq_QMARK_(seq__37161_37200__$1)){
var c__25061__auto___37201 = cljs.core.chunk_first(seq__37161_37200__$1);
var G__37202 = cljs.core.chunk_rest(seq__37161_37200__$1);
var G__37203 = c__25061__auto___37201;
var G__37204 = cljs.core.count(c__25061__auto___37201);
var G__37205 = (0);
seq__37161_37190 = G__37202;
chunk__37162_37191 = G__37203;
count__37163_37192 = G__37204;
i__37164_37193 = G__37205;
continue;
} else {
var x_37206__$1 = cljs.core.first(seq__37161_37200__$1);
arr.push(x_37206__$1);

var G__37207 = cljs.core.next(seq__37161_37200__$1);
var G__37208 = null;
var G__37209 = (0);
var G__37210 = (0);
seq__37161_37190 = G__37207;
chunk__37162_37191 = G__37208;
count__37163_37192 = G__37209;
i__37164_37193 = G__37210;
continue;
}
} else {
}
}
break;
}

return arr;
} else {
return x;

}
}
}
}
}
}
});

cljs.core.IEncodeClojure = (function (){var obj37212 = {};
return obj37212;
})();

cljs.core._js__GT_clj = (function _js__GT_clj(x,options){
if((function (){var and__24262__auto__ = x;
if(and__24262__auto__){
return x.cljs$core$IEncodeClojure$_js__GT_clj$arity$2;
} else {
return and__24262__auto__;
}
})()){
return x.cljs$core$IEncodeClojure$_js__GT_clj$arity$2(x,options);
} else {
var x__24918__auto__ = (((x == null))?null:x);
return (function (){var or__24274__auto__ = (cljs.core._js__GT_clj[(function (){var G__37216 = x__24918__auto__;
return goog.typeOf(G__37216);
})()]);
if(or__24274__auto__){
return or__24274__auto__;
} else {
var or__24274__auto____$1 = (cljs.core._js__GT_clj["_"]);
if(or__24274__auto____$1){
return or__24274__auto____$1;
} else {
throw cljs.core.missing_protocol("IEncodeClojure.-js->clj",x);
}
}
})().call(null,x,options);
}
});

/**
* Recursively transforms JavaScript arrays into ClojureScript
* vectors, and JavaScript objects into ClojureScript maps.  With
* option ':keywordize-keys true' will convert object fields from
* strings to keywords.
* @param {...*} var_args
*/
cljs.core.js__GT_clj = (function() {
var js__GT_clj = null;
var js__GT_clj__1 = (function (x){
return js__GT_clj.cljs$core$IFn$_invoke$arity$variadic(x,cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,"keywordize-keys","keywordize-keys",1310784252),false], null)], 0));
});
var js__GT_clj__2 = (function() { 
var G__37273__delegate = function (x,opts){
var map__37246 = opts;
var map__37246__$1 = ((cljs.core.seq_QMARK_(map__37246))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__37246):map__37246);
var keywordize_keys = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__37246__$1,new cljs.core.Keyword(null,"keywordize-keys","keywordize-keys",1310784252));
var keyfn = (cljs.core.truth_(keywordize_keys)?cljs.core.keyword:cljs.core.str);
var f = ((function (map__37246,map__37246__$1,keywordize_keys,keyfn){
return (function thisfn(x__$1){
if((function (){var G__37262 = x__$1;
if(G__37262){
var bit__24955__auto__ = null;
if(cljs.core.truth_((function (){var or__24274__auto__ = bit__24955__auto__;
if(cljs.core.truth_(or__24274__auto__)){
return or__24274__auto__;
} else {
return G__37262.cljs$core$IEncodeClojure$;
}
})())){
return true;
} else {
if((!G__37262.cljs$lang$protocol_mask$partition$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeClojure,G__37262);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeClojure,G__37262);
}
})()){
return cljs.core._js__GT_clj(x__$1,cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.array_map,opts));
} else {
if(cljs.core.seq_QMARK_(x__$1)){
return cljs.core.doall.cljs$core$IFn$_invoke$arity$1(cljs.core.map.cljs$core$IFn$_invoke$arity$2(thisfn,x__$1));
} else {
if(cljs.core.coll_QMARK_(x__$1)){
return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.empty(x__$1),cljs.core.map.cljs$core$IFn$_invoke$arity$2(thisfn,x__$1));
} else {
if(x__$1 instanceof Array){
return cljs.core.vec(cljs.core.map.cljs$core$IFn$_invoke$arity$2(thisfn,x__$1));
} else {
if((cljs.core.type(x__$1) === Object)){
return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentArrayMap.EMPTY,(function (){var iter__25030__auto__ = ((function (map__37246,map__37246__$1,keywordize_keys,keyfn){
return (function iter__37263(s__37264){
return (new cljs.core.LazySeq(null,((function (map__37246,map__37246__$1,keywordize_keys,keyfn){
return (function (){
var s__37264__$1 = s__37264;
while(true){
var temp__4126__auto__ = cljs.core.seq(s__37264__$1);
if(temp__4126__auto__){
var s__37264__$2 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(s__37264__$2)){
var c__25028__auto__ = cljs.core.chunk_first(s__37264__$2);
var size__25029__auto__ = cljs.core.count(c__25028__auto__);
var b__37266 = cljs.core.chunk_buffer(size__25029__auto__);
if((function (){var i__37265 = (0);
while(true){
if((i__37265 < size__25029__auto__)){
var k = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c__25028__auto__,i__37265);
cljs.core.chunk_append(b__37266,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__37271 = k;
return (keyfn.cljs$core$IFn$_invoke$arity$1 ? keyfn.cljs$core$IFn$_invoke$arity$1(G__37271) : keyfn.call(null,G__37271));
})(),thisfn((x__$1[k]))], null));

var G__37274 = (i__37265 + (1));
i__37265 = G__37274;
continue;
} else {
return true;
}
break;
}
})()){
return cljs.core.chunk_cons(cljs.core.chunk(b__37266),iter__37263(cljs.core.chunk_rest(s__37264__$2)));
} else {
return cljs.core.chunk_cons(cljs.core.chunk(b__37266),null);
}
} else {
var k = cljs.core.first(s__37264__$2);
return cljs.core.cons(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__37272 = k;
return (keyfn.cljs$core$IFn$_invoke$arity$1 ? keyfn.cljs$core$IFn$_invoke$arity$1(G__37272) : keyfn.call(null,G__37272));
})(),thisfn((x__$1[k]))], null),iter__37263(cljs.core.rest(s__37264__$2)));
}
} else {
return null;
}
break;
}
});})(map__37246,map__37246__$1,keywordize_keys,keyfn))
,null,null));
});})(map__37246,map__37246__$1,keywordize_keys,keyfn))
;
return iter__25030__auto__(cljs.core.js_keys(x__$1));
})());
} else {
return x__$1;

}
}
}
}
}
});})(map__37246,map__37246__$1,keywordize_keys,keyfn))
;
return f(x);
};
var G__37273 = function (x,var_args){
var opts = null;
if (arguments.length > 1) {
var G__37275__i = 0, G__37275__a = new Array(arguments.length -  1);
while (G__37275__i < G__37275__a.length) {G__37275__a[G__37275__i] = arguments[G__37275__i + 1]; ++G__37275__i;}
  opts = new cljs.core.IndexedSeq(G__37275__a,0);
} 
return G__37273__delegate.call(this,x,opts);};
G__37273.cljs$lang$maxFixedArity = 1;
G__37273.cljs$lang$applyTo = (function (arglist__37276){
var x = cljs.core.first(arglist__37276);
var opts = cljs.core.rest(arglist__37276);
return G__37273__delegate(x,opts);
});
G__37273.cljs$core$IFn$_invoke$arity$variadic = G__37273__delegate;
return G__37273;
})()
;
js__GT_clj = function(x,var_args){
var opts = var_args;
switch(arguments.length){
case 1:
return js__GT_clj__1.call(this,x);
default:
var G__37277 = null;
if (arguments.length > 1) {
var G__37278__i = 0, G__37278__a = new Array(arguments.length -  1);
while (G__37278__i < G__37278__a.length) {G__37278__a[G__37278__i] = arguments[G__37278__i + 1]; ++G__37278__i;}
G__37277 = new cljs.core.IndexedSeq(G__37278__a,0);
}
return js__GT_clj__2.cljs$core$IFn$_invoke$arity$variadic(x, G__37277);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
js__GT_clj.cljs$lang$maxFixedArity = 1;
js__GT_clj.cljs$lang$applyTo = js__GT_clj__2.cljs$lang$applyTo;
js__GT_clj.cljs$core$IFn$_invoke$arity$1 = js__GT_clj__1;
js__GT_clj.cljs$core$IFn$_invoke$arity$variadic = js__GT_clj__2.cljs$core$IFn$_invoke$arity$variadic;
return js__GT_clj;
})()
;
/**
* Returns a memoized version of a referentially transparent function. The
* memoized version of the function keeps a cache of the mapping from arguments
* to results and, when calls with the same arguments are repeated often, has
* higher performance at the expense of higher memory use.
*/
cljs.core.memoize = (function memoize(f){
var mem = (function (){var G__37281 = cljs.core.PersistentArrayMap.EMPTY;
return (cljs.core.atom.cljs$core$IFn$_invoke$arity$1 ? cljs.core.atom.cljs$core$IFn$_invoke$arity$1(G__37281) : cljs.core.atom.call(null,G__37281));
})();
return ((function (mem){
return (function() { 
var G__37283__delegate = function (args){
var v = cljs.core.get.cljs$core$IFn$_invoke$arity$3((function (){var G__37282 = mem;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__37282) : cljs.core.deref.call(null,G__37282));
})(),args,cljs.core.lookup_sentinel);
if((v === cljs.core.lookup_sentinel)){
var ret = cljs.core.apply.cljs$core$IFn$_invoke$arity$2(f,args);
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(mem,cljs.core.assoc,args,ret);

return ret;
} else {
return v;
}
};
var G__37283 = function (var_args){
var args = null;
if (arguments.length > 0) {
var G__37284__i = 0, G__37284__a = new Array(arguments.length -  0);
while (G__37284__i < G__37284__a.length) {G__37284__a[G__37284__i] = arguments[G__37284__i + 0]; ++G__37284__i;}
  args = new cljs.core.IndexedSeq(G__37284__a,0);
} 
return G__37283__delegate.call(this,args);};
G__37283.cljs$lang$maxFixedArity = 0;
G__37283.cljs$lang$applyTo = (function (arglist__37285){
var args = cljs.core.seq(arglist__37285);
return G__37283__delegate(args);
});
G__37283.cljs$core$IFn$_invoke$arity$variadic = G__37283__delegate;
return G__37283;
})()
;
;})(mem))
});
/**
* trampoline can be used to convert algorithms requiring mutual
* recursion without stack consumption. Calls f with supplied args, if
* any. If f returns a fn, calls that fn with no arguments, and
* continues to repeat, until the return value is not a fn, then
* returns that non-fn value. Note that if you want to return a fn as a
* final value, you must wrap it in some data structure and unpack it
* after trampoline returns.
* @param {...*} var_args
*/
cljs.core.trampoline = (function() {
var trampoline = null;
var trampoline__1 = (function (f){
while(true){
var ret = (function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})();
if(cljs.core.fn_QMARK_(ret)){
var G__37287 = ret;
f = G__37287;
continue;
} else {
return ret;
}
break;
}
});
var trampoline__2 = (function() { 
var G__37288__delegate = function (f,args){
return trampoline.cljs$core$IFn$_invoke$arity$1((function (){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$2(f,args);
}));
};
var G__37288 = function (f,var_args){
var args = null;
if (arguments.length > 1) {
var G__37289__i = 0, G__37289__a = new Array(arguments.length -  1);
while (G__37289__i < G__37289__a.length) {G__37289__a[G__37289__i] = arguments[G__37289__i + 1]; ++G__37289__i;}
  args = new cljs.core.IndexedSeq(G__37289__a,0);
} 
return G__37288__delegate.call(this,f,args);};
G__37288.cljs$lang$maxFixedArity = 1;
G__37288.cljs$lang$applyTo = (function (arglist__37290){
var f = cljs.core.first(arglist__37290);
var args = cljs.core.rest(arglist__37290);
return G__37288__delegate(f,args);
});
G__37288.cljs$core$IFn$_invoke$arity$variadic = G__37288__delegate;
return G__37288;
})()
;
trampoline = function(f,var_args){
var args = var_args;
switch(arguments.length){
case 1:
return trampoline__1.call(this,f);
default:
var G__37291 = null;
if (arguments.length > 1) {
var G__37292__i = 0, G__37292__a = new Array(arguments.length -  1);
while (G__37292__i < G__37292__a.length) {G__37292__a[G__37292__i] = arguments[G__37292__i + 1]; ++G__37292__i;}
G__37291 = new cljs.core.IndexedSeq(G__37292__a,0);
}
return trampoline__2.cljs$core$IFn$_invoke$arity$variadic(f, G__37291);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
trampoline.cljs$lang$maxFixedArity = 1;
trampoline.cljs$lang$applyTo = trampoline__2.cljs$lang$applyTo;
trampoline.cljs$core$IFn$_invoke$arity$1 = trampoline__1;
trampoline.cljs$core$IFn$_invoke$arity$variadic = trampoline__2.cljs$core$IFn$_invoke$arity$variadic;
return trampoline;
})()
;
/**
* Returns a random floating point number between 0 (inclusive) and
* n (default 1) (exclusive).
*/
cljs.core.rand = (function() {
var rand = null;
var rand__0 = (function (){
return rand.cljs$core$IFn$_invoke$arity$1((1));
});
var rand__1 = (function (n){
return ((function (){return (Math.random.cljs$core$IFn$_invoke$arity$0 ? Math.random.cljs$core$IFn$_invoke$arity$0() : Math.random.call(null));
})() * n);
});
rand = function(n){
switch(arguments.length){
case 0:
return rand__0.call(this);
case 1:
return rand__1.call(this,n);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
rand.cljs$core$IFn$_invoke$arity$0 = rand__0;
rand.cljs$core$IFn$_invoke$arity$1 = rand__1;
return rand;
})()
;
/**
* Returns a random integer between 0 (inclusive) and n (exclusive).
*/
cljs.core.rand_int = (function rand_int(n){
var G__37295 = ((function (){return (Math.random.cljs$core$IFn$_invoke$arity$0 ? Math.random.cljs$core$IFn$_invoke$arity$0() : Math.random.call(null));
})() * n);
return (Math.floor.cljs$core$IFn$_invoke$arity$1 ? Math.floor.cljs$core$IFn$_invoke$arity$1(G__37295) : Math.floor.call(null,G__37295));
});
/**
* Return a random element of the (sequential) collection. Will have
* the same performance characteristics as nth for the given
* collection.
*/
cljs.core.rand_nth = (function rand_nth(coll){
return cljs.core.nth.cljs$core$IFn$_invoke$arity$2(coll,cljs.core.rand_int(cljs.core.count(coll)));
});
/**
* Returns a map of the elements of coll keyed by the result of
* f on each element. The value at each key will be a vector of the
* corresponding elements, in the order they appeared in coll.
*/
cljs.core.group_by = (function group_by(f,coll){
return cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (ret,x){
var k = (function (){var G__37297 = x;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__37297) : f.call(null,G__37297));
})();
return cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(ret,k,cljs.core.conj.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$3(ret,k,cljs.core.PersistentVector.EMPTY),x));
}),cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY),coll));
});
/**
* Creates a hierarchy object for use with derive, isa? etc.
*/
cljs.core.make_hierarchy = (function make_hierarchy(){
return new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,"parents","parents",-2027538891),cljs.core.PersistentArrayMap.EMPTY,new cljs.core.Keyword(null,"descendants","descendants",1824886031),cljs.core.PersistentArrayMap.EMPTY,new cljs.core.Keyword(null,"ancestors","ancestors",-776045424),cljs.core.PersistentArrayMap.EMPTY], null);
});
cljs.core._global_hierarchy = null;
cljs.core.get_global_hierarchy = (function get_global_hierarchy(){
if((cljs.core._global_hierarchy == null)){
cljs.core._global_hierarchy = (function (){var G__37299 = cljs.core.make_hierarchy();
return (cljs.core.atom.cljs$core$IFn$_invoke$arity$1 ? cljs.core.atom.cljs$core$IFn$_invoke$arity$1(G__37299) : cljs.core.atom.call(null,G__37299));
})();
} else {
}

return cljs.core._global_hierarchy;
});
/**
* @param {...*} var_args
*/
cljs.core.swap_global_hierarchy_BANG_ = (function() { 
var swap_global_hierarchy_BANG___delegate = function (f,args){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$4(cljs.core.swap_BANG_,cljs.core.get_global_hierarchy(),f,args);
};
var swap_global_hierarchy_BANG_ = function (f,var_args){
var args = null;
if (arguments.length > 1) {
var G__37300__i = 0, G__37300__a = new Array(arguments.length -  1);
while (G__37300__i < G__37300__a.length) {G__37300__a[G__37300__i] = arguments[G__37300__i + 1]; ++G__37300__i;}
  args = new cljs.core.IndexedSeq(G__37300__a,0);
} 
return swap_global_hierarchy_BANG___delegate.call(this,f,args);};
swap_global_hierarchy_BANG_.cljs$lang$maxFixedArity = 1;
swap_global_hierarchy_BANG_.cljs$lang$applyTo = (function (arglist__37301){
var f = cljs.core.first(arglist__37301);
var args = cljs.core.rest(arglist__37301);
return swap_global_hierarchy_BANG___delegate(f,args);
});
swap_global_hierarchy_BANG_.cljs$core$IFn$_invoke$arity$variadic = swap_global_hierarchy_BANG___delegate;
return swap_global_hierarchy_BANG_;
})()
;
/**
* Returns true if (= child parent), or child is directly or indirectly derived from
* parent, either via a JavaScript type inheritance relationship or a
* relationship established via derive. h must be a hierarchy obtained
* from make-hierarchy, if not supplied defaults to the global
* hierarchy
*/
cljs.core.isa_QMARK_ = (function() {
var isa_QMARK_ = null;
var isa_QMARK___2 = (function (child,parent){
return isa_QMARK_.cljs$core$IFn$_invoke$arity$3((function (){var G__37366 = cljs.core.get_global_hierarchy();
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__37366) : cljs.core.deref.call(null,G__37366));
})(),child,parent);
});
var isa_QMARK___3 = (function (h,child,parent){
var or__24274__auto__ = cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(child,parent);
if(or__24274__auto__){
return or__24274__auto__;
} else {
var or__24274__auto____$1 = cljs.core.contains_QMARK_(new cljs.core.Keyword(null,"ancestors","ancestors",-776045424).cljs$core$IFn$_invoke$arity$1(h).call(null,child),parent);
if(or__24274__auto____$1){
return or__24274__auto____$1;
} else {
var and__24262__auto__ = cljs.core.vector_QMARK_(parent);
if(and__24262__auto__){
var and__24262__auto____$1 = cljs.core.vector_QMARK_(child);
if(and__24262__auto____$1){
var and__24262__auto____$2 = (cljs.core.count(parent) === cljs.core.count(child));
if(and__24262__auto____$2){
var ret = true;
var i = (0);
while(true){
if((!(ret)) || ((i === cljs.core.count(parent)))){
return ret;
} else {
var G__37391 = isa_QMARK_.cljs$core$IFn$_invoke$arity$3(h,(function (){var G__37389 = i;
return (child.cljs$core$IFn$_invoke$arity$1 ? child.cljs$core$IFn$_invoke$arity$1(G__37389) : child.call(null,G__37389));
})(),(function (){var G__37390 = i;
return (parent.cljs$core$IFn$_invoke$arity$1 ? parent.cljs$core$IFn$_invoke$arity$1(G__37390) : parent.call(null,G__37390));
})());
var G__37392 = (i + (1));
ret = G__37391;
i = G__37392;
continue;
}
break;
}
} else {
return and__24262__auto____$2;
}
} else {
return and__24262__auto____$1;
}
} else {
return and__24262__auto__;
}
}
}
});
isa_QMARK_ = function(h,child,parent){
switch(arguments.length){
case 2:
return isa_QMARK___2.call(this,h,child);
case 3:
return isa_QMARK___3.call(this,h,child,parent);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
isa_QMARK_.cljs$core$IFn$_invoke$arity$2 = isa_QMARK___2;
isa_QMARK_.cljs$core$IFn$_invoke$arity$3 = isa_QMARK___3;
return isa_QMARK_;
})()
;
/**
* Returns the immediate parents of tag, either via a JavaScript type
* inheritance relationship or a relationship established via derive. h
* must be a hierarchy obtained from make-hierarchy, if not supplied
* defaults to the global hierarchy
*/
cljs.core.parents = (function() {
var parents = null;
var parents__1 = (function (tag){
return parents.cljs$core$IFn$_invoke$arity$2((function (){var G__37396 = cljs.core.get_global_hierarchy();
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__37396) : cljs.core.deref.call(null,G__37396));
})(),tag);
});
var parents__2 = (function (h,tag){
return cljs.core.not_empty(cljs.core.get.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,"parents","parents",-2027538891).cljs$core$IFn$_invoke$arity$1(h),tag));
});
parents = function(h,tag){
switch(arguments.length){
case 1:
return parents__1.call(this,h);
case 2:
return parents__2.call(this,h,tag);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
parents.cljs$core$IFn$_invoke$arity$1 = parents__1;
parents.cljs$core$IFn$_invoke$arity$2 = parents__2;
return parents;
})()
;
/**
* Returns the immediate and indirect parents of tag, either via a JavaScript type
* inheritance relationship or a relationship established via derive. h
* must be a hierarchy obtained from make-hierarchy, if not supplied
* defaults to the global hierarchy
*/
cljs.core.ancestors = (function() {
var ancestors = null;
var ancestors__1 = (function (tag){
return ancestors.cljs$core$IFn$_invoke$arity$2((function (){var G__37400 = cljs.core.get_global_hierarchy();
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__37400) : cljs.core.deref.call(null,G__37400));
})(),tag);
});
var ancestors__2 = (function (h,tag){
return cljs.core.not_empty(cljs.core.get.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,"ancestors","ancestors",-776045424).cljs$core$IFn$_invoke$arity$1(h),tag));
});
ancestors = function(h,tag){
switch(arguments.length){
case 1:
return ancestors__1.call(this,h);
case 2:
return ancestors__2.call(this,h,tag);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
ancestors.cljs$core$IFn$_invoke$arity$1 = ancestors__1;
ancestors.cljs$core$IFn$_invoke$arity$2 = ancestors__2;
return ancestors;
})()
;
/**
* Returns the immediate and indirect children of tag, through a
* relationship established via derive. h must be a hierarchy obtained
* from make-hierarchy, if not supplied defaults to the global
* hierarchy. Note: does not work on JavaScript type inheritance
* relationships.
*/
cljs.core.descendants = (function() {
var descendants = null;
var descendants__1 = (function (tag){
return descendants.cljs$core$IFn$_invoke$arity$2((function (){var G__37404 = cljs.core.get_global_hierarchy();
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__37404) : cljs.core.deref.call(null,G__37404));
})(),tag);
});
var descendants__2 = (function (h,tag){
return cljs.core.not_empty(cljs.core.get.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,"descendants","descendants",1824886031).cljs$core$IFn$_invoke$arity$1(h),tag));
});
descendants = function(h,tag){
switch(arguments.length){
case 1:
return descendants__1.call(this,h);
case 2:
return descendants__2.call(this,h,tag);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
descendants.cljs$core$IFn$_invoke$arity$1 = descendants__1;
descendants.cljs$core$IFn$_invoke$arity$2 = descendants__2;
return descendants;
})()
;
/**
* Establishes a parent/child relationship between parent and
* tag. Parent must be a namespace-qualified symbol or keyword and
* child can be either a namespace-qualified symbol or keyword or a
* class. h must be a hierarchy obtained from make-hierarchy, if not
* supplied defaults to, and modifies, the global hierarchy.
*/
cljs.core.derive = (function() {
var derive = null;
var derive__2 = (function (tag,parent){
if(cljs.core.truth_(cljs.core.namespace(parent))){
} else {
throw (new Error([cljs.core.str("Assert failed: "),cljs.core.str(cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.list(new cljs.core.Symbol(null,"namespace","namespace",1263021155,null),new cljs.core.Symbol(null,"parent","parent",761652748,null))], 0)))].join('')));
}

cljs.core.swap_global_hierarchy_BANG_.cljs$core$IFn$_invoke$arity$variadic(derive,cljs.core.array_seq([tag,parent], 0));

return null;
});
var derive__3 = (function (h,tag,parent){
if(cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2(tag,parent)){
} else {
throw (new Error([cljs.core.str("Assert failed: "),cljs.core.str(cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.list(new cljs.core.Symbol(null,"not=","not=",1466536204,null),new cljs.core.Symbol(null,"tag","tag",350170304,null),new cljs.core.Symbol(null,"parent","parent",761652748,null))], 0)))].join('')));
}

var tp = new cljs.core.Keyword(null,"parents","parents",-2027538891).cljs$core$IFn$_invoke$arity$1(h);
var td = new cljs.core.Keyword(null,"descendants","descendants",1824886031).cljs$core$IFn$_invoke$arity$1(h);
var ta = new cljs.core.Keyword(null,"ancestors","ancestors",-776045424).cljs$core$IFn$_invoke$arity$1(h);
var tf = ((function (tp,td,ta){
return (function (m,source,sources,target,targets){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (tp,td,ta){
return (function (ret,k){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(ret,k,cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.conj,cljs.core.get.cljs$core$IFn$_invoke$arity$3(targets,k,cljs.core.PersistentHashSet.EMPTY),cljs.core.cons(target,(function (){var G__37413 = target;
return (targets.cljs$core$IFn$_invoke$arity$1 ? targets.cljs$core$IFn$_invoke$arity$1(G__37413) : targets.call(null,G__37413));
})())));
});})(tp,td,ta))
,m,cljs.core.cons(source,(function (){var G__37414 = source;
return (sources.cljs$core$IFn$_invoke$arity$1 ? sources.cljs$core$IFn$_invoke$arity$1(G__37414) : sources.call(null,G__37414));
})()));
});})(tp,td,ta))
;
var or__24274__auto__ = ((cljs.core.contains_QMARK_((function (){var G__37418 = tag;
return (tp.cljs$core$IFn$_invoke$arity$1 ? tp.cljs$core$IFn$_invoke$arity$1(G__37418) : tp.call(null,G__37418));
})(),parent))?null:(function (){
if(cljs.core.contains_QMARK_((function (){var G__37419 = tag;
return (ta.cljs$core$IFn$_invoke$arity$1 ? ta.cljs$core$IFn$_invoke$arity$1(G__37419) : ta.call(null,G__37419));
})(),parent)){
throw (new Error([cljs.core.str(tag),cljs.core.str("already has"),cljs.core.str(parent),cljs.core.str("as ancestor")].join('')));
} else {
}

if(cljs.core.contains_QMARK_((function (){var G__37420 = parent;
return (ta.cljs$core$IFn$_invoke$arity$1 ? ta.cljs$core$IFn$_invoke$arity$1(G__37420) : ta.call(null,G__37420));
})(),tag)){
throw (new Error([cljs.core.str("Cyclic derivation:"),cljs.core.str(parent),cljs.core.str("has"),cljs.core.str(tag),cljs.core.str("as ancestor")].join('')));
} else {
}

return new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,"parents","parents",-2027538891),cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(new cljs.core.Keyword(null,"parents","parents",-2027538891).cljs$core$IFn$_invoke$arity$1(h),tag,cljs.core.conj.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$3(tp,tag,cljs.core.PersistentHashSet.EMPTY),parent)),new cljs.core.Keyword(null,"ancestors","ancestors",-776045424),tf(new cljs.core.Keyword(null,"ancestors","ancestors",-776045424).cljs$core$IFn$_invoke$arity$1(h),tag,td,parent,ta),new cljs.core.Keyword(null,"descendants","descendants",1824886031),tf(new cljs.core.Keyword(null,"descendants","descendants",1824886031).cljs$core$IFn$_invoke$arity$1(h),parent,ta,tag,td)], null);
})()
);
if(cljs.core.truth_(or__24274__auto__)){
return or__24274__auto__;
} else {
return h;
}
});
derive = function(h,tag,parent){
switch(arguments.length){
case 2:
return derive__2.call(this,h,tag);
case 3:
return derive__3.call(this,h,tag,parent);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
derive.cljs$core$IFn$_invoke$arity$2 = derive__2;
derive.cljs$core$IFn$_invoke$arity$3 = derive__3;
return derive;
})()
;
/**
* Removes a parent/child relationship between parent and
* tag. h must be a hierarchy obtained from make-hierarchy, if not
* supplied defaults to, and modifies, the global hierarchy.
*/
cljs.core.underive = (function() {
var underive = null;
var underive__2 = (function (tag,parent){
cljs.core.swap_global_hierarchy_BANG_.cljs$core$IFn$_invoke$arity$variadic(underive,cljs.core.array_seq([tag,parent], 0));

return null;
});
var underive__3 = (function (h,tag,parent){
var parentMap = new cljs.core.Keyword(null,"parents","parents",-2027538891).cljs$core$IFn$_invoke$arity$1(h);
var childsParents = (cljs.core.truth_((function (){var G__37427 = tag;
return (parentMap.cljs$core$IFn$_invoke$arity$1 ? parentMap.cljs$core$IFn$_invoke$arity$1(G__37427) : parentMap.call(null,G__37427));
})())?cljs.core.disj.cljs$core$IFn$_invoke$arity$2((function (){var G__37428 = tag;
return (parentMap.cljs$core$IFn$_invoke$arity$1 ? parentMap.cljs$core$IFn$_invoke$arity$1(G__37428) : parentMap.call(null,G__37428));
})(),parent):cljs.core.PersistentHashSet.EMPTY);
var newParents = (cljs.core.truth_(cljs.core.not_empty(childsParents))?cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(parentMap,tag,childsParents):cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(parentMap,tag));
var deriv_seq = cljs.core.flatten(cljs.core.map.cljs$core$IFn$_invoke$arity$2(((function (parentMap,childsParents,newParents){
return (function (p1__37421_SHARP_){
return cljs.core.cons(cljs.core.first(p1__37421_SHARP_),cljs.core.interpose(cljs.core.first(p1__37421_SHARP_),cljs.core.second(p1__37421_SHARP_)));
});})(parentMap,childsParents,newParents))
,cljs.core.seq(newParents)));
if(cljs.core.contains_QMARK_((function (){var G__37429 = tag;
return (parentMap.cljs$core$IFn$_invoke$arity$1 ? parentMap.cljs$core$IFn$_invoke$arity$1(G__37429) : parentMap.call(null,G__37429));
})(),parent)){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (parentMap,childsParents,newParents,deriv_seq){
return (function (p1__37422_SHARP_,p2__37423_SHARP_){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$3(cljs.core.derive,p1__37422_SHARP_,p2__37423_SHARP_);
});})(parentMap,childsParents,newParents,deriv_seq))
,cljs.core.make_hierarchy(),cljs.core.partition.cljs$core$IFn$_invoke$arity$2((2),deriv_seq));
} else {
return h;
}
});
underive = function(h,tag,parent){
switch(arguments.length){
case 2:
return underive__2.call(this,h,tag);
case 3:
return underive__3.call(this,h,tag,parent);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
underive.cljs$core$IFn$_invoke$arity$2 = underive__2;
underive.cljs$core$IFn$_invoke$arity$3 = underive__3;
return underive;
})()
;
cljs.core.reset_cache = (function reset_cache(method_cache,method_table,cached_hierarchy,hierarchy){
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(method_cache,(function (_){
var G__37432 = method_table;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__37432) : cljs.core.deref.call(null,G__37432));
}));

return cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(cached_hierarchy,(function (_){
var G__37433 = hierarchy;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__37433) : cljs.core.deref.call(null,G__37433));
}));
});
cljs.core.prefers_STAR_ = (function prefers_STAR_(x,y,prefer_table){
var xprefs = (function (){var G__37449 = prefer_table;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__37449) : cljs.core.deref.call(null,G__37449));
})().call(null,x);
var or__24274__auto__ = (cljs.core.truth_((function (){var and__24262__auto__ = xprefs;
if(cljs.core.truth_(and__24262__auto__)){
var G__37451 = y;
return (xprefs.cljs$core$IFn$_invoke$arity$1 ? xprefs.cljs$core$IFn$_invoke$arity$1(G__37451) : xprefs.call(null,G__37451));
} else {
return and__24262__auto__;
}
})())?true:null);
if(cljs.core.truth_(or__24274__auto__)){
return or__24274__auto__;
} else {
var or__24274__auto____$1 = (function (){var ps = cljs.core.parents.cljs$core$IFn$_invoke$arity$1(y);
while(true){
if((cljs.core.count(ps) > (0))){
if(cljs.core.truth_(prefers_STAR_(x,cljs.core.first(ps),prefer_table))){
} else {
}

var G__37452 = cljs.core.rest(ps);
ps = G__37452;
continue;
} else {
return null;
}
break;
}
})();
if(cljs.core.truth_(or__24274__auto____$1)){
return or__24274__auto____$1;
} else {
var or__24274__auto____$2 = (function (){var ps = cljs.core.parents.cljs$core$IFn$_invoke$arity$1(x);
while(true){
if((cljs.core.count(ps) > (0))){
if(cljs.core.truth_(prefers_STAR_(cljs.core.first(ps),y,prefer_table))){
} else {
}

var G__37453 = cljs.core.rest(ps);
ps = G__37453;
continue;
} else {
return null;
}
break;
}
})();
if(cljs.core.truth_(or__24274__auto____$2)){
return or__24274__auto____$2;
} else {
return false;
}
}
}
});
cljs.core.dominates = (function dominates(x,y,prefer_table){
var or__24274__auto__ = cljs.core.prefers_STAR_(x,y,prefer_table);
if(cljs.core.truth_(or__24274__auto__)){
return or__24274__auto__;
} else {
return cljs.core.isa_QMARK_.cljs$core$IFn$_invoke$arity$2(x,y);
}
});
cljs.core.find_and_cache_best_method = (function find_and_cache_best_method(name,dispatch_val,hierarchy,method_table,prefer_table,method_cache,cached_hierarchy){
var best_entry = cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (be,p__37467){
var vec__37468 = p__37467;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__37468,(0),null);
var _ = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__37468,(1),null);
var e = vec__37468;
if(cljs.core.isa_QMARK_.cljs$core$IFn$_invoke$arity$3((function (){var G__37469 = hierarchy;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__37469) : cljs.core.deref.call(null,G__37469));
})(),dispatch_val,k)){
var be2 = (cljs.core.truth_((function (){var or__24274__auto__ = (be == null);
if(or__24274__auto__){
return or__24274__auto__;
} else {
return cljs.core.dominates(k,cljs.core.first(be),prefer_table);
}
})())?e:be);
if(cljs.core.truth_(cljs.core.dominates(cljs.core.first(be2),k,prefer_table))){
} else {
throw (new Error([cljs.core.str("Multiple methods in multimethod '"),cljs.core.str(name),cljs.core.str("' match dispatch value: "),cljs.core.str(dispatch_val),cljs.core.str(" -> "),cljs.core.str(k),cljs.core.str(" and "),cljs.core.str(cljs.core.first(be2)),cljs.core.str(", and neither is preferred")].join('')));
}

return be2;
} else {
return be;
}
}),null,(function (){var G__37470 = method_table;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__37470) : cljs.core.deref.call(null,G__37470));
})());
if(cljs.core.truth_(best_entry)){
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2((function (){var G__37471 = cached_hierarchy;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__37471) : cljs.core.deref.call(null,G__37471));
})(),(function (){var G__37472 = hierarchy;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__37472) : cljs.core.deref.call(null,G__37472));
})())){
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(method_cache,cljs.core.assoc,dispatch_val,cljs.core.second(best_entry));

return cljs.core.second(best_entry);
} else {
cljs.core.reset_cache(method_cache,method_table,cached_hierarchy,hierarchy);

return find_and_cache_best_method(name,dispatch_val,hierarchy,method_table,prefer_table,method_cache,cached_hierarchy);
}
} else {
return null;
}
});

cljs.core.IMultiFn = (function (){var obj37474 = {};
return obj37474;
})();

cljs.core._reset = (function _reset(mf){
if((function (){var and__24262__auto__ = mf;
if(and__24262__auto__){
return mf.cljs$core$IMultiFn$_reset$arity$1;
} else {
return and__24262__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_reset$arity$1(mf);
} else {
var x__24918__auto__ = (((mf == null))?null:mf);
return (function (){var or__24274__auto__ = (cljs.core._reset[(function (){var G__37478 = x__24918__auto__;
return goog.typeOf(G__37478);
})()]);
if(or__24274__auto__){
return or__24274__auto__;
} else {
var or__24274__auto____$1 = (cljs.core._reset["_"]);
if(or__24274__auto____$1){
return or__24274__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-reset",mf);
}
}
})().call(null,mf);
}
});

cljs.core._add_method = (function _add_method(mf,dispatch_val,method){
if((function (){var and__24262__auto__ = mf;
if(and__24262__auto__){
return mf.cljs$core$IMultiFn$_add_method$arity$3;
} else {
return and__24262__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_add_method$arity$3(mf,dispatch_val,method);
} else {
var x__24918__auto__ = (((mf == null))?null:mf);
return (function (){var or__24274__auto__ = (cljs.core._add_method[(function (){var G__37482 = x__24918__auto__;
return goog.typeOf(G__37482);
})()]);
if(or__24274__auto__){
return or__24274__auto__;
} else {
var or__24274__auto____$1 = (cljs.core._add_method["_"]);
if(or__24274__auto____$1){
return or__24274__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-add-method",mf);
}
}
})().call(null,mf,dispatch_val,method);
}
});

cljs.core._remove_method = (function _remove_method(mf,dispatch_val){
if((function (){var and__24262__auto__ = mf;
if(and__24262__auto__){
return mf.cljs$core$IMultiFn$_remove_method$arity$2;
} else {
return and__24262__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_remove_method$arity$2(mf,dispatch_val);
} else {
var x__24918__auto__ = (((mf == null))?null:mf);
return (function (){var or__24274__auto__ = (cljs.core._remove_method[(function (){var G__37486 = x__24918__auto__;
return goog.typeOf(G__37486);
})()]);
if(or__24274__auto__){
return or__24274__auto__;
} else {
var or__24274__auto____$1 = (cljs.core._remove_method["_"]);
if(or__24274__auto____$1){
return or__24274__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-remove-method",mf);
}
}
})().call(null,mf,dispatch_val);
}
});

cljs.core._prefer_method = (function _prefer_method(mf,dispatch_val,dispatch_val_y){
if((function (){var and__24262__auto__ = mf;
if(and__24262__auto__){
return mf.cljs$core$IMultiFn$_prefer_method$arity$3;
} else {
return and__24262__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_prefer_method$arity$3(mf,dispatch_val,dispatch_val_y);
} else {
var x__24918__auto__ = (((mf == null))?null:mf);
return (function (){var or__24274__auto__ = (cljs.core._prefer_method[(function (){var G__37490 = x__24918__auto__;
return goog.typeOf(G__37490);
})()]);
if(or__24274__auto__){
return or__24274__auto__;
} else {
var or__24274__auto____$1 = (cljs.core._prefer_method["_"]);
if(or__24274__auto____$1){
return or__24274__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-prefer-method",mf);
}
}
})().call(null,mf,dispatch_val,dispatch_val_y);
}
});

cljs.core._get_method = (function _get_method(mf,dispatch_val){
if((function (){var and__24262__auto__ = mf;
if(and__24262__auto__){
return mf.cljs$core$IMultiFn$_get_method$arity$2;
} else {
return and__24262__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_get_method$arity$2(mf,dispatch_val);
} else {
var x__24918__auto__ = (((mf == null))?null:mf);
return (function (){var or__24274__auto__ = (cljs.core._get_method[(function (){var G__37494 = x__24918__auto__;
return goog.typeOf(G__37494);
})()]);
if(or__24274__auto__){
return or__24274__auto__;
} else {
var or__24274__auto____$1 = (cljs.core._get_method["_"]);
if(or__24274__auto____$1){
return or__24274__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-get-method",mf);
}
}
})().call(null,mf,dispatch_val);
}
});

cljs.core._methods = (function _methods(mf){
if((function (){var and__24262__auto__ = mf;
if(and__24262__auto__){
return mf.cljs$core$IMultiFn$_methods$arity$1;
} else {
return and__24262__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_methods$arity$1(mf);
} else {
var x__24918__auto__ = (((mf == null))?null:mf);
return (function (){var or__24274__auto__ = (cljs.core._methods[(function (){var G__37498 = x__24918__auto__;
return goog.typeOf(G__37498);
})()]);
if(or__24274__auto__){
return or__24274__auto__;
} else {
var or__24274__auto____$1 = (cljs.core._methods["_"]);
if(or__24274__auto____$1){
return or__24274__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-methods",mf);
}
}
})().call(null,mf);
}
});

cljs.core._prefers = (function _prefers(mf){
if((function (){var and__24262__auto__ = mf;
if(and__24262__auto__){
return mf.cljs$core$IMultiFn$_prefers$arity$1;
} else {
return and__24262__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_prefers$arity$1(mf);
} else {
var x__24918__auto__ = (((mf == null))?null:mf);
return (function (){var or__24274__auto__ = (cljs.core._prefers[(function (){var G__37502 = x__24918__auto__;
return goog.typeOf(G__37502);
})()]);
if(or__24274__auto__){
return or__24274__auto__;
} else {
var or__24274__auto____$1 = (cljs.core._prefers["_"]);
if(or__24274__auto____$1){
return or__24274__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-prefers",mf);
}
}
})().call(null,mf);
}
});

cljs.core.throw_no_method_error = (function throw_no_method_error(name,dispatch_val){
throw (new Error([cljs.core.str("No method in multimethod '"),cljs.core.str(name),cljs.core.str("' for dispatch value: "),cljs.core.str(dispatch_val)].join('')));
});

/**
* @constructor
*/
cljs.core.MultiFn = (function (name,dispatch_fn,default_dispatch_val,hierarchy,method_table,prefer_table,method_cache,cached_hierarchy){
this.name = name;
this.dispatch_fn = dispatch_fn;
this.default_dispatch_val = default_dispatch_val;
this.hierarchy = hierarchy;
this.method_table = method_table;
this.prefer_table = prefer_table;
this.method_cache = method_cache;
this.cached_hierarchy = cached_hierarchy;
this.cljs$lang$protocol_mask$partition0$ = 4194305;
this.cljs$lang$protocol_mask$partition1$ = 4352;
})
cljs.core.MultiFn.prototype.cljs$core$IHash$_hash$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
var G__37504 = this$__$1;
return goog.getUid(G__37504);
});

cljs.core.MultiFn.prototype.cljs$core$INamed$_name$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return cljs.core._name(self__.name);
});

cljs.core.MultiFn.prototype.cljs$core$INamed$_namespace$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return cljs.core._namespace(self__.name);
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_reset$arity$1 = (function (mf){
var self__ = this;
var mf__$1 = this;
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.method_table,((function (mf__$1){
return (function (mf__$2){
return cljs.core.PersistentArrayMap.EMPTY;
});})(mf__$1))
);

cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.method_cache,((function (mf__$1){
return (function (mf__$2){
return cljs.core.PersistentArrayMap.EMPTY;
});})(mf__$1))
);

cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.prefer_table,((function (mf__$1){
return (function (mf__$2){
return cljs.core.PersistentArrayMap.EMPTY;
});})(mf__$1))
);

cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.cached_hierarchy,((function (mf__$1){
return (function (mf__$2){
return null;
});})(mf__$1))
);

return mf__$1;
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_add_method$arity$3 = (function (mf,dispatch_val,method){
var self__ = this;
var mf__$1 = this;
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(self__.method_table,cljs.core.assoc,dispatch_val,method);

cljs.core.reset_cache(self__.method_cache,self__.method_table,self__.cached_hierarchy,self__.hierarchy);

return mf__$1;
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_remove_method$arity$2 = (function (mf,dispatch_val){
var self__ = this;
var mf__$1 = this;
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$3(self__.method_table,cljs.core.dissoc,dispatch_val);

cljs.core.reset_cache(self__.method_cache,self__.method_table,self__.cached_hierarchy,self__.hierarchy);

return mf__$1;
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_get_method$arity$2 = (function (mf,dispatch_val){
var self__ = this;
var mf__$1 = this;
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2((function (){var G__37505 = self__.cached_hierarchy;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__37505) : cljs.core.deref.call(null,G__37505));
})(),(function (){var G__37506 = self__.hierarchy;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__37506) : cljs.core.deref.call(null,G__37506));
})())){
} else {
cljs.core.reset_cache(self__.method_cache,self__.method_table,self__.cached_hierarchy,self__.hierarchy);
}

var temp__4124__auto__ = (function (){var G__37507 = self__.method_cache;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__37507) : cljs.core.deref.call(null,G__37507));
})().call(null,dispatch_val);
if(cljs.core.truth_(temp__4124__auto__)){
var target_fn = temp__4124__auto__;
return target_fn;
} else {
var temp__4124__auto____$1 = cljs.core.find_and_cache_best_method(self__.name,dispatch_val,self__.hierarchy,self__.method_table,self__.prefer_table,self__.method_cache,self__.cached_hierarchy);
if(cljs.core.truth_(temp__4124__auto____$1)){
var target_fn = temp__4124__auto____$1;
return target_fn;
} else {
return (function (){var G__37508 = self__.method_table;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__37508) : cljs.core.deref.call(null,G__37508));
})().call(null,self__.default_dispatch_val);
}
}
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_prefer_method$arity$3 = (function (mf,dispatch_val_x,dispatch_val_y){
var self__ = this;
var mf__$1 = this;
if(cljs.core.truth_(cljs.core.prefers_STAR_(dispatch_val_x,dispatch_val_y,self__.prefer_table))){
throw (new Error([cljs.core.str("Preference conflict in multimethod '"),cljs.core.str(self__.name),cljs.core.str("': "),cljs.core.str(dispatch_val_y),cljs.core.str(" is already preferred to "),cljs.core.str(dispatch_val_x)].join('')));
} else {
}

cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.prefer_table,((function (mf__$1){
return (function (old){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(old,dispatch_val_x,cljs.core.conj.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$3(old,dispatch_val_x,cljs.core.PersistentHashSet.EMPTY),dispatch_val_y));
});})(mf__$1))
);

return cljs.core.reset_cache(self__.method_cache,self__.method_table,self__.cached_hierarchy,self__.hierarchy);
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_methods$arity$1 = (function (mf){
var self__ = this;
var mf__$1 = this;
var G__37509 = self__.method_table;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__37509) : cljs.core.deref.call(null,G__37509));
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_prefers$arity$1 = (function (mf){
var self__ = this;
var mf__$1 = this;
var G__37510 = self__.prefer_table;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__37510) : cljs.core.deref.call(null,G__37510));
});

cljs.core.MultiFn.prototype.call = (function() {
var G__38351 = null;
var G__38351__1 = (function (self__){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$0 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$0() : self__.dispatch_fn.call(null));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

return (target_fn.cljs$core$IFn$_invoke$arity$0 ? target_fn.cljs$core$IFn$_invoke$arity$0() : target_fn.call(null));
});
var G__38351__2 = (function (self__,a){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__37511 = a;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$1 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$1(G__37511) : self__.dispatch_fn.call(null,G__37511));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__37512 = a;
return (target_fn.cljs$core$IFn$_invoke$arity$1 ? target_fn.cljs$core$IFn$_invoke$arity$1(G__37512) : target_fn.call(null,G__37512));
});
var G__38351__3 = (function (self__,a,b){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__37513 = a;
var G__37514 = b;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$2 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$2(G__37513,G__37514) : self__.dispatch_fn.call(null,G__37513,G__37514));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__37515 = a;
var G__37516 = b;
return (target_fn.cljs$core$IFn$_invoke$arity$2 ? target_fn.cljs$core$IFn$_invoke$arity$2(G__37515,G__37516) : target_fn.call(null,G__37515,G__37516));
});
var G__38351__4 = (function (self__,a,b,c){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__37517 = a;
var G__37518 = b;
var G__37519 = c;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$3 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$3(G__37517,G__37518,G__37519) : self__.dispatch_fn.call(null,G__37517,G__37518,G__37519));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__37520 = a;
var G__37521 = b;
var G__37522 = c;
return (target_fn.cljs$core$IFn$_invoke$arity$3 ? target_fn.cljs$core$IFn$_invoke$arity$3(G__37520,G__37521,G__37522) : target_fn.call(null,G__37520,G__37521,G__37522));
});
var G__38351__5 = (function (self__,a,b,c,d){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__37523 = a;
var G__37524 = b;
var G__37525 = c;
var G__37526 = d;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$4 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$4(G__37523,G__37524,G__37525,G__37526) : self__.dispatch_fn.call(null,G__37523,G__37524,G__37525,G__37526));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__37527 = a;
var G__37528 = b;
var G__37529 = c;
var G__37530 = d;
return (target_fn.cljs$core$IFn$_invoke$arity$4 ? target_fn.cljs$core$IFn$_invoke$arity$4(G__37527,G__37528,G__37529,G__37530) : target_fn.call(null,G__37527,G__37528,G__37529,G__37530));
});
var G__38351__6 = (function (self__,a,b,c,d,e){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__37531 = a;
var G__37532 = b;
var G__37533 = c;
var G__37534 = d;
var G__37535 = e;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$5 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$5(G__37531,G__37532,G__37533,G__37534,G__37535) : self__.dispatch_fn.call(null,G__37531,G__37532,G__37533,G__37534,G__37535));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__37536 = a;
var G__37537 = b;
var G__37538 = c;
var G__37539 = d;
var G__37540 = e;
return (target_fn.cljs$core$IFn$_invoke$arity$5 ? target_fn.cljs$core$IFn$_invoke$arity$5(G__37536,G__37537,G__37538,G__37539,G__37540) : target_fn.call(null,G__37536,G__37537,G__37538,G__37539,G__37540));
});
var G__38351__7 = (function (self__,a,b,c,d,e,f){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__37541 = a;
var G__37542 = b;
var G__37543 = c;
var G__37544 = d;
var G__37545 = e;
var G__37546 = f;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$6 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$6(G__37541,G__37542,G__37543,G__37544,G__37545,G__37546) : self__.dispatch_fn.call(null,G__37541,G__37542,G__37543,G__37544,G__37545,G__37546));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__37547 = a;
var G__37548 = b;
var G__37549 = c;
var G__37550 = d;
var G__37551 = e;
var G__37552 = f;
return (target_fn.cljs$core$IFn$_invoke$arity$6 ? target_fn.cljs$core$IFn$_invoke$arity$6(G__37547,G__37548,G__37549,G__37550,G__37551,G__37552) : target_fn.call(null,G__37547,G__37548,G__37549,G__37550,G__37551,G__37552));
});
var G__38351__8 = (function (self__,a,b,c,d,e,f,g){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__37553 = a;
var G__37554 = b;
var G__37555 = c;
var G__37556 = d;
var G__37557 = e;
var G__37558 = f;
var G__37559 = g;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$7 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$7(G__37553,G__37554,G__37555,G__37556,G__37557,G__37558,G__37559) : self__.dispatch_fn.call(null,G__37553,G__37554,G__37555,G__37556,G__37557,G__37558,G__37559));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__37560 = a;
var G__37561 = b;
var G__37562 = c;
var G__37563 = d;
var G__37564 = e;
var G__37565 = f;
var G__37566 = g;
return (target_fn.cljs$core$IFn$_invoke$arity$7 ? target_fn.cljs$core$IFn$_invoke$arity$7(G__37560,G__37561,G__37562,G__37563,G__37564,G__37565,G__37566) : target_fn.call(null,G__37560,G__37561,G__37562,G__37563,G__37564,G__37565,G__37566));
});
var G__38351__9 = (function (self__,a,b,c,d,e,f,g,h){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__37567 = a;
var G__37568 = b;
var G__37569 = c;
var G__37570 = d;
var G__37571 = e;
var G__37572 = f;
var G__37573 = g;
var G__37574 = h;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$8 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$8(G__37567,G__37568,G__37569,G__37570,G__37571,G__37572,G__37573,G__37574) : self__.dispatch_fn.call(null,G__37567,G__37568,G__37569,G__37570,G__37571,G__37572,G__37573,G__37574));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__37575 = a;
var G__37576 = b;
var G__37577 = c;
var G__37578 = d;
var G__37579 = e;
var G__37580 = f;
var G__37581 = g;
var G__37582 = h;
return (target_fn.cljs$core$IFn$_invoke$arity$8 ? target_fn.cljs$core$IFn$_invoke$arity$8(G__37575,G__37576,G__37577,G__37578,G__37579,G__37580,G__37581,G__37582) : target_fn.call(null,G__37575,G__37576,G__37577,G__37578,G__37579,G__37580,G__37581,G__37582));
});
var G__38351__10 = (function (self__,a,b,c,d,e,f,g,h,i){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__37583 = a;
var G__37584 = b;
var G__37585 = c;
var G__37586 = d;
var G__37587 = e;
var G__37588 = f;
var G__37589 = g;
var G__37590 = h;
var G__37591 = i;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$9 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$9(G__37583,G__37584,G__37585,G__37586,G__37587,G__37588,G__37589,G__37590,G__37591) : self__.dispatch_fn.call(null,G__37583,G__37584,G__37585,G__37586,G__37587,G__37588,G__37589,G__37590,G__37591));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__37592 = a;
var G__37593 = b;
var G__37594 = c;
var G__37595 = d;
var G__37596 = e;
var G__37597 = f;
var G__37598 = g;
var G__37599 = h;
var G__37600 = i;
return (target_fn.cljs$core$IFn$_invoke$arity$9 ? target_fn.cljs$core$IFn$_invoke$arity$9(G__37592,G__37593,G__37594,G__37595,G__37596,G__37597,G__37598,G__37599,G__37600) : target_fn.call(null,G__37592,G__37593,G__37594,G__37595,G__37596,G__37597,G__37598,G__37599,G__37600));
});
var G__38351__11 = (function (self__,a,b,c,d,e,f,g,h,i,j){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__37601 = a;
var G__37602 = b;
var G__37603 = c;
var G__37604 = d;
var G__37605 = e;
var G__37606 = f;
var G__37607 = g;
var G__37608 = h;
var G__37609 = i;
var G__37610 = j;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$10 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$10(G__37601,G__37602,G__37603,G__37604,G__37605,G__37606,G__37607,G__37608,G__37609,G__37610) : self__.dispatch_fn.call(null,G__37601,G__37602,G__37603,G__37604,G__37605,G__37606,G__37607,G__37608,G__37609,G__37610));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__37611 = a;
var G__37612 = b;
var G__37613 = c;
var G__37614 = d;
var G__37615 = e;
var G__37616 = f;
var G__37617 = g;
var G__37618 = h;
var G__37619 = i;
var G__37620 = j;
return (target_fn.cljs$core$IFn$_invoke$arity$10 ? target_fn.cljs$core$IFn$_invoke$arity$10(G__37611,G__37612,G__37613,G__37614,G__37615,G__37616,G__37617,G__37618,G__37619,G__37620) : target_fn.call(null,G__37611,G__37612,G__37613,G__37614,G__37615,G__37616,G__37617,G__37618,G__37619,G__37620));
});
var G__38351__12 = (function (self__,a,b,c,d,e,f,g,h,i,j,k){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__37621 = a;
var G__37622 = b;
var G__37623 = c;
var G__37624 = d;
var G__37625 = e;
var G__37626 = f;
var G__37627 = g;
var G__37628 = h;
var G__37629 = i;
var G__37630 = j;
var G__37631 = k;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$11 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$11(G__37621,G__37622,G__37623,G__37624,G__37625,G__37626,G__37627,G__37628,G__37629,G__37630,G__37631) : self__.dispatch_fn.call(null,G__37621,G__37622,G__37623,G__37624,G__37625,G__37626,G__37627,G__37628,G__37629,G__37630,G__37631));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__37632 = a;
var G__37633 = b;
var G__37634 = c;
var G__37635 = d;
var G__37636 = e;
var G__37637 = f;
var G__37638 = g;
var G__37639 = h;
var G__37640 = i;
var G__37641 = j;
var G__37642 = k;
return (target_fn.cljs$core$IFn$_invoke$arity$11 ? target_fn.cljs$core$IFn$_invoke$arity$11(G__37632,G__37633,G__37634,G__37635,G__37636,G__37637,G__37638,G__37639,G__37640,G__37641,G__37642) : target_fn.call(null,G__37632,G__37633,G__37634,G__37635,G__37636,G__37637,G__37638,G__37639,G__37640,G__37641,G__37642));
});
var G__38351__13 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__37643 = a;
var G__37644 = b;
var G__37645 = c;
var G__37646 = d;
var G__37647 = e;
var G__37648 = f;
var G__37649 = g;
var G__37650 = h;
var G__37651 = i;
var G__37652 = j;
var G__37653 = k;
var G__37654 = l;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$12 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$12(G__37643,G__37644,G__37645,G__37646,G__37647,G__37648,G__37649,G__37650,G__37651,G__37652,G__37653,G__37654) : self__.dispatch_fn.call(null,G__37643,G__37644,G__37645,G__37646,G__37647,G__37648,G__37649,G__37650,G__37651,G__37652,G__37653,G__37654));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__37655 = a;
var G__37656 = b;
var G__37657 = c;
var G__37658 = d;
var G__37659 = e;
var G__37660 = f;
var G__37661 = g;
var G__37662 = h;
var G__37663 = i;
var G__37664 = j;
var G__37665 = k;
var G__37666 = l;
return (target_fn.cljs$core$IFn$_invoke$arity$12 ? target_fn.cljs$core$IFn$_invoke$arity$12(G__37655,G__37656,G__37657,G__37658,G__37659,G__37660,G__37661,G__37662,G__37663,G__37664,G__37665,G__37666) : target_fn.call(null,G__37655,G__37656,G__37657,G__37658,G__37659,G__37660,G__37661,G__37662,G__37663,G__37664,G__37665,G__37666));
});
var G__38351__14 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__37667 = a;
var G__37668 = b;
var G__37669 = c;
var G__37670 = d;
var G__37671 = e;
var G__37672 = f;
var G__37673 = g;
var G__37674 = h;
var G__37675 = i;
var G__37676 = j;
var G__37677 = k;
var G__37678 = l;
var G__37679 = m;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$13 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$13(G__37667,G__37668,G__37669,G__37670,G__37671,G__37672,G__37673,G__37674,G__37675,G__37676,G__37677,G__37678,G__37679) : self__.dispatch_fn.call(null,G__37667,G__37668,G__37669,G__37670,G__37671,G__37672,G__37673,G__37674,G__37675,G__37676,G__37677,G__37678,G__37679));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__37680 = a;
var G__37681 = b;
var G__37682 = c;
var G__37683 = d;
var G__37684 = e;
var G__37685 = f;
var G__37686 = g;
var G__37687 = h;
var G__37688 = i;
var G__37689 = j;
var G__37690 = k;
var G__37691 = l;
var G__37692 = m;
return (target_fn.cljs$core$IFn$_invoke$arity$13 ? target_fn.cljs$core$IFn$_invoke$arity$13(G__37680,G__37681,G__37682,G__37683,G__37684,G__37685,G__37686,G__37687,G__37688,G__37689,G__37690,G__37691,G__37692) : target_fn.call(null,G__37680,G__37681,G__37682,G__37683,G__37684,G__37685,G__37686,G__37687,G__37688,G__37689,G__37690,G__37691,G__37692));
});
var G__38351__15 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__37693 = a;
var G__37694 = b;
var G__37695 = c;
var G__37696 = d;
var G__37697 = e;
var G__37698 = f;
var G__37699 = g;
var G__37700 = h;
var G__37701 = i;
var G__37702 = j;
var G__37703 = k;
var G__37704 = l;
var G__37705 = m;
var G__37706 = n;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$14 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$14(G__37693,G__37694,G__37695,G__37696,G__37697,G__37698,G__37699,G__37700,G__37701,G__37702,G__37703,G__37704,G__37705,G__37706) : self__.dispatch_fn.call(null,G__37693,G__37694,G__37695,G__37696,G__37697,G__37698,G__37699,G__37700,G__37701,G__37702,G__37703,G__37704,G__37705,G__37706));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__37707 = a;
var G__37708 = b;
var G__37709 = c;
var G__37710 = d;
var G__37711 = e;
var G__37712 = f;
var G__37713 = g;
var G__37714 = h;
var G__37715 = i;
var G__37716 = j;
var G__37717 = k;
var G__37718 = l;
var G__37719 = m;
var G__37720 = n;
return (target_fn.cljs$core$IFn$_invoke$arity$14 ? target_fn.cljs$core$IFn$_invoke$arity$14(G__37707,G__37708,G__37709,G__37710,G__37711,G__37712,G__37713,G__37714,G__37715,G__37716,G__37717,G__37718,G__37719,G__37720) : target_fn.call(null,G__37707,G__37708,G__37709,G__37710,G__37711,G__37712,G__37713,G__37714,G__37715,G__37716,G__37717,G__37718,G__37719,G__37720));
});
var G__38351__16 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__37721 = a;
var G__37722 = b;
var G__37723 = c;
var G__37724 = d;
var G__37725 = e;
var G__37726 = f;
var G__37727 = g;
var G__37728 = h;
var G__37729 = i;
var G__37730 = j;
var G__37731 = k;
var G__37732 = l;
var G__37733 = m;
var G__37734 = n;
var G__37735 = o;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$15 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$15(G__37721,G__37722,G__37723,G__37724,G__37725,G__37726,G__37727,G__37728,G__37729,G__37730,G__37731,G__37732,G__37733,G__37734,G__37735) : self__.dispatch_fn.call(null,G__37721,G__37722,G__37723,G__37724,G__37725,G__37726,G__37727,G__37728,G__37729,G__37730,G__37731,G__37732,G__37733,G__37734,G__37735));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__37736 = a;
var G__37737 = b;
var G__37738 = c;
var G__37739 = d;
var G__37740 = e;
var G__37741 = f;
var G__37742 = g;
var G__37743 = h;
var G__37744 = i;
var G__37745 = j;
var G__37746 = k;
var G__37747 = l;
var G__37748 = m;
var G__37749 = n;
var G__37750 = o;
return (target_fn.cljs$core$IFn$_invoke$arity$15 ? target_fn.cljs$core$IFn$_invoke$arity$15(G__37736,G__37737,G__37738,G__37739,G__37740,G__37741,G__37742,G__37743,G__37744,G__37745,G__37746,G__37747,G__37748,G__37749,G__37750) : target_fn.call(null,G__37736,G__37737,G__37738,G__37739,G__37740,G__37741,G__37742,G__37743,G__37744,G__37745,G__37746,G__37747,G__37748,G__37749,G__37750));
});
var G__38351__17 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__37751 = a;
var G__37752 = b;
var G__37753 = c;
var G__37754 = d;
var G__37755 = e;
var G__37756 = f;
var G__37757 = g;
var G__37758 = h;
var G__37759 = i;
var G__37760 = j;
var G__37761 = k;
var G__37762 = l;
var G__37763 = m;
var G__37764 = n;
var G__37765 = o;
var G__37766 = p;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$16 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$16(G__37751,G__37752,G__37753,G__37754,G__37755,G__37756,G__37757,G__37758,G__37759,G__37760,G__37761,G__37762,G__37763,G__37764,G__37765,G__37766) : self__.dispatch_fn.call(null,G__37751,G__37752,G__37753,G__37754,G__37755,G__37756,G__37757,G__37758,G__37759,G__37760,G__37761,G__37762,G__37763,G__37764,G__37765,G__37766));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__37767 = a;
var G__37768 = b;
var G__37769 = c;
var G__37770 = d;
var G__37771 = e;
var G__37772 = f;
var G__37773 = g;
var G__37774 = h;
var G__37775 = i;
var G__37776 = j;
var G__37777 = k;
var G__37778 = l;
var G__37779 = m;
var G__37780 = n;
var G__37781 = o;
var G__37782 = p;
return (target_fn.cljs$core$IFn$_invoke$arity$16 ? target_fn.cljs$core$IFn$_invoke$arity$16(G__37767,G__37768,G__37769,G__37770,G__37771,G__37772,G__37773,G__37774,G__37775,G__37776,G__37777,G__37778,G__37779,G__37780,G__37781,G__37782) : target_fn.call(null,G__37767,G__37768,G__37769,G__37770,G__37771,G__37772,G__37773,G__37774,G__37775,G__37776,G__37777,G__37778,G__37779,G__37780,G__37781,G__37782));
});
var G__38351__18 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__37783 = a;
var G__37784 = b;
var G__37785 = c;
var G__37786 = d;
var G__37787 = e;
var G__37788 = f;
var G__37789 = g;
var G__37790 = h;
var G__37791 = i;
var G__37792 = j;
var G__37793 = k;
var G__37794 = l;
var G__37795 = m;
var G__37796 = n;
var G__37797 = o;
var G__37798 = p;
var G__37799 = q;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$17 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$17(G__37783,G__37784,G__37785,G__37786,G__37787,G__37788,G__37789,G__37790,G__37791,G__37792,G__37793,G__37794,G__37795,G__37796,G__37797,G__37798,G__37799) : self__.dispatch_fn.call(null,G__37783,G__37784,G__37785,G__37786,G__37787,G__37788,G__37789,G__37790,G__37791,G__37792,G__37793,G__37794,G__37795,G__37796,G__37797,G__37798,G__37799));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__37800 = a;
var G__37801 = b;
var G__37802 = c;
var G__37803 = d;
var G__37804 = e;
var G__37805 = f;
var G__37806 = g;
var G__37807 = h;
var G__37808 = i;
var G__37809 = j;
var G__37810 = k;
var G__37811 = l;
var G__37812 = m;
var G__37813 = n;
var G__37814 = o;
var G__37815 = p;
var G__37816 = q;
return (target_fn.cljs$core$IFn$_invoke$arity$17 ? target_fn.cljs$core$IFn$_invoke$arity$17(G__37800,G__37801,G__37802,G__37803,G__37804,G__37805,G__37806,G__37807,G__37808,G__37809,G__37810,G__37811,G__37812,G__37813,G__37814,G__37815,G__37816) : target_fn.call(null,G__37800,G__37801,G__37802,G__37803,G__37804,G__37805,G__37806,G__37807,G__37808,G__37809,G__37810,G__37811,G__37812,G__37813,G__37814,G__37815,G__37816));
});
var G__38351__19 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__37817 = a;
var G__37818 = b;
var G__37819 = c;
var G__37820 = d;
var G__37821 = e;
var G__37822 = f;
var G__37823 = g;
var G__37824 = h;
var G__37825 = i;
var G__37826 = j;
var G__37827 = k;
var G__37828 = l;
var G__37829 = m;
var G__37830 = n;
var G__37831 = o;
var G__37832 = p;
var G__37833 = q;
var G__37834 = r;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$18 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$18(G__37817,G__37818,G__37819,G__37820,G__37821,G__37822,G__37823,G__37824,G__37825,G__37826,G__37827,G__37828,G__37829,G__37830,G__37831,G__37832,G__37833,G__37834) : self__.dispatch_fn.call(null,G__37817,G__37818,G__37819,G__37820,G__37821,G__37822,G__37823,G__37824,G__37825,G__37826,G__37827,G__37828,G__37829,G__37830,G__37831,G__37832,G__37833,G__37834));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__37835 = a;
var G__37836 = b;
var G__37837 = c;
var G__37838 = d;
var G__37839 = e;
var G__37840 = f;
var G__37841 = g;
var G__37842 = h;
var G__37843 = i;
var G__37844 = j;
var G__37845 = k;
var G__37846 = l;
var G__37847 = m;
var G__37848 = n;
var G__37849 = o;
var G__37850 = p;
var G__37851 = q;
var G__37852 = r;
return (target_fn.cljs$core$IFn$_invoke$arity$18 ? target_fn.cljs$core$IFn$_invoke$arity$18(G__37835,G__37836,G__37837,G__37838,G__37839,G__37840,G__37841,G__37842,G__37843,G__37844,G__37845,G__37846,G__37847,G__37848,G__37849,G__37850,G__37851,G__37852) : target_fn.call(null,G__37835,G__37836,G__37837,G__37838,G__37839,G__37840,G__37841,G__37842,G__37843,G__37844,G__37845,G__37846,G__37847,G__37848,G__37849,G__37850,G__37851,G__37852));
});
var G__38351__20 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__37853 = a;
var G__37854 = b;
var G__37855 = c;
var G__37856 = d;
var G__37857 = e;
var G__37858 = f;
var G__37859 = g;
var G__37860 = h;
var G__37861 = i;
var G__37862 = j;
var G__37863 = k;
var G__37864 = l;
var G__37865 = m;
var G__37866 = n;
var G__37867 = o;
var G__37868 = p;
var G__37869 = q;
var G__37870 = r;
var G__37871 = s;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$19 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$19(G__37853,G__37854,G__37855,G__37856,G__37857,G__37858,G__37859,G__37860,G__37861,G__37862,G__37863,G__37864,G__37865,G__37866,G__37867,G__37868,G__37869,G__37870,G__37871) : self__.dispatch_fn.call(null,G__37853,G__37854,G__37855,G__37856,G__37857,G__37858,G__37859,G__37860,G__37861,G__37862,G__37863,G__37864,G__37865,G__37866,G__37867,G__37868,G__37869,G__37870,G__37871));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__37872 = a;
var G__37873 = b;
var G__37874 = c;
var G__37875 = d;
var G__37876 = e;
var G__37877 = f;
var G__37878 = g;
var G__37879 = h;
var G__37880 = i;
var G__37881 = j;
var G__37882 = k;
var G__37883 = l;
var G__37884 = m;
var G__37885 = n;
var G__37886 = o;
var G__37887 = p;
var G__37888 = q;
var G__37889 = r;
var G__37890 = s;
return (target_fn.cljs$core$IFn$_invoke$arity$19 ? target_fn.cljs$core$IFn$_invoke$arity$19(G__37872,G__37873,G__37874,G__37875,G__37876,G__37877,G__37878,G__37879,G__37880,G__37881,G__37882,G__37883,G__37884,G__37885,G__37886,G__37887,G__37888,G__37889,G__37890) : target_fn.call(null,G__37872,G__37873,G__37874,G__37875,G__37876,G__37877,G__37878,G__37879,G__37880,G__37881,G__37882,G__37883,G__37884,G__37885,G__37886,G__37887,G__37888,G__37889,G__37890));
});
var G__38351__21 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__37891 = a;
var G__37892 = b;
var G__37893 = c;
var G__37894 = d;
var G__37895 = e;
var G__37896 = f;
var G__37897 = g;
var G__37898 = h;
var G__37899 = i;
var G__37900 = j;
var G__37901 = k;
var G__37902 = l;
var G__37903 = m;
var G__37904 = n;
var G__37905 = o;
var G__37906 = p;
var G__37907 = q;
var G__37908 = r;
var G__37909 = s;
var G__37910 = t;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$20 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$20(G__37891,G__37892,G__37893,G__37894,G__37895,G__37896,G__37897,G__37898,G__37899,G__37900,G__37901,G__37902,G__37903,G__37904,G__37905,G__37906,G__37907,G__37908,G__37909,G__37910) : self__.dispatch_fn.call(null,G__37891,G__37892,G__37893,G__37894,G__37895,G__37896,G__37897,G__37898,G__37899,G__37900,G__37901,G__37902,G__37903,G__37904,G__37905,G__37906,G__37907,G__37908,G__37909,G__37910));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__37911 = a;
var G__37912 = b;
var G__37913 = c;
var G__37914 = d;
var G__37915 = e;
var G__37916 = f;
var G__37917 = g;
var G__37918 = h;
var G__37919 = i;
var G__37920 = j;
var G__37921 = k;
var G__37922 = l;
var G__37923 = m;
var G__37924 = n;
var G__37925 = o;
var G__37926 = p;
var G__37927 = q;
var G__37928 = r;
var G__37929 = s;
var G__37930 = t;
return (target_fn.cljs$core$IFn$_invoke$arity$20 ? target_fn.cljs$core$IFn$_invoke$arity$20(G__37911,G__37912,G__37913,G__37914,G__37915,G__37916,G__37917,G__37918,G__37919,G__37920,G__37921,G__37922,G__37923,G__37924,G__37925,G__37926,G__37927,G__37928,G__37929,G__37930) : target_fn.call(null,G__37911,G__37912,G__37913,G__37914,G__37915,G__37916,G__37917,G__37918,G__37919,G__37920,G__37921,G__37922,G__37923,G__37924,G__37925,G__37926,G__37927,G__37928,G__37929,G__37930));
});
var G__38351__22 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(self__.dispatch_fn,a,b,c,d,cljs.core.array_seq([e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest], 0));
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(target_fn,a,b,c,d,cljs.core.array_seq([e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest], 0));
});
G__38351 = function(self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
switch(arguments.length){
case 1:
return G__38351__1.call(this,self__);
case 2:
return G__38351__2.call(this,self__,a);
case 3:
return G__38351__3.call(this,self__,a,b);
case 4:
return G__38351__4.call(this,self__,a,b,c);
case 5:
return G__38351__5.call(this,self__,a,b,c,d);
case 6:
return G__38351__6.call(this,self__,a,b,c,d,e);
case 7:
return G__38351__7.call(this,self__,a,b,c,d,e,f);
case 8:
return G__38351__8.call(this,self__,a,b,c,d,e,f,g);
case 9:
return G__38351__9.call(this,self__,a,b,c,d,e,f,g,h);
case 10:
return G__38351__10.call(this,self__,a,b,c,d,e,f,g,h,i);
case 11:
return G__38351__11.call(this,self__,a,b,c,d,e,f,g,h,i,j);
case 12:
return G__38351__12.call(this,self__,a,b,c,d,e,f,g,h,i,j,k);
case 13:
return G__38351__13.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l);
case 14:
return G__38351__14.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m);
case 15:
return G__38351__15.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
case 16:
return G__38351__16.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
case 17:
return G__38351__17.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
case 18:
return G__38351__18.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
case 19:
return G__38351__19.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
case 20:
return G__38351__20.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
case 21:
return G__38351__21.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
case 22:
return G__38351__22.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__38351.cljs$core$IFn$_invoke$arity$1 = G__38351__1;
G__38351.cljs$core$IFn$_invoke$arity$2 = G__38351__2;
G__38351.cljs$core$IFn$_invoke$arity$3 = G__38351__3;
G__38351.cljs$core$IFn$_invoke$arity$4 = G__38351__4;
G__38351.cljs$core$IFn$_invoke$arity$5 = G__38351__5;
G__38351.cljs$core$IFn$_invoke$arity$6 = G__38351__6;
G__38351.cljs$core$IFn$_invoke$arity$7 = G__38351__7;
G__38351.cljs$core$IFn$_invoke$arity$8 = G__38351__8;
G__38351.cljs$core$IFn$_invoke$arity$9 = G__38351__9;
G__38351.cljs$core$IFn$_invoke$arity$10 = G__38351__10;
G__38351.cljs$core$IFn$_invoke$arity$11 = G__38351__11;
G__38351.cljs$core$IFn$_invoke$arity$12 = G__38351__12;
G__38351.cljs$core$IFn$_invoke$arity$13 = G__38351__13;
G__38351.cljs$core$IFn$_invoke$arity$14 = G__38351__14;
G__38351.cljs$core$IFn$_invoke$arity$15 = G__38351__15;
G__38351.cljs$core$IFn$_invoke$arity$16 = G__38351__16;
G__38351.cljs$core$IFn$_invoke$arity$17 = G__38351__17;
G__38351.cljs$core$IFn$_invoke$arity$18 = G__38351__18;
G__38351.cljs$core$IFn$_invoke$arity$19 = G__38351__19;
G__38351.cljs$core$IFn$_invoke$arity$20 = G__38351__20;
G__38351.cljs$core$IFn$_invoke$arity$21 = G__38351__21;
G__38351.cljs$core$IFn$_invoke$arity$22 = G__38351__22;
return G__38351;
})()
;

cljs.core.MultiFn.prototype.apply = (function (self__,args37503){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args37503)));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$0 = (function (){
var self__ = this;
var mf = this;
var dispatch_val = (function (){return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$0 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$0() : self__.dispatch_fn.call(null));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

return (target_fn.cljs$core$IFn$_invoke$arity$0 ? target_fn.cljs$core$IFn$_invoke$arity$0() : target_fn.call(null));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$1 = (function (a){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__37931 = a;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$1 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$1(G__37931) : self__.dispatch_fn.call(null,G__37931));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__37932 = a;
return (target_fn.cljs$core$IFn$_invoke$arity$1 ? target_fn.cljs$core$IFn$_invoke$arity$1(G__37932) : target_fn.call(null,G__37932));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$2 = (function (a,b){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__37933 = a;
var G__37934 = b;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$2 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$2(G__37933,G__37934) : self__.dispatch_fn.call(null,G__37933,G__37934));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__37935 = a;
var G__37936 = b;
return (target_fn.cljs$core$IFn$_invoke$arity$2 ? target_fn.cljs$core$IFn$_invoke$arity$2(G__37935,G__37936) : target_fn.call(null,G__37935,G__37936));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$3 = (function (a,b,c){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__37937 = a;
var G__37938 = b;
var G__37939 = c;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$3 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$3(G__37937,G__37938,G__37939) : self__.dispatch_fn.call(null,G__37937,G__37938,G__37939));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__37940 = a;
var G__37941 = b;
var G__37942 = c;
return (target_fn.cljs$core$IFn$_invoke$arity$3 ? target_fn.cljs$core$IFn$_invoke$arity$3(G__37940,G__37941,G__37942) : target_fn.call(null,G__37940,G__37941,G__37942));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$4 = (function (a,b,c,d){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__37943 = a;
var G__37944 = b;
var G__37945 = c;
var G__37946 = d;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$4 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$4(G__37943,G__37944,G__37945,G__37946) : self__.dispatch_fn.call(null,G__37943,G__37944,G__37945,G__37946));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__37947 = a;
var G__37948 = b;
var G__37949 = c;
var G__37950 = d;
return (target_fn.cljs$core$IFn$_invoke$arity$4 ? target_fn.cljs$core$IFn$_invoke$arity$4(G__37947,G__37948,G__37949,G__37950) : target_fn.call(null,G__37947,G__37948,G__37949,G__37950));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$5 = (function (a,b,c,d,e){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__37951 = a;
var G__37952 = b;
var G__37953 = c;
var G__37954 = d;
var G__37955 = e;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$5 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$5(G__37951,G__37952,G__37953,G__37954,G__37955) : self__.dispatch_fn.call(null,G__37951,G__37952,G__37953,G__37954,G__37955));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__37956 = a;
var G__37957 = b;
var G__37958 = c;
var G__37959 = d;
var G__37960 = e;
return (target_fn.cljs$core$IFn$_invoke$arity$5 ? target_fn.cljs$core$IFn$_invoke$arity$5(G__37956,G__37957,G__37958,G__37959,G__37960) : target_fn.call(null,G__37956,G__37957,G__37958,G__37959,G__37960));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$6 = (function (a,b,c,d,e,f){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__37961 = a;
var G__37962 = b;
var G__37963 = c;
var G__37964 = d;
var G__37965 = e;
var G__37966 = f;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$6 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$6(G__37961,G__37962,G__37963,G__37964,G__37965,G__37966) : self__.dispatch_fn.call(null,G__37961,G__37962,G__37963,G__37964,G__37965,G__37966));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__37967 = a;
var G__37968 = b;
var G__37969 = c;
var G__37970 = d;
var G__37971 = e;
var G__37972 = f;
return (target_fn.cljs$core$IFn$_invoke$arity$6 ? target_fn.cljs$core$IFn$_invoke$arity$6(G__37967,G__37968,G__37969,G__37970,G__37971,G__37972) : target_fn.call(null,G__37967,G__37968,G__37969,G__37970,G__37971,G__37972));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$7 = (function (a,b,c,d,e,f,g){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__37973 = a;
var G__37974 = b;
var G__37975 = c;
var G__37976 = d;
var G__37977 = e;
var G__37978 = f;
var G__37979 = g;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$7 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$7(G__37973,G__37974,G__37975,G__37976,G__37977,G__37978,G__37979) : self__.dispatch_fn.call(null,G__37973,G__37974,G__37975,G__37976,G__37977,G__37978,G__37979));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__37980 = a;
var G__37981 = b;
var G__37982 = c;
var G__37983 = d;
var G__37984 = e;
var G__37985 = f;
var G__37986 = g;
return (target_fn.cljs$core$IFn$_invoke$arity$7 ? target_fn.cljs$core$IFn$_invoke$arity$7(G__37980,G__37981,G__37982,G__37983,G__37984,G__37985,G__37986) : target_fn.call(null,G__37980,G__37981,G__37982,G__37983,G__37984,G__37985,G__37986));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$8 = (function (a,b,c,d,e,f,g,h){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__37987 = a;
var G__37988 = b;
var G__37989 = c;
var G__37990 = d;
var G__37991 = e;
var G__37992 = f;
var G__37993 = g;
var G__37994 = h;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$8 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$8(G__37987,G__37988,G__37989,G__37990,G__37991,G__37992,G__37993,G__37994) : self__.dispatch_fn.call(null,G__37987,G__37988,G__37989,G__37990,G__37991,G__37992,G__37993,G__37994));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__37995 = a;
var G__37996 = b;
var G__37997 = c;
var G__37998 = d;
var G__37999 = e;
var G__38000 = f;
var G__38001 = g;
var G__38002 = h;
return (target_fn.cljs$core$IFn$_invoke$arity$8 ? target_fn.cljs$core$IFn$_invoke$arity$8(G__37995,G__37996,G__37997,G__37998,G__37999,G__38000,G__38001,G__38002) : target_fn.call(null,G__37995,G__37996,G__37997,G__37998,G__37999,G__38000,G__38001,G__38002));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$9 = (function (a,b,c,d,e,f,g,h,i){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__38003 = a;
var G__38004 = b;
var G__38005 = c;
var G__38006 = d;
var G__38007 = e;
var G__38008 = f;
var G__38009 = g;
var G__38010 = h;
var G__38011 = i;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$9 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$9(G__38003,G__38004,G__38005,G__38006,G__38007,G__38008,G__38009,G__38010,G__38011) : self__.dispatch_fn.call(null,G__38003,G__38004,G__38005,G__38006,G__38007,G__38008,G__38009,G__38010,G__38011));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__38012 = a;
var G__38013 = b;
var G__38014 = c;
var G__38015 = d;
var G__38016 = e;
var G__38017 = f;
var G__38018 = g;
var G__38019 = h;
var G__38020 = i;
return (target_fn.cljs$core$IFn$_invoke$arity$9 ? target_fn.cljs$core$IFn$_invoke$arity$9(G__38012,G__38013,G__38014,G__38015,G__38016,G__38017,G__38018,G__38019,G__38020) : target_fn.call(null,G__38012,G__38013,G__38014,G__38015,G__38016,G__38017,G__38018,G__38019,G__38020));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$10 = (function (a,b,c,d,e,f,g,h,i,j){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__38021 = a;
var G__38022 = b;
var G__38023 = c;
var G__38024 = d;
var G__38025 = e;
var G__38026 = f;
var G__38027 = g;
var G__38028 = h;
var G__38029 = i;
var G__38030 = j;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$10 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$10(G__38021,G__38022,G__38023,G__38024,G__38025,G__38026,G__38027,G__38028,G__38029,G__38030) : self__.dispatch_fn.call(null,G__38021,G__38022,G__38023,G__38024,G__38025,G__38026,G__38027,G__38028,G__38029,G__38030));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__38031 = a;
var G__38032 = b;
var G__38033 = c;
var G__38034 = d;
var G__38035 = e;
var G__38036 = f;
var G__38037 = g;
var G__38038 = h;
var G__38039 = i;
var G__38040 = j;
return (target_fn.cljs$core$IFn$_invoke$arity$10 ? target_fn.cljs$core$IFn$_invoke$arity$10(G__38031,G__38032,G__38033,G__38034,G__38035,G__38036,G__38037,G__38038,G__38039,G__38040) : target_fn.call(null,G__38031,G__38032,G__38033,G__38034,G__38035,G__38036,G__38037,G__38038,G__38039,G__38040));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$11 = (function (a,b,c,d,e,f,g,h,i,j,k){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__38041 = a;
var G__38042 = b;
var G__38043 = c;
var G__38044 = d;
var G__38045 = e;
var G__38046 = f;
var G__38047 = g;
var G__38048 = h;
var G__38049 = i;
var G__38050 = j;
var G__38051 = k;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$11 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$11(G__38041,G__38042,G__38043,G__38044,G__38045,G__38046,G__38047,G__38048,G__38049,G__38050,G__38051) : self__.dispatch_fn.call(null,G__38041,G__38042,G__38043,G__38044,G__38045,G__38046,G__38047,G__38048,G__38049,G__38050,G__38051));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__38052 = a;
var G__38053 = b;
var G__38054 = c;
var G__38055 = d;
var G__38056 = e;
var G__38057 = f;
var G__38058 = g;
var G__38059 = h;
var G__38060 = i;
var G__38061 = j;
var G__38062 = k;
return (target_fn.cljs$core$IFn$_invoke$arity$11 ? target_fn.cljs$core$IFn$_invoke$arity$11(G__38052,G__38053,G__38054,G__38055,G__38056,G__38057,G__38058,G__38059,G__38060,G__38061,G__38062) : target_fn.call(null,G__38052,G__38053,G__38054,G__38055,G__38056,G__38057,G__38058,G__38059,G__38060,G__38061,G__38062));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$12 = (function (a,b,c,d,e,f,g,h,i,j,k,l){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__38063 = a;
var G__38064 = b;
var G__38065 = c;
var G__38066 = d;
var G__38067 = e;
var G__38068 = f;
var G__38069 = g;
var G__38070 = h;
var G__38071 = i;
var G__38072 = j;
var G__38073 = k;
var G__38074 = l;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$12 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$12(G__38063,G__38064,G__38065,G__38066,G__38067,G__38068,G__38069,G__38070,G__38071,G__38072,G__38073,G__38074) : self__.dispatch_fn.call(null,G__38063,G__38064,G__38065,G__38066,G__38067,G__38068,G__38069,G__38070,G__38071,G__38072,G__38073,G__38074));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__38075 = a;
var G__38076 = b;
var G__38077 = c;
var G__38078 = d;
var G__38079 = e;
var G__38080 = f;
var G__38081 = g;
var G__38082 = h;
var G__38083 = i;
var G__38084 = j;
var G__38085 = k;
var G__38086 = l;
return (target_fn.cljs$core$IFn$_invoke$arity$12 ? target_fn.cljs$core$IFn$_invoke$arity$12(G__38075,G__38076,G__38077,G__38078,G__38079,G__38080,G__38081,G__38082,G__38083,G__38084,G__38085,G__38086) : target_fn.call(null,G__38075,G__38076,G__38077,G__38078,G__38079,G__38080,G__38081,G__38082,G__38083,G__38084,G__38085,G__38086));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$13 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__38087 = a;
var G__38088 = b;
var G__38089 = c;
var G__38090 = d;
var G__38091 = e;
var G__38092 = f;
var G__38093 = g;
var G__38094 = h;
var G__38095 = i;
var G__38096 = j;
var G__38097 = k;
var G__38098 = l;
var G__38099 = m;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$13 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$13(G__38087,G__38088,G__38089,G__38090,G__38091,G__38092,G__38093,G__38094,G__38095,G__38096,G__38097,G__38098,G__38099) : self__.dispatch_fn.call(null,G__38087,G__38088,G__38089,G__38090,G__38091,G__38092,G__38093,G__38094,G__38095,G__38096,G__38097,G__38098,G__38099));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__38100 = a;
var G__38101 = b;
var G__38102 = c;
var G__38103 = d;
var G__38104 = e;
var G__38105 = f;
var G__38106 = g;
var G__38107 = h;
var G__38108 = i;
var G__38109 = j;
var G__38110 = k;
var G__38111 = l;
var G__38112 = m;
return (target_fn.cljs$core$IFn$_invoke$arity$13 ? target_fn.cljs$core$IFn$_invoke$arity$13(G__38100,G__38101,G__38102,G__38103,G__38104,G__38105,G__38106,G__38107,G__38108,G__38109,G__38110,G__38111,G__38112) : target_fn.call(null,G__38100,G__38101,G__38102,G__38103,G__38104,G__38105,G__38106,G__38107,G__38108,G__38109,G__38110,G__38111,G__38112));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$14 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__38113 = a;
var G__38114 = b;
var G__38115 = c;
var G__38116 = d;
var G__38117 = e;
var G__38118 = f;
var G__38119 = g;
var G__38120 = h;
var G__38121 = i;
var G__38122 = j;
var G__38123 = k;
var G__38124 = l;
var G__38125 = m;
var G__38126 = n;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$14 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$14(G__38113,G__38114,G__38115,G__38116,G__38117,G__38118,G__38119,G__38120,G__38121,G__38122,G__38123,G__38124,G__38125,G__38126) : self__.dispatch_fn.call(null,G__38113,G__38114,G__38115,G__38116,G__38117,G__38118,G__38119,G__38120,G__38121,G__38122,G__38123,G__38124,G__38125,G__38126));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__38127 = a;
var G__38128 = b;
var G__38129 = c;
var G__38130 = d;
var G__38131 = e;
var G__38132 = f;
var G__38133 = g;
var G__38134 = h;
var G__38135 = i;
var G__38136 = j;
var G__38137 = k;
var G__38138 = l;
var G__38139 = m;
var G__38140 = n;
return (target_fn.cljs$core$IFn$_invoke$arity$14 ? target_fn.cljs$core$IFn$_invoke$arity$14(G__38127,G__38128,G__38129,G__38130,G__38131,G__38132,G__38133,G__38134,G__38135,G__38136,G__38137,G__38138,G__38139,G__38140) : target_fn.call(null,G__38127,G__38128,G__38129,G__38130,G__38131,G__38132,G__38133,G__38134,G__38135,G__38136,G__38137,G__38138,G__38139,G__38140));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$15 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__38141 = a;
var G__38142 = b;
var G__38143 = c;
var G__38144 = d;
var G__38145 = e;
var G__38146 = f;
var G__38147 = g;
var G__38148 = h;
var G__38149 = i;
var G__38150 = j;
var G__38151 = k;
var G__38152 = l;
var G__38153 = m;
var G__38154 = n;
var G__38155 = o;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$15 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$15(G__38141,G__38142,G__38143,G__38144,G__38145,G__38146,G__38147,G__38148,G__38149,G__38150,G__38151,G__38152,G__38153,G__38154,G__38155) : self__.dispatch_fn.call(null,G__38141,G__38142,G__38143,G__38144,G__38145,G__38146,G__38147,G__38148,G__38149,G__38150,G__38151,G__38152,G__38153,G__38154,G__38155));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__38156 = a;
var G__38157 = b;
var G__38158 = c;
var G__38159 = d;
var G__38160 = e;
var G__38161 = f;
var G__38162 = g;
var G__38163 = h;
var G__38164 = i;
var G__38165 = j;
var G__38166 = k;
var G__38167 = l;
var G__38168 = m;
var G__38169 = n;
var G__38170 = o;
return (target_fn.cljs$core$IFn$_invoke$arity$15 ? target_fn.cljs$core$IFn$_invoke$arity$15(G__38156,G__38157,G__38158,G__38159,G__38160,G__38161,G__38162,G__38163,G__38164,G__38165,G__38166,G__38167,G__38168,G__38169,G__38170) : target_fn.call(null,G__38156,G__38157,G__38158,G__38159,G__38160,G__38161,G__38162,G__38163,G__38164,G__38165,G__38166,G__38167,G__38168,G__38169,G__38170));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$16 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__38171 = a;
var G__38172 = b;
var G__38173 = c;
var G__38174 = d;
var G__38175 = e;
var G__38176 = f;
var G__38177 = g;
var G__38178 = h;
var G__38179 = i;
var G__38180 = j;
var G__38181 = k;
var G__38182 = l;
var G__38183 = m;
var G__38184 = n;
var G__38185 = o;
var G__38186 = p;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$16 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$16(G__38171,G__38172,G__38173,G__38174,G__38175,G__38176,G__38177,G__38178,G__38179,G__38180,G__38181,G__38182,G__38183,G__38184,G__38185,G__38186) : self__.dispatch_fn.call(null,G__38171,G__38172,G__38173,G__38174,G__38175,G__38176,G__38177,G__38178,G__38179,G__38180,G__38181,G__38182,G__38183,G__38184,G__38185,G__38186));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__38187 = a;
var G__38188 = b;
var G__38189 = c;
var G__38190 = d;
var G__38191 = e;
var G__38192 = f;
var G__38193 = g;
var G__38194 = h;
var G__38195 = i;
var G__38196 = j;
var G__38197 = k;
var G__38198 = l;
var G__38199 = m;
var G__38200 = n;
var G__38201 = o;
var G__38202 = p;
return (target_fn.cljs$core$IFn$_invoke$arity$16 ? target_fn.cljs$core$IFn$_invoke$arity$16(G__38187,G__38188,G__38189,G__38190,G__38191,G__38192,G__38193,G__38194,G__38195,G__38196,G__38197,G__38198,G__38199,G__38200,G__38201,G__38202) : target_fn.call(null,G__38187,G__38188,G__38189,G__38190,G__38191,G__38192,G__38193,G__38194,G__38195,G__38196,G__38197,G__38198,G__38199,G__38200,G__38201,G__38202));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$17 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__38203 = a;
var G__38204 = b;
var G__38205 = c;
var G__38206 = d;
var G__38207 = e;
var G__38208 = f;
var G__38209 = g;
var G__38210 = h;
var G__38211 = i;
var G__38212 = j;
var G__38213 = k;
var G__38214 = l;
var G__38215 = m;
var G__38216 = n;
var G__38217 = o;
var G__38218 = p;
var G__38219 = q;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$17 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$17(G__38203,G__38204,G__38205,G__38206,G__38207,G__38208,G__38209,G__38210,G__38211,G__38212,G__38213,G__38214,G__38215,G__38216,G__38217,G__38218,G__38219) : self__.dispatch_fn.call(null,G__38203,G__38204,G__38205,G__38206,G__38207,G__38208,G__38209,G__38210,G__38211,G__38212,G__38213,G__38214,G__38215,G__38216,G__38217,G__38218,G__38219));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__38220 = a;
var G__38221 = b;
var G__38222 = c;
var G__38223 = d;
var G__38224 = e;
var G__38225 = f;
var G__38226 = g;
var G__38227 = h;
var G__38228 = i;
var G__38229 = j;
var G__38230 = k;
var G__38231 = l;
var G__38232 = m;
var G__38233 = n;
var G__38234 = o;
var G__38235 = p;
var G__38236 = q;
return (target_fn.cljs$core$IFn$_invoke$arity$17 ? target_fn.cljs$core$IFn$_invoke$arity$17(G__38220,G__38221,G__38222,G__38223,G__38224,G__38225,G__38226,G__38227,G__38228,G__38229,G__38230,G__38231,G__38232,G__38233,G__38234,G__38235,G__38236) : target_fn.call(null,G__38220,G__38221,G__38222,G__38223,G__38224,G__38225,G__38226,G__38227,G__38228,G__38229,G__38230,G__38231,G__38232,G__38233,G__38234,G__38235,G__38236));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$18 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__38237 = a;
var G__38238 = b;
var G__38239 = c;
var G__38240 = d;
var G__38241 = e;
var G__38242 = f;
var G__38243 = g;
var G__38244 = h;
var G__38245 = i;
var G__38246 = j;
var G__38247 = k;
var G__38248 = l;
var G__38249 = m;
var G__38250 = n;
var G__38251 = o;
var G__38252 = p;
var G__38253 = q;
var G__38254 = r;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$18 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$18(G__38237,G__38238,G__38239,G__38240,G__38241,G__38242,G__38243,G__38244,G__38245,G__38246,G__38247,G__38248,G__38249,G__38250,G__38251,G__38252,G__38253,G__38254) : self__.dispatch_fn.call(null,G__38237,G__38238,G__38239,G__38240,G__38241,G__38242,G__38243,G__38244,G__38245,G__38246,G__38247,G__38248,G__38249,G__38250,G__38251,G__38252,G__38253,G__38254));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__38255 = a;
var G__38256 = b;
var G__38257 = c;
var G__38258 = d;
var G__38259 = e;
var G__38260 = f;
var G__38261 = g;
var G__38262 = h;
var G__38263 = i;
var G__38264 = j;
var G__38265 = k;
var G__38266 = l;
var G__38267 = m;
var G__38268 = n;
var G__38269 = o;
var G__38270 = p;
var G__38271 = q;
var G__38272 = r;
return (target_fn.cljs$core$IFn$_invoke$arity$18 ? target_fn.cljs$core$IFn$_invoke$arity$18(G__38255,G__38256,G__38257,G__38258,G__38259,G__38260,G__38261,G__38262,G__38263,G__38264,G__38265,G__38266,G__38267,G__38268,G__38269,G__38270,G__38271,G__38272) : target_fn.call(null,G__38255,G__38256,G__38257,G__38258,G__38259,G__38260,G__38261,G__38262,G__38263,G__38264,G__38265,G__38266,G__38267,G__38268,G__38269,G__38270,G__38271,G__38272));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$19 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__38273 = a;
var G__38274 = b;
var G__38275 = c;
var G__38276 = d;
var G__38277 = e;
var G__38278 = f;
var G__38279 = g;
var G__38280 = h;
var G__38281 = i;
var G__38282 = j;
var G__38283 = k;
var G__38284 = l;
var G__38285 = m;
var G__38286 = n;
var G__38287 = o;
var G__38288 = p;
var G__38289 = q;
var G__38290 = r;
var G__38291 = s;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$19 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$19(G__38273,G__38274,G__38275,G__38276,G__38277,G__38278,G__38279,G__38280,G__38281,G__38282,G__38283,G__38284,G__38285,G__38286,G__38287,G__38288,G__38289,G__38290,G__38291) : self__.dispatch_fn.call(null,G__38273,G__38274,G__38275,G__38276,G__38277,G__38278,G__38279,G__38280,G__38281,G__38282,G__38283,G__38284,G__38285,G__38286,G__38287,G__38288,G__38289,G__38290,G__38291));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__38292 = a;
var G__38293 = b;
var G__38294 = c;
var G__38295 = d;
var G__38296 = e;
var G__38297 = f;
var G__38298 = g;
var G__38299 = h;
var G__38300 = i;
var G__38301 = j;
var G__38302 = k;
var G__38303 = l;
var G__38304 = m;
var G__38305 = n;
var G__38306 = o;
var G__38307 = p;
var G__38308 = q;
var G__38309 = r;
var G__38310 = s;
return (target_fn.cljs$core$IFn$_invoke$arity$19 ? target_fn.cljs$core$IFn$_invoke$arity$19(G__38292,G__38293,G__38294,G__38295,G__38296,G__38297,G__38298,G__38299,G__38300,G__38301,G__38302,G__38303,G__38304,G__38305,G__38306,G__38307,G__38308,G__38309,G__38310) : target_fn.call(null,G__38292,G__38293,G__38294,G__38295,G__38296,G__38297,G__38298,G__38299,G__38300,G__38301,G__38302,G__38303,G__38304,G__38305,G__38306,G__38307,G__38308,G__38309,G__38310));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$20 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__38311 = a;
var G__38312 = b;
var G__38313 = c;
var G__38314 = d;
var G__38315 = e;
var G__38316 = f;
var G__38317 = g;
var G__38318 = h;
var G__38319 = i;
var G__38320 = j;
var G__38321 = k;
var G__38322 = l;
var G__38323 = m;
var G__38324 = n;
var G__38325 = o;
var G__38326 = p;
var G__38327 = q;
var G__38328 = r;
var G__38329 = s;
var G__38330 = t;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$20 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$20(G__38311,G__38312,G__38313,G__38314,G__38315,G__38316,G__38317,G__38318,G__38319,G__38320,G__38321,G__38322,G__38323,G__38324,G__38325,G__38326,G__38327,G__38328,G__38329,G__38330) : self__.dispatch_fn.call(null,G__38311,G__38312,G__38313,G__38314,G__38315,G__38316,G__38317,G__38318,G__38319,G__38320,G__38321,G__38322,G__38323,G__38324,G__38325,G__38326,G__38327,G__38328,G__38329,G__38330));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__38331 = a;
var G__38332 = b;
var G__38333 = c;
var G__38334 = d;
var G__38335 = e;
var G__38336 = f;
var G__38337 = g;
var G__38338 = h;
var G__38339 = i;
var G__38340 = j;
var G__38341 = k;
var G__38342 = l;
var G__38343 = m;
var G__38344 = n;
var G__38345 = o;
var G__38346 = p;
var G__38347 = q;
var G__38348 = r;
var G__38349 = s;
var G__38350 = t;
return (target_fn.cljs$core$IFn$_invoke$arity$20 ? target_fn.cljs$core$IFn$_invoke$arity$20(G__38331,G__38332,G__38333,G__38334,G__38335,G__38336,G__38337,G__38338,G__38339,G__38340,G__38341,G__38342,G__38343,G__38344,G__38345,G__38346,G__38347,G__38348,G__38349,G__38350) : target_fn.call(null,G__38331,G__38332,G__38333,G__38334,G__38335,G__38336,G__38337,G__38338,G__38339,G__38340,G__38341,G__38342,G__38343,G__38344,G__38345,G__38346,G__38347,G__38348,G__38349,G__38350));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$21 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
var self__ = this;
var mf = this;
var dispatch_val = cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(self__.dispatch_fn,a,b,c,d,cljs.core.array_seq([e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest], 0));
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(target_fn,a,b,c,d,cljs.core.array_seq([e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest], 0));
});

cljs.core.MultiFn.cljs$lang$type = true;

cljs.core.MultiFn.cljs$lang$ctorStr = "cljs.core/MultiFn";

cljs.core.MultiFn.cljs$lang$ctorPrWriter = (function (this__24861__auto__,writer__24862__auto__,opt__24863__auto__){
return cljs.core._write(writer__24862__auto__,"cljs.core/MultiFn");
});

cljs.core.__GT_MultiFn = (function __GT_MultiFn(name,dispatch_fn,default_dispatch_val,hierarchy,method_table,prefer_table,method_cache,cached_hierarchy){
return (new cljs.core.MultiFn(name,dispatch_fn,default_dispatch_val,hierarchy,method_table,prefer_table,method_cache,cached_hierarchy));
});

/**
* Removes all of the methods of multimethod.
*/
cljs.core.remove_all_methods = (function remove_all_methods(multifn){
return cljs.core._reset(multifn);
});
/**
* Removes the method of multimethod associated with dispatch-value.
*/
cljs.core.remove_method = (function remove_method(multifn,dispatch_val){
return cljs.core._remove_method(multifn,dispatch_val);
});
/**
* Causes the multimethod to prefer matches of dispatch-val-x over dispatch-val-y
* when there is a conflict
*/
cljs.core.prefer_method = (function prefer_method(multifn,dispatch_val_x,dispatch_val_y){
return cljs.core._prefer_method(multifn,dispatch_val_x,dispatch_val_y);
});
/**
* Given a multimethod, returns a map of dispatch values -> dispatch fns
*/
cljs.core.methods$ = (function methods$(multifn){
return cljs.core._methods(multifn);
});
/**
* Given a multimethod and a dispatch value, returns the dispatch fn
* that would apply to that value, or nil if none apply and no default
*/
cljs.core.get_method = (function get_method(multifn,dispatch_val){
return cljs.core._get_method(multifn,dispatch_val);
});
/**
* Given a multimethod, returns a map of preferred value -> set of other values
*/
cljs.core.prefers = (function prefers(multifn){
return cljs.core._prefers(multifn);
});

/**
* @constructor
*/
cljs.core.UUID = (function (uuid){
this.uuid = uuid;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 2153775104;
})
cljs.core.UUID.prototype.cljs$core$IHash$_hash$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
var G__38352 = cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([this$__$1], 0));
return goog.string.hashCode(G__38352);
});

cljs.core.UUID.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (_,writer,___$1){
var self__ = this;
var ___$2 = this;
return cljs.core._write(writer,[cljs.core.str("#uuid \""),cljs.core.str(self__.uuid),cljs.core.str("\"")].join(''));
});

cljs.core.UUID.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (_,other){
var self__ = this;
var ___$1 = this;
return ((other instanceof cljs.core.UUID)) && ((self__.uuid === other.uuid));
});

cljs.core.UUID.prototype.toString = (function (){
var self__ = this;
var _ = this;
return self__.uuid;
});

cljs.core.UUID.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.UUID.cljs$lang$type = true;

cljs.core.UUID.cljs$lang$ctorStr = "cljs.core/UUID";

cljs.core.UUID.cljs$lang$ctorPrWriter = (function (this__24861__auto__,writer__24862__auto__,opt__24863__auto__){
return cljs.core._write(writer__24862__auto__,"cljs.core/UUID");
});

cljs.core.__GT_UUID = (function __GT_UUID(uuid){
return (new cljs.core.UUID(uuid));
});


/**
* @constructor
*/
cljs.core.ExceptionInfo = (function (message,data,cause){
this.message = message;
this.data = data;
this.cause = cause;
})

cljs.core.ExceptionInfo.cljs$lang$type = true;

cljs.core.ExceptionInfo.cljs$lang$ctorStr = "cljs.core/ExceptionInfo";

cljs.core.ExceptionInfo.cljs$lang$ctorPrWriter = (function (this__24861__auto__,writer__24862__auto__,opt__24863__auto__){
return cljs.core._write(writer__24862__auto__,"cljs.core/ExceptionInfo");
});

cljs.core.__GT_ExceptionInfo = (function __GT_ExceptionInfo(message,data,cause){
return (new cljs.core.ExceptionInfo(message,data,cause));
});

cljs.core.ExceptionInfo.prototype = (new Error());
cljs.core.ExceptionInfo.prototype.constructor = cljs.core.ExceptionInfo;
/**
* Alpha - subject to change.
* Create an instance of ExceptionInfo, an Error type that carries a
* map of additional data.
*/
cljs.core.ex_info = (function() {
var ex_info = null;
var ex_info__2 = (function (msg,map){
return (new cljs.core.ExceptionInfo(msg,map,null));
});
var ex_info__3 = (function (msg,map,cause){
return (new cljs.core.ExceptionInfo(msg,map,cause));
});
ex_info = function(msg,map,cause){
switch(arguments.length){
case 2:
return ex_info__2.call(this,msg,map);
case 3:
return ex_info__3.call(this,msg,map,cause);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
ex_info.cljs$core$IFn$_invoke$arity$2 = ex_info__2;
ex_info.cljs$core$IFn$_invoke$arity$3 = ex_info__3;
return ex_info;
})()
;
/**
* Alpha - subject to change.
* Returns exception data (a map) if ex is an ExceptionInfo.
* Otherwise returns nil.
*/
cljs.core.ex_data = (function ex_data(ex){
if((ex instanceof cljs.core.ExceptionInfo)){
return ex.data;
} else {
return null;
}
});
/**
* Alpha - subject to change.
* Returns the message attached to the given Error / ExceptionInfo object.
* For non-Errors returns nil.
*/
cljs.core.ex_message = (function ex_message(ex){
if((ex instanceof Error)){
return ex.message;
} else {
return null;
}
});
/**
* Alpha - subject to change.
* Returns exception cause (an Error / ExceptionInfo) if ex is an
* ExceptionInfo.
* Otherwise returns nil.
*/
cljs.core.ex_cause = (function ex_cause(ex){
if((ex instanceof cljs.core.ExceptionInfo)){
return ex.cause;
} else {
return null;
}
});
/**
* Returns an JavaScript compatible comparator based upon pred.
*/
cljs.core.comparator = (function comparator(pred){
return (function (x,y){
if(cljs.core.truth_((function (){var G__38357 = x;
var G__38358 = y;
return (pred.cljs$core$IFn$_invoke$arity$2 ? pred.cljs$core$IFn$_invoke$arity$2(G__38357,G__38358) : pred.call(null,G__38357,G__38358));
})())){
return (-1);
} else {
if(cljs.core.truth_((function (){var G__38359 = y;
var G__38360 = x;
return (pred.cljs$core$IFn$_invoke$arity$2 ? pred.cljs$core$IFn$_invoke$arity$2(G__38359,G__38360) : pred.call(null,G__38359,G__38360));
})())){
return (1);
} else {
return (0);

}
}
});
});
cljs.core.special_symbol_QMARK_ = (function special_symbol_QMARK_(x){
return cljs.core.contains_QMARK_(new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 19, [new cljs.core.Symbol(null,"&","&",-2144855648,null),null,new cljs.core.Symbol(null,"defrecord*","defrecord*",-1936366207,null),null,new cljs.core.Symbol(null,"try","try",-1273693247,null),null,new cljs.core.Symbol(null,"loop*","loop*",615029416,null),null,new cljs.core.Symbol(null,"do","do",1686842252,null),null,new cljs.core.Symbol(null,"letfn*","letfn*",-110097810,null),null,new cljs.core.Symbol(null,"if","if",1181717262,null),null,new cljs.core.Symbol(null,"new","new",-444906321,null),null,new cljs.core.Symbol(null,"ns","ns",2082130287,null),null,new cljs.core.Symbol(null,"deftype*","deftype*",962659890,null),null,new cljs.core.Symbol(null,"let*","let*",1920721458,null),null,new cljs.core.Symbol(null,"js*","js*",-1134233646,null),null,new cljs.core.Symbol(null,"fn*","fn*",-752876845,null),null,new cljs.core.Symbol(null,"recur","recur",1202958259,null),null,new cljs.core.Symbol(null,"set!","set!",250714521,null),null,new cljs.core.Symbol(null,".",".",1975675962,null),null,new cljs.core.Symbol(null,"quote","quote",1377916282,null),null,new cljs.core.Symbol(null,"throw","throw",595905694,null),null,new cljs.core.Symbol(null,"def","def",597100991,null),null], null), null),x);
});
/**
* test [v] finds fn at key :test in var metadata and calls it,
* presuming failure will throw exception
*/
cljs.core.test = (function test(v){
var f = v.cljs$lang$test;
if(cljs.core.truth_(f)){
(f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));

return new cljs.core.Keyword(null,"ok","ok",967785236);
} else {
return new cljs.core.Keyword(null,"no-test","no-test",-1679482642);
}
});
