// Compiled by ClojureScript 0.0-2665 {:static-fns true}
goog.provide('cljs.core');
goog.require('goog.string.StringBuffer');
goog.require('goog.array');
goog.require('goog.object');
goog.require('goog.string');
cljs.core._STAR_clojurescript_version_STAR_ = "0.0-2665";
cljs.core._STAR_unchecked_if_STAR_ = false;
if(typeof cljs.core._STAR_print_fn_STAR_ !== 'undefined'){
} else {
/**
* Each runtime environment provides a different way to print output.
* Whatever function *print-fn* is bound to will be passed any
* Strings which should be printed.
*/
cljs.core._STAR_print_fn_STAR_ = (function _STAR_print_fn_STAR_(_){
throw (new Error("No *print-fn* fn set for evaluation environment"));
});
}
/**
* Set *print-fn* to f.
*/
cljs.core.set_print_fn_BANG_ = (function set_print_fn_BANG_(f){
return cljs.core._STAR_print_fn_STAR_ = f;
});
cljs.core._STAR_flush_on_newline_STAR_ = true;
cljs.core._STAR_print_newline_STAR_ = true;
cljs.core._STAR_print_readably_STAR_ = true;
cljs.core._STAR_print_meta_STAR_ = false;
cljs.core._STAR_print_dup_STAR_ = false;
cljs.core._STAR_print_length_STAR_ = null;
cljs.core._STAR_print_level_STAR_ = null;
if(typeof cljs.core._STAR_loaded_libs_STAR_ !== 'undefined'){
} else {
cljs.core._STAR_loaded_libs_STAR_ = null;
}
cljs.core.pr_opts = (function pr_opts(){
return new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null,"flush-on-newline","flush-on-newline",-151457939),cljs.core._STAR_flush_on_newline_STAR_,new cljs.core.Keyword(null,"readably","readably",1129599760),cljs.core._STAR_print_readably_STAR_,new cljs.core.Keyword(null,"meta","meta",1499536964),cljs.core._STAR_print_meta_STAR_,new cljs.core.Keyword(null,"dup","dup",556298533),cljs.core._STAR_print_dup_STAR_,new cljs.core.Keyword(null,"print-length","print-length",1931866356),cljs.core._STAR_print_length_STAR_], null);
});
/**
* Set *print-fn* to console.log
*/
cljs.core.enable_console_print_BANG_ = (function enable_console_print_BANG_(){
cljs.core._STAR_print_newline_STAR_ = false;

return cljs.core._STAR_print_fn_STAR_ = (function() { 
var G__38414__delegate = function (args){
return console.log.apply(console,(function (){var G__38411 = args;
return (cljs.core.into_array.cljs$core$IFn$_invoke$arity$1 ? cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(G__38411) : cljs.core.into_array.call(null,G__38411));
})());
};
var G__38414 = function (var_args){
var args = null;
if (arguments.length > 0) {
var G__38415__i = 0, G__38415__a = new Array(arguments.length -  0);
while (G__38415__i < G__38415__a.length) {G__38415__a[G__38415__i] = arguments[G__38415__i + 0]; ++G__38415__i;}
  args = new cljs.core.IndexedSeq(G__38415__a,0);
} 
return G__38414__delegate.call(this,args);};
G__38414.cljs$lang$maxFixedArity = 0;
G__38414.cljs$lang$applyTo = (function (arglist__38416){
var args = cljs.core.seq(arglist__38416);
return G__38414__delegate(args);
});
G__38414.cljs$core$IFn$_invoke$arity$variadic = G__38414__delegate;
return G__38414;
})()
;
});
/**
* Internal - do not use!
*/
cljs.core.truth_ = (function truth_(x){
return (x != null && x !== false);
});
cljs.core.not_native = null;

/**
* Tests if 2 arguments are the same object
*/
cljs.core.identical_QMARK_ = (function identical_QMARK_(x,y){
return (x === y);
});
/**
* Returns true if x is nil, false otherwise.
*/
cljs.core.nil_QMARK_ = (function nil_QMARK_(x){
return (x == null);
});
cljs.core.array_QMARK_ = (function array_QMARK_(x){
return x instanceof Array;
});
cljs.core.number_QMARK_ = (function number_QMARK_(n){
return typeof n === 'number';
});
/**
* Returns true if x is logical false, false otherwise.
*/
cljs.core.not = (function not(x){
if(cljs.core.truth_(x)){
return false;
} else {
return true;
}
});
/**
* Returns true if x is not nil, false otherwise.
*/
cljs.core.some_QMARK_ = (function some_QMARK_(x){
return !((x == null));
});
cljs.core.object_QMARK_ = (function object_QMARK_(x){
if(!((x == null))){
return (x.constructor === Object);
} else {
return false;
}
});
cljs.core.string_QMARK_ = (function string_QMARK_(x){
var G__38439 = x;
return goog.isString(G__38439);
});
/**
* Internal - do not use!
*/
cljs.core.native_satisfies_QMARK_ = (function native_satisfies_QMARK_(p,x){
var x__$1 = (((x == null))?null:x);
if((p[(function (){var G__38442 = x__$1;
return goog.typeOf(G__38442);
})()])){
return true;
} else {
if((p["_"])){
return true;
} else {
return false;

}
}
});
cljs.core.is_proto_ = (function is_proto_(x){
return (x.constructor.prototype === x);
});
/**
* When compiled for a command-line target, whatever
* function *main-fn* is set to will be called with the command-line
* argv as arguments
*/
cljs.core._STAR_main_cli_fn_STAR_ = null;
cljs.core.type = (function type(x){
if((x == null)){
return null;
} else {
return x.constructor;
}
});
cljs.core.missing_protocol = (function missing_protocol(proto,obj){
var ty = cljs.core.type(obj);
var ty__$1 = (cljs.core.truth_((function (){var and__24260__auto__ = ty;
if(cljs.core.truth_(and__24260__auto__)){
return ty.cljs$lang$type;
} else {
return and__24260__auto__;
}
})())?ty.cljs$lang$ctorStr:(function (){var G__38448 = obj;
return goog.typeOf(G__38448);
})());
return (new Error(["No protocol method ",proto," defined for type ",ty__$1,": ",obj].join("")));
});
cljs.core.type__GT_str = (function type__GT_str(ty){
var temp__4124__auto__ = ty.cljs$lang$ctorStr;
if(cljs.core.truth_(temp__4124__auto__)){
var s = temp__4124__auto__;
return s;
} else {
return [cljs.core.str(ty)].join('');
}
});
if((typeof Symbol !== 'undefined') && (((function (){var G__38450 = Symbol;
return goog.typeOf(G__38450);
})() === "function"))){
cljs.core.ITER_SYMBOL = Symbol.iterator;
} else {
cljs.core.ITER_SYMBOL = "@@iterator";
}
cljs.core.make_array = (function() {
var make_array = null;
var make_array__1 = (function (size){
return (new Array(size));
});
var make_array__2 = (function (type,size){
return make_array.cljs$core$IFn$_invoke$arity$1(size);
});
make_array = function(type,size){
switch(arguments.length){
case 1:
return make_array__1.call(this,type);
case 2:
return make_array__2.call(this,type,size);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
make_array.cljs$core$IFn$_invoke$arity$1 = make_array__1;
make_array.cljs$core$IFn$_invoke$arity$2 = make_array__2;
return make_array;
})()
;
/**
* Returns a javascript array, cloned from the passed in array
*/
cljs.core.aclone = (function aclone(arr){
var len = arr.length;
var new_arr = (new Array(len));
var n__25159__auto___38456 = len;
var i_38457 = (0);
while(true){
if((i_38457 < n__25159__auto___38456)){
(new_arr[i_38457] = (arr[i_38457]));

var G__38458 = (i_38457 + (1));
i_38457 = G__38458;
continue;
} else {
}
break;
}

return new_arr;
});
/**
* Creates a new javascript array.
* @param {...*} var_args
*/
cljs.core.array = (function array(var_args){
var a = (new Array(arguments.length));
var i = (0);
while(true){
if((i < a.length)){
(a[i] = (arguments[i]));

var G__38459 = (i + (1));
i = G__38459;
continue;
} else {
return a;
}
break;
}
});
/**
* Returns the value at the index.
* @param {...*} var_args
*/
cljs.core.aget = (function() {
var aget = null;
var aget__2 = (function (array,i){
return (array[i]);
});
var aget__3 = (function() { 
var G__38468__delegate = function (array,i,idxs){
var G__38465 = aget;
var G__38466 = aget.cljs$core$IFn$_invoke$arity$2(array,i);
var G__38467 = idxs;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$3 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$3(G__38465,G__38466,G__38467) : cljs.core.apply.call(null,G__38465,G__38466,G__38467));
};
var G__38468 = function (array,i,var_args){
var idxs = null;
if (arguments.length > 2) {
var G__38469__i = 0, G__38469__a = new Array(arguments.length -  2);
while (G__38469__i < G__38469__a.length) {G__38469__a[G__38469__i] = arguments[G__38469__i + 2]; ++G__38469__i;}
  idxs = new cljs.core.IndexedSeq(G__38469__a,0);
} 
return G__38468__delegate.call(this,array,i,idxs);};
G__38468.cljs$lang$maxFixedArity = 2;
G__38468.cljs$lang$applyTo = (function (arglist__38470){
var array = cljs.core.first(arglist__38470);
arglist__38470 = cljs.core.next(arglist__38470);
var i = cljs.core.first(arglist__38470);
var idxs = cljs.core.rest(arglist__38470);
return G__38468__delegate(array,i,idxs);
});
G__38468.cljs$core$IFn$_invoke$arity$variadic = G__38468__delegate;
return G__38468;
})()
;
aget = function(array,i,var_args){
var idxs = var_args;
switch(arguments.length){
case 2:
return aget__2.call(this,array,i);
default:
var G__38471 = null;
if (arguments.length > 2) {
var G__38472__i = 0, G__38472__a = new Array(arguments.length -  2);
while (G__38472__i < G__38472__a.length) {G__38472__a[G__38472__i] = arguments[G__38472__i + 2]; ++G__38472__i;}
G__38471 = new cljs.core.IndexedSeq(G__38472__a,0);
}
return aget__3.cljs$core$IFn$_invoke$arity$variadic(array,i, G__38471);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
aget.cljs$lang$maxFixedArity = 2;
aget.cljs$lang$applyTo = aget__3.cljs$lang$applyTo;
aget.cljs$core$IFn$_invoke$arity$2 = aget__2;
aget.cljs$core$IFn$_invoke$arity$variadic = aget__3.cljs$core$IFn$_invoke$arity$variadic;
return aget;
})()
;
/**
* Sets the value at the index.
* @param {...*} var_args
*/
cljs.core.aset = (function() {
var aset = null;
var aset__3 = (function (array,i,val){
return (array[i] = val);
});
var aset__4 = (function() { 
var G__38481__delegate = function (array,idx,idx2,idxv){
var G__38477 = aset;
var G__38478 = (array[idx]);
var G__38479 = idx2;
var G__38480 = idxv;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$4 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$4(G__38477,G__38478,G__38479,G__38480) : cljs.core.apply.call(null,G__38477,G__38478,G__38479,G__38480));
};
var G__38481 = function (array,idx,idx2,var_args){
var idxv = null;
if (arguments.length > 3) {
var G__38482__i = 0, G__38482__a = new Array(arguments.length -  3);
while (G__38482__i < G__38482__a.length) {G__38482__a[G__38482__i] = arguments[G__38482__i + 3]; ++G__38482__i;}
  idxv = new cljs.core.IndexedSeq(G__38482__a,0);
} 
return G__38481__delegate.call(this,array,idx,idx2,idxv);};
G__38481.cljs$lang$maxFixedArity = 3;
G__38481.cljs$lang$applyTo = (function (arglist__38483){
var array = cljs.core.first(arglist__38483);
arglist__38483 = cljs.core.next(arglist__38483);
var idx = cljs.core.first(arglist__38483);
arglist__38483 = cljs.core.next(arglist__38483);
var idx2 = cljs.core.first(arglist__38483);
var idxv = cljs.core.rest(arglist__38483);
return G__38481__delegate(array,idx,idx2,idxv);
});
G__38481.cljs$core$IFn$_invoke$arity$variadic = G__38481__delegate;
return G__38481;
})()
;
aset = function(array,idx,idx2,var_args){
var idxv = var_args;
switch(arguments.length){
case 3:
return aset__3.call(this,array,idx,idx2);
default:
var G__38484 = null;
if (arguments.length > 3) {
var G__38485__i = 0, G__38485__a = new Array(arguments.length -  3);
while (G__38485__i < G__38485__a.length) {G__38485__a[G__38485__i] = arguments[G__38485__i + 3]; ++G__38485__i;}
G__38484 = new cljs.core.IndexedSeq(G__38485__a,0);
}
return aset__4.cljs$core$IFn$_invoke$arity$variadic(array,idx,idx2, G__38484);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
aset.cljs$lang$maxFixedArity = 3;
aset.cljs$lang$applyTo = aset__4.cljs$lang$applyTo;
aset.cljs$core$IFn$_invoke$arity$3 = aset__3;
aset.cljs$core$IFn$_invoke$arity$variadic = aset__4.cljs$core$IFn$_invoke$arity$variadic;
return aset;
})()
;
/**
* Returns the length of the array. Works on arrays of all types.
*/
cljs.core.alength = (function alength(array){
return array.length;
});
cljs.core.into_array = (function() {
var into_array = null;
var into_array__1 = (function (aseq){
return into_array.cljs$core$IFn$_invoke$arity$2(null,aseq);
});
var into_array__2 = (function (type,aseq){
var G__38491 = (function (a,x){
a.push(x);

return a;
});
var G__38492 = [];
var G__38493 = aseq;
return (cljs.core.reduce.cljs$core$IFn$_invoke$arity$3 ? cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(G__38491,G__38492,G__38493) : cljs.core.reduce.call(null,G__38491,G__38492,G__38493));
});
into_array = function(type,aseq){
switch(arguments.length){
case 1:
return into_array__1.call(this,type);
case 2:
return into_array__2.call(this,type,aseq);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
into_array.cljs$core$IFn$_invoke$arity$1 = into_array__1;
into_array.cljs$core$IFn$_invoke$arity$2 = into_array__2;
return into_array;
})()
;
/**
* Invoke JavaScript object method via string. Needed when the
* string is not a valid unquoted property name.
* @param {...*} var_args
*/
cljs.core.js_invoke = (function() { 
var js_invoke__delegate = function (obj,s,args){
return (obj[s]).apply(obj,cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(args));
};
var js_invoke = function (obj,s,var_args){
var args = null;
if (arguments.length > 2) {
var G__38494__i = 0, G__38494__a = new Array(arguments.length -  2);
while (G__38494__i < G__38494__a.length) {G__38494__a[G__38494__i] = arguments[G__38494__i + 2]; ++G__38494__i;}
  args = new cljs.core.IndexedSeq(G__38494__a,0);
} 
return js_invoke__delegate.call(this,obj,s,args);};
js_invoke.cljs$lang$maxFixedArity = 2;
js_invoke.cljs$lang$applyTo = (function (arglist__38495){
var obj = cljs.core.first(arglist__38495);
arglist__38495 = cljs.core.next(arglist__38495);
var s = cljs.core.first(arglist__38495);
var args = cljs.core.rest(arglist__38495);
return js_invoke__delegate(obj,s,args);
});
js_invoke.cljs$core$IFn$_invoke$arity$variadic = js_invoke__delegate;
return js_invoke;
})()
;

cljs.core.Fn = (function (){var obj38497 = {};
return obj38497;
})();


cljs.core.IFn = (function (){var obj38499 = {};
return obj38499;
})();

cljs.core._invoke = (function() {
var _invoke = null;
var _invoke__1 = (function (this$){
if((function (){var and__24260__auto__ = this$;
if(and__24260__auto__){
return this$.cljs$core$IFn$_invoke$arity$1;
} else {
return and__24260__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$1(this$);
} else {
var x__24916__auto__ = (((this$ == null))?null:this$);
return (function (){var or__24272__auto__ = (cljs.core._invoke[(function (){var G__38545 = x__24916__auto__;
return goog.typeOf(G__38545);
})()]);
if(or__24272__auto__){
return or__24272__auto__;
} else {
var or__24272__auto____$1 = (cljs.core._invoke["_"]);
if(or__24272__auto____$1){
return or__24272__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$);
}
});
var _invoke__2 = (function (this$,a){
if((function (){var and__24260__auto__ = this$;
if(and__24260__auto__){
return this$.cljs$core$IFn$_invoke$arity$2;
} else {
return and__24260__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$2(this$,a);
} else {
var x__24916__auto__ = (((this$ == null))?null:this$);
return (function (){var or__24272__auto__ = (cljs.core._invoke[(function (){var G__38547 = x__24916__auto__;
return goog.typeOf(G__38547);
})()]);
if(or__24272__auto__){
return or__24272__auto__;
} else {
var or__24272__auto____$1 = (cljs.core._invoke["_"]);
if(or__24272__auto____$1){
return or__24272__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a);
}
});
var _invoke__3 = (function (this$,a,b){
if((function (){var and__24260__auto__ = this$;
if(and__24260__auto__){
return this$.cljs$core$IFn$_invoke$arity$3;
} else {
return and__24260__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$3(this$,a,b);
} else {
var x__24916__auto__ = (((this$ == null))?null:this$);
return (function (){var or__24272__auto__ = (cljs.core._invoke[(function (){var G__38549 = x__24916__auto__;
return goog.typeOf(G__38549);
})()]);
if(or__24272__auto__){
return or__24272__auto__;
} else {
var or__24272__auto____$1 = (cljs.core._invoke["_"]);
if(or__24272__auto____$1){
return or__24272__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b);
}
});
var _invoke__4 = (function (this$,a,b,c){
if((function (){var and__24260__auto__ = this$;
if(and__24260__auto__){
return this$.cljs$core$IFn$_invoke$arity$4;
} else {
return and__24260__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$4(this$,a,b,c);
} else {
var x__24916__auto__ = (((this$ == null))?null:this$);
return (function (){var or__24272__auto__ = (cljs.core._invoke[(function (){var G__38551 = x__24916__auto__;
return goog.typeOf(G__38551);
})()]);
if(or__24272__auto__){
return or__24272__auto__;
} else {
var or__24272__auto____$1 = (cljs.core._invoke["_"]);
if(or__24272__auto____$1){
return or__24272__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c);
}
});
var _invoke__5 = (function (this$,a,b,c,d){
if((function (){var and__24260__auto__ = this$;
if(and__24260__auto__){
return this$.cljs$core$IFn$_invoke$arity$5;
} else {
return and__24260__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$5(this$,a,b,c,d);
} else {
var x__24916__auto__ = (((this$ == null))?null:this$);
return (function (){var or__24272__auto__ = (cljs.core._invoke[(function (){var G__38553 = x__24916__auto__;
return goog.typeOf(G__38553);
})()]);
if(or__24272__auto__){
return or__24272__auto__;
} else {
var or__24272__auto____$1 = (cljs.core._invoke["_"]);
if(or__24272__auto____$1){
return or__24272__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d);
}
});
var _invoke__6 = (function (this$,a,b,c,d,e){
if((function (){var and__24260__auto__ = this$;
if(and__24260__auto__){
return this$.cljs$core$IFn$_invoke$arity$6;
} else {
return and__24260__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$6(this$,a,b,c,d,e);
} else {
var x__24916__auto__ = (((this$ == null))?null:this$);
return (function (){var or__24272__auto__ = (cljs.core._invoke[(function (){var G__38555 = x__24916__auto__;
return goog.typeOf(G__38555);
})()]);
if(or__24272__auto__){
return or__24272__auto__;
} else {
var or__24272__auto____$1 = (cljs.core._invoke["_"]);
if(or__24272__auto____$1){
return or__24272__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e);
}
});
var _invoke__7 = (function (this$,a,b,c,d,e,f){
if((function (){var and__24260__auto__ = this$;
if(and__24260__auto__){
return this$.cljs$core$IFn$_invoke$arity$7;
} else {
return and__24260__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$7(this$,a,b,c,d,e,f);
} else {
var x__24916__auto__ = (((this$ == null))?null:this$);
return (function (){var or__24272__auto__ = (cljs.core._invoke[(function (){var G__38557 = x__24916__auto__;
return goog.typeOf(G__38557);
})()]);
if(or__24272__auto__){
return or__24272__auto__;
} else {
var or__24272__auto____$1 = (cljs.core._invoke["_"]);
if(or__24272__auto____$1){
return or__24272__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f);
}
});
var _invoke__8 = (function (this$,a,b,c,d,e,f,g){
if((function (){var and__24260__auto__ = this$;
if(and__24260__auto__){
return this$.cljs$core$IFn$_invoke$arity$8;
} else {
return and__24260__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$8(this$,a,b,c,d,e,f,g);
} else {
var x__24916__auto__ = (((this$ == null))?null:this$);
return (function (){var or__24272__auto__ = (cljs.core._invoke[(function (){var G__38559 = x__24916__auto__;
return goog.typeOf(G__38559);
})()]);
if(or__24272__auto__){
return or__24272__auto__;
} else {
var or__24272__auto____$1 = (cljs.core._invoke["_"]);
if(or__24272__auto____$1){
return or__24272__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g);
}
});
var _invoke__9 = (function (this$,a,b,c,d,e,f,g,h){
if((function (){var and__24260__auto__ = this$;
if(and__24260__auto__){
return this$.cljs$core$IFn$_invoke$arity$9;
} else {
return and__24260__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$9(this$,a,b,c,d,e,f,g,h);
} else {
var x__24916__auto__ = (((this$ == null))?null:this$);
return (function (){var or__24272__auto__ = (cljs.core._invoke[(function (){var G__38561 = x__24916__auto__;
return goog.typeOf(G__38561);
})()]);
if(or__24272__auto__){
return or__24272__auto__;
} else {
var or__24272__auto____$1 = (cljs.core._invoke["_"]);
if(or__24272__auto____$1){
return or__24272__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h);
}
});
var _invoke__10 = (function (this$,a,b,c,d,e,f,g,h,i){
if((function (){var and__24260__auto__ = this$;
if(and__24260__auto__){
return this$.cljs$core$IFn$_invoke$arity$10;
} else {
return and__24260__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$10(this$,a,b,c,d,e,f,g,h,i);
} else {
var x__24916__auto__ = (((this$ == null))?null:this$);
return (function (){var or__24272__auto__ = (cljs.core._invoke[(function (){var G__38563 = x__24916__auto__;
return goog.typeOf(G__38563);
})()]);
if(or__24272__auto__){
return or__24272__auto__;
} else {
var or__24272__auto____$1 = (cljs.core._invoke["_"]);
if(or__24272__auto____$1){
return or__24272__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i);
}
});
var _invoke__11 = (function (this$,a,b,c,d,e,f,g,h,i,j){
if((function (){var and__24260__auto__ = this$;
if(and__24260__auto__){
return this$.cljs$core$IFn$_invoke$arity$11;
} else {
return and__24260__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$11(this$,a,b,c,d,e,f,g,h,i,j);
} else {
var x__24916__auto__ = (((this$ == null))?null:this$);
return (function (){var or__24272__auto__ = (cljs.core._invoke[(function (){var G__38565 = x__24916__auto__;
return goog.typeOf(G__38565);
})()]);
if(or__24272__auto__){
return or__24272__auto__;
} else {
var or__24272__auto____$1 = (cljs.core._invoke["_"]);
if(or__24272__auto____$1){
return or__24272__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j);
}
});
var _invoke__12 = (function (this$,a,b,c,d,e,f,g,h,i,j,k){
if((function (){var and__24260__auto__ = this$;
if(and__24260__auto__){
return this$.cljs$core$IFn$_invoke$arity$12;
} else {
return and__24260__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$12(this$,a,b,c,d,e,f,g,h,i,j,k);
} else {
var x__24916__auto__ = (((this$ == null))?null:this$);
return (function (){var or__24272__auto__ = (cljs.core._invoke[(function (){var G__38567 = x__24916__auto__;
return goog.typeOf(G__38567);
})()]);
if(or__24272__auto__){
return or__24272__auto__;
} else {
var or__24272__auto____$1 = (cljs.core._invoke["_"]);
if(or__24272__auto____$1){
return or__24272__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k);
}
});
var _invoke__13 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l){
if((function (){var and__24260__auto__ = this$;
if(and__24260__auto__){
return this$.cljs$core$IFn$_invoke$arity$13;
} else {
return and__24260__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$13(this$,a,b,c,d,e,f,g,h,i,j,k,l);
} else {
var x__24916__auto__ = (((this$ == null))?null:this$);
return (function (){var or__24272__auto__ = (cljs.core._invoke[(function (){var G__38569 = x__24916__auto__;
return goog.typeOf(G__38569);
})()]);
if(or__24272__auto__){
return or__24272__auto__;
} else {
var or__24272__auto____$1 = (cljs.core._invoke["_"]);
if(or__24272__auto____$1){
return or__24272__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l);
}
});
var _invoke__14 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m){
if((function (){var and__24260__auto__ = this$;
if(and__24260__auto__){
return this$.cljs$core$IFn$_invoke$arity$14;
} else {
return and__24260__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$14(this$,a,b,c,d,e,f,g,h,i,j,k,l,m);
} else {
var x__24916__auto__ = (((this$ == null))?null:this$);
return (function (){var or__24272__auto__ = (cljs.core._invoke[(function (){var G__38571 = x__24916__auto__;
return goog.typeOf(G__38571);
})()]);
if(or__24272__auto__){
return or__24272__auto__;
} else {
var or__24272__auto____$1 = (cljs.core._invoke["_"]);
if(or__24272__auto____$1){
return or__24272__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m);
}
});
var _invoke__15 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n){
if((function (){var and__24260__auto__ = this$;
if(and__24260__auto__){
return this$.cljs$core$IFn$_invoke$arity$15;
} else {
return and__24260__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$15(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
} else {
var x__24916__auto__ = (((this$ == null))?null:this$);
return (function (){var or__24272__auto__ = (cljs.core._invoke[(function (){var G__38573 = x__24916__auto__;
return goog.typeOf(G__38573);
})()]);
if(or__24272__auto__){
return or__24272__auto__;
} else {
var or__24272__auto____$1 = (cljs.core._invoke["_"]);
if(or__24272__auto____$1){
return or__24272__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
}
});
var _invoke__16 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
if((function (){var and__24260__auto__ = this$;
if(and__24260__auto__){
return this$.cljs$core$IFn$_invoke$arity$16;
} else {
return and__24260__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$16(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
} else {
var x__24916__auto__ = (((this$ == null))?null:this$);
return (function (){var or__24272__auto__ = (cljs.core._invoke[(function (){var G__38575 = x__24916__auto__;
return goog.typeOf(G__38575);
})()]);
if(or__24272__auto__){
return or__24272__auto__;
} else {
var or__24272__auto____$1 = (cljs.core._invoke["_"]);
if(or__24272__auto____$1){
return or__24272__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
}
});
var _invoke__17 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
if((function (){var and__24260__auto__ = this$;
if(and__24260__auto__){
return this$.cljs$core$IFn$_invoke$arity$17;
} else {
return and__24260__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$17(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
} else {
var x__24916__auto__ = (((this$ == null))?null:this$);
return (function (){var or__24272__auto__ = (cljs.core._invoke[(function (){var G__38577 = x__24916__auto__;
return goog.typeOf(G__38577);
})()]);
if(or__24272__auto__){
return or__24272__auto__;
} else {
var or__24272__auto____$1 = (cljs.core._invoke["_"]);
if(or__24272__auto____$1){
return or__24272__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
}
});
var _invoke__18 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
if((function (){var and__24260__auto__ = this$;
if(and__24260__auto__){
return this$.cljs$core$IFn$_invoke$arity$18;
} else {
return and__24260__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$18(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
} else {
var x__24916__auto__ = (((this$ == null))?null:this$);
return (function (){var or__24272__auto__ = (cljs.core._invoke[(function (){var G__38579 = x__24916__auto__;
return goog.typeOf(G__38579);
})()]);
if(or__24272__auto__){
return or__24272__auto__;
} else {
var or__24272__auto____$1 = (cljs.core._invoke["_"]);
if(or__24272__auto____$1){
return or__24272__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
}
});
var _invoke__19 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
if((function (){var and__24260__auto__ = this$;
if(and__24260__auto__){
return this$.cljs$core$IFn$_invoke$arity$19;
} else {
return and__24260__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$19(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
} else {
var x__24916__auto__ = (((this$ == null))?null:this$);
return (function (){var or__24272__auto__ = (cljs.core._invoke[(function (){var G__38581 = x__24916__auto__;
return goog.typeOf(G__38581);
})()]);
if(or__24272__auto__){
return or__24272__auto__;
} else {
var or__24272__auto____$1 = (cljs.core._invoke["_"]);
if(or__24272__auto____$1){
return or__24272__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
}
});
var _invoke__20 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
if((function (){var and__24260__auto__ = this$;
if(and__24260__auto__){
return this$.cljs$core$IFn$_invoke$arity$20;
} else {
return and__24260__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$20(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
} else {
var x__24916__auto__ = (((this$ == null))?null:this$);
return (function (){var or__24272__auto__ = (cljs.core._invoke[(function (){var G__38583 = x__24916__auto__;
return goog.typeOf(G__38583);
})()]);
if(or__24272__auto__){
return or__24272__auto__;
} else {
var or__24272__auto____$1 = (cljs.core._invoke["_"]);
if(or__24272__auto____$1){
return or__24272__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
}
});
var _invoke__21 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
if((function (){var and__24260__auto__ = this$;
if(and__24260__auto__){
return this$.cljs$core$IFn$_invoke$arity$21;
} else {
return and__24260__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$21(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
} else {
var x__24916__auto__ = (((this$ == null))?null:this$);
return (function (){var or__24272__auto__ = (cljs.core._invoke[(function (){var G__38585 = x__24916__auto__;
return goog.typeOf(G__38585);
})()]);
if(or__24272__auto__){
return or__24272__auto__;
} else {
var or__24272__auto____$1 = (cljs.core._invoke["_"]);
if(or__24272__auto____$1){
return or__24272__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
}
});
var _invoke__22 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
if((function (){var and__24260__auto__ = this$;
if(and__24260__auto__){
return this$.cljs$core$IFn$_invoke$arity$22;
} else {
return and__24260__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$22(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest);
} else {
var x__24916__auto__ = (((this$ == null))?null:this$);
return (function (){var or__24272__auto__ = (cljs.core._invoke[(function (){var G__38587 = x__24916__auto__;
return goog.typeOf(G__38587);
})()]);
if(or__24272__auto__){
return or__24272__auto__;
} else {
var or__24272__auto____$1 = (cljs.core._invoke["_"]);
if(or__24272__auto____$1){
return or__24272__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest);
}
});
_invoke = function(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
switch(arguments.length){
case 1:
return _invoke__1.call(this,this$);
case 2:
return _invoke__2.call(this,this$,a);
case 3:
return _invoke__3.call(this,this$,a,b);
case 4:
return _invoke__4.call(this,this$,a,b,c);
case 5:
return _invoke__5.call(this,this$,a,b,c,d);
case 6:
return _invoke__6.call(this,this$,a,b,c,d,e);
case 7:
return _invoke__7.call(this,this$,a,b,c,d,e,f);
case 8:
return _invoke__8.call(this,this$,a,b,c,d,e,f,g);
case 9:
return _invoke__9.call(this,this$,a,b,c,d,e,f,g,h);
case 10:
return _invoke__10.call(this,this$,a,b,c,d,e,f,g,h,i);
case 11:
return _invoke__11.call(this,this$,a,b,c,d,e,f,g,h,i,j);
case 12:
return _invoke__12.call(this,this$,a,b,c,d,e,f,g,h,i,j,k);
case 13:
return _invoke__13.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l);
case 14:
return _invoke__14.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m);
case 15:
return _invoke__15.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
case 16:
return _invoke__16.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
case 17:
return _invoke__17.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
case 18:
return _invoke__18.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
case 19:
return _invoke__19.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
case 20:
return _invoke__20.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
case 21:
return _invoke__21.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
case 22:
return _invoke__22.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_invoke.cljs$core$IFn$_invoke$arity$1 = _invoke__1;
_invoke.cljs$core$IFn$_invoke$arity$2 = _invoke__2;
_invoke.cljs$core$IFn$_invoke$arity$3 = _invoke__3;
_invoke.cljs$core$IFn$_invoke$arity$4 = _invoke__4;
_invoke.cljs$core$IFn$_invoke$arity$5 = _invoke__5;
_invoke.cljs$core$IFn$_invoke$arity$6 = _invoke__6;
_invoke.cljs$core$IFn$_invoke$arity$7 = _invoke__7;
_invoke.cljs$core$IFn$_invoke$arity$8 = _invoke__8;
_invoke.cljs$core$IFn$_invoke$arity$9 = _invoke__9;
_invoke.cljs$core$IFn$_invoke$arity$10 = _invoke__10;
_invoke.cljs$core$IFn$_invoke$arity$11 = _invoke__11;
_invoke.cljs$core$IFn$_invoke$arity$12 = _invoke__12;
_invoke.cljs$core$IFn$_invoke$arity$13 = _invoke__13;
_invoke.cljs$core$IFn$_invoke$arity$14 = _invoke__14;
_invoke.cljs$core$IFn$_invoke$arity$15 = _invoke__15;
_invoke.cljs$core$IFn$_invoke$arity$16 = _invoke__16;
_invoke.cljs$core$IFn$_invoke$arity$17 = _invoke__17;
_invoke.cljs$core$IFn$_invoke$arity$18 = _invoke__18;
_invoke.cljs$core$IFn$_invoke$arity$19 = _invoke__19;
_invoke.cljs$core$IFn$_invoke$arity$20 = _invoke__20;
_invoke.cljs$core$IFn$_invoke$arity$21 = _invoke__21;
_invoke.cljs$core$IFn$_invoke$arity$22 = _invoke__22;
return _invoke;
})()
;


cljs.core.ICloneable = (function (){var obj38589 = {};
return obj38589;
})();

cljs.core._clone = (function _clone(value){
if((function (){var and__24260__auto__ = value;
if(and__24260__auto__){
return value.cljs$core$ICloneable$_clone$arity$1;
} else {
return and__24260__auto__;
}
})()){
return value.cljs$core$ICloneable$_clone$arity$1(value);
} else {
var x__24916__auto__ = (((value == null))?null:value);
return (function (){var or__24272__auto__ = (cljs.core._clone[(function (){var G__38593 = x__24916__auto__;
return goog.typeOf(G__38593);
})()]);
if(or__24272__auto__){
return or__24272__auto__;
} else {
var or__24272__auto____$1 = (cljs.core._clone["_"]);
if(or__24272__auto____$1){
return or__24272__auto____$1;
} else {
throw cljs.core.missing_protocol("ICloneable.-clone",value);
}
}
})().call(null,value);
}
});


cljs.core.ICounted = (function (){var obj38595 = {};
return obj38595;
})();

cljs.core._count = (function _count(coll){
if((function (){var and__24260__auto__ = coll;
if(and__24260__auto__){
return coll.cljs$core$ICounted$_count$arity$1;
} else {
return and__24260__auto__;
}
})()){
return coll.cljs$core$ICounted$_count$arity$1(coll);
} else {
var x__24916__auto__ = (((coll == null))?null:coll);
return (function (){var or__24272__auto__ = (cljs.core._count[(function (){var G__38599 = x__24916__auto__;
return goog.typeOf(G__38599);
})()]);
if(or__24272__auto__){
return or__24272__auto__;
} else {
var or__24272__auto____$1 = (cljs.core._count["_"]);
if(or__24272__auto____$1){
return or__24272__auto____$1;
} else {
throw cljs.core.missing_protocol("ICounted.-count",coll);
}
}
})().call(null,coll);
}
});


cljs.core.IEmptyableCollection = (function (){var obj38601 = {};
return obj38601;
})();

cljs.core._empty = (function _empty(coll){
if((function (){var and__24260__auto__ = coll;
if(and__24260__auto__){
return coll.cljs$core$IEmptyableCollection$_empty$arity$1;
} else {
return and__24260__auto__;
}
})()){
return coll.cljs$core$IEmptyableCollection$_empty$arity$1(coll);
} else {
var x__24916__auto__ = (((coll == null))?null:coll);
return (function (){var or__24272__auto__ = (cljs.core._empty[(function (){var G__38605 = x__24916__auto__;
return goog.typeOf(G__38605);
})()]);
if(or__24272__auto__){
return or__24272__auto__;
} else {
var or__24272__auto____$1 = (cljs.core._empty["_"]);
if(or__24272__auto____$1){
return or__24272__auto____$1;
} else {
throw cljs.core.missing_protocol("IEmptyableCollection.-empty",coll);
}
}
})().call(null,coll);
}
});


cljs.core.ICollection = (function (){var obj38607 = {};
return obj38607;
})();

cljs.core._conj = (function _conj(coll,o){
if((function (){var and__24260__auto__ = coll;
if(and__24260__auto__){
return coll.cljs$core$ICollection$_conj$arity$2;
} else {
return and__24260__auto__;
}
})()){
return coll.cljs$core$ICollection$_conj$arity$2(coll,o);
} else {
var x__24916__auto__ = (((coll == null))?null:coll);
return (function (){var or__24272__auto__ = (cljs.core._conj[(function (){var G__38611 = x__24916__auto__;
return goog.typeOf(G__38611);
})()]);
if(or__24272__auto__){
return or__24272__auto__;
} else {
var or__24272__auto____$1 = (cljs.core._conj["_"]);
if(or__24272__auto____$1){
return or__24272__auto____$1;
} else {
throw cljs.core.missing_protocol("ICollection.-conj",coll);
}
}
})().call(null,coll,o);
}
});


cljs.core.IIndexed = (function (){var obj38613 = {};
return obj38613;
})();

cljs.core._nth = (function() {
var _nth = null;
var _nth__2 = (function (coll,n){
if((function (){var and__24260__auto__ = coll;
if(and__24260__auto__){
return coll.cljs$core$IIndexed$_nth$arity$2;
} else {
return and__24260__auto__;
}
})()){
return coll.cljs$core$IIndexed$_nth$arity$2(coll,n);
} else {
var x__24916__auto__ = (((coll == null))?null:coll);
return (function (){var or__24272__auto__ = (cljs.core._nth[(function (){var G__38619 = x__24916__auto__;
return goog.typeOf(G__38619);
})()]);
if(or__24272__auto__){
return or__24272__auto__;
} else {
var or__24272__auto____$1 = (cljs.core._nth["_"]);
if(or__24272__auto____$1){
return or__24272__auto____$1;
} else {
throw cljs.core.missing_protocol("IIndexed.-nth",coll);
}
}
})().call(null,coll,n);
}
});
var _nth__3 = (function (coll,n,not_found){
if((function (){var and__24260__auto__ = coll;
if(and__24260__auto__){
return coll.cljs$core$IIndexed$_nth$arity$3;
} else {
return and__24260__auto__;
}
})()){
return coll.cljs$core$IIndexed$_nth$arity$3(coll,n,not_found);
} else {
var x__24916__auto__ = (((coll == null))?null:coll);
return (function (){var or__24272__auto__ = (cljs.core._nth[(function (){var G__38621 = x__24916__auto__;
return goog.typeOf(G__38621);
})()]);
if(or__24272__auto__){
return or__24272__auto__;
} else {
var or__24272__auto____$1 = (cljs.core._nth["_"]);
if(or__24272__auto____$1){
return or__24272__auto____$1;
} else {
throw cljs.core.missing_protocol("IIndexed.-nth",coll);
}
}
})().call(null,coll,n,not_found);
}
});
_nth = function(coll,n,not_found){
switch(arguments.length){
case 2:
return _nth__2.call(this,coll,n);
case 3:
return _nth__3.call(this,coll,n,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_nth.cljs$core$IFn$_invoke$arity$2 = _nth__2;
_nth.cljs$core$IFn$_invoke$arity$3 = _nth__3;
return _nth;
})()
;


cljs.core.ASeq = (function (){var obj38623 = {};
return obj38623;
})();


cljs.core.ISeq = (function (){var obj38625 = {};
return obj38625;
})();

cljs.core._first = (function _first(coll){
if((function (){var and__24260__auto__ = coll;
if(and__24260__auto__){
return coll.cljs$core$ISeq$_first$arity$1;
} else {
return and__24260__auto__;
}
})()){
return coll.cljs$core$ISeq$_first$arity$1(coll);
} else {
var x__24916__auto__ = (((coll == null))?null:coll);
return (function (){var or__24272__auto__ = (cljs.core._first[(function (){var G__38629 = x__24916__auto__;
return goog.typeOf(G__38629);
})()]);
if(or__24272__auto__){
return or__24272__auto__;
} else {
var or__24272__auto____$1 = (cljs.core._first["_"]);
if(or__24272__auto____$1){
return or__24272__auto____$1;
} else {
throw cljs.core.missing_protocol("ISeq.-first",coll);
}
}
})().call(null,coll);
}
});

cljs.core._rest = (function _rest(coll){
if((function (){var and__24260__auto__ = coll;
if(and__24260__auto__){
return coll.cljs$core$ISeq$_rest$arity$1;
} else {
return and__24260__auto__;
}
})()){
return coll.cljs$core$ISeq$_rest$arity$1(coll);
} else {
var x__24916__auto__ = (((coll == null))?null:coll);
return (function (){var or__24272__auto__ = (cljs.core._rest[(function (){var G__38633 = x__24916__auto__;
return goog.typeOf(G__38633);
})()]);
if(or__24272__auto__){
return or__24272__auto__;
} else {
var or__24272__auto____$1 = (cljs.core._rest["_"]);
if(or__24272__auto____$1){
return or__24272__auto____$1;
} else {
throw cljs.core.missing_protocol("ISeq.-rest",coll);
}
}
})().call(null,coll);
}
});


cljs.core.INext = (function (){var obj38635 = {};
return obj38635;
})();

cljs.core._next = (function _next(coll){
if((function (){var and__24260__auto__ = coll;
if(and__24260__auto__){
return coll.cljs$core$INext$_next$arity$1;
} else {
return and__24260__auto__;
}
})()){
return coll.cljs$core$INext$_next$arity$1(coll);
} else {
var x__24916__auto__ = (((coll == null))?null:coll);
return (function (){var or__24272__auto__ = (cljs.core._next[(function (){var G__38639 = x__24916__auto__;
return goog.typeOf(G__38639);
})()]);
if(or__24272__auto__){
return or__24272__auto__;
} else {
var or__24272__auto____$1 = (cljs.core._next["_"]);
if(or__24272__auto____$1){
return or__24272__auto____$1;
} else {
throw cljs.core.missing_protocol("INext.-next",coll);
}
}
})().call(null,coll);
}
});


cljs.core.ILookup = (function (){var obj38641 = {};
return obj38641;
})();

cljs.core._lookup = (function() {
var _lookup = null;
var _lookup__2 = (function (o,k){
if((function (){var and__24260__auto__ = o;
if(and__24260__auto__){
return o.cljs$core$ILookup$_lookup$arity$2;
} else {
return and__24260__auto__;
}
})()){
return o.cljs$core$ILookup$_lookup$arity$2(o,k);
} else {
var x__24916__auto__ = (((o == null))?null:o);
return (function (){var or__24272__auto__ = (cljs.core._lookup[(function (){var G__38647 = x__24916__auto__;
return goog.typeOf(G__38647);
})()]);
if(or__24272__auto__){
return or__24272__auto__;
} else {
var or__24272__auto____$1 = (cljs.core._lookup["_"]);
if(or__24272__auto____$1){
return or__24272__auto____$1;
} else {
throw cljs.core.missing_protocol("ILookup.-lookup",o);
}
}
})().call(null,o,k);
}
});
var _lookup__3 = (function (o,k,not_found){
if((function (){var and__24260__auto__ = o;
if(and__24260__auto__){
return o.cljs$core$ILookup$_lookup$arity$3;
} else {
return and__24260__auto__;
}
})()){
return o.cljs$core$ILookup$_lookup$arity$3(o,k,not_found);
} else {
var x__24916__auto__ = (((o == null))?null:o);
return (function (){var or__24272__auto__ = (cljs.core._lookup[(function (){var G__38649 = x__24916__auto__;
return goog.typeOf(G__38649);
})()]);
if(or__24272__auto__){
return or__24272__auto__;
} else {
var or__24272__auto____$1 = (cljs.core._lookup["_"]);
if(or__24272__auto____$1){
return or__24272__auto____$1;
} else {
throw cljs.core.missing_protocol("ILookup.-lookup",o);
}
}
})().call(null,o,k,not_found);
}
});
_lookup = function(o,k,not_found){
switch(arguments.length){
case 2:
return _lookup__2.call(this,o,k);
case 3:
return _lookup__3.call(this,o,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_lookup.cljs$core$IFn$_invoke$arity$2 = _lookup__2;
_lookup.cljs$core$IFn$_invoke$arity$3 = _lookup__3;
return _lookup;
})()
;


cljs.core.IAssociative = (function (){var obj38651 = {};
return obj38651;
})();

cljs.core._contains_key_QMARK_ = (function _contains_key_QMARK_(coll,k){
if((function (){var and__24260__auto__ = coll;
if(and__24260__auto__){
return coll.cljs$core$IAssociative$_contains_key_QMARK_$arity$2;
} else {
return and__24260__auto__;
}
})()){
return coll.cljs$core$IAssociative$_contains_key_QMARK_$arity$2(coll,k);
} else {
var x__24916__auto__ = (((coll == null))?null:coll);
return (function (){var or__24272__auto__ = (cljs.core._contains_key_QMARK_[(function (){var G__38655 = x__24916__auto__;
return goog.typeOf(G__38655);
})()]);
if(or__24272__auto__){
return or__24272__auto__;
} else {
var or__24272__auto____$1 = (cljs.core._contains_key_QMARK_["_"]);
if(or__24272__auto____$1){
return or__24272__auto____$1;
} else {
throw cljs.core.missing_protocol("IAssociative.-contains-key?",coll);
}
}
})().call(null,coll,k);
}
});

cljs.core._assoc = (function _assoc(coll,k,v){
if((function (){var and__24260__auto__ = coll;
if(and__24260__auto__){
return coll.cljs$core$IAssociative$_assoc$arity$3;
} else {
return and__24260__auto__;
}
})()){
return coll.cljs$core$IAssociative$_assoc$arity$3(coll,k,v);
} else {
var x__24916__auto__ = (((coll == null))?null:coll);
return (function (){var or__24272__auto__ = (cljs.core._assoc[(function (){var G__38659 = x__24916__auto__;
return goog.typeOf(G__38659);
})()]);
if(or__24272__auto__){
return or__24272__auto__;
} else {
var or__24272__auto____$1 = (cljs.core._assoc["_"]);
if(or__24272__auto____$1){
return or__24272__auto____$1;
} else {
throw cljs.core.missing_protocol("IAssociative.-assoc",coll);
}
}
})().call(null,coll,k,v);
}
});


cljs.core.IMap = (function (){var obj38661 = {};
return obj38661;
})();

cljs.core._dissoc = (function _dissoc(coll,k){
if((function (){var and__24260__auto__ = coll;
if(and__24260__auto__){
return coll.cljs$core$IMap$_dissoc$arity$2;
} else {
return and__24260__auto__;
}
})()){
return coll.cljs$core$IMap$_dissoc$arity$2(coll,k);
} else {
var x__24916__auto__ = (((coll == null))?null:coll);
return (function (){var or__24272__auto__ = (cljs.core._dissoc[(function (){var G__38665 = x__24916__auto__;
return goog.typeOf(G__38665);
})()]);
if(or__24272__auto__){
return or__24272__auto__;
} else {
var or__24272__auto____$1 = (cljs.core._dissoc["_"]);
if(or__24272__auto____$1){
return or__24272__auto____$1;
} else {
throw cljs.core.missing_protocol("IMap.-dissoc",coll);
}
}
})().call(null,coll,k);
}
});


cljs.core.IMapEntry = (function (){var obj38667 = {};
return obj38667;
})();

cljs.core._key = (function _key(coll){
if((function (){var and__24260__auto__ = coll;
if(and__24260__auto__){
return coll.cljs$core$IMapEntry$_key$arity$1;
} else {
return and__24260__auto__;
}
})()){
return coll.cljs$core$IMapEntry$_key$arity$1(coll);
} else {
var x__24916__auto__ = (((coll == null))?null:coll);
return (function (){var or__24272__auto__ = (cljs.core._key[(function (){var G__38671 = x__24916__auto__;
return goog.typeOf(G__38671);
})()]);
if(or__24272__auto__){
return or__24272__auto__;
} else {
var or__24272__auto____$1 = (cljs.core._key["_"]);
if(or__24272__auto____$1){
return or__24272__auto____$1;
} else {
throw cljs.core.missing_protocol("IMapEntry.-key",coll);
}
}
})().call(null,coll);
}
});

cljs.core._val = (function _val(coll){
if((function (){var and__24260__auto__ = coll;
if(and__24260__auto__){
return coll.cljs$core$IMapEntry$_val$arity$1;
} else {
return and__24260__auto__;
}
})()){
return coll.cljs$core$IMapEntry$_val$arity$1(coll);
} else {
var x__24916__auto__ = (((coll == null))?null:coll);
return (function (){var or__24272__auto__ = (cljs.core._val[(function (){var G__38675 = x__24916__auto__;
return goog.typeOf(G__38675);
})()]);
if(or__24272__auto__){
return or__24272__auto__;
} else {
var or__24272__auto____$1 = (cljs.core._val["_"]);
if(or__24272__auto____$1){
return or__24272__auto____$1;
} else {
throw cljs.core.missing_protocol("IMapEntry.-val",coll);
}
}
})().call(null,coll);
}
});


cljs.core.ISet = (function (){var obj38677 = {};
return obj38677;
})();

cljs.core._disjoin = (function _disjoin(coll,v){
if((function (){var and__24260__auto__ = coll;
if(and__24260__auto__){
return coll.cljs$core$ISet$_disjoin$arity$2;
} else {
return and__24260__auto__;
}
})()){
return coll.cljs$core$ISet$_disjoin$arity$2(coll,v);
} else {
var x__24916__auto__ = (((coll == null))?null:coll);
return (function (){var or__24272__auto__ = (cljs.core._disjoin[(function (){var G__38681 = x__24916__auto__;
return goog.typeOf(G__38681);
})()]);
if(or__24272__auto__){
return or__24272__auto__;
} else {
var or__24272__auto____$1 = (cljs.core._disjoin["_"]);
if(or__24272__auto____$1){
return or__24272__auto____$1;
} else {
throw cljs.core.missing_protocol("ISet.-disjoin",coll);
}
}
})().call(null,coll,v);
}
});


cljs.core.IStack = (function (){var obj38683 = {};
return obj38683;
})();

cljs.core._peek = (function _peek(coll){
if((function (){var and__24260__auto__ = coll;
if(and__24260__auto__){
return coll.cljs$core$IStack$_peek$arity$1;
} else {
return and__24260__auto__;
}
})()){
return coll.cljs$core$IStack$_peek$arity$1(coll);
} else {
var x__24916__auto__ = (((coll == null))?null:coll);
return (function (){var or__24272__auto__ = (cljs.core._peek[(function (){var G__38687 = x__24916__auto__;
return goog.typeOf(G__38687);
})()]);
if(or__24272__auto__){
return or__24272__auto__;
} else {
var or__24272__auto____$1 = (cljs.core._peek["_"]);
if(or__24272__auto____$1){
return or__24272__auto____$1;
} else {
throw cljs.core.missing_protocol("IStack.-peek",coll);
}
}
})().call(null,coll);
}
});

cljs.core._pop = (function _pop(coll){
if((function (){var and__24260__auto__ = coll;
if(and__24260__auto__){
return coll.cljs$core$IStack$_pop$arity$1;
} else {
return and__24260__auto__;
}
})()){
return coll.cljs$core$IStack$_pop$arity$1(coll);
} else {
var x__24916__auto__ = (((coll == null))?null:coll);
return (function (){var or__24272__auto__ = (cljs.core._pop[(function (){var G__38691 = x__24916__auto__;
return goog.typeOf(G__38691);
})()]);
if(or__24272__auto__){
return or__24272__auto__;
} else {
var or__24272__auto____$1 = (cljs.core._pop["_"]);
if(or__24272__auto____$1){
return or__24272__auto____$1;
} else {
throw cljs.core.missing_protocol("IStack.-pop",coll);
}
}
})().call(null,coll);
}
});


cljs.core.IVector = (function (){var obj38693 = {};
return obj38693;
})();

cljs.core._assoc_n = (function _assoc_n(coll,n,val){
if((function (){var and__24260__auto__ = coll;
if(and__24260__auto__){
return coll.cljs$core$IVector$_assoc_n$arity$3;
} else {
return and__24260__auto__;
}
})()){
return coll.cljs$core$IVector$_assoc_n$arity$3(coll,n,val);
} else {
var x__24916__auto__ = (((coll == null))?null:coll);
return (function (){var or__24272__auto__ = (cljs.core._assoc_n[(function (){var G__38697 = x__24916__auto__;
return goog.typeOf(G__38697);
})()]);
if(or__24272__auto__){
return or__24272__auto__;
} else {
var or__24272__auto____$1 = (cljs.core._assoc_n["_"]);
if(or__24272__auto____$1){
return or__24272__auto____$1;
} else {
throw cljs.core.missing_protocol("IVector.-assoc-n",coll);
}
}
})().call(null,coll,n,val);
}
});


cljs.core.IDeref = (function (){var obj38699 = {};
return obj38699;
})();

cljs.core._deref = (function _deref(o){
if((function (){var and__24260__auto__ = o;
if(and__24260__auto__){
return o.cljs$core$IDeref$_deref$arity$1;
} else {
return and__24260__auto__;
}
})()){
return o.cljs$core$IDeref$_deref$arity$1(o);
} else {
var x__24916__auto__ = (((o == null))?null:o);
return (function (){var or__24272__auto__ = (cljs.core._deref[(function (){var G__38703 = x__24916__auto__;
return goog.typeOf(G__38703);
})()]);
if(or__24272__auto__){
return or__24272__auto__;
} else {
var or__24272__auto____$1 = (cljs.core._deref["_"]);
if(or__24272__auto____$1){
return or__24272__auto____$1;
} else {
throw cljs.core.missing_protocol("IDeref.-deref",o);
}
}
})().call(null,o);
}
});


cljs.core.IDerefWithTimeout = (function (){var obj38705 = {};
return obj38705;
})();

cljs.core._deref_with_timeout = (function _deref_with_timeout(o,msec,timeout_val){
if((function (){var and__24260__auto__ = o;
if(and__24260__auto__){
return o.cljs$core$IDerefWithTimeout$_deref_with_timeout$arity$3;
} else {
return and__24260__auto__;
}
})()){
return o.cljs$core$IDerefWithTimeout$_deref_with_timeout$arity$3(o,msec,timeout_val);
} else {
var x__24916__auto__ = (((o == null))?null:o);
return (function (){var or__24272__auto__ = (cljs.core._deref_with_timeout[(function (){var G__38709 = x__24916__auto__;
return goog.typeOf(G__38709);
})()]);
if(or__24272__auto__){
return or__24272__auto__;
} else {
var or__24272__auto____$1 = (cljs.core._deref_with_timeout["_"]);
if(or__24272__auto____$1){
return or__24272__auto____$1;
} else {
throw cljs.core.missing_protocol("IDerefWithTimeout.-deref-with-timeout",o);
}
}
})().call(null,o,msec,timeout_val);
}
});


cljs.core.IMeta = (function (){var obj38711 = {};
return obj38711;
})();

cljs.core._meta = (function _meta(o){
if((function (){var and__24260__auto__ = o;
if(and__24260__auto__){
return o.cljs$core$IMeta$_meta$arity$1;
} else {
return and__24260__auto__;
}
})()){
return o.cljs$core$IMeta$_meta$arity$1(o);
} else {
var x__24916__auto__ = (((o == null))?null:o);
return (function (){var or__24272__auto__ = (cljs.core._meta[(function (){var G__38715 = x__24916__auto__;
return goog.typeOf(G__38715);
})()]);
if(or__24272__auto__){
return or__24272__auto__;
} else {
var or__24272__auto____$1 = (cljs.core._meta["_"]);
if(or__24272__auto____$1){
return or__24272__auto____$1;
} else {
throw cljs.core.missing_protocol("IMeta.-meta",o);
}
}
})().call(null,o);
}
});


cljs.core.IWithMeta = (function (){var obj38717 = {};
return obj38717;
})();

cljs.core._with_meta = (function _with_meta(o,meta){
if((function (){var and__24260__auto__ = o;
if(and__24260__auto__){
return o.cljs$core$IWithMeta$_with_meta$arity$2;
} else {
return and__24260__auto__;
}
})()){
return o.cljs$core$IWithMeta$_with_meta$arity$2(o,meta);
} else {
var x__24916__auto__ = (((o == null))?null:o);
return (function (){var or__24272__auto__ = (cljs.core._with_meta[(function (){var G__38721 = x__24916__auto__;
return goog.typeOf(G__38721);
})()]);
if(or__24272__auto__){
return or__24272__auto__;
} else {
var or__24272__auto____$1 = (cljs.core._with_meta["_"]);
if(or__24272__auto____$1){
return or__24272__auto____$1;
} else {
throw cljs.core.missing_protocol("IWithMeta.-with-meta",o);
}
}
})().call(null,o,meta);
}
});


cljs.core.IReduce = (function (){var obj38723 = {};
return obj38723;
})();

cljs.core._reduce = (function() {
var _reduce = null;
var _reduce__2 = (function (coll,f){
if((function (){var and__24260__auto__ = coll;
if(and__24260__auto__){
return coll.cljs$core$IReduce$_reduce$arity$2;
} else {
return and__24260__auto__;
}
})()){
return coll.cljs$core$IReduce$_reduce$arity$2(coll,f);
} else {
var x__24916__auto__ = (((coll == null))?null:coll);
return (function (){var or__24272__auto__ = (cljs.core._reduce[(function (){var G__38729 = x__24916__auto__;
return goog.typeOf(G__38729);
})()]);
if(or__24272__auto__){
return or__24272__auto__;
} else {
var or__24272__auto____$1 = (cljs.core._reduce["_"]);
if(or__24272__auto____$1){
return or__24272__auto____$1;
} else {
throw cljs.core.missing_protocol("IReduce.-reduce",coll);
}
}
})().call(null,coll,f);
}
});
var _reduce__3 = (function (coll,f,start){
if((function (){var and__24260__auto__ = coll;
if(and__24260__auto__){
return coll.cljs$core$IReduce$_reduce$arity$3;
} else {
return and__24260__auto__;
}
})()){
return coll.cljs$core$IReduce$_reduce$arity$3(coll,f,start);
} else {
var x__24916__auto__ = (((coll == null))?null:coll);
return (function (){var or__24272__auto__ = (cljs.core._reduce[(function (){var G__38731 = x__24916__auto__;
return goog.typeOf(G__38731);
})()]);
if(or__24272__auto__){
return or__24272__auto__;
} else {
var or__24272__auto____$1 = (cljs.core._reduce["_"]);
if(or__24272__auto____$1){
return or__24272__auto____$1;
} else {
throw cljs.core.missing_protocol("IReduce.-reduce",coll);
}
}
})().call(null,coll,f,start);
}
});
_reduce = function(coll,f,start){
switch(arguments.length){
case 2:
return _reduce__2.call(this,coll,f);
case 3:
return _reduce__3.call(this,coll,f,start);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_reduce.cljs$core$IFn$_invoke$arity$2 = _reduce__2;
_reduce.cljs$core$IFn$_invoke$arity$3 = _reduce__3;
return _reduce;
})()
;


cljs.core.IKVReduce = (function (){var obj38733 = {};
return obj38733;
})();

cljs.core._kv_reduce = (function _kv_reduce(coll,f,init){
if((function (){var and__24260__auto__ = coll;
if(and__24260__auto__){
return coll.cljs$core$IKVReduce$_kv_reduce$arity$3;
} else {
return and__24260__auto__;
}
})()){
return coll.cljs$core$IKVReduce$_kv_reduce$arity$3(coll,f,init);
} else {
var x__24916__auto__ = (((coll == null))?null:coll);
return (function (){var or__24272__auto__ = (cljs.core._kv_reduce[(function (){var G__38737 = x__24916__auto__;
return goog.typeOf(G__38737);
})()]);
if(or__24272__auto__){
return or__24272__auto__;
} else {
var or__24272__auto____$1 = (cljs.core._kv_reduce["_"]);
if(or__24272__auto____$1){
return or__24272__auto____$1;
} else {
throw cljs.core.missing_protocol("IKVReduce.-kv-reduce",coll);
}
}
})().call(null,coll,f,init);
}
});


cljs.core.IEquiv = (function (){var obj38739 = {};
return obj38739;
})();

cljs.core._equiv = (function _equiv(o,other){
if((function (){var and__24260__auto__ = o;
if(and__24260__auto__){
return o.cljs$core$IEquiv$_equiv$arity$2;
} else {
return and__24260__auto__;
}
})()){
return o.cljs$core$IEquiv$_equiv$arity$2(o,other);
} else {
var x__24916__auto__ = (((o == null))?null:o);
return (function (){var or__24272__auto__ = (cljs.core._equiv[(function (){var G__38743 = x__24916__auto__;
return goog.typeOf(G__38743);
})()]);
if(or__24272__auto__){
return or__24272__auto__;
} else {
var or__24272__auto____$1 = (cljs.core._equiv["_"]);
if(or__24272__auto____$1){
return or__24272__auto____$1;
} else {
throw cljs.core.missing_protocol("IEquiv.-equiv",o);
}
}
})().call(null,o,other);
}
});


cljs.core.IHash = (function (){var obj38745 = {};
return obj38745;
})();

cljs.core._hash = (function _hash(o){
if((function (){var and__24260__auto__ = o;
if(and__24260__auto__){
return o.cljs$core$IHash$_hash$arity$1;
} else {
return and__24260__auto__;
}
})()){
return o.cljs$core$IHash$_hash$arity$1(o);
} else {
var x__24916__auto__ = (((o == null))?null:o);
return (function (){var or__24272__auto__ = (cljs.core._hash[(function (){var G__38749 = x__24916__auto__;
return goog.typeOf(G__38749);
})()]);
if(or__24272__auto__){
return or__24272__auto__;
} else {
var or__24272__auto____$1 = (cljs.core._hash["_"]);
if(or__24272__auto____$1){
return or__24272__auto____$1;
} else {
throw cljs.core.missing_protocol("IHash.-hash",o);
}
}
})().call(null,o);
}
});


cljs.core.ISeqable = (function (){var obj38751 = {};
return obj38751;
})();

cljs.core._seq = (function _seq(o){
if((function (){var and__24260__auto__ = o;
if(and__24260__auto__){
return o.cljs$core$ISeqable$_seq$arity$1;
} else {
return and__24260__auto__;
}
})()){
return o.cljs$core$ISeqable$_seq$arity$1(o);
} else {
var x__24916__auto__ = (((o == null))?null:o);
return (function (){var or__24272__auto__ = (cljs.core._seq[(function (){var G__38755 = x__24916__auto__;
return goog.typeOf(G__38755);
})()]);
if(or__24272__auto__){
return or__24272__auto__;
} else {
var or__24272__auto____$1 = (cljs.core._seq["_"]);
if(or__24272__auto____$1){
return or__24272__auto____$1;
} else {
throw cljs.core.missing_protocol("ISeqable.-seq",o);
}
}
})().call(null,o);
}
});


cljs.core.ISequential = (function (){var obj38757 = {};
return obj38757;
})();


cljs.core.IList = (function (){var obj38759 = {};
return obj38759;
})();


cljs.core.IRecord = (function (){var obj38761 = {};
return obj38761;
})();


cljs.core.IReversible = (function (){var obj38763 = {};
return obj38763;
})();

cljs.core._rseq = (function _rseq(coll){
if((function (){var and__24260__auto__ = coll;
if(and__24260__auto__){
return coll.cljs$core$IReversible$_rseq$arity$1;
} else {
return and__24260__auto__;
}
})()){
return coll.cljs$core$IReversible$_rseq$arity$1(coll);
} else {
var x__24916__auto__ = (((coll == null))?null:coll);
return (function (){var or__24272__auto__ = (cljs.core._rseq[(function (){var G__38767 = x__24916__auto__;
return goog.typeOf(G__38767);
})()]);
if(or__24272__auto__){
return or__24272__auto__;
} else {
var or__24272__auto____$1 = (cljs.core._rseq["_"]);
if(or__24272__auto____$1){
return or__24272__auto____$1;
} else {
throw cljs.core.missing_protocol("IReversible.-rseq",coll);
}
}
})().call(null,coll);
}
});


cljs.core.ISorted = (function (){var obj38769 = {};
return obj38769;
})();

cljs.core._sorted_seq = (function _sorted_seq(coll,ascending_QMARK_){
if((function (){var and__24260__auto__ = coll;
if(and__24260__auto__){
return coll.cljs$core$ISorted$_sorted_seq$arity$2;
} else {
return and__24260__auto__;
}
})()){
return coll.cljs$core$ISorted$_sorted_seq$arity$2(coll,ascending_QMARK_);
} else {
var x__24916__auto__ = (((coll == null))?null:coll);
return (function (){var or__24272__auto__ = (cljs.core._sorted_seq[(function (){var G__38773 = x__24916__auto__;
return goog.typeOf(G__38773);
})()]);
if(or__24272__auto__){
return or__24272__auto__;
} else {
var or__24272__auto____$1 = (cljs.core._sorted_seq["_"]);
if(or__24272__auto____$1){
return or__24272__auto____$1;
} else {
throw cljs.core.missing_protocol("ISorted.-sorted-seq",coll);
}
}
})().call(null,coll,ascending_QMARK_);
}
});

cljs.core._sorted_seq_from = (function _sorted_seq_from(coll,k,ascending_QMARK_){
if((function (){var and__24260__auto__ = coll;
if(and__24260__auto__){
return coll.cljs$core$ISorted$_sorted_seq_from$arity$3;
} else {
return and__24260__auto__;
}
})()){
return coll.cljs$core$ISorted$_sorted_seq_from$arity$3(coll,k,ascending_QMARK_);
} else {
var x__24916__auto__ = (((coll == null))?null:coll);
return (function (){var or__24272__auto__ = (cljs.core._sorted_seq_from[(function (){var G__38777 = x__24916__auto__;
return goog.typeOf(G__38777);
})()]);
if(or__24272__auto__){
return or__24272__auto__;
} else {
var or__24272__auto____$1 = (cljs.core._sorted_seq_from["_"]);
if(or__24272__auto____$1){
return or__24272__auto____$1;
} else {
throw cljs.core.missing_protocol("ISorted.-sorted-seq-from",coll);
}
}
})().call(null,coll,k,ascending_QMARK_);
}
});

cljs.core._entry_key = (function _entry_key(coll,entry){
if((function (){var and__24260__auto__ = coll;
if(and__24260__auto__){
return coll.cljs$core$ISorted$_entry_key$arity$2;
} else {
return and__24260__auto__;
}
})()){
return coll.cljs$core$ISorted$_entry_key$arity$2(coll,entry);
} else {
var x__24916__auto__ = (((coll == null))?null:coll);
return (function (){var or__24272__auto__ = (cljs.core._entry_key[(function (){var G__38781 = x__24916__auto__;
return goog.typeOf(G__38781);
})()]);
if(or__24272__auto__){
return or__24272__auto__;
} else {
var or__24272__auto____$1 = (cljs.core._entry_key["_"]);
if(or__24272__auto____$1){
return or__24272__auto____$1;
} else {
throw cljs.core.missing_protocol("ISorted.-entry-key",coll);
}
}
})().call(null,coll,entry);
}
});

cljs.core._comparator = (function _comparator(coll){
if((function (){var and__24260__auto__ = coll;
if(and__24260__auto__){
return coll.cljs$core$ISorted$_comparator$arity$1;
} else {
return and__24260__auto__;
}
})()){
return coll.cljs$core$ISorted$_comparator$arity$1(coll);
} else {
var x__24916__auto__ = (((coll == null))?null:coll);
return (function (){var or__24272__auto__ = (cljs.core._comparator[(function (){var G__38785 = x__24916__auto__;
return goog.typeOf(G__38785);
})()]);
if(or__24272__auto__){
return or__24272__auto__;
} else {
var or__24272__auto____$1 = (cljs.core._comparator["_"]);
if(or__24272__auto____$1){
return or__24272__auto____$1;
} else {
throw cljs.core.missing_protocol("ISorted.-comparator",coll);
}
}
})().call(null,coll);
}
});


cljs.core.IWriter = (function (){var obj38787 = {};
return obj38787;
})();

cljs.core._write = (function _write(writer,s){
if((function (){var and__24260__auto__ = writer;
if(and__24260__auto__){
return writer.cljs$core$IWriter$_write$arity$2;
} else {
return and__24260__auto__;
}
})()){
return writer.cljs$core$IWriter$_write$arity$2(writer,s);
} else {
var x__24916__auto__ = (((writer == null))?null:writer);
return (function (){var or__24272__auto__ = (cljs.core._write[(function (){var G__38791 = x__24916__auto__;
return goog.typeOf(G__38791);
})()]);
if(or__24272__auto__){
return or__24272__auto__;
} else {
var or__24272__auto____$1 = (cljs.core._write["_"]);
if(or__24272__auto____$1){
return or__24272__auto____$1;
} else {
throw cljs.core.missing_protocol("IWriter.-write",writer);
}
}
})().call(null,writer,s);
}
});

cljs.core._flush = (function _flush(writer){
if((function (){var and__24260__auto__ = writer;
if(and__24260__auto__){
return writer.cljs$core$IWriter$_flush$arity$1;
} else {
return and__24260__auto__;
}
})()){
return writer.cljs$core$IWriter$_flush$arity$1(writer);
} else {
var x__24916__auto__ = (((writer == null))?null:writer);
return (function (){var or__24272__auto__ = (cljs.core._flush[(function (){var G__38795 = x__24916__auto__;
return goog.typeOf(G__38795);
})()]);
if(or__24272__auto__){
return or__24272__auto__;
} else {
var or__24272__auto____$1 = (cljs.core._flush["_"]);
if(or__24272__auto____$1){
return or__24272__auto____$1;
} else {
throw cljs.core.missing_protocol("IWriter.-flush",writer);
}
}
})().call(null,writer);
}
});


cljs.core.IPrintWithWriter = (function (){var obj38797 = {};
return obj38797;
})();

cljs.core._pr_writer = (function _pr_writer(o,writer,opts){
if((function (){var and__24260__auto__ = o;
if(and__24260__auto__){
return o.cljs$core$IPrintWithWriter$_pr_writer$arity$3;
} else {
return and__24260__auto__;
}
})()){
return o.cljs$core$IPrintWithWriter$_pr_writer$arity$3(o,writer,opts);
} else {
var x__24916__auto__ = (((o == null))?null:o);
return (function (){var or__24272__auto__ = (cljs.core._pr_writer[(function (){var G__38801 = x__24916__auto__;
return goog.typeOf(G__38801);
})()]);
if(or__24272__auto__){
return or__24272__auto__;
} else {
var or__24272__auto____$1 = (cljs.core._pr_writer["_"]);
if(or__24272__auto____$1){
return or__24272__auto____$1;
} else {
throw cljs.core.missing_protocol("IPrintWithWriter.-pr-writer",o);
}
}
})().call(null,o,writer,opts);
}
});


cljs.core.IPending = (function (){var obj38803 = {};
return obj38803;
})();

cljs.core._realized_QMARK_ = (function _realized_QMARK_(d){
if((function (){var and__24260__auto__ = d;
if(and__24260__auto__){
return d.cljs$core$IPending$_realized_QMARK_$arity$1;
} else {
return and__24260__auto__;
}
})()){
return d.cljs$core$IPending$_realized_QMARK_$arity$1(d);
} else {
var x__24916__auto__ = (((d == null))?null:d);
return (function (){var or__24272__auto__ = (cljs.core._realized_QMARK_[(function (){var G__38807 = x__24916__auto__;
return goog.typeOf(G__38807);
})()]);
if(or__24272__auto__){
return or__24272__auto__;
} else {
var or__24272__auto____$1 = (cljs.core._realized_QMARK_["_"]);
if(or__24272__auto____$1){
return or__24272__auto____$1;
} else {
throw cljs.core.missing_protocol("IPending.-realized?",d);
}
}
})().call(null,d);
}
});


cljs.core.IWatchable = (function (){var obj38809 = {};
return obj38809;
})();

cljs.core._notify_watches = (function _notify_watches(this$,oldval,newval){
if((function (){var and__24260__auto__ = this$;
if(and__24260__auto__){
return this$.cljs$core$IWatchable$_notify_watches$arity$3;
} else {
return and__24260__auto__;
}
})()){
return this$.cljs$core$IWatchable$_notify_watches$arity$3(this$,oldval,newval);
} else {
var x__24916__auto__ = (((this$ == null))?null:this$);
return (function (){var or__24272__auto__ = (cljs.core._notify_watches[(function (){var G__38813 = x__24916__auto__;
return goog.typeOf(G__38813);
})()]);
if(or__24272__auto__){
return or__24272__auto__;
} else {
var or__24272__auto____$1 = (cljs.core._notify_watches["_"]);
if(or__24272__auto____$1){
return or__24272__auto____$1;
} else {
throw cljs.core.missing_protocol("IWatchable.-notify-watches",this$);
}
}
})().call(null,this$,oldval,newval);
}
});

cljs.core._add_watch = (function _add_watch(this$,key,f){
if((function (){var and__24260__auto__ = this$;
if(and__24260__auto__){
return this$.cljs$core$IWatchable$_add_watch$arity$3;
} else {
return and__24260__auto__;
}
})()){
return this$.cljs$core$IWatchable$_add_watch$arity$3(this$,key,f);
} else {
var x__24916__auto__ = (((this$ == null))?null:this$);
return (function (){var or__24272__auto__ = (cljs.core._add_watch[(function (){var G__38817 = x__24916__auto__;
return goog.typeOf(G__38817);
})()]);
if(or__24272__auto__){
return or__24272__auto__;
} else {
var or__24272__auto____$1 = (cljs.core._add_watch["_"]);
if(or__24272__auto____$1){
return or__24272__auto____$1;
} else {
throw cljs.core.missing_protocol("IWatchable.-add-watch",this$);
}
}
})().call(null,this$,key,f);
}
});

cljs.core._remove_watch = (function _remove_watch(this$,key){
if((function (){var and__24260__auto__ = this$;
if(and__24260__auto__){
return this$.cljs$core$IWatchable$_remove_watch$arity$2;
} else {
return and__24260__auto__;
}
})()){
return this$.cljs$core$IWatchable$_remove_watch$arity$2(this$,key);
} else {
var x__24916__auto__ = (((this$ == null))?null:this$);
return (function (){var or__24272__auto__ = (cljs.core._remove_watch[(function (){var G__38821 = x__24916__auto__;
return goog.typeOf(G__38821);
})()]);
if(or__24272__auto__){
return or__24272__auto__;
} else {
var or__24272__auto____$1 = (cljs.core._remove_watch["_"]);
if(or__24272__auto____$1){
return or__24272__auto____$1;
} else {
throw cljs.core.missing_protocol("IWatchable.-remove-watch",this$);
}
}
})().call(null,this$,key);
}
});


cljs.core.IEditableCollection = (function (){var obj38823 = {};
return obj38823;
})();

cljs.core._as_transient = (function _as_transient(coll){
if((function (){var and__24260__auto__ = coll;
if(and__24260__auto__){
return coll.cljs$core$IEditableCollection$_as_transient$arity$1;
} else {
return and__24260__auto__;
}
})()){
return coll.cljs$core$IEditableCollection$_as_transient$arity$1(coll);
} else {
var x__24916__auto__ = (((coll == null))?null:coll);
return (function (){var or__24272__auto__ = (cljs.core._as_transient[(function (){var G__38827 = x__24916__auto__;
return goog.typeOf(G__38827);
})()]);
if(or__24272__auto__){
return or__24272__auto__;
} else {
var or__24272__auto____$1 = (cljs.core._as_transient["_"]);
if(or__24272__auto____$1){
return or__24272__auto____$1;
} else {
throw cljs.core.missing_protocol("IEditableCollection.-as-transient",coll);
}
}
})().call(null,coll);
}
});


cljs.core.ITransientCollection = (function (){var obj38829 = {};
return obj38829;
})();

cljs.core._conj_BANG_ = (function _conj_BANG_(tcoll,val){
if((function (){var and__24260__auto__ = tcoll;
if(and__24260__auto__){
return tcoll.cljs$core$ITransientCollection$_conj_BANG_$arity$2;
} else {
return and__24260__auto__;
}
})()){
return tcoll.cljs$core$ITransientCollection$_conj_BANG_$arity$2(tcoll,val);
} else {
var x__24916__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__24272__auto__ = (cljs.core._conj_BANG_[(function (){var G__38833 = x__24916__auto__;
return goog.typeOf(G__38833);
})()]);
if(or__24272__auto__){
return or__24272__auto__;
} else {
var or__24272__auto____$1 = (cljs.core._conj_BANG_["_"]);
if(or__24272__auto____$1){
return or__24272__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientCollection.-conj!",tcoll);
}
}
})().call(null,tcoll,val);
}
});

cljs.core._persistent_BANG_ = (function _persistent_BANG_(tcoll){
if((function (){var and__24260__auto__ = tcoll;
if(and__24260__auto__){
return tcoll.cljs$core$ITransientCollection$_persistent_BANG_$arity$1;
} else {
return and__24260__auto__;
}
})()){
return tcoll.cljs$core$ITransientCollection$_persistent_BANG_$arity$1(tcoll);
} else {
var x__24916__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__24272__auto__ = (cljs.core._persistent_BANG_[(function (){var G__38837 = x__24916__auto__;
return goog.typeOf(G__38837);
})()]);
if(or__24272__auto__){
return or__24272__auto__;
} else {
var or__24272__auto____$1 = (cljs.core._persistent_BANG_["_"]);
if(or__24272__auto____$1){
return or__24272__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientCollection.-persistent!",tcoll);
}
}
})().call(null,tcoll);
}
});


cljs.core.ITransientAssociative = (function (){var obj38839 = {};
return obj38839;
})();

cljs.core._assoc_BANG_ = (function _assoc_BANG_(tcoll,key,val){
if((function (){var and__24260__auto__ = tcoll;
if(and__24260__auto__){
return tcoll.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3;
} else {
return and__24260__auto__;
}
})()){
return tcoll.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3(tcoll,key,val);
} else {
var x__24916__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__24272__auto__ = (cljs.core._assoc_BANG_[(function (){var G__38843 = x__24916__auto__;
return goog.typeOf(G__38843);
})()]);
if(or__24272__auto__){
return or__24272__auto__;
} else {
var or__24272__auto____$1 = (cljs.core._assoc_BANG_["_"]);
if(or__24272__auto____$1){
return or__24272__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientAssociative.-assoc!",tcoll);
}
}
})().call(null,tcoll,key,val);
}
});


cljs.core.ITransientMap = (function (){var obj38845 = {};
return obj38845;
})();

cljs.core._dissoc_BANG_ = (function _dissoc_BANG_(tcoll,key){
if((function (){var and__24260__auto__ = tcoll;
if(and__24260__auto__){
return tcoll.cljs$core$ITransientMap$_dissoc_BANG_$arity$2;
} else {
return and__24260__auto__;
}
})()){
return tcoll.cljs$core$ITransientMap$_dissoc_BANG_$arity$2(tcoll,key);
} else {
var x__24916__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__24272__auto__ = (cljs.core._dissoc_BANG_[(function (){var G__38849 = x__24916__auto__;
return goog.typeOf(G__38849);
})()]);
if(or__24272__auto__){
return or__24272__auto__;
} else {
var or__24272__auto____$1 = (cljs.core._dissoc_BANG_["_"]);
if(or__24272__auto____$1){
return or__24272__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientMap.-dissoc!",tcoll);
}
}
})().call(null,tcoll,key);
}
});


cljs.core.ITransientVector = (function (){var obj38851 = {};
return obj38851;
})();

cljs.core._assoc_n_BANG_ = (function _assoc_n_BANG_(tcoll,n,val){
if((function (){var and__24260__auto__ = tcoll;
if(and__24260__auto__){
return tcoll.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3;
} else {
return and__24260__auto__;
}
})()){
return tcoll.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3(tcoll,n,val);
} else {
var x__24916__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__24272__auto__ = (cljs.core._assoc_n_BANG_[(function (){var G__38855 = x__24916__auto__;
return goog.typeOf(G__38855);
})()]);
if(or__24272__auto__){
return or__24272__auto__;
} else {
var or__24272__auto____$1 = (cljs.core._assoc_n_BANG_["_"]);
if(or__24272__auto____$1){
return or__24272__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientVector.-assoc-n!",tcoll);
}
}
})().call(null,tcoll,n,val);
}
});

cljs.core._pop_BANG_ = (function _pop_BANG_(tcoll){
if((function (){var and__24260__auto__ = tcoll;
if(and__24260__auto__){
return tcoll.cljs$core$ITransientVector$_pop_BANG_$arity$1;
} else {
return and__24260__auto__;
}
})()){
return tcoll.cljs$core$ITransientVector$_pop_BANG_$arity$1(tcoll);
} else {
var x__24916__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__24272__auto__ = (cljs.core._pop_BANG_[(function (){var G__38859 = x__24916__auto__;
return goog.typeOf(G__38859);
})()]);
if(or__24272__auto__){
return or__24272__auto__;
} else {
var or__24272__auto____$1 = (cljs.core._pop_BANG_["_"]);
if(or__24272__auto____$1){
return or__24272__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientVector.-pop!",tcoll);
}
}
})().call(null,tcoll);
}
});


cljs.core.ITransientSet = (function (){var obj38861 = {};
return obj38861;
})();

cljs.core._disjoin_BANG_ = (function _disjoin_BANG_(tcoll,v){
if((function (){var and__24260__auto__ = tcoll;
if(and__24260__auto__){
return tcoll.cljs$core$ITransientSet$_disjoin_BANG_$arity$2;
} else {
return and__24260__auto__;
}
})()){
return tcoll.cljs$core$ITransientSet$_disjoin_BANG_$arity$2(tcoll,v);
} else {
var x__24916__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__24272__auto__ = (cljs.core._disjoin_BANG_[(function (){var G__38865 = x__24916__auto__;
return goog.typeOf(G__38865);
})()]);
if(or__24272__auto__){
return or__24272__auto__;
} else {
var or__24272__auto____$1 = (cljs.core._disjoin_BANG_["_"]);
if(or__24272__auto____$1){
return or__24272__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientSet.-disjoin!",tcoll);
}
}
})().call(null,tcoll,v);
}
});


cljs.core.IComparable = (function (){var obj38867 = {};
return obj38867;
})();

cljs.core._compare = (function _compare(x,y){
if((function (){var and__24260__auto__ = x;
if(and__24260__auto__){
return x.cljs$core$IComparable$_compare$arity$2;
} else {
return and__24260__auto__;
}
})()){
return x.cljs$core$IComparable$_compare$arity$2(x,y);
} else {
var x__24916__auto__ = (((x == null))?null:x);
return (function (){var or__24272__auto__ = (cljs.core._compare[(function (){var G__38871 = x__24916__auto__;
return goog.typeOf(G__38871);
})()]);
if(or__24272__auto__){
return or__24272__auto__;
} else {
var or__24272__auto____$1 = (cljs.core._compare["_"]);
if(or__24272__auto____$1){
return or__24272__auto____$1;
} else {
throw cljs.core.missing_protocol("IComparable.-compare",x);
}
}
})().call(null,x,y);
}
});


cljs.core.IChunk = (function (){var obj38873 = {};
return obj38873;
})();

cljs.core._drop_first = (function _drop_first(coll){
if((function (){var and__24260__auto__ = coll;
if(and__24260__auto__){
return coll.cljs$core$IChunk$_drop_first$arity$1;
} else {
return and__24260__auto__;
}
})()){
return coll.cljs$core$IChunk$_drop_first$arity$1(coll);
} else {
var x__24916__auto__ = (((coll == null))?null:coll);
return (function (){var or__24272__auto__ = (cljs.core._drop_first[(function (){var G__38877 = x__24916__auto__;
return goog.typeOf(G__38877);
})()]);
if(or__24272__auto__){
return or__24272__auto__;
} else {
var or__24272__auto____$1 = (cljs.core._drop_first["_"]);
if(or__24272__auto____$1){
return or__24272__auto____$1;
} else {
throw cljs.core.missing_protocol("IChunk.-drop-first",coll);
}
}
})().call(null,coll);
}
});


cljs.core.IChunkedSeq = (function (){var obj38879 = {};
return obj38879;
})();

cljs.core._chunked_first = (function _chunked_first(coll){
if((function (){var and__24260__auto__ = coll;
if(and__24260__auto__){
return coll.cljs$core$IChunkedSeq$_chunked_first$arity$1;
} else {
return and__24260__auto__;
}
})()){
return coll.cljs$core$IChunkedSeq$_chunked_first$arity$1(coll);
} else {
var x__24916__auto__ = (((coll == null))?null:coll);
return (function (){var or__24272__auto__ = (cljs.core._chunked_first[(function (){var G__38883 = x__24916__auto__;
return goog.typeOf(G__38883);
})()]);
if(or__24272__auto__){
return or__24272__auto__;
} else {
var or__24272__auto____$1 = (cljs.core._chunked_first["_"]);
if(or__24272__auto____$1){
return or__24272__auto____$1;
} else {
throw cljs.core.missing_protocol("IChunkedSeq.-chunked-first",coll);
}
}
})().call(null,coll);
}
});

cljs.core._chunked_rest = (function _chunked_rest(coll){
if((function (){var and__24260__auto__ = coll;
if(and__24260__auto__){
return coll.cljs$core$IChunkedSeq$_chunked_rest$arity$1;
} else {
return and__24260__auto__;
}
})()){
return coll.cljs$core$IChunkedSeq$_chunked_rest$arity$1(coll);
} else {
var x__24916__auto__ = (((coll == null))?null:coll);
return (function (){var or__24272__auto__ = (cljs.core._chunked_rest[(function (){var G__38887 = x__24916__auto__;
return goog.typeOf(G__38887);
})()]);
if(or__24272__auto__){
return or__24272__auto__;
} else {
var or__24272__auto____$1 = (cljs.core._chunked_rest["_"]);
if(or__24272__auto____$1){
return or__24272__auto____$1;
} else {
throw cljs.core.missing_protocol("IChunkedSeq.-chunked-rest",coll);
}
}
})().call(null,coll);
}
});


cljs.core.IChunkedNext = (function (){var obj38889 = {};
return obj38889;
})();

cljs.core._chunked_next = (function _chunked_next(coll){
if((function (){var and__24260__auto__ = coll;
if(and__24260__auto__){
return coll.cljs$core$IChunkedNext$_chunked_next$arity$1;
} else {
return and__24260__auto__;
}
})()){
return coll.cljs$core$IChunkedNext$_chunked_next$arity$1(coll);
} else {
var x__24916__auto__ = (((coll == null))?null:coll);
return (function (){var or__24272__auto__ = (cljs.core._chunked_next[(function (){var G__38893 = x__24916__auto__;
return goog.typeOf(G__38893);
})()]);
if(or__24272__auto__){
return or__24272__auto__;
} else {
var or__24272__auto____$1 = (cljs.core._chunked_next["_"]);
if(or__24272__auto____$1){
return or__24272__auto____$1;
} else {
throw cljs.core.missing_protocol("IChunkedNext.-chunked-next",coll);
}
}
})().call(null,coll);
}
});


cljs.core.INamed = (function (){var obj38895 = {};
return obj38895;
})();

cljs.core._name = (function _name(x){
if((function (){var and__24260__auto__ = x;
if(and__24260__auto__){
return x.cljs$core$INamed$_name$arity$1;
} else {
return and__24260__auto__;
}
})()){
return x.cljs$core$INamed$_name$arity$1(x);
} else {
var x__24916__auto__ = (((x == null))?null:x);
return (function (){var or__24272__auto__ = (cljs.core._name[(function (){var G__38899 = x__24916__auto__;
return goog.typeOf(G__38899);
})()]);
if(or__24272__auto__){
return or__24272__auto__;
} else {
var or__24272__auto____$1 = (cljs.core._name["_"]);
if(or__24272__auto____$1){
return or__24272__auto____$1;
} else {
throw cljs.core.missing_protocol("INamed.-name",x);
}
}
})().call(null,x);
}
});

cljs.core._namespace = (function _namespace(x){
if((function (){var and__24260__auto__ = x;
if(and__24260__auto__){
return x.cljs$core$INamed$_namespace$arity$1;
} else {
return and__24260__auto__;
}
})()){
return x.cljs$core$INamed$_namespace$arity$1(x);
} else {
var x__24916__auto__ = (((x == null))?null:x);
return (function (){var or__24272__auto__ = (cljs.core._namespace[(function (){var G__38903 = x__24916__auto__;
return goog.typeOf(G__38903);
})()]);
if(or__24272__auto__){
return or__24272__auto__;
} else {
var or__24272__auto____$1 = (cljs.core._namespace["_"]);
if(or__24272__auto____$1){
return or__24272__auto____$1;
} else {
throw cljs.core.missing_protocol("INamed.-namespace",x);
}
}
})().call(null,x);
}
});


cljs.core.IAtom = (function (){var obj38905 = {};
return obj38905;
})();


cljs.core.IReset = (function (){var obj38907 = {};
return obj38907;
})();

cljs.core._reset_BANG_ = (function _reset_BANG_(o,new_value){
if((function (){var and__24260__auto__ = o;
if(and__24260__auto__){
return o.cljs$core$IReset$_reset_BANG_$arity$2;
} else {
return and__24260__auto__;
}
})()){
return o.cljs$core$IReset$_reset_BANG_$arity$2(o,new_value);
} else {
var x__24916__auto__ = (((o == null))?null:o);
return (function (){var or__24272__auto__ = (cljs.core._reset_BANG_[(function (){var G__38911 = x__24916__auto__;
return goog.typeOf(G__38911);
})()]);
if(or__24272__auto__){
return or__24272__auto__;
} else {
var or__24272__auto____$1 = (cljs.core._reset_BANG_["_"]);
if(or__24272__auto____$1){
return or__24272__auto____$1;
} else {
throw cljs.core.missing_protocol("IReset.-reset!",o);
}
}
})().call(null,o,new_value);
}
});


cljs.core.ISwap = (function (){var obj38913 = {};
return obj38913;
})();

cljs.core._swap_BANG_ = (function() {
var _swap_BANG_ = null;
var _swap_BANG___2 = (function (o,f){
if((function (){var and__24260__auto__ = o;
if(and__24260__auto__){
return o.cljs$core$ISwap$_swap_BANG_$arity$2;
} else {
return and__24260__auto__;
}
})()){
return o.cljs$core$ISwap$_swap_BANG_$arity$2(o,f);
} else {
var x__24916__auto__ = (((o == null))?null:o);
return (function (){var or__24272__auto__ = (cljs.core._swap_BANG_[(function (){var G__38923 = x__24916__auto__;
return goog.typeOf(G__38923);
})()]);
if(or__24272__auto__){
return or__24272__auto__;
} else {
var or__24272__auto____$1 = (cljs.core._swap_BANG_["_"]);
if(or__24272__auto____$1){
return or__24272__auto____$1;
} else {
throw cljs.core.missing_protocol("ISwap.-swap!",o);
}
}
})().call(null,o,f);
}
});
var _swap_BANG___3 = (function (o,f,a){
if((function (){var and__24260__auto__ = o;
if(and__24260__auto__){
return o.cljs$core$ISwap$_swap_BANG_$arity$3;
} else {
return and__24260__auto__;
}
})()){
return o.cljs$core$ISwap$_swap_BANG_$arity$3(o,f,a);
} else {
var x__24916__auto__ = (((o == null))?null:o);
return (function (){var or__24272__auto__ = (cljs.core._swap_BANG_[(function (){var G__38925 = x__24916__auto__;
return goog.typeOf(G__38925);
})()]);
if(or__24272__auto__){
return or__24272__auto__;
} else {
var or__24272__auto____$1 = (cljs.core._swap_BANG_["_"]);
if(or__24272__auto____$1){
return or__24272__auto____$1;
} else {
throw cljs.core.missing_protocol("ISwap.-swap!",o);
}
}
})().call(null,o,f,a);
}
});
var _swap_BANG___4 = (function (o,f,a,b){
if((function (){var and__24260__auto__ = o;
if(and__24260__auto__){
return o.cljs$core$ISwap$_swap_BANG_$arity$4;
} else {
return and__24260__auto__;
}
})()){
return o.cljs$core$ISwap$_swap_BANG_$arity$4(o,f,a,b);
} else {
var x__24916__auto__ = (((o == null))?null:o);
return (function (){var or__24272__auto__ = (cljs.core._swap_BANG_[(function (){var G__38927 = x__24916__auto__;
return goog.typeOf(G__38927);
})()]);
if(or__24272__auto__){
return or__24272__auto__;
} else {
var or__24272__auto____$1 = (cljs.core._swap_BANG_["_"]);
if(or__24272__auto____$1){
return or__24272__auto____$1;
} else {
throw cljs.core.missing_protocol("ISwap.-swap!",o);
}
}
})().call(null,o,f,a,b);
}
});
var _swap_BANG___5 = (function (o,f,a,b,xs){
if((function (){var and__24260__auto__ = o;
if(and__24260__auto__){
return o.cljs$core$ISwap$_swap_BANG_$arity$5;
} else {
return and__24260__auto__;
}
})()){
return o.cljs$core$ISwap$_swap_BANG_$arity$5(o,f,a,b,xs);
} else {
var x__24916__auto__ = (((o == null))?null:o);
return (function (){var or__24272__auto__ = (cljs.core._swap_BANG_[(function (){var G__38929 = x__24916__auto__;
return goog.typeOf(G__38929);
})()]);
if(or__24272__auto__){
return or__24272__auto__;
} else {
var or__24272__auto____$1 = (cljs.core._swap_BANG_["_"]);
if(or__24272__auto____$1){
return or__24272__auto____$1;
} else {
throw cljs.core.missing_protocol("ISwap.-swap!",o);
}
}
})().call(null,o,f,a,b,xs);
}
});
_swap_BANG_ = function(o,f,a,b,xs){
switch(arguments.length){
case 2:
return _swap_BANG___2.call(this,o,f);
case 3:
return _swap_BANG___3.call(this,o,f,a);
case 4:
return _swap_BANG___4.call(this,o,f,a,b);
case 5:
return _swap_BANG___5.call(this,o,f,a,b,xs);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_swap_BANG_.cljs$core$IFn$_invoke$arity$2 = _swap_BANG___2;
_swap_BANG_.cljs$core$IFn$_invoke$arity$3 = _swap_BANG___3;
_swap_BANG_.cljs$core$IFn$_invoke$arity$4 = _swap_BANG___4;
_swap_BANG_.cljs$core$IFn$_invoke$arity$5 = _swap_BANG___5;
return _swap_BANG_;
})()
;


cljs.core.IVolatile = (function (){var obj38931 = {};
return obj38931;
})();

cljs.core._vreset_BANG_ = (function _vreset_BANG_(o,new_value){
if((function (){var and__24260__auto__ = o;
if(and__24260__auto__){
return o.cljs$core$IVolatile$_vreset_BANG_$arity$2;
} else {
return and__24260__auto__;
}
})()){
return o.cljs$core$IVolatile$_vreset_BANG_$arity$2(o,new_value);
} else {
var x__24916__auto__ = (((o == null))?null:o);
return (function (){var or__24272__auto__ = (cljs.core._vreset_BANG_[(function (){var G__38935 = x__24916__auto__;
return goog.typeOf(G__38935);
})()]);
if(or__24272__auto__){
return or__24272__auto__;
} else {
var or__24272__auto____$1 = (cljs.core._vreset_BANG_["_"]);
if(or__24272__auto____$1){
return or__24272__auto____$1;
} else {
throw cljs.core.missing_protocol("IVolatile.-vreset!",o);
}
}
})().call(null,o,new_value);
}
});


cljs.core.IIterable = (function (){var obj38937 = {};
return obj38937;
})();

cljs.core._iterator = (function _iterator(coll){
if((function (){var and__24260__auto__ = coll;
if(and__24260__auto__){
return coll.cljs$core$IIterable$_iterator$arity$1;
} else {
return and__24260__auto__;
}
})()){
return coll.cljs$core$IIterable$_iterator$arity$1(coll);
} else {
var x__24916__auto__ = (((coll == null))?null:coll);
return (function (){var or__24272__auto__ = (cljs.core._iterator[(function (){var G__38941 = x__24916__auto__;
return goog.typeOf(G__38941);
})()]);
if(or__24272__auto__){
return or__24272__auto__;
} else {
var or__24272__auto____$1 = (cljs.core._iterator["_"]);
if(or__24272__auto____$1){
return or__24272__auto____$1;
} else {
throw cljs.core.missing_protocol("IIterable.-iterator",coll);
}
}
})().call(null,coll);
}
});


/**
* @constructor
*/
cljs.core.StringBufferWriter = (function (sb){
this.sb = sb;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 1073741824;
})
cljs.core.StringBufferWriter.prototype.cljs$core$IWriter$_write$arity$2 = (function (_,s){
var self__ = this;
var ___$1 = this;
return self__.sb.append(s);
});

cljs.core.StringBufferWriter.prototype.cljs$core$IWriter$_flush$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return null;
});

cljs.core.StringBufferWriter.cljs$lang$type = true;

cljs.core.StringBufferWriter.cljs$lang$ctorStr = "cljs.core/StringBufferWriter";

cljs.core.StringBufferWriter.cljs$lang$ctorPrWriter = (function (this__24859__auto__,writer__24860__auto__,opt__24861__auto__){
return cljs.core._write(writer__24860__auto__,"cljs.core/StringBufferWriter");
});

cljs.core.__GT_StringBufferWriter = (function __GT_StringBufferWriter(sb){
return (new cljs.core.StringBufferWriter(sb));
});

/**
* Support so that collections can implement toString without
* loading all the printing machinery.
*/
cljs.core.pr_str_STAR_ = (function pr_str_STAR_(obj){
var sb = (new goog.string.StringBuffer());
var writer = (new cljs.core.StringBufferWriter(sb));
obj.cljs$core$IPrintWithWriter$_pr_writer$arity$3(null,writer,cljs.core.pr_opts());

writer.cljs$core$IWriter$_flush$arity$1(null);

return [cljs.core.str(sb)].join('');
});
cljs.core.int_rotate_left = (function int_rotate_left(x,n){
return ((x << n) | (x >>> (- n)));
});
if((typeof Math.imul !== 'undefined') && (!(((function (){var G__38944 = (4294967295);
var G__38945 = (5);
return (Math.imul.cljs$core$IFn$_invoke$arity$2 ? Math.imul.cljs$core$IFn$_invoke$arity$2(G__38944,G__38945) : Math.imul.call(null,G__38944,G__38945));
})() === (0))))){
cljs.core.imul = (function imul(a,b){
var G__38948 = a;
var G__38949 = b;
return (Math.imul.cljs$core$IFn$_invoke$arity$2 ? Math.imul.cljs$core$IFn$_invoke$arity$2(G__38948,G__38949) : Math.imul.call(null,G__38948,G__38949));
});
} else {
cljs.core.imul = (function imul(a,b){
var ah = ((a >>> (16)) & (65535));
var al = (a & (65535));
var bh = ((b >>> (16)) & (65535));
var bl = (b & (65535));
return (((al * bl) + ((((ah * bl) + (al * bh)) << (16)) >>> (0))) | (0));
});
}
cljs.core.m3_seed = (0);
cljs.core.m3_C1 = (3432918353);
cljs.core.m3_C2 = (461845907);
cljs.core.m3_mix_K1 = (function m3_mix_K1(k1){
return cljs.core.imul(cljs.core.int_rotate_left(cljs.core.imul(k1,cljs.core.m3_C1),(15)),cljs.core.m3_C2);
});
cljs.core.m3_mix_H1 = (function m3_mix_H1(h1,k1){
return (cljs.core.imul(cljs.core.int_rotate_left((h1 ^ k1),(13)),(5)) + (3864292196));
});
cljs.core.m3_fmix = (function m3_fmix(h1,len){
var h1__$1 = h1;
var h1__$2 = (h1__$1 ^ len);
var h1__$3 = (h1__$2 ^ (h1__$2 >>> (16)));
var h1__$4 = cljs.core.imul(h1__$3,(2246822507));
var h1__$5 = (h1__$4 ^ (h1__$4 >>> (13)));
var h1__$6 = cljs.core.imul(h1__$5,(3266489909));
var h1__$7 = (h1__$6 ^ (h1__$6 >>> (16)));
return h1__$7;
});
cljs.core.m3_hash_int = (function m3_hash_int(in$){
if((in$ === (0))){
return in$;
} else {
var k1 = cljs.core.m3_mix_K1(in$);
var h1 = cljs.core.m3_mix_H1(cljs.core.m3_seed,k1);
return cljs.core.m3_fmix(h1,(4));
}
});
cljs.core.m3_hash_unencoded_chars = (function m3_hash_unencoded_chars(in$){
var h1 = (function (){var i = (1);
var h1 = cljs.core.m3_seed;
while(true){
if((i < in$.length)){
var G__38950 = (i + (2));
var G__38951 = cljs.core.m3_mix_H1(h1,cljs.core.m3_mix_K1((in$.charCodeAt((i - (1))) | (in$.charCodeAt(i) << (16)))));
i = G__38950;
h1 = G__38951;
continue;
} else {
return h1;
}
break;
}
})();
var h1__$1 = ((((in$.length & (1)) === (1)))?(h1 ^ cljs.core.m3_mix_K1(in$.charCodeAt((in$.length - (1))))):h1);
return cljs.core.m3_fmix(h1__$1,cljs.core.imul((2),in$.length));
});



cljs.core.string_hash_cache = (function (){var obj38953 = {};
return obj38953;
})();
cljs.core.string_hash_cache_count = (0);
cljs.core.hash_string_STAR_ = (function hash_string_STAR_(s){
if(!((s == null))){
var len = s.length;
if((len > (0))){
var i = (0);
var hash = (0);
while(true){
if((i < len)){
var G__38954 = (i + (1));
var G__38955 = (cljs.core.imul((31),hash) + s.charCodeAt(i));
i = G__38954;
hash = G__38955;
continue;
} else {
return hash;
}
break;
}
} else {
return (0);
}
} else {
return (0);
}
});
cljs.core.add_to_string_hash_cache = (function add_to_string_hash_cache(k){
var h = cljs.core.hash_string_STAR_(k);
(cljs.core.string_hash_cache[k] = h);

cljs.core.string_hash_cache_count = (cljs.core.string_hash_cache_count + (1));

return h;
});
cljs.core.hash_string = (function hash_string(k){
if((cljs.core.string_hash_cache_count > (255))){
cljs.core.string_hash_cache = (function (){var obj38959 = {};
return obj38959;
})();

cljs.core.string_hash_cache_count = (0);
} else {
}

var h = (cljs.core.string_hash_cache[k]);
if(typeof h === 'number'){
return h;
} else {
return cljs.core.add_to_string_hash_cache(k);
}
});
cljs.core.hash = (function hash(o){
if((function (){var G__38962 = o;
if(G__38962){
var bit__24946__auto__ = (G__38962.cljs$lang$protocol_mask$partition0$ & (4194304));
if((bit__24946__auto__) || (G__38962.cljs$core$IHash$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return o.cljs$core$IHash$_hash$arity$1(null);
} else {
if(typeof o === 'number'){
return ((function (){var G__38963 = o;
return (Math.floor.cljs$core$IFn$_invoke$arity$1 ? Math.floor.cljs$core$IFn$_invoke$arity$1(G__38963) : Math.floor.call(null,G__38963));
})() % (2147483647));
} else {
if(o === true){
return (1);
} else {
if(o === false){
return (0);
} else {
if(typeof o === 'string'){
return cljs.core.m3_hash_int(cljs.core.hash_string(o));
} else {
if((o instanceof Date)){
return o.valueOf();
} else {
if((o == null)){
return (0);
} else {
return cljs.core._hash(o);

}
}
}
}
}
}
}
});
cljs.core.hash_combine = (function hash_combine(seed,hash){
return (seed ^ (((hash + (2654435769)) + (seed << (6))) + (seed >> (2))));
});
cljs.core.instance_QMARK_ = (function instance_QMARK_(t,o){
return (o instanceof t);
});
cljs.core.symbol_QMARK_ = (function symbol_QMARK_(x){
return (x instanceof cljs.core.Symbol);
});
cljs.core.hash_symbol = (function hash_symbol(sym){
return cljs.core.hash_combine(cljs.core.m3_hash_unencoded_chars(sym.name),cljs.core.hash_string(sym.ns));
});
cljs.core.compare_symbols = (function compare_symbols(a,b){
if((a.str === b.str)){
return (0);
} else {
if(cljs.core.truth_((function (){var and__24260__auto__ = cljs.core.not(a.ns);
if(and__24260__auto__){
return b.ns;
} else {
return and__24260__auto__;
}
})())){
return (-1);
} else {
if(cljs.core.truth_(a.ns)){
if(cljs.core.not(b.ns)){
return (1);
} else {
var nsc = (function (){var G__38970 = a.ns;
var G__38971 = b.ns;
return goog.array.defaultCompare(G__38970,G__38971);
})();
if(((0) === nsc)){
var G__38972 = a.name;
var G__38973 = b.name;
return goog.array.defaultCompare(G__38972,G__38973);
} else {
return nsc;
}
}
} else {
var G__38974 = a.name;
var G__38975 = b.name;
return goog.array.defaultCompare(G__38974,G__38975);

}
}
}
});

/**
* @constructor
*/
cljs.core.Symbol = (function (ns,name,str,_hash,_meta){
this.ns = ns;
this.name = name;
this.str = str;
this._hash = _hash;
this._meta = _meta;
this.cljs$lang$protocol_mask$partition0$ = 2154168321;
this.cljs$lang$protocol_mask$partition1$ = 4096;
})
cljs.core.Symbol.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (o,writer,_){
var self__ = this;
var o__$1 = this;
return cljs.core._write(writer,self__.str);
});

cljs.core.Symbol.prototype.cljs$core$INamed$_name$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.name;
});

cljs.core.Symbol.prototype.cljs$core$INamed$_namespace$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.ns;
});

cljs.core.Symbol.prototype.cljs$core$IHash$_hash$arity$1 = (function (sym){
var self__ = this;
var sym__$1 = this;
var h__24693__auto__ = self__._hash;
if(!((h__24693__auto__ == null))){
return h__24693__auto__;
} else {
var h__24693__auto____$1 = cljs.core.hash_symbol(sym__$1);
self__._hash = h__24693__auto____$1;

return h__24693__auto____$1;
}
});

cljs.core.Symbol.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (_,new_meta){
var self__ = this;
var ___$1 = this;
return (new cljs.core.Symbol(self__.ns,self__.name,self__.str,self__._hash,new_meta));
});

cljs.core.Symbol.prototype.cljs$core$IMeta$_meta$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__._meta;
});

cljs.core.Symbol.prototype.call = (function() {
var G__38977 = null;
var G__38977__2 = (function (self__,coll){
var self__ = this;
var self____$1 = this;
var sym = self____$1;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll,sym,null);
});
var G__38977__3 = (function (self__,coll,not_found){
var self__ = this;
var self____$1 = this;
var sym = self____$1;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll,sym,not_found);
});
G__38977 = function(self__,coll,not_found){
switch(arguments.length){
case 2:
return G__38977__2.call(this,self__,coll);
case 3:
return G__38977__3.call(this,self__,coll,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__38977.cljs$core$IFn$_invoke$arity$2 = G__38977__2;
G__38977.cljs$core$IFn$_invoke$arity$3 = G__38977__3;
return G__38977;
})()
;

cljs.core.Symbol.prototype.apply = (function (self__,args38976){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args38976)));
});

cljs.core.Symbol.prototype.cljs$core$IFn$_invoke$arity$1 = (function (coll){
var self__ = this;
var sym = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll,sym,null);
});

cljs.core.Symbol.prototype.cljs$core$IFn$_invoke$arity$2 = (function (coll,not_found){
var self__ = this;
var sym = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll,sym,not_found);
});

cljs.core.Symbol.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (_,other){
var self__ = this;
var ___$1 = this;
if((other instanceof cljs.core.Symbol)){
return (self__.str === other.str);
} else {
return false;
}
});

cljs.core.Symbol.prototype.toString = (function (){
var self__ = this;
var _ = this;
return self__.str;
});

cljs.core.Symbol.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.Symbol.cljs$lang$type = true;

cljs.core.Symbol.cljs$lang$ctorStr = "cljs.core/Symbol";

cljs.core.Symbol.cljs$lang$ctorPrWriter = (function (this__24859__auto__,writer__24860__auto__,opt__24861__auto__){
return cljs.core._write(writer__24860__auto__,"cljs.core/Symbol");
});

cljs.core.__GT_Symbol = (function __GT_Symbol(ns,name,str,_hash,_meta){
return (new cljs.core.Symbol(ns,name,str,_hash,_meta));
});

cljs.core.symbol = (function() {
var symbol = null;
var symbol__1 = (function (name){
if((name instanceof cljs.core.Symbol)){
return name;
} else {
return symbol.cljs$core$IFn$_invoke$arity$2(null,name);
}
});
var symbol__2 = (function (ns,name){
var sym_str = ((!((ns == null)))?[cljs.core.str(ns),cljs.core.str("/"),cljs.core.str(name)].join(''):name);
return (new cljs.core.Symbol(ns,name,sym_str,null,null));
});
symbol = function(ns,name){
switch(arguments.length){
case 1:
return symbol__1.call(this,ns);
case 2:
return symbol__2.call(this,ns,name);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
symbol.cljs$core$IFn$_invoke$arity$1 = symbol__1;
symbol.cljs$core$IFn$_invoke$arity$2 = symbol__2;
return symbol;
})()
;

/**
* @constructor
*/
cljs.core.Var = (function (val,sym,_meta){
this.val = val;
this.sym = sym;
this._meta = _meta;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 163840;
})
cljs.core.Var.prototype.cljs$core$IMeta$_meta$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__._meta;
});

cljs.core.Var.prototype.cljs$core$IDeref$_deref$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.val;
});

cljs.core.Var.cljs$lang$type = true;

cljs.core.Var.cljs$lang$ctorStr = "cljs.core/Var";

cljs.core.Var.cljs$lang$ctorPrWriter = (function (this__24859__auto__,writer__24860__auto__,opt__24861__auto__){
return cljs.core._write(writer__24860__auto__,"cljs.core/Var");
});

cljs.core.__GT_Var = (function __GT_Var(val,sym,_meta){
return (new cljs.core.Var(val,sym,_meta));
});



cljs.core.iterable_QMARK_ = (function iterable_QMARK_(x){
var G__38981 = x;
if(G__38981){
var bit__24953__auto__ = null;
if(cljs.core.truth_((function (){var or__24272__auto__ = bit__24953__auto__;
if(cljs.core.truth_(or__24272__auto__)){
return or__24272__auto__;
} else {
return G__38981.cljs$core$IIterable$;
}
})())){
return true;
} else {
if((!G__38981.cljs$lang$protocol_mask$partition$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IIterable,G__38981);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IIterable,G__38981);
}
});
cljs.core.clone = (function clone(value){
return cljs.core._clone(value);
});
cljs.core.cloneable_QMARK_ = (function cloneable_QMARK_(value){
var G__38983 = value;
if(G__38983){
var bit__24953__auto__ = (G__38983.cljs$lang$protocol_mask$partition1$ & (8192));
if((bit__24953__auto__) || (G__38983.cljs$core$ICloneable$)){
return true;
} else {
if((!G__38983.cljs$lang$protocol_mask$partition1$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ICloneable,G__38983);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ICloneable,G__38983);
}
});
/**
* Returns a seq on the collection. If the collection is
* empty, returns nil.  (seq nil) returns nil. seq also works on
* Strings.
*/
cljs.core.seq = (function seq(coll){
if((coll == null)){
return null;
} else {
if((function (){var G__38985 = coll;
if(G__38985){
var bit__24946__auto__ = (G__38985.cljs$lang$protocol_mask$partition0$ & (8388608));
if((bit__24946__auto__) || (G__38985.cljs$core$ISeqable$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$ISeqable$_seq$arity$1(null);
} else {
if(coll instanceof Array){
if((coll.length === (0))){
return null;
} else {
return (new cljs.core.IndexedSeq(coll,(0)));
}
} else {
if(typeof coll === 'string'){
if((coll.length === (0))){
return null;
} else {
return (new cljs.core.IndexedSeq(coll,(0)));
}
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.ISeqable,coll)){
return cljs.core._seq(coll);
} else {
throw (new Error([cljs.core.str(coll),cljs.core.str(" is not ISeqable")].join('')));

}
}
}
}
}
});
/**
* Returns the first item in the collection. Calls seq on its
* argument. If coll is nil, returns nil.
*/
cljs.core.first = (function first(coll){
if((coll == null)){
return null;
} else {
if((function (){var G__38987 = coll;
if(G__38987){
var bit__24946__auto__ = (G__38987.cljs$lang$protocol_mask$partition0$ & (64));
if((bit__24946__auto__) || (G__38987.cljs$core$ISeq$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$ISeq$_first$arity$1(null);
} else {
var s = cljs.core.seq(coll);
if((s == null)){
return null;
} else {
return cljs.core._first(s);
}
}
}
});
/**
* Returns a possibly empty seq of the items after the first. Calls seq on its
* argument.
*/
cljs.core.rest = (function rest(coll){
if(!((coll == null))){
if((function (){var G__38989 = coll;
if(G__38989){
var bit__24946__auto__ = (G__38989.cljs$lang$protocol_mask$partition0$ & (64));
if((bit__24946__auto__) || (G__38989.cljs$core$ISeq$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$ISeq$_rest$arity$1(null);
} else {
var s = cljs.core.seq(coll);
if(s){
return cljs.core._rest(s);
} else {
return cljs.core.List.EMPTY;
}
}
} else {
return cljs.core.List.EMPTY;
}
});
/**
* Returns a seq of the items after the first. Calls seq on its
* argument.  If there are no more items, returns nil
*/
cljs.core.next = (function next(coll){
if((coll == null)){
return null;
} else {
if((function (){var G__38991 = coll;
if(G__38991){
var bit__24946__auto__ = (G__38991.cljs$lang$protocol_mask$partition0$ & (128));
if((bit__24946__auto__) || (G__38991.cljs$core$INext$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$INext$_next$arity$1(null);
} else {
return cljs.core.seq(cljs.core.rest(coll));
}
}
});
/**
* Equality. Returns true if x equals y, false if not. Compares
* numbers and collections in a type-independent manner.  Clojure's immutable data
* structures define -equiv (and thus =) as a value, not an identity,
* comparison.
* @param {...*} var_args
*/
cljs.core._EQ_ = (function() {
var _EQ_ = null;
var _EQ___1 = (function (x){
return true;
});
var _EQ___2 = (function (x,y){
if((x == null)){
return (y == null);
} else {
return ((x === y)) || (cljs.core._equiv(x,y));
}
});
var _EQ___3 = (function() { 
var G__38996__delegate = function (x,y,more){
while(true){
if(_EQ_.cljs$core$IFn$_invoke$arity$2(x,y)){
if(cljs.core.next(more)){
var G__38997 = y;
var G__38998 = cljs.core.first(more);
var G__38999 = cljs.core.next(more);
x = G__38997;
y = G__38998;
more = G__38999;
continue;
} else {
return _EQ_.cljs$core$IFn$_invoke$arity$2(y,cljs.core.first(more));
}
} else {
return false;
}
break;
}
};
var G__38996 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__39000__i = 0, G__39000__a = new Array(arguments.length -  2);
while (G__39000__i < G__39000__a.length) {G__39000__a[G__39000__i] = arguments[G__39000__i + 2]; ++G__39000__i;}
  more = new cljs.core.IndexedSeq(G__39000__a,0);
} 
return G__38996__delegate.call(this,x,y,more);};
G__38996.cljs$lang$maxFixedArity = 2;
G__38996.cljs$lang$applyTo = (function (arglist__39001){
var x = cljs.core.first(arglist__39001);
arglist__39001 = cljs.core.next(arglist__39001);
var y = cljs.core.first(arglist__39001);
var more = cljs.core.rest(arglist__39001);
return G__38996__delegate(x,y,more);
});
G__38996.cljs$core$IFn$_invoke$arity$variadic = G__38996__delegate;
return G__38996;
})()
;
_EQ_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return _EQ___1.call(this,x);
case 2:
return _EQ___2.call(this,x,y);
default:
var G__39002 = null;
if (arguments.length > 2) {
var G__39003__i = 0, G__39003__a = new Array(arguments.length -  2);
while (G__39003__i < G__39003__a.length) {G__39003__a[G__39003__i] = arguments[G__39003__i + 2]; ++G__39003__i;}
G__39002 = new cljs.core.IndexedSeq(G__39003__a,0);
}
return _EQ___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__39002);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_EQ_.cljs$lang$maxFixedArity = 2;
_EQ_.cljs$lang$applyTo = _EQ___3.cljs$lang$applyTo;
_EQ_.cljs$core$IFn$_invoke$arity$1 = _EQ___1;
_EQ_.cljs$core$IFn$_invoke$arity$2 = _EQ___2;
_EQ_.cljs$core$IFn$_invoke$arity$variadic = _EQ___3.cljs$core$IFn$_invoke$arity$variadic;
return _EQ_;
})()
;

/**
* @constructor
*/
cljs.core.ES6Iterator = (function (s){
this.s = s;
})
cljs.core.ES6Iterator.prototype.next = (function (){
var self__ = this;
var _ = this;
if(!((self__.s == null))){
var x = cljs.core.first(self__.s);
self__.s = cljs.core.next(self__.s);

return {"done": false, "value": x};
} else {
return {"done": true, "value": null};
}
});

cljs.core.ES6Iterator.cljs$lang$type = true;

cljs.core.ES6Iterator.cljs$lang$ctorStr = "cljs.core/ES6Iterator";

cljs.core.ES6Iterator.cljs$lang$ctorPrWriter = (function (this__24859__auto__,writer__24860__auto__,opt__24861__auto__){
return cljs.core._write(writer__24860__auto__,"cljs.core/ES6Iterator");
});

cljs.core.__GT_ES6Iterator = (function __GT_ES6Iterator(s){
return (new cljs.core.ES6Iterator(s));
});

cljs.core.es6_iterator = (function es6_iterator(coll){
return (new cljs.core.ES6Iterator(cljs.core.seq(coll)));
});

/**
* @constructor
*/
cljs.core.ES6IteratorSeq = (function (value,iter,_rest){
this.value = value;
this.iter = iter;
this._rest = _rest;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 8388672;
})
cljs.core.ES6IteratorSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.value;
});

cljs.core.ES6IteratorSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
if((self__._rest == null)){
self__._rest = (function (){var G__39004 = self__.iter;
return (cljs.core.es6_iterator_seq.cljs$core$IFn$_invoke$arity$1 ? cljs.core.es6_iterator_seq.cljs$core$IFn$_invoke$arity$1(G__39004) : cljs.core.es6_iterator_seq.call(null,G__39004));
})();
} else {
}

return self__._rest;
});

cljs.core.ES6IteratorSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return this$__$1;
});

cljs.core.ES6IteratorSeq.cljs$lang$type = true;

cljs.core.ES6IteratorSeq.cljs$lang$ctorStr = "cljs.core/ES6IteratorSeq";

cljs.core.ES6IteratorSeq.cljs$lang$ctorPrWriter = (function (this__24859__auto__,writer__24860__auto__,opt__24861__auto__){
return cljs.core._write(writer__24860__auto__,"cljs.core/ES6IteratorSeq");
});

cljs.core.__GT_ES6IteratorSeq = (function __GT_ES6IteratorSeq(value,iter,_rest){
return (new cljs.core.ES6IteratorSeq(value,iter,_rest));
});

cljs.core.es6_iterator_seq = (function es6_iterator_seq(iter){
var v = iter.next();
if(cljs.core.truth_(v.done)){
return cljs.core.List.EMPTY;
} else {
return (new cljs.core.ES6IteratorSeq(v.value,iter,null));
}
});
/**
* Mix final collection hash for ordered or unordered collections.
* hash-basis is the combined collection hash, count is the number
* of elements included in the basis. Note this is the hash code
* consistent with =, different from .hashCode.
* See http://clojure.org/data_structures#hash for full algorithms.
*/
cljs.core.mix_collection_hash = (function mix_collection_hash(hash_basis,count){
var h1 = cljs.core.m3_seed;
var k1 = cljs.core.m3_mix_K1(hash_basis);
var h1__$1 = cljs.core.m3_mix_H1(h1,k1);
return cljs.core.m3_fmix(h1__$1,count);
});
/**
* Returns the hash code, consistent with =, for an external ordered
* collection implementing Iterable.
* See http://clojure.org/data_structures#hash for full algorithms.
*/
cljs.core.hash_ordered_coll = (function hash_ordered_coll(coll){
var n = (0);
var hash_code = (1);
var coll__$1 = cljs.core.seq(coll);
while(true){
if(!((coll__$1 == null))){
var G__39005 = (n + (1));
var G__39006 = ((cljs.core.imul((31),hash_code) + cljs.core.hash(cljs.core.first(coll__$1))) | (0));
var G__39007 = cljs.core.next(coll__$1);
n = G__39005;
hash_code = G__39006;
coll__$1 = G__39007;
continue;
} else {
return cljs.core.mix_collection_hash(hash_code,n);
}
break;
}
});
/**
* Returns the hash code, consistent with =, for an external unordered
* collection implementing Iterable. For maps, the iterator should
* return map entries whose hash is computed as
* (hash-ordered-coll [k v]).
* See http://clojure.org/data_structures#hash for full algorithms.
*/
cljs.core.hash_unordered_coll = (function hash_unordered_coll(coll){
var n = (0);
var hash_code = (0);
var coll__$1 = cljs.core.seq(coll);
while(true){
if(!((coll__$1 == null))){
var G__39008 = (n + (1));
var G__39009 = ((hash_code + cljs.core.hash(cljs.core.first(coll__$1))) | (0));
var G__39010 = cljs.core.next(coll__$1);
n = G__39008;
hash_code = G__39009;
coll__$1 = G__39010;
continue;
} else {
return cljs.core.mix_collection_hash(hash_code,n);
}
break;
}
});


(cljs.core.ICounted["null"] = true);

(cljs.core._count["null"] = (function (_){
return (0);
}));
Date.prototype.cljs$core$IEquiv$ = true;

Date.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (o,other){
var o__$1 = this;
return ((other instanceof Date)) && ((o__$1.toString() === other.toString()));
});
(cljs.core.IEquiv["number"] = true);

(cljs.core._equiv["number"] = (function (x,o){
return (x === o);
}));
(cljs.core.IMeta["function"] = true);

(cljs.core._meta["function"] = (function (_){
return null;
}));

(cljs.core.Fn["function"] = true);
(cljs.core.IHash["_"] = true);

(cljs.core._hash["_"] = (function (o){
var G__39011 = o;
return goog.getUid(G__39011);
}));
/**
* Returns a number one greater than num.
*/
cljs.core.inc = (function inc(x){
return (x + (1));
});

/**
* @constructor
*/
cljs.core.Reduced = (function (val){
this.val = val;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32768;
})
cljs.core.Reduced.prototype.cljs$core$IDeref$_deref$arity$1 = (function (o){
var self__ = this;
var o__$1 = this;
return self__.val;
});

cljs.core.Reduced.cljs$lang$type = true;

cljs.core.Reduced.cljs$lang$ctorStr = "cljs.core/Reduced";

cljs.core.Reduced.cljs$lang$ctorPrWriter = (function (this__24859__auto__,writer__24860__auto__,opt__24861__auto__){
return cljs.core._write(writer__24860__auto__,"cljs.core/Reduced");
});

cljs.core.__GT_Reduced = (function __GT_Reduced(val){
return (new cljs.core.Reduced(val));
});

/**
* Wraps x in a way such that a reduce will terminate with the value x
*/
cljs.core.reduced = (function reduced(x){
return (new cljs.core.Reduced(x));
});
/**
* Returns true if x is the result of a call to reduced
*/
cljs.core.reduced_QMARK_ = (function reduced_QMARK_(r){
return (r instanceof cljs.core.Reduced);
});
/**
* If x is already reduced?, returns it, else returns (reduced x)
*/
cljs.core.ensure_reduced = (function ensure_reduced(x){
if(cljs.core.reduced_QMARK_(x)){
return x;
} else {
return cljs.core.reduced(x);
}
});
/**
* If x is reduced?, returns (deref x), else returns x
*/
cljs.core.unreduced = (function unreduced(x){
if(cljs.core.reduced_QMARK_(x)){
var G__39013 = x;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__39013) : cljs.core.deref.call(null,G__39013));
} else {
return x;
}
});
cljs.core.deref = (function deref(o){
return cljs.core._deref(o);
});
/**
* Accepts any collection which satisfies the ICount and IIndexed protocols and
* reduces them without incurring seq initialization
*/
cljs.core.ci_reduce = (function() {
var ci_reduce = null;
var ci_reduce__2 = (function (cicoll,f){
var cnt = cljs.core._count(cicoll);
if((cnt === (0))){
return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
} else {
var val = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(cicoll,(0));
var n = (1);
while(true){
if((n < cnt)){
var nval = (function (){var G__39020 = val;
var G__39021 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(cicoll,n);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__39020,G__39021) : f.call(null,G__39020,G__39021));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__39026 = nval;
var G__39027 = (n + (1));
val = G__39026;
n = G__39027;
continue;
}
} else {
return val;
}
break;
}
}
});
var ci_reduce__3 = (function (cicoll,f,val){
var cnt = cljs.core._count(cicoll);
var val__$1 = val;
var n = (0);
while(true){
if((n < cnt)){
var nval = (function (){var G__39022 = val__$1;
var G__39023 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(cicoll,n);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__39022,G__39023) : f.call(null,G__39022,G__39023));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__39028 = nval;
var G__39029 = (n + (1));
val__$1 = G__39028;
n = G__39029;
continue;
}
} else {
return val__$1;
}
break;
}
});
var ci_reduce__4 = (function (cicoll,f,val,idx){
var cnt = cljs.core._count(cicoll);
var val__$1 = val;
var n = idx;
while(true){
if((n < cnt)){
var nval = (function (){var G__39024 = val__$1;
var G__39025 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(cicoll,n);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__39024,G__39025) : f.call(null,G__39024,G__39025));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__39030 = nval;
var G__39031 = (n + (1));
val__$1 = G__39030;
n = G__39031;
continue;
}
} else {
return val__$1;
}
break;
}
});
ci_reduce = function(cicoll,f,val,idx){
switch(arguments.length){
case 2:
return ci_reduce__2.call(this,cicoll,f);
case 3:
return ci_reduce__3.call(this,cicoll,f,val);
case 4:
return ci_reduce__4.call(this,cicoll,f,val,idx);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
ci_reduce.cljs$core$IFn$_invoke$arity$2 = ci_reduce__2;
ci_reduce.cljs$core$IFn$_invoke$arity$3 = ci_reduce__3;
ci_reduce.cljs$core$IFn$_invoke$arity$4 = ci_reduce__4;
return ci_reduce;
})()
;
cljs.core.array_reduce = (function() {
var array_reduce = null;
var array_reduce__2 = (function (arr,f){
var cnt = arr.length;
if((arr.length === (0))){
return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
} else {
var val = (arr[(0)]);
var n = (1);
while(true){
if((n < cnt)){
var nval = (function (){var G__39038 = val;
var G__39039 = (arr[n]);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__39038,G__39039) : f.call(null,G__39038,G__39039));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__39044 = nval;
var G__39045 = (n + (1));
val = G__39044;
n = G__39045;
continue;
}
} else {
return val;
}
break;
}
}
});
var array_reduce__3 = (function (arr,f,val){
var cnt = arr.length;
var val__$1 = val;
var n = (0);
while(true){
if((n < cnt)){
var nval = (function (){var G__39040 = val__$1;
var G__39041 = (arr[n]);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__39040,G__39041) : f.call(null,G__39040,G__39041));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__39046 = nval;
var G__39047 = (n + (1));
val__$1 = G__39046;
n = G__39047;
continue;
}
} else {
return val__$1;
}
break;
}
});
var array_reduce__4 = (function (arr,f,val,idx){
var cnt = arr.length;
var val__$1 = val;
var n = idx;
while(true){
if((n < cnt)){
var nval = (function (){var G__39042 = val__$1;
var G__39043 = (arr[n]);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__39042,G__39043) : f.call(null,G__39042,G__39043));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__39048 = nval;
var G__39049 = (n + (1));
val__$1 = G__39048;
n = G__39049;
continue;
}
} else {
return val__$1;
}
break;
}
});
array_reduce = function(arr,f,val,idx){
switch(arguments.length){
case 2:
return array_reduce__2.call(this,arr,f);
case 3:
return array_reduce__3.call(this,arr,f,val);
case 4:
return array_reduce__4.call(this,arr,f,val,idx);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
array_reduce.cljs$core$IFn$_invoke$arity$2 = array_reduce__2;
array_reduce.cljs$core$IFn$_invoke$arity$3 = array_reduce__3;
array_reduce.cljs$core$IFn$_invoke$arity$4 = array_reduce__4;
return array_reduce;
})()
;



/**
* Returns true if coll implements count in constant time
*/
cljs.core.counted_QMARK_ = (function counted_QMARK_(x){
var G__39051 = x;
if(G__39051){
var bit__24953__auto__ = (G__39051.cljs$lang$protocol_mask$partition0$ & (2));
if((bit__24953__auto__) || (G__39051.cljs$core$ICounted$)){
return true;
} else {
if((!G__39051.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ICounted,G__39051);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ICounted,G__39051);
}
});
/**
* Returns true if coll implements nth in constant time
*/
cljs.core.indexed_QMARK_ = (function indexed_QMARK_(x){
var G__39053 = x;
if(G__39053){
var bit__24953__auto__ = (G__39053.cljs$lang$protocol_mask$partition0$ & (16));
if((bit__24953__auto__) || (G__39053.cljs$core$IIndexed$)){
return true;
} else {
if((!G__39053.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IIndexed,G__39053);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IIndexed,G__39053);
}
});

/**
* @constructor
*/
cljs.core.IndexedSeqIterator = (function (arr,i){
this.arr = arr;
this.i = i;
})
cljs.core.IndexedSeqIterator.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
return (self__.i < self__.arr.length);
});

cljs.core.IndexedSeqIterator.prototype.next = (function (){
var self__ = this;
var _ = this;
var ret = (self__.arr[self__.i]);
self__.i = (self__.i + (1));

return ret;
});

cljs.core.IndexedSeqIterator.cljs$lang$type = true;

cljs.core.IndexedSeqIterator.cljs$lang$ctorStr = "cljs.core/IndexedSeqIterator";

cljs.core.IndexedSeqIterator.cljs$lang$ctorPrWriter = (function (this__24859__auto__,writer__24860__auto__,opt__24861__auto__){
return cljs.core._write(writer__24860__auto__,"cljs.core/IndexedSeqIterator");
});

cljs.core.__GT_IndexedSeqIterator = (function __GT_IndexedSeqIterator(arr,i){
return (new cljs.core.IndexedSeqIterator(arr,i));
});


/**
* @constructor
*/
cljs.core.IndexedSeq = (function (arr,i){
this.arr = arr;
this.i = i;
this.cljs$lang$protocol_mask$partition0$ = 166199550;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.IndexedSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.IndexedSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.IndexedSeq.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (coll,n){
var self__ = this;
var coll__$1 = this;
var i__$1 = (n + self__.i);
if((i__$1 < self__.arr.length)){
return (self__.arr[i__$1]);
} else {
return null;
}
});

cljs.core.IndexedSeq.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (coll,n,not_found){
var self__ = this;
var coll__$1 = this;
var i__$1 = (n + self__.i);
if((i__$1 < self__.arr.length)){
return (self__.arr[i__$1]);
} else {
return not_found;
}
});

cljs.core.IndexedSeq.prototype.cljs$core$IIterable$ = true;

cljs.core.IndexedSeq.prototype.cljs$core$IIterable$_iterator$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.IndexedSeqIterator(self__.arr,self__.i));
});

cljs.core.IndexedSeq.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.IndexedSeq(self__.arr,self__.i));
});

cljs.core.IndexedSeq.prototype.cljs$core$INext$_next$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
if(((self__.i + (1)) < self__.arr.length)){
return (new cljs.core.IndexedSeq(self__.arr,(self__.i + (1))));
} else {
return null;
}
});

cljs.core.IndexedSeq.prototype.cljs$core$ICounted$_count$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (self__.arr.length - self__.i);
});

cljs.core.IndexedSeq.prototype.cljs$core$IReversible$_rseq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var c = cljs.core._count(coll__$1);
if((c > (0))){
return (new cljs.core.RSeq(coll__$1,(c - (1)),null));
} else {
return null;
}
});

cljs.core.IndexedSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.hash_ordered_coll(coll__$1);
});

cljs.core.IndexedSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
var G__39054 = coll__$1;
var G__39055 = other;
return (cljs.core.equiv_sequential.cljs$core$IFn$_invoke$arity$2 ? cljs.core.equiv_sequential.cljs$core$IFn$_invoke$arity$2(G__39054,G__39055) : cljs.core.equiv_sequential.call(null,G__39054,G__39055));
});

cljs.core.IndexedSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.List.EMPTY;
});

cljs.core.IndexedSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4(self__.arr,f,(self__.arr[self__.i]),(self__.i + (1)));
});

cljs.core.IndexedSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4(self__.arr,f,start,self__.i);
});

cljs.core.IndexedSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (self__.arr[self__.i]);
});

cljs.core.IndexedSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
if(((self__.i + (1)) < self__.arr.length)){
return (new cljs.core.IndexedSeq(self__.arr,(self__.i + (1))));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.IndexedSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return this$__$1;
});

cljs.core.IndexedSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
var G__39056 = o;
var G__39057 = coll__$1;
return (cljs.core.cons.cljs$core$IFn$_invoke$arity$2 ? cljs.core.cons.cljs$core$IFn$_invoke$arity$2(G__39056,G__39057) : cljs.core.cons.call(null,G__39056,G__39057));
});

cljs.core.IndexedSeq.cljs$lang$type = true;

cljs.core.IndexedSeq.cljs$lang$ctorStr = "cljs.core/IndexedSeq";

cljs.core.IndexedSeq.cljs$lang$ctorPrWriter = (function (this__24859__auto__,writer__24860__auto__,opt__24861__auto__){
return cljs.core._write(writer__24860__auto__,"cljs.core/IndexedSeq");
});

cljs.core.__GT_IndexedSeq = (function __GT_IndexedSeq(arr,i){
return (new cljs.core.IndexedSeq(arr,i));
});

(cljs.core.IndexedSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__25250__auto__ = this;
return cljs.core.es6_iterator(this__25250__auto__);
}));
cljs.core.prim_seq = (function() {
var prim_seq = null;
var prim_seq__1 = (function (prim){
return prim_seq.cljs$core$IFn$_invoke$arity$2(prim,(0));
});
var prim_seq__2 = (function (prim,i){
if((i < prim.length)){
return (new cljs.core.IndexedSeq(prim,i));
} else {
return null;
}
});
prim_seq = function(prim,i){
switch(arguments.length){
case 1:
return prim_seq__1.call(this,prim);
case 2:
return prim_seq__2.call(this,prim,i);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
prim_seq.cljs$core$IFn$_invoke$arity$1 = prim_seq__1;
prim_seq.cljs$core$IFn$_invoke$arity$2 = prim_seq__2;
return prim_seq;
})()
;
cljs.core.array_seq = (function() {
var array_seq = null;
var array_seq__1 = (function (array){
return cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(array,(0));
});
var array_seq__2 = (function (array,i){
return cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(array,i);
});
array_seq = function(array,i){
switch(arguments.length){
case 1:
return array_seq__1.call(this,array);
case 2:
return array_seq__2.call(this,array,i);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
array_seq.cljs$core$IFn$_invoke$arity$1 = array_seq__1;
array_seq.cljs$core$IFn$_invoke$arity$2 = array_seq__2;
return array_seq;
})()
;


/**
* @constructor
*/
cljs.core.RSeq = (function (ci,i,meta){
this.ci = ci;
this.i = i;
this.meta = meta;
this.cljs$lang$protocol_mask$partition0$ = 32374990;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.RSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.RSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.RSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.RSeq.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.RSeq(self__.ci,self__.i,self__.meta));
});

cljs.core.RSeq.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.i > (0))){
return (new cljs.core.RSeq(self__.ci,(self__.i - (1)),null));
} else {
return null;
}
});

cljs.core.RSeq.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (self__.i + (1));
});

cljs.core.RSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.hash_ordered_coll(coll__$1);
});

cljs.core.RSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
var G__39060 = coll__$1;
var G__39061 = other;
return (cljs.core.equiv_sequential.cljs$core$IFn$_invoke$arity$2 ? cljs.core.equiv_sequential.cljs$core$IFn$_invoke$arity$2(G__39060,G__39061) : cljs.core.equiv_sequential.call(null,G__39060,G__39061));
});

cljs.core.RSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var G__39062 = cljs.core.List.EMPTY;
var G__39063 = self__.meta;
return (cljs.core.with_meta.cljs$core$IFn$_invoke$arity$2 ? cljs.core.with_meta.cljs$core$IFn$_invoke$arity$2(G__39062,G__39063) : cljs.core.with_meta.call(null,G__39062,G__39063));
});

cljs.core.RSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (col,f){
var self__ = this;
var col__$1 = this;
var G__39064 = f;
var G__39065 = col__$1;
return (cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2 ? cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(G__39064,G__39065) : cljs.core.seq_reduce.call(null,G__39064,G__39065));
});

cljs.core.RSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (col,f,start){
var self__ = this;
var col__$1 = this;
var G__39066 = f;
var G__39067 = start;
var G__39068 = col__$1;
return (cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3 ? cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(G__39066,G__39067,G__39068) : cljs.core.seq_reduce.call(null,G__39066,G__39067,G__39068));
});

cljs.core.RSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.ci,self__.i);
});

cljs.core.RSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.i > (0))){
return (new cljs.core.RSeq(self__.ci,(self__.i - (1)),null));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.RSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.RSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,new_meta){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.RSeq(self__.ci,self__.i,new_meta));
});

cljs.core.RSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
var G__39069 = o;
var G__39070 = coll__$1;
return (cljs.core.cons.cljs$core$IFn$_invoke$arity$2 ? cljs.core.cons.cljs$core$IFn$_invoke$arity$2(G__39069,G__39070) : cljs.core.cons.call(null,G__39069,G__39070));
});

cljs.core.RSeq.cljs$lang$type = true;

cljs.core.RSeq.cljs$lang$ctorStr = "cljs.core/RSeq";

cljs.core.RSeq.cljs$lang$ctorPrWriter = (function (this__24859__auto__,writer__24860__auto__,opt__24861__auto__){
return cljs.core._write(writer__24860__auto__,"cljs.core/RSeq");
});

cljs.core.__GT_RSeq = (function __GT_RSeq(ci,i,meta){
return (new cljs.core.RSeq(ci,i,meta));
});

(cljs.core.RSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__25250__auto__ = this;
return cljs.core.es6_iterator(this__25250__auto__);
}));
/**
* Same as (first (next x))
*/
cljs.core.second = (function second(coll){
return cljs.core.first(cljs.core.next(coll));
});
/**
* Same as (first (first x))
*/
cljs.core.ffirst = (function ffirst(coll){
return cljs.core.first(cljs.core.first(coll));
});
/**
* Same as (next (first x))
*/
cljs.core.nfirst = (function nfirst(coll){
return cljs.core.next(cljs.core.first(coll));
});
/**
* Same as (first (next x))
*/
cljs.core.fnext = (function fnext(coll){
return cljs.core.first(cljs.core.next(coll));
});
/**
* Same as (next (next x))
*/
cljs.core.nnext = (function nnext(coll){
return cljs.core.next(cljs.core.next(coll));
});
/**
* Return the last item in coll, in linear time
*/
cljs.core.last = (function last(s){
while(true){
var sn = cljs.core.next(s);
if(!((sn == null))){
var G__39071 = sn;
s = G__39071;
continue;
} else {
return cljs.core.first(s);
}
break;
}
});
(cljs.core.IEquiv["_"] = true);

(cljs.core._equiv["_"] = (function (x,o){
return (x === o);
}));
/**
* conj[oin]. Returns a new collection with the xs
* 'added'. (conj nil item) returns (item).  The 'addition' may
* happen at different 'places' depending on the concrete type.
* @param {...*} var_args
*/
cljs.core.conj = (function() {
var conj = null;
var conj__0 = (function (){
return cljs.core.PersistentVector.EMPTY;
});
var conj__1 = (function (coll){
return coll;
});
var conj__2 = (function (coll,x){
if(!((coll == null))){
return cljs.core._conj(coll,x);
} else {
return cljs.core._conj(cljs.core.List.EMPTY,x);
}
});
var conj__3 = (function() { 
var G__39076__delegate = function (coll,x,xs){
while(true){
if(cljs.core.truth_(xs)){
var G__39077 = conj.cljs$core$IFn$_invoke$arity$2(coll,x);
var G__39078 = cljs.core.first(xs);
var G__39079 = cljs.core.next(xs);
coll = G__39077;
x = G__39078;
xs = G__39079;
continue;
} else {
return conj.cljs$core$IFn$_invoke$arity$2(coll,x);
}
break;
}
};
var G__39076 = function (coll,x,var_args){
var xs = null;
if (arguments.length > 2) {
var G__39080__i = 0, G__39080__a = new Array(arguments.length -  2);
while (G__39080__i < G__39080__a.length) {G__39080__a[G__39080__i] = arguments[G__39080__i + 2]; ++G__39080__i;}
  xs = new cljs.core.IndexedSeq(G__39080__a,0);
} 
return G__39076__delegate.call(this,coll,x,xs);};
G__39076.cljs$lang$maxFixedArity = 2;
G__39076.cljs$lang$applyTo = (function (arglist__39081){
var coll = cljs.core.first(arglist__39081);
arglist__39081 = cljs.core.next(arglist__39081);
var x = cljs.core.first(arglist__39081);
var xs = cljs.core.rest(arglist__39081);
return G__39076__delegate(coll,x,xs);
});
G__39076.cljs$core$IFn$_invoke$arity$variadic = G__39076__delegate;
return G__39076;
})()
;
conj = function(coll,x,var_args){
var xs = var_args;
switch(arguments.length){
case 0:
return conj__0.call(this);
case 1:
return conj__1.call(this,coll);
case 2:
return conj__2.call(this,coll,x);
default:
var G__39082 = null;
if (arguments.length > 2) {
var G__39083__i = 0, G__39083__a = new Array(arguments.length -  2);
while (G__39083__i < G__39083__a.length) {G__39083__a[G__39083__i] = arguments[G__39083__i + 2]; ++G__39083__i;}
G__39082 = new cljs.core.IndexedSeq(G__39083__a,0);
}
return conj__3.cljs$core$IFn$_invoke$arity$variadic(coll,x, G__39082);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
conj.cljs$lang$maxFixedArity = 2;
conj.cljs$lang$applyTo = conj__3.cljs$lang$applyTo;
conj.cljs$core$IFn$_invoke$arity$0 = conj__0;
conj.cljs$core$IFn$_invoke$arity$1 = conj__1;
conj.cljs$core$IFn$_invoke$arity$2 = conj__2;
conj.cljs$core$IFn$_invoke$arity$variadic = conj__3.cljs$core$IFn$_invoke$arity$variadic;
return conj;
})()
;
/**
* Returns an empty collection of the same category as coll, or nil
*/
cljs.core.empty = (function empty(coll){
if((coll == null)){
return null;
} else {
return cljs.core._empty(coll);
}
});
cljs.core.accumulating_seq_count = (function accumulating_seq_count(coll){
var s = cljs.core.seq(coll);
var acc = (0);
while(true){
if(cljs.core.counted_QMARK_(s)){
return (acc + cljs.core._count(s));
} else {
var G__39084 = cljs.core.next(s);
var G__39085 = (acc + (1));
s = G__39084;
acc = G__39085;
continue;
}
break;
}
});
/**
* Returns the number of items in the collection. (count nil) returns
* 0.  Also works on strings, arrays, and Maps
*/
cljs.core.count = (function count(coll){
if(!((coll == null))){
if((function (){var G__39087 = coll;
if(G__39087){
var bit__24946__auto__ = (G__39087.cljs$lang$protocol_mask$partition0$ & (2));
if((bit__24946__auto__) || (G__39087.cljs$core$ICounted$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$ICounted$_count$arity$1(null);
} else {
if(coll instanceof Array){
return coll.length;
} else {
if(typeof coll === 'string'){
return coll.length;
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.ICounted,coll)){
return cljs.core._count(coll);
} else {
return cljs.core.accumulating_seq_count(coll);

}
}
}
}
} else {
return (0);
}
});
cljs.core.linear_traversal_nth = (function() {
var linear_traversal_nth = null;
var linear_traversal_nth__2 = (function (coll,n){
while(true){
if((coll == null)){
throw (new Error("Index out of bounds"));
} else {
if((n === (0))){
if(cljs.core.seq(coll)){
return cljs.core.first(coll);
} else {
throw (new Error("Index out of bounds"));
}
} else {
if(cljs.core.indexed_QMARK_(coll)){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll,n);
} else {
if(cljs.core.seq(coll)){
var G__39088 = cljs.core.next(coll);
var G__39089 = (n - (1));
coll = G__39088;
n = G__39089;
continue;
} else {
throw (new Error("Index out of bounds"));

}
}
}
}
break;
}
});
var linear_traversal_nth__3 = (function (coll,n,not_found){
while(true){
if((coll == null)){
return not_found;
} else {
if((n === (0))){
if(cljs.core.seq(coll)){
return cljs.core.first(coll);
} else {
return not_found;
}
} else {
if(cljs.core.indexed_QMARK_(coll)){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(coll,n,not_found);
} else {
if(cljs.core.seq(coll)){
var G__39090 = cljs.core.next(coll);
var G__39091 = (n - (1));
var G__39092 = not_found;
coll = G__39090;
n = G__39091;
not_found = G__39092;
continue;
} else {
return not_found;

}
}
}
}
break;
}
});
linear_traversal_nth = function(coll,n,not_found){
switch(arguments.length){
case 2:
return linear_traversal_nth__2.call(this,coll,n);
case 3:
return linear_traversal_nth__3.call(this,coll,n,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
linear_traversal_nth.cljs$core$IFn$_invoke$arity$2 = linear_traversal_nth__2;
linear_traversal_nth.cljs$core$IFn$_invoke$arity$3 = linear_traversal_nth__3;
return linear_traversal_nth;
})()
;
/**
* Returns the value at the index. get returns nil if index out of
* bounds, nth throws an exception unless not-found is supplied.  nth
* also works for strings, arrays, regex Matchers and Lists, and,
* in O(n) time, for sequences.
*/
cljs.core.nth = (function() {
var nth = null;
var nth__2 = (function (coll,n){
if(!(typeof n === 'number')){
throw (new Error("index argument to nth must be a number"));
} else {
if((coll == null)){
return coll;
} else {
if((function (){var G__39097 = coll;
if(G__39097){
var bit__24946__auto__ = (G__39097.cljs$lang$protocol_mask$partition0$ & (16));
if((bit__24946__auto__) || (G__39097.cljs$core$IIndexed$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$IIndexed$_nth$arity$2(null,n);
} else {
if(coll instanceof Array){
if((n < coll.length)){
return (coll[n]);
} else {
return null;
}
} else {
if(typeof coll === 'string'){
if((n < coll.length)){
return (coll[n]);
} else {
return null;
}
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.IIndexed,coll)){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll,n);
} else {
if((function (){var G__39098 = coll;
if(G__39098){
var bit__24953__auto__ = (G__39098.cljs$lang$protocol_mask$partition0$ & (64));
if((bit__24953__auto__) || (G__39098.cljs$core$ISeq$)){
return true;
} else {
if((!G__39098.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq,G__39098);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq,G__39098);
}
})()){
return cljs.core.linear_traversal_nth.cljs$core$IFn$_invoke$arity$2(coll,n);
} else {
throw (new Error([cljs.core.str("nth not supported on this type "),cljs.core.str(cljs.core.type__GT_str(cljs.core.type(coll)))].join('')));

}
}
}
}
}
}
}
});
var nth__3 = (function (coll,n,not_found){
if(!(typeof n === 'number')){
throw (new Error("index argument to nth must be a number."));
} else {
if((coll == null)){
return not_found;
} else {
if((function (){var G__39099 = coll;
if(G__39099){
var bit__24946__auto__ = (G__39099.cljs$lang$protocol_mask$partition0$ & (16));
if((bit__24946__auto__) || (G__39099.cljs$core$IIndexed$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$IIndexed$_nth$arity$3(null,n,not_found);
} else {
if(coll instanceof Array){
if((n < coll.length)){
return (coll[n]);
} else {
return not_found;
}
} else {
if(typeof coll === 'string'){
if((n < coll.length)){
return (coll[n]);
} else {
return not_found;
}
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.IIndexed,coll)){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll,n);
} else {
if((function (){var G__39100 = coll;
if(G__39100){
var bit__24953__auto__ = (G__39100.cljs$lang$protocol_mask$partition0$ & (64));
if((bit__24953__auto__) || (G__39100.cljs$core$ISeq$)){
return true;
} else {
if((!G__39100.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq,G__39100);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq,G__39100);
}
})()){
return cljs.core.linear_traversal_nth.cljs$core$IFn$_invoke$arity$3(coll,n,not_found);
} else {
throw (new Error([cljs.core.str("nth not supported on this type "),cljs.core.str(cljs.core.type__GT_str(cljs.core.type(coll)))].join('')));

}
}
}
}
}
}
}
});
nth = function(coll,n,not_found){
switch(arguments.length){
case 2:
return nth__2.call(this,coll,n);
case 3:
return nth__3.call(this,coll,n,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
nth.cljs$core$IFn$_invoke$arity$2 = nth__2;
nth.cljs$core$IFn$_invoke$arity$3 = nth__3;
return nth;
})()
;
/**
* Returns the nth rest of coll, coll when n is 0.
*/
cljs.core.nthrest = (function nthrest(coll,n){
var n__$1 = n;
var xs = coll;
while(true){
if(((n__$1 > (0))) && (cljs.core.seq(xs))){
var G__39101 = (n__$1 - (1));
var G__39102 = cljs.core.rest(xs);
n__$1 = G__39101;
xs = G__39102;
continue;
} else {
return xs;
}
break;
}
});
/**
* Returns the value mapped to key, not-found or nil if key not present.
*/
cljs.core.get = (function() {
var get = null;
var get__2 = (function (o,k){
if((o == null)){
return null;
} else {
if((function (){var G__39105 = o;
if(G__39105){
var bit__24946__auto__ = (G__39105.cljs$lang$protocol_mask$partition0$ & (256));
if((bit__24946__auto__) || (G__39105.cljs$core$ILookup$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return o.cljs$core$ILookup$_lookup$arity$2(null,k);
} else {
if(o instanceof Array){
if((k < o.length)){
return (o[k]);
} else {
return null;
}
} else {
if(typeof o === 'string'){
if((k < o.length)){
return (o[k]);
} else {
return null;
}
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.ILookup,o)){
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$2(o,k);
} else {
return null;

}
}
}
}
}
});
var get__3 = (function (o,k,not_found){
if(!((o == null))){
if((function (){var G__39106 = o;
if(G__39106){
var bit__24946__auto__ = (G__39106.cljs$lang$protocol_mask$partition0$ & (256));
if((bit__24946__auto__) || (G__39106.cljs$core$ILookup$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return o.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
} else {
if(o instanceof Array){
if((k < o.length)){
return (o[k]);
} else {
return not_found;
}
} else {
if(typeof o === 'string'){
if((k < o.length)){
return (o[k]);
} else {
return not_found;
}
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.ILookup,o)){
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(o,k,not_found);
} else {
return not_found;

}
}
}
}
} else {
return not_found;
}
});
get = function(o,k,not_found){
switch(arguments.length){
case 2:
return get__2.call(this,o,k);
case 3:
return get__3.call(this,o,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
get.cljs$core$IFn$_invoke$arity$2 = get__2;
get.cljs$core$IFn$_invoke$arity$3 = get__3;
return get;
})()
;
/**
* assoc[iate]. When applied to a map, returns a new map of the
* same (hashed/sorted) type, that contains the mapping of key(s) to
* val(s). When applied to a vector, returns a new vector that
* contains val at index.
* @param {...*} var_args
*/
cljs.core.assoc = (function() {
var assoc = null;
var assoc__3 = (function (coll,k,v){
if(!((coll == null))){
return cljs.core._assoc(coll,k,v);
} else {
return cljs.core.PersistentHashMap.fromArrays([k],[v]);
}
});
var assoc__4 = (function() { 
var G__39110__delegate = function (coll,k,v,kvs){
while(true){
var ret = assoc.cljs$core$IFn$_invoke$arity$3(coll,k,v);
if(cljs.core.truth_(kvs)){
var G__39111 = ret;
var G__39112 = cljs.core.first(kvs);
var G__39113 = cljs.core.second(kvs);
var G__39114 = cljs.core.nnext(kvs);
coll = G__39111;
k = G__39112;
v = G__39113;
kvs = G__39114;
continue;
} else {
return ret;
}
break;
}
};
var G__39110 = function (coll,k,v,var_args){
var kvs = null;
if (arguments.length > 3) {
var G__39115__i = 0, G__39115__a = new Array(arguments.length -  3);
while (G__39115__i < G__39115__a.length) {G__39115__a[G__39115__i] = arguments[G__39115__i + 3]; ++G__39115__i;}
  kvs = new cljs.core.IndexedSeq(G__39115__a,0);
} 
return G__39110__delegate.call(this,coll,k,v,kvs);};
G__39110.cljs$lang$maxFixedArity = 3;
G__39110.cljs$lang$applyTo = (function (arglist__39116){
var coll = cljs.core.first(arglist__39116);
arglist__39116 = cljs.core.next(arglist__39116);
var k = cljs.core.first(arglist__39116);
arglist__39116 = cljs.core.next(arglist__39116);
var v = cljs.core.first(arglist__39116);
var kvs = cljs.core.rest(arglist__39116);
return G__39110__delegate(coll,k,v,kvs);
});
G__39110.cljs$core$IFn$_invoke$arity$variadic = G__39110__delegate;
return G__39110;
})()
;
assoc = function(coll,k,v,var_args){
var kvs = var_args;
switch(arguments.length){
case 3:
return assoc__3.call(this,coll,k,v);
default:
var G__39117 = null;
if (arguments.length > 3) {
var G__39118__i = 0, G__39118__a = new Array(arguments.length -  3);
while (G__39118__i < G__39118__a.length) {G__39118__a[G__39118__i] = arguments[G__39118__i + 3]; ++G__39118__i;}
G__39117 = new cljs.core.IndexedSeq(G__39118__a,0);
}
return assoc__4.cljs$core$IFn$_invoke$arity$variadic(coll,k,v, G__39117);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
assoc.cljs$lang$maxFixedArity = 3;
assoc.cljs$lang$applyTo = assoc__4.cljs$lang$applyTo;
assoc.cljs$core$IFn$_invoke$arity$3 = assoc__3;
assoc.cljs$core$IFn$_invoke$arity$variadic = assoc__4.cljs$core$IFn$_invoke$arity$variadic;
return assoc;
})()
;
/**
* dissoc[iate]. Returns a new map of the same (hashed/sorted) type,
* that does not contain a mapping for key(s).
* @param {...*} var_args
*/
cljs.core.dissoc = (function() {
var dissoc = null;
var dissoc__1 = (function (coll){
return coll;
});
var dissoc__2 = (function (coll,k){
if((coll == null)){
return null;
} else {
return cljs.core._dissoc(coll,k);
}
});
var dissoc__3 = (function() { 
var G__39121__delegate = function (coll,k,ks){
while(true){
if((coll == null)){
return null;
} else {
var ret = dissoc.cljs$core$IFn$_invoke$arity$2(coll,k);
if(cljs.core.truth_(ks)){
var G__39122 = ret;
var G__39123 = cljs.core.first(ks);
var G__39124 = cljs.core.next(ks);
coll = G__39122;
k = G__39123;
ks = G__39124;
continue;
} else {
return ret;
}
}
break;
}
};
var G__39121 = function (coll,k,var_args){
var ks = null;
if (arguments.length > 2) {
var G__39125__i = 0, G__39125__a = new Array(arguments.length -  2);
while (G__39125__i < G__39125__a.length) {G__39125__a[G__39125__i] = arguments[G__39125__i + 2]; ++G__39125__i;}
  ks = new cljs.core.IndexedSeq(G__39125__a,0);
} 
return G__39121__delegate.call(this,coll,k,ks);};
G__39121.cljs$lang$maxFixedArity = 2;
G__39121.cljs$lang$applyTo = (function (arglist__39126){
var coll = cljs.core.first(arglist__39126);
arglist__39126 = cljs.core.next(arglist__39126);
var k = cljs.core.first(arglist__39126);
var ks = cljs.core.rest(arglist__39126);
return G__39121__delegate(coll,k,ks);
});
G__39121.cljs$core$IFn$_invoke$arity$variadic = G__39121__delegate;
return G__39121;
})()
;
dissoc = function(coll,k,var_args){
var ks = var_args;
switch(arguments.length){
case 1:
return dissoc__1.call(this,coll);
case 2:
return dissoc__2.call(this,coll,k);
default:
var G__39127 = null;
if (arguments.length > 2) {
var G__39128__i = 0, G__39128__a = new Array(arguments.length -  2);
while (G__39128__i < G__39128__a.length) {G__39128__a[G__39128__i] = arguments[G__39128__i + 2]; ++G__39128__i;}
G__39127 = new cljs.core.IndexedSeq(G__39128__a,0);
}
return dissoc__3.cljs$core$IFn$_invoke$arity$variadic(coll,k, G__39127);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
dissoc.cljs$lang$maxFixedArity = 2;
dissoc.cljs$lang$applyTo = dissoc__3.cljs$lang$applyTo;
dissoc.cljs$core$IFn$_invoke$arity$1 = dissoc__1;
dissoc.cljs$core$IFn$_invoke$arity$2 = dissoc__2;
dissoc.cljs$core$IFn$_invoke$arity$variadic = dissoc__3.cljs$core$IFn$_invoke$arity$variadic;
return dissoc;
})()
;
cljs.core.fn_QMARK_ = (function fn_QMARK_(f){
var or__24272__auto__ = (function (){var G__39133 = f;
return goog.isFunction(G__39133);
})();
if(cljs.core.truth_(or__24272__auto__)){
return or__24272__auto__;
} else {
var G__39134 = f;
if(G__39134){
var bit__24953__auto__ = null;
if(cljs.core.truth_((function (){var or__24272__auto____$1 = bit__24953__auto__;
if(cljs.core.truth_(or__24272__auto____$1)){
return or__24272__auto____$1;
} else {
return G__39134.cljs$core$Fn$;
}
})())){
return true;
} else {
if((!G__39134.cljs$lang$protocol_mask$partition$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.Fn,G__39134);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.Fn,G__39134);
}
}
});

/**
* @constructor
*/
cljs.core.MetaFn = (function (afn,meta){
this.afn = afn;
this.meta = meta;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 393217;
})
cljs.core.MetaFn.prototype.call = (function() {
var G__39600 = null;
var G__39600__1 = (function (self__){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (self__.afn.cljs$core$IFn$_invoke$arity$0 ? self__.afn.cljs$core$IFn$_invoke$arity$0() : self__.afn.call(null));
});
var G__39600__2 = (function (self__,a){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__39136 = a;
return (self__.afn.cljs$core$IFn$_invoke$arity$1 ? self__.afn.cljs$core$IFn$_invoke$arity$1(G__39136) : self__.afn.call(null,G__39136));
});
var G__39600__3 = (function (self__,a,b){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__39137 = a;
var G__39138 = b;
return (self__.afn.cljs$core$IFn$_invoke$arity$2 ? self__.afn.cljs$core$IFn$_invoke$arity$2(G__39137,G__39138) : self__.afn.call(null,G__39137,G__39138));
});
var G__39600__4 = (function (self__,a,b,c){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__39139 = a;
var G__39140 = b;
var G__39141 = c;
return (self__.afn.cljs$core$IFn$_invoke$arity$3 ? self__.afn.cljs$core$IFn$_invoke$arity$3(G__39139,G__39140,G__39141) : self__.afn.call(null,G__39139,G__39140,G__39141));
});
var G__39600__5 = (function (self__,a,b,c,d){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__39142 = a;
var G__39143 = b;
var G__39144 = c;
var G__39145 = d;
return (self__.afn.cljs$core$IFn$_invoke$arity$4 ? self__.afn.cljs$core$IFn$_invoke$arity$4(G__39142,G__39143,G__39144,G__39145) : self__.afn.call(null,G__39142,G__39143,G__39144,G__39145));
});
var G__39600__6 = (function (self__,a,b,c,d,e){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__39146 = a;
var G__39147 = b;
var G__39148 = c;
var G__39149 = d;
var G__39150 = e;
return (self__.afn.cljs$core$IFn$_invoke$arity$5 ? self__.afn.cljs$core$IFn$_invoke$arity$5(G__39146,G__39147,G__39148,G__39149,G__39150) : self__.afn.call(null,G__39146,G__39147,G__39148,G__39149,G__39150));
});
var G__39600__7 = (function (self__,a,b,c,d,e,f){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__39151 = a;
var G__39152 = b;
var G__39153 = c;
var G__39154 = d;
var G__39155 = e;
var G__39156 = f;
return (self__.afn.cljs$core$IFn$_invoke$arity$6 ? self__.afn.cljs$core$IFn$_invoke$arity$6(G__39151,G__39152,G__39153,G__39154,G__39155,G__39156) : self__.afn.call(null,G__39151,G__39152,G__39153,G__39154,G__39155,G__39156));
});
var G__39600__8 = (function (self__,a,b,c,d,e,f,g){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__39157 = a;
var G__39158 = b;
var G__39159 = c;
var G__39160 = d;
var G__39161 = e;
var G__39162 = f;
var G__39163 = g;
return (self__.afn.cljs$core$IFn$_invoke$arity$7 ? self__.afn.cljs$core$IFn$_invoke$arity$7(G__39157,G__39158,G__39159,G__39160,G__39161,G__39162,G__39163) : self__.afn.call(null,G__39157,G__39158,G__39159,G__39160,G__39161,G__39162,G__39163));
});
var G__39600__9 = (function (self__,a,b,c,d,e,f,g,h){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__39164 = a;
var G__39165 = b;
var G__39166 = c;
var G__39167 = d;
var G__39168 = e;
var G__39169 = f;
var G__39170 = g;
var G__39171 = h;
return (self__.afn.cljs$core$IFn$_invoke$arity$8 ? self__.afn.cljs$core$IFn$_invoke$arity$8(G__39164,G__39165,G__39166,G__39167,G__39168,G__39169,G__39170,G__39171) : self__.afn.call(null,G__39164,G__39165,G__39166,G__39167,G__39168,G__39169,G__39170,G__39171));
});
var G__39600__10 = (function (self__,a,b,c,d,e,f,g,h,i){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__39172 = a;
var G__39173 = b;
var G__39174 = c;
var G__39175 = d;
var G__39176 = e;
var G__39177 = f;
var G__39178 = g;
var G__39179 = h;
var G__39180 = i;
return (self__.afn.cljs$core$IFn$_invoke$arity$9 ? self__.afn.cljs$core$IFn$_invoke$arity$9(G__39172,G__39173,G__39174,G__39175,G__39176,G__39177,G__39178,G__39179,G__39180) : self__.afn.call(null,G__39172,G__39173,G__39174,G__39175,G__39176,G__39177,G__39178,G__39179,G__39180));
});
var G__39600__11 = (function (self__,a,b,c,d,e,f,g,h,i,j){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__39181 = a;
var G__39182 = b;
var G__39183 = c;
var G__39184 = d;
var G__39185 = e;
var G__39186 = f;
var G__39187 = g;
var G__39188 = h;
var G__39189 = i;
var G__39190 = j;
return (self__.afn.cljs$core$IFn$_invoke$arity$10 ? self__.afn.cljs$core$IFn$_invoke$arity$10(G__39181,G__39182,G__39183,G__39184,G__39185,G__39186,G__39187,G__39188,G__39189,G__39190) : self__.afn.call(null,G__39181,G__39182,G__39183,G__39184,G__39185,G__39186,G__39187,G__39188,G__39189,G__39190));
});
var G__39600__12 = (function (self__,a,b,c,d,e,f,g,h,i,j,k){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__39191 = a;
var G__39192 = b;
var G__39193 = c;
var G__39194 = d;
var G__39195 = e;
var G__39196 = f;
var G__39197 = g;
var G__39198 = h;
var G__39199 = i;
var G__39200 = j;
var G__39201 = k;
return (self__.afn.cljs$core$IFn$_invoke$arity$11 ? self__.afn.cljs$core$IFn$_invoke$arity$11(G__39191,G__39192,G__39193,G__39194,G__39195,G__39196,G__39197,G__39198,G__39199,G__39200,G__39201) : self__.afn.call(null,G__39191,G__39192,G__39193,G__39194,G__39195,G__39196,G__39197,G__39198,G__39199,G__39200,G__39201));
});
var G__39600__13 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__39202 = a;
var G__39203 = b;
var G__39204 = c;
var G__39205 = d;
var G__39206 = e;
var G__39207 = f;
var G__39208 = g;
var G__39209 = h;
var G__39210 = i;
var G__39211 = j;
var G__39212 = k;
var G__39213 = l;
return (self__.afn.cljs$core$IFn$_invoke$arity$12 ? self__.afn.cljs$core$IFn$_invoke$arity$12(G__39202,G__39203,G__39204,G__39205,G__39206,G__39207,G__39208,G__39209,G__39210,G__39211,G__39212,G__39213) : self__.afn.call(null,G__39202,G__39203,G__39204,G__39205,G__39206,G__39207,G__39208,G__39209,G__39210,G__39211,G__39212,G__39213));
});
var G__39600__14 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__39214 = a;
var G__39215 = b;
var G__39216 = c;
var G__39217 = d;
var G__39218 = e;
var G__39219 = f;
var G__39220 = g;
var G__39221 = h;
var G__39222 = i;
var G__39223 = j;
var G__39224 = k;
var G__39225 = l;
var G__39226 = m;
return (self__.afn.cljs$core$IFn$_invoke$arity$13 ? self__.afn.cljs$core$IFn$_invoke$arity$13(G__39214,G__39215,G__39216,G__39217,G__39218,G__39219,G__39220,G__39221,G__39222,G__39223,G__39224,G__39225,G__39226) : self__.afn.call(null,G__39214,G__39215,G__39216,G__39217,G__39218,G__39219,G__39220,G__39221,G__39222,G__39223,G__39224,G__39225,G__39226));
});
var G__39600__15 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__39227 = a;
var G__39228 = b;
var G__39229 = c;
var G__39230 = d;
var G__39231 = e;
var G__39232 = f;
var G__39233 = g;
var G__39234 = h;
var G__39235 = i;
var G__39236 = j;
var G__39237 = k;
var G__39238 = l;
var G__39239 = m;
var G__39240 = n;
return (self__.afn.cljs$core$IFn$_invoke$arity$14 ? self__.afn.cljs$core$IFn$_invoke$arity$14(G__39227,G__39228,G__39229,G__39230,G__39231,G__39232,G__39233,G__39234,G__39235,G__39236,G__39237,G__39238,G__39239,G__39240) : self__.afn.call(null,G__39227,G__39228,G__39229,G__39230,G__39231,G__39232,G__39233,G__39234,G__39235,G__39236,G__39237,G__39238,G__39239,G__39240));
});
var G__39600__16 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__39241 = a;
var G__39242 = b;
var G__39243 = c;
var G__39244 = d;
var G__39245 = e;
var G__39246 = f;
var G__39247 = g;
var G__39248 = h;
var G__39249 = i;
var G__39250 = j;
var G__39251 = k;
var G__39252 = l;
var G__39253 = m;
var G__39254 = n;
var G__39255 = o;
return (self__.afn.cljs$core$IFn$_invoke$arity$15 ? self__.afn.cljs$core$IFn$_invoke$arity$15(G__39241,G__39242,G__39243,G__39244,G__39245,G__39246,G__39247,G__39248,G__39249,G__39250,G__39251,G__39252,G__39253,G__39254,G__39255) : self__.afn.call(null,G__39241,G__39242,G__39243,G__39244,G__39245,G__39246,G__39247,G__39248,G__39249,G__39250,G__39251,G__39252,G__39253,G__39254,G__39255));
});
var G__39600__17 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__39256 = a;
var G__39257 = b;
var G__39258 = c;
var G__39259 = d;
var G__39260 = e;
var G__39261 = f;
var G__39262 = g;
var G__39263 = h;
var G__39264 = i;
var G__39265 = j;
var G__39266 = k;
var G__39267 = l;
var G__39268 = m;
var G__39269 = n;
var G__39270 = o;
var G__39271 = p;
return (self__.afn.cljs$core$IFn$_invoke$arity$16 ? self__.afn.cljs$core$IFn$_invoke$arity$16(G__39256,G__39257,G__39258,G__39259,G__39260,G__39261,G__39262,G__39263,G__39264,G__39265,G__39266,G__39267,G__39268,G__39269,G__39270,G__39271) : self__.afn.call(null,G__39256,G__39257,G__39258,G__39259,G__39260,G__39261,G__39262,G__39263,G__39264,G__39265,G__39266,G__39267,G__39268,G__39269,G__39270,G__39271));
});
var G__39600__18 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__39272 = a;
var G__39273 = b;
var G__39274 = c;
var G__39275 = d;
var G__39276 = e;
var G__39277 = f;
var G__39278 = g;
var G__39279 = h;
var G__39280 = i;
var G__39281 = j;
var G__39282 = k;
var G__39283 = l;
var G__39284 = m;
var G__39285 = n;
var G__39286 = o;
var G__39287 = p;
var G__39288 = q;
return (self__.afn.cljs$core$IFn$_invoke$arity$17 ? self__.afn.cljs$core$IFn$_invoke$arity$17(G__39272,G__39273,G__39274,G__39275,G__39276,G__39277,G__39278,G__39279,G__39280,G__39281,G__39282,G__39283,G__39284,G__39285,G__39286,G__39287,G__39288) : self__.afn.call(null,G__39272,G__39273,G__39274,G__39275,G__39276,G__39277,G__39278,G__39279,G__39280,G__39281,G__39282,G__39283,G__39284,G__39285,G__39286,G__39287,G__39288));
});
var G__39600__19 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__39289 = a;
var G__39290 = b;
var G__39291 = c;
var G__39292 = d;
var G__39293 = e;
var G__39294 = f;
var G__39295 = g;
var G__39296 = h;
var G__39297 = i;
var G__39298 = j;
var G__39299 = k;
var G__39300 = l;
var G__39301 = m;
var G__39302 = n;
var G__39303 = o;
var G__39304 = p;
var G__39305 = q;
var G__39306 = r;
return (self__.afn.cljs$core$IFn$_invoke$arity$18 ? self__.afn.cljs$core$IFn$_invoke$arity$18(G__39289,G__39290,G__39291,G__39292,G__39293,G__39294,G__39295,G__39296,G__39297,G__39298,G__39299,G__39300,G__39301,G__39302,G__39303,G__39304,G__39305,G__39306) : self__.afn.call(null,G__39289,G__39290,G__39291,G__39292,G__39293,G__39294,G__39295,G__39296,G__39297,G__39298,G__39299,G__39300,G__39301,G__39302,G__39303,G__39304,G__39305,G__39306));
});
var G__39600__20 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__39307 = a;
var G__39308 = b;
var G__39309 = c;
var G__39310 = d;
var G__39311 = e;
var G__39312 = f;
var G__39313 = g;
var G__39314 = h;
var G__39315 = i;
var G__39316 = j;
var G__39317 = k;
var G__39318 = l;
var G__39319 = m;
var G__39320 = n;
var G__39321 = o;
var G__39322 = p;
var G__39323 = q;
var G__39324 = r;
var G__39325 = s;
return (self__.afn.cljs$core$IFn$_invoke$arity$19 ? self__.afn.cljs$core$IFn$_invoke$arity$19(G__39307,G__39308,G__39309,G__39310,G__39311,G__39312,G__39313,G__39314,G__39315,G__39316,G__39317,G__39318,G__39319,G__39320,G__39321,G__39322,G__39323,G__39324,G__39325) : self__.afn.call(null,G__39307,G__39308,G__39309,G__39310,G__39311,G__39312,G__39313,G__39314,G__39315,G__39316,G__39317,G__39318,G__39319,G__39320,G__39321,G__39322,G__39323,G__39324,G__39325));
});
var G__39600__21 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__39326 = a;
var G__39327 = b;
var G__39328 = c;
var G__39329 = d;
var G__39330 = e;
var G__39331 = f;
var G__39332 = g;
var G__39333 = h;
var G__39334 = i;
var G__39335 = j;
var G__39336 = k;
var G__39337 = l;
var G__39338 = m;
var G__39339 = n;
var G__39340 = o;
var G__39341 = p;
var G__39342 = q;
var G__39343 = r;
var G__39344 = s;
var G__39345 = t;
return (self__.afn.cljs$core$IFn$_invoke$arity$20 ? self__.afn.cljs$core$IFn$_invoke$arity$20(G__39326,G__39327,G__39328,G__39329,G__39330,G__39331,G__39332,G__39333,G__39334,G__39335,G__39336,G__39337,G__39338,G__39339,G__39340,G__39341,G__39342,G__39343,G__39344,G__39345) : self__.afn.call(null,G__39326,G__39327,G__39328,G__39329,G__39330,G__39331,G__39332,G__39333,G__39334,G__39335,G__39336,G__39337,G__39338,G__39339,G__39340,G__39341,G__39342,G__39343,G__39344,G__39345));
});
var G__39600__22 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__39346 = self__.afn;
var G__39347 = a;
var G__39348 = b;
var G__39349 = c;
var G__39350 = d;
var G__39351 = e;
var G__39352 = f;
var G__39353 = g;
var G__39354 = h;
var G__39355 = i;
var G__39356 = j;
var G__39357 = k;
var G__39358 = l;
var G__39359 = m;
var G__39360 = n;
var G__39361 = o;
var G__39362 = p;
var G__39363 = q;
var G__39364 = r;
var G__39365 = s;
var G__39366 = t;
var G__39367 = rest;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$22 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$22(G__39346,G__39347,G__39348,G__39349,G__39350,G__39351,G__39352,G__39353,G__39354,G__39355,G__39356,G__39357,G__39358,G__39359,G__39360,G__39361,G__39362,G__39363,G__39364,G__39365,G__39366,G__39367) : cljs.core.apply.call(null,G__39346,G__39347,G__39348,G__39349,G__39350,G__39351,G__39352,G__39353,G__39354,G__39355,G__39356,G__39357,G__39358,G__39359,G__39360,G__39361,G__39362,G__39363,G__39364,G__39365,G__39366,G__39367));
});
G__39600 = function(self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
switch(arguments.length){
case 1:
return G__39600__1.call(this,self__);
case 2:
return G__39600__2.call(this,self__,a);
case 3:
return G__39600__3.call(this,self__,a,b);
case 4:
return G__39600__4.call(this,self__,a,b,c);
case 5:
return G__39600__5.call(this,self__,a,b,c,d);
case 6:
return G__39600__6.call(this,self__,a,b,c,d,e);
case 7:
return G__39600__7.call(this,self__,a,b,c,d,e,f);
case 8:
return G__39600__8.call(this,self__,a,b,c,d,e,f,g);
case 9:
return G__39600__9.call(this,self__,a,b,c,d,e,f,g,h);
case 10:
return G__39600__10.call(this,self__,a,b,c,d,e,f,g,h,i);
case 11:
return G__39600__11.call(this,self__,a,b,c,d,e,f,g,h,i,j);
case 12:
return G__39600__12.call(this,self__,a,b,c,d,e,f,g,h,i,j,k);
case 13:
return G__39600__13.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l);
case 14:
return G__39600__14.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m);
case 15:
return G__39600__15.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
case 16:
return G__39600__16.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
case 17:
return G__39600__17.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
case 18:
return G__39600__18.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
case 19:
return G__39600__19.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
case 20:
return G__39600__20.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
case 21:
return G__39600__21.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
case 22:
return G__39600__22.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__39600.cljs$core$IFn$_invoke$arity$1 = G__39600__1;
G__39600.cljs$core$IFn$_invoke$arity$2 = G__39600__2;
G__39600.cljs$core$IFn$_invoke$arity$3 = G__39600__3;
G__39600.cljs$core$IFn$_invoke$arity$4 = G__39600__4;
G__39600.cljs$core$IFn$_invoke$arity$5 = G__39600__5;
G__39600.cljs$core$IFn$_invoke$arity$6 = G__39600__6;
G__39600.cljs$core$IFn$_invoke$arity$7 = G__39600__7;
G__39600.cljs$core$IFn$_invoke$arity$8 = G__39600__8;
G__39600.cljs$core$IFn$_invoke$arity$9 = G__39600__9;
G__39600.cljs$core$IFn$_invoke$arity$10 = G__39600__10;
G__39600.cljs$core$IFn$_invoke$arity$11 = G__39600__11;
G__39600.cljs$core$IFn$_invoke$arity$12 = G__39600__12;
G__39600.cljs$core$IFn$_invoke$arity$13 = G__39600__13;
G__39600.cljs$core$IFn$_invoke$arity$14 = G__39600__14;
G__39600.cljs$core$IFn$_invoke$arity$15 = G__39600__15;
G__39600.cljs$core$IFn$_invoke$arity$16 = G__39600__16;
G__39600.cljs$core$IFn$_invoke$arity$17 = G__39600__17;
G__39600.cljs$core$IFn$_invoke$arity$18 = G__39600__18;
G__39600.cljs$core$IFn$_invoke$arity$19 = G__39600__19;
G__39600.cljs$core$IFn$_invoke$arity$20 = G__39600__20;
G__39600.cljs$core$IFn$_invoke$arity$21 = G__39600__21;
G__39600.cljs$core$IFn$_invoke$arity$22 = G__39600__22;
return G__39600;
})()
;

cljs.core.MetaFn.prototype.apply = (function (self__,args39135){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args39135)));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$0 = (function (){
var self__ = this;
var _ = this;
return (self__.afn.cljs$core$IFn$_invoke$arity$0 ? self__.afn.cljs$core$IFn$_invoke$arity$0() : self__.afn.call(null));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$1 = (function (a){
var self__ = this;
var _ = this;
var G__39368 = a;
return (self__.afn.cljs$core$IFn$_invoke$arity$1 ? self__.afn.cljs$core$IFn$_invoke$arity$1(G__39368) : self__.afn.call(null,G__39368));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$2 = (function (a,b){
var self__ = this;
var _ = this;
var G__39369 = a;
var G__39370 = b;
return (self__.afn.cljs$core$IFn$_invoke$arity$2 ? self__.afn.cljs$core$IFn$_invoke$arity$2(G__39369,G__39370) : self__.afn.call(null,G__39369,G__39370));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$3 = (function (a,b,c){
var self__ = this;
var _ = this;
var G__39371 = a;
var G__39372 = b;
var G__39373 = c;
return (self__.afn.cljs$core$IFn$_invoke$arity$3 ? self__.afn.cljs$core$IFn$_invoke$arity$3(G__39371,G__39372,G__39373) : self__.afn.call(null,G__39371,G__39372,G__39373));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$4 = (function (a,b,c,d){
var self__ = this;
var _ = this;
var G__39374 = a;
var G__39375 = b;
var G__39376 = c;
var G__39377 = d;
return (self__.afn.cljs$core$IFn$_invoke$arity$4 ? self__.afn.cljs$core$IFn$_invoke$arity$4(G__39374,G__39375,G__39376,G__39377) : self__.afn.call(null,G__39374,G__39375,G__39376,G__39377));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$5 = (function (a,b,c,d,e){
var self__ = this;
var _ = this;
var G__39378 = a;
var G__39379 = b;
var G__39380 = c;
var G__39381 = d;
var G__39382 = e;
return (self__.afn.cljs$core$IFn$_invoke$arity$5 ? self__.afn.cljs$core$IFn$_invoke$arity$5(G__39378,G__39379,G__39380,G__39381,G__39382) : self__.afn.call(null,G__39378,G__39379,G__39380,G__39381,G__39382));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$6 = (function (a,b,c,d,e,f){
var self__ = this;
var _ = this;
var G__39383 = a;
var G__39384 = b;
var G__39385 = c;
var G__39386 = d;
var G__39387 = e;
var G__39388 = f;
return (self__.afn.cljs$core$IFn$_invoke$arity$6 ? self__.afn.cljs$core$IFn$_invoke$arity$6(G__39383,G__39384,G__39385,G__39386,G__39387,G__39388) : self__.afn.call(null,G__39383,G__39384,G__39385,G__39386,G__39387,G__39388));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$7 = (function (a,b,c,d,e,f,g){
var self__ = this;
var _ = this;
var G__39389 = a;
var G__39390 = b;
var G__39391 = c;
var G__39392 = d;
var G__39393 = e;
var G__39394 = f;
var G__39395 = g;
return (self__.afn.cljs$core$IFn$_invoke$arity$7 ? self__.afn.cljs$core$IFn$_invoke$arity$7(G__39389,G__39390,G__39391,G__39392,G__39393,G__39394,G__39395) : self__.afn.call(null,G__39389,G__39390,G__39391,G__39392,G__39393,G__39394,G__39395));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$8 = (function (a,b,c,d,e,f,g,h){
var self__ = this;
var _ = this;
var G__39396 = a;
var G__39397 = b;
var G__39398 = c;
var G__39399 = d;
var G__39400 = e;
var G__39401 = f;
var G__39402 = g;
var G__39403 = h;
return (self__.afn.cljs$core$IFn$_invoke$arity$8 ? self__.afn.cljs$core$IFn$_invoke$arity$8(G__39396,G__39397,G__39398,G__39399,G__39400,G__39401,G__39402,G__39403) : self__.afn.call(null,G__39396,G__39397,G__39398,G__39399,G__39400,G__39401,G__39402,G__39403));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$9 = (function (a,b,c,d,e,f,g,h,i){
var self__ = this;
var _ = this;
var G__39404 = a;
var G__39405 = b;
var G__39406 = c;
var G__39407 = d;
var G__39408 = e;
var G__39409 = f;
var G__39410 = g;
var G__39411 = h;
var G__39412 = i;
return (self__.afn.cljs$core$IFn$_invoke$arity$9 ? self__.afn.cljs$core$IFn$_invoke$arity$9(G__39404,G__39405,G__39406,G__39407,G__39408,G__39409,G__39410,G__39411,G__39412) : self__.afn.call(null,G__39404,G__39405,G__39406,G__39407,G__39408,G__39409,G__39410,G__39411,G__39412));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$10 = (function (a,b,c,d,e,f,g,h,i,j){
var self__ = this;
var _ = this;
var G__39413 = a;
var G__39414 = b;
var G__39415 = c;
var G__39416 = d;
var G__39417 = e;
var G__39418 = f;
var G__39419 = g;
var G__39420 = h;
var G__39421 = i;
var G__39422 = j;
return (self__.afn.cljs$core$IFn$_invoke$arity$10 ? self__.afn.cljs$core$IFn$_invoke$arity$10(G__39413,G__39414,G__39415,G__39416,G__39417,G__39418,G__39419,G__39420,G__39421,G__39422) : self__.afn.call(null,G__39413,G__39414,G__39415,G__39416,G__39417,G__39418,G__39419,G__39420,G__39421,G__39422));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$11 = (function (a,b,c,d,e,f,g,h,i,j,k){
var self__ = this;
var _ = this;
var G__39423 = a;
var G__39424 = b;
var G__39425 = c;
var G__39426 = d;
var G__39427 = e;
var G__39428 = f;
var G__39429 = g;
var G__39430 = h;
var G__39431 = i;
var G__39432 = j;
var G__39433 = k;
return (self__.afn.cljs$core$IFn$_invoke$arity$11 ? self__.afn.cljs$core$IFn$_invoke$arity$11(G__39423,G__39424,G__39425,G__39426,G__39427,G__39428,G__39429,G__39430,G__39431,G__39432,G__39433) : self__.afn.call(null,G__39423,G__39424,G__39425,G__39426,G__39427,G__39428,G__39429,G__39430,G__39431,G__39432,G__39433));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$12 = (function (a,b,c,d,e,f,g,h,i,j,k,l){
var self__ = this;
var _ = this;
var G__39434 = a;
var G__39435 = b;
var G__39436 = c;
var G__39437 = d;
var G__39438 = e;
var G__39439 = f;
var G__39440 = g;
var G__39441 = h;
var G__39442 = i;
var G__39443 = j;
var G__39444 = k;
var G__39445 = l;
return (self__.afn.cljs$core$IFn$_invoke$arity$12 ? self__.afn.cljs$core$IFn$_invoke$arity$12(G__39434,G__39435,G__39436,G__39437,G__39438,G__39439,G__39440,G__39441,G__39442,G__39443,G__39444,G__39445) : self__.afn.call(null,G__39434,G__39435,G__39436,G__39437,G__39438,G__39439,G__39440,G__39441,G__39442,G__39443,G__39444,G__39445));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$13 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m){
var self__ = this;
var _ = this;
var G__39446 = a;
var G__39447 = b;
var G__39448 = c;
var G__39449 = d;
var G__39450 = e;
var G__39451 = f;
var G__39452 = g;
var G__39453 = h;
var G__39454 = i;
var G__39455 = j;
var G__39456 = k;
var G__39457 = l;
var G__39458 = m;
return (self__.afn.cljs$core$IFn$_invoke$arity$13 ? self__.afn.cljs$core$IFn$_invoke$arity$13(G__39446,G__39447,G__39448,G__39449,G__39450,G__39451,G__39452,G__39453,G__39454,G__39455,G__39456,G__39457,G__39458) : self__.afn.call(null,G__39446,G__39447,G__39448,G__39449,G__39450,G__39451,G__39452,G__39453,G__39454,G__39455,G__39456,G__39457,G__39458));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$14 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n){
var self__ = this;
var _ = this;
var G__39459 = a;
var G__39460 = b;
var G__39461 = c;
var G__39462 = d;
var G__39463 = e;
var G__39464 = f;
var G__39465 = g;
var G__39466 = h;
var G__39467 = i;
var G__39468 = j;
var G__39469 = k;
var G__39470 = l;
var G__39471 = m;
var G__39472 = n;
return (self__.afn.cljs$core$IFn$_invoke$arity$14 ? self__.afn.cljs$core$IFn$_invoke$arity$14(G__39459,G__39460,G__39461,G__39462,G__39463,G__39464,G__39465,G__39466,G__39467,G__39468,G__39469,G__39470,G__39471,G__39472) : self__.afn.call(null,G__39459,G__39460,G__39461,G__39462,G__39463,G__39464,G__39465,G__39466,G__39467,G__39468,G__39469,G__39470,G__39471,G__39472));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$15 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
var self__ = this;
var _ = this;
var G__39473 = a;
var G__39474 = b;
var G__39475 = c;
var G__39476 = d;
var G__39477 = e;
var G__39478 = f;
var G__39479 = g;
var G__39480 = h;
var G__39481 = i;
var G__39482 = j;
var G__39483 = k;
var G__39484 = l;
var G__39485 = m;
var G__39486 = n;
var G__39487 = o;
return (self__.afn.cljs$core$IFn$_invoke$arity$15 ? self__.afn.cljs$core$IFn$_invoke$arity$15(G__39473,G__39474,G__39475,G__39476,G__39477,G__39478,G__39479,G__39480,G__39481,G__39482,G__39483,G__39484,G__39485,G__39486,G__39487) : self__.afn.call(null,G__39473,G__39474,G__39475,G__39476,G__39477,G__39478,G__39479,G__39480,G__39481,G__39482,G__39483,G__39484,G__39485,G__39486,G__39487));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$16 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
var self__ = this;
var _ = this;
var G__39488 = a;
var G__39489 = b;
var G__39490 = c;
var G__39491 = d;
var G__39492 = e;
var G__39493 = f;
var G__39494 = g;
var G__39495 = h;
var G__39496 = i;
var G__39497 = j;
var G__39498 = k;
var G__39499 = l;
var G__39500 = m;
var G__39501 = n;
var G__39502 = o;
var G__39503 = p;
return (self__.afn.cljs$core$IFn$_invoke$arity$16 ? self__.afn.cljs$core$IFn$_invoke$arity$16(G__39488,G__39489,G__39490,G__39491,G__39492,G__39493,G__39494,G__39495,G__39496,G__39497,G__39498,G__39499,G__39500,G__39501,G__39502,G__39503) : self__.afn.call(null,G__39488,G__39489,G__39490,G__39491,G__39492,G__39493,G__39494,G__39495,G__39496,G__39497,G__39498,G__39499,G__39500,G__39501,G__39502,G__39503));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$17 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
var self__ = this;
var _ = this;
var G__39504 = a;
var G__39505 = b;
var G__39506 = c;
var G__39507 = d;
var G__39508 = e;
var G__39509 = f;
var G__39510 = g;
var G__39511 = h;
var G__39512 = i;
var G__39513 = j;
var G__39514 = k;
var G__39515 = l;
var G__39516 = m;
var G__39517 = n;
var G__39518 = o;
var G__39519 = p;
var G__39520 = q;
return (self__.afn.cljs$core$IFn$_invoke$arity$17 ? self__.afn.cljs$core$IFn$_invoke$arity$17(G__39504,G__39505,G__39506,G__39507,G__39508,G__39509,G__39510,G__39511,G__39512,G__39513,G__39514,G__39515,G__39516,G__39517,G__39518,G__39519,G__39520) : self__.afn.call(null,G__39504,G__39505,G__39506,G__39507,G__39508,G__39509,G__39510,G__39511,G__39512,G__39513,G__39514,G__39515,G__39516,G__39517,G__39518,G__39519,G__39520));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$18 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
var self__ = this;
var _ = this;
var G__39521 = a;
var G__39522 = b;
var G__39523 = c;
var G__39524 = d;
var G__39525 = e;
var G__39526 = f;
var G__39527 = g;
var G__39528 = h;
var G__39529 = i;
var G__39530 = j;
var G__39531 = k;
var G__39532 = l;
var G__39533 = m;
var G__39534 = n;
var G__39535 = o;
var G__39536 = p;
var G__39537 = q;
var G__39538 = r;
return (self__.afn.cljs$core$IFn$_invoke$arity$18 ? self__.afn.cljs$core$IFn$_invoke$arity$18(G__39521,G__39522,G__39523,G__39524,G__39525,G__39526,G__39527,G__39528,G__39529,G__39530,G__39531,G__39532,G__39533,G__39534,G__39535,G__39536,G__39537,G__39538) : self__.afn.call(null,G__39521,G__39522,G__39523,G__39524,G__39525,G__39526,G__39527,G__39528,G__39529,G__39530,G__39531,G__39532,G__39533,G__39534,G__39535,G__39536,G__39537,G__39538));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$19 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
var self__ = this;
var _ = this;
var G__39539 = a;
var G__39540 = b;
var G__39541 = c;
var G__39542 = d;
var G__39543 = e;
var G__39544 = f;
var G__39545 = g;
var G__39546 = h;
var G__39547 = i;
var G__39548 = j;
var G__39549 = k;
var G__39550 = l;
var G__39551 = m;
var G__39552 = n;
var G__39553 = o;
var G__39554 = p;
var G__39555 = q;
var G__39556 = r;
var G__39557 = s;
return (self__.afn.cljs$core$IFn$_invoke$arity$19 ? self__.afn.cljs$core$IFn$_invoke$arity$19(G__39539,G__39540,G__39541,G__39542,G__39543,G__39544,G__39545,G__39546,G__39547,G__39548,G__39549,G__39550,G__39551,G__39552,G__39553,G__39554,G__39555,G__39556,G__39557) : self__.afn.call(null,G__39539,G__39540,G__39541,G__39542,G__39543,G__39544,G__39545,G__39546,G__39547,G__39548,G__39549,G__39550,G__39551,G__39552,G__39553,G__39554,G__39555,G__39556,G__39557));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$20 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
var self__ = this;
var _ = this;
var G__39558 = a;
var G__39559 = b;
var G__39560 = c;
var G__39561 = d;
var G__39562 = e;
var G__39563 = f;
var G__39564 = g;
var G__39565 = h;
var G__39566 = i;
var G__39567 = j;
var G__39568 = k;
var G__39569 = l;
var G__39570 = m;
var G__39571 = n;
var G__39572 = o;
var G__39573 = p;
var G__39574 = q;
var G__39575 = r;
var G__39576 = s;
var G__39577 = t;
return (self__.afn.cljs$core$IFn$_invoke$arity$20 ? self__.afn.cljs$core$IFn$_invoke$arity$20(G__39558,G__39559,G__39560,G__39561,G__39562,G__39563,G__39564,G__39565,G__39566,G__39567,G__39568,G__39569,G__39570,G__39571,G__39572,G__39573,G__39574,G__39575,G__39576,G__39577) : self__.afn.call(null,G__39558,G__39559,G__39560,G__39561,G__39562,G__39563,G__39564,G__39565,G__39566,G__39567,G__39568,G__39569,G__39570,G__39571,G__39572,G__39573,G__39574,G__39575,G__39576,G__39577));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$21 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
var self__ = this;
var _ = this;
var G__39578 = self__.afn;
var G__39579 = a;
var G__39580 = b;
var G__39581 = c;
var G__39582 = d;
var G__39583 = e;
var G__39584 = f;
var G__39585 = g;
var G__39586 = h;
var G__39587 = i;
var G__39588 = j;
var G__39589 = k;
var G__39590 = l;
var G__39591 = m;
var G__39592 = n;
var G__39593 = o;
var G__39594 = p;
var G__39595 = q;
var G__39596 = r;
var G__39597 = s;
var G__39598 = t;
var G__39599 = rest;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$22 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$22(G__39578,G__39579,G__39580,G__39581,G__39582,G__39583,G__39584,G__39585,G__39586,G__39587,G__39588,G__39589,G__39590,G__39591,G__39592,G__39593,G__39594,G__39595,G__39596,G__39597,G__39598,G__39599) : cljs.core.apply.call(null,G__39578,G__39579,G__39580,G__39581,G__39582,G__39583,G__39584,G__39585,G__39586,G__39587,G__39588,G__39589,G__39590,G__39591,G__39592,G__39593,G__39594,G__39595,G__39596,G__39597,G__39598,G__39599));
});

cljs.core.MetaFn.prototype.cljs$core$Fn$ = true;

cljs.core.MetaFn.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (_,new_meta){
var self__ = this;
var ___$1 = this;
return (new cljs.core.MetaFn(self__.afn,new_meta));
});

cljs.core.MetaFn.prototype.cljs$core$IMeta$_meta$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.meta;
});

cljs.core.MetaFn.cljs$lang$type = true;

cljs.core.MetaFn.cljs$lang$ctorStr = "cljs.core/MetaFn";

cljs.core.MetaFn.cljs$lang$ctorPrWriter = (function (this__24859__auto__,writer__24860__auto__,opt__24861__auto__){
return cljs.core._write(writer__24860__auto__,"cljs.core/MetaFn");
});

cljs.core.__GT_MetaFn = (function __GT_MetaFn(afn,meta){
return (new cljs.core.MetaFn(afn,meta));
});

/**
* Returns an object of the same type and value as obj, with
* map m as its metadata.
*/
cljs.core.with_meta = (function with_meta(o,meta){
if((cljs.core.fn_QMARK_(o)) && (!((function (){var G__39604 = o;
if(G__39604){
var bit__24953__auto__ = (G__39604.cljs$lang$protocol_mask$partition0$ & (262144));
if((bit__24953__auto__) || (G__39604.cljs$core$IWithMeta$)){
return true;
} else {
if((!G__39604.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IWithMeta,G__39604);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IWithMeta,G__39604);
}
})()))){
return (new cljs.core.MetaFn(o,meta));
} else {
if((o == null)){
return null;
} else {
return cljs.core._with_meta(o,meta);
}
}
});
/**
* Returns the metadata of obj, returns nil if there is no metadata.
*/
cljs.core.meta = (function meta(o){
if((function (){var and__24260__auto__ = !((o == null));
if(and__24260__auto__){
var G__39608 = o;
if(G__39608){
var bit__24953__auto__ = (G__39608.cljs$lang$protocol_mask$partition0$ & (131072));
if((bit__24953__auto__) || (G__39608.cljs$core$IMeta$)){
return true;
} else {
if((!G__39608.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IMeta,G__39608);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IMeta,G__39608);
}
} else {
return and__24260__auto__;
}
})()){
return cljs.core._meta(o);
} else {
return null;
}
});
/**
* For a list or queue, same as first, for a vector, same as, but much
* more efficient than, last. If the collection is empty, returns nil.
*/
cljs.core.peek = (function peek(coll){
if((coll == null)){
return null;
} else {
return cljs.core._peek(coll);
}
});
/**
* For a list or queue, returns a new list/queue without the first
* item, for a vector, returns a new vector without the last item.
* Note - not the same as next/butlast.
*/
cljs.core.pop = (function pop(coll){
if((coll == null)){
return null;
} else {
return cljs.core._pop(coll);
}
});
/**
* disj[oin]. Returns a new set of the same (hashed/sorted) type, that
* does not contain key(s).
* @param {...*} var_args
*/
cljs.core.disj = (function() {
var disj = null;
var disj__1 = (function (coll){
return coll;
});
var disj__2 = (function (coll,k){
if((coll == null)){
return null;
} else {
return cljs.core._disjoin(coll,k);
}
});
var disj__3 = (function() { 
var G__39611__delegate = function (coll,k,ks){
while(true){
if((coll == null)){
return null;
} else {
var ret = disj.cljs$core$IFn$_invoke$arity$2(coll,k);
if(cljs.core.truth_(ks)){
var G__39612 = ret;
var G__39613 = cljs.core.first(ks);
var G__39614 = cljs.core.next(ks);
coll = G__39612;
k = G__39613;
ks = G__39614;
continue;
} else {
return ret;
}
}
break;
}
};
var G__39611 = function (coll,k,var_args){
var ks = null;
if (arguments.length > 2) {
var G__39615__i = 0, G__39615__a = new Array(arguments.length -  2);
while (G__39615__i < G__39615__a.length) {G__39615__a[G__39615__i] = arguments[G__39615__i + 2]; ++G__39615__i;}
  ks = new cljs.core.IndexedSeq(G__39615__a,0);
} 
return G__39611__delegate.call(this,coll,k,ks);};
G__39611.cljs$lang$maxFixedArity = 2;
G__39611.cljs$lang$applyTo = (function (arglist__39616){
var coll = cljs.core.first(arglist__39616);
arglist__39616 = cljs.core.next(arglist__39616);
var k = cljs.core.first(arglist__39616);
var ks = cljs.core.rest(arglist__39616);
return G__39611__delegate(coll,k,ks);
});
G__39611.cljs$core$IFn$_invoke$arity$variadic = G__39611__delegate;
return G__39611;
})()
;
disj = function(coll,k,var_args){
var ks = var_args;
switch(arguments.length){
case 1:
return disj__1.call(this,coll);
case 2:
return disj__2.call(this,coll,k);
default:
var G__39617 = null;
if (arguments.length > 2) {
var G__39618__i = 0, G__39618__a = new Array(arguments.length -  2);
while (G__39618__i < G__39618__a.length) {G__39618__a[G__39618__i] = arguments[G__39618__i + 2]; ++G__39618__i;}
G__39617 = new cljs.core.IndexedSeq(G__39618__a,0);
}
return disj__3.cljs$core$IFn$_invoke$arity$variadic(coll,k, G__39617);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
disj.cljs$lang$maxFixedArity = 2;
disj.cljs$lang$applyTo = disj__3.cljs$lang$applyTo;
disj.cljs$core$IFn$_invoke$arity$1 = disj__1;
disj.cljs$core$IFn$_invoke$arity$2 = disj__2;
disj.cljs$core$IFn$_invoke$arity$variadic = disj__3.cljs$core$IFn$_invoke$arity$variadic;
return disj;
})()
;
/**
* Returns true if coll has no items - same as (not (seq coll)).
* Please use the idiom (seq x) rather than (not (empty? x))
*/
cljs.core.empty_QMARK_ = (function empty_QMARK_(coll){
return ((coll == null)) || (cljs.core.not(cljs.core.seq(coll)));
});
/**
* Returns true if x satisfies ICollection
*/
cljs.core.coll_QMARK_ = (function coll_QMARK_(x){
if((x == null)){
return false;
} else {
var G__39620 = x;
if(G__39620){
var bit__24953__auto__ = (G__39620.cljs$lang$protocol_mask$partition0$ & (8));
if((bit__24953__auto__) || (G__39620.cljs$core$ICollection$)){
return true;
} else {
if((!G__39620.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ICollection,G__39620);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ICollection,G__39620);
}
}
});
/**
* Returns true if x satisfies ISet
*/
cljs.core.set_QMARK_ = (function set_QMARK_(x){
if((x == null)){
return false;
} else {
var G__39622 = x;
if(G__39622){
var bit__24953__auto__ = (G__39622.cljs$lang$protocol_mask$partition0$ & (4096));
if((bit__24953__auto__) || (G__39622.cljs$core$ISet$)){
return true;
} else {
if((!G__39622.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISet,G__39622);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISet,G__39622);
}
}
});
/**
* Returns true if coll implements Associative
*/
cljs.core.associative_QMARK_ = (function associative_QMARK_(x){
var G__39624 = x;
if(G__39624){
var bit__24953__auto__ = (G__39624.cljs$lang$protocol_mask$partition0$ & (512));
if((bit__24953__auto__) || (G__39624.cljs$core$IAssociative$)){
return true;
} else {
if((!G__39624.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IAssociative,G__39624);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IAssociative,G__39624);
}
});
/**
* Returns true if coll satisfies ISequential
*/
cljs.core.sequential_QMARK_ = (function sequential_QMARK_(x){
var G__39626 = x;
if(G__39626){
var bit__24953__auto__ = (G__39626.cljs$lang$protocol_mask$partition0$ & (16777216));
if((bit__24953__auto__) || (G__39626.cljs$core$ISequential$)){
return true;
} else {
if((!G__39626.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISequential,G__39626);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISequential,G__39626);
}
});
/**
* Returns true if coll satisfies ISorted
*/
cljs.core.sorted_QMARK_ = (function sorted_QMARK_(x){
var G__39628 = x;
if(G__39628){
var bit__24953__auto__ = (G__39628.cljs$lang$protocol_mask$partition0$ & (268435456));
if((bit__24953__auto__) || (G__39628.cljs$core$ISorted$)){
return true;
} else {
if((!G__39628.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISorted,G__39628);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISorted,G__39628);
}
});
/**
* Returns true if coll satisfies IReduce
*/
cljs.core.reduceable_QMARK_ = (function reduceable_QMARK_(x){
var G__39630 = x;
if(G__39630){
var bit__24953__auto__ = (G__39630.cljs$lang$protocol_mask$partition0$ & (524288));
if((bit__24953__auto__) || (G__39630.cljs$core$IReduce$)){
return true;
} else {
if((!G__39630.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IReduce,G__39630);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IReduce,G__39630);
}
});
/**
* Return true if x satisfies IMap
*/
cljs.core.map_QMARK_ = (function map_QMARK_(x){
if((x == null)){
return false;
} else {
var G__39632 = x;
if(G__39632){
var bit__24953__auto__ = (G__39632.cljs$lang$protocol_mask$partition0$ & (1024));
if((bit__24953__auto__) || (G__39632.cljs$core$IMap$)){
return true;
} else {
if((!G__39632.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IMap,G__39632);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IMap,G__39632);
}
}
});
/**
* Return true if x satisfies IVector
*/
cljs.core.vector_QMARK_ = (function vector_QMARK_(x){
var G__39634 = x;
if(G__39634){
var bit__24953__auto__ = (G__39634.cljs$lang$protocol_mask$partition0$ & (16384));
if((bit__24953__auto__) || (G__39634.cljs$core$IVector$)){
return true;
} else {
if((!G__39634.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IVector,G__39634);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IVector,G__39634);
}
});

cljs.core.chunked_seq_QMARK_ = (function chunked_seq_QMARK_(x){
var G__39636 = x;
if(G__39636){
var bit__24946__auto__ = (G__39636.cljs$lang$protocol_mask$partition1$ & (512));
if((bit__24946__auto__) || (G__39636.cljs$core$IChunkedSeq$)){
return true;
} else {
return false;
}
} else {
return false;
}
});
/**
* @param {...*} var_args
*/
cljs.core.js_obj = (function() {
var js_obj = null;
var js_obj__0 = (function (){
var obj39642 = {};
return obj39642;
});
var js_obj__1 = (function() { 
var G__39645__delegate = function (keyvals){
var G__39643 = goog.object.create;
var G__39644 = keyvals;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$2 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$2(G__39643,G__39644) : cljs.core.apply.call(null,G__39643,G__39644));
};
var G__39645 = function (var_args){
var keyvals = null;
if (arguments.length > 0) {
var G__39646__i = 0, G__39646__a = new Array(arguments.length -  0);
while (G__39646__i < G__39646__a.length) {G__39646__a[G__39646__i] = arguments[G__39646__i + 0]; ++G__39646__i;}
  keyvals = new cljs.core.IndexedSeq(G__39646__a,0);
} 
return G__39645__delegate.call(this,keyvals);};
G__39645.cljs$lang$maxFixedArity = 0;
G__39645.cljs$lang$applyTo = (function (arglist__39647){
var keyvals = cljs.core.seq(arglist__39647);
return G__39645__delegate(keyvals);
});
G__39645.cljs$core$IFn$_invoke$arity$variadic = G__39645__delegate;
return G__39645;
})()
;
js_obj = function(var_args){
var keyvals = var_args;
switch(arguments.length){
case 0:
return js_obj__0.call(this);
default:
var G__39648 = null;
if (arguments.length > 0) {
var G__39649__i = 0, G__39649__a = new Array(arguments.length -  0);
while (G__39649__i < G__39649__a.length) {G__39649__a[G__39649__i] = arguments[G__39649__i + 0]; ++G__39649__i;}
G__39648 = new cljs.core.IndexedSeq(G__39649__a,0);
}
return js_obj__1.cljs$core$IFn$_invoke$arity$variadic(G__39648);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
js_obj.cljs$lang$maxFixedArity = 0;
js_obj.cljs$lang$applyTo = js_obj__1.cljs$lang$applyTo;
js_obj.cljs$core$IFn$_invoke$arity$0 = js_obj__0;
js_obj.cljs$core$IFn$_invoke$arity$variadic = js_obj__1.cljs$core$IFn$_invoke$arity$variadic;
return js_obj;
})()
;
cljs.core.js_keys = (function js_keys(obj){
var keys = [];
var G__39652_39654 = obj;
var G__39653_39655 = ((function (G__39652_39654,keys){
return (function (val,key,obj__$1){
return keys.push(key);
});})(G__39652_39654,keys))
;
goog.object.forEach(G__39652_39654,G__39653_39655);

return keys;
});
cljs.core.js_delete = (function js_delete(obj,key){
return delete obj[key];
});
cljs.core.array_copy = (function array_copy(from,i,to,j,len){
var i__$1 = i;
var j__$1 = j;
var len__$1 = len;
while(true){
if((len__$1 === (0))){
return to;
} else {
(to[j__$1] = (from[i__$1]));

var G__39656 = (i__$1 + (1));
var G__39657 = (j__$1 + (1));
var G__39658 = (len__$1 - (1));
i__$1 = G__39656;
j__$1 = G__39657;
len__$1 = G__39658;
continue;
}
break;
}
});
cljs.core.array_copy_downward = (function array_copy_downward(from,i,to,j,len){
var i__$1 = (i + (len - (1)));
var j__$1 = (j + (len - (1)));
var len__$1 = len;
while(true){
if((len__$1 === (0))){
return to;
} else {
(to[j__$1] = (from[i__$1]));

var G__39659 = (i__$1 - (1));
var G__39660 = (j__$1 - (1));
var G__39661 = (len__$1 - (1));
i__$1 = G__39659;
j__$1 = G__39660;
len__$1 = G__39661;
continue;
}
break;
}
});
cljs.core.lookup_sentinel = (function (){var obj39663 = {};
return obj39663;
})();
/**
* Returns true if x is the value false, false otherwise.
*/
cljs.core.false_QMARK_ = (function false_QMARK_(x){
return x === false;
});
/**
* Returns true if x is the value true, false otherwise.
*/
cljs.core.true_QMARK_ = (function true_QMARK_(x){
return x === true;
});
cljs.core.undefined_QMARK_ = (function undefined_QMARK_(x){
return (void 0 === x);
});
/**
* Return true if s satisfies ISeq
*/
cljs.core.seq_QMARK_ = (function seq_QMARK_(s){
if((s == null)){
return false;
} else {
var G__39665 = s;
if(G__39665){
var bit__24953__auto__ = (G__39665.cljs$lang$protocol_mask$partition0$ & (64));
if((bit__24953__auto__) || (G__39665.cljs$core$ISeq$)){
return true;
} else {
if((!G__39665.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq,G__39665);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq,G__39665);
}
}
});
/**
* Return true if s satisfies ISeqable
*/
cljs.core.seqable_QMARK_ = (function seqable_QMARK_(s){
var G__39667 = s;
if(G__39667){
var bit__24953__auto__ = (G__39667.cljs$lang$protocol_mask$partition0$ & (8388608));
if((bit__24953__auto__) || (G__39667.cljs$core$ISeqable$)){
return true;
} else {
if((!G__39667.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeqable,G__39667);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeqable,G__39667);
}
});
cljs.core.boolean$ = (function boolean$(x){
if(cljs.core.truth_(x)){
return true;
} else {
return false;
}
});
cljs.core.ifn_QMARK_ = (function ifn_QMARK_(f){
var or__24272__auto__ = cljs.core.fn_QMARK_(f);
if(or__24272__auto__){
return or__24272__auto__;
} else {
var G__39671 = f;
if(G__39671){
var bit__24953__auto__ = (G__39671.cljs$lang$protocol_mask$partition0$ & (1));
if((bit__24953__auto__) || (G__39671.cljs$core$IFn$)){
return true;
} else {
if((!G__39671.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IFn,G__39671);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IFn,G__39671);
}
}
});
/**
* Returns true if n is an integer.
*/
cljs.core.integer_QMARK_ = (function integer_QMARK_(n){
return (typeof n === 'number') && (cljs.core.not((function (){var G__39684 = n;
return isNaN(G__39684);
})())) && (!((n === Infinity))) && (((function (){var G__39685 = n;
return parseFloat(G__39685);
})() === (function (){var G__39686 = n;
var G__39687 = (10);
return parseInt(G__39686,G__39687);
})()));
});
/**
* Returns true if key is present in the given collection, otherwise
* returns false.  Note that for numerically indexed collections like
* vectors and arrays, this tests if the numeric key is within the
* range of indexes. 'contains?' operates constant or logarithmic time;
* it will not perform a linear search for a value.  See also 'some'.
*/
cljs.core.contains_QMARK_ = (function contains_QMARK_(coll,v){
if((cljs.core.get.cljs$core$IFn$_invoke$arity$3(coll,v,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel)){
return false;
} else {
return true;
}
});
/**
* Returns the map entry for key, or nil if key not present.
*/
cljs.core.find = (function find(coll,k){
if((!((coll == null))) && (cljs.core.associative_QMARK_(coll)) && (cljs.core.contains_QMARK_(coll,k))){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [k,cljs.core.get.cljs$core$IFn$_invoke$arity$2(coll,k)], null);
} else {
return null;
}
});
/**
* Returns true if no two of the arguments are =
* @param {...*} var_args
*/
cljs.core.distinct_QMARK_ = (function() {
var distinct_QMARK_ = null;
var distinct_QMARK___1 = (function (x){
return true;
});
var distinct_QMARK___2 = (function (x,y){
return !(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x,y));
});
var distinct_QMARK___3 = (function() { 
var G__39688__delegate = function (x,y,more){
if(!(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x,y))){
var s = cljs.core.PersistentHashSet.fromArray([x,y], true);
var xs = more;
while(true){
var x__$1 = cljs.core.first(xs);
var etc = cljs.core.next(xs);
if(cljs.core.truth_(xs)){
if(cljs.core.contains_QMARK_(s,x__$1)){
return false;
} else {
var G__39689 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(s,x__$1);
var G__39690 = etc;
s = G__39689;
xs = G__39690;
continue;
}
} else {
return true;
}
break;
}
} else {
return false;
}
};
var G__39688 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__39691__i = 0, G__39691__a = new Array(arguments.length -  2);
while (G__39691__i < G__39691__a.length) {G__39691__a[G__39691__i] = arguments[G__39691__i + 2]; ++G__39691__i;}
  more = new cljs.core.IndexedSeq(G__39691__a,0);
} 
return G__39688__delegate.call(this,x,y,more);};
G__39688.cljs$lang$maxFixedArity = 2;
G__39688.cljs$lang$applyTo = (function (arglist__39692){
var x = cljs.core.first(arglist__39692);
arglist__39692 = cljs.core.next(arglist__39692);
var y = cljs.core.first(arglist__39692);
var more = cljs.core.rest(arglist__39692);
return G__39688__delegate(x,y,more);
});
G__39688.cljs$core$IFn$_invoke$arity$variadic = G__39688__delegate;
return G__39688;
})()
;
distinct_QMARK_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return distinct_QMARK___1.call(this,x);
case 2:
return distinct_QMARK___2.call(this,x,y);
default:
var G__39693 = null;
if (arguments.length > 2) {
var G__39694__i = 0, G__39694__a = new Array(arguments.length -  2);
while (G__39694__i < G__39694__a.length) {G__39694__a[G__39694__i] = arguments[G__39694__i + 2]; ++G__39694__i;}
G__39693 = new cljs.core.IndexedSeq(G__39694__a,0);
}
return distinct_QMARK___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__39693);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
distinct_QMARK_.cljs$lang$maxFixedArity = 2;
distinct_QMARK_.cljs$lang$applyTo = distinct_QMARK___3.cljs$lang$applyTo;
distinct_QMARK_.cljs$core$IFn$_invoke$arity$1 = distinct_QMARK___1;
distinct_QMARK_.cljs$core$IFn$_invoke$arity$2 = distinct_QMARK___2;
distinct_QMARK_.cljs$core$IFn$_invoke$arity$variadic = distinct_QMARK___3.cljs$core$IFn$_invoke$arity$variadic;
return distinct_QMARK_;
})()
;
/**
* Comparator. Returns a negative number, zero, or a positive number
* when x is logically 'less than', 'equal to', or 'greater than'
* y. Uses IComparable if available and google.array.defaultCompare for objects
* of the same type and special-cases nil to be less than any other object.
*/
cljs.core.compare = (function compare(x,y){
if((x === y)){
return (0);
} else {
if((x == null)){
return (-1);
} else {
if((y == null)){
return (1);
} else {
if((cljs.core.type(x) === cljs.core.type(y))){
if((function (){var G__39698 = x;
if(G__39698){
var bit__24946__auto__ = (G__39698.cljs$lang$protocol_mask$partition1$ & (2048));
if((bit__24946__auto__) || (G__39698.cljs$core$IComparable$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return x.cljs$core$IComparable$_compare$arity$2(null,y);
} else {
var G__39699 = x;
var G__39700 = y;
return goog.array.defaultCompare(G__39699,G__39700);
}
} else {
throw (new Error("compare on non-nil objects of different types"));

}
}
}
}
});
/**
* Compare indexed collection.
*/
cljs.core.compare_indexed = (function() {
var compare_indexed = null;
var compare_indexed__2 = (function (xs,ys){
var xl = cljs.core.count(xs);
var yl = cljs.core.count(ys);
if((xl < yl)){
return (-1);
} else {
if((xl > yl)){
return (1);
} else {
return compare_indexed.cljs$core$IFn$_invoke$arity$4(xs,ys,xl,(0));

}
}
});
var compare_indexed__4 = (function (xs,ys,len,n){
while(true){
var d = cljs.core.compare(cljs.core.nth.cljs$core$IFn$_invoke$arity$2(xs,n),cljs.core.nth.cljs$core$IFn$_invoke$arity$2(ys,n));
if(((d === (0))) && (((n + (1)) < len))){
var G__39705 = xs;
var G__39706 = ys;
var G__39707 = len;
var G__39708 = (n + (1));
xs = G__39705;
ys = G__39706;
len = G__39707;
n = G__39708;
continue;
} else {
return d;
}
break;
}
});
compare_indexed = function(xs,ys,len,n){
switch(arguments.length){
case 2:
return compare_indexed__2.call(this,xs,ys);
case 4:
return compare_indexed__4.call(this,xs,ys,len,n);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
compare_indexed.cljs$core$IFn$_invoke$arity$2 = compare_indexed__2;
compare_indexed.cljs$core$IFn$_invoke$arity$4 = compare_indexed__4;
return compare_indexed;
})()
;
/**
* Given a fn that might be boolean valued or a comparator,
* return a fn that is a comparator.
*/
cljs.core.fn__GT_comparator = (function fn__GT_comparator(f){
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(f,cljs.core.compare)){
return cljs.core.compare;
} else {
return (function (x,y){
var r = (function (){var G__39713 = x;
var G__39714 = y;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__39713,G__39714) : f.call(null,G__39713,G__39714));
})();
if(typeof r === 'number'){
return r;
} else {
if(cljs.core.truth_(r)){
return (-1);
} else {
if(cljs.core.truth_((function (){var G__39715 = y;
var G__39716 = x;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__39715,G__39716) : f.call(null,G__39715,G__39716));
})())){
return (1);
} else {
return (0);
}
}
}
});
}
});
/**
* Returns a sorted sequence of the items in coll. Comp can be
* boolean-valued comparison function, or a -/0/+ valued comparator.
* Comp defaults to compare.
*/
cljs.core.sort = (function() {
var sort = null;
var sort__1 = (function (coll){
return sort.cljs$core$IFn$_invoke$arity$2(cljs.core.compare,coll);
});
var sort__2 = (function (comp,coll){
if(cljs.core.seq(coll)){
var a = (function (){var G__39722 = coll;
return (cljs.core.to_array.cljs$core$IFn$_invoke$arity$1 ? cljs.core.to_array.cljs$core$IFn$_invoke$arity$1(G__39722) : cljs.core.to_array.call(null,G__39722));
})();
var G__39723_39725 = a;
var G__39724_39726 = cljs.core.fn__GT_comparator(comp);
goog.array.stableSort(G__39723_39725,G__39724_39726);

return cljs.core.seq(a);
} else {
return cljs.core.List.EMPTY;
}
});
sort = function(comp,coll){
switch(arguments.length){
case 1:
return sort__1.call(this,comp);
case 2:
return sort__2.call(this,comp,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
sort.cljs$core$IFn$_invoke$arity$1 = sort__1;
sort.cljs$core$IFn$_invoke$arity$2 = sort__2;
return sort;
})()
;
/**
* Returns a sorted sequence of the items in coll, where the sort
* order is determined by comparing (keyfn item).  Comp can be
* boolean-valued comparison funcion, or a -/0/+ valued comparator.
* Comp defaults to compare.
*/
cljs.core.sort_by = (function() {
var sort_by = null;
var sort_by__2 = (function (keyfn,coll){
return sort_by.cljs$core$IFn$_invoke$arity$3(keyfn,cljs.core.compare,coll);
});
var sort_by__3 = (function (keyfn,comp,coll){
return cljs.core.sort.cljs$core$IFn$_invoke$arity$2((function (x,y){
return cljs.core.fn__GT_comparator(comp).call(null,(function (){var G__39732 = x;
return (keyfn.cljs$core$IFn$_invoke$arity$1 ? keyfn.cljs$core$IFn$_invoke$arity$1(G__39732) : keyfn.call(null,G__39732));
})(),(function (){var G__39733 = y;
return (keyfn.cljs$core$IFn$_invoke$arity$1 ? keyfn.cljs$core$IFn$_invoke$arity$1(G__39733) : keyfn.call(null,G__39733));
})());
}),coll);
});
sort_by = function(keyfn,comp,coll){
switch(arguments.length){
case 2:
return sort_by__2.call(this,keyfn,comp);
case 3:
return sort_by__3.call(this,keyfn,comp,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
sort_by.cljs$core$IFn$_invoke$arity$2 = sort_by__2;
sort_by.cljs$core$IFn$_invoke$arity$3 = sort_by__3;
return sort_by;
})()
;
cljs.core.seq_reduce = (function() {
var seq_reduce = null;
var seq_reduce__2 = (function (f,coll){
var temp__4124__auto__ = cljs.core.seq(coll);
if(temp__4124__auto__){
var s = temp__4124__auto__;
var G__39739 = f;
var G__39740 = cljs.core.first(s);
var G__39741 = cljs.core.next(s);
return (cljs.core.reduce.cljs$core$IFn$_invoke$arity$3 ? cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(G__39739,G__39740,G__39741) : cljs.core.reduce.call(null,G__39739,G__39740,G__39741));
} else {
return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
}
});
var seq_reduce__3 = (function (f,val,coll){
var val__$1 = val;
var coll__$1 = cljs.core.seq(coll);
while(true){
if(coll__$1){
var nval = (function (){var G__39742 = val__$1;
var G__39743 = cljs.core.first(coll__$1);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__39742,G__39743) : f.call(null,G__39742,G__39743));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__39744 = nval;
var G__39745 = cljs.core.next(coll__$1);
val__$1 = G__39744;
coll__$1 = G__39745;
continue;
}
} else {
return val__$1;
}
break;
}
});
seq_reduce = function(f,val,coll){
switch(arguments.length){
case 2:
return seq_reduce__2.call(this,f,val);
case 3:
return seq_reduce__3.call(this,f,val,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
seq_reduce.cljs$core$IFn$_invoke$arity$2 = seq_reduce__2;
seq_reduce.cljs$core$IFn$_invoke$arity$3 = seq_reduce__3;
return seq_reduce;
})()
;
/**
* Return a random permutation of coll
*/
cljs.core.shuffle = (function shuffle(coll){
var a = (function (){var G__39749 = coll;
return (cljs.core.to_array.cljs$core$IFn$_invoke$arity$1 ? cljs.core.to_array.cljs$core$IFn$_invoke$arity$1(G__39749) : cljs.core.to_array.call(null,G__39749));
})();
var G__39750_39752 = a;
goog.array.shuffle(G__39750_39752);

var G__39751 = a;
return (cljs.core.vec.cljs$core$IFn$_invoke$arity$1 ? cljs.core.vec.cljs$core$IFn$_invoke$arity$1(G__39751) : cljs.core.vec.call(null,G__39751));
});
/**
* f should be a function of 2 arguments. If val is not supplied,
* returns the result of applying f to the first 2 items in coll, then
* applying f to that result and the 3rd item, etc. If coll contains no
* items, f must accept no arguments as well, and reduce returns the
* result of calling f with no arguments.  If coll has only 1 item, it
* is returned and f is not called.  If val is supplied, returns the
* result of applying f to val and the first item in coll, then
* applying f to that result and the 2nd item, etc. If coll contains no
* items, returns val and f is not called.
*/
cljs.core.reduce = (function() {
var reduce = null;
var reduce__2 = (function (f,coll){
if((function (){var G__39755 = coll;
if(G__39755){
var bit__24946__auto__ = (G__39755.cljs$lang$protocol_mask$partition0$ & (524288));
if((bit__24946__auto__) || (G__39755.cljs$core$IReduce$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$IReduce$_reduce$arity$2(null,f);
} else {
if(coll instanceof Array){
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$2(coll,f);
} else {
if(typeof coll === 'string'){
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$2(coll,f);
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.IReduce,coll)){
return cljs.core._reduce.cljs$core$IFn$_invoke$arity$2(coll,f);
} else {
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll);

}
}
}
}
});
var reduce__3 = (function (f,val,coll){
if((function (){var G__39756 = coll;
if(G__39756){
var bit__24946__auto__ = (G__39756.cljs$lang$protocol_mask$partition0$ & (524288));
if((bit__24946__auto__) || (G__39756.cljs$core$IReduce$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$IReduce$_reduce$arity$3(null,f,val);
} else {
if(coll instanceof Array){
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$3(coll,f,val);
} else {
if(typeof coll === 'string'){
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$3(coll,f,val);
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.IReduce,coll)){
return cljs.core._reduce.cljs$core$IFn$_invoke$arity$3(coll,f,val);
} else {
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,val,coll);

}
}
}
}
});
reduce = function(f,val,coll){
switch(arguments.length){
case 2:
return reduce__2.call(this,f,val);
case 3:
return reduce__3.call(this,f,val,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
reduce.cljs$core$IFn$_invoke$arity$2 = reduce__2;
reduce.cljs$core$IFn$_invoke$arity$3 = reduce__3;
return reduce;
})()
;
/**
* Reduces an associative collection. f should be a function of 3
* arguments. Returns the result of applying f to init, the first key
* and the first value in coll, then applying f to that result and the
* 2nd key and value, etc. If coll contains no entries, returns init
* and f is not called. Note that reduce-kv is supported on vectors,
* where the keys will be the ordinals.
*/
cljs.core.reduce_kv = (function reduce_kv(f,init,coll){
if(!((coll == null))){
return cljs.core._kv_reduce(coll,f,init);
} else {
return init;
}
});
cljs.core.identity = (function identity(x){
return x;
});
cljs.core.completing = (function() {
var completing = null;
var completing__1 = (function (f){
return completing.cljs$core$IFn$_invoke$arity$2(f,cljs.core.identity);
});
var completing__2 = (function (f,cf){
return (function() {
var G__39765 = null;
var G__39765__0 = (function (){
return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
});
var G__39765__1 = (function (x){
var G__39762 = x;
return (cf.cljs$core$IFn$_invoke$arity$1 ? cf.cljs$core$IFn$_invoke$arity$1(G__39762) : cf.call(null,G__39762));
});
var G__39765__2 = (function (x,y){
var G__39763 = x;
var G__39764 = y;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__39763,G__39764) : f.call(null,G__39763,G__39764));
});
G__39765 = function(x,y){
switch(arguments.length){
case 0:
return G__39765__0.call(this);
case 1:
return G__39765__1.call(this,x);
case 2:
return G__39765__2.call(this,x,y);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__39765.cljs$core$IFn$_invoke$arity$0 = G__39765__0;
G__39765.cljs$core$IFn$_invoke$arity$1 = G__39765__1;
G__39765.cljs$core$IFn$_invoke$arity$2 = G__39765__2;
return G__39765;
})()
});
completing = function(f,cf){
switch(arguments.length){
case 1:
return completing__1.call(this,f);
case 2:
return completing__2.call(this,f,cf);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
completing.cljs$core$IFn$_invoke$arity$1 = completing__1;
completing.cljs$core$IFn$_invoke$arity$2 = completing__2;
return completing;
})()
;
/**
* reduce with a transformation of f (xf). If init is not
* supplied, (f) will be called to produce it. f should be a reducing
* step function that accepts both 1 and 2 arguments, if it accepts
* only 2 you can add the arity-1 with 'completing'. Returns the result
* of applying (the transformed) xf to init and the first item in coll,
* then applying xf to that result and the 2nd item, etc. If coll
* contains no items, returns init and f is not called. Note that
* certain transforms may inject or skip items.
*/
cljs.core.transduce = (function() {
var transduce = null;
var transduce__3 = (function (xform,f,coll){
return transduce.cljs$core$IFn$_invoke$arity$4(xform,f,(function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})(),coll);
});
var transduce__4 = (function (xform,f,init,coll){
var f__$1 = (function (){var G__39772 = f;
return (xform.cljs$core$IFn$_invoke$arity$1 ? xform.cljs$core$IFn$_invoke$arity$1(G__39772) : xform.call(null,G__39772));
})();
var ret = cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(f__$1,init,coll);
var G__39773 = ret;
return (f__$1.cljs$core$IFn$_invoke$arity$1 ? f__$1.cljs$core$IFn$_invoke$arity$1(G__39773) : f__$1.call(null,G__39773));
});
transduce = function(xform,f,init,coll){
switch(arguments.length){
case 3:
return transduce__3.call(this,xform,f,init);
case 4:
return transduce__4.call(this,xform,f,init,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
transduce.cljs$core$IFn$_invoke$arity$3 = transduce__3;
transduce.cljs$core$IFn$_invoke$arity$4 = transduce__4;
return transduce;
})()
;
/**
* Returns the sum of nums. (+) returns 0.
* @param {...*} var_args
*/
cljs.core._PLUS_ = (function() {
var _PLUS_ = null;
var _PLUS___0 = (function (){
return (0);
});
var _PLUS___1 = (function (x){
return x;
});
var _PLUS___2 = (function (x,y){
return (x + y);
});
var _PLUS___3 = (function() { 
var G__39774__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(_PLUS_,(x + y),more);
};
var G__39774 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__39775__i = 0, G__39775__a = new Array(arguments.length -  2);
while (G__39775__i < G__39775__a.length) {G__39775__a[G__39775__i] = arguments[G__39775__i + 2]; ++G__39775__i;}
  more = new cljs.core.IndexedSeq(G__39775__a,0);
} 
return G__39774__delegate.call(this,x,y,more);};
G__39774.cljs$lang$maxFixedArity = 2;
G__39774.cljs$lang$applyTo = (function (arglist__39776){
var x = cljs.core.first(arglist__39776);
arglist__39776 = cljs.core.next(arglist__39776);
var y = cljs.core.first(arglist__39776);
var more = cljs.core.rest(arglist__39776);
return G__39774__delegate(x,y,more);
});
G__39774.cljs$core$IFn$_invoke$arity$variadic = G__39774__delegate;
return G__39774;
})()
;
_PLUS_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 0:
return _PLUS___0.call(this);
case 1:
return _PLUS___1.call(this,x);
case 2:
return _PLUS___2.call(this,x,y);
default:
var G__39777 = null;
if (arguments.length > 2) {
var G__39778__i = 0, G__39778__a = new Array(arguments.length -  2);
while (G__39778__i < G__39778__a.length) {G__39778__a[G__39778__i] = arguments[G__39778__i + 2]; ++G__39778__i;}
G__39777 = new cljs.core.IndexedSeq(G__39778__a,0);
}
return _PLUS___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__39777);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_PLUS_.cljs$lang$maxFixedArity = 2;
_PLUS_.cljs$lang$applyTo = _PLUS___3.cljs$lang$applyTo;
_PLUS_.cljs$core$IFn$_invoke$arity$0 = _PLUS___0;
_PLUS_.cljs$core$IFn$_invoke$arity$1 = _PLUS___1;
_PLUS_.cljs$core$IFn$_invoke$arity$2 = _PLUS___2;
_PLUS_.cljs$core$IFn$_invoke$arity$variadic = _PLUS___3.cljs$core$IFn$_invoke$arity$variadic;
return _PLUS_;
})()
;
/**
* If no ys are supplied, returns the negation of x, else subtracts
* the ys from x and returns the result.
* @param {...*} var_args
*/
cljs.core._ = (function() {
var _ = null;
var ___1 = (function (x){
return (- x);
});
var ___2 = (function (x,y){
return (x - y);
});
var ___3 = (function() { 
var G__39779__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(_,(x - y),more);
};
var G__39779 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__39780__i = 0, G__39780__a = new Array(arguments.length -  2);
while (G__39780__i < G__39780__a.length) {G__39780__a[G__39780__i] = arguments[G__39780__i + 2]; ++G__39780__i;}
  more = new cljs.core.IndexedSeq(G__39780__a,0);
} 
return G__39779__delegate.call(this,x,y,more);};
G__39779.cljs$lang$maxFixedArity = 2;
G__39779.cljs$lang$applyTo = (function (arglist__39781){
var x = cljs.core.first(arglist__39781);
arglist__39781 = cljs.core.next(arglist__39781);
var y = cljs.core.first(arglist__39781);
var more = cljs.core.rest(arglist__39781);
return G__39779__delegate(x,y,more);
});
G__39779.cljs$core$IFn$_invoke$arity$variadic = G__39779__delegate;
return G__39779;
})()
;
_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return ___1.call(this,x);
case 2:
return ___2.call(this,x,y);
default:
var G__39782 = null;
if (arguments.length > 2) {
var G__39783__i = 0, G__39783__a = new Array(arguments.length -  2);
while (G__39783__i < G__39783__a.length) {G__39783__a[G__39783__i] = arguments[G__39783__i + 2]; ++G__39783__i;}
G__39782 = new cljs.core.IndexedSeq(G__39783__a,0);
}
return ___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__39782);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_.cljs$lang$maxFixedArity = 2;
_.cljs$lang$applyTo = ___3.cljs$lang$applyTo;
_.cljs$core$IFn$_invoke$arity$1 = ___1;
_.cljs$core$IFn$_invoke$arity$2 = ___2;
_.cljs$core$IFn$_invoke$arity$variadic = ___3.cljs$core$IFn$_invoke$arity$variadic;
return _;
})()
;
/**
* Returns the product of nums. (*) returns 1.
* @param {...*} var_args
*/
cljs.core._STAR_ = (function() {
var _STAR_ = null;
var _STAR___0 = (function (){
return (1);
});
var _STAR___1 = (function (x){
return x;
});
var _STAR___2 = (function (x,y){
return (x * y);
});
var _STAR___3 = (function() { 
var G__39784__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(_STAR_,(x * y),more);
};
var G__39784 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__39785__i = 0, G__39785__a = new Array(arguments.length -  2);
while (G__39785__i < G__39785__a.length) {G__39785__a[G__39785__i] = arguments[G__39785__i + 2]; ++G__39785__i;}
  more = new cljs.core.IndexedSeq(G__39785__a,0);
} 
return G__39784__delegate.call(this,x,y,more);};
G__39784.cljs$lang$maxFixedArity = 2;
G__39784.cljs$lang$applyTo = (function (arglist__39786){
var x = cljs.core.first(arglist__39786);
arglist__39786 = cljs.core.next(arglist__39786);
var y = cljs.core.first(arglist__39786);
var more = cljs.core.rest(arglist__39786);
return G__39784__delegate(x,y,more);
});
G__39784.cljs$core$IFn$_invoke$arity$variadic = G__39784__delegate;
return G__39784;
})()
;
_STAR_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 0:
return _STAR___0.call(this);
case 1:
return _STAR___1.call(this,x);
case 2:
return _STAR___2.call(this,x,y);
default:
var G__39787 = null;
if (arguments.length > 2) {
var G__39788__i = 0, G__39788__a = new Array(arguments.length -  2);
while (G__39788__i < G__39788__a.length) {G__39788__a[G__39788__i] = arguments[G__39788__i + 2]; ++G__39788__i;}
G__39787 = new cljs.core.IndexedSeq(G__39788__a,0);
}
return _STAR___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__39787);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_STAR_.cljs$lang$maxFixedArity = 2;
_STAR_.cljs$lang$applyTo = _STAR___3.cljs$lang$applyTo;
_STAR_.cljs$core$IFn$_invoke$arity$0 = _STAR___0;
_STAR_.cljs$core$IFn$_invoke$arity$1 = _STAR___1;
_STAR_.cljs$core$IFn$_invoke$arity$2 = _STAR___2;
_STAR_.cljs$core$IFn$_invoke$arity$variadic = _STAR___3.cljs$core$IFn$_invoke$arity$variadic;
return _STAR_;
})()
;
/**
* If no denominators are supplied, returns 1/numerator,
* else returns numerator divided by all of the denominators.
* @param {...*} var_args
*/
cljs.core._SLASH_ = (function() {
var _SLASH_ = null;
var _SLASH___1 = (function (x){
return _SLASH_.cljs$core$IFn$_invoke$arity$2((1),x);
});
var _SLASH___2 = (function (x,y){
return (x / y);
});
var _SLASH___3 = (function() { 
var G__39793__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(_SLASH_,_SLASH_.cljs$core$IFn$_invoke$arity$2(x,y),more);
};
var G__39793 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__39794__i = 0, G__39794__a = new Array(arguments.length -  2);
while (G__39794__i < G__39794__a.length) {G__39794__a[G__39794__i] = arguments[G__39794__i + 2]; ++G__39794__i;}
  more = new cljs.core.IndexedSeq(G__39794__a,0);
} 
return G__39793__delegate.call(this,x,y,more);};
G__39793.cljs$lang$maxFixedArity = 2;
G__39793.cljs$lang$applyTo = (function (arglist__39795){
var x = cljs.core.first(arglist__39795);
arglist__39795 = cljs.core.next(arglist__39795);
var y = cljs.core.first(arglist__39795);
var more = cljs.core.rest(arglist__39795);
return G__39793__delegate(x,y,more);
});
G__39793.cljs$core$IFn$_invoke$arity$variadic = G__39793__delegate;
return G__39793;
})()
;
_SLASH_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return _SLASH___1.call(this,x);
case 2:
return _SLASH___2.call(this,x,y);
default:
var G__39796 = null;
if (arguments.length > 2) {
var G__39797__i = 0, G__39797__a = new Array(arguments.length -  2);
while (G__39797__i < G__39797__a.length) {G__39797__a[G__39797__i] = arguments[G__39797__i + 2]; ++G__39797__i;}
G__39796 = new cljs.core.IndexedSeq(G__39797__a,0);
}
return _SLASH___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__39796);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_SLASH_.cljs$lang$maxFixedArity = 2;
_SLASH_.cljs$lang$applyTo = _SLASH___3.cljs$lang$applyTo;
_SLASH_.cljs$core$IFn$_invoke$arity$1 = _SLASH___1;
_SLASH_.cljs$core$IFn$_invoke$arity$2 = _SLASH___2;
_SLASH_.cljs$core$IFn$_invoke$arity$variadic = _SLASH___3.cljs$core$IFn$_invoke$arity$variadic;
return _SLASH_;
})()
;
/**
* Returns non-nil if nums are in monotonically increasing order,
* otherwise false.
* @param {...*} var_args
*/
cljs.core._LT_ = (function() {
var _LT_ = null;
var _LT___1 = (function (x){
return true;
});
var _LT___2 = (function (x,y){
return (x < y);
});
var _LT___3 = (function() { 
var G__39798__delegate = function (x,y,more){
while(true){
if((x < y)){
if(cljs.core.next(more)){
var G__39799 = y;
var G__39800 = cljs.core.first(more);
var G__39801 = cljs.core.next(more);
x = G__39799;
y = G__39800;
more = G__39801;
continue;
} else {
return (y < cljs.core.first(more));
}
} else {
return false;
}
break;
}
};
var G__39798 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__39802__i = 0, G__39802__a = new Array(arguments.length -  2);
while (G__39802__i < G__39802__a.length) {G__39802__a[G__39802__i] = arguments[G__39802__i + 2]; ++G__39802__i;}
  more = new cljs.core.IndexedSeq(G__39802__a,0);
} 
return G__39798__delegate.call(this,x,y,more);};
G__39798.cljs$lang$maxFixedArity = 2;
G__39798.cljs$lang$applyTo = (function (arglist__39803){
var x = cljs.core.first(arglist__39803);
arglist__39803 = cljs.core.next(arglist__39803);
var y = cljs.core.first(arglist__39803);
var more = cljs.core.rest(arglist__39803);
return G__39798__delegate(x,y,more);
});
G__39798.cljs$core$IFn$_invoke$arity$variadic = G__39798__delegate;
return G__39798;
})()
;
_LT_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return _LT___1.call(this,x);
case 2:
return _LT___2.call(this,x,y);
default:
var G__39804 = null;
if (arguments.length > 2) {
var G__39805__i = 0, G__39805__a = new Array(arguments.length -  2);
while (G__39805__i < G__39805__a.length) {G__39805__a[G__39805__i] = arguments[G__39805__i + 2]; ++G__39805__i;}
G__39804 = new cljs.core.IndexedSeq(G__39805__a,0);
}
return _LT___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__39804);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_LT_.cljs$lang$maxFixedArity = 2;
_LT_.cljs$lang$applyTo = _LT___3.cljs$lang$applyTo;
_LT_.cljs$core$IFn$_invoke$arity$1 = _LT___1;
_LT_.cljs$core$IFn$_invoke$arity$2 = _LT___2;
_LT_.cljs$core$IFn$_invoke$arity$variadic = _LT___3.cljs$core$IFn$_invoke$arity$variadic;
return _LT_;
})()
;
/**
* Returns non-nil if nums are in monotonically non-decreasing order,
* otherwise false.
* @param {...*} var_args
*/
cljs.core._LT__EQ_ = (function() {
var _LT__EQ_ = null;
var _LT__EQ___1 = (function (x){
return true;
});
var _LT__EQ___2 = (function (x,y){
return (x <= y);
});
var _LT__EQ___3 = (function() { 
var G__39806__delegate = function (x,y,more){
while(true){
if((x <= y)){
if(cljs.core.next(more)){
var G__39807 = y;
var G__39808 = cljs.core.first(more);
var G__39809 = cljs.core.next(more);
x = G__39807;
y = G__39808;
more = G__39809;
continue;
} else {
return (y <= cljs.core.first(more));
}
} else {
return false;
}
break;
}
};
var G__39806 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__39810__i = 0, G__39810__a = new Array(arguments.length -  2);
while (G__39810__i < G__39810__a.length) {G__39810__a[G__39810__i] = arguments[G__39810__i + 2]; ++G__39810__i;}
  more = new cljs.core.IndexedSeq(G__39810__a,0);
} 
return G__39806__delegate.call(this,x,y,more);};
G__39806.cljs$lang$maxFixedArity = 2;
G__39806.cljs$lang$applyTo = (function (arglist__39811){
var x = cljs.core.first(arglist__39811);
arglist__39811 = cljs.core.next(arglist__39811);
var y = cljs.core.first(arglist__39811);
var more = cljs.core.rest(arglist__39811);
return G__39806__delegate(x,y,more);
});
G__39806.cljs$core$IFn$_invoke$arity$variadic = G__39806__delegate;
return G__39806;
})()
;
_LT__EQ_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return _LT__EQ___1.call(this,x);
case 2:
return _LT__EQ___2.call(this,x,y);
default:
var G__39812 = null;
if (arguments.length > 2) {
var G__39813__i = 0, G__39813__a = new Array(arguments.length -  2);
while (G__39813__i < G__39813__a.length) {G__39813__a[G__39813__i] = arguments[G__39813__i + 2]; ++G__39813__i;}
G__39812 = new cljs.core.IndexedSeq(G__39813__a,0);
}
return _LT__EQ___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__39812);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_LT__EQ_.cljs$lang$maxFixedArity = 2;
_LT__EQ_.cljs$lang$applyTo = _LT__EQ___3.cljs$lang$applyTo;
_LT__EQ_.cljs$core$IFn$_invoke$arity$1 = _LT__EQ___1;
_LT__EQ_.cljs$core$IFn$_invoke$arity$2 = _LT__EQ___2;
_LT__EQ_.cljs$core$IFn$_invoke$arity$variadic = _LT__EQ___3.cljs$core$IFn$_invoke$arity$variadic;
return _LT__EQ_;
})()
;
/**
* Returns non-nil if nums are in monotonically decreasing order,
* otherwise false.
* @param {...*} var_args
*/
cljs.core._GT_ = (function() {
var _GT_ = null;
var _GT___1 = (function (x){
return true;
});
var _GT___2 = (function (x,y){
return (x > y);
});
var _GT___3 = (function() { 
var G__39814__delegate = function (x,y,more){
while(true){
if((x > y)){
if(cljs.core.next(more)){
var G__39815 = y;
var G__39816 = cljs.core.first(more);
var G__39817 = cljs.core.next(more);
x = G__39815;
y = G__39816;
more = G__39817;
continue;
} else {
return (y > cljs.core.first(more));
}
} else {
return false;
}
break;
}
};
var G__39814 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__39818__i = 0, G__39818__a = new Array(arguments.length -  2);
while (G__39818__i < G__39818__a.length) {G__39818__a[G__39818__i] = arguments[G__39818__i + 2]; ++G__39818__i;}
  more = new cljs.core.IndexedSeq(G__39818__a,0);
} 
return G__39814__delegate.call(this,x,y,more);};
G__39814.cljs$lang$maxFixedArity = 2;
G__39814.cljs$lang$applyTo = (function (arglist__39819){
var x = cljs.core.first(arglist__39819);
arglist__39819 = cljs.core.next(arglist__39819);
var y = cljs.core.first(arglist__39819);
var more = cljs.core.rest(arglist__39819);
return G__39814__delegate(x,y,more);
});
G__39814.cljs$core$IFn$_invoke$arity$variadic = G__39814__delegate;
return G__39814;
})()
;
_GT_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return _GT___1.call(this,x);
case 2:
return _GT___2.call(this,x,y);
default:
var G__39820 = null;
if (arguments.length > 2) {
var G__39821__i = 0, G__39821__a = new Array(arguments.length -  2);
while (G__39821__i < G__39821__a.length) {G__39821__a[G__39821__i] = arguments[G__39821__i + 2]; ++G__39821__i;}
G__39820 = new cljs.core.IndexedSeq(G__39821__a,0);
}
return _GT___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__39820);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_GT_.cljs$lang$maxFixedArity = 2;
_GT_.cljs$lang$applyTo = _GT___3.cljs$lang$applyTo;
_GT_.cljs$core$IFn$_invoke$arity$1 = _GT___1;
_GT_.cljs$core$IFn$_invoke$arity$2 = _GT___2;
_GT_.cljs$core$IFn$_invoke$arity$variadic = _GT___3.cljs$core$IFn$_invoke$arity$variadic;
return _GT_;
})()
;
/**
* Returns non-nil if nums are in monotonically non-increasing order,
* otherwise false.
* @param {...*} var_args
*/
cljs.core._GT__EQ_ = (function() {
var _GT__EQ_ = null;
var _GT__EQ___1 = (function (x){
return true;
});
var _GT__EQ___2 = (function (x,y){
return (x >= y);
});
var _GT__EQ___3 = (function() { 
var G__39822__delegate = function (x,y,more){
while(true){
if((x >= y)){
if(cljs.core.next(more)){
var G__39823 = y;
var G__39824 = cljs.core.first(more);
var G__39825 = cljs.core.next(more);
x = G__39823;
y = G__39824;
more = G__39825;
continue;
} else {
return (y >= cljs.core.first(more));
}
} else {
return false;
}
break;
}
};
var G__39822 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__39826__i = 0, G__39826__a = new Array(arguments.length -  2);
while (G__39826__i < G__39826__a.length) {G__39826__a[G__39826__i] = arguments[G__39826__i + 2]; ++G__39826__i;}
  more = new cljs.core.IndexedSeq(G__39826__a,0);
} 
return G__39822__delegate.call(this,x,y,more);};
G__39822.cljs$lang$maxFixedArity = 2;
G__39822.cljs$lang$applyTo = (function (arglist__39827){
var x = cljs.core.first(arglist__39827);
arglist__39827 = cljs.core.next(arglist__39827);
var y = cljs.core.first(arglist__39827);
var more = cljs.core.rest(arglist__39827);
return G__39822__delegate(x,y,more);
});
G__39822.cljs$core$IFn$_invoke$arity$variadic = G__39822__delegate;
return G__39822;
})()
;
_GT__EQ_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return _GT__EQ___1.call(this,x);
case 2:
return _GT__EQ___2.call(this,x,y);
default:
var G__39828 = null;
if (arguments.length > 2) {
var G__39829__i = 0, G__39829__a = new Array(arguments.length -  2);
while (G__39829__i < G__39829__a.length) {G__39829__a[G__39829__i] = arguments[G__39829__i + 2]; ++G__39829__i;}
G__39828 = new cljs.core.IndexedSeq(G__39829__a,0);
}
return _GT__EQ___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__39828);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_GT__EQ_.cljs$lang$maxFixedArity = 2;
_GT__EQ_.cljs$lang$applyTo = _GT__EQ___3.cljs$lang$applyTo;
_GT__EQ_.cljs$core$IFn$_invoke$arity$1 = _GT__EQ___1;
_GT__EQ_.cljs$core$IFn$_invoke$arity$2 = _GT__EQ___2;
_GT__EQ_.cljs$core$IFn$_invoke$arity$variadic = _GT__EQ___3.cljs$core$IFn$_invoke$arity$variadic;
return _GT__EQ_;
})()
;
/**
* Returns a number one less than num.
*/
cljs.core.dec = (function dec(x){
return (x - (1));
});
/**
* Returns the greatest of the nums.
* @param {...*} var_args
*/
cljs.core.max = (function() {
var max = null;
var max__1 = (function (x){
return x;
});
var max__2 = (function (x,y){
var x__24589__auto__ = x;
var y__24590__auto__ = y;
return ((x__24589__auto__ > y__24590__auto__) ? x__24589__auto__ : y__24590__auto__);
});
var max__3 = (function() { 
var G__39830__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(max,(function (){var x__24589__auto__ = x;
var y__24590__auto__ = y;
return ((x__24589__auto__ > y__24590__auto__) ? x__24589__auto__ : y__24590__auto__);
})(),more);
};
var G__39830 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__39831__i = 0, G__39831__a = new Array(arguments.length -  2);
while (G__39831__i < G__39831__a.length) {G__39831__a[G__39831__i] = arguments[G__39831__i + 2]; ++G__39831__i;}
  more = new cljs.core.IndexedSeq(G__39831__a,0);
} 
return G__39830__delegate.call(this,x,y,more);};
G__39830.cljs$lang$maxFixedArity = 2;
G__39830.cljs$lang$applyTo = (function (arglist__39832){
var x = cljs.core.first(arglist__39832);
arglist__39832 = cljs.core.next(arglist__39832);
var y = cljs.core.first(arglist__39832);
var more = cljs.core.rest(arglist__39832);
return G__39830__delegate(x,y,more);
});
G__39830.cljs$core$IFn$_invoke$arity$variadic = G__39830__delegate;
return G__39830;
})()
;
max = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return max__1.call(this,x);
case 2:
return max__2.call(this,x,y);
default:
var G__39833 = null;
if (arguments.length > 2) {
var G__39834__i = 0, G__39834__a = new Array(arguments.length -  2);
while (G__39834__i < G__39834__a.length) {G__39834__a[G__39834__i] = arguments[G__39834__i + 2]; ++G__39834__i;}
G__39833 = new cljs.core.IndexedSeq(G__39834__a,0);
}
return max__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__39833);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
max.cljs$lang$maxFixedArity = 2;
max.cljs$lang$applyTo = max__3.cljs$lang$applyTo;
max.cljs$core$IFn$_invoke$arity$1 = max__1;
max.cljs$core$IFn$_invoke$arity$2 = max__2;
max.cljs$core$IFn$_invoke$arity$variadic = max__3.cljs$core$IFn$_invoke$arity$variadic;
return max;
})()
;
/**
* Returns the least of the nums.
* @param {...*} var_args
*/
cljs.core.min = (function() {
var min = null;
var min__1 = (function (x){
return x;
});
var min__2 = (function (x,y){
var x__24596__auto__ = x;
var y__24597__auto__ = y;
return ((x__24596__auto__ < y__24597__auto__) ? x__24596__auto__ : y__24597__auto__);
});
var min__3 = (function() { 
var G__39835__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(min,(function (){var x__24596__auto__ = x;
var y__24597__auto__ = y;
return ((x__24596__auto__ < y__24597__auto__) ? x__24596__auto__ : y__24597__auto__);
})(),more);
};
var G__39835 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__39836__i = 0, G__39836__a = new Array(arguments.length -  2);
while (G__39836__i < G__39836__a.length) {G__39836__a[G__39836__i] = arguments[G__39836__i + 2]; ++G__39836__i;}
  more = new cljs.core.IndexedSeq(G__39836__a,0);
} 
return G__39835__delegate.call(this,x,y,more);};
G__39835.cljs$lang$maxFixedArity = 2;
G__39835.cljs$lang$applyTo = (function (arglist__39837){
var x = cljs.core.first(arglist__39837);
arglist__39837 = cljs.core.next(arglist__39837);
var y = cljs.core.first(arglist__39837);
var more = cljs.core.rest(arglist__39837);
return G__39835__delegate(x,y,more);
});
G__39835.cljs$core$IFn$_invoke$arity$variadic = G__39835__delegate;
return G__39835;
})()
;
min = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return min__1.call(this,x);
case 2:
return min__2.call(this,x,y);
default:
var G__39838 = null;
if (arguments.length > 2) {
var G__39839__i = 0, G__39839__a = new Array(arguments.length -  2);
while (G__39839__i < G__39839__a.length) {G__39839__a[G__39839__i] = arguments[G__39839__i + 2]; ++G__39839__i;}
G__39838 = new cljs.core.IndexedSeq(G__39839__a,0);
}
return min__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__39838);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
min.cljs$lang$maxFixedArity = 2;
min.cljs$lang$applyTo = min__3.cljs$lang$applyTo;
min.cljs$core$IFn$_invoke$arity$1 = min__1;
min.cljs$core$IFn$_invoke$arity$2 = min__2;
min.cljs$core$IFn$_invoke$arity$variadic = min__3.cljs$core$IFn$_invoke$arity$variadic;
return min;
})()
;
cljs.core.byte$ = (function byte$(x){
return x;
});
/**
* Coerce to char
*/
cljs.core.char$ = (function char$(x){
if(typeof x === 'number'){
return String.fromCharCode(x);
} else {
if((typeof x === 'string') && ((x.length === (1)))){
return x;
} else {
throw (new Error("Argument to char must be a character or number"));

}
}
});
cljs.core.short$ = (function short$(x){
return x;
});
cljs.core.float$ = (function float$(x){
return x;
});
cljs.core.double$ = (function double$(x){
return x;
});
cljs.core.unchecked_byte = (function unchecked_byte(x){
return x;
});
cljs.core.unchecked_char = (function unchecked_char(x){
return x;
});
cljs.core.unchecked_short = (function unchecked_short(x){
return x;
});
cljs.core.unchecked_float = (function unchecked_float(x){
return x;
});
cljs.core.unchecked_double = (function unchecked_double(x){
return x;
});
/**
* Returns the sum of nums. (+) returns 0.
* @param {...*} var_args
*/
cljs.core.unchecked_add = (function() {
var unchecked_add = null;
var unchecked_add__0 = (function (){
return (0);
});
var unchecked_add__1 = (function (x){
return x;
});
var unchecked_add__2 = (function (x,y){
return (x + y);
});
var unchecked_add__3 = (function() { 
var G__39840__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_add,(x + y),more);
};
var G__39840 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__39841__i = 0, G__39841__a = new Array(arguments.length -  2);
while (G__39841__i < G__39841__a.length) {G__39841__a[G__39841__i] = arguments[G__39841__i + 2]; ++G__39841__i;}
  more = new cljs.core.IndexedSeq(G__39841__a,0);
} 
return G__39840__delegate.call(this,x,y,more);};
G__39840.cljs$lang$maxFixedArity = 2;
G__39840.cljs$lang$applyTo = (function (arglist__39842){
var x = cljs.core.first(arglist__39842);
arglist__39842 = cljs.core.next(arglist__39842);
var y = cljs.core.first(arglist__39842);
var more = cljs.core.rest(arglist__39842);
return G__39840__delegate(x,y,more);
});
G__39840.cljs$core$IFn$_invoke$arity$variadic = G__39840__delegate;
return G__39840;
})()
;
unchecked_add = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 0:
return unchecked_add__0.call(this);
case 1:
return unchecked_add__1.call(this,x);
case 2:
return unchecked_add__2.call(this,x,y);
default:
var G__39843 = null;
if (arguments.length > 2) {
var G__39844__i = 0, G__39844__a = new Array(arguments.length -  2);
while (G__39844__i < G__39844__a.length) {G__39844__a[G__39844__i] = arguments[G__39844__i + 2]; ++G__39844__i;}
G__39843 = new cljs.core.IndexedSeq(G__39844__a,0);
}
return unchecked_add__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__39843);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
unchecked_add.cljs$lang$maxFixedArity = 2;
unchecked_add.cljs$lang$applyTo = unchecked_add__3.cljs$lang$applyTo;
unchecked_add.cljs$core$IFn$_invoke$arity$0 = unchecked_add__0;
unchecked_add.cljs$core$IFn$_invoke$arity$1 = unchecked_add__1;
unchecked_add.cljs$core$IFn$_invoke$arity$2 = unchecked_add__2;
unchecked_add.cljs$core$IFn$_invoke$arity$variadic = unchecked_add__3.cljs$core$IFn$_invoke$arity$variadic;
return unchecked_add;
})()
;
/**
* Returns the sum of nums. (+) returns 0.
* @param {...*} var_args
*/
cljs.core.unchecked_add_int = (function() {
var unchecked_add_int = null;
var unchecked_add_int__0 = (function (){
return (0);
});
var unchecked_add_int__1 = (function (x){
return x;
});
var unchecked_add_int__2 = (function (x,y){
return (x + y);
});
var unchecked_add_int__3 = (function() { 
var G__39845__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_add_int,(x + y),more);
};
var G__39845 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__39846__i = 0, G__39846__a = new Array(arguments.length -  2);
while (G__39846__i < G__39846__a.length) {G__39846__a[G__39846__i] = arguments[G__39846__i + 2]; ++G__39846__i;}
  more = new cljs.core.IndexedSeq(G__39846__a,0);
} 
return G__39845__delegate.call(this,x,y,more);};
G__39845.cljs$lang$maxFixedArity = 2;
G__39845.cljs$lang$applyTo = (function (arglist__39847){
var x = cljs.core.first(arglist__39847);
arglist__39847 = cljs.core.next(arglist__39847);
var y = cljs.core.first(arglist__39847);
var more = cljs.core.rest(arglist__39847);
return G__39845__delegate(x,y,more);
});
G__39845.cljs$core$IFn$_invoke$arity$variadic = G__39845__delegate;
return G__39845;
})()
;
unchecked_add_int = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 0:
return unchecked_add_int__0.call(this);
case 1:
return unchecked_add_int__1.call(this,x);
case 2:
return unchecked_add_int__2.call(this,x,y);
default:
var G__39848 = null;
if (arguments.length > 2) {
var G__39849__i = 0, G__39849__a = new Array(arguments.length -  2);
while (G__39849__i < G__39849__a.length) {G__39849__a[G__39849__i] = arguments[G__39849__i + 2]; ++G__39849__i;}
G__39848 = new cljs.core.IndexedSeq(G__39849__a,0);
}
return unchecked_add_int__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__39848);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
unchecked_add_int.cljs$lang$maxFixedArity = 2;
unchecked_add_int.cljs$lang$applyTo = unchecked_add_int__3.cljs$lang$applyTo;
unchecked_add_int.cljs$core$IFn$_invoke$arity$0 = unchecked_add_int__0;
unchecked_add_int.cljs$core$IFn$_invoke$arity$1 = unchecked_add_int__1;
unchecked_add_int.cljs$core$IFn$_invoke$arity$2 = unchecked_add_int__2;
unchecked_add_int.cljs$core$IFn$_invoke$arity$variadic = unchecked_add_int__3.cljs$core$IFn$_invoke$arity$variadic;
return unchecked_add_int;
})()
;
cljs.core.unchecked_dec = (function unchecked_dec(x){
return (x - (1));
});
cljs.core.unchecked_dec_int = (function unchecked_dec_int(x){
return (x - (1));
});
/**
* If no denominators are supplied, returns 1/numerator,
* else returns numerator divided by all of the denominators.
* @param {...*} var_args
*/
cljs.core.unchecked_divide_int = (function() {
var unchecked_divide_int = null;
var unchecked_divide_int__1 = (function (x){
return unchecked_divide_int.cljs$core$IFn$_invoke$arity$2((1),x);
});
var unchecked_divide_int__2 = (function (x,y){
return (x / y);
});
var unchecked_divide_int__3 = (function() { 
var G__39854__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_divide_int,unchecked_divide_int.cljs$core$IFn$_invoke$arity$2(x,y),more);
};
var G__39854 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__39855__i = 0, G__39855__a = new Array(arguments.length -  2);
while (G__39855__i < G__39855__a.length) {G__39855__a[G__39855__i] = arguments[G__39855__i + 2]; ++G__39855__i;}
  more = new cljs.core.IndexedSeq(G__39855__a,0);
} 
return G__39854__delegate.call(this,x,y,more);};
G__39854.cljs$lang$maxFixedArity = 2;
G__39854.cljs$lang$applyTo = (function (arglist__39856){
var x = cljs.core.first(arglist__39856);
arglist__39856 = cljs.core.next(arglist__39856);
var y = cljs.core.first(arglist__39856);
var more = cljs.core.rest(arglist__39856);
return G__39854__delegate(x,y,more);
});
G__39854.cljs$core$IFn$_invoke$arity$variadic = G__39854__delegate;
return G__39854;
})()
;
unchecked_divide_int = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return unchecked_divide_int__1.call(this,x);
case 2:
return unchecked_divide_int__2.call(this,x,y);
default:
var G__39857 = null;
if (arguments.length > 2) {
var G__39858__i = 0, G__39858__a = new Array(arguments.length -  2);
while (G__39858__i < G__39858__a.length) {G__39858__a[G__39858__i] = arguments[G__39858__i + 2]; ++G__39858__i;}
G__39857 = new cljs.core.IndexedSeq(G__39858__a,0);
}
return unchecked_divide_int__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__39857);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
unchecked_divide_int.cljs$lang$maxFixedArity = 2;
unchecked_divide_int.cljs$lang$applyTo = unchecked_divide_int__3.cljs$lang$applyTo;
unchecked_divide_int.cljs$core$IFn$_invoke$arity$1 = unchecked_divide_int__1;
unchecked_divide_int.cljs$core$IFn$_invoke$arity$2 = unchecked_divide_int__2;
unchecked_divide_int.cljs$core$IFn$_invoke$arity$variadic = unchecked_divide_int__3.cljs$core$IFn$_invoke$arity$variadic;
return unchecked_divide_int;
})()
;
cljs.core.unchecked_inc = (function unchecked_inc(x){
return (x + (1));
});
cljs.core.unchecked_inc_int = (function unchecked_inc_int(x){
return (x + (1));
});
/**
* Returns the product of nums. (*) returns 1.
* @param {...*} var_args
*/
cljs.core.unchecked_multiply = (function() {
var unchecked_multiply = null;
var unchecked_multiply__0 = (function (){
return (1);
});
var unchecked_multiply__1 = (function (x){
return x;
});
var unchecked_multiply__2 = (function (x,y){
return (x * y);
});
var unchecked_multiply__3 = (function() { 
var G__39859__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_multiply,(x * y),more);
};
var G__39859 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__39860__i = 0, G__39860__a = new Array(arguments.length -  2);
while (G__39860__i < G__39860__a.length) {G__39860__a[G__39860__i] = arguments[G__39860__i + 2]; ++G__39860__i;}
  more = new cljs.core.IndexedSeq(G__39860__a,0);
} 
return G__39859__delegate.call(this,x,y,more);};
G__39859.cljs$lang$maxFixedArity = 2;
G__39859.cljs$lang$applyTo = (function (arglist__39861){
var x = cljs.core.first(arglist__39861);
arglist__39861 = cljs.core.next(arglist__39861);
var y = cljs.core.first(arglist__39861);
var more = cljs.core.rest(arglist__39861);
return G__39859__delegate(x,y,more);
});
G__39859.cljs$core$IFn$_invoke$arity$variadic = G__39859__delegate;
return G__39859;
})()
;
unchecked_multiply = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 0:
return unchecked_multiply__0.call(this);
case 1:
return unchecked_multiply__1.call(this,x);
case 2:
return unchecked_multiply__2.call(this,x,y);
default:
var G__39862 = null;
if (arguments.length > 2) {
var G__39863__i = 0, G__39863__a = new Array(arguments.length -  2);
while (G__39863__i < G__39863__a.length) {G__39863__a[G__39863__i] = arguments[G__39863__i + 2]; ++G__39863__i;}
G__39862 = new cljs.core.IndexedSeq(G__39863__a,0);
}
return unchecked_multiply__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__39862);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
unchecked_multiply.cljs$lang$maxFixedArity = 2;
unchecked_multiply.cljs$lang$applyTo = unchecked_multiply__3.cljs$lang$applyTo;
unchecked_multiply.cljs$core$IFn$_invoke$arity$0 = unchecked_multiply__0;
unchecked_multiply.cljs$core$IFn$_invoke$arity$1 = unchecked_multiply__1;
unchecked_multiply.cljs$core$IFn$_invoke$arity$2 = unchecked_multiply__2;
unchecked_multiply.cljs$core$IFn$_invoke$arity$variadic = unchecked_multiply__3.cljs$core$IFn$_invoke$arity$variadic;
return unchecked_multiply;
})()
;
/**
* Returns the product of nums. (*) returns 1.
* @param {...*} var_args
*/
cljs.core.unchecked_multiply_int = (function() {
var unchecked_multiply_int = null;
var unchecked_multiply_int__0 = (function (){
return (1);
});
var unchecked_multiply_int__1 = (function (x){
return x;
});
var unchecked_multiply_int__2 = (function (x,y){
return (x * y);
});
var unchecked_multiply_int__3 = (function() { 
var G__39864__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_multiply_int,(x * y),more);
};
var G__39864 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__39865__i = 0, G__39865__a = new Array(arguments.length -  2);
while (G__39865__i < G__39865__a.length) {G__39865__a[G__39865__i] = arguments[G__39865__i + 2]; ++G__39865__i;}
  more = new cljs.core.IndexedSeq(G__39865__a,0);
} 
return G__39864__delegate.call(this,x,y,more);};
G__39864.cljs$lang$maxFixedArity = 2;
G__39864.cljs$lang$applyTo = (function (arglist__39866){
var x = cljs.core.first(arglist__39866);
arglist__39866 = cljs.core.next(arglist__39866);
var y = cljs.core.first(arglist__39866);
var more = cljs.core.rest(arglist__39866);
return G__39864__delegate(x,y,more);
});
G__39864.cljs$core$IFn$_invoke$arity$variadic = G__39864__delegate;
return G__39864;
})()
;
unchecked_multiply_int = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 0:
return unchecked_multiply_int__0.call(this);
case 1:
return unchecked_multiply_int__1.call(this,x);
case 2:
return unchecked_multiply_int__2.call(this,x,y);
default:
var G__39867 = null;
if (arguments.length > 2) {
var G__39868__i = 0, G__39868__a = new Array(arguments.length -  2);
while (G__39868__i < G__39868__a.length) {G__39868__a[G__39868__i] = arguments[G__39868__i + 2]; ++G__39868__i;}
G__39867 = new cljs.core.IndexedSeq(G__39868__a,0);
}
return unchecked_multiply_int__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__39867);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
unchecked_multiply_int.cljs$lang$maxFixedArity = 2;
unchecked_multiply_int.cljs$lang$applyTo = unchecked_multiply_int__3.cljs$lang$applyTo;
unchecked_multiply_int.cljs$core$IFn$_invoke$arity$0 = unchecked_multiply_int__0;
unchecked_multiply_int.cljs$core$IFn$_invoke$arity$1 = unchecked_multiply_int__1;
unchecked_multiply_int.cljs$core$IFn$_invoke$arity$2 = unchecked_multiply_int__2;
unchecked_multiply_int.cljs$core$IFn$_invoke$arity$variadic = unchecked_multiply_int__3.cljs$core$IFn$_invoke$arity$variadic;
return unchecked_multiply_int;
})()
;
cljs.core.unchecked_negate = (function unchecked_negate(x){
return (- x);
});
cljs.core.unchecked_negate_int = (function unchecked_negate_int(x){
return (- x);
});
cljs.core.unchecked_remainder_int = (function unchecked_remainder_int(x,n){
var G__39871 = x;
var G__39872 = n;
return (cljs.core.mod.cljs$core$IFn$_invoke$arity$2 ? cljs.core.mod.cljs$core$IFn$_invoke$arity$2(G__39871,G__39872) : cljs.core.mod.call(null,G__39871,G__39872));
});
/**
* If no ys are supplied, returns the negation of x, else subtracts
* the ys from x and returns the result.
* @param {...*} var_args
*/
cljs.core.unchecked_subtract = (function() {
var unchecked_subtract = null;
var unchecked_subtract__1 = (function (x){
return (- x);
});
var unchecked_subtract__2 = (function (x,y){
return (x - y);
});
var unchecked_subtract__3 = (function() { 
var G__39873__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_subtract,(x - y),more);
};
var G__39873 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__39874__i = 0, G__39874__a = new Array(arguments.length -  2);
while (G__39874__i < G__39874__a.length) {G__39874__a[G__39874__i] = arguments[G__39874__i + 2]; ++G__39874__i;}
  more = new cljs.core.IndexedSeq(G__39874__a,0);
} 
return G__39873__delegate.call(this,x,y,more);};
G__39873.cljs$lang$maxFixedArity = 2;
G__39873.cljs$lang$applyTo = (function (arglist__39875){
var x = cljs.core.first(arglist__39875);
arglist__39875 = cljs.core.next(arglist__39875);
var y = cljs.core.first(arglist__39875);
var more = cljs.core.rest(arglist__39875);
return G__39873__delegate(x,y,more);
});
G__39873.cljs$core$IFn$_invoke$arity$variadic = G__39873__delegate;
return G__39873;
})()
;
unchecked_subtract = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return unchecked_subtract__1.call(this,x);
case 2:
return unchecked_subtract__2.call(this,x,y);
default:
var G__39876 = null;
if (arguments.length > 2) {
var G__39877__i = 0, G__39877__a = new Array(arguments.length -  2);
while (G__39877__i < G__39877__a.length) {G__39877__a[G__39877__i] = arguments[G__39877__i + 2]; ++G__39877__i;}
G__39876 = new cljs.core.IndexedSeq(G__39877__a,0);
}
return unchecked_subtract__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__39876);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
unchecked_subtract.cljs$lang$maxFixedArity = 2;
unchecked_subtract.cljs$lang$applyTo = unchecked_subtract__3.cljs$lang$applyTo;
unchecked_subtract.cljs$core$IFn$_invoke$arity$1 = unchecked_subtract__1;
unchecked_subtract.cljs$core$IFn$_invoke$arity$2 = unchecked_subtract__2;
unchecked_subtract.cljs$core$IFn$_invoke$arity$variadic = unchecked_subtract__3.cljs$core$IFn$_invoke$arity$variadic;
return unchecked_subtract;
})()
;
/**
* If no ys are supplied, returns the negation of x, else subtracts
* the ys from x and returns the result.
* @param {...*} var_args
*/
cljs.core.unchecked_subtract_int = (function() {
var unchecked_subtract_int = null;
var unchecked_subtract_int__1 = (function (x){
return (- x);
});
var unchecked_subtract_int__2 = (function (x,y){
return (x - y);
});
var unchecked_subtract_int__3 = (function() { 
var G__39878__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_subtract_int,(x - y),more);
};
var G__39878 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__39879__i = 0, G__39879__a = new Array(arguments.length -  2);
while (G__39879__i < G__39879__a.length) {G__39879__a[G__39879__i] = arguments[G__39879__i + 2]; ++G__39879__i;}
  more = new cljs.core.IndexedSeq(G__39879__a,0);
} 
return G__39878__delegate.call(this,x,y,more);};
G__39878.cljs$lang$maxFixedArity = 2;
G__39878.cljs$lang$applyTo = (function (arglist__39880){
var x = cljs.core.first(arglist__39880);
arglist__39880 = cljs.core.next(arglist__39880);
var y = cljs.core.first(arglist__39880);
var more = cljs.core.rest(arglist__39880);
return G__39878__delegate(x,y,more);
});
G__39878.cljs$core$IFn$_invoke$arity$variadic = G__39878__delegate;
return G__39878;
})()
;
unchecked_subtract_int = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return unchecked_subtract_int__1.call(this,x);
case 2:
return unchecked_subtract_int__2.call(this,x,y);
default:
var G__39881 = null;
if (arguments.length > 2) {
var G__39882__i = 0, G__39882__a = new Array(arguments.length -  2);
while (G__39882__i < G__39882__a.length) {G__39882__a[G__39882__i] = arguments[G__39882__i + 2]; ++G__39882__i;}
G__39881 = new cljs.core.IndexedSeq(G__39882__a,0);
}
return unchecked_subtract_int__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__39881);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
unchecked_subtract_int.cljs$lang$maxFixedArity = 2;
unchecked_subtract_int.cljs$lang$applyTo = unchecked_subtract_int__3.cljs$lang$applyTo;
unchecked_subtract_int.cljs$core$IFn$_invoke$arity$1 = unchecked_subtract_int__1;
unchecked_subtract_int.cljs$core$IFn$_invoke$arity$2 = unchecked_subtract_int__2;
unchecked_subtract_int.cljs$core$IFn$_invoke$arity$variadic = unchecked_subtract_int__3.cljs$core$IFn$_invoke$arity$variadic;
return unchecked_subtract_int;
})()
;
cljs.core.fix = (function fix(q){
if((q >= (0))){
var G__39885 = q;
return (Math.floor.cljs$core$IFn$_invoke$arity$1 ? Math.floor.cljs$core$IFn$_invoke$arity$1(G__39885) : Math.floor.call(null,G__39885));
} else {
var G__39886 = q;
return (Math.ceil.cljs$core$IFn$_invoke$arity$1 ? Math.ceil.cljs$core$IFn$_invoke$arity$1(G__39886) : Math.ceil.call(null,G__39886));
}
});
/**
* Coerce to int by stripping decimal places.
*/
cljs.core.int$ = (function int$(x){
return (x | (0));
});
/**
* Coerce to int by stripping decimal places.
*/
cljs.core.unchecked_int = (function unchecked_int(x){
return cljs.core.fix(x);
});
/**
* Coerce to long by stripping decimal places. Identical to `int'.
*/
cljs.core.long$ = (function long$(x){
return cljs.core.fix(x);
});
/**
* Coerce to long by stripping decimal places. Identical to `int'.
*/
cljs.core.unchecked_long = (function unchecked_long(x){
return cljs.core.fix(x);
});
cljs.core.booleans = (function booleans(x){
return x;
});
cljs.core.bytes = (function bytes(x){
return x;
});
cljs.core.chars = (function chars(x){
return x;
});
cljs.core.shorts = (function shorts(x){
return x;
});
cljs.core.ints = (function ints(x){
return x;
});
cljs.core.floats = (function floats(x){
return x;
});
cljs.core.doubles = (function doubles(x){
return x;
});
cljs.core.longs = (function longs(x){
return x;
});
/**
* Modulus of num and div with original javascript behavior. i.e. bug for negative numbers
*/
cljs.core.js_mod = (function js_mod(n,d){
return (n % d);
});
/**
* Modulus of num and div. Truncates toward negative infinity.
*/
cljs.core.mod = (function mod(n,d){
return (((n % d) + d) % d);
});
/**
* quot[ient] of dividing numerator by denominator.
*/
cljs.core.quot = (function quot(n,d){
var rem = (n % d);
return cljs.core.fix(((n - rem) / d));
});
/**
* remainder of dividing numerator by denominator.
*/
cljs.core.rem = (function rem(n,d){
var q = cljs.core.quot(n,d);
return (n - (d * q));
});
/**
* Bitwise exclusive or
*/
cljs.core.bit_xor = (function bit_xor(x,y){
return (x ^ y);
});
/**
* Bitwise and
*/
cljs.core.bit_and = (function bit_and(x,y){
return (x & y);
});
/**
* Bitwise or
*/
cljs.core.bit_or = (function bit_or(x,y){
return (x | y);
});
/**
* Bitwise and
*/
cljs.core.bit_and_not = (function bit_and_not(x,y){
return (x & ~y);
});
/**
* Clear bit at index n
*/
cljs.core.bit_clear = (function bit_clear(x,n){
return (x & ~(1 << n));
});
/**
* Flip bit at index n
*/
cljs.core.bit_flip = (function bit_flip(x,n){
return (x ^ (1 << n));
});
/**
* Bitwise complement
*/
cljs.core.bit_not = (function bit_not(x){
return (~ x);
});
/**
* Set bit at index n
*/
cljs.core.bit_set = (function bit_set(x,n){
return (x | (1 << n));
});
/**
* Test bit at index n
*/
cljs.core.bit_test = (function bit_test(x,n){
return ((x & (1 << n)) != 0);
});
/**
* Bitwise shift left
*/
cljs.core.bit_shift_left = (function bit_shift_left(x,n){
return (x << n);
});
/**
* Bitwise shift right
*/
cljs.core.bit_shift_right = (function bit_shift_right(x,n){
return (x >> n);
});
/**
* DEPRECATED: Bitwise shift right with zero fill
*/
cljs.core.bit_shift_right_zero_fill = (function bit_shift_right_zero_fill(x,n){
return (x >>> n);
});
/**
* Bitwise shift right with zero fill
*/
cljs.core.unsigned_bit_shift_right = (function unsigned_bit_shift_right(x,n){
return (x >>> n);
});
/**
* Counts the number of bits set in n
*/
cljs.core.bit_count = (function bit_count(v){
var v__$1 = (v - ((v >> (1)) & (1431655765)));
var v__$2 = ((v__$1 & (858993459)) + ((v__$1 >> (2)) & (858993459)));
return ((((v__$2 + (v__$2 >> (4))) & (252645135)) * (16843009)) >> (24));
});
/**
* Returns non-nil if nums all have the equivalent
* value, otherwise false. Behavior on non nums is
* undefined.
* @param {...*} var_args
*/
cljs.core._EQ__EQ_ = (function() {
var _EQ__EQ_ = null;
var _EQ__EQ___1 = (function (x){
return true;
});
var _EQ__EQ___2 = (function (x,y){
return cljs.core._equiv(x,y);
});
var _EQ__EQ___3 = (function() { 
var G__39891__delegate = function (x,y,more){
while(true){
if(_EQ__EQ_.cljs$core$IFn$_invoke$arity$2(x,y)){
if(cljs.core.next(more)){
var G__39892 = y;
var G__39893 = cljs.core.first(more);
var G__39894 = cljs.core.next(more);
x = G__39892;
y = G__39893;
more = G__39894;
continue;
} else {
return _EQ__EQ_.cljs$core$IFn$_invoke$arity$2(y,cljs.core.first(more));
}
} else {
return false;
}
break;
}
};
var G__39891 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__39895__i = 0, G__39895__a = new Array(arguments.length -  2);
while (G__39895__i < G__39895__a.length) {G__39895__a[G__39895__i] = arguments[G__39895__i + 2]; ++G__39895__i;}
  more = new cljs.core.IndexedSeq(G__39895__a,0);
} 
return G__39891__delegate.call(this,x,y,more);};
G__39891.cljs$lang$maxFixedArity = 2;
G__39891.cljs$lang$applyTo = (function (arglist__39896){
var x = cljs.core.first(arglist__39896);
arglist__39896 = cljs.core.next(arglist__39896);
var y = cljs.core.first(arglist__39896);
var more = cljs.core.rest(arglist__39896);
return G__39891__delegate(x,y,more);
});
G__39891.cljs$core$IFn$_invoke$arity$variadic = G__39891__delegate;
return G__39891;
})()
;
_EQ__EQ_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return _EQ__EQ___1.call(this,x);
case 2:
return _EQ__EQ___2.call(this,x,y);
default:
var G__39897 = null;
if (arguments.length > 2) {
var G__39898__i = 0, G__39898__a = new Array(arguments.length -  2);
while (G__39898__i < G__39898__a.length) {G__39898__a[G__39898__i] = arguments[G__39898__i + 2]; ++G__39898__i;}
G__39897 = new cljs.core.IndexedSeq(G__39898__a,0);
}
return _EQ__EQ___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__39897);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_EQ__EQ_.cljs$lang$maxFixedArity = 2;
_EQ__EQ_.cljs$lang$applyTo = _EQ__EQ___3.cljs$lang$applyTo;
_EQ__EQ_.cljs$core$IFn$_invoke$arity$1 = _EQ__EQ___1;
_EQ__EQ_.cljs$core$IFn$_invoke$arity$2 = _EQ__EQ___2;
_EQ__EQ_.cljs$core$IFn$_invoke$arity$variadic = _EQ__EQ___3.cljs$core$IFn$_invoke$arity$variadic;
return _EQ__EQ_;
})()
;
/**
* Returns true if num is greater than zero, else false
*/
cljs.core.pos_QMARK_ = (function pos_QMARK_(n){
return (n > (0));
});
cljs.core.zero_QMARK_ = (function zero_QMARK_(n){
return (n === (0));
});
/**
* Returns true if num is less than zero, else false
*/
cljs.core.neg_QMARK_ = (function neg_QMARK_(x){
return (x < (0));
});
/**
* Returns the nth next of coll, (seq coll) when n is 0.
*/
cljs.core.nthnext = (function nthnext(coll,n){
var n__$1 = n;
var xs = cljs.core.seq(coll);
while(true){
if((xs) && ((n__$1 > (0)))){
var G__39899 = (n__$1 - (1));
var G__39900 = cljs.core.next(xs);
n__$1 = G__39899;
xs = G__39900;
continue;
} else {
return xs;
}
break;
}
});
/**
* With no args, returns the empty string. With one arg x, returns
* x.toString().  (str nil) returns the empty string. With more than
* one arg, returns the concatenation of the str values of the args.
* @param {...*} var_args
*/
cljs.core.str = (function() {
var str = null;
var str__0 = (function (){
return "";
});
var str__1 = (function (x){
if((x == null)){
return "";
} else {
var G__39904 = x;
return goog.string.buildString(G__39904);
}
});
var str__2 = (function() { 
var G__39905__delegate = function (x,ys){
var sb = (new goog.string.StringBuffer(str.cljs$core$IFn$_invoke$arity$1(x)));
var more = ys;
while(true){
if(cljs.core.truth_(more)){
var G__39906 = sb.append(str.cljs$core$IFn$_invoke$arity$1(cljs.core.first(more)));
var G__39907 = cljs.core.next(more);
sb = G__39906;
more = G__39907;
continue;
} else {
return sb.toString();
}
break;
}
};
var G__39905 = function (x,var_args){
var ys = null;
if (arguments.length > 1) {
var G__39908__i = 0, G__39908__a = new Array(arguments.length -  1);
while (G__39908__i < G__39908__a.length) {G__39908__a[G__39908__i] = arguments[G__39908__i + 1]; ++G__39908__i;}
  ys = new cljs.core.IndexedSeq(G__39908__a,0);
} 
return G__39905__delegate.call(this,x,ys);};
G__39905.cljs$lang$maxFixedArity = 1;
G__39905.cljs$lang$applyTo = (function (arglist__39909){
var x = cljs.core.first(arglist__39909);
var ys = cljs.core.rest(arglist__39909);
return G__39905__delegate(x,ys);
});
G__39905.cljs$core$IFn$_invoke$arity$variadic = G__39905__delegate;
return G__39905;
})()
;
str = function(x,var_args){
var ys = var_args;
switch(arguments.length){
case 0:
return str__0.call(this);
case 1:
return str__1.call(this,x);
default:
var G__39910 = null;
if (arguments.length > 1) {
var G__39911__i = 0, G__39911__a = new Array(arguments.length -  1);
while (G__39911__i < G__39911__a.length) {G__39911__a[G__39911__i] = arguments[G__39911__i + 1]; ++G__39911__i;}
G__39910 = new cljs.core.IndexedSeq(G__39911__a,0);
}
return str__2.cljs$core$IFn$_invoke$arity$variadic(x, G__39910);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
str.cljs$lang$maxFixedArity = 1;
str.cljs$lang$applyTo = str__2.cljs$lang$applyTo;
str.cljs$core$IFn$_invoke$arity$0 = str__0;
str.cljs$core$IFn$_invoke$arity$1 = str__1;
str.cljs$core$IFn$_invoke$arity$variadic = str__2.cljs$core$IFn$_invoke$arity$variadic;
return str;
})()
;
/**
* Returns the substring of s beginning at start inclusive, and ending
* at end (defaults to length of string), exclusive.
*/
cljs.core.subs = (function() {
var subs = null;
var subs__2 = (function (s,start){
return s.substring(start);
});
var subs__3 = (function (s,start,end){
return s.substring(start,end);
});
subs = function(s,start,end){
switch(arguments.length){
case 2:
return subs__2.call(this,s,start);
case 3:
return subs__3.call(this,s,start,end);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
subs.cljs$core$IFn$_invoke$arity$2 = subs__2;
subs.cljs$core$IFn$_invoke$arity$3 = subs__3;
return subs;
})()
;

/**
* Assumes x is sequential. Returns true if x equals y, otherwise
* returns false.
*/
cljs.core.equiv_sequential = (function equiv_sequential(x,y){
return cljs.core.boolean$(((cljs.core.sequential_QMARK_(y))?(((cljs.core.counted_QMARK_(x)) && (cljs.core.counted_QMARK_(y)) && (!((cljs.core.count(x) === cljs.core.count(y)))))?false:(function (){var xs = cljs.core.seq(x);
var ys = cljs.core.seq(y);
while(true){
if((xs == null)){
return (ys == null);
} else {
if((ys == null)){
return false;
} else {
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.first(xs),cljs.core.first(ys))){
var G__39912 = cljs.core.next(xs);
var G__39913 = cljs.core.next(ys);
xs = G__39912;
ys = G__39913;
continue;
} else {
return false;

}
}
}
break;
}
})()):null));
});
cljs.core.hash_coll = (function hash_coll(coll){
if(cljs.core.seq(coll)){
var res = cljs.core.hash(cljs.core.first(coll));
var s = cljs.core.next(coll);
while(true){
if((s == null)){
return res;
} else {
var G__39914 = cljs.core.hash_combine(res,cljs.core.hash(cljs.core.first(s)));
var G__39915 = cljs.core.next(s);
res = G__39914;
s = G__39915;
continue;
}
break;
}
} else {
return (0);
}
});

cljs.core.hash_imap = (function hash_imap(m){
var h = (0);
var s = cljs.core.seq(m);
while(true){
if(s){
var e = cljs.core.first(s);
var G__39920 = ((h + (cljs.core.hash((function (){var G__39918 = e;
return (cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__39918) : cljs.core.key.call(null,G__39918));
})()) ^ cljs.core.hash((function (){var G__39919 = e;
return (cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(G__39919) : cljs.core.val.call(null,G__39919));
})()))) % (4503599627370496));
var G__39921 = cljs.core.next(s);
h = G__39920;
s = G__39921;
continue;
} else {
return h;
}
break;
}
});
cljs.core.hash_iset = (function hash_iset(s){
var h = (0);
var s__$1 = cljs.core.seq(s);
while(true){
if(s__$1){
var e = cljs.core.first(s__$1);
var G__39922 = ((h + cljs.core.hash(e)) % (4503599627370496));
var G__39923 = cljs.core.next(s__$1);
h = G__39922;
s__$1 = G__39923;
continue;
} else {
return h;
}
break;
}
});


/**
* Takes a JavaScript object and a map of names to functions and
* attaches said functions as methods on the object.  Any references to
* JavaScript's implicit this (via the this-as macro) will resolve to the
* object that the function is attached.
*/
cljs.core.extend_object_BANG_ = (function extend_object_BANG_(obj,fn_map){
var seq__39934_39944 = cljs.core.seq(fn_map);
var chunk__39935_39945 = null;
var count__39936_39946 = (0);
var i__39937_39947 = (0);
while(true){
if((i__39937_39947 < count__39936_39946)){
var vec__39938_39948 = chunk__39935_39945.cljs$core$IIndexed$_nth$arity$2(null,i__39937_39947);
var key_name_39949 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__39938_39948,(0),null);
var f_39950 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__39938_39948,(1),null);
var str_name_39951 = (function (){var G__39939 = key_name_39949;
return (cljs.core.name.cljs$core$IFn$_invoke$arity$1 ? cljs.core.name.cljs$core$IFn$_invoke$arity$1(G__39939) : cljs.core.name.call(null,G__39939));
})();
(obj[str_name_39951] = f_39950);

var G__39952 = seq__39934_39944;
var G__39953 = chunk__39935_39945;
var G__39954 = count__39936_39946;
var G__39955 = (i__39937_39947 + (1));
seq__39934_39944 = G__39952;
chunk__39935_39945 = G__39953;
count__39936_39946 = G__39954;
i__39937_39947 = G__39955;
continue;
} else {
var temp__4126__auto___39956 = cljs.core.seq(seq__39934_39944);
if(temp__4126__auto___39956){
var seq__39934_39957__$1 = temp__4126__auto___39956;
if(cljs.core.chunked_seq_QMARK_(seq__39934_39957__$1)){
var c__25059__auto___39958 = (function (){var G__39940 = seq__39934_39957__$1;
return (cljs.core.chunk_first.cljs$core$IFn$_invoke$arity$1 ? cljs.core.chunk_first.cljs$core$IFn$_invoke$arity$1(G__39940) : cljs.core.chunk_first.call(null,G__39940));
})();
var G__39959 = (function (){var G__39941 = seq__39934_39957__$1;
return (cljs.core.chunk_rest.cljs$core$IFn$_invoke$arity$1 ? cljs.core.chunk_rest.cljs$core$IFn$_invoke$arity$1(G__39941) : cljs.core.chunk_rest.call(null,G__39941));
})();
var G__39960 = c__25059__auto___39958;
var G__39961 = cljs.core.count(c__25059__auto___39958);
var G__39962 = (0);
seq__39934_39944 = G__39959;
chunk__39935_39945 = G__39960;
count__39936_39946 = G__39961;
i__39937_39947 = G__39962;
continue;
} else {
var vec__39942_39963 = cljs.core.first(seq__39934_39957__$1);
var key_name_39964 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__39942_39963,(0),null);
var f_39965 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__39942_39963,(1),null);
var str_name_39966 = (function (){var G__39943 = key_name_39964;
return (cljs.core.name.cljs$core$IFn$_invoke$arity$1 ? cljs.core.name.cljs$core$IFn$_invoke$arity$1(G__39943) : cljs.core.name.call(null,G__39943));
})();
(obj[str_name_39966] = f_39965);

var G__39967 = cljs.core.next(seq__39934_39957__$1);
var G__39968 = null;
var G__39969 = (0);
var G__39970 = (0);
seq__39934_39944 = G__39967;
chunk__39935_39945 = G__39968;
count__39936_39946 = G__39969;
i__39937_39947 = G__39970;
continue;
}
} else {
}
}
break;
}

return obj;
});

/**
* @constructor
*/
cljs.core.List = (function (meta,first,rest,count,__hash){
this.meta = meta;
this.first = first;
this.rest = rest;
this.count = count;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 65937646;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.List.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.List.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.List.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.List.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.List(self__.meta,self__.first,self__.rest,self__.count,self__.__hash));
});

cljs.core.List.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.count === (1))){
return null;
} else {
return self__.rest;
}
});

cljs.core.List.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.count;
});

cljs.core.List.prototype.cljs$core$IStack$_peek$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.first;
});

cljs.core.List.prototype.cljs$core$IStack$_pop$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._rest(coll__$1);
});

cljs.core.List.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__24693__auto__ = self__.__hash;
if(!((h__24693__auto__ == null))){
return h__24693__auto__;
} else {
var h__24693__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__24693__auto____$1;

return h__24693__auto____$1;
}
});

cljs.core.List.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.List.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.List.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.List.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.List.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.first;
});

cljs.core.List.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.count === (1))){
return cljs.core.List.EMPTY;
} else {
return self__.rest;
}
});

cljs.core.List.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.List.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.List(meta__$1,self__.first,self__.rest,self__.count,self__.__hash));
});

cljs.core.List.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.List(self__.meta,o,coll__$1,(self__.count + (1)),null));
});

cljs.core.List.cljs$lang$type = true;

cljs.core.List.cljs$lang$ctorStr = "cljs.core/List";

cljs.core.List.cljs$lang$ctorPrWriter = (function (this__24859__auto__,writer__24860__auto__,opt__24861__auto__){
return cljs.core._write(writer__24860__auto__,"cljs.core/List");
});

cljs.core.__GT_List = (function __GT_List(meta,first,rest,count,__hash){
return (new cljs.core.List(meta,first,rest,count,__hash));
});

(cljs.core.List.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__25250__auto__ = this;
return cljs.core.es6_iterator(this__25250__auto__);
}));

/**
* @constructor
*/
cljs.core.EmptyList = (function (meta){
this.meta = meta;
this.cljs$lang$protocol_mask$partition0$ = 65937614;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.EmptyList.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.EmptyList.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.EmptyList.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.EmptyList.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.EmptyList(self__.meta));
});

cljs.core.EmptyList.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return null;
});

cljs.core.EmptyList.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (0);
});

cljs.core.EmptyList.prototype.cljs$core$IStack$_peek$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return null;
});

cljs.core.EmptyList.prototype.cljs$core$IStack$_pop$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
throw (new Error("Can't pop empty list"));
});

cljs.core.EmptyList.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (0);
});

cljs.core.EmptyList.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.EmptyList.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.EmptyList.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.EmptyList.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.EmptyList.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return null;
});

cljs.core.EmptyList.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.List.EMPTY;
});

cljs.core.EmptyList.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return null;
});

cljs.core.EmptyList.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.EmptyList(meta__$1));
});

cljs.core.EmptyList.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.List(self__.meta,o,null,(1),null));
});

cljs.core.EmptyList.cljs$lang$type = true;

cljs.core.EmptyList.cljs$lang$ctorStr = "cljs.core/EmptyList";

cljs.core.EmptyList.cljs$lang$ctorPrWriter = (function (this__24859__auto__,writer__24860__auto__,opt__24861__auto__){
return cljs.core._write(writer__24860__auto__,"cljs.core/EmptyList");
});

cljs.core.__GT_EmptyList = (function __GT_EmptyList(meta){
return (new cljs.core.EmptyList(meta));
});

cljs.core.List.EMPTY = (new cljs.core.EmptyList(null));
(cljs.core.EmptyList.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__25250__auto__ = this;
return cljs.core.es6_iterator(this__25250__auto__);
}));
cljs.core.reversible_QMARK_ = (function reversible_QMARK_(coll){
var G__39972 = coll;
if(G__39972){
var bit__24953__auto__ = (G__39972.cljs$lang$protocol_mask$partition0$ & (134217728));
if((bit__24953__auto__) || (G__39972.cljs$core$IReversible$)){
return true;
} else {
if((!G__39972.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IReversible,G__39972);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IReversible,G__39972);
}
});
cljs.core.rseq = (function rseq(coll){
return cljs.core._rseq(coll);
});
/**
* Returns a seq of the items in coll in reverse order. Not lazy.
*/
cljs.core.reverse = (function reverse(coll){
if(cljs.core.reversible_QMARK_(coll)){
return cljs.core.rseq(coll);
} else {
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.conj,cljs.core.List.EMPTY,coll);
}
});
/**
* @param {...*} var_args
*/
cljs.core.list = (function() { 
var list__delegate = function (xs){
var arr = ((((xs instanceof cljs.core.IndexedSeq)) && ((xs.i === (0))))?xs.arr:(function (){var arr = [];
var xs__$1 = xs;
while(true){
if(!((xs__$1 == null))){
arr.push(xs__$1.cljs$core$ISeq$_first$arity$1(null));

var G__39973 = xs__$1.cljs$core$INext$_next$arity$1(null);
xs__$1 = G__39973;
continue;
} else {
return arr;
}
break;
}
})());
var i = arr.length;
var r = cljs.core.List.EMPTY;
while(true){
if((i > (0))){
var G__39974 = (i - (1));
var G__39975 = r.cljs$core$ICollection$_conj$arity$2(null,(arr[(i - (1))]));
i = G__39974;
r = G__39975;
continue;
} else {
return r;
}
break;
}
};
var list = function (var_args){
var xs = null;
if (arguments.length > 0) {
var G__39976__i = 0, G__39976__a = new Array(arguments.length -  0);
while (G__39976__i < G__39976__a.length) {G__39976__a[G__39976__i] = arguments[G__39976__i + 0]; ++G__39976__i;}
  xs = new cljs.core.IndexedSeq(G__39976__a,0);
} 
return list__delegate.call(this,xs);};
list.cljs$lang$maxFixedArity = 0;
list.cljs$lang$applyTo = (function (arglist__39977){
var xs = cljs.core.seq(arglist__39977);
return list__delegate(xs);
});
list.cljs$core$IFn$_invoke$arity$variadic = list__delegate;
return list;
})()
;

/**
* @constructor
*/
cljs.core.Cons = (function (meta,first,rest,__hash){
this.meta = meta;
this.first = first;
this.rest = rest;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 65929452;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.Cons.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.Cons.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.Cons.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.Cons.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.Cons(self__.meta,self__.first,self__.rest,self__.__hash));
});

cljs.core.Cons.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.rest == null)){
return null;
} else {
return cljs.core.seq(self__.rest);
}
});

cljs.core.Cons.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__24693__auto__ = self__.__hash;
if(!((h__24693__auto__ == null))){
return h__24693__auto__;
} else {
var h__24693__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__24693__auto____$1;

return h__24693__auto____$1;
}
});

cljs.core.Cons.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.Cons.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.Cons.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.Cons.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.Cons.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.first;
});

cljs.core.Cons.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.rest == null)){
return cljs.core.List.EMPTY;
} else {
return self__.rest;
}
});

cljs.core.Cons.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.Cons.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.Cons(meta__$1,self__.first,self__.rest,self__.__hash));
});

cljs.core.Cons.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.Cons(null,o,coll__$1,self__.__hash));
});

cljs.core.Cons.cljs$lang$type = true;

cljs.core.Cons.cljs$lang$ctorStr = "cljs.core/Cons";

cljs.core.Cons.cljs$lang$ctorPrWriter = (function (this__24859__auto__,writer__24860__auto__,opt__24861__auto__){
return cljs.core._write(writer__24860__auto__,"cljs.core/Cons");
});

cljs.core.__GT_Cons = (function __GT_Cons(meta,first,rest,__hash){
return (new cljs.core.Cons(meta,first,rest,__hash));
});

(cljs.core.Cons.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__25250__auto__ = this;
return cljs.core.es6_iterator(this__25250__auto__);
}));
/**
* Returns a new seq where x is the first element and seq is the rest.
*/
cljs.core.cons = (function cons(x,coll){
if((function (){var or__24272__auto__ = (coll == null);
if(or__24272__auto__){
return or__24272__auto__;
} else {
var G__39981 = coll;
if(G__39981){
var bit__24946__auto__ = (G__39981.cljs$lang$protocol_mask$partition0$ & (64));
if((bit__24946__auto__) || (G__39981.cljs$core$ISeq$)){
return true;
} else {
return false;
}
} else {
return false;
}
}
})()){
return (new cljs.core.Cons(null,x,coll,null));
} else {
return (new cljs.core.Cons(null,x,cljs.core.seq(coll),null));
}
});
cljs.core.list_QMARK_ = (function list_QMARK_(x){
var G__39983 = x;
if(G__39983){
var bit__24953__auto__ = (G__39983.cljs$lang$protocol_mask$partition0$ & (33554432));
if((bit__24953__auto__) || (G__39983.cljs$core$IList$)){
return true;
} else {
if((!G__39983.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IList,G__39983);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IList,G__39983);
}
});
cljs.core.hash_keyword = (function hash_keyword(k){
return ((cljs.core.hash_symbol(k) + (2654435769)) | (0));
});
cljs.core.compare_keywords = (function compare_keywords(a,b){
if((a.fqn === b.fqn)){
return (0);
} else {
if(cljs.core.truth_((function (){var and__24260__auto__ = cljs.core.not(a.ns);
if(and__24260__auto__){
return b.ns;
} else {
return and__24260__auto__;
}
})())){
return (-1);
} else {
if(cljs.core.truth_(a.ns)){
if(cljs.core.not(b.ns)){
return (1);
} else {
var nsc = (function (){var G__39990 = a.ns;
var G__39991 = b.ns;
return goog.array.defaultCompare(G__39990,G__39991);
})();
if(((0) === nsc)){
var G__39992 = a.name;
var G__39993 = b.name;
return goog.array.defaultCompare(G__39992,G__39993);
} else {
return nsc;
}
}
} else {
var G__39994 = a.name;
var G__39995 = b.name;
return goog.array.defaultCompare(G__39994,G__39995);

}
}
}
});

/**
* @constructor
*/
cljs.core.Keyword = (function (ns,name,fqn,_hash){
this.ns = ns;
this.name = name;
this.fqn = fqn;
this._hash = _hash;
this.cljs$lang$protocol_mask$partition0$ = 2153775105;
this.cljs$lang$protocol_mask$partition1$ = 4096;
})
cljs.core.Keyword.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (o,writer,_){
var self__ = this;
var o__$1 = this;
return cljs.core._write(writer,[cljs.core.str(":"),cljs.core.str(self__.fqn)].join(''));
});

cljs.core.Keyword.prototype.cljs$core$INamed$_name$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.name;
});

cljs.core.Keyword.prototype.cljs$core$INamed$_namespace$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.ns;
});

cljs.core.Keyword.prototype.cljs$core$IHash$_hash$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
var h__24693__auto__ = self__._hash;
if(!((h__24693__auto__ == null))){
return h__24693__auto__;
} else {
var h__24693__auto____$1 = cljs.core.hash_keyword(this$__$1);
self__._hash = h__24693__auto____$1;

return h__24693__auto____$1;
}
});

cljs.core.Keyword.prototype.call = (function() {
var G__39997 = null;
var G__39997__2 = (function (self__,coll){
var self__ = this;
var self____$1 = this;
var kw = self____$1;
return cljs.core.get.cljs$core$IFn$_invoke$arity$2(coll,kw);
});
var G__39997__3 = (function (self__,coll,not_found){
var self__ = this;
var self____$1 = this;
var kw = self____$1;
return cljs.core.get.cljs$core$IFn$_invoke$arity$3(coll,kw,not_found);
});
G__39997 = function(self__,coll,not_found){
switch(arguments.length){
case 2:
return G__39997__2.call(this,self__,coll);
case 3:
return G__39997__3.call(this,self__,coll,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__39997.cljs$core$IFn$_invoke$arity$2 = G__39997__2;
G__39997.cljs$core$IFn$_invoke$arity$3 = G__39997__3;
return G__39997;
})()
;

cljs.core.Keyword.prototype.apply = (function (self__,args39996){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args39996)));
});

cljs.core.Keyword.prototype.cljs$core$IFn$_invoke$arity$1 = (function (coll){
var self__ = this;
var kw = this;
return cljs.core.get.cljs$core$IFn$_invoke$arity$2(coll,kw);
});

cljs.core.Keyword.prototype.cljs$core$IFn$_invoke$arity$2 = (function (coll,not_found){
var self__ = this;
var kw = this;
return cljs.core.get.cljs$core$IFn$_invoke$arity$3(coll,kw,not_found);
});

cljs.core.Keyword.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (_,other){
var self__ = this;
var ___$1 = this;
if((other instanceof cljs.core.Keyword)){
return (self__.fqn === other.fqn);
} else {
return false;
}
});

cljs.core.Keyword.prototype.toString = (function (){
var self__ = this;
var _ = this;
return [cljs.core.str(":"),cljs.core.str(self__.fqn)].join('');
});

cljs.core.Keyword.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.Keyword.cljs$lang$type = true;

cljs.core.Keyword.cljs$lang$ctorStr = "cljs.core/Keyword";

cljs.core.Keyword.cljs$lang$ctorPrWriter = (function (this__24859__auto__,writer__24860__auto__,opt__24861__auto__){
return cljs.core._write(writer__24860__auto__,"cljs.core/Keyword");
});

cljs.core.__GT_Keyword = (function __GT_Keyword(ns,name,fqn,_hash){
return (new cljs.core.Keyword(ns,name,fqn,_hash));
});

cljs.core.keyword_QMARK_ = (function keyword_QMARK_(x){
return (x instanceof cljs.core.Keyword);
});
cljs.core.keyword_identical_QMARK_ = (function keyword_identical_QMARK_(x,y){
if((x === y)){
return true;
} else {
if(((x instanceof cljs.core.Keyword)) && ((y instanceof cljs.core.Keyword))){
return (x.fqn === y.fqn);
} else {
return false;
}
}
});
/**
* Returns the namespace String of a symbol or keyword, or nil if not present.
*/
cljs.core.namespace = (function namespace(x){
if((function (){var G__39999 = x;
if(G__39999){
var bit__24946__auto__ = (G__39999.cljs$lang$protocol_mask$partition1$ & (4096));
if((bit__24946__auto__) || (G__39999.cljs$core$INamed$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return x.cljs$core$INamed$_namespace$arity$1(null);
} else {
throw (new Error([cljs.core.str("Doesn't support namespace: "),cljs.core.str(x)].join('')));
}
});
/**
* Returns a Keyword with the given namespace and name.  Do not use :
* in the keyword strings, it will be added automatically.
*/
cljs.core.keyword = (function() {
var keyword = null;
var keyword__1 = (function (name){
if((name instanceof cljs.core.Keyword)){
return name;
} else {
if((name instanceof cljs.core.Symbol)){
return (new cljs.core.Keyword(cljs.core.namespace(name),(function (){var G__40001 = name;
return (cljs.core.name.cljs$core$IFn$_invoke$arity$1 ? cljs.core.name.cljs$core$IFn$_invoke$arity$1(G__40001) : cljs.core.name.call(null,G__40001));
})(),name.str,null));
} else {
if(typeof name === 'string'){
var parts = name.split("/");
if((parts.length === (2))){
return (new cljs.core.Keyword((parts[(0)]),(parts[(1)]),name,null));
} else {
return (new cljs.core.Keyword(null,(parts[(0)]),name,null));
}
} else {
return null;
}
}
}
});
var keyword__2 = (function (ns,name){
return (new cljs.core.Keyword(ns,name,[cljs.core.str((cljs.core.truth_(ns)?[cljs.core.str(ns),cljs.core.str("/")].join(''):null)),cljs.core.str(name)].join(''),null));
});
keyword = function(ns,name){
switch(arguments.length){
case 1:
return keyword__1.call(this,ns);
case 2:
return keyword__2.call(this,ns,name);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
keyword.cljs$core$IFn$_invoke$arity$1 = keyword__1;
keyword.cljs$core$IFn$_invoke$arity$2 = keyword__2;
return keyword;
})()
;

/**
* @constructor
*/
cljs.core.LazySeq = (function (meta,fn,s,__hash){
this.meta = meta;
this.fn = fn;
this.s = s;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32374988;
})
cljs.core.LazySeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.LazySeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.LazySeq.prototype.sval = (function (){
var self__ = this;
var coll = this;
if((self__.fn == null)){
return self__.s;
} else {
self__.s = (function (){return (self__.fn.cljs$core$IFn$_invoke$arity$0 ? self__.fn.cljs$core$IFn$_invoke$arity$0() : self__.fn.call(null));
})();

self__.fn = null;

return self__.s;
}
});

cljs.core.LazySeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.LazySeq.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
cljs.core._seq(coll__$1);

if((self__.s == null)){
return null;
} else {
return cljs.core.next(self__.s);
}
});

cljs.core.LazySeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__24693__auto__ = self__.__hash;
if(!((h__24693__auto__ == null))){
return h__24693__auto__;
} else {
var h__24693__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__24693__auto____$1;

return h__24693__auto____$1;
}
});

cljs.core.LazySeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.LazySeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.LazySeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.LazySeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.LazySeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
cljs.core._seq(coll__$1);

if((self__.s == null)){
return null;
} else {
return cljs.core.first(self__.s);
}
});

cljs.core.LazySeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
cljs.core._seq(coll__$1);

if(!((self__.s == null))){
return cljs.core.rest(self__.s);
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.LazySeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
coll__$1.sval();

if((self__.s == null)){
return null;
} else {
var ls = self__.s;
while(true){
if((ls instanceof cljs.core.LazySeq)){
var G__40002 = ls.sval();
ls = G__40002;
continue;
} else {
self__.s = ls;

return cljs.core.seq(self__.s);
}
break;
}
}
});

cljs.core.LazySeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.LazySeq(meta__$1,self__.fn,self__.s,self__.__hash));
});

cljs.core.LazySeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.LazySeq.cljs$lang$type = true;

cljs.core.LazySeq.cljs$lang$ctorStr = "cljs.core/LazySeq";

cljs.core.LazySeq.cljs$lang$ctorPrWriter = (function (this__24859__auto__,writer__24860__auto__,opt__24861__auto__){
return cljs.core._write(writer__24860__auto__,"cljs.core/LazySeq");
});

cljs.core.__GT_LazySeq = (function __GT_LazySeq(meta,fn,s,__hash){
return (new cljs.core.LazySeq(meta,fn,s,__hash));
});

(cljs.core.LazySeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__25250__auto__ = this;
return cljs.core.es6_iterator(this__25250__auto__);
}));

/**
* @constructor
*/
cljs.core.ChunkBuffer = (function (buf,end){
this.buf = buf;
this.end = end;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 2;
})
cljs.core.ChunkBuffer.prototype.cljs$core$ICounted$_count$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.end;
});

cljs.core.ChunkBuffer.prototype.add = (function (o){
var self__ = this;
var _ = this;
(self__.buf[self__.end] = o);

return self__.end = (self__.end + (1));
});

cljs.core.ChunkBuffer.prototype.chunk = (function (o){
var self__ = this;
var _ = this;
var ret = (new cljs.core.ArrayChunk(self__.buf,(0),self__.end));
self__.buf = null;

return ret;
});

cljs.core.ChunkBuffer.cljs$lang$type = true;

cljs.core.ChunkBuffer.cljs$lang$ctorStr = "cljs.core/ChunkBuffer";

cljs.core.ChunkBuffer.cljs$lang$ctorPrWriter = (function (this__24859__auto__,writer__24860__auto__,opt__24861__auto__){
return cljs.core._write(writer__24860__auto__,"cljs.core/ChunkBuffer");
});

cljs.core.__GT_ChunkBuffer = (function __GT_ChunkBuffer(buf,end){
return (new cljs.core.ChunkBuffer(buf,end));
});

cljs.core.chunk_buffer = (function chunk_buffer(capacity){
return (new cljs.core.ChunkBuffer((new Array(capacity)),(0)));
});

/**
* @constructor
*/
cljs.core.ArrayChunk = (function (arr,off,end){
this.arr = arr;
this.off = off;
this.end = end;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 524306;
})
cljs.core.ArrayChunk.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4(self__.arr,f,(self__.arr[self__.off]),(self__.off + (1)));
});

cljs.core.ArrayChunk.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4(self__.arr,f,start,self__.off);
});

cljs.core.ArrayChunk.prototype.cljs$core$IChunk$ = true;

cljs.core.ArrayChunk.prototype.cljs$core$IChunk$_drop_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.off === self__.end)){
throw (new Error("-drop-first of empty chunk"));
} else {
return (new cljs.core.ArrayChunk(self__.arr,(self__.off + (1)),self__.end));
}
});

cljs.core.ArrayChunk.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (coll,i){
var self__ = this;
var coll__$1 = this;
return (self__.arr[(self__.off + i)]);
});

cljs.core.ArrayChunk.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (coll,i,not_found){
var self__ = this;
var coll__$1 = this;
if(((i >= (0))) && ((i < (self__.end - self__.off)))){
return (self__.arr[(self__.off + i)]);
} else {
return not_found;
}
});

cljs.core.ArrayChunk.prototype.cljs$core$ICounted$_count$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (self__.end - self__.off);
});

cljs.core.ArrayChunk.cljs$lang$type = true;

cljs.core.ArrayChunk.cljs$lang$ctorStr = "cljs.core/ArrayChunk";

cljs.core.ArrayChunk.cljs$lang$ctorPrWriter = (function (this__24859__auto__,writer__24860__auto__,opt__24861__auto__){
return cljs.core._write(writer__24860__auto__,"cljs.core/ArrayChunk");
});

cljs.core.__GT_ArrayChunk = (function __GT_ArrayChunk(arr,off,end){
return (new cljs.core.ArrayChunk(arr,off,end));
});

cljs.core.array_chunk = (function() {
var array_chunk = null;
var array_chunk__1 = (function (arr){
return (new cljs.core.ArrayChunk(arr,(0),arr.length));
});
var array_chunk__2 = (function (arr,off){
return (new cljs.core.ArrayChunk(arr,off,arr.length));
});
var array_chunk__3 = (function (arr,off,end){
return (new cljs.core.ArrayChunk(arr,off,end));
});
array_chunk = function(arr,off,end){
switch(arguments.length){
case 1:
return array_chunk__1.call(this,arr);
case 2:
return array_chunk__2.call(this,arr,off);
case 3:
return array_chunk__3.call(this,arr,off,end);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
array_chunk.cljs$core$IFn$_invoke$arity$1 = array_chunk__1;
array_chunk.cljs$core$IFn$_invoke$arity$2 = array_chunk__2;
array_chunk.cljs$core$IFn$_invoke$arity$3 = array_chunk__3;
return array_chunk;
})()
;

/**
* @constructor
*/
cljs.core.ChunkedCons = (function (chunk,more,meta,__hash){
this.chunk = chunk;
this.more = more;
this.meta = meta;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 31850732;
this.cljs$lang$protocol_mask$partition1$ = 1536;
})
cljs.core.ChunkedCons.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.ChunkedCons.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.ChunkedCons.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.ChunkedCons.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((cljs.core._count(self__.chunk) > (1))){
return (new cljs.core.ChunkedCons(cljs.core._drop_first(self__.chunk),self__.more,self__.meta,null));
} else {
var more__$1 = cljs.core._seq(self__.more);
if((more__$1 == null)){
return null;
} else {
return more__$1;
}
}
});

cljs.core.ChunkedCons.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__24693__auto__ = self__.__hash;
if(!((h__24693__auto__ == null))){
return h__24693__auto__;
} else {
var h__24693__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__24693__auto____$1;

return h__24693__auto____$1;
}
});

cljs.core.ChunkedCons.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.ChunkedCons.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.ChunkedCons.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.chunk,(0));
});

cljs.core.ChunkedCons.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((cljs.core._count(self__.chunk) > (1))){
return (new cljs.core.ChunkedCons(cljs.core._drop_first(self__.chunk),self__.more,self__.meta,null));
} else {
if((self__.more == null)){
return cljs.core.List.EMPTY;
} else {
return self__.more;
}
}
});

cljs.core.ChunkedCons.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.ChunkedCons.prototype.cljs$core$IChunkedSeq$_chunked_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.chunk;
});

cljs.core.ChunkedCons.prototype.cljs$core$IChunkedSeq$_chunked_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.more == null)){
return cljs.core.List.EMPTY;
} else {
return self__.more;
}
});

cljs.core.ChunkedCons.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,m){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.ChunkedCons(self__.chunk,self__.more,m,self__.__hash));
});

cljs.core.ChunkedCons.prototype.cljs$core$ICollection$_conj$arity$2 = (function (this$,o){
var self__ = this;
var this$__$1 = this;
return cljs.core.cons(o,this$__$1);
});

cljs.core.ChunkedCons.prototype.cljs$core$IChunkedNext$_chunked_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.more == null)){
return null;
} else {
return self__.more;
}
});

cljs.core.ChunkedCons.cljs$lang$type = true;

cljs.core.ChunkedCons.cljs$lang$ctorStr = "cljs.core/ChunkedCons";

cljs.core.ChunkedCons.cljs$lang$ctorPrWriter = (function (this__24859__auto__,writer__24860__auto__,opt__24861__auto__){
return cljs.core._write(writer__24860__auto__,"cljs.core/ChunkedCons");
});

cljs.core.__GT_ChunkedCons = (function __GT_ChunkedCons(chunk,more,meta,__hash){
return (new cljs.core.ChunkedCons(chunk,more,meta,__hash));
});

(cljs.core.ChunkedCons.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__25250__auto__ = this;
return cljs.core.es6_iterator(this__25250__auto__);
}));
cljs.core.chunk_cons = (function chunk_cons(chunk,rest){
if((cljs.core._count(chunk) === (0))){
return rest;
} else {
return (new cljs.core.ChunkedCons(chunk,rest,null,null));
}
});
cljs.core.chunk_append = (function chunk_append(b,x){
return b.add(x);
});
cljs.core.chunk = (function chunk(b){
return b.chunk();
});
cljs.core.chunk_first = (function chunk_first(s){
return cljs.core._chunked_first(s);
});
cljs.core.chunk_rest = (function chunk_rest(s){
return cljs.core._chunked_rest(s);
});
cljs.core.chunk_next = (function chunk_next(s){
if((function (){var G__40004 = s;
if(G__40004){
var bit__24946__auto__ = (G__40004.cljs$lang$protocol_mask$partition1$ & (1024));
if((bit__24946__auto__) || (G__40004.cljs$core$IChunkedNext$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return cljs.core._chunked_next(s);
} else {
return cljs.core.seq(cljs.core._chunked_rest(s));
}
});
/**
* Naive impl of to-array as a start.
*/
cljs.core.to_array = (function to_array(s){
var ary = [];
var s__$1 = s;
while(true){
if(cljs.core.seq(s__$1)){
ary.push(cljs.core.first(s__$1));

var G__40005 = cljs.core.next(s__$1);
s__$1 = G__40005;
continue;
} else {
return ary;
}
break;
}
});
/**
* Returns a (potentially-ragged) 2-dimensional array
* containing the contents of coll.
*/
cljs.core.to_array_2d = (function to_array_2d(coll){
var ret = (new Array(cljs.core.count(coll)));
var i_40006 = (0);
var xs_40007 = cljs.core.seq(coll);
while(true){
if(xs_40007){
(ret[i_40006] = cljs.core.to_array(cljs.core.first(xs_40007)));

var G__40008 = (i_40006 + (1));
var G__40009 = cljs.core.next(xs_40007);
i_40006 = G__40008;
xs_40007 = G__40009;
continue;
} else {
}
break;
}

return ret;
});
cljs.core.int_array = (function() {
var int_array = null;
var int_array__1 = (function (size_or_seq){
if(typeof size_or_seq === 'number'){
return int_array.cljs$core$IFn$_invoke$arity$2(size_or_seq,null);
} else {
return cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(size_or_seq);
}
});
var int_array__2 = (function (size,init_val_or_seq){
var a = (new Array(size));
if(cljs.core.seq_QMARK_(init_val_or_seq)){
var s = cljs.core.seq(init_val_or_seq);
var i = (0);
var s__$1 = s;
while(true){
if((s__$1) && ((i < size))){
(a[i] = cljs.core.first(s__$1));

var G__40012 = (i + (1));
var G__40013 = cljs.core.next(s__$1);
i = G__40012;
s__$1 = G__40013;
continue;
} else {
return a;
}
break;
}
} else {
var n__25159__auto___40014 = size;
var i_40015 = (0);
while(true){
if((i_40015 < n__25159__auto___40014)){
(a[i_40015] = init_val_or_seq);

var G__40016 = (i_40015 + (1));
i_40015 = G__40016;
continue;
} else {
}
break;
}

return a;
}
});
int_array = function(size,init_val_or_seq){
switch(arguments.length){
case 1:
return int_array__1.call(this,size);
case 2:
return int_array__2.call(this,size,init_val_or_seq);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
int_array.cljs$core$IFn$_invoke$arity$1 = int_array__1;
int_array.cljs$core$IFn$_invoke$arity$2 = int_array__2;
return int_array;
})()
;
cljs.core.long_array = (function() {
var long_array = null;
var long_array__1 = (function (size_or_seq){
if(typeof size_or_seq === 'number'){
return long_array.cljs$core$IFn$_invoke$arity$2(size_or_seq,null);
} else {
return cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(size_or_seq);
}
});
var long_array__2 = (function (size,init_val_or_seq){
var a = (new Array(size));
if(cljs.core.seq_QMARK_(init_val_or_seq)){
var s = cljs.core.seq(init_val_or_seq);
var i = (0);
var s__$1 = s;
while(true){
if((s__$1) && ((i < size))){
(a[i] = cljs.core.first(s__$1));

var G__40019 = (i + (1));
var G__40020 = cljs.core.next(s__$1);
i = G__40019;
s__$1 = G__40020;
continue;
} else {
return a;
}
break;
}
} else {
var n__25159__auto___40021 = size;
var i_40022 = (0);
while(true){
if((i_40022 < n__25159__auto___40021)){
(a[i_40022] = init_val_or_seq);

var G__40023 = (i_40022 + (1));
i_40022 = G__40023;
continue;
} else {
}
break;
}

return a;
}
});
long_array = function(size,init_val_or_seq){
switch(arguments.length){
case 1:
return long_array__1.call(this,size);
case 2:
return long_array__2.call(this,size,init_val_or_seq);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
long_array.cljs$core$IFn$_invoke$arity$1 = long_array__1;
long_array.cljs$core$IFn$_invoke$arity$2 = long_array__2;
return long_array;
})()
;
cljs.core.double_array = (function() {
var double_array = null;
var double_array__1 = (function (size_or_seq){
if(typeof size_or_seq === 'number'){
return double_array.cljs$core$IFn$_invoke$arity$2(size_or_seq,null);
} else {
return cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(size_or_seq);
}
});
var double_array__2 = (function (size,init_val_or_seq){
var a = (new Array(size));
if(cljs.core.seq_QMARK_(init_val_or_seq)){
var s = cljs.core.seq(init_val_or_seq);
var i = (0);
var s__$1 = s;
while(true){
if((s__$1) && ((i < size))){
(a[i] = cljs.core.first(s__$1));

var G__40026 = (i + (1));
var G__40027 = cljs.core.next(s__$1);
i = G__40026;
s__$1 = G__40027;
continue;
} else {
return a;
}
break;
}
} else {
var n__25159__auto___40028 = size;
var i_40029 = (0);
while(true){
if((i_40029 < n__25159__auto___40028)){
(a[i_40029] = init_val_or_seq);

var G__40030 = (i_40029 + (1));
i_40029 = G__40030;
continue;
} else {
}
break;
}

return a;
}
});
double_array = function(size,init_val_or_seq){
switch(arguments.length){
case 1:
return double_array__1.call(this,size);
case 2:
return double_array__2.call(this,size,init_val_or_seq);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
double_array.cljs$core$IFn$_invoke$arity$1 = double_array__1;
double_array.cljs$core$IFn$_invoke$arity$2 = double_array__2;
return double_array;
})()
;
cljs.core.object_array = (function() {
var object_array = null;
var object_array__1 = (function (size_or_seq){
if(typeof size_or_seq === 'number'){
return object_array.cljs$core$IFn$_invoke$arity$2(size_or_seq,null);
} else {
return cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(size_or_seq);
}
});
var object_array__2 = (function (size,init_val_or_seq){
var a = (new Array(size));
if(cljs.core.seq_QMARK_(init_val_or_seq)){
var s = cljs.core.seq(init_val_or_seq);
var i = (0);
var s__$1 = s;
while(true){
if((s__$1) && ((i < size))){
(a[i] = cljs.core.first(s__$1));

var G__40033 = (i + (1));
var G__40034 = cljs.core.next(s__$1);
i = G__40033;
s__$1 = G__40034;
continue;
} else {
return a;
}
break;
}
} else {
var n__25159__auto___40035 = size;
var i_40036 = (0);
while(true){
if((i_40036 < n__25159__auto___40035)){
(a[i_40036] = init_val_or_seq);

var G__40037 = (i_40036 + (1));
i_40036 = G__40037;
continue;
} else {
}
break;
}

return a;
}
});
object_array = function(size,init_val_or_seq){
switch(arguments.length){
case 1:
return object_array__1.call(this,size);
case 2:
return object_array__2.call(this,size,init_val_or_seq);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
object_array.cljs$core$IFn$_invoke$arity$1 = object_array__1;
object_array.cljs$core$IFn$_invoke$arity$2 = object_array__2;
return object_array;
})()
;
cljs.core.bounded_count = (function bounded_count(s,n){
if(cljs.core.counted_QMARK_(s)){
return cljs.core.count(s);
} else {
var s__$1 = s;
var i = n;
var sum = (0);
while(true){
if(((i > (0))) && (cljs.core.seq(s__$1))){
var G__40038 = cljs.core.next(s__$1);
var G__40039 = (i - (1));
var G__40040 = (sum + (1));
s__$1 = G__40038;
i = G__40039;
sum = G__40040;
continue;
} else {
return sum;
}
break;
}
}
});
cljs.core.spread = (function spread(arglist){
if((arglist == null)){
return null;
} else {
if((cljs.core.next(arglist) == null)){
return cljs.core.seq(cljs.core.first(arglist));
} else {
return cljs.core.cons(cljs.core.first(arglist),spread(cljs.core.next(arglist)));

}
}
});
/**
* Returns a lazy seq representing the concatenation of the elements in the supplied colls.
* @param {...*} var_args
*/
cljs.core.concat = (function() {
var concat = null;
var concat__0 = (function (){
return (new cljs.core.LazySeq(null,(function (){
return null;
}),null,null));
});
var concat__1 = (function (x){
return (new cljs.core.LazySeq(null,(function (){
return x;
}),null,null));
});
var concat__2 = (function (x,y){
return (new cljs.core.LazySeq(null,(function (){
var s = cljs.core.seq(x);
if(s){
if(cljs.core.chunked_seq_QMARK_(s)){
return cljs.core.chunk_cons(cljs.core.chunk_first(s),concat.cljs$core$IFn$_invoke$arity$2(cljs.core.chunk_rest(s),y));
} else {
return cljs.core.cons(cljs.core.first(s),concat.cljs$core$IFn$_invoke$arity$2(cljs.core.rest(s),y));
}
} else {
return y;
}
}),null,null));
});
var concat__3 = (function() { 
var G__40060__delegate = function (x,y,zs){
var cat = (function cat(xys,zs__$1){
return (new cljs.core.LazySeq(null,(function (){
var xys__$1 = cljs.core.seq(xys);
if(xys__$1){
if(cljs.core.chunked_seq_QMARK_(xys__$1)){
return cljs.core.chunk_cons(cljs.core.chunk_first(xys__$1),cat(cljs.core.chunk_rest(xys__$1),zs__$1));
} else {
return cljs.core.cons(cljs.core.first(xys__$1),cat(cljs.core.rest(xys__$1),zs__$1));
}
} else {
if(cljs.core.truth_(zs__$1)){
return cat(cljs.core.first(zs__$1),cljs.core.next(zs__$1));
} else {
return null;
}
}
}),null,null));
});
return cat(concat.cljs$core$IFn$_invoke$arity$2(x,y),zs);
};
var G__40060 = function (x,y,var_args){
var zs = null;
if (arguments.length > 2) {
var G__40061__i = 0, G__40061__a = new Array(arguments.length -  2);
while (G__40061__i < G__40061__a.length) {G__40061__a[G__40061__i] = arguments[G__40061__i + 2]; ++G__40061__i;}
  zs = new cljs.core.IndexedSeq(G__40061__a,0);
} 
return G__40060__delegate.call(this,x,y,zs);};
G__40060.cljs$lang$maxFixedArity = 2;
G__40060.cljs$lang$applyTo = (function (arglist__40062){
var x = cljs.core.first(arglist__40062);
arglist__40062 = cljs.core.next(arglist__40062);
var y = cljs.core.first(arglist__40062);
var zs = cljs.core.rest(arglist__40062);
return G__40060__delegate(x,y,zs);
});
G__40060.cljs$core$IFn$_invoke$arity$variadic = G__40060__delegate;
return G__40060;
})()
;
concat = function(x,y,var_args){
var zs = var_args;
switch(arguments.length){
case 0:
return concat__0.call(this);
case 1:
return concat__1.call(this,x);
case 2:
return concat__2.call(this,x,y);
default:
var G__40063 = null;
if (arguments.length > 2) {
var G__40064__i = 0, G__40064__a = new Array(arguments.length -  2);
while (G__40064__i < G__40064__a.length) {G__40064__a[G__40064__i] = arguments[G__40064__i + 2]; ++G__40064__i;}
G__40063 = new cljs.core.IndexedSeq(G__40064__a,0);
}
return concat__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__40063);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
concat.cljs$lang$maxFixedArity = 2;
concat.cljs$lang$applyTo = concat__3.cljs$lang$applyTo;
concat.cljs$core$IFn$_invoke$arity$0 = concat__0;
concat.cljs$core$IFn$_invoke$arity$1 = concat__1;
concat.cljs$core$IFn$_invoke$arity$2 = concat__2;
concat.cljs$core$IFn$_invoke$arity$variadic = concat__3.cljs$core$IFn$_invoke$arity$variadic;
return concat;
})()
;
/**
* Creates a new list containing the items prepended to the rest, the
* last of which will be treated as a sequence.
* @param {...*} var_args
*/
cljs.core.list_STAR_ = (function() {
var list_STAR_ = null;
var list_STAR___1 = (function (args){
return cljs.core.seq(args);
});
var list_STAR___2 = (function (a,args){
return cljs.core.cons(a,args);
});
var list_STAR___3 = (function (a,b,args){
return cljs.core.cons(a,cljs.core.cons(b,args));
});
var list_STAR___4 = (function (a,b,c,args){
return cljs.core.cons(a,cljs.core.cons(b,cljs.core.cons(c,args)));
});
var list_STAR___5 = (function() { 
var G__40065__delegate = function (a,b,c,d,more){
return cljs.core.cons(a,cljs.core.cons(b,cljs.core.cons(c,cljs.core.cons(d,cljs.core.spread(more)))));
};
var G__40065 = function (a,b,c,d,var_args){
var more = null;
if (arguments.length > 4) {
var G__40066__i = 0, G__40066__a = new Array(arguments.length -  4);
while (G__40066__i < G__40066__a.length) {G__40066__a[G__40066__i] = arguments[G__40066__i + 4]; ++G__40066__i;}
  more = new cljs.core.IndexedSeq(G__40066__a,0);
} 
return G__40065__delegate.call(this,a,b,c,d,more);};
G__40065.cljs$lang$maxFixedArity = 4;
G__40065.cljs$lang$applyTo = (function (arglist__40067){
var a = cljs.core.first(arglist__40067);
arglist__40067 = cljs.core.next(arglist__40067);
var b = cljs.core.first(arglist__40067);
arglist__40067 = cljs.core.next(arglist__40067);
var c = cljs.core.first(arglist__40067);
arglist__40067 = cljs.core.next(arglist__40067);
var d = cljs.core.first(arglist__40067);
var more = cljs.core.rest(arglist__40067);
return G__40065__delegate(a,b,c,d,more);
});
G__40065.cljs$core$IFn$_invoke$arity$variadic = G__40065__delegate;
return G__40065;
})()
;
list_STAR_ = function(a,b,c,d,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return list_STAR___1.call(this,a);
case 2:
return list_STAR___2.call(this,a,b);
case 3:
return list_STAR___3.call(this,a,b,c);
case 4:
return list_STAR___4.call(this,a,b,c,d);
default:
var G__40068 = null;
if (arguments.length > 4) {
var G__40069__i = 0, G__40069__a = new Array(arguments.length -  4);
while (G__40069__i < G__40069__a.length) {G__40069__a[G__40069__i] = arguments[G__40069__i + 4]; ++G__40069__i;}
G__40068 = new cljs.core.IndexedSeq(G__40069__a,0);
}
return list_STAR___5.cljs$core$IFn$_invoke$arity$variadic(a,b,c,d, G__40068);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
list_STAR_.cljs$lang$maxFixedArity = 4;
list_STAR_.cljs$lang$applyTo = list_STAR___5.cljs$lang$applyTo;
list_STAR_.cljs$core$IFn$_invoke$arity$1 = list_STAR___1;
list_STAR_.cljs$core$IFn$_invoke$arity$2 = list_STAR___2;
list_STAR_.cljs$core$IFn$_invoke$arity$3 = list_STAR___3;
list_STAR_.cljs$core$IFn$_invoke$arity$4 = list_STAR___4;
list_STAR_.cljs$core$IFn$_invoke$arity$variadic = list_STAR___5.cljs$core$IFn$_invoke$arity$variadic;
return list_STAR_;
})()
;
/**
* Returns a new, transient version of the collection, in constant time.
*/
cljs.core.transient$ = (function transient$(coll){
return cljs.core._as_transient(coll);
});
/**
* Returns a new, persistent version of the transient collection, in
* constant time. The transient collection cannot be used after this
* call, any such use will throw an exception.
*/
cljs.core.persistent_BANG_ = (function persistent_BANG_(tcoll){
return cljs.core._persistent_BANG_(tcoll);
});
/**
* Adds x to the transient collection, and return coll. The 'addition'
* may happen at different 'places' depending on the concrete type.
* @param {...*} var_args
*/
cljs.core.conj_BANG_ = (function() {
var conj_BANG_ = null;
var conj_BANG___0 = (function (){
return cljs.core.transient$(cljs.core.PersistentVector.EMPTY);
});
var conj_BANG___1 = (function (coll){
return coll;
});
var conj_BANG___2 = (function (tcoll,val){
return cljs.core._conj_BANG_(tcoll,val);
});
var conj_BANG___3 = (function() { 
var G__40070__delegate = function (tcoll,val,vals){
while(true){
var ntcoll = cljs.core._conj_BANG_(tcoll,val);
if(cljs.core.truth_(vals)){
var G__40071 = ntcoll;
var G__40072 = cljs.core.first(vals);
var G__40073 = cljs.core.next(vals);
tcoll = G__40071;
val = G__40072;
vals = G__40073;
continue;
} else {
return ntcoll;
}
break;
}
};
var G__40070 = function (tcoll,val,var_args){
var vals = null;
if (arguments.length > 2) {
var G__40074__i = 0, G__40074__a = new Array(arguments.length -  2);
while (G__40074__i < G__40074__a.length) {G__40074__a[G__40074__i] = arguments[G__40074__i + 2]; ++G__40074__i;}
  vals = new cljs.core.IndexedSeq(G__40074__a,0);
} 
return G__40070__delegate.call(this,tcoll,val,vals);};
G__40070.cljs$lang$maxFixedArity = 2;
G__40070.cljs$lang$applyTo = (function (arglist__40075){
var tcoll = cljs.core.first(arglist__40075);
arglist__40075 = cljs.core.next(arglist__40075);
var val = cljs.core.first(arglist__40075);
var vals = cljs.core.rest(arglist__40075);
return G__40070__delegate(tcoll,val,vals);
});
G__40070.cljs$core$IFn$_invoke$arity$variadic = G__40070__delegate;
return G__40070;
})()
;
conj_BANG_ = function(tcoll,val,var_args){
var vals = var_args;
switch(arguments.length){
case 0:
return conj_BANG___0.call(this);
case 1:
return conj_BANG___1.call(this,tcoll);
case 2:
return conj_BANG___2.call(this,tcoll,val);
default:
var G__40076 = null;
if (arguments.length > 2) {
var G__40077__i = 0, G__40077__a = new Array(arguments.length -  2);
while (G__40077__i < G__40077__a.length) {G__40077__a[G__40077__i] = arguments[G__40077__i + 2]; ++G__40077__i;}
G__40076 = new cljs.core.IndexedSeq(G__40077__a,0);
}
return conj_BANG___3.cljs$core$IFn$_invoke$arity$variadic(tcoll,val, G__40076);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
conj_BANG_.cljs$lang$maxFixedArity = 2;
conj_BANG_.cljs$lang$applyTo = conj_BANG___3.cljs$lang$applyTo;
conj_BANG_.cljs$core$IFn$_invoke$arity$0 = conj_BANG___0;
conj_BANG_.cljs$core$IFn$_invoke$arity$1 = conj_BANG___1;
conj_BANG_.cljs$core$IFn$_invoke$arity$2 = conj_BANG___2;
conj_BANG_.cljs$core$IFn$_invoke$arity$variadic = conj_BANG___3.cljs$core$IFn$_invoke$arity$variadic;
return conj_BANG_;
})()
;
/**
* When applied to a transient map, adds mapping of key(s) to
* val(s). When applied to a transient vector, sets the val at index.
* Note - index must be <= (count vector). Returns coll.
* @param {...*} var_args
*/
cljs.core.assoc_BANG_ = (function() {
var assoc_BANG_ = null;
var assoc_BANG___3 = (function (tcoll,key,val){
return cljs.core._assoc_BANG_(tcoll,key,val);
});
var assoc_BANG___4 = (function() { 
var G__40078__delegate = function (tcoll,key,val,kvs){
while(true){
var ntcoll = cljs.core._assoc_BANG_(tcoll,key,val);
if(cljs.core.truth_(kvs)){
var G__40079 = ntcoll;
var G__40080 = cljs.core.first(kvs);
var G__40081 = cljs.core.second(kvs);
var G__40082 = cljs.core.nnext(kvs);
tcoll = G__40079;
key = G__40080;
val = G__40081;
kvs = G__40082;
continue;
} else {
return ntcoll;
}
break;
}
};
var G__40078 = function (tcoll,key,val,var_args){
var kvs = null;
if (arguments.length > 3) {
var G__40083__i = 0, G__40083__a = new Array(arguments.length -  3);
while (G__40083__i < G__40083__a.length) {G__40083__a[G__40083__i] = arguments[G__40083__i + 3]; ++G__40083__i;}
  kvs = new cljs.core.IndexedSeq(G__40083__a,0);
} 
return G__40078__delegate.call(this,tcoll,key,val,kvs);};
G__40078.cljs$lang$maxFixedArity = 3;
G__40078.cljs$lang$applyTo = (function (arglist__40084){
var tcoll = cljs.core.first(arglist__40084);
arglist__40084 = cljs.core.next(arglist__40084);
var key = cljs.core.first(arglist__40084);
arglist__40084 = cljs.core.next(arglist__40084);
var val = cljs.core.first(arglist__40084);
var kvs = cljs.core.rest(arglist__40084);
return G__40078__delegate(tcoll,key,val,kvs);
});
G__40078.cljs$core$IFn$_invoke$arity$variadic = G__40078__delegate;
return G__40078;
})()
;
assoc_BANG_ = function(tcoll,key,val,var_args){
var kvs = var_args;
switch(arguments.length){
case 3:
return assoc_BANG___3.call(this,tcoll,key,val);
default:
var G__40085 = null;
if (arguments.length > 3) {
var G__40086__i = 0, G__40086__a = new Array(arguments.length -  3);
while (G__40086__i < G__40086__a.length) {G__40086__a[G__40086__i] = arguments[G__40086__i + 3]; ++G__40086__i;}
G__40085 = new cljs.core.IndexedSeq(G__40086__a,0);
}
return assoc_BANG___4.cljs$core$IFn$_invoke$arity$variadic(tcoll,key,val, G__40085);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
assoc_BANG_.cljs$lang$maxFixedArity = 3;
assoc_BANG_.cljs$lang$applyTo = assoc_BANG___4.cljs$lang$applyTo;
assoc_BANG_.cljs$core$IFn$_invoke$arity$3 = assoc_BANG___3;
assoc_BANG_.cljs$core$IFn$_invoke$arity$variadic = assoc_BANG___4.cljs$core$IFn$_invoke$arity$variadic;
return assoc_BANG_;
})()
;
/**
* Returns a transient map that doesn't contain a mapping for key(s).
* @param {...*} var_args
*/
cljs.core.dissoc_BANG_ = (function() {
var dissoc_BANG_ = null;
var dissoc_BANG___2 = (function (tcoll,key){
return cljs.core._dissoc_BANG_(tcoll,key);
});
var dissoc_BANG___3 = (function() { 
var G__40087__delegate = function (tcoll,key,ks){
while(true){
var ntcoll = cljs.core._dissoc_BANG_(tcoll,key);
if(cljs.core.truth_(ks)){
var G__40088 = ntcoll;
var G__40089 = cljs.core.first(ks);
var G__40090 = cljs.core.next(ks);
tcoll = G__40088;
key = G__40089;
ks = G__40090;
continue;
} else {
return ntcoll;
}
break;
}
};
var G__40087 = function (tcoll,key,var_args){
var ks = null;
if (arguments.length > 2) {
var G__40091__i = 0, G__40091__a = new Array(arguments.length -  2);
while (G__40091__i < G__40091__a.length) {G__40091__a[G__40091__i] = arguments[G__40091__i + 2]; ++G__40091__i;}
  ks = new cljs.core.IndexedSeq(G__40091__a,0);
} 
return G__40087__delegate.call(this,tcoll,key,ks);};
G__40087.cljs$lang$maxFixedArity = 2;
G__40087.cljs$lang$applyTo = (function (arglist__40092){
var tcoll = cljs.core.first(arglist__40092);
arglist__40092 = cljs.core.next(arglist__40092);
var key = cljs.core.first(arglist__40092);
var ks = cljs.core.rest(arglist__40092);
return G__40087__delegate(tcoll,key,ks);
});
G__40087.cljs$core$IFn$_invoke$arity$variadic = G__40087__delegate;
return G__40087;
})()
;
dissoc_BANG_ = function(tcoll,key,var_args){
var ks = var_args;
switch(arguments.length){
case 2:
return dissoc_BANG___2.call(this,tcoll,key);
default:
var G__40093 = null;
if (arguments.length > 2) {
var G__40094__i = 0, G__40094__a = new Array(arguments.length -  2);
while (G__40094__i < G__40094__a.length) {G__40094__a[G__40094__i] = arguments[G__40094__i + 2]; ++G__40094__i;}
G__40093 = new cljs.core.IndexedSeq(G__40094__a,0);
}
return dissoc_BANG___3.cljs$core$IFn$_invoke$arity$variadic(tcoll,key, G__40093);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
dissoc_BANG_.cljs$lang$maxFixedArity = 2;
dissoc_BANG_.cljs$lang$applyTo = dissoc_BANG___3.cljs$lang$applyTo;
dissoc_BANG_.cljs$core$IFn$_invoke$arity$2 = dissoc_BANG___2;
dissoc_BANG_.cljs$core$IFn$_invoke$arity$variadic = dissoc_BANG___3.cljs$core$IFn$_invoke$arity$variadic;
return dissoc_BANG_;
})()
;
/**
* Removes the last item from a transient vector. If
* the collection is empty, throws an exception. Returns coll
*/
cljs.core.pop_BANG_ = (function pop_BANG_(tcoll){
return cljs.core._pop_BANG_(tcoll);
});
/**
* disj[oin]. Returns a transient set of the same (hashed/sorted) type, that
* does not contain key(s).
* @param {...*} var_args
*/
cljs.core.disj_BANG_ = (function() {
var disj_BANG_ = null;
var disj_BANG___2 = (function (tcoll,val){
return cljs.core._disjoin_BANG_(tcoll,val);
});
var disj_BANG___3 = (function() { 
var G__40095__delegate = function (tcoll,val,vals){
while(true){
var ntcoll = cljs.core._disjoin_BANG_(tcoll,val);
if(cljs.core.truth_(vals)){
var G__40096 = ntcoll;
var G__40097 = cljs.core.first(vals);
var G__40098 = cljs.core.next(vals);
tcoll = G__40096;
val = G__40097;
vals = G__40098;
continue;
} else {
return ntcoll;
}
break;
}
};
var G__40095 = function (tcoll,val,var_args){
var vals = null;
if (arguments.length > 2) {
var G__40099__i = 0, G__40099__a = new Array(arguments.length -  2);
while (G__40099__i < G__40099__a.length) {G__40099__a[G__40099__i] = arguments[G__40099__i + 2]; ++G__40099__i;}
  vals = new cljs.core.IndexedSeq(G__40099__a,0);
} 
return G__40095__delegate.call(this,tcoll,val,vals);};
G__40095.cljs$lang$maxFixedArity = 2;
G__40095.cljs$lang$applyTo = (function (arglist__40100){
var tcoll = cljs.core.first(arglist__40100);
arglist__40100 = cljs.core.next(arglist__40100);
var val = cljs.core.first(arglist__40100);
var vals = cljs.core.rest(arglist__40100);
return G__40095__delegate(tcoll,val,vals);
});
G__40095.cljs$core$IFn$_invoke$arity$variadic = G__40095__delegate;
return G__40095;
})()
;
disj_BANG_ = function(tcoll,val,var_args){
var vals = var_args;
switch(arguments.length){
case 2:
return disj_BANG___2.call(this,tcoll,val);
default:
var G__40101 = null;
if (arguments.length > 2) {
var G__40102__i = 0, G__40102__a = new Array(arguments.length -  2);
while (G__40102__i < G__40102__a.length) {G__40102__a[G__40102__i] = arguments[G__40102__i + 2]; ++G__40102__i;}
G__40101 = new cljs.core.IndexedSeq(G__40102__a,0);
}
return disj_BANG___3.cljs$core$IFn$_invoke$arity$variadic(tcoll,val, G__40101);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
disj_BANG_.cljs$lang$maxFixedArity = 2;
disj_BANG_.cljs$lang$applyTo = disj_BANG___3.cljs$lang$applyTo;
disj_BANG_.cljs$core$IFn$_invoke$arity$2 = disj_BANG___2;
disj_BANG_.cljs$core$IFn$_invoke$arity$variadic = disj_BANG___3.cljs$core$IFn$_invoke$arity$variadic;
return disj_BANG_;
})()
;

cljs.core.apply_to = (function apply_to(f,argc,args){
var args__$1 = cljs.core.seq(args);
if((argc === (0))){
return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
} else {
var a25203 = cljs.core._first(args__$1);
var args__$2 = cljs.core._rest(args__$1);
if((argc === (1))){
if(f.cljs$core$IFn$_invoke$arity$1){
return f.cljs$core$IFn$_invoke$arity$1(a25203);
} else {
var G__40313 = a25203;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__40313) : f.call(null,G__40313));
}
} else {
var b25204 = cljs.core._first(args__$2);
var args__$3 = cljs.core._rest(args__$2);
if((argc === (2))){
if(f.cljs$core$IFn$_invoke$arity$2){
return f.cljs$core$IFn$_invoke$arity$2(a25203,b25204);
} else {
var G__40314 = a25203;
var G__40315 = b25204;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__40314,G__40315) : f.call(null,G__40314,G__40315));
}
} else {
var c25205 = cljs.core._first(args__$3);
var args__$4 = cljs.core._rest(args__$3);
if((argc === (3))){
if(f.cljs$core$IFn$_invoke$arity$3){
return f.cljs$core$IFn$_invoke$arity$3(a25203,b25204,c25205);
} else {
var G__40316 = a25203;
var G__40317 = b25204;
var G__40318 = c25205;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__40316,G__40317,G__40318) : f.call(null,G__40316,G__40317,G__40318));
}
} else {
var d25206 = cljs.core._first(args__$4);
var args__$5 = cljs.core._rest(args__$4);
if((argc === (4))){
if(f.cljs$core$IFn$_invoke$arity$4){
return f.cljs$core$IFn$_invoke$arity$4(a25203,b25204,c25205,d25206);
} else {
var G__40319 = a25203;
var G__40320 = b25204;
var G__40321 = c25205;
var G__40322 = d25206;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__40319,G__40320,G__40321,G__40322) : f.call(null,G__40319,G__40320,G__40321,G__40322));
}
} else {
var e25207 = cljs.core._first(args__$5);
var args__$6 = cljs.core._rest(args__$5);
if((argc === (5))){
if(f.cljs$core$IFn$_invoke$arity$5){
return f.cljs$core$IFn$_invoke$arity$5(a25203,b25204,c25205,d25206,e25207);
} else {
var G__40323 = a25203;
var G__40324 = b25204;
var G__40325 = c25205;
var G__40326 = d25206;
var G__40327 = e25207;
return (f.cljs$core$IFn$_invoke$arity$5 ? f.cljs$core$IFn$_invoke$arity$5(G__40323,G__40324,G__40325,G__40326,G__40327) : f.call(null,G__40323,G__40324,G__40325,G__40326,G__40327));
}
} else {
var f25208 = cljs.core._first(args__$6);
var args__$7 = cljs.core._rest(args__$6);
if((argc === (6))){
if(f.cljs$core$IFn$_invoke$arity$6){
return f.cljs$core$IFn$_invoke$arity$6(a25203,b25204,c25205,d25206,e25207,f25208);
} else {
var G__40328 = a25203;
var G__40329 = b25204;
var G__40330 = c25205;
var G__40331 = d25206;
var G__40332 = e25207;
var G__40333 = f25208;
return (f.cljs$core$IFn$_invoke$arity$6 ? f.cljs$core$IFn$_invoke$arity$6(G__40328,G__40329,G__40330,G__40331,G__40332,G__40333) : f.call(null,G__40328,G__40329,G__40330,G__40331,G__40332,G__40333));
}
} else {
var g25209 = cljs.core._first(args__$7);
var args__$8 = cljs.core._rest(args__$7);
if((argc === (7))){
if(f.cljs$core$IFn$_invoke$arity$7){
return f.cljs$core$IFn$_invoke$arity$7(a25203,b25204,c25205,d25206,e25207,f25208,g25209);
} else {
var G__40334 = a25203;
var G__40335 = b25204;
var G__40336 = c25205;
var G__40337 = d25206;
var G__40338 = e25207;
var G__40339 = f25208;
var G__40340 = g25209;
return (f.cljs$core$IFn$_invoke$arity$7 ? f.cljs$core$IFn$_invoke$arity$7(G__40334,G__40335,G__40336,G__40337,G__40338,G__40339,G__40340) : f.call(null,G__40334,G__40335,G__40336,G__40337,G__40338,G__40339,G__40340));
}
} else {
var h25210 = cljs.core._first(args__$8);
var args__$9 = cljs.core._rest(args__$8);
if((argc === (8))){
if(f.cljs$core$IFn$_invoke$arity$8){
return f.cljs$core$IFn$_invoke$arity$8(a25203,b25204,c25205,d25206,e25207,f25208,g25209,h25210);
} else {
var G__40341 = a25203;
var G__40342 = b25204;
var G__40343 = c25205;
var G__40344 = d25206;
var G__40345 = e25207;
var G__40346 = f25208;
var G__40347 = g25209;
var G__40348 = h25210;
return (f.cljs$core$IFn$_invoke$arity$8 ? f.cljs$core$IFn$_invoke$arity$8(G__40341,G__40342,G__40343,G__40344,G__40345,G__40346,G__40347,G__40348) : f.call(null,G__40341,G__40342,G__40343,G__40344,G__40345,G__40346,G__40347,G__40348));
}
} else {
var i25211 = cljs.core._first(args__$9);
var args__$10 = cljs.core._rest(args__$9);
if((argc === (9))){
if(f.cljs$core$IFn$_invoke$arity$9){
return f.cljs$core$IFn$_invoke$arity$9(a25203,b25204,c25205,d25206,e25207,f25208,g25209,h25210,i25211);
} else {
var G__40349 = a25203;
var G__40350 = b25204;
var G__40351 = c25205;
var G__40352 = d25206;
var G__40353 = e25207;
var G__40354 = f25208;
var G__40355 = g25209;
var G__40356 = h25210;
var G__40357 = i25211;
return (f.cljs$core$IFn$_invoke$arity$9 ? f.cljs$core$IFn$_invoke$arity$9(G__40349,G__40350,G__40351,G__40352,G__40353,G__40354,G__40355,G__40356,G__40357) : f.call(null,G__40349,G__40350,G__40351,G__40352,G__40353,G__40354,G__40355,G__40356,G__40357));
}
} else {
var j25212 = cljs.core._first(args__$10);
var args__$11 = cljs.core._rest(args__$10);
if((argc === (10))){
if(f.cljs$core$IFn$_invoke$arity$10){
return f.cljs$core$IFn$_invoke$arity$10(a25203,b25204,c25205,d25206,e25207,f25208,g25209,h25210,i25211,j25212);
} else {
var G__40358 = a25203;
var G__40359 = b25204;
var G__40360 = c25205;
var G__40361 = d25206;
var G__40362 = e25207;
var G__40363 = f25208;
var G__40364 = g25209;
var G__40365 = h25210;
var G__40366 = i25211;
var G__40367 = j25212;
return (f.cljs$core$IFn$_invoke$arity$10 ? f.cljs$core$IFn$_invoke$arity$10(G__40358,G__40359,G__40360,G__40361,G__40362,G__40363,G__40364,G__40365,G__40366,G__40367) : f.call(null,G__40358,G__40359,G__40360,G__40361,G__40362,G__40363,G__40364,G__40365,G__40366,G__40367));
}
} else {
var k25213 = cljs.core._first(args__$11);
var args__$12 = cljs.core._rest(args__$11);
if((argc === (11))){
if(f.cljs$core$IFn$_invoke$arity$11){
return f.cljs$core$IFn$_invoke$arity$11(a25203,b25204,c25205,d25206,e25207,f25208,g25209,h25210,i25211,j25212,k25213);
} else {
var G__40368 = a25203;
var G__40369 = b25204;
var G__40370 = c25205;
var G__40371 = d25206;
var G__40372 = e25207;
var G__40373 = f25208;
var G__40374 = g25209;
var G__40375 = h25210;
var G__40376 = i25211;
var G__40377 = j25212;
var G__40378 = k25213;
return (f.cljs$core$IFn$_invoke$arity$11 ? f.cljs$core$IFn$_invoke$arity$11(G__40368,G__40369,G__40370,G__40371,G__40372,G__40373,G__40374,G__40375,G__40376,G__40377,G__40378) : f.call(null,G__40368,G__40369,G__40370,G__40371,G__40372,G__40373,G__40374,G__40375,G__40376,G__40377,G__40378));
}
} else {
var l25214 = cljs.core._first(args__$12);
var args__$13 = cljs.core._rest(args__$12);
if((argc === (12))){
if(f.cljs$core$IFn$_invoke$arity$12){
return f.cljs$core$IFn$_invoke$arity$12(a25203,b25204,c25205,d25206,e25207,f25208,g25209,h25210,i25211,j25212,k25213,l25214);
} else {
var G__40379 = a25203;
var G__40380 = b25204;
var G__40381 = c25205;
var G__40382 = d25206;
var G__40383 = e25207;
var G__40384 = f25208;
var G__40385 = g25209;
var G__40386 = h25210;
var G__40387 = i25211;
var G__40388 = j25212;
var G__40389 = k25213;
var G__40390 = l25214;
return (f.cljs$core$IFn$_invoke$arity$12 ? f.cljs$core$IFn$_invoke$arity$12(G__40379,G__40380,G__40381,G__40382,G__40383,G__40384,G__40385,G__40386,G__40387,G__40388,G__40389,G__40390) : f.call(null,G__40379,G__40380,G__40381,G__40382,G__40383,G__40384,G__40385,G__40386,G__40387,G__40388,G__40389,G__40390));
}
} else {
var m25215 = cljs.core._first(args__$13);
var args__$14 = cljs.core._rest(args__$13);
if((argc === (13))){
if(f.cljs$core$IFn$_invoke$arity$13){
return f.cljs$core$IFn$_invoke$arity$13(a25203,b25204,c25205,d25206,e25207,f25208,g25209,h25210,i25211,j25212,k25213,l25214,m25215);
} else {
var G__40391 = a25203;
var G__40392 = b25204;
var G__40393 = c25205;
var G__40394 = d25206;
var G__40395 = e25207;
var G__40396 = f25208;
var G__40397 = g25209;
var G__40398 = h25210;
var G__40399 = i25211;
var G__40400 = j25212;
var G__40401 = k25213;
var G__40402 = l25214;
var G__40403 = m25215;
return (f.cljs$core$IFn$_invoke$arity$13 ? f.cljs$core$IFn$_invoke$arity$13(G__40391,G__40392,G__40393,G__40394,G__40395,G__40396,G__40397,G__40398,G__40399,G__40400,G__40401,G__40402,G__40403) : f.call(null,G__40391,G__40392,G__40393,G__40394,G__40395,G__40396,G__40397,G__40398,G__40399,G__40400,G__40401,G__40402,G__40403));
}
} else {
var n25216 = cljs.core._first(args__$14);
var args__$15 = cljs.core._rest(args__$14);
if((argc === (14))){
if(f.cljs$core$IFn$_invoke$arity$14){
return f.cljs$core$IFn$_invoke$arity$14(a25203,b25204,c25205,d25206,e25207,f25208,g25209,h25210,i25211,j25212,k25213,l25214,m25215,n25216);
} else {
var G__40404 = a25203;
var G__40405 = b25204;
var G__40406 = c25205;
var G__40407 = d25206;
var G__40408 = e25207;
var G__40409 = f25208;
var G__40410 = g25209;
var G__40411 = h25210;
var G__40412 = i25211;
var G__40413 = j25212;
var G__40414 = k25213;
var G__40415 = l25214;
var G__40416 = m25215;
var G__40417 = n25216;
return (f.cljs$core$IFn$_invoke$arity$14 ? f.cljs$core$IFn$_invoke$arity$14(G__40404,G__40405,G__40406,G__40407,G__40408,G__40409,G__40410,G__40411,G__40412,G__40413,G__40414,G__40415,G__40416,G__40417) : f.call(null,G__40404,G__40405,G__40406,G__40407,G__40408,G__40409,G__40410,G__40411,G__40412,G__40413,G__40414,G__40415,G__40416,G__40417));
}
} else {
var o25217 = cljs.core._first(args__$15);
var args__$16 = cljs.core._rest(args__$15);
if((argc === (15))){
if(f.cljs$core$IFn$_invoke$arity$15){
return f.cljs$core$IFn$_invoke$arity$15(a25203,b25204,c25205,d25206,e25207,f25208,g25209,h25210,i25211,j25212,k25213,l25214,m25215,n25216,o25217);
} else {
var G__40418 = a25203;
var G__40419 = b25204;
var G__40420 = c25205;
var G__40421 = d25206;
var G__40422 = e25207;
var G__40423 = f25208;
var G__40424 = g25209;
var G__40425 = h25210;
var G__40426 = i25211;
var G__40427 = j25212;
var G__40428 = k25213;
var G__40429 = l25214;
var G__40430 = m25215;
var G__40431 = n25216;
var G__40432 = o25217;
return (f.cljs$core$IFn$_invoke$arity$15 ? f.cljs$core$IFn$_invoke$arity$15(G__40418,G__40419,G__40420,G__40421,G__40422,G__40423,G__40424,G__40425,G__40426,G__40427,G__40428,G__40429,G__40430,G__40431,G__40432) : f.call(null,G__40418,G__40419,G__40420,G__40421,G__40422,G__40423,G__40424,G__40425,G__40426,G__40427,G__40428,G__40429,G__40430,G__40431,G__40432));
}
} else {
var p25218 = cljs.core._first(args__$16);
var args__$17 = cljs.core._rest(args__$16);
if((argc === (16))){
if(f.cljs$core$IFn$_invoke$arity$16){
return f.cljs$core$IFn$_invoke$arity$16(a25203,b25204,c25205,d25206,e25207,f25208,g25209,h25210,i25211,j25212,k25213,l25214,m25215,n25216,o25217,p25218);
} else {
var G__40433 = a25203;
var G__40434 = b25204;
var G__40435 = c25205;
var G__40436 = d25206;
var G__40437 = e25207;
var G__40438 = f25208;
var G__40439 = g25209;
var G__40440 = h25210;
var G__40441 = i25211;
var G__40442 = j25212;
var G__40443 = k25213;
var G__40444 = l25214;
var G__40445 = m25215;
var G__40446 = n25216;
var G__40447 = o25217;
var G__40448 = p25218;
return (f.cljs$core$IFn$_invoke$arity$16 ? f.cljs$core$IFn$_invoke$arity$16(G__40433,G__40434,G__40435,G__40436,G__40437,G__40438,G__40439,G__40440,G__40441,G__40442,G__40443,G__40444,G__40445,G__40446,G__40447,G__40448) : f.call(null,G__40433,G__40434,G__40435,G__40436,G__40437,G__40438,G__40439,G__40440,G__40441,G__40442,G__40443,G__40444,G__40445,G__40446,G__40447,G__40448));
}
} else {
var q25219 = cljs.core._first(args__$17);
var args__$18 = cljs.core._rest(args__$17);
if((argc === (17))){
if(f.cljs$core$IFn$_invoke$arity$17){
return f.cljs$core$IFn$_invoke$arity$17(a25203,b25204,c25205,d25206,e25207,f25208,g25209,h25210,i25211,j25212,k25213,l25214,m25215,n25216,o25217,p25218,q25219);
} else {
var G__40449 = a25203;
var G__40450 = b25204;
var G__40451 = c25205;
var G__40452 = d25206;
var G__40453 = e25207;
var G__40454 = f25208;
var G__40455 = g25209;
var G__40456 = h25210;
var G__40457 = i25211;
var G__40458 = j25212;
var G__40459 = k25213;
var G__40460 = l25214;
var G__40461 = m25215;
var G__40462 = n25216;
var G__40463 = o25217;
var G__40464 = p25218;
var G__40465 = q25219;
return (f.cljs$core$IFn$_invoke$arity$17 ? f.cljs$core$IFn$_invoke$arity$17(G__40449,G__40450,G__40451,G__40452,G__40453,G__40454,G__40455,G__40456,G__40457,G__40458,G__40459,G__40460,G__40461,G__40462,G__40463,G__40464,G__40465) : f.call(null,G__40449,G__40450,G__40451,G__40452,G__40453,G__40454,G__40455,G__40456,G__40457,G__40458,G__40459,G__40460,G__40461,G__40462,G__40463,G__40464,G__40465));
}
} else {
var r25220 = cljs.core._first(args__$18);
var args__$19 = cljs.core._rest(args__$18);
if((argc === (18))){
if(f.cljs$core$IFn$_invoke$arity$18){
return f.cljs$core$IFn$_invoke$arity$18(a25203,b25204,c25205,d25206,e25207,f25208,g25209,h25210,i25211,j25212,k25213,l25214,m25215,n25216,o25217,p25218,q25219,r25220);
} else {
var G__40466 = a25203;
var G__40467 = b25204;
var G__40468 = c25205;
var G__40469 = d25206;
var G__40470 = e25207;
var G__40471 = f25208;
var G__40472 = g25209;
var G__40473 = h25210;
var G__40474 = i25211;
var G__40475 = j25212;
var G__40476 = k25213;
var G__40477 = l25214;
var G__40478 = m25215;
var G__40479 = n25216;
var G__40480 = o25217;
var G__40481 = p25218;
var G__40482 = q25219;
var G__40483 = r25220;
return (f.cljs$core$IFn$_invoke$arity$18 ? f.cljs$core$IFn$_invoke$arity$18(G__40466,G__40467,G__40468,G__40469,G__40470,G__40471,G__40472,G__40473,G__40474,G__40475,G__40476,G__40477,G__40478,G__40479,G__40480,G__40481,G__40482,G__40483) : f.call(null,G__40466,G__40467,G__40468,G__40469,G__40470,G__40471,G__40472,G__40473,G__40474,G__40475,G__40476,G__40477,G__40478,G__40479,G__40480,G__40481,G__40482,G__40483));
}
} else {
var s25221 = cljs.core._first(args__$19);
var args__$20 = cljs.core._rest(args__$19);
if((argc === (19))){
if(f.cljs$core$IFn$_invoke$arity$19){
return f.cljs$core$IFn$_invoke$arity$19(a25203,b25204,c25205,d25206,e25207,f25208,g25209,h25210,i25211,j25212,k25213,l25214,m25215,n25216,o25217,p25218,q25219,r25220,s25221);
} else {
var G__40484 = a25203;
var G__40485 = b25204;
var G__40486 = c25205;
var G__40487 = d25206;
var G__40488 = e25207;
var G__40489 = f25208;
var G__40490 = g25209;
var G__40491 = h25210;
var G__40492 = i25211;
var G__40493 = j25212;
var G__40494 = k25213;
var G__40495 = l25214;
var G__40496 = m25215;
var G__40497 = n25216;
var G__40498 = o25217;
var G__40499 = p25218;
var G__40500 = q25219;
var G__40501 = r25220;
var G__40502 = s25221;
return (f.cljs$core$IFn$_invoke$arity$19 ? f.cljs$core$IFn$_invoke$arity$19(G__40484,G__40485,G__40486,G__40487,G__40488,G__40489,G__40490,G__40491,G__40492,G__40493,G__40494,G__40495,G__40496,G__40497,G__40498,G__40499,G__40500,G__40501,G__40502) : f.call(null,G__40484,G__40485,G__40486,G__40487,G__40488,G__40489,G__40490,G__40491,G__40492,G__40493,G__40494,G__40495,G__40496,G__40497,G__40498,G__40499,G__40500,G__40501,G__40502));
}
} else {
var t25222 = cljs.core._first(args__$20);
var args__$21 = cljs.core._rest(args__$20);
if((argc === (20))){
if(f.cljs$core$IFn$_invoke$arity$20){
return f.cljs$core$IFn$_invoke$arity$20(a25203,b25204,c25205,d25206,e25207,f25208,g25209,h25210,i25211,j25212,k25213,l25214,m25215,n25216,o25217,p25218,q25219,r25220,s25221,t25222);
} else {
var G__40503 = a25203;
var G__40504 = b25204;
var G__40505 = c25205;
var G__40506 = d25206;
var G__40507 = e25207;
var G__40508 = f25208;
var G__40509 = g25209;
var G__40510 = h25210;
var G__40511 = i25211;
var G__40512 = j25212;
var G__40513 = k25213;
var G__40514 = l25214;
var G__40515 = m25215;
var G__40516 = n25216;
var G__40517 = o25217;
var G__40518 = p25218;
var G__40519 = q25219;
var G__40520 = r25220;
var G__40521 = s25221;
var G__40522 = t25222;
return (f.cljs$core$IFn$_invoke$arity$20 ? f.cljs$core$IFn$_invoke$arity$20(G__40503,G__40504,G__40505,G__40506,G__40507,G__40508,G__40509,G__40510,G__40511,G__40512,G__40513,G__40514,G__40515,G__40516,G__40517,G__40518,G__40519,G__40520,G__40521,G__40522) : f.call(null,G__40503,G__40504,G__40505,G__40506,G__40507,G__40508,G__40509,G__40510,G__40511,G__40512,G__40513,G__40514,G__40515,G__40516,G__40517,G__40518,G__40519,G__40520,G__40521,G__40522));
}
} else {
throw (new Error("Only up to 20 arguments supported on functions"));
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
});

/**
* Applies fn f to the argument list formed by prepending intervening arguments to args.
* First cut.  Not lazy.  Needs to use emitted toApply.
* @param {...*} var_args
*/
cljs.core.apply = (function() {
var apply = null;
var apply__2 = (function (f,args){
var fixed_arity = f.cljs$lang$maxFixedArity;
if(f.cljs$lang$applyTo){
var bc = cljs.core.bounded_count(args,(fixed_arity + (1)));
if((bc <= fixed_arity)){
return cljs.core.apply_to(f,bc,args);
} else {
return f.cljs$lang$applyTo(args);
}
} else {
return f.apply(f,cljs.core.to_array(args));
}
});
var apply__3 = (function (f,x,args){
var arglist = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$2(x,args);
var fixed_arity = f.cljs$lang$maxFixedArity;
if(f.cljs$lang$applyTo){
var bc = cljs.core.bounded_count(arglist,(fixed_arity + (1)));
if((bc <= fixed_arity)){
return cljs.core.apply_to(f,bc,arglist);
} else {
return f.cljs$lang$applyTo(arglist);
}
} else {
return f.apply(f,cljs.core.to_array(arglist));
}
});
var apply__4 = (function (f,x,y,args){
var arglist = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$3(x,y,args);
var fixed_arity = f.cljs$lang$maxFixedArity;
if(f.cljs$lang$applyTo){
var bc = cljs.core.bounded_count(arglist,(fixed_arity + (1)));
if((bc <= fixed_arity)){
return cljs.core.apply_to(f,bc,arglist);
} else {
return f.cljs$lang$applyTo(arglist);
}
} else {
return f.apply(f,cljs.core.to_array(arglist));
}
});
var apply__5 = (function (f,x,y,z,args){
var arglist = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(x,y,z,args);
var fixed_arity = f.cljs$lang$maxFixedArity;
if(f.cljs$lang$applyTo){
var bc = cljs.core.bounded_count(arglist,(fixed_arity + (1)));
if((bc <= fixed_arity)){
return cljs.core.apply_to(f,bc,arglist);
} else {
return f.cljs$lang$applyTo(arglist);
}
} else {
return f.apply(f,cljs.core.to_array(arglist));
}
});
var apply__6 = (function() { 
var G__40523__delegate = function (f,a,b,c,d,args){
var arglist = cljs.core.cons(a,cljs.core.cons(b,cljs.core.cons(c,cljs.core.cons(d,cljs.core.spread(args)))));
var fixed_arity = f.cljs$lang$maxFixedArity;
if(f.cljs$lang$applyTo){
var bc = cljs.core.bounded_count(arglist,(fixed_arity + (1)));
if((bc <= fixed_arity)){
return cljs.core.apply_to(f,bc,arglist);
} else {
return f.cljs$lang$applyTo(arglist);
}
} else {
return f.apply(f,cljs.core.to_array(arglist));
}
};
var G__40523 = function (f,a,b,c,d,var_args){
var args = null;
if (arguments.length > 5) {
var G__40524__i = 0, G__40524__a = new Array(arguments.length -  5);
while (G__40524__i < G__40524__a.length) {G__40524__a[G__40524__i] = arguments[G__40524__i + 5]; ++G__40524__i;}
  args = new cljs.core.IndexedSeq(G__40524__a,0);
} 
return G__40523__delegate.call(this,f,a,b,c,d,args);};
G__40523.cljs$lang$maxFixedArity = 5;
G__40523.cljs$lang$applyTo = (function (arglist__40525){
var f = cljs.core.first(arglist__40525);
arglist__40525 = cljs.core.next(arglist__40525);
var a = cljs.core.first(arglist__40525);
arglist__40525 = cljs.core.next(arglist__40525);
var b = cljs.core.first(arglist__40525);
arglist__40525 = cljs.core.next(arglist__40525);
var c = cljs.core.first(arglist__40525);
arglist__40525 = cljs.core.next(arglist__40525);
var d = cljs.core.first(arglist__40525);
var args = cljs.core.rest(arglist__40525);
return G__40523__delegate(f,a,b,c,d,args);
});
G__40523.cljs$core$IFn$_invoke$arity$variadic = G__40523__delegate;
return G__40523;
})()
;
apply = function(f,a,b,c,d,var_args){
var args = var_args;
switch(arguments.length){
case 2:
return apply__2.call(this,f,a);
case 3:
return apply__3.call(this,f,a,b);
case 4:
return apply__4.call(this,f,a,b,c);
case 5:
return apply__5.call(this,f,a,b,c,d);
default:
var G__40526 = null;
if (arguments.length > 5) {
var G__40527__i = 0, G__40527__a = new Array(arguments.length -  5);
while (G__40527__i < G__40527__a.length) {G__40527__a[G__40527__i] = arguments[G__40527__i + 5]; ++G__40527__i;}
G__40526 = new cljs.core.IndexedSeq(G__40527__a,0);
}
return apply__6.cljs$core$IFn$_invoke$arity$variadic(f,a,b,c,d, G__40526);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
apply.cljs$lang$maxFixedArity = 5;
apply.cljs$lang$applyTo = apply__6.cljs$lang$applyTo;
apply.cljs$core$IFn$_invoke$arity$2 = apply__2;
apply.cljs$core$IFn$_invoke$arity$3 = apply__3;
apply.cljs$core$IFn$_invoke$arity$4 = apply__4;
apply.cljs$core$IFn$_invoke$arity$5 = apply__5;
apply.cljs$core$IFn$_invoke$arity$variadic = apply__6.cljs$core$IFn$_invoke$arity$variadic;
return apply;
})()
;
/**
* Returns an object of the same type and value as obj, with
* (apply f (meta obj) args) as its metadata.
* @param {...*} var_args
*/
cljs.core.vary_meta = (function() {
var vary_meta = null;
var vary_meta__2 = (function (obj,f){
return cljs.core.with_meta(obj,(function (){var G__40543 = cljs.core.meta(obj);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__40543) : f.call(null,G__40543));
})());
});
var vary_meta__3 = (function (obj,f,a){
return cljs.core.with_meta(obj,(function (){var G__40544 = cljs.core.meta(obj);
var G__40545 = a;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__40544,G__40545) : f.call(null,G__40544,G__40545));
})());
});
var vary_meta__4 = (function (obj,f,a,b){
return cljs.core.with_meta(obj,(function (){var G__40546 = cljs.core.meta(obj);
var G__40547 = a;
var G__40548 = b;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__40546,G__40547,G__40548) : f.call(null,G__40546,G__40547,G__40548));
})());
});
var vary_meta__5 = (function (obj,f,a,b,c){
return cljs.core.with_meta(obj,(function (){var G__40549 = cljs.core.meta(obj);
var G__40550 = a;
var G__40551 = b;
var G__40552 = c;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__40549,G__40550,G__40551,G__40552) : f.call(null,G__40549,G__40550,G__40551,G__40552));
})());
});
var vary_meta__6 = (function (obj,f,a,b,c,d){
return cljs.core.with_meta(obj,(function (){var G__40553 = cljs.core.meta(obj);
var G__40554 = a;
var G__40555 = b;
var G__40556 = c;
var G__40557 = d;
return (f.cljs$core$IFn$_invoke$arity$5 ? f.cljs$core$IFn$_invoke$arity$5(G__40553,G__40554,G__40555,G__40556,G__40557) : f.call(null,G__40553,G__40554,G__40555,G__40556,G__40557));
})());
});
var vary_meta__7 = (function() { 
var G__40558__delegate = function (obj,f,a,b,c,d,args){
return cljs.core.with_meta(obj,cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f,cljs.core.meta(obj),a,b,c,cljs.core.array_seq([d,args], 0)));
};
var G__40558 = function (obj,f,a,b,c,d,var_args){
var args = null;
if (arguments.length > 6) {
var G__40559__i = 0, G__40559__a = new Array(arguments.length -  6);
while (G__40559__i < G__40559__a.length) {G__40559__a[G__40559__i] = arguments[G__40559__i + 6]; ++G__40559__i;}
  args = new cljs.core.IndexedSeq(G__40559__a,0);
} 
return G__40558__delegate.call(this,obj,f,a,b,c,d,args);};
G__40558.cljs$lang$maxFixedArity = 6;
G__40558.cljs$lang$applyTo = (function (arglist__40560){
var obj = cljs.core.first(arglist__40560);
arglist__40560 = cljs.core.next(arglist__40560);
var f = cljs.core.first(arglist__40560);
arglist__40560 = cljs.core.next(arglist__40560);
var a = cljs.core.first(arglist__40560);
arglist__40560 = cljs.core.next(arglist__40560);
var b = cljs.core.first(arglist__40560);
arglist__40560 = cljs.core.next(arglist__40560);
var c = cljs.core.first(arglist__40560);
arglist__40560 = cljs.core.next(arglist__40560);
var d = cljs.core.first(arglist__40560);
var args = cljs.core.rest(arglist__40560);
return G__40558__delegate(obj,f,a,b,c,d,args);
});
G__40558.cljs$core$IFn$_invoke$arity$variadic = G__40558__delegate;
return G__40558;
})()
;
vary_meta = function(obj,f,a,b,c,d,var_args){
var args = var_args;
switch(arguments.length){
case 2:
return vary_meta__2.call(this,obj,f);
case 3:
return vary_meta__3.call(this,obj,f,a);
case 4:
return vary_meta__4.call(this,obj,f,a,b);
case 5:
return vary_meta__5.call(this,obj,f,a,b,c);
case 6:
return vary_meta__6.call(this,obj,f,a,b,c,d);
default:
var G__40561 = null;
if (arguments.length > 6) {
var G__40562__i = 0, G__40562__a = new Array(arguments.length -  6);
while (G__40562__i < G__40562__a.length) {G__40562__a[G__40562__i] = arguments[G__40562__i + 6]; ++G__40562__i;}
G__40561 = new cljs.core.IndexedSeq(G__40562__a,0);
}
return vary_meta__7.cljs$core$IFn$_invoke$arity$variadic(obj,f,a,b,c,d, G__40561);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
vary_meta.cljs$lang$maxFixedArity = 6;
vary_meta.cljs$lang$applyTo = vary_meta__7.cljs$lang$applyTo;
vary_meta.cljs$core$IFn$_invoke$arity$2 = vary_meta__2;
vary_meta.cljs$core$IFn$_invoke$arity$3 = vary_meta__3;
vary_meta.cljs$core$IFn$_invoke$arity$4 = vary_meta__4;
vary_meta.cljs$core$IFn$_invoke$arity$5 = vary_meta__5;
vary_meta.cljs$core$IFn$_invoke$arity$6 = vary_meta__6;
vary_meta.cljs$core$IFn$_invoke$arity$variadic = vary_meta__7.cljs$core$IFn$_invoke$arity$variadic;
return vary_meta;
})()
;
/**
* Same as (not (= obj1 obj2))
* @param {...*} var_args
*/
cljs.core.not_EQ_ = (function() {
var not_EQ_ = null;
var not_EQ___1 = (function (x){
return false;
});
var not_EQ___2 = (function (x,y){
return !(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x,y));
});
var not_EQ___3 = (function() { 
var G__40563__delegate = function (x,y,more){
return cljs.core.not(cljs.core.apply.cljs$core$IFn$_invoke$arity$4(cljs.core._EQ_,x,y,more));
};
var G__40563 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__40564__i = 0, G__40564__a = new Array(arguments.length -  2);
while (G__40564__i < G__40564__a.length) {G__40564__a[G__40564__i] = arguments[G__40564__i + 2]; ++G__40564__i;}
  more = new cljs.core.IndexedSeq(G__40564__a,0);
} 
return G__40563__delegate.call(this,x,y,more);};
G__40563.cljs$lang$maxFixedArity = 2;
G__40563.cljs$lang$applyTo = (function (arglist__40565){
var x = cljs.core.first(arglist__40565);
arglist__40565 = cljs.core.next(arglist__40565);
var y = cljs.core.first(arglist__40565);
var more = cljs.core.rest(arglist__40565);
return G__40563__delegate(x,y,more);
});
G__40563.cljs$core$IFn$_invoke$arity$variadic = G__40563__delegate;
return G__40563;
})()
;
not_EQ_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return not_EQ___1.call(this,x);
case 2:
return not_EQ___2.call(this,x,y);
default:
var G__40566 = null;
if (arguments.length > 2) {
var G__40567__i = 0, G__40567__a = new Array(arguments.length -  2);
while (G__40567__i < G__40567__a.length) {G__40567__a[G__40567__i] = arguments[G__40567__i + 2]; ++G__40567__i;}
G__40566 = new cljs.core.IndexedSeq(G__40567__a,0);
}
return not_EQ___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__40566);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
not_EQ_.cljs$lang$maxFixedArity = 2;
not_EQ_.cljs$lang$applyTo = not_EQ___3.cljs$lang$applyTo;
not_EQ_.cljs$core$IFn$_invoke$arity$1 = not_EQ___1;
not_EQ_.cljs$core$IFn$_invoke$arity$2 = not_EQ___2;
not_EQ_.cljs$core$IFn$_invoke$arity$variadic = not_EQ___3.cljs$core$IFn$_invoke$arity$variadic;
return not_EQ_;
})()
;
/**
* If coll is empty, returns nil, else coll
*/
cljs.core.not_empty = (function not_empty(coll){
if(cljs.core.seq(coll)){
return coll;
} else {
return null;
}
});
cljs.core.nil_iter = (function nil_iter(){
if(typeof cljs.core.t40571 !== 'undefined'){
} else {

/**
* @constructor
*/
cljs.core.t40571 = (function (nil_iter,meta40572){
this.nil_iter = nil_iter;
this.meta40572 = meta40572;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 393216;
})
cljs.core.t40571.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
return false;
});

cljs.core.t40571.prototype.next = (function (){
var self__ = this;
var _ = this;
return (new Error("No such element"));
});

cljs.core.t40571.prototype.remove = (function (){
var self__ = this;
var _ = this;
return (new Error("Unsupported operation"));
});

cljs.core.t40571.prototype.cljs$core$IMeta$_meta$arity$1 = (function (_40573){
var self__ = this;
var _40573__$1 = this;
return self__.meta40572;
});

cljs.core.t40571.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (_40573,meta40572__$1){
var self__ = this;
var _40573__$1 = this;
return (new cljs.core.t40571(self__.nil_iter,meta40572__$1));
});

cljs.core.t40571.cljs$lang$type = true;

cljs.core.t40571.cljs$lang$ctorStr = "cljs.core/t40571";

cljs.core.t40571.cljs$lang$ctorPrWriter = (function (this__24859__auto__,writer__24860__auto__,opt__24861__auto__){
return cljs.core._write(writer__24860__auto__,"cljs.core/t40571");
});

cljs.core.__GT_t40571 = (function __GT_t40571(nil_iter__$1,meta40572){
return (new cljs.core.t40571(nil_iter__$1,meta40572));
});

}

return (new cljs.core.t40571(nil_iter,new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null,"end-column","end-column",1425389514),54,new cljs.core.Keyword(null,"end-line","end-line",1837326455),2998,new cljs.core.Keyword(null,"column","column",2078222095),3,new cljs.core.Keyword(null,"line","line",212345235),2994,new cljs.core.Keyword(null,"file","file",-1269645878),"/home/callum/projects/closso/.repl/5133/cljs/core.cljs"], null)));
});

/**
* @constructor
*/
cljs.core.StringIter = (function (s,i){
this.s = s;
this.i = i;
})
cljs.core.StringIter.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
return (self__.i < self__.s.length);
});

cljs.core.StringIter.prototype.next = (function (){
var self__ = this;
var _ = this;
var ret = self__.s.charAt(self__.i);
self__.i = (self__.i + (1));

return ret;
});

cljs.core.StringIter.prototype.remove = (function (){
var self__ = this;
var _ = this;
return (new Error("Unsupported operation"));
});

cljs.core.StringIter.cljs$lang$type = true;

cljs.core.StringIter.cljs$lang$ctorStr = "cljs.core/StringIter";

cljs.core.StringIter.cljs$lang$ctorPrWriter = (function (this__24859__auto__,writer__24860__auto__,opt__24861__auto__){
return cljs.core._write(writer__24860__auto__,"cljs.core/StringIter");
});

cljs.core.__GT_StringIter = (function __GT_StringIter(s,i){
return (new cljs.core.StringIter(s,i));
});

cljs.core.string_iter = (function string_iter(x){
return (new cljs.core.StringIter(x,(0)));
});

/**
* @constructor
*/
cljs.core.ArrayIter = (function (arr,i){
this.arr = arr;
this.i = i;
})
cljs.core.ArrayIter.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
return (self__.i < self__.arr.length);
});

cljs.core.ArrayIter.prototype.next = (function (){
var self__ = this;
var _ = this;
var ret = (self__.arr[self__.i]);
self__.i = (self__.i + (1));

return ret;
});

cljs.core.ArrayIter.prototype.remove = (function (){
var self__ = this;
var _ = this;
return (new Error("Unsupported operation"));
});

cljs.core.ArrayIter.cljs$lang$type = true;

cljs.core.ArrayIter.cljs$lang$ctorStr = "cljs.core/ArrayIter";

cljs.core.ArrayIter.cljs$lang$ctorPrWriter = (function (this__24859__auto__,writer__24860__auto__,opt__24861__auto__){
return cljs.core._write(writer__24860__auto__,"cljs.core/ArrayIter");
});

cljs.core.__GT_ArrayIter = (function __GT_ArrayIter(arr,i){
return (new cljs.core.ArrayIter(arr,i));
});

cljs.core.array_iter = (function array_iter(x){
return (new cljs.core.ArrayIter(x,(0)));
});
cljs.core.INIT = {};
cljs.core.START = {};

/**
* @constructor
*/
cljs.core.SeqIter = (function (_seq,_next){
this._seq = _seq;
this._next = _next;
})
cljs.core.SeqIter.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
if((self__._seq === cljs.core.INIT)){
self__._seq = cljs.core.START;

self__._next = cljs.core.seq(self__._next);
} else {
if((self__._seq === self__._next)){
self__._next = cljs.core.next(self__._seq);
} else {
}
}

return !((self__._next == null));
});

cljs.core.SeqIter.prototype.next = (function (){
var self__ = this;
var this$ = this;
if(cljs.core.not(this$.hasNext())){
throw (new Error("No such element"));
} else {
self__._seq = self__._next;

return cljs.core.first(self__._next);
}
});

cljs.core.SeqIter.prototype.remove = (function (){
var self__ = this;
var _ = this;
return (new Error("Unsupported operation"));
});

cljs.core.SeqIter.cljs$lang$type = true;

cljs.core.SeqIter.cljs$lang$ctorStr = "cljs.core/SeqIter";

cljs.core.SeqIter.cljs$lang$ctorPrWriter = (function (this__24859__auto__,writer__24860__auto__,opt__24861__auto__){
return cljs.core._write(writer__24860__auto__,"cljs.core/SeqIter");
});

cljs.core.__GT_SeqIter = (function __GT_SeqIter(_seq,_next){
return (new cljs.core.SeqIter(_seq,_next));
});

cljs.core.seq_iter = (function seq_iter(coll){
return (new cljs.core.SeqIter(cljs.core.INIT,coll));
});
cljs.core.iter = (function iter(coll){
if((coll == null)){
return cljs.core.nil_iter();
} else {
if(typeof coll === 'string'){
return cljs.core.string_iter(coll);
} else {
if(coll instanceof Array){
return cljs.core.array_iter(coll);
} else {
if(cljs.core.iterable_QMARK_(coll)){
return cljs.core._iterator(coll);
} else {
if(cljs.core.seqable_QMARK_(coll)){
return cljs.core.seq_iter(coll);
} else {
throw (new Error([cljs.core.str("Cannot create iterator from "),cljs.core.str(coll)].join('')));

}
}
}
}
}
});
cljs.core.lazy_transformer = (function lazy_transformer(stepper){
return (new cljs.core.LazyTransformer(stepper,null,null,null));
});

/**
* @constructor
*/
cljs.core.Stepper = (function (xform,iter){
this.xform = xform;
this.iter = iter;
})
cljs.core.Stepper.prototype.step = (function (lt){
var self__ = this;
var this$ = this;
while(true){
if(cljs.core.truth_((function (){var and__24260__auto__ = !((lt.stepper == null));
if(and__24260__auto__){
return self__.iter.hasNext();
} else {
return and__24260__auto__;
}
})())){
if(cljs.core.reduced_QMARK_((function (){var G__40574 = lt;
var G__40575 = self__.iter.next();
return (self__.xform.cljs$core$IFn$_invoke$arity$2 ? self__.xform.cljs$core$IFn$_invoke$arity$2(G__40574,G__40575) : self__.xform.call(null,G__40574,G__40575));
})())){
if((lt.rest == null)){
} else {
lt.rest.stepper = null;
}
} else {
continue;
}
} else {
}
break;
}

if((lt.stepper == null)){
return null;
} else {
var G__40576 = lt;
return (self__.xform.cljs$core$IFn$_invoke$arity$1 ? self__.xform.cljs$core$IFn$_invoke$arity$1(G__40576) : self__.xform.call(null,G__40576));
}
});

cljs.core.Stepper.cljs$lang$type = true;

cljs.core.Stepper.cljs$lang$ctorStr = "cljs.core/Stepper";

cljs.core.Stepper.cljs$lang$ctorPrWriter = (function (this__24859__auto__,writer__24860__auto__,opt__24861__auto__){
return cljs.core._write(writer__24860__auto__,"cljs.core/Stepper");
});

cljs.core.__GT_Stepper = (function __GT_Stepper(xform,iter){
return (new cljs.core.Stepper(xform,iter));
});

cljs.core.stepper = (function stepper(xform,iter){
var stepfn = (function() {
var stepfn = null;
var stepfn__1 = (function (result){
var lt = ((cljs.core.reduced_QMARK_(result))?cljs.core.deref(result):result);
lt.stepper = null;

return result;
});
var stepfn__2 = (function (result,input){
var lt = result;
lt.first = input;

lt.rest = cljs.core.lazy_transformer(lt.stepper);

lt.stepper = null;

return lt.rest;
});
stepfn = function(result,input){
switch(arguments.length){
case 1:
return stepfn__1.call(this,result);
case 2:
return stepfn__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
stepfn.cljs$core$IFn$_invoke$arity$1 = stepfn__1;
stepfn.cljs$core$IFn$_invoke$arity$2 = stepfn__2;
return stepfn;
})()
;
return (new cljs.core.Stepper((function (){var G__40578 = stepfn;
return (xform.cljs$core$IFn$_invoke$arity$1 ? xform.cljs$core$IFn$_invoke$arity$1(G__40578) : xform.call(null,G__40578));
})(),iter));
});

/**
* @constructor
*/
cljs.core.MultiStepper = (function (xform,iters,nexts){
this.xform = xform;
this.iters = iters;
this.nexts = nexts;
})
cljs.core.MultiStepper.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
var iters__$1 = cljs.core.seq(self__.iters);
while(true){
if(!((iters__$1 == null))){
var iter = cljs.core.first(iters__$1);
if(cljs.core.not(iter.hasNext())){
return false;
} else {
var G__40580 = cljs.core.next(iters__$1);
iters__$1 = G__40580;
continue;
}
} else {
return true;
}
break;
}
});

cljs.core.MultiStepper.prototype.next = (function (){
var self__ = this;
var _ = this;
var n__25159__auto___40581 = self__.iters.length;
var i_40582 = (0);
while(true){
if((i_40582 < n__25159__auto___40581)){
(self__.nexts[i_40582] = (self__.iters[i_40582]).next());

var G__40583 = (i_40582 + (1));
i_40582 = G__40583;
continue;
} else {
}
break;
}

return cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(self__.nexts,(0));
});

cljs.core.MultiStepper.prototype.step = (function (lt){
var self__ = this;
var this$ = this;
while(true){
if(cljs.core.truth_((function (){var and__24260__auto__ = !((lt.stepper == null));
if(and__24260__auto__){
return this$.hasNext();
} else {
return and__24260__auto__;
}
})())){
if(cljs.core.reduced_QMARK_(cljs.core.apply.cljs$core$IFn$_invoke$arity$2(self__.xform,cljs.core.cons(lt,this$.next())))){
if((lt.rest == null)){
} else {
lt.rest.stepper = null;
}
} else {
continue;
}
} else {
}
break;
}

if((lt.stepper == null)){
return null;
} else {
var G__40579 = lt;
return (self__.xform.cljs$core$IFn$_invoke$arity$1 ? self__.xform.cljs$core$IFn$_invoke$arity$1(G__40579) : self__.xform.call(null,G__40579));
}
});

cljs.core.MultiStepper.cljs$lang$type = true;

cljs.core.MultiStepper.cljs$lang$ctorStr = "cljs.core/MultiStepper";

cljs.core.MultiStepper.cljs$lang$ctorPrWriter = (function (this__24859__auto__,writer__24860__auto__,opt__24861__auto__){
return cljs.core._write(writer__24860__auto__,"cljs.core/MultiStepper");
});

cljs.core.__GT_MultiStepper = (function __GT_MultiStepper(xform,iters,nexts){
return (new cljs.core.MultiStepper(xform,iters,nexts));
});

cljs.core.multi_stepper = (function() {
var multi_stepper = null;
var multi_stepper__2 = (function (xform,iters){
return multi_stepper.cljs$core$IFn$_invoke$arity$3(xform,iters,(new Array(iters.length)));
});
var multi_stepper__3 = (function (xform,iters,nexts){
var stepfn = (function() {
var stepfn = null;
var stepfn__1 = (function (result){
var lt = ((cljs.core.reduced_QMARK_(result))?cljs.core.deref(result):result);
lt.stepper = null;

return lt;
});
var stepfn__2 = (function (result,input){
var lt = result;
lt.first = input;

lt.rest = cljs.core.lazy_transformer(lt.stepper);

lt.stepper = null;

return lt.rest;
});
stepfn = function(result,input){
switch(arguments.length){
case 1:
return stepfn__1.call(this,result);
case 2:
return stepfn__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
stepfn.cljs$core$IFn$_invoke$arity$1 = stepfn__1;
stepfn.cljs$core$IFn$_invoke$arity$2 = stepfn__2;
return stepfn;
})()
;
return (new cljs.core.MultiStepper((function (){var G__40588 = stepfn;
return (xform.cljs$core$IFn$_invoke$arity$1 ? xform.cljs$core$IFn$_invoke$arity$1(G__40588) : xform.call(null,G__40588));
})(),iters,nexts));
});
multi_stepper = function(xform,iters,nexts){
switch(arguments.length){
case 2:
return multi_stepper__2.call(this,xform,iters);
case 3:
return multi_stepper__3.call(this,xform,iters,nexts);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
multi_stepper.cljs$core$IFn$_invoke$arity$2 = multi_stepper__2;
multi_stepper.cljs$core$IFn$_invoke$arity$3 = multi_stepper__3;
return multi_stepper;
})()
;

/**
* @constructor
*/
cljs.core.LazyTransformer = (function (stepper,first,rest,meta){
this.stepper = stepper;
this.first = first;
this.rest = rest;
this.meta = meta;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 31719628;
})
cljs.core.LazyTransformer.prototype.cljs$core$INext$_next$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
if((self__.stepper == null)){
} else {
cljs.core._seq(this$__$1);
}

if((self__.rest == null)){
return null;
} else {
return cljs.core._seq(self__.rest);
}
});

cljs.core.LazyTransformer.prototype.cljs$core$ISeq$_first$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
if((self__.stepper == null)){
} else {
cljs.core._seq(this$__$1);
}

if((self__.rest == null)){
return null;
} else {
return self__.first;
}
});

cljs.core.LazyTransformer.prototype.cljs$core$ISeq$_rest$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
if((self__.stepper == null)){
} else {
cljs.core._seq(this$__$1);
}

if((self__.rest == null)){
return cljs.core.List.EMPTY;
} else {
return self__.rest;
}
});

cljs.core.LazyTransformer.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
if((self__.stepper == null)){
} else {
self__.stepper.step(this$__$1);
}

if((self__.rest == null)){
return null;
} else {
return this$__$1;
}
});

cljs.core.LazyTransformer.prototype.cljs$core$IHash$_hash$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return cljs.core.hash_ordered_coll(this$__$1);
});

cljs.core.LazyTransformer.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (this$,other){
var self__ = this;
var this$__$1 = this;
var s = cljs.core._seq(this$__$1);
if(!((s == null))){
return cljs.core.equiv_sequential(this$__$1,other);
} else {
return (cljs.core.sequential_QMARK_(other)) && ((cljs.core.seq(other) == null));
}
});

cljs.core.LazyTransformer.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return cljs.core.List.EMPTY;
});

cljs.core.LazyTransformer.prototype.cljs$core$ICollection$_conj$arity$2 = (function (this$,o){
var self__ = this;
var this$__$1 = this;
return cljs.core.cons(o,cljs.core._seq(this$__$1));
});

cljs.core.LazyTransformer.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (this$,new_meta){
var self__ = this;
var this$__$1 = this;
return (new cljs.core.LazyTransformer(self__.stepper,self__.first,self__.rest,new_meta));
});

cljs.core.LazyTransformer.cljs$lang$type = true;

cljs.core.LazyTransformer.cljs$lang$ctorStr = "cljs.core/LazyTransformer";

cljs.core.LazyTransformer.cljs$lang$ctorPrWriter = (function (this__24859__auto__,writer__24860__auto__,opt__24861__auto__){
return cljs.core._write(writer__24860__auto__,"cljs.core/LazyTransformer");
});

cljs.core.__GT_LazyTransformer = (function __GT_LazyTransformer(stepper,first,rest,meta){
return (new cljs.core.LazyTransformer(stepper,first,rest,meta));
});

(cljs.core.LazyTransformer.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__25250__auto__ = this;
return cljs.core.es6_iterator(this__25250__auto__);
}));
cljs.core.LazyTransformer.create = (function (xform,coll){
return (new cljs.core.LazyTransformer(cljs.core.stepper(xform,cljs.core.iter(coll)),null,null,null));
});
cljs.core.LazyTransformer.createMulti = (function (xform,colls){
var iters = [];
var seq__40589_40593 = cljs.core.seq(colls);
var chunk__40590_40594 = null;
var count__40591_40595 = (0);
var i__40592_40596 = (0);
while(true){
if((i__40592_40596 < count__40591_40595)){
var coll_40597 = chunk__40590_40594.cljs$core$IIndexed$_nth$arity$2(null,i__40592_40596);
iters.push(cljs.core.iter(coll_40597));

var G__40598 = seq__40589_40593;
var G__40599 = chunk__40590_40594;
var G__40600 = count__40591_40595;
var G__40601 = (i__40592_40596 + (1));
seq__40589_40593 = G__40598;
chunk__40590_40594 = G__40599;
count__40591_40595 = G__40600;
i__40592_40596 = G__40601;
continue;
} else {
var temp__4126__auto___40602 = cljs.core.seq(seq__40589_40593);
if(temp__4126__auto___40602){
var seq__40589_40603__$1 = temp__4126__auto___40602;
if(cljs.core.chunked_seq_QMARK_(seq__40589_40603__$1)){
var c__25059__auto___40604 = cljs.core.chunk_first(seq__40589_40603__$1);
var G__40605 = cljs.core.chunk_rest(seq__40589_40603__$1);
var G__40606 = c__25059__auto___40604;
var G__40607 = cljs.core.count(c__25059__auto___40604);
var G__40608 = (0);
seq__40589_40593 = G__40605;
chunk__40590_40594 = G__40606;
count__40591_40595 = G__40607;
i__40592_40596 = G__40608;
continue;
} else {
var coll_40609 = cljs.core.first(seq__40589_40603__$1);
iters.push(cljs.core.iter(coll_40609));

var G__40610 = cljs.core.next(seq__40589_40603__$1);
var G__40611 = null;
var G__40612 = (0);
var G__40613 = (0);
seq__40589_40593 = G__40610;
chunk__40590_40594 = G__40611;
count__40591_40595 = G__40612;
i__40592_40596 = G__40613;
continue;
}
} else {
}
}
break;
}

return (new cljs.core.LazyTransformer(cljs.core.multi_stepper.cljs$core$IFn$_invoke$arity$3(xform,iters,(new Array(iters.length))),null,null,null));
});
/**
* Coerces coll to a (possibly empty) sequence, if it is not already
* one. Will not force a lazy seq. (sequence nil) yields (), When a
* transducer is supplied, returns a lazy sequence of applications of
* the transform to the items in coll(s), i.e. to the set of first
* items of each coll, followed by the set of second
* items in each coll, until any one of the colls is exhausted.  Any
* remaining items in other colls are ignored. The transform should accept
* number-of-colls arguments
* @param {...*} var_args
*/
cljs.core.sequence = (function() {
var sequence = null;
var sequence__1 = (function (coll){
if(cljs.core.seq_QMARK_(coll)){
return coll;
} else {
var or__24272__auto__ = cljs.core.seq(coll);
if(or__24272__auto__){
return or__24272__auto__;
} else {
return cljs.core.List.EMPTY;
}
}
});
var sequence__2 = (function (xform,coll){
return cljs.core.LazyTransformer.create(xform,coll);
});
var sequence__3 = (function() { 
var G__40614__delegate = function (xform,coll,colls){
return cljs.core.LazyTransformer.createMulti(xform,cljs.core.to_array(cljs.core.cons(coll,colls)));
};
var G__40614 = function (xform,coll,var_args){
var colls = null;
if (arguments.length > 2) {
var G__40615__i = 0, G__40615__a = new Array(arguments.length -  2);
while (G__40615__i < G__40615__a.length) {G__40615__a[G__40615__i] = arguments[G__40615__i + 2]; ++G__40615__i;}
  colls = new cljs.core.IndexedSeq(G__40615__a,0);
} 
return G__40614__delegate.call(this,xform,coll,colls);};
G__40614.cljs$lang$maxFixedArity = 2;
G__40614.cljs$lang$applyTo = (function (arglist__40616){
var xform = cljs.core.first(arglist__40616);
arglist__40616 = cljs.core.next(arglist__40616);
var coll = cljs.core.first(arglist__40616);
var colls = cljs.core.rest(arglist__40616);
return G__40614__delegate(xform,coll,colls);
});
G__40614.cljs$core$IFn$_invoke$arity$variadic = G__40614__delegate;
return G__40614;
})()
;
sequence = function(xform,coll,var_args){
var colls = var_args;
switch(arguments.length){
case 1:
return sequence__1.call(this,xform);
case 2:
return sequence__2.call(this,xform,coll);
default:
var G__40617 = null;
if (arguments.length > 2) {
var G__40618__i = 0, G__40618__a = new Array(arguments.length -  2);
while (G__40618__i < G__40618__a.length) {G__40618__a[G__40618__i] = arguments[G__40618__i + 2]; ++G__40618__i;}
G__40617 = new cljs.core.IndexedSeq(G__40618__a,0);
}
return sequence__3.cljs$core$IFn$_invoke$arity$variadic(xform,coll, G__40617);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
sequence.cljs$lang$maxFixedArity = 2;
sequence.cljs$lang$applyTo = sequence__3.cljs$lang$applyTo;
sequence.cljs$core$IFn$_invoke$arity$1 = sequence__1;
sequence.cljs$core$IFn$_invoke$arity$2 = sequence__2;
sequence.cljs$core$IFn$_invoke$arity$variadic = sequence__3.cljs$core$IFn$_invoke$arity$variadic;
return sequence;
})()
;
/**
* Returns true if (pred x) is logical true for every x in coll, else
* false.
*/
cljs.core.every_QMARK_ = (function every_QMARK_(pred,coll){
while(true){
if((cljs.core.seq(coll) == null)){
return true;
} else {
if(cljs.core.truth_((function (){var G__40620 = cljs.core.first(coll);
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__40620) : pred.call(null,G__40620));
})())){
var G__40621 = pred;
var G__40622 = cljs.core.next(coll);
pred = G__40621;
coll = G__40622;
continue;
} else {
return false;

}
}
break;
}
});
/**
* Returns false if (pred x) is logical true for every x in
* coll, else true.
*/
cljs.core.not_every_QMARK_ = (function not_every_QMARK_(pred,coll){
return !(cljs.core.every_QMARK_(pred,coll));
});
/**
* Returns the first logical true value of (pred x) for any x in coll,
* else nil.  One common idiom is to use a set as pred, for example
* this will return :fred if :fred is in the sequence, otherwise nil:
* (some #{:fred} coll)
*/
cljs.core.some = (function some(pred,coll){
while(true){
if(cljs.core.seq(coll)){
var or__24272__auto__ = (function (){var G__40626 = cljs.core.first(coll);
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__40626) : pred.call(null,G__40626));
})();
if(cljs.core.truth_(or__24272__auto__)){
return or__24272__auto__;
} else {
var G__40627 = pred;
var G__40628 = cljs.core.next(coll);
pred = G__40627;
coll = G__40628;
continue;
}
} else {
return null;
}
break;
}
});
/**
* Returns false if (pred x) is logical true for any x in coll,
* else true.
*/
cljs.core.not_any_QMARK_ = (function not_any_QMARK_(pred,coll){
return cljs.core.not(cljs.core.some(pred,coll));
});
/**
* Returns true if n is even, throws an exception if n is not an integer
*/
cljs.core.even_QMARK_ = (function even_QMARK_(n){
if(cljs.core.integer_QMARK_(n)){
return ((n & (1)) === (0));
} else {
throw (new Error([cljs.core.str("Argument must be an integer: "),cljs.core.str(n)].join('')));
}
});
/**
* Returns true if n is odd, throws an exception if n is not an integer
*/
cljs.core.odd_QMARK_ = (function odd_QMARK_(n){
return !(cljs.core.even_QMARK_(n));
});
/**
* Takes a fn f and returns a fn that takes the same arguments as f,
* has the same effects, if any, and returns the opposite truth value.
*/
cljs.core.complement = (function complement(f){
return (function() {
var G__40635 = null;
var G__40635__0 = (function (){
return cljs.core.not((function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})());
});
var G__40635__1 = (function (x){
return cljs.core.not((function (){var G__40632 = x;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__40632) : f.call(null,G__40632));
})());
});
var G__40635__2 = (function (x,y){
return cljs.core.not((function (){var G__40633 = x;
var G__40634 = y;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__40633,G__40634) : f.call(null,G__40633,G__40634));
})());
});
var G__40635__3 = (function() { 
var G__40636__delegate = function (x,y,zs){
return cljs.core.not(cljs.core.apply.cljs$core$IFn$_invoke$arity$4(f,x,y,zs));
};
var G__40636 = function (x,y,var_args){
var zs = null;
if (arguments.length > 2) {
var G__40637__i = 0, G__40637__a = new Array(arguments.length -  2);
while (G__40637__i < G__40637__a.length) {G__40637__a[G__40637__i] = arguments[G__40637__i + 2]; ++G__40637__i;}
  zs = new cljs.core.IndexedSeq(G__40637__a,0);
} 
return G__40636__delegate.call(this,x,y,zs);};
G__40636.cljs$lang$maxFixedArity = 2;
G__40636.cljs$lang$applyTo = (function (arglist__40638){
var x = cljs.core.first(arglist__40638);
arglist__40638 = cljs.core.next(arglist__40638);
var y = cljs.core.first(arglist__40638);
var zs = cljs.core.rest(arglist__40638);
return G__40636__delegate(x,y,zs);
});
G__40636.cljs$core$IFn$_invoke$arity$variadic = G__40636__delegate;
return G__40636;
})()
;
G__40635 = function(x,y,var_args){
var zs = var_args;
switch(arguments.length){
case 0:
return G__40635__0.call(this);
case 1:
return G__40635__1.call(this,x);
case 2:
return G__40635__2.call(this,x,y);
default:
var G__40639 = null;
if (arguments.length > 2) {
var G__40640__i = 0, G__40640__a = new Array(arguments.length -  2);
while (G__40640__i < G__40640__a.length) {G__40640__a[G__40640__i] = arguments[G__40640__i + 2]; ++G__40640__i;}
G__40639 = new cljs.core.IndexedSeq(G__40640__a,0);
}
return G__40635__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__40639);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__40635.cljs$lang$maxFixedArity = 2;
G__40635.cljs$lang$applyTo = G__40635__3.cljs$lang$applyTo;
G__40635.cljs$core$IFn$_invoke$arity$0 = G__40635__0;
G__40635.cljs$core$IFn$_invoke$arity$1 = G__40635__1;
G__40635.cljs$core$IFn$_invoke$arity$2 = G__40635__2;
G__40635.cljs$core$IFn$_invoke$arity$variadic = G__40635__3.cljs$core$IFn$_invoke$arity$variadic;
return G__40635;
})()
});
/**
* Returns a function that takes any number of arguments and returns x.
*/
cljs.core.constantly = (function constantly(x){
return (function() { 
var G__40641__delegate = function (args){
return x;
};
var G__40641 = function (var_args){
var args = null;
if (arguments.length > 0) {
var G__40642__i = 0, G__40642__a = new Array(arguments.length -  0);
while (G__40642__i < G__40642__a.length) {G__40642__a[G__40642__i] = arguments[G__40642__i + 0]; ++G__40642__i;}
  args = new cljs.core.IndexedSeq(G__40642__a,0);
} 
return G__40641__delegate.call(this,args);};
G__40641.cljs$lang$maxFixedArity = 0;
G__40641.cljs$lang$applyTo = (function (arglist__40643){
var args = cljs.core.seq(arglist__40643);
return G__40641__delegate(args);
});
G__40641.cljs$core$IFn$_invoke$arity$variadic = G__40641__delegate;
return G__40641;
})()
;
});
/**
* Takes a set of functions and returns a fn that is the composition
* of those fns.  The returned fn takes a variable number of args,
* applies the rightmost of fns to the args, the next
* fn (right-to-left) to the result, etc.
* @param {...*} var_args
*/
cljs.core.comp = (function() {
var comp = null;
var comp__0 = (function (){
return cljs.core.identity;
});
var comp__1 = (function (f){
return f;
});
var comp__2 = (function (f,g){
return (function() {
var G__40698 = null;
var G__40698__0 = (function (){
var G__40671 = (function (){return (g.cljs$core$IFn$_invoke$arity$0 ? g.cljs$core$IFn$_invoke$arity$0() : g.call(null));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__40671) : f.call(null,G__40671));
});
var G__40698__1 = (function (x){
var G__40672 = (function (){var G__40673 = x;
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__40673) : g.call(null,G__40673));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__40672) : f.call(null,G__40672));
});
var G__40698__2 = (function (x,y){
var G__40674 = (function (){var G__40675 = x;
var G__40676 = y;
return (g.cljs$core$IFn$_invoke$arity$2 ? g.cljs$core$IFn$_invoke$arity$2(G__40675,G__40676) : g.call(null,G__40675,G__40676));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__40674) : f.call(null,G__40674));
});
var G__40698__3 = (function (x,y,z){
var G__40677 = (function (){var G__40678 = x;
var G__40679 = y;
var G__40680 = z;
return (g.cljs$core$IFn$_invoke$arity$3 ? g.cljs$core$IFn$_invoke$arity$3(G__40678,G__40679,G__40680) : g.call(null,G__40678,G__40679,G__40680));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__40677) : f.call(null,G__40677));
});
var G__40698__4 = (function() { 
var G__40699__delegate = function (x,y,z,args){
var G__40681 = cljs.core.apply.cljs$core$IFn$_invoke$arity$5(g,x,y,z,args);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__40681) : f.call(null,G__40681));
};
var G__40699 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__40700__i = 0, G__40700__a = new Array(arguments.length -  3);
while (G__40700__i < G__40700__a.length) {G__40700__a[G__40700__i] = arguments[G__40700__i + 3]; ++G__40700__i;}
  args = new cljs.core.IndexedSeq(G__40700__a,0);
} 
return G__40699__delegate.call(this,x,y,z,args);};
G__40699.cljs$lang$maxFixedArity = 3;
G__40699.cljs$lang$applyTo = (function (arglist__40701){
var x = cljs.core.first(arglist__40701);
arglist__40701 = cljs.core.next(arglist__40701);
var y = cljs.core.first(arglist__40701);
arglist__40701 = cljs.core.next(arglist__40701);
var z = cljs.core.first(arglist__40701);
var args = cljs.core.rest(arglist__40701);
return G__40699__delegate(x,y,z,args);
});
G__40699.cljs$core$IFn$_invoke$arity$variadic = G__40699__delegate;
return G__40699;
})()
;
G__40698 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__40698__0.call(this);
case 1:
return G__40698__1.call(this,x);
case 2:
return G__40698__2.call(this,x,y);
case 3:
return G__40698__3.call(this,x,y,z);
default:
var G__40702 = null;
if (arguments.length > 3) {
var G__40703__i = 0, G__40703__a = new Array(arguments.length -  3);
while (G__40703__i < G__40703__a.length) {G__40703__a[G__40703__i] = arguments[G__40703__i + 3]; ++G__40703__i;}
G__40702 = new cljs.core.IndexedSeq(G__40703__a,0);
}
return G__40698__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__40702);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__40698.cljs$lang$maxFixedArity = 3;
G__40698.cljs$lang$applyTo = G__40698__4.cljs$lang$applyTo;
G__40698.cljs$core$IFn$_invoke$arity$0 = G__40698__0;
G__40698.cljs$core$IFn$_invoke$arity$1 = G__40698__1;
G__40698.cljs$core$IFn$_invoke$arity$2 = G__40698__2;
G__40698.cljs$core$IFn$_invoke$arity$3 = G__40698__3;
G__40698.cljs$core$IFn$_invoke$arity$variadic = G__40698__4.cljs$core$IFn$_invoke$arity$variadic;
return G__40698;
})()
});
var comp__3 = (function (f,g,h){
return (function() {
var G__40704 = null;
var G__40704__0 = (function (){
var G__40682 = (function (){var G__40683 = (function (){return (h.cljs$core$IFn$_invoke$arity$0 ? h.cljs$core$IFn$_invoke$arity$0() : h.call(null));
})();
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__40683) : g.call(null,G__40683));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__40682) : f.call(null,G__40682));
});
var G__40704__1 = (function (x){
var G__40684 = (function (){var G__40685 = (function (){var G__40686 = x;
return (h.cljs$core$IFn$_invoke$arity$1 ? h.cljs$core$IFn$_invoke$arity$1(G__40686) : h.call(null,G__40686));
})();
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__40685) : g.call(null,G__40685));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__40684) : f.call(null,G__40684));
});
var G__40704__2 = (function (x,y){
var G__40687 = (function (){var G__40688 = (function (){var G__40689 = x;
var G__40690 = y;
return (h.cljs$core$IFn$_invoke$arity$2 ? h.cljs$core$IFn$_invoke$arity$2(G__40689,G__40690) : h.call(null,G__40689,G__40690));
})();
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__40688) : g.call(null,G__40688));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__40687) : f.call(null,G__40687));
});
var G__40704__3 = (function (x,y,z){
var G__40691 = (function (){var G__40692 = (function (){var G__40693 = x;
var G__40694 = y;
var G__40695 = z;
return (h.cljs$core$IFn$_invoke$arity$3 ? h.cljs$core$IFn$_invoke$arity$3(G__40693,G__40694,G__40695) : h.call(null,G__40693,G__40694,G__40695));
})();
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__40692) : g.call(null,G__40692));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__40691) : f.call(null,G__40691));
});
var G__40704__4 = (function() { 
var G__40705__delegate = function (x,y,z,args){
var G__40696 = (function (){var G__40697 = cljs.core.apply.cljs$core$IFn$_invoke$arity$5(h,x,y,z,args);
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__40697) : g.call(null,G__40697));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__40696) : f.call(null,G__40696));
};
var G__40705 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__40706__i = 0, G__40706__a = new Array(arguments.length -  3);
while (G__40706__i < G__40706__a.length) {G__40706__a[G__40706__i] = arguments[G__40706__i + 3]; ++G__40706__i;}
  args = new cljs.core.IndexedSeq(G__40706__a,0);
} 
return G__40705__delegate.call(this,x,y,z,args);};
G__40705.cljs$lang$maxFixedArity = 3;
G__40705.cljs$lang$applyTo = (function (arglist__40707){
var x = cljs.core.first(arglist__40707);
arglist__40707 = cljs.core.next(arglist__40707);
var y = cljs.core.first(arglist__40707);
arglist__40707 = cljs.core.next(arglist__40707);
var z = cljs.core.first(arglist__40707);
var args = cljs.core.rest(arglist__40707);
return G__40705__delegate(x,y,z,args);
});
G__40705.cljs$core$IFn$_invoke$arity$variadic = G__40705__delegate;
return G__40705;
})()
;
G__40704 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__40704__0.call(this);
case 1:
return G__40704__1.call(this,x);
case 2:
return G__40704__2.call(this,x,y);
case 3:
return G__40704__3.call(this,x,y,z);
default:
var G__40708 = null;
if (arguments.length > 3) {
var G__40709__i = 0, G__40709__a = new Array(arguments.length -  3);
while (G__40709__i < G__40709__a.length) {G__40709__a[G__40709__i] = arguments[G__40709__i + 3]; ++G__40709__i;}
G__40708 = new cljs.core.IndexedSeq(G__40709__a,0);
}
return G__40704__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__40708);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__40704.cljs$lang$maxFixedArity = 3;
G__40704.cljs$lang$applyTo = G__40704__4.cljs$lang$applyTo;
G__40704.cljs$core$IFn$_invoke$arity$0 = G__40704__0;
G__40704.cljs$core$IFn$_invoke$arity$1 = G__40704__1;
G__40704.cljs$core$IFn$_invoke$arity$2 = G__40704__2;
G__40704.cljs$core$IFn$_invoke$arity$3 = G__40704__3;
G__40704.cljs$core$IFn$_invoke$arity$variadic = G__40704__4.cljs$core$IFn$_invoke$arity$variadic;
return G__40704;
})()
});
var comp__4 = (function() { 
var G__40710__delegate = function (f1,f2,f3,fs){
var fs__$1 = cljs.core.reverse(cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(f1,f2,f3,fs));
return ((function (fs__$1){
return (function() { 
var G__40711__delegate = function (args){
var ret = cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.first(fs__$1),args);
var fs__$2 = cljs.core.next(fs__$1);
while(true){
if(fs__$2){
var G__40712 = cljs.core.first(fs__$2).call(null,ret);
var G__40713 = cljs.core.next(fs__$2);
ret = G__40712;
fs__$2 = G__40713;
continue;
} else {
return ret;
}
break;
}
};
var G__40711 = function (var_args){
var args = null;
if (arguments.length > 0) {
var G__40714__i = 0, G__40714__a = new Array(arguments.length -  0);
while (G__40714__i < G__40714__a.length) {G__40714__a[G__40714__i] = arguments[G__40714__i + 0]; ++G__40714__i;}
  args = new cljs.core.IndexedSeq(G__40714__a,0);
} 
return G__40711__delegate.call(this,args);};
G__40711.cljs$lang$maxFixedArity = 0;
G__40711.cljs$lang$applyTo = (function (arglist__40715){
var args = cljs.core.seq(arglist__40715);
return G__40711__delegate(args);
});
G__40711.cljs$core$IFn$_invoke$arity$variadic = G__40711__delegate;
return G__40711;
})()
;
;})(fs__$1))
};
var G__40710 = function (f1,f2,f3,var_args){
var fs = null;
if (arguments.length > 3) {
var G__40716__i = 0, G__40716__a = new Array(arguments.length -  3);
while (G__40716__i < G__40716__a.length) {G__40716__a[G__40716__i] = arguments[G__40716__i + 3]; ++G__40716__i;}
  fs = new cljs.core.IndexedSeq(G__40716__a,0);
} 
return G__40710__delegate.call(this,f1,f2,f3,fs);};
G__40710.cljs$lang$maxFixedArity = 3;
G__40710.cljs$lang$applyTo = (function (arglist__40717){
var f1 = cljs.core.first(arglist__40717);
arglist__40717 = cljs.core.next(arglist__40717);
var f2 = cljs.core.first(arglist__40717);
arglist__40717 = cljs.core.next(arglist__40717);
var f3 = cljs.core.first(arglist__40717);
var fs = cljs.core.rest(arglist__40717);
return G__40710__delegate(f1,f2,f3,fs);
});
G__40710.cljs$core$IFn$_invoke$arity$variadic = G__40710__delegate;
return G__40710;
})()
;
comp = function(f1,f2,f3,var_args){
var fs = var_args;
switch(arguments.length){
case 0:
return comp__0.call(this);
case 1:
return comp__1.call(this,f1);
case 2:
return comp__2.call(this,f1,f2);
case 3:
return comp__3.call(this,f1,f2,f3);
default:
var G__40718 = null;
if (arguments.length > 3) {
var G__40719__i = 0, G__40719__a = new Array(arguments.length -  3);
while (G__40719__i < G__40719__a.length) {G__40719__a[G__40719__i] = arguments[G__40719__i + 3]; ++G__40719__i;}
G__40718 = new cljs.core.IndexedSeq(G__40719__a,0);
}
return comp__4.cljs$core$IFn$_invoke$arity$variadic(f1,f2,f3, G__40718);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
comp.cljs$lang$maxFixedArity = 3;
comp.cljs$lang$applyTo = comp__4.cljs$lang$applyTo;
comp.cljs$core$IFn$_invoke$arity$0 = comp__0;
comp.cljs$core$IFn$_invoke$arity$1 = comp__1;
comp.cljs$core$IFn$_invoke$arity$2 = comp__2;
comp.cljs$core$IFn$_invoke$arity$3 = comp__3;
comp.cljs$core$IFn$_invoke$arity$variadic = comp__4.cljs$core$IFn$_invoke$arity$variadic;
return comp;
})()
;
/**
* Takes a function f and fewer than the normal arguments to f, and
* returns a fn that takes a variable number of additional args. When
* called, the returned function calls f with args + additional args.
* @param {...*} var_args
*/
cljs.core.partial = (function() {
var partial = null;
var partial__1 = (function (f){
return f;
});
var partial__2 = (function (f,arg1){
return (function() {
var G__40804 = null;
var G__40804__0 = (function (){
var G__40762 = arg1;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__40762) : f.call(null,G__40762));
});
var G__40804__1 = (function (x){
var G__40763 = arg1;
var G__40764 = x;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__40763,G__40764) : f.call(null,G__40763,G__40764));
});
var G__40804__2 = (function (x,y){
var G__40765 = arg1;
var G__40766 = x;
var G__40767 = y;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__40765,G__40766,G__40767) : f.call(null,G__40765,G__40766,G__40767));
});
var G__40804__3 = (function (x,y,z){
var G__40768 = arg1;
var G__40769 = x;
var G__40770 = y;
var G__40771 = z;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__40768,G__40769,G__40770,G__40771) : f.call(null,G__40768,G__40769,G__40770,G__40771));
});
var G__40804__4 = (function() { 
var G__40805__delegate = function (x,y,z,args){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f,arg1,x,y,z,cljs.core.array_seq([args], 0));
};
var G__40805 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__40806__i = 0, G__40806__a = new Array(arguments.length -  3);
while (G__40806__i < G__40806__a.length) {G__40806__a[G__40806__i] = arguments[G__40806__i + 3]; ++G__40806__i;}
  args = new cljs.core.IndexedSeq(G__40806__a,0);
} 
return G__40805__delegate.call(this,x,y,z,args);};
G__40805.cljs$lang$maxFixedArity = 3;
G__40805.cljs$lang$applyTo = (function (arglist__40807){
var x = cljs.core.first(arglist__40807);
arglist__40807 = cljs.core.next(arglist__40807);
var y = cljs.core.first(arglist__40807);
arglist__40807 = cljs.core.next(arglist__40807);
var z = cljs.core.first(arglist__40807);
var args = cljs.core.rest(arglist__40807);
return G__40805__delegate(x,y,z,args);
});
G__40805.cljs$core$IFn$_invoke$arity$variadic = G__40805__delegate;
return G__40805;
})()
;
G__40804 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__40804__0.call(this);
case 1:
return G__40804__1.call(this,x);
case 2:
return G__40804__2.call(this,x,y);
case 3:
return G__40804__3.call(this,x,y,z);
default:
var G__40808 = null;
if (arguments.length > 3) {
var G__40809__i = 0, G__40809__a = new Array(arguments.length -  3);
while (G__40809__i < G__40809__a.length) {G__40809__a[G__40809__i] = arguments[G__40809__i + 3]; ++G__40809__i;}
G__40808 = new cljs.core.IndexedSeq(G__40809__a,0);
}
return G__40804__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__40808);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__40804.cljs$lang$maxFixedArity = 3;
G__40804.cljs$lang$applyTo = G__40804__4.cljs$lang$applyTo;
G__40804.cljs$core$IFn$_invoke$arity$0 = G__40804__0;
G__40804.cljs$core$IFn$_invoke$arity$1 = G__40804__1;
G__40804.cljs$core$IFn$_invoke$arity$2 = G__40804__2;
G__40804.cljs$core$IFn$_invoke$arity$3 = G__40804__3;
G__40804.cljs$core$IFn$_invoke$arity$variadic = G__40804__4.cljs$core$IFn$_invoke$arity$variadic;
return G__40804;
})()
});
var partial__3 = (function (f,arg1,arg2){
return (function() {
var G__40810 = null;
var G__40810__0 = (function (){
var G__40772 = arg1;
var G__40773 = arg2;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__40772,G__40773) : f.call(null,G__40772,G__40773));
});
var G__40810__1 = (function (x){
var G__40774 = arg1;
var G__40775 = arg2;
var G__40776 = x;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__40774,G__40775,G__40776) : f.call(null,G__40774,G__40775,G__40776));
});
var G__40810__2 = (function (x,y){
var G__40777 = arg1;
var G__40778 = arg2;
var G__40779 = x;
var G__40780 = y;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__40777,G__40778,G__40779,G__40780) : f.call(null,G__40777,G__40778,G__40779,G__40780));
});
var G__40810__3 = (function (x,y,z){
var G__40781 = arg1;
var G__40782 = arg2;
var G__40783 = x;
var G__40784 = y;
var G__40785 = z;
return (f.cljs$core$IFn$_invoke$arity$5 ? f.cljs$core$IFn$_invoke$arity$5(G__40781,G__40782,G__40783,G__40784,G__40785) : f.call(null,G__40781,G__40782,G__40783,G__40784,G__40785));
});
var G__40810__4 = (function() { 
var G__40811__delegate = function (x,y,z,args){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f,arg1,arg2,x,y,cljs.core.array_seq([z,args], 0));
};
var G__40811 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__40812__i = 0, G__40812__a = new Array(arguments.length -  3);
while (G__40812__i < G__40812__a.length) {G__40812__a[G__40812__i] = arguments[G__40812__i + 3]; ++G__40812__i;}
  args = new cljs.core.IndexedSeq(G__40812__a,0);
} 
return G__40811__delegate.call(this,x,y,z,args);};
G__40811.cljs$lang$maxFixedArity = 3;
G__40811.cljs$lang$applyTo = (function (arglist__40813){
var x = cljs.core.first(arglist__40813);
arglist__40813 = cljs.core.next(arglist__40813);
var y = cljs.core.first(arglist__40813);
arglist__40813 = cljs.core.next(arglist__40813);
var z = cljs.core.first(arglist__40813);
var args = cljs.core.rest(arglist__40813);
return G__40811__delegate(x,y,z,args);
});
G__40811.cljs$core$IFn$_invoke$arity$variadic = G__40811__delegate;
return G__40811;
})()
;
G__40810 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__40810__0.call(this);
case 1:
return G__40810__1.call(this,x);
case 2:
return G__40810__2.call(this,x,y);
case 3:
return G__40810__3.call(this,x,y,z);
default:
var G__40814 = null;
if (arguments.length > 3) {
var G__40815__i = 0, G__40815__a = new Array(arguments.length -  3);
while (G__40815__i < G__40815__a.length) {G__40815__a[G__40815__i] = arguments[G__40815__i + 3]; ++G__40815__i;}
G__40814 = new cljs.core.IndexedSeq(G__40815__a,0);
}
return G__40810__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__40814);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__40810.cljs$lang$maxFixedArity = 3;
G__40810.cljs$lang$applyTo = G__40810__4.cljs$lang$applyTo;
G__40810.cljs$core$IFn$_invoke$arity$0 = G__40810__0;
G__40810.cljs$core$IFn$_invoke$arity$1 = G__40810__1;
G__40810.cljs$core$IFn$_invoke$arity$2 = G__40810__2;
G__40810.cljs$core$IFn$_invoke$arity$3 = G__40810__3;
G__40810.cljs$core$IFn$_invoke$arity$variadic = G__40810__4.cljs$core$IFn$_invoke$arity$variadic;
return G__40810;
})()
});
var partial__4 = (function (f,arg1,arg2,arg3){
return (function() {
var G__40816 = null;
var G__40816__0 = (function (){
var G__40786 = arg1;
var G__40787 = arg2;
var G__40788 = arg3;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__40786,G__40787,G__40788) : f.call(null,G__40786,G__40787,G__40788));
});
var G__40816__1 = (function (x){
var G__40789 = arg1;
var G__40790 = arg2;
var G__40791 = arg3;
var G__40792 = x;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__40789,G__40790,G__40791,G__40792) : f.call(null,G__40789,G__40790,G__40791,G__40792));
});
var G__40816__2 = (function (x,y){
var G__40793 = arg1;
var G__40794 = arg2;
var G__40795 = arg3;
var G__40796 = x;
var G__40797 = y;
return (f.cljs$core$IFn$_invoke$arity$5 ? f.cljs$core$IFn$_invoke$arity$5(G__40793,G__40794,G__40795,G__40796,G__40797) : f.call(null,G__40793,G__40794,G__40795,G__40796,G__40797));
});
var G__40816__3 = (function (x,y,z){
var G__40798 = arg1;
var G__40799 = arg2;
var G__40800 = arg3;
var G__40801 = x;
var G__40802 = y;
var G__40803 = z;
return (f.cljs$core$IFn$_invoke$arity$6 ? f.cljs$core$IFn$_invoke$arity$6(G__40798,G__40799,G__40800,G__40801,G__40802,G__40803) : f.call(null,G__40798,G__40799,G__40800,G__40801,G__40802,G__40803));
});
var G__40816__4 = (function() { 
var G__40817__delegate = function (x,y,z,args){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f,arg1,arg2,arg3,x,cljs.core.array_seq([y,z,args], 0));
};
var G__40817 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__40818__i = 0, G__40818__a = new Array(arguments.length -  3);
while (G__40818__i < G__40818__a.length) {G__40818__a[G__40818__i] = arguments[G__40818__i + 3]; ++G__40818__i;}
  args = new cljs.core.IndexedSeq(G__40818__a,0);
} 
return G__40817__delegate.call(this,x,y,z,args);};
G__40817.cljs$lang$maxFixedArity = 3;
G__40817.cljs$lang$applyTo = (function (arglist__40819){
var x = cljs.core.first(arglist__40819);
arglist__40819 = cljs.core.next(arglist__40819);
var y = cljs.core.first(arglist__40819);
arglist__40819 = cljs.core.next(arglist__40819);
var z = cljs.core.first(arglist__40819);
var args = cljs.core.rest(arglist__40819);
return G__40817__delegate(x,y,z,args);
});
G__40817.cljs$core$IFn$_invoke$arity$variadic = G__40817__delegate;
return G__40817;
})()
;
G__40816 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__40816__0.call(this);
case 1:
return G__40816__1.call(this,x);
case 2:
return G__40816__2.call(this,x,y);
case 3:
return G__40816__3.call(this,x,y,z);
default:
var G__40820 = null;
if (arguments.length > 3) {
var G__40821__i = 0, G__40821__a = new Array(arguments.length -  3);
while (G__40821__i < G__40821__a.length) {G__40821__a[G__40821__i] = arguments[G__40821__i + 3]; ++G__40821__i;}
G__40820 = new cljs.core.IndexedSeq(G__40821__a,0);
}
return G__40816__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__40820);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__40816.cljs$lang$maxFixedArity = 3;
G__40816.cljs$lang$applyTo = G__40816__4.cljs$lang$applyTo;
G__40816.cljs$core$IFn$_invoke$arity$0 = G__40816__0;
G__40816.cljs$core$IFn$_invoke$arity$1 = G__40816__1;
G__40816.cljs$core$IFn$_invoke$arity$2 = G__40816__2;
G__40816.cljs$core$IFn$_invoke$arity$3 = G__40816__3;
G__40816.cljs$core$IFn$_invoke$arity$variadic = G__40816__4.cljs$core$IFn$_invoke$arity$variadic;
return G__40816;
})()
});
var partial__5 = (function() { 
var G__40822__delegate = function (f,arg1,arg2,arg3,more){
return (function() { 
var G__40823__delegate = function (args){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,arg1,arg2,arg3,cljs.core.concat.cljs$core$IFn$_invoke$arity$2(more,args));
};
var G__40823 = function (var_args){
var args = null;
if (arguments.length > 0) {
var G__40824__i = 0, G__40824__a = new Array(arguments.length -  0);
while (G__40824__i < G__40824__a.length) {G__40824__a[G__40824__i] = arguments[G__40824__i + 0]; ++G__40824__i;}
  args = new cljs.core.IndexedSeq(G__40824__a,0);
} 
return G__40823__delegate.call(this,args);};
G__40823.cljs$lang$maxFixedArity = 0;
G__40823.cljs$lang$applyTo = (function (arglist__40825){
var args = cljs.core.seq(arglist__40825);
return G__40823__delegate(args);
});
G__40823.cljs$core$IFn$_invoke$arity$variadic = G__40823__delegate;
return G__40823;
})()
;
};
var G__40822 = function (f,arg1,arg2,arg3,var_args){
var more = null;
if (arguments.length > 4) {
var G__40826__i = 0, G__40826__a = new Array(arguments.length -  4);
while (G__40826__i < G__40826__a.length) {G__40826__a[G__40826__i] = arguments[G__40826__i + 4]; ++G__40826__i;}
  more = new cljs.core.IndexedSeq(G__40826__a,0);
} 
return G__40822__delegate.call(this,f,arg1,arg2,arg3,more);};
G__40822.cljs$lang$maxFixedArity = 4;
G__40822.cljs$lang$applyTo = (function (arglist__40827){
var f = cljs.core.first(arglist__40827);
arglist__40827 = cljs.core.next(arglist__40827);
var arg1 = cljs.core.first(arglist__40827);
arglist__40827 = cljs.core.next(arglist__40827);
var arg2 = cljs.core.first(arglist__40827);
arglist__40827 = cljs.core.next(arglist__40827);
var arg3 = cljs.core.first(arglist__40827);
var more = cljs.core.rest(arglist__40827);
return G__40822__delegate(f,arg1,arg2,arg3,more);
});
G__40822.cljs$core$IFn$_invoke$arity$variadic = G__40822__delegate;
return G__40822;
})()
;
partial = function(f,arg1,arg2,arg3,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return partial__1.call(this,f);
case 2:
return partial__2.call(this,f,arg1);
case 3:
return partial__3.call(this,f,arg1,arg2);
case 4:
return partial__4.call(this,f,arg1,arg2,arg3);
default:
var G__40828 = null;
if (arguments.length > 4) {
var G__40829__i = 0, G__40829__a = new Array(arguments.length -  4);
while (G__40829__i < G__40829__a.length) {G__40829__a[G__40829__i] = arguments[G__40829__i + 4]; ++G__40829__i;}
G__40828 = new cljs.core.IndexedSeq(G__40829__a,0);
}
return partial__5.cljs$core$IFn$_invoke$arity$variadic(f,arg1,arg2,arg3, G__40828);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
partial.cljs$lang$maxFixedArity = 4;
partial.cljs$lang$applyTo = partial__5.cljs$lang$applyTo;
partial.cljs$core$IFn$_invoke$arity$1 = partial__1;
partial.cljs$core$IFn$_invoke$arity$2 = partial__2;
partial.cljs$core$IFn$_invoke$arity$3 = partial__3;
partial.cljs$core$IFn$_invoke$arity$4 = partial__4;
partial.cljs$core$IFn$_invoke$arity$variadic = partial__5.cljs$core$IFn$_invoke$arity$variadic;
return partial;
})()
;
/**
* Takes a function f, and returns a function that calls f, replacing
* a nil first argument to f with the supplied value x. Higher arity
* versions can replace arguments in the second and third
* positions (y, z). Note that the function f can take any number of
* arguments, not just the one(s) being nil-patched.
*/
cljs.core.fnil = (function() {
var fnil = null;
var fnil__2 = (function (f,x){
return (function() {
var G__40862 = null;
var G__40862__1 = (function (a){
var G__40846 = (((a == null))?x:a);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__40846) : f.call(null,G__40846));
});
var G__40862__2 = (function (a,b){
var G__40847 = (((a == null))?x:a);
var G__40848 = b;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__40847,G__40848) : f.call(null,G__40847,G__40848));
});
var G__40862__3 = (function (a,b,c){
var G__40849 = (((a == null))?x:a);
var G__40850 = b;
var G__40851 = c;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__40849,G__40850,G__40851) : f.call(null,G__40849,G__40850,G__40851));
});
var G__40862__4 = (function() { 
var G__40863__delegate = function (a,b,c,ds){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,(((a == null))?x:a),b,c,ds);
};
var G__40863 = function (a,b,c,var_args){
var ds = null;
if (arguments.length > 3) {
var G__40864__i = 0, G__40864__a = new Array(arguments.length -  3);
while (G__40864__i < G__40864__a.length) {G__40864__a[G__40864__i] = arguments[G__40864__i + 3]; ++G__40864__i;}
  ds = new cljs.core.IndexedSeq(G__40864__a,0);
} 
return G__40863__delegate.call(this,a,b,c,ds);};
G__40863.cljs$lang$maxFixedArity = 3;
G__40863.cljs$lang$applyTo = (function (arglist__40865){
var a = cljs.core.first(arglist__40865);
arglist__40865 = cljs.core.next(arglist__40865);
var b = cljs.core.first(arglist__40865);
arglist__40865 = cljs.core.next(arglist__40865);
var c = cljs.core.first(arglist__40865);
var ds = cljs.core.rest(arglist__40865);
return G__40863__delegate(a,b,c,ds);
});
G__40863.cljs$core$IFn$_invoke$arity$variadic = G__40863__delegate;
return G__40863;
})()
;
G__40862 = function(a,b,c,var_args){
var ds = var_args;
switch(arguments.length){
case 1:
return G__40862__1.call(this,a);
case 2:
return G__40862__2.call(this,a,b);
case 3:
return G__40862__3.call(this,a,b,c);
default:
var G__40866 = null;
if (arguments.length > 3) {
var G__40867__i = 0, G__40867__a = new Array(arguments.length -  3);
while (G__40867__i < G__40867__a.length) {G__40867__a[G__40867__i] = arguments[G__40867__i + 3]; ++G__40867__i;}
G__40866 = new cljs.core.IndexedSeq(G__40867__a,0);
}
return G__40862__4.cljs$core$IFn$_invoke$arity$variadic(a,b,c, G__40866);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__40862.cljs$lang$maxFixedArity = 3;
G__40862.cljs$lang$applyTo = G__40862__4.cljs$lang$applyTo;
G__40862.cljs$core$IFn$_invoke$arity$1 = G__40862__1;
G__40862.cljs$core$IFn$_invoke$arity$2 = G__40862__2;
G__40862.cljs$core$IFn$_invoke$arity$3 = G__40862__3;
G__40862.cljs$core$IFn$_invoke$arity$variadic = G__40862__4.cljs$core$IFn$_invoke$arity$variadic;
return G__40862;
})()
});
var fnil__3 = (function (f,x,y){
return (function() {
var G__40868 = null;
var G__40868__2 = (function (a,b){
var G__40852 = (((a == null))?x:a);
var G__40853 = (((b == null))?y:b);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__40852,G__40853) : f.call(null,G__40852,G__40853));
});
var G__40868__3 = (function (a,b,c){
var G__40854 = (((a == null))?x:a);
var G__40855 = (((b == null))?y:b);
var G__40856 = c;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__40854,G__40855,G__40856) : f.call(null,G__40854,G__40855,G__40856));
});
var G__40868__4 = (function() { 
var G__40869__delegate = function (a,b,c,ds){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,(((a == null))?x:a),(((b == null))?y:b),c,ds);
};
var G__40869 = function (a,b,c,var_args){
var ds = null;
if (arguments.length > 3) {
var G__40870__i = 0, G__40870__a = new Array(arguments.length -  3);
while (G__40870__i < G__40870__a.length) {G__40870__a[G__40870__i] = arguments[G__40870__i + 3]; ++G__40870__i;}
  ds = new cljs.core.IndexedSeq(G__40870__a,0);
} 
return G__40869__delegate.call(this,a,b,c,ds);};
G__40869.cljs$lang$maxFixedArity = 3;
G__40869.cljs$lang$applyTo = (function (arglist__40871){
var a = cljs.core.first(arglist__40871);
arglist__40871 = cljs.core.next(arglist__40871);
var b = cljs.core.first(arglist__40871);
arglist__40871 = cljs.core.next(arglist__40871);
var c = cljs.core.first(arglist__40871);
var ds = cljs.core.rest(arglist__40871);
return G__40869__delegate(a,b,c,ds);
});
G__40869.cljs$core$IFn$_invoke$arity$variadic = G__40869__delegate;
return G__40869;
})()
;
G__40868 = function(a,b,c,var_args){
var ds = var_args;
switch(arguments.length){
case 2:
return G__40868__2.call(this,a,b);
case 3:
return G__40868__3.call(this,a,b,c);
default:
var G__40872 = null;
if (arguments.length > 3) {
var G__40873__i = 0, G__40873__a = new Array(arguments.length -  3);
while (G__40873__i < G__40873__a.length) {G__40873__a[G__40873__i] = arguments[G__40873__i + 3]; ++G__40873__i;}
G__40872 = new cljs.core.IndexedSeq(G__40873__a,0);
}
return G__40868__4.cljs$core$IFn$_invoke$arity$variadic(a,b,c, G__40872);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__40868.cljs$lang$maxFixedArity = 3;
G__40868.cljs$lang$applyTo = G__40868__4.cljs$lang$applyTo;
G__40868.cljs$core$IFn$_invoke$arity$2 = G__40868__2;
G__40868.cljs$core$IFn$_invoke$arity$3 = G__40868__3;
G__40868.cljs$core$IFn$_invoke$arity$variadic = G__40868__4.cljs$core$IFn$_invoke$arity$variadic;
return G__40868;
})()
});
var fnil__4 = (function (f,x,y,z){
return (function() {
var G__40874 = null;
var G__40874__2 = (function (a,b){
var G__40857 = (((a == null))?x:a);
var G__40858 = (((b == null))?y:b);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__40857,G__40858) : f.call(null,G__40857,G__40858));
});
var G__40874__3 = (function (a,b,c){
var G__40859 = (((a == null))?x:a);
var G__40860 = (((b == null))?y:b);
var G__40861 = (((c == null))?z:c);
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__40859,G__40860,G__40861) : f.call(null,G__40859,G__40860,G__40861));
});
var G__40874__4 = (function() { 
var G__40875__delegate = function (a,b,c,ds){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,(((a == null))?x:a),(((b == null))?y:b),(((c == null))?z:c),ds);
};
var G__40875 = function (a,b,c,var_args){
var ds = null;
if (arguments.length > 3) {
var G__40876__i = 0, G__40876__a = new Array(arguments.length -  3);
while (G__40876__i < G__40876__a.length) {G__40876__a[G__40876__i] = arguments[G__40876__i + 3]; ++G__40876__i;}
  ds = new cljs.core.IndexedSeq(G__40876__a,0);
} 
return G__40875__delegate.call(this,a,b,c,ds);};
G__40875.cljs$lang$maxFixedArity = 3;
G__40875.cljs$lang$applyTo = (function (arglist__40877){
var a = cljs.core.first(arglist__40877);
arglist__40877 = cljs.core.next(arglist__40877);
var b = cljs.core.first(arglist__40877);
arglist__40877 = cljs.core.next(arglist__40877);
var c = cljs.core.first(arglist__40877);
var ds = cljs.core.rest(arglist__40877);
return G__40875__delegate(a,b,c,ds);
});
G__40875.cljs$core$IFn$_invoke$arity$variadic = G__40875__delegate;
return G__40875;
})()
;
G__40874 = function(a,b,c,var_args){
var ds = var_args;
switch(arguments.length){
case 2:
return G__40874__2.call(this,a,b);
case 3:
return G__40874__3.call(this,a,b,c);
default:
var G__40878 = null;
if (arguments.length > 3) {
var G__40879__i = 0, G__40879__a = new Array(arguments.length -  3);
while (G__40879__i < G__40879__a.length) {G__40879__a[G__40879__i] = arguments[G__40879__i + 3]; ++G__40879__i;}
G__40878 = new cljs.core.IndexedSeq(G__40879__a,0);
}
return G__40874__4.cljs$core$IFn$_invoke$arity$variadic(a,b,c, G__40878);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__40874.cljs$lang$maxFixedArity = 3;
G__40874.cljs$lang$applyTo = G__40874__4.cljs$lang$applyTo;
G__40874.cljs$core$IFn$_invoke$arity$2 = G__40874__2;
G__40874.cljs$core$IFn$_invoke$arity$3 = G__40874__3;
G__40874.cljs$core$IFn$_invoke$arity$variadic = G__40874__4.cljs$core$IFn$_invoke$arity$variadic;
return G__40874;
})()
});
fnil = function(f,x,y,z){
switch(arguments.length){
case 2:
return fnil__2.call(this,f,x);
case 3:
return fnil__3.call(this,f,x,y);
case 4:
return fnil__4.call(this,f,x,y,z);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
fnil.cljs$core$IFn$_invoke$arity$2 = fnil__2;
fnil.cljs$core$IFn$_invoke$arity$3 = fnil__3;
fnil.cljs$core$IFn$_invoke$arity$4 = fnil__4;
return fnil;
})()
;
/**
* Returns a lazy sequence consisting of the result of applying f to 0
* and the first item of coll, followed by applying f to 1 and the second
* item in coll, etc, until coll is exhausted. Thus function f should
* accept 2 arguments, index and item.
*/
cljs.core.map_indexed = (function map_indexed(f,coll){
var mapi = (function mapi(idx,coll__$1){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll__$1);
if(temp__4126__auto__){
var s = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(s)){
var c = cljs.core.chunk_first(s);
var size = cljs.core.count(c);
var b = cljs.core.chunk_buffer(size);
var n__25159__auto___40928 = size;
var i_40929 = (0);
while(true){
if((i_40929 < n__25159__auto___40928)){
cljs.core.chunk_append(b,(function (){var G__40924 = (idx + i_40929);
var G__40925 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c,i_40929);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__40924,G__40925) : f.call(null,G__40924,G__40925));
})());

var G__40930 = (i_40929 + (1));
i_40929 = G__40930;
continue;
} else {
}
break;
}

return cljs.core.chunk_cons(cljs.core.chunk(b),mapi((idx + size),cljs.core.chunk_rest(s)));
} else {
return cljs.core.cons((function (){var G__40926 = idx;
var G__40927 = cljs.core.first(s);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__40926,G__40927) : f.call(null,G__40926,G__40927));
})(),mapi((idx + (1)),cljs.core.rest(s)));
}
} else {
return null;
}
}),null,null));
});
return mapi((0),coll);
});
/**
* Returns a lazy sequence of the non-nil results of (f item). Note,
* this means false return values will be included.  f must be free of
* side-effects.  Returns a transducer when no collection is provided.
*/
cljs.core.keep = (function() {
var keep = null;
var keep__1 = (function (f){
return (function (rf){
return (function() {
var G__40949 = null;
var G__40949__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__40949__1 = (function (result){
var G__40943 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__40943) : rf.call(null,G__40943));
});
var G__40949__2 = (function (result,input){
var v = (function (){var G__40944 = input;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__40944) : f.call(null,G__40944));
})();
if((v == null)){
return result;
} else {
var G__40945 = result;
var G__40946 = v;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__40945,G__40946) : rf.call(null,G__40945,G__40946));
}
});
G__40949 = function(result,input){
switch(arguments.length){
case 0:
return G__40949__0.call(this);
case 1:
return G__40949__1.call(this,result);
case 2:
return G__40949__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__40949.cljs$core$IFn$_invoke$arity$0 = G__40949__0;
G__40949.cljs$core$IFn$_invoke$arity$1 = G__40949__1;
G__40949.cljs$core$IFn$_invoke$arity$2 = G__40949__2;
return G__40949;
})()
});
});
var keep__2 = (function (f,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(s)){
var c = cljs.core.chunk_first(s);
var size = cljs.core.count(c);
var b = cljs.core.chunk_buffer(size);
var n__25159__auto___40950 = size;
var i_40951 = (0);
while(true){
if((i_40951 < n__25159__auto___40950)){
var x_40952 = (function (){var G__40947 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c,i_40951);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__40947) : f.call(null,G__40947));
})();
if((x_40952 == null)){
} else {
cljs.core.chunk_append(b,x_40952);
}

var G__40953 = (i_40951 + (1));
i_40951 = G__40953;
continue;
} else {
}
break;
}

return cljs.core.chunk_cons(cljs.core.chunk(b),keep.cljs$core$IFn$_invoke$arity$2(f,cljs.core.chunk_rest(s)));
} else {
var x = (function (){var G__40948 = cljs.core.first(s);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__40948) : f.call(null,G__40948));
})();
if((x == null)){
return keep.cljs$core$IFn$_invoke$arity$2(f,cljs.core.rest(s));
} else {
return cljs.core.cons(x,keep.cljs$core$IFn$_invoke$arity$2(f,cljs.core.rest(s)));
}
}
} else {
return null;
}
}),null,null));
});
keep = function(f,coll){
switch(arguments.length){
case 1:
return keep__1.call(this,f);
case 2:
return keep__2.call(this,f,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
keep.cljs$core$IFn$_invoke$arity$1 = keep__1;
keep.cljs$core$IFn$_invoke$arity$2 = keep__2;
return keep;
})()
;

/**
* @constructor
*/
cljs.core.Atom = (function (state,meta,validator,watches){
this.state = state;
this.meta = meta;
this.validator = validator;
this.watches = watches;
this.cljs$lang$protocol_mask$partition0$ = 6455296;
this.cljs$lang$protocol_mask$partition1$ = 16386;
})
cljs.core.Atom.prototype.cljs$core$IHash$_hash$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
var G__40954 = this$__$1;
return goog.getUid(G__40954);
});

cljs.core.Atom.prototype.cljs$core$IWatchable$_notify_watches$arity$3 = (function (this$,oldval,newval){
var self__ = this;
var this$__$1 = this;
var seq__40955 = cljs.core.seq(self__.watches);
var chunk__40956 = null;
var count__40957 = (0);
var i__40958 = (0);
while(true){
if((i__40958 < count__40957)){
var vec__40959 = chunk__40956.cljs$core$IIndexed$_nth$arity$2(null,i__40958);
var key = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__40959,(0),null);
var f = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__40959,(1),null);
var G__40960_40969 = key;
var G__40961_40970 = this$__$1;
var G__40962_40971 = oldval;
var G__40963_40972 = newval;
(f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__40960_40969,G__40961_40970,G__40962_40971,G__40963_40972) : f.call(null,G__40960_40969,G__40961_40970,G__40962_40971,G__40963_40972));

var G__40973 = seq__40955;
var G__40974 = chunk__40956;
var G__40975 = count__40957;
var G__40976 = (i__40958 + (1));
seq__40955 = G__40973;
chunk__40956 = G__40974;
count__40957 = G__40975;
i__40958 = G__40976;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__40955);
if(temp__4126__auto__){
var seq__40955__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__40955__$1)){
var c__25059__auto__ = cljs.core.chunk_first(seq__40955__$1);
var G__40977 = cljs.core.chunk_rest(seq__40955__$1);
var G__40978 = c__25059__auto__;
var G__40979 = cljs.core.count(c__25059__auto__);
var G__40980 = (0);
seq__40955 = G__40977;
chunk__40956 = G__40978;
count__40957 = G__40979;
i__40958 = G__40980;
continue;
} else {
var vec__40964 = cljs.core.first(seq__40955__$1);
var key = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__40964,(0),null);
var f = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__40964,(1),null);
var G__40965_40981 = key;
var G__40966_40982 = this$__$1;
var G__40967_40983 = oldval;
var G__40968_40984 = newval;
(f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__40965_40981,G__40966_40982,G__40967_40983,G__40968_40984) : f.call(null,G__40965_40981,G__40966_40982,G__40967_40983,G__40968_40984));

var G__40985 = cljs.core.next(seq__40955__$1);
var G__40986 = null;
var G__40987 = (0);
var G__40988 = (0);
seq__40955 = G__40985;
chunk__40956 = G__40986;
count__40957 = G__40987;
i__40958 = G__40988;
continue;
}
} else {
return null;
}
}
break;
}
});

cljs.core.Atom.prototype.cljs$core$IWatchable$_add_watch$arity$3 = (function (this$,key,f){
var self__ = this;
var this$__$1 = this;
this$__$1.watches = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.watches,key,f);

return this$__$1;
});

cljs.core.Atom.prototype.cljs$core$IWatchable$_remove_watch$arity$2 = (function (this$,key){
var self__ = this;
var this$__$1 = this;
return this$__$1.watches = cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(self__.watches,key);
});

cljs.core.Atom.prototype.cljs$core$IMeta$_meta$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.meta;
});

cljs.core.Atom.prototype.cljs$core$IDeref$_deref$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.state;
});

cljs.core.Atom.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (o,other){
var self__ = this;
var o__$1 = this;
return (o__$1 === other);
});

cljs.core.Atom.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.Atom.cljs$lang$type = true;

cljs.core.Atom.cljs$lang$ctorStr = "cljs.core/Atom";

cljs.core.Atom.cljs$lang$ctorPrWriter = (function (this__24859__auto__,writer__24860__auto__,opt__24861__auto__){
return cljs.core._write(writer__24860__auto__,"cljs.core/Atom");
});

cljs.core.__GT_Atom = (function __GT_Atom(state,meta,validator,watches){
return (new cljs.core.Atom(state,meta,validator,watches));
});

/**
* Creates and returns an Atom with an initial value of x and zero or
* more options (in any order):
* 
* :meta metadata-map
* 
* :validator validate-fn
* 
* If metadata-map is supplied, it will be come the metadata on the
* atom. validate-fn must be nil or a side-effect-free fn of one
* argument, which will be passed the intended new state on any state
* change. If the new state is unacceptable, the validate-fn should
* return false or throw an Error.  If either of these error conditions
* occur, then the value of the atom will not change.
* @param {...*} var_args
*/
cljs.core.atom = (function() {
var atom = null;
var atom__1 = (function (x){
return (new cljs.core.Atom(x,null,null,null));
});
var atom__2 = (function() { 
var G__40992__delegate = function (x,p__40989){
var map__40991 = p__40989;
var map__40991__$1 = ((cljs.core.seq_QMARK_(map__40991))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__40991):map__40991);
var validator = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__40991__$1,new cljs.core.Keyword(null,"validator","validator",-1966190681));
var meta = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__40991__$1,new cljs.core.Keyword(null,"meta","meta",1499536964));
return (new cljs.core.Atom(x,meta,validator,null));
};
var G__40992 = function (x,var_args){
var p__40989 = null;
if (arguments.length > 1) {
var G__40993__i = 0, G__40993__a = new Array(arguments.length -  1);
while (G__40993__i < G__40993__a.length) {G__40993__a[G__40993__i] = arguments[G__40993__i + 1]; ++G__40993__i;}
  p__40989 = new cljs.core.IndexedSeq(G__40993__a,0);
} 
return G__40992__delegate.call(this,x,p__40989);};
G__40992.cljs$lang$maxFixedArity = 1;
G__40992.cljs$lang$applyTo = (function (arglist__40994){
var x = cljs.core.first(arglist__40994);
var p__40989 = cljs.core.rest(arglist__40994);
return G__40992__delegate(x,p__40989);
});
G__40992.cljs$core$IFn$_invoke$arity$variadic = G__40992__delegate;
return G__40992;
})()
;
atom = function(x,var_args){
var p__40989 = var_args;
switch(arguments.length){
case 1:
return atom__1.call(this,x);
default:
var G__40995 = null;
if (arguments.length > 1) {
var G__40996__i = 0, G__40996__a = new Array(arguments.length -  1);
while (G__40996__i < G__40996__a.length) {G__40996__a[G__40996__i] = arguments[G__40996__i + 1]; ++G__40996__i;}
G__40995 = new cljs.core.IndexedSeq(G__40996__a,0);
}
return atom__2.cljs$core$IFn$_invoke$arity$variadic(x, G__40995);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
atom.cljs$lang$maxFixedArity = 1;
atom.cljs$lang$applyTo = atom__2.cljs$lang$applyTo;
atom.cljs$core$IFn$_invoke$arity$1 = atom__1;
atom.cljs$core$IFn$_invoke$arity$variadic = atom__2.cljs$core$IFn$_invoke$arity$variadic;
return atom;
})()
;
/**
* Sets the value of atom to newval without regard for the
* current value. Returns newval.
*/
cljs.core.reset_BANG_ = (function reset_BANG_(a,new_value){
if((a instanceof cljs.core.Atom)){
var validate = a.validator;
if((validate == null)){
} else {
if(cljs.core.truth_((function (){var G__40999 = new_value;
return (validate.cljs$core$IFn$_invoke$arity$1 ? validate.cljs$core$IFn$_invoke$arity$1(G__40999) : validate.call(null,G__40999));
})())){
} else {
throw (new Error([cljs.core.str("Assert failed: "),cljs.core.str("Validator rejected reference state"),cljs.core.str("\n"),cljs.core.str((function (){var G__41000 = cljs.core.list(new cljs.core.Symbol(null,"validate","validate",1439230700,null),new cljs.core.Symbol(null,"new-value","new-value",-1567397401,null));
return (cljs.core.pr_str.cljs$core$IFn$_invoke$arity$1 ? cljs.core.pr_str.cljs$core$IFn$_invoke$arity$1(G__41000) : cljs.core.pr_str.call(null,G__41000));
})())].join('')));
}
}

var old_value = a.state;
a.state = new_value;

if((a.watches == null)){
} else {
cljs.core._notify_watches(a,old_value,new_value);
}

return new_value;
} else {
return cljs.core._reset_BANG_(a,new_value);
}
});
/**
* Atomically swaps the value of atom to be:
* (apply f current-value-of-atom args). Note that f may be called
* multiple times, and thus should be free of side effects.  Returns
* the value that was swapped in.
* @param {...*} var_args
*/
cljs.core.swap_BANG_ = (function() {
var swap_BANG_ = null;
var swap_BANG___2 = (function (a,f){
if((a instanceof cljs.core.Atom)){
return cljs.core.reset_BANG_(a,(function (){var G__41007 = a.state;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__41007) : f.call(null,G__41007));
})());
} else {
return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$2(a,f);
}
});
var swap_BANG___3 = (function (a,f,x){
if((a instanceof cljs.core.Atom)){
return cljs.core.reset_BANG_(a,(function (){var G__41008 = a.state;
var G__41009 = x;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__41008,G__41009) : f.call(null,G__41008,G__41009));
})());
} else {
return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$3(a,f,x);
}
});
var swap_BANG___4 = (function (a,f,x,y){
if((a instanceof cljs.core.Atom)){
return cljs.core.reset_BANG_(a,(function (){var G__41010 = a.state;
var G__41011 = x;
var G__41012 = y;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__41010,G__41011,G__41012) : f.call(null,G__41010,G__41011,G__41012));
})());
} else {
return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$4(a,f,x,y);
}
});
var swap_BANG___5 = (function() { 
var G__41013__delegate = function (a,f,x,y,more){
if((a instanceof cljs.core.Atom)){
return cljs.core.reset_BANG_(a,cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,a.state,x,y,more));
} else {
return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$5(a,f,x,y,more);
}
};
var G__41013 = function (a,f,x,y,var_args){
var more = null;
if (arguments.length > 4) {
var G__41014__i = 0, G__41014__a = new Array(arguments.length -  4);
while (G__41014__i < G__41014__a.length) {G__41014__a[G__41014__i] = arguments[G__41014__i + 4]; ++G__41014__i;}
  more = new cljs.core.IndexedSeq(G__41014__a,0);
} 
return G__41013__delegate.call(this,a,f,x,y,more);};
G__41013.cljs$lang$maxFixedArity = 4;
G__41013.cljs$lang$applyTo = (function (arglist__41015){
var a = cljs.core.first(arglist__41015);
arglist__41015 = cljs.core.next(arglist__41015);
var f = cljs.core.first(arglist__41015);
arglist__41015 = cljs.core.next(arglist__41015);
var x = cljs.core.first(arglist__41015);
arglist__41015 = cljs.core.next(arglist__41015);
var y = cljs.core.first(arglist__41015);
var more = cljs.core.rest(arglist__41015);
return G__41013__delegate(a,f,x,y,more);
});
G__41013.cljs$core$IFn$_invoke$arity$variadic = G__41013__delegate;
return G__41013;
})()
;
swap_BANG_ = function(a,f,x,y,var_args){
var more = var_args;
switch(arguments.length){
case 2:
return swap_BANG___2.call(this,a,f);
case 3:
return swap_BANG___3.call(this,a,f,x);
case 4:
return swap_BANG___4.call(this,a,f,x,y);
default:
var G__41016 = null;
if (arguments.length > 4) {
var G__41017__i = 0, G__41017__a = new Array(arguments.length -  4);
while (G__41017__i < G__41017__a.length) {G__41017__a[G__41017__i] = arguments[G__41017__i + 4]; ++G__41017__i;}
G__41016 = new cljs.core.IndexedSeq(G__41017__a,0);
}
return swap_BANG___5.cljs$core$IFn$_invoke$arity$variadic(a,f,x,y, G__41016);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
swap_BANG_.cljs$lang$maxFixedArity = 4;
swap_BANG_.cljs$lang$applyTo = swap_BANG___5.cljs$lang$applyTo;
swap_BANG_.cljs$core$IFn$_invoke$arity$2 = swap_BANG___2;
swap_BANG_.cljs$core$IFn$_invoke$arity$3 = swap_BANG___3;
swap_BANG_.cljs$core$IFn$_invoke$arity$4 = swap_BANG___4;
swap_BANG_.cljs$core$IFn$_invoke$arity$variadic = swap_BANG___5.cljs$core$IFn$_invoke$arity$variadic;
return swap_BANG_;
})()
;
/**
* Atomically sets the value of atom to newval if and only if the
* current value of the atom is equal to oldval. Returns true if
* set happened, else false.
*/
cljs.core.compare_and_set_BANG_ = (function compare_and_set_BANG_(a,oldval,newval){
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(a.cljs$core$IDeref$_deref$arity$1(null),oldval)){
cljs.core.reset_BANG_(a,newval);

return true;
} else {
return false;
}
});
/**
* Sets the validator-fn for an atom. validator-fn must be nil or a
* side-effect-free fn of one argument, which will be passed the intended
* new state on any state change. If the new state is unacceptable, the
* validator-fn should return false or throw an Error. If the current state
* is not acceptable to the new validator, an Error will be thrown and the
* validator will not be changed.
*/
cljs.core.set_validator_BANG_ = (function set_validator_BANG_(iref,val){
return iref.validator = val;
});
/**
* Gets the validator-fn for a var/ref/agent/atom.
*/
cljs.core.get_validator = (function get_validator(iref){
return iref.validator;
});

/**
* @constructor
*/
cljs.core.Volatile = (function (state){
this.state = state;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32768;
})
cljs.core.Volatile.prototype.cljs$core$IDeref$_deref$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.state;
});

cljs.core.Volatile.prototype.cljs$core$IVolatile$ = true;

cljs.core.Volatile.prototype.cljs$core$IVolatile$_vreset_BANG_$arity$2 = (function (_,new_state){
var self__ = this;
var ___$1 = this;
return self__.state = new_state;
});

cljs.core.Volatile.cljs$lang$type = true;

cljs.core.Volatile.cljs$lang$ctorStr = "cljs.core/Volatile";

cljs.core.Volatile.cljs$lang$ctorPrWriter = (function (this__24859__auto__,writer__24860__auto__,opt__24861__auto__){
return cljs.core._write(writer__24860__auto__,"cljs.core/Volatile");
});

cljs.core.__GT_Volatile = (function __GT_Volatile(state){
return (new cljs.core.Volatile(state));
});

/**
* Creates and returns a Volatile with an initial value of val.
*/
cljs.core.volatile_BANG_ = (function volatile_BANG_(val){
return (new cljs.core.Volatile(val));
});
/**
* Returns true if x is a volatile.
*/
cljs.core.volatile_QMARK_ = (function volatile_QMARK_(x){
return (x instanceof cljs.core.Volatile);
});
/**
* Sets the value of volatile to newval without regard for the
* current value. Returns newval.
*/
cljs.core.vreset_BANG_ = (function vreset_BANG_(vol,newval){
return cljs.core._vreset_BANG_(vol,newval);
});
/**
* Returns a lazy sequence of the non-nil results of (f index item). Note,
* this means false return values will be included.  f must be free of
* side-effects.  Returns a stateful transducer when no collection is
* provided.
*/
cljs.core.keep_indexed = (function() {
var keep_indexed = null;
var keep_indexed__1 = (function (f){
return (function (rf){
var ia = cljs.core.volatile_BANG_((-1));
return ((function (ia){
return (function() {
var G__41084 = null;
var G__41084__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__41084__1 = (function (result){
var G__41051 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__41051) : rf.call(null,G__41051));
});
var G__41084__2 = (function (result,input){
var i = ia.cljs$core$IVolatile$_vreset_BANG_$arity$2(null,(ia.cljs$core$IDeref$_deref$arity$1(null) + (1)));
var v = (function (){var G__41052 = i;
var G__41053 = input;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__41052,G__41053) : f.call(null,G__41052,G__41053));
})();
if((v == null)){
return result;
} else {
var G__41054 = result;
var G__41055 = v;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__41054,G__41055) : rf.call(null,G__41054,G__41055));
}
});
G__41084 = function(result,input){
switch(arguments.length){
case 0:
return G__41084__0.call(this);
case 1:
return G__41084__1.call(this,result);
case 2:
return G__41084__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__41084.cljs$core$IFn$_invoke$arity$0 = G__41084__0;
G__41084.cljs$core$IFn$_invoke$arity$1 = G__41084__1;
G__41084.cljs$core$IFn$_invoke$arity$2 = G__41084__2;
return G__41084;
})()
;})(ia))
});
});
var keep_indexed__2 = (function (f,coll){
var keepi = (function keepi(idx,coll__$1){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll__$1);
if(temp__4126__auto__){
var s = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(s)){
var c = cljs.core.chunk_first(s);
var size = cljs.core.count(c);
var b = cljs.core.chunk_buffer(size);
var n__25159__auto___41085 = size;
var i_41086 = (0);
while(true){
if((i_41086 < n__25159__auto___41085)){
var x_41087 = (function (){var G__41080 = (idx + i_41086);
var G__41081 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c,i_41086);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__41080,G__41081) : f.call(null,G__41080,G__41081));
})();
if((x_41087 == null)){
} else {
cljs.core.chunk_append(b,x_41087);
}

var G__41088 = (i_41086 + (1));
i_41086 = G__41088;
continue;
} else {
}
break;
}

return cljs.core.chunk_cons(cljs.core.chunk(b),keepi((idx + size),cljs.core.chunk_rest(s)));
} else {
var x = (function (){var G__41082 = idx;
var G__41083 = cljs.core.first(s);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__41082,G__41083) : f.call(null,G__41082,G__41083));
})();
if((x == null)){
return keepi((idx + (1)),cljs.core.rest(s));
} else {
return cljs.core.cons(x,keepi((idx + (1)),cljs.core.rest(s)));
}
}
} else {
return null;
}
}),null,null));
});
return keepi((0),coll);
});
keep_indexed = function(f,coll){
switch(arguments.length){
case 1:
return keep_indexed__1.call(this,f);
case 2:
return keep_indexed__2.call(this,f,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
keep_indexed.cljs$core$IFn$_invoke$arity$1 = keep_indexed__1;
keep_indexed.cljs$core$IFn$_invoke$arity$2 = keep_indexed__2;
return keep_indexed;
})()
;
/**
* Takes a set of predicates and returns a function f that returns true if all of its
* composing predicates return a logical true value against all of its arguments, else it returns
* false. Note that f is short-circuiting in that it will stop execution on the first
* argument that triggers a logical false result against the original predicates.
* @param {...*} var_args
*/
cljs.core.every_pred = (function() {
var every_pred = null;
var every_pred__1 = (function (p){
return (function() {
var ep1 = null;
var ep1__0 = (function (){
return true;
});
var ep1__1 = (function (x){
return cljs.core.boolean$((function (){var G__41302 = x;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__41302) : p.call(null,G__41302));
})());
});
var ep1__2 = (function (x,y){
return cljs.core.boolean$((function (){var and__24260__auto__ = (function (){var G__41304 = x;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__41304) : p.call(null,G__41304));
})();
if(cljs.core.truth_(and__24260__auto__)){
var G__41305 = y;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__41305) : p.call(null,G__41305));
} else {
return and__24260__auto__;
}
})());
});
var ep1__3 = (function (x,y,z){
return cljs.core.boolean$((function (){var and__24260__auto__ = (function (){var G__41307 = x;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__41307) : p.call(null,G__41307));
})();
if(cljs.core.truth_(and__24260__auto__)){
var and__24260__auto____$1 = (function (){var G__41309 = y;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__41309) : p.call(null,G__41309));
})();
if(cljs.core.truth_(and__24260__auto____$1)){
var G__41310 = z;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__41310) : p.call(null,G__41310));
} else {
return and__24260__auto____$1;
}
} else {
return and__24260__auto__;
}
})());
});
var ep1__4 = (function() { 
var G__41479__delegate = function (x,y,z,args){
return cljs.core.boolean$((ep1.cljs$core$IFn$_invoke$arity$3(x,y,z)) && (cljs.core.every_QMARK_(p,args)));
};
var G__41479 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__41480__i = 0, G__41480__a = new Array(arguments.length -  3);
while (G__41480__i < G__41480__a.length) {G__41480__a[G__41480__i] = arguments[G__41480__i + 3]; ++G__41480__i;}
  args = new cljs.core.IndexedSeq(G__41480__a,0);
} 
return G__41479__delegate.call(this,x,y,z,args);};
G__41479.cljs$lang$maxFixedArity = 3;
G__41479.cljs$lang$applyTo = (function (arglist__41481){
var x = cljs.core.first(arglist__41481);
arglist__41481 = cljs.core.next(arglist__41481);
var y = cljs.core.first(arglist__41481);
arglist__41481 = cljs.core.next(arglist__41481);
var z = cljs.core.first(arglist__41481);
var args = cljs.core.rest(arglist__41481);
return G__41479__delegate(x,y,z,args);
});
G__41479.cljs$core$IFn$_invoke$arity$variadic = G__41479__delegate;
return G__41479;
})()
;
ep1 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return ep1__0.call(this);
case 1:
return ep1__1.call(this,x);
case 2:
return ep1__2.call(this,x,y);
case 3:
return ep1__3.call(this,x,y,z);
default:
var G__41482 = null;
if (arguments.length > 3) {
var G__41483__i = 0, G__41483__a = new Array(arguments.length -  3);
while (G__41483__i < G__41483__a.length) {G__41483__a[G__41483__i] = arguments[G__41483__i + 3]; ++G__41483__i;}
G__41482 = new cljs.core.IndexedSeq(G__41483__a,0);
}
return ep1__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__41482);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
ep1.cljs$lang$maxFixedArity = 3;
ep1.cljs$lang$applyTo = ep1__4.cljs$lang$applyTo;
ep1.cljs$core$IFn$_invoke$arity$0 = ep1__0;
ep1.cljs$core$IFn$_invoke$arity$1 = ep1__1;
ep1.cljs$core$IFn$_invoke$arity$2 = ep1__2;
ep1.cljs$core$IFn$_invoke$arity$3 = ep1__3;
ep1.cljs$core$IFn$_invoke$arity$variadic = ep1__4.cljs$core$IFn$_invoke$arity$variadic;
return ep1;
})()
});
var every_pred__2 = (function (p1,p2){
return (function() {
var ep2 = null;
var ep2__0 = (function (){
return true;
});
var ep2__1 = (function (x){
return cljs.core.boolean$((function (){var and__24260__auto__ = (function (){var G__41342 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__41342) : p1.call(null,G__41342));
})();
if(cljs.core.truth_(and__24260__auto__)){
var G__41343 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__41343) : p2.call(null,G__41343));
} else {
return and__24260__auto__;
}
})());
});
var ep2__2 = (function (x,y){
return cljs.core.boolean$((function (){var and__24260__auto__ = (function (){var G__41345 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__41345) : p1.call(null,G__41345));
})();
if(cljs.core.truth_(and__24260__auto__)){
var and__24260__auto____$1 = (function (){var G__41347 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__41347) : p1.call(null,G__41347));
})();
if(cljs.core.truth_(and__24260__auto____$1)){
var and__24260__auto____$2 = (function (){var G__41349 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__41349) : p2.call(null,G__41349));
})();
if(cljs.core.truth_(and__24260__auto____$2)){
var G__41350 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__41350) : p2.call(null,G__41350));
} else {
return and__24260__auto____$2;
}
} else {
return and__24260__auto____$1;
}
} else {
return and__24260__auto__;
}
})());
});
var ep2__3 = (function (x,y,z){
return cljs.core.boolean$((function (){var and__24260__auto__ = (function (){var G__41352 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__41352) : p1.call(null,G__41352));
})();
if(cljs.core.truth_(and__24260__auto__)){
var and__24260__auto____$1 = (function (){var G__41354 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__41354) : p1.call(null,G__41354));
})();
if(cljs.core.truth_(and__24260__auto____$1)){
var and__24260__auto____$2 = (function (){var G__41356 = z;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__41356) : p1.call(null,G__41356));
})();
if(cljs.core.truth_(and__24260__auto____$2)){
var and__24260__auto____$3 = (function (){var G__41358 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__41358) : p2.call(null,G__41358));
})();
if(cljs.core.truth_(and__24260__auto____$3)){
var and__24260__auto____$4 = (function (){var G__41360 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__41360) : p2.call(null,G__41360));
})();
if(cljs.core.truth_(and__24260__auto____$4)){
var G__41361 = z;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__41361) : p2.call(null,G__41361));
} else {
return and__24260__auto____$4;
}
} else {
return and__24260__auto____$3;
}
} else {
return and__24260__auto____$2;
}
} else {
return and__24260__auto____$1;
}
} else {
return and__24260__auto__;
}
})());
});
var ep2__4 = (function() { 
var G__41484__delegate = function (x,y,z,args){
return cljs.core.boolean$((ep2.cljs$core$IFn$_invoke$arity$3(x,y,z)) && (cljs.core.every_QMARK_((function (p1__41089_SHARP_){
var and__24260__auto__ = (function (){var G__41366 = p1__41089_SHARP_;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__41366) : p1.call(null,G__41366));
})();
if(cljs.core.truth_(and__24260__auto__)){
var G__41367 = p1__41089_SHARP_;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__41367) : p2.call(null,G__41367));
} else {
return and__24260__auto__;
}
}),args)));
};
var G__41484 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__41485__i = 0, G__41485__a = new Array(arguments.length -  3);
while (G__41485__i < G__41485__a.length) {G__41485__a[G__41485__i] = arguments[G__41485__i + 3]; ++G__41485__i;}
  args = new cljs.core.IndexedSeq(G__41485__a,0);
} 
return G__41484__delegate.call(this,x,y,z,args);};
G__41484.cljs$lang$maxFixedArity = 3;
G__41484.cljs$lang$applyTo = (function (arglist__41486){
var x = cljs.core.first(arglist__41486);
arglist__41486 = cljs.core.next(arglist__41486);
var y = cljs.core.first(arglist__41486);
arglist__41486 = cljs.core.next(arglist__41486);
var z = cljs.core.first(arglist__41486);
var args = cljs.core.rest(arglist__41486);
return G__41484__delegate(x,y,z,args);
});
G__41484.cljs$core$IFn$_invoke$arity$variadic = G__41484__delegate;
return G__41484;
})()
;
ep2 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return ep2__0.call(this);
case 1:
return ep2__1.call(this,x);
case 2:
return ep2__2.call(this,x,y);
case 3:
return ep2__3.call(this,x,y,z);
default:
var G__41487 = null;
if (arguments.length > 3) {
var G__41488__i = 0, G__41488__a = new Array(arguments.length -  3);
while (G__41488__i < G__41488__a.length) {G__41488__a[G__41488__i] = arguments[G__41488__i + 3]; ++G__41488__i;}
G__41487 = new cljs.core.IndexedSeq(G__41488__a,0);
}
return ep2__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__41487);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
ep2.cljs$lang$maxFixedArity = 3;
ep2.cljs$lang$applyTo = ep2__4.cljs$lang$applyTo;
ep2.cljs$core$IFn$_invoke$arity$0 = ep2__0;
ep2.cljs$core$IFn$_invoke$arity$1 = ep2__1;
ep2.cljs$core$IFn$_invoke$arity$2 = ep2__2;
ep2.cljs$core$IFn$_invoke$arity$3 = ep2__3;
ep2.cljs$core$IFn$_invoke$arity$variadic = ep2__4.cljs$core$IFn$_invoke$arity$variadic;
return ep2;
})()
});
var every_pred__3 = (function (p1,p2,p3){
return (function() {
var ep3 = null;
var ep3__0 = (function (){
return true;
});
var ep3__1 = (function (x){
return cljs.core.boolean$((function (){var and__24260__auto__ = (function (){var G__41413 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__41413) : p1.call(null,G__41413));
})();
if(cljs.core.truth_(and__24260__auto__)){
var and__24260__auto____$1 = (function (){var G__41415 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__41415) : p2.call(null,G__41415));
})();
if(cljs.core.truth_(and__24260__auto____$1)){
var G__41416 = x;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__41416) : p3.call(null,G__41416));
} else {
return and__24260__auto____$1;
}
} else {
return and__24260__auto__;
}
})());
});
var ep3__2 = (function (x,y){
return cljs.core.boolean$((function (){var and__24260__auto__ = (function (){var G__41418 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__41418) : p1.call(null,G__41418));
})();
if(cljs.core.truth_(and__24260__auto__)){
var and__24260__auto____$1 = (function (){var G__41420 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__41420) : p2.call(null,G__41420));
})();
if(cljs.core.truth_(and__24260__auto____$1)){
var and__24260__auto____$2 = (function (){var G__41422 = x;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__41422) : p3.call(null,G__41422));
})();
if(cljs.core.truth_(and__24260__auto____$2)){
var and__24260__auto____$3 = (function (){var G__41424 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__41424) : p1.call(null,G__41424));
})();
if(cljs.core.truth_(and__24260__auto____$3)){
var and__24260__auto____$4 = (function (){var G__41426 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__41426) : p2.call(null,G__41426));
})();
if(cljs.core.truth_(and__24260__auto____$4)){
var G__41427 = y;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__41427) : p3.call(null,G__41427));
} else {
return and__24260__auto____$4;
}
} else {
return and__24260__auto____$3;
}
} else {
return and__24260__auto____$2;
}
} else {
return and__24260__auto____$1;
}
} else {
return and__24260__auto__;
}
})());
});
var ep3__3 = (function (x,y,z){
return cljs.core.boolean$((function (){var and__24260__auto__ = (function (){var G__41429 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__41429) : p1.call(null,G__41429));
})();
if(cljs.core.truth_(and__24260__auto__)){
var and__24260__auto____$1 = (function (){var G__41431 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__41431) : p2.call(null,G__41431));
})();
if(cljs.core.truth_(and__24260__auto____$1)){
var and__24260__auto____$2 = (function (){var G__41433 = x;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__41433) : p3.call(null,G__41433));
})();
if(cljs.core.truth_(and__24260__auto____$2)){
var and__24260__auto____$3 = (function (){var G__41435 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__41435) : p1.call(null,G__41435));
})();
if(cljs.core.truth_(and__24260__auto____$3)){
var and__24260__auto____$4 = (function (){var G__41437 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__41437) : p2.call(null,G__41437));
})();
if(cljs.core.truth_(and__24260__auto____$4)){
var and__24260__auto____$5 = (function (){var G__41439 = y;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__41439) : p3.call(null,G__41439));
})();
if(cljs.core.truth_(and__24260__auto____$5)){
var and__24260__auto____$6 = (function (){var G__41441 = z;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__41441) : p1.call(null,G__41441));
})();
if(cljs.core.truth_(and__24260__auto____$6)){
var and__24260__auto____$7 = (function (){var G__41443 = z;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__41443) : p2.call(null,G__41443));
})();
if(cljs.core.truth_(and__24260__auto____$7)){
var G__41444 = z;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__41444) : p3.call(null,G__41444));
} else {
return and__24260__auto____$7;
}
} else {
return and__24260__auto____$6;
}
} else {
return and__24260__auto____$5;
}
} else {
return and__24260__auto____$4;
}
} else {
return and__24260__auto____$3;
}
} else {
return and__24260__auto____$2;
}
} else {
return and__24260__auto____$1;
}
} else {
return and__24260__auto__;
}
})());
});
var ep3__4 = (function() { 
var G__41489__delegate = function (x,y,z,args){
return cljs.core.boolean$((ep3.cljs$core$IFn$_invoke$arity$3(x,y,z)) && (cljs.core.every_QMARK_((function (p1__41090_SHARP_){
var and__24260__auto__ = (function (){var G__41451 = p1__41090_SHARP_;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__41451) : p1.call(null,G__41451));
})();
if(cljs.core.truth_(and__24260__auto__)){
var and__24260__auto____$1 = (function (){var G__41453 = p1__41090_SHARP_;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__41453) : p2.call(null,G__41453));
})();
if(cljs.core.truth_(and__24260__auto____$1)){
var G__41454 = p1__41090_SHARP_;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__41454) : p3.call(null,G__41454));
} else {
return and__24260__auto____$1;
}
} else {
return and__24260__auto__;
}
}),args)));
};
var G__41489 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__41490__i = 0, G__41490__a = new Array(arguments.length -  3);
while (G__41490__i < G__41490__a.length) {G__41490__a[G__41490__i] = arguments[G__41490__i + 3]; ++G__41490__i;}
  args = new cljs.core.IndexedSeq(G__41490__a,0);
} 
return G__41489__delegate.call(this,x,y,z,args);};
G__41489.cljs$lang$maxFixedArity = 3;
G__41489.cljs$lang$applyTo = (function (arglist__41491){
var x = cljs.core.first(arglist__41491);
arglist__41491 = cljs.core.next(arglist__41491);
var y = cljs.core.first(arglist__41491);
arglist__41491 = cljs.core.next(arglist__41491);
var z = cljs.core.first(arglist__41491);
var args = cljs.core.rest(arglist__41491);
return G__41489__delegate(x,y,z,args);
});
G__41489.cljs$core$IFn$_invoke$arity$variadic = G__41489__delegate;
return G__41489;
})()
;
ep3 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return ep3__0.call(this);
case 1:
return ep3__1.call(this,x);
case 2:
return ep3__2.call(this,x,y);
case 3:
return ep3__3.call(this,x,y,z);
default:
var G__41492 = null;
if (arguments.length > 3) {
var G__41493__i = 0, G__41493__a = new Array(arguments.length -  3);
while (G__41493__i < G__41493__a.length) {G__41493__a[G__41493__i] = arguments[G__41493__i + 3]; ++G__41493__i;}
G__41492 = new cljs.core.IndexedSeq(G__41493__a,0);
}
return ep3__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__41492);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
ep3.cljs$lang$maxFixedArity = 3;
ep3.cljs$lang$applyTo = ep3__4.cljs$lang$applyTo;
ep3.cljs$core$IFn$_invoke$arity$0 = ep3__0;
ep3.cljs$core$IFn$_invoke$arity$1 = ep3__1;
ep3.cljs$core$IFn$_invoke$arity$2 = ep3__2;
ep3.cljs$core$IFn$_invoke$arity$3 = ep3__3;
ep3.cljs$core$IFn$_invoke$arity$variadic = ep3__4.cljs$core$IFn$_invoke$arity$variadic;
return ep3;
})()
});
var every_pred__4 = (function() { 
var G__41494__delegate = function (p1,p2,p3,ps){
var ps__$1 = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(p1,p2,p3,ps);
return ((function (ps__$1){
return (function() {
var epn = null;
var epn__0 = (function (){
return true;
});
var epn__1 = (function (x){
return cljs.core.every_QMARK_(((function (ps__$1){
return (function (p1__41091_SHARP_){
var G__41470 = x;
return (p1__41091_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__41091_SHARP_.cljs$core$IFn$_invoke$arity$1(G__41470) : p1__41091_SHARP_.call(null,G__41470));
});})(ps__$1))
,ps__$1);
});
var epn__2 = (function (x,y){
return cljs.core.every_QMARK_(((function (ps__$1){
return (function (p1__41092_SHARP_){
var and__24260__auto__ = (function (){var G__41472 = x;
return (p1__41092_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__41092_SHARP_.cljs$core$IFn$_invoke$arity$1(G__41472) : p1__41092_SHARP_.call(null,G__41472));
})();
if(cljs.core.truth_(and__24260__auto__)){
var G__41473 = y;
return (p1__41092_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__41092_SHARP_.cljs$core$IFn$_invoke$arity$1(G__41473) : p1__41092_SHARP_.call(null,G__41473));
} else {
return and__24260__auto__;
}
});})(ps__$1))
,ps__$1);
});
var epn__3 = (function (x,y,z){
return cljs.core.every_QMARK_(((function (ps__$1){
return (function (p1__41093_SHARP_){
var and__24260__auto__ = (function (){var G__41475 = x;
return (p1__41093_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__41093_SHARP_.cljs$core$IFn$_invoke$arity$1(G__41475) : p1__41093_SHARP_.call(null,G__41475));
})();
if(cljs.core.truth_(and__24260__auto__)){
var and__24260__auto____$1 = (function (){var G__41477 = y;
return (p1__41093_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__41093_SHARP_.cljs$core$IFn$_invoke$arity$1(G__41477) : p1__41093_SHARP_.call(null,G__41477));
})();
if(cljs.core.truth_(and__24260__auto____$1)){
var G__41478 = z;
return (p1__41093_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__41093_SHARP_.cljs$core$IFn$_invoke$arity$1(G__41478) : p1__41093_SHARP_.call(null,G__41478));
} else {
return and__24260__auto____$1;
}
} else {
return and__24260__auto__;
}
});})(ps__$1))
,ps__$1);
});
var epn__4 = (function() { 
var G__41495__delegate = function (x,y,z,args){
return cljs.core.boolean$((epn.cljs$core$IFn$_invoke$arity$3(x,y,z)) && (cljs.core.every_QMARK_(((function (ps__$1){
return (function (p1__41094_SHARP_){
return cljs.core.every_QMARK_(p1__41094_SHARP_,args);
});})(ps__$1))
,ps__$1)));
};
var G__41495 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__41496__i = 0, G__41496__a = new Array(arguments.length -  3);
while (G__41496__i < G__41496__a.length) {G__41496__a[G__41496__i] = arguments[G__41496__i + 3]; ++G__41496__i;}
  args = new cljs.core.IndexedSeq(G__41496__a,0);
} 
return G__41495__delegate.call(this,x,y,z,args);};
G__41495.cljs$lang$maxFixedArity = 3;
G__41495.cljs$lang$applyTo = (function (arglist__41497){
var x = cljs.core.first(arglist__41497);
arglist__41497 = cljs.core.next(arglist__41497);
var y = cljs.core.first(arglist__41497);
arglist__41497 = cljs.core.next(arglist__41497);
var z = cljs.core.first(arglist__41497);
var args = cljs.core.rest(arglist__41497);
return G__41495__delegate(x,y,z,args);
});
G__41495.cljs$core$IFn$_invoke$arity$variadic = G__41495__delegate;
return G__41495;
})()
;
epn = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return epn__0.call(this);
case 1:
return epn__1.call(this,x);
case 2:
return epn__2.call(this,x,y);
case 3:
return epn__3.call(this,x,y,z);
default:
var G__41498 = null;
if (arguments.length > 3) {
var G__41499__i = 0, G__41499__a = new Array(arguments.length -  3);
while (G__41499__i < G__41499__a.length) {G__41499__a[G__41499__i] = arguments[G__41499__i + 3]; ++G__41499__i;}
G__41498 = new cljs.core.IndexedSeq(G__41499__a,0);
}
return epn__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__41498);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
epn.cljs$lang$maxFixedArity = 3;
epn.cljs$lang$applyTo = epn__4.cljs$lang$applyTo;
epn.cljs$core$IFn$_invoke$arity$0 = epn__0;
epn.cljs$core$IFn$_invoke$arity$1 = epn__1;
epn.cljs$core$IFn$_invoke$arity$2 = epn__2;
epn.cljs$core$IFn$_invoke$arity$3 = epn__3;
epn.cljs$core$IFn$_invoke$arity$variadic = epn__4.cljs$core$IFn$_invoke$arity$variadic;
return epn;
})()
;})(ps__$1))
};
var G__41494 = function (p1,p2,p3,var_args){
var ps = null;
if (arguments.length > 3) {
var G__41500__i = 0, G__41500__a = new Array(arguments.length -  3);
while (G__41500__i < G__41500__a.length) {G__41500__a[G__41500__i] = arguments[G__41500__i + 3]; ++G__41500__i;}
  ps = new cljs.core.IndexedSeq(G__41500__a,0);
} 
return G__41494__delegate.call(this,p1,p2,p3,ps);};
G__41494.cljs$lang$maxFixedArity = 3;
G__41494.cljs$lang$applyTo = (function (arglist__41501){
var p1 = cljs.core.first(arglist__41501);
arglist__41501 = cljs.core.next(arglist__41501);
var p2 = cljs.core.first(arglist__41501);
arglist__41501 = cljs.core.next(arglist__41501);
var p3 = cljs.core.first(arglist__41501);
var ps = cljs.core.rest(arglist__41501);
return G__41494__delegate(p1,p2,p3,ps);
});
G__41494.cljs$core$IFn$_invoke$arity$variadic = G__41494__delegate;
return G__41494;
})()
;
every_pred = function(p1,p2,p3,var_args){
var ps = var_args;
switch(arguments.length){
case 1:
return every_pred__1.call(this,p1);
case 2:
return every_pred__2.call(this,p1,p2);
case 3:
return every_pred__3.call(this,p1,p2,p3);
default:
var G__41502 = null;
if (arguments.length > 3) {
var G__41503__i = 0, G__41503__a = new Array(arguments.length -  3);
while (G__41503__i < G__41503__a.length) {G__41503__a[G__41503__i] = arguments[G__41503__i + 3]; ++G__41503__i;}
G__41502 = new cljs.core.IndexedSeq(G__41503__a,0);
}
return every_pred__4.cljs$core$IFn$_invoke$arity$variadic(p1,p2,p3, G__41502);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
every_pred.cljs$lang$maxFixedArity = 3;
every_pred.cljs$lang$applyTo = every_pred__4.cljs$lang$applyTo;
every_pred.cljs$core$IFn$_invoke$arity$1 = every_pred__1;
every_pred.cljs$core$IFn$_invoke$arity$2 = every_pred__2;
every_pred.cljs$core$IFn$_invoke$arity$3 = every_pred__3;
every_pred.cljs$core$IFn$_invoke$arity$variadic = every_pred__4.cljs$core$IFn$_invoke$arity$variadic;
return every_pred;
})()
;
/**
* Takes a set of predicates and returns a function f that returns the first logical true value
* returned by one of its composing predicates against any of its arguments, else it returns
* logical false. Note that f is short-circuiting in that it will stop execution on the first
* argument that triggers a logical true result against the original predicates.
* @param {...*} var_args
*/
cljs.core.some_fn = (function() {
var some_fn = null;
var some_fn__1 = (function (p){
return (function() {
var sp1 = null;
var sp1__0 = (function (){
return null;
});
var sp1__1 = (function (x){
var G__41709 = x;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__41709) : p.call(null,G__41709));
});
var sp1__2 = (function (x,y){
var or__24272__auto__ = (function (){var G__41711 = x;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__41711) : p.call(null,G__41711));
})();
if(cljs.core.truth_(or__24272__auto__)){
return or__24272__auto__;
} else {
var G__41712 = y;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__41712) : p.call(null,G__41712));
}
});
var sp1__3 = (function (x,y,z){
var or__24272__auto__ = (function (){var G__41714 = x;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__41714) : p.call(null,G__41714));
})();
if(cljs.core.truth_(or__24272__auto__)){
return or__24272__auto__;
} else {
var or__24272__auto____$1 = (function (){var G__41716 = y;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__41716) : p.call(null,G__41716));
})();
if(cljs.core.truth_(or__24272__auto____$1)){
return or__24272__auto____$1;
} else {
var G__41717 = z;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__41717) : p.call(null,G__41717));
}
}
});
var sp1__4 = (function() { 
var G__41878__delegate = function (x,y,z,args){
var or__24272__auto__ = sp1.cljs$core$IFn$_invoke$arity$3(x,y,z);
if(cljs.core.truth_(or__24272__auto__)){
return or__24272__auto__;
} else {
return cljs.core.some(p,args);
}
};
var G__41878 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__41879__i = 0, G__41879__a = new Array(arguments.length -  3);
while (G__41879__i < G__41879__a.length) {G__41879__a[G__41879__i] = arguments[G__41879__i + 3]; ++G__41879__i;}
  args = new cljs.core.IndexedSeq(G__41879__a,0);
} 
return G__41878__delegate.call(this,x,y,z,args);};
G__41878.cljs$lang$maxFixedArity = 3;
G__41878.cljs$lang$applyTo = (function (arglist__41880){
var x = cljs.core.first(arglist__41880);
arglist__41880 = cljs.core.next(arglist__41880);
var y = cljs.core.first(arglist__41880);
arglist__41880 = cljs.core.next(arglist__41880);
var z = cljs.core.first(arglist__41880);
var args = cljs.core.rest(arglist__41880);
return G__41878__delegate(x,y,z,args);
});
G__41878.cljs$core$IFn$_invoke$arity$variadic = G__41878__delegate;
return G__41878;
})()
;
sp1 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return sp1__0.call(this);
case 1:
return sp1__1.call(this,x);
case 2:
return sp1__2.call(this,x,y);
case 3:
return sp1__3.call(this,x,y,z);
default:
var G__41881 = null;
if (arguments.length > 3) {
var G__41882__i = 0, G__41882__a = new Array(arguments.length -  3);
while (G__41882__i < G__41882__a.length) {G__41882__a[G__41882__i] = arguments[G__41882__i + 3]; ++G__41882__i;}
G__41881 = new cljs.core.IndexedSeq(G__41882__a,0);
}
return sp1__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__41881);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
sp1.cljs$lang$maxFixedArity = 3;
sp1.cljs$lang$applyTo = sp1__4.cljs$lang$applyTo;
sp1.cljs$core$IFn$_invoke$arity$0 = sp1__0;
sp1.cljs$core$IFn$_invoke$arity$1 = sp1__1;
sp1.cljs$core$IFn$_invoke$arity$2 = sp1__2;
sp1.cljs$core$IFn$_invoke$arity$3 = sp1__3;
sp1.cljs$core$IFn$_invoke$arity$variadic = sp1__4.cljs$core$IFn$_invoke$arity$variadic;
return sp1;
})()
});
var some_fn__2 = (function (p1,p2){
return (function() {
var sp2 = null;
var sp2__0 = (function (){
return null;
});
var sp2__1 = (function (x){
var or__24272__auto__ = (function (){var G__41749 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__41749) : p1.call(null,G__41749));
})();
if(cljs.core.truth_(or__24272__auto__)){
return or__24272__auto__;
} else {
var G__41750 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__41750) : p2.call(null,G__41750));
}
});
var sp2__2 = (function (x,y){
var or__24272__auto__ = (function (){var G__41752 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__41752) : p1.call(null,G__41752));
})();
if(cljs.core.truth_(or__24272__auto__)){
return or__24272__auto__;
} else {
var or__24272__auto____$1 = (function (){var G__41754 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__41754) : p1.call(null,G__41754));
})();
if(cljs.core.truth_(or__24272__auto____$1)){
return or__24272__auto____$1;
} else {
var or__24272__auto____$2 = (function (){var G__41756 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__41756) : p2.call(null,G__41756));
})();
if(cljs.core.truth_(or__24272__auto____$2)){
return or__24272__auto____$2;
} else {
var G__41757 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__41757) : p2.call(null,G__41757));
}
}
}
});
var sp2__3 = (function (x,y,z){
var or__24272__auto__ = (function (){var G__41759 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__41759) : p1.call(null,G__41759));
})();
if(cljs.core.truth_(or__24272__auto__)){
return or__24272__auto__;
} else {
var or__24272__auto____$1 = (function (){var G__41761 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__41761) : p1.call(null,G__41761));
})();
if(cljs.core.truth_(or__24272__auto____$1)){
return or__24272__auto____$1;
} else {
var or__24272__auto____$2 = (function (){var G__41763 = z;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__41763) : p1.call(null,G__41763));
})();
if(cljs.core.truth_(or__24272__auto____$2)){
return or__24272__auto____$2;
} else {
var or__24272__auto____$3 = (function (){var G__41765 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__41765) : p2.call(null,G__41765));
})();
if(cljs.core.truth_(or__24272__auto____$3)){
return or__24272__auto____$3;
} else {
var or__24272__auto____$4 = (function (){var G__41767 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__41767) : p2.call(null,G__41767));
})();
if(cljs.core.truth_(or__24272__auto____$4)){
return or__24272__auto____$4;
} else {
var G__41768 = z;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__41768) : p2.call(null,G__41768));
}
}
}
}
}
});
var sp2__4 = (function() { 
var G__41883__delegate = function (x,y,z,args){
var or__24272__auto__ = sp2.cljs$core$IFn$_invoke$arity$3(x,y,z);
if(cljs.core.truth_(or__24272__auto__)){
return or__24272__auto__;
} else {
return cljs.core.some(((function (or__24272__auto__){
return (function (p1__41504_SHARP_){
var or__24272__auto____$1 = (function (){var G__41770 = p1__41504_SHARP_;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__41770) : p1.call(null,G__41770));
})();
if(cljs.core.truth_(or__24272__auto____$1)){
return or__24272__auto____$1;
} else {
var G__41771 = p1__41504_SHARP_;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__41771) : p2.call(null,G__41771));
}
});})(or__24272__auto__))
,args);
}
};
var G__41883 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__41884__i = 0, G__41884__a = new Array(arguments.length -  3);
while (G__41884__i < G__41884__a.length) {G__41884__a[G__41884__i] = arguments[G__41884__i + 3]; ++G__41884__i;}
  args = new cljs.core.IndexedSeq(G__41884__a,0);
} 
return G__41883__delegate.call(this,x,y,z,args);};
G__41883.cljs$lang$maxFixedArity = 3;
G__41883.cljs$lang$applyTo = (function (arglist__41885){
var x = cljs.core.first(arglist__41885);
arglist__41885 = cljs.core.next(arglist__41885);
var y = cljs.core.first(arglist__41885);
arglist__41885 = cljs.core.next(arglist__41885);
var z = cljs.core.first(arglist__41885);
var args = cljs.core.rest(arglist__41885);
return G__41883__delegate(x,y,z,args);
});
G__41883.cljs$core$IFn$_invoke$arity$variadic = G__41883__delegate;
return G__41883;
})()
;
sp2 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return sp2__0.call(this);
case 1:
return sp2__1.call(this,x);
case 2:
return sp2__2.call(this,x,y);
case 3:
return sp2__3.call(this,x,y,z);
default:
var G__41886 = null;
if (arguments.length > 3) {
var G__41887__i = 0, G__41887__a = new Array(arguments.length -  3);
while (G__41887__i < G__41887__a.length) {G__41887__a[G__41887__i] = arguments[G__41887__i + 3]; ++G__41887__i;}
G__41886 = new cljs.core.IndexedSeq(G__41887__a,0);
}
return sp2__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__41886);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
sp2.cljs$lang$maxFixedArity = 3;
sp2.cljs$lang$applyTo = sp2__4.cljs$lang$applyTo;
sp2.cljs$core$IFn$_invoke$arity$0 = sp2__0;
sp2.cljs$core$IFn$_invoke$arity$1 = sp2__1;
sp2.cljs$core$IFn$_invoke$arity$2 = sp2__2;
sp2.cljs$core$IFn$_invoke$arity$3 = sp2__3;
sp2.cljs$core$IFn$_invoke$arity$variadic = sp2__4.cljs$core$IFn$_invoke$arity$variadic;
return sp2;
})()
});
var some_fn__3 = (function (p1,p2,p3){
return (function() {
var sp3 = null;
var sp3__0 = (function (){
return null;
});
var sp3__1 = (function (x){
var or__24272__auto__ = (function (){var G__41817 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__41817) : p1.call(null,G__41817));
})();
if(cljs.core.truth_(or__24272__auto__)){
return or__24272__auto__;
} else {
var or__24272__auto____$1 = (function (){var G__41819 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__41819) : p2.call(null,G__41819));
})();
if(cljs.core.truth_(or__24272__auto____$1)){
return or__24272__auto____$1;
} else {
var G__41820 = x;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__41820) : p3.call(null,G__41820));
}
}
});
var sp3__2 = (function (x,y){
var or__24272__auto__ = (function (){var G__41822 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__41822) : p1.call(null,G__41822));
})();
if(cljs.core.truth_(or__24272__auto__)){
return or__24272__auto__;
} else {
var or__24272__auto____$1 = (function (){var G__41824 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__41824) : p2.call(null,G__41824));
})();
if(cljs.core.truth_(or__24272__auto____$1)){
return or__24272__auto____$1;
} else {
var or__24272__auto____$2 = (function (){var G__41826 = x;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__41826) : p3.call(null,G__41826));
})();
if(cljs.core.truth_(or__24272__auto____$2)){
return or__24272__auto____$2;
} else {
var or__24272__auto____$3 = (function (){var G__41828 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__41828) : p1.call(null,G__41828));
})();
if(cljs.core.truth_(or__24272__auto____$3)){
return or__24272__auto____$3;
} else {
var or__24272__auto____$4 = (function (){var G__41830 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__41830) : p2.call(null,G__41830));
})();
if(cljs.core.truth_(or__24272__auto____$4)){
return or__24272__auto____$4;
} else {
var G__41831 = y;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__41831) : p3.call(null,G__41831));
}
}
}
}
}
});
var sp3__3 = (function (x,y,z){
var or__24272__auto__ = (function (){var G__41833 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__41833) : p1.call(null,G__41833));
})();
if(cljs.core.truth_(or__24272__auto__)){
return or__24272__auto__;
} else {
var or__24272__auto____$1 = (function (){var G__41835 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__41835) : p2.call(null,G__41835));
})();
if(cljs.core.truth_(or__24272__auto____$1)){
return or__24272__auto____$1;
} else {
var or__24272__auto____$2 = (function (){var G__41837 = x;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__41837) : p3.call(null,G__41837));
})();
if(cljs.core.truth_(or__24272__auto____$2)){
return or__24272__auto____$2;
} else {
var or__24272__auto____$3 = (function (){var G__41839 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__41839) : p1.call(null,G__41839));
})();
if(cljs.core.truth_(or__24272__auto____$3)){
return or__24272__auto____$3;
} else {
var or__24272__auto____$4 = (function (){var G__41841 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__41841) : p2.call(null,G__41841));
})();
if(cljs.core.truth_(or__24272__auto____$4)){
return or__24272__auto____$4;
} else {
var or__24272__auto____$5 = (function (){var G__41843 = y;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__41843) : p3.call(null,G__41843));
})();
if(cljs.core.truth_(or__24272__auto____$5)){
return or__24272__auto____$5;
} else {
var or__24272__auto____$6 = (function (){var G__41845 = z;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__41845) : p1.call(null,G__41845));
})();
if(cljs.core.truth_(or__24272__auto____$6)){
return or__24272__auto____$6;
} else {
var or__24272__auto____$7 = (function (){var G__41847 = z;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__41847) : p2.call(null,G__41847));
})();
if(cljs.core.truth_(or__24272__auto____$7)){
return or__24272__auto____$7;
} else {
var G__41848 = z;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__41848) : p3.call(null,G__41848));
}
}
}
}
}
}
}
}
});
var sp3__4 = (function() { 
var G__41888__delegate = function (x,y,z,args){
var or__24272__auto__ = sp3.cljs$core$IFn$_invoke$arity$3(x,y,z);
if(cljs.core.truth_(or__24272__auto__)){
return or__24272__auto__;
} else {
return cljs.core.some(((function (or__24272__auto__){
return (function (p1__41505_SHARP_){
var or__24272__auto____$1 = (function (){var G__41850 = p1__41505_SHARP_;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__41850) : p1.call(null,G__41850));
})();
if(cljs.core.truth_(or__24272__auto____$1)){
return or__24272__auto____$1;
} else {
var or__24272__auto____$2 = (function (){var G__41852 = p1__41505_SHARP_;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__41852) : p2.call(null,G__41852));
})();
if(cljs.core.truth_(or__24272__auto____$2)){
return or__24272__auto____$2;
} else {
var G__41853 = p1__41505_SHARP_;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__41853) : p3.call(null,G__41853));
}
}
});})(or__24272__auto__))
,args);
}
};
var G__41888 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__41889__i = 0, G__41889__a = new Array(arguments.length -  3);
while (G__41889__i < G__41889__a.length) {G__41889__a[G__41889__i] = arguments[G__41889__i + 3]; ++G__41889__i;}
  args = new cljs.core.IndexedSeq(G__41889__a,0);
} 
return G__41888__delegate.call(this,x,y,z,args);};
G__41888.cljs$lang$maxFixedArity = 3;
G__41888.cljs$lang$applyTo = (function (arglist__41890){
var x = cljs.core.first(arglist__41890);
arglist__41890 = cljs.core.next(arglist__41890);
var y = cljs.core.first(arglist__41890);
arglist__41890 = cljs.core.next(arglist__41890);
var z = cljs.core.first(arglist__41890);
var args = cljs.core.rest(arglist__41890);
return G__41888__delegate(x,y,z,args);
});
G__41888.cljs$core$IFn$_invoke$arity$variadic = G__41888__delegate;
return G__41888;
})()
;
sp3 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return sp3__0.call(this);
case 1:
return sp3__1.call(this,x);
case 2:
return sp3__2.call(this,x,y);
case 3:
return sp3__3.call(this,x,y,z);
default:
var G__41891 = null;
if (arguments.length > 3) {
var G__41892__i = 0, G__41892__a = new Array(arguments.length -  3);
while (G__41892__i < G__41892__a.length) {G__41892__a[G__41892__i] = arguments[G__41892__i + 3]; ++G__41892__i;}
G__41891 = new cljs.core.IndexedSeq(G__41892__a,0);
}
return sp3__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__41891);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
sp3.cljs$lang$maxFixedArity = 3;
sp3.cljs$lang$applyTo = sp3__4.cljs$lang$applyTo;
sp3.cljs$core$IFn$_invoke$arity$0 = sp3__0;
sp3.cljs$core$IFn$_invoke$arity$1 = sp3__1;
sp3.cljs$core$IFn$_invoke$arity$2 = sp3__2;
sp3.cljs$core$IFn$_invoke$arity$3 = sp3__3;
sp3.cljs$core$IFn$_invoke$arity$variadic = sp3__4.cljs$core$IFn$_invoke$arity$variadic;
return sp3;
})()
});
var some_fn__4 = (function() { 
var G__41893__delegate = function (p1,p2,p3,ps){
var ps__$1 = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(p1,p2,p3,ps);
return ((function (ps__$1){
return (function() {
var spn = null;
var spn__0 = (function (){
return null;
});
var spn__1 = (function (x){
return cljs.core.some(((function (ps__$1){
return (function (p1__41506_SHARP_){
var G__41869 = x;
return (p1__41506_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__41506_SHARP_.cljs$core$IFn$_invoke$arity$1(G__41869) : p1__41506_SHARP_.call(null,G__41869));
});})(ps__$1))
,ps__$1);
});
var spn__2 = (function (x,y){
return cljs.core.some(((function (ps__$1){
return (function (p1__41507_SHARP_){
var or__24272__auto__ = (function (){var G__41871 = x;
return (p1__41507_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__41507_SHARP_.cljs$core$IFn$_invoke$arity$1(G__41871) : p1__41507_SHARP_.call(null,G__41871));
})();
if(cljs.core.truth_(or__24272__auto__)){
return or__24272__auto__;
} else {
var G__41872 = y;
return (p1__41507_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__41507_SHARP_.cljs$core$IFn$_invoke$arity$1(G__41872) : p1__41507_SHARP_.call(null,G__41872));
}
});})(ps__$1))
,ps__$1);
});
var spn__3 = (function (x,y,z){
return cljs.core.some(((function (ps__$1){
return (function (p1__41508_SHARP_){
var or__24272__auto__ = (function (){var G__41874 = x;
return (p1__41508_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__41508_SHARP_.cljs$core$IFn$_invoke$arity$1(G__41874) : p1__41508_SHARP_.call(null,G__41874));
})();
if(cljs.core.truth_(or__24272__auto__)){
return or__24272__auto__;
} else {
var or__24272__auto____$1 = (function (){var G__41876 = y;
return (p1__41508_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__41508_SHARP_.cljs$core$IFn$_invoke$arity$1(G__41876) : p1__41508_SHARP_.call(null,G__41876));
})();
if(cljs.core.truth_(or__24272__auto____$1)){
return or__24272__auto____$1;
} else {
var G__41877 = z;
return (p1__41508_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__41508_SHARP_.cljs$core$IFn$_invoke$arity$1(G__41877) : p1__41508_SHARP_.call(null,G__41877));
}
}
});})(ps__$1))
,ps__$1);
});
var spn__4 = (function() { 
var G__41894__delegate = function (x,y,z,args){
var or__24272__auto__ = spn.cljs$core$IFn$_invoke$arity$3(x,y,z);
if(cljs.core.truth_(or__24272__auto__)){
return or__24272__auto__;
} else {
return cljs.core.some(((function (or__24272__auto__,ps__$1){
return (function (p1__41509_SHARP_){
return cljs.core.some(p1__41509_SHARP_,args);
});})(or__24272__auto__,ps__$1))
,ps__$1);
}
};
var G__41894 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__41895__i = 0, G__41895__a = new Array(arguments.length -  3);
while (G__41895__i < G__41895__a.length) {G__41895__a[G__41895__i] = arguments[G__41895__i + 3]; ++G__41895__i;}
  args = new cljs.core.IndexedSeq(G__41895__a,0);
} 
return G__41894__delegate.call(this,x,y,z,args);};
G__41894.cljs$lang$maxFixedArity = 3;
G__41894.cljs$lang$applyTo = (function (arglist__41896){
var x = cljs.core.first(arglist__41896);
arglist__41896 = cljs.core.next(arglist__41896);
var y = cljs.core.first(arglist__41896);
arglist__41896 = cljs.core.next(arglist__41896);
var z = cljs.core.first(arglist__41896);
var args = cljs.core.rest(arglist__41896);
return G__41894__delegate(x,y,z,args);
});
G__41894.cljs$core$IFn$_invoke$arity$variadic = G__41894__delegate;
return G__41894;
})()
;
spn = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return spn__0.call(this);
case 1:
return spn__1.call(this,x);
case 2:
return spn__2.call(this,x,y);
case 3:
return spn__3.call(this,x,y,z);
default:
var G__41897 = null;
if (arguments.length > 3) {
var G__41898__i = 0, G__41898__a = new Array(arguments.length -  3);
while (G__41898__i < G__41898__a.length) {G__41898__a[G__41898__i] = arguments[G__41898__i + 3]; ++G__41898__i;}
G__41897 = new cljs.core.IndexedSeq(G__41898__a,0);
}
return spn__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__41897);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
spn.cljs$lang$maxFixedArity = 3;
spn.cljs$lang$applyTo = spn__4.cljs$lang$applyTo;
spn.cljs$core$IFn$_invoke$arity$0 = spn__0;
spn.cljs$core$IFn$_invoke$arity$1 = spn__1;
spn.cljs$core$IFn$_invoke$arity$2 = spn__2;
spn.cljs$core$IFn$_invoke$arity$3 = spn__3;
spn.cljs$core$IFn$_invoke$arity$variadic = spn__4.cljs$core$IFn$_invoke$arity$variadic;
return spn;
})()
;})(ps__$1))
};
var G__41893 = function (p1,p2,p3,var_args){
var ps = null;
if (arguments.length > 3) {
var G__41899__i = 0, G__41899__a = new Array(arguments.length -  3);
while (G__41899__i < G__41899__a.length) {G__41899__a[G__41899__i] = arguments[G__41899__i + 3]; ++G__41899__i;}
  ps = new cljs.core.IndexedSeq(G__41899__a,0);
} 
return G__41893__delegate.call(this,p1,p2,p3,ps);};
G__41893.cljs$lang$maxFixedArity = 3;
G__41893.cljs$lang$applyTo = (function (arglist__41900){
var p1 = cljs.core.first(arglist__41900);
arglist__41900 = cljs.core.next(arglist__41900);
var p2 = cljs.core.first(arglist__41900);
arglist__41900 = cljs.core.next(arglist__41900);
var p3 = cljs.core.first(arglist__41900);
var ps = cljs.core.rest(arglist__41900);
return G__41893__delegate(p1,p2,p3,ps);
});
G__41893.cljs$core$IFn$_invoke$arity$variadic = G__41893__delegate;
return G__41893;
})()
;
some_fn = function(p1,p2,p3,var_args){
var ps = var_args;
switch(arguments.length){
case 1:
return some_fn__1.call(this,p1);
case 2:
return some_fn__2.call(this,p1,p2);
case 3:
return some_fn__3.call(this,p1,p2,p3);
default:
var G__41901 = null;
if (arguments.length > 3) {
var G__41902__i = 0, G__41902__a = new Array(arguments.length -  3);
while (G__41902__i < G__41902__a.length) {G__41902__a[G__41902__i] = arguments[G__41902__i + 3]; ++G__41902__i;}
G__41901 = new cljs.core.IndexedSeq(G__41902__a,0);
}
return some_fn__4.cljs$core$IFn$_invoke$arity$variadic(p1,p2,p3, G__41901);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
some_fn.cljs$lang$maxFixedArity = 3;
some_fn.cljs$lang$applyTo = some_fn__4.cljs$lang$applyTo;
some_fn.cljs$core$IFn$_invoke$arity$1 = some_fn__1;
some_fn.cljs$core$IFn$_invoke$arity$2 = some_fn__2;
some_fn.cljs$core$IFn$_invoke$arity$3 = some_fn__3;
some_fn.cljs$core$IFn$_invoke$arity$variadic = some_fn__4.cljs$core$IFn$_invoke$arity$variadic;
return some_fn;
})()
;
/**
* Returns a lazy sequence consisting of the result of applying f to
* the set of first items of each coll, followed by applying f to the
* set of second items in each coll, until any one of the colls is
* exhausted.  Any remaining items in other colls are ignored. Function
* f should accept number-of-colls arguments. Returns a transducer when
* no collection is provided.
* @param {...*} var_args
*/
cljs.core.map = (function() {
var map = null;
var map__1 = (function (f){
return (function (rf){
return (function() {
var G__41957 = null;
var G__41957__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__41957__1 = (function (result){
var G__41943 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__41943) : rf.call(null,G__41943));
});
var G__41957__2 = (function (result,input){
var G__41944 = result;
var G__41945 = (function (){var G__41946 = input;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__41946) : f.call(null,G__41946));
})();
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__41944,G__41945) : rf.call(null,G__41944,G__41945));
});
var G__41957__3 = (function() { 
var G__41958__delegate = function (result,input,inputs){
var G__41947 = result;
var G__41948 = cljs.core.apply.cljs$core$IFn$_invoke$arity$3(f,input,inputs);
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__41947,G__41948) : rf.call(null,G__41947,G__41948));
};
var G__41958 = function (result,input,var_args){
var inputs = null;
if (arguments.length > 2) {
var G__41959__i = 0, G__41959__a = new Array(arguments.length -  2);
while (G__41959__i < G__41959__a.length) {G__41959__a[G__41959__i] = arguments[G__41959__i + 2]; ++G__41959__i;}
  inputs = new cljs.core.IndexedSeq(G__41959__a,0);
} 
return G__41958__delegate.call(this,result,input,inputs);};
G__41958.cljs$lang$maxFixedArity = 2;
G__41958.cljs$lang$applyTo = (function (arglist__41960){
var result = cljs.core.first(arglist__41960);
arglist__41960 = cljs.core.next(arglist__41960);
var input = cljs.core.first(arglist__41960);
var inputs = cljs.core.rest(arglist__41960);
return G__41958__delegate(result,input,inputs);
});
G__41958.cljs$core$IFn$_invoke$arity$variadic = G__41958__delegate;
return G__41958;
})()
;
G__41957 = function(result,input,var_args){
var inputs = var_args;
switch(arguments.length){
case 0:
return G__41957__0.call(this);
case 1:
return G__41957__1.call(this,result);
case 2:
return G__41957__2.call(this,result,input);
default:
var G__41961 = null;
if (arguments.length > 2) {
var G__41962__i = 0, G__41962__a = new Array(arguments.length -  2);
while (G__41962__i < G__41962__a.length) {G__41962__a[G__41962__i] = arguments[G__41962__i + 2]; ++G__41962__i;}
G__41961 = new cljs.core.IndexedSeq(G__41962__a,0);
}
return G__41957__3.cljs$core$IFn$_invoke$arity$variadic(result,input, G__41961);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__41957.cljs$lang$maxFixedArity = 2;
G__41957.cljs$lang$applyTo = G__41957__3.cljs$lang$applyTo;
G__41957.cljs$core$IFn$_invoke$arity$0 = G__41957__0;
G__41957.cljs$core$IFn$_invoke$arity$1 = G__41957__1;
G__41957.cljs$core$IFn$_invoke$arity$2 = G__41957__2;
G__41957.cljs$core$IFn$_invoke$arity$variadic = G__41957__3.cljs$core$IFn$_invoke$arity$variadic;
return G__41957;
})()
});
});
var map__2 = (function (f,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(s)){
var c = cljs.core.chunk_first(s);
var size = cljs.core.count(c);
var b = cljs.core.chunk_buffer(size);
var n__25159__auto___41963 = size;
var i_41964 = (0);
while(true){
if((i_41964 < n__25159__auto___41963)){
cljs.core.chunk_append(b,(function (){var G__41949 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c,i_41964);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__41949) : f.call(null,G__41949));
})());

var G__41965 = (i_41964 + (1));
i_41964 = G__41965;
continue;
} else {
}
break;
}

return cljs.core.chunk_cons(cljs.core.chunk(b),map.cljs$core$IFn$_invoke$arity$2(f,cljs.core.chunk_rest(s)));
} else {
return cljs.core.cons((function (){var G__41950 = cljs.core.first(s);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__41950) : f.call(null,G__41950));
})(),map.cljs$core$IFn$_invoke$arity$2(f,cljs.core.rest(s)));
}
} else {
return null;
}
}),null,null));
});
var map__3 = (function (f,c1,c2){
return (new cljs.core.LazySeq(null,(function (){
var s1 = cljs.core.seq(c1);
var s2 = cljs.core.seq(c2);
if((s1) && (s2)){
return cljs.core.cons((function (){var G__41951 = cljs.core.first(s1);
var G__41952 = cljs.core.first(s2);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__41951,G__41952) : f.call(null,G__41951,G__41952));
})(),map.cljs$core$IFn$_invoke$arity$3(f,cljs.core.rest(s1),cljs.core.rest(s2)));
} else {
return null;
}
}),null,null));
});
var map__4 = (function (f,c1,c2,c3){
return (new cljs.core.LazySeq(null,(function (){
var s1 = cljs.core.seq(c1);
var s2 = cljs.core.seq(c2);
var s3 = cljs.core.seq(c3);
if((s1) && (s2) && (s3)){
return cljs.core.cons((function (){var G__41953 = cljs.core.first(s1);
var G__41954 = cljs.core.first(s2);
var G__41955 = cljs.core.first(s3);
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__41953,G__41954,G__41955) : f.call(null,G__41953,G__41954,G__41955));
})(),map.cljs$core$IFn$_invoke$arity$4(f,cljs.core.rest(s1),cljs.core.rest(s2),cljs.core.rest(s3)));
} else {
return null;
}
}),null,null));
});
var map__5 = (function() { 
var G__41966__delegate = function (f,c1,c2,c3,colls){
var step = (function step(cs){
return (new cljs.core.LazySeq(null,(function (){
var ss = map.cljs$core$IFn$_invoke$arity$2(cljs.core.seq,cs);
if(cljs.core.every_QMARK_(cljs.core.identity,ss)){
return cljs.core.cons(map.cljs$core$IFn$_invoke$arity$2(cljs.core.first,ss),step(map.cljs$core$IFn$_invoke$arity$2(cljs.core.rest,ss)));
} else {
return null;
}
}),null,null));
});
return map.cljs$core$IFn$_invoke$arity$2(((function (step){
return (function (p1__41903_SHARP_){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$2(f,p1__41903_SHARP_);
});})(step))
,step(cljs.core.conj.cljs$core$IFn$_invoke$arity$variadic(colls,c3,cljs.core.array_seq([c2,c1], 0))));
};
var G__41966 = function (f,c1,c2,c3,var_args){
var colls = null;
if (arguments.length > 4) {
var G__41967__i = 0, G__41967__a = new Array(arguments.length -  4);
while (G__41967__i < G__41967__a.length) {G__41967__a[G__41967__i] = arguments[G__41967__i + 4]; ++G__41967__i;}
  colls = new cljs.core.IndexedSeq(G__41967__a,0);
} 
return G__41966__delegate.call(this,f,c1,c2,c3,colls);};
G__41966.cljs$lang$maxFixedArity = 4;
G__41966.cljs$lang$applyTo = (function (arglist__41968){
var f = cljs.core.first(arglist__41968);
arglist__41968 = cljs.core.next(arglist__41968);
var c1 = cljs.core.first(arglist__41968);
arglist__41968 = cljs.core.next(arglist__41968);
var c2 = cljs.core.first(arglist__41968);
arglist__41968 = cljs.core.next(arglist__41968);
var c3 = cljs.core.first(arglist__41968);
var colls = cljs.core.rest(arglist__41968);
return G__41966__delegate(f,c1,c2,c3,colls);
});
G__41966.cljs$core$IFn$_invoke$arity$variadic = G__41966__delegate;
return G__41966;
})()
;
map = function(f,c1,c2,c3,var_args){
var colls = var_args;
switch(arguments.length){
case 1:
return map__1.call(this,f);
case 2:
return map__2.call(this,f,c1);
case 3:
return map__3.call(this,f,c1,c2);
case 4:
return map__4.call(this,f,c1,c2,c3);
default:
var G__41969 = null;
if (arguments.length > 4) {
var G__41970__i = 0, G__41970__a = new Array(arguments.length -  4);
while (G__41970__i < G__41970__a.length) {G__41970__a[G__41970__i] = arguments[G__41970__i + 4]; ++G__41970__i;}
G__41969 = new cljs.core.IndexedSeq(G__41970__a,0);
}
return map__5.cljs$core$IFn$_invoke$arity$variadic(f,c1,c2,c3, G__41969);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
map.cljs$lang$maxFixedArity = 4;
map.cljs$lang$applyTo = map__5.cljs$lang$applyTo;
map.cljs$core$IFn$_invoke$arity$1 = map__1;
map.cljs$core$IFn$_invoke$arity$2 = map__2;
map.cljs$core$IFn$_invoke$arity$3 = map__3;
map.cljs$core$IFn$_invoke$arity$4 = map__4;
map.cljs$core$IFn$_invoke$arity$variadic = map__5.cljs$core$IFn$_invoke$arity$variadic;
return map;
})()
;
/**
* Returns a lazy sequence of the first n items in coll, or all items if
* there are fewer than n.  Returns a stateful transducer when
* no collection is provided.
*/
cljs.core.take = (function() {
var take = null;
var take__1 = (function (n){
return (function (rf){
var na = cljs.core.volatile_BANG_(n);
return ((function (na){
return (function() {
var G__41979 = null;
var G__41979__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__41979__1 = (function (result){
var G__41976 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__41976) : rf.call(null,G__41976));
});
var G__41979__2 = (function (result,input){
var n__$1 = cljs.core.deref(na);
var nn = na.cljs$core$IVolatile$_vreset_BANG_$arity$2(null,(na.cljs$core$IDeref$_deref$arity$1(null) - (1)));
var result__$1 = (((n__$1 > (0)))?(function (){var G__41977 = result;
var G__41978 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__41977,G__41978) : rf.call(null,G__41977,G__41978));
})():result);
if(!((nn > (0)))){
return cljs.core.ensure_reduced(result__$1);
} else {
return result__$1;
}
});
G__41979 = function(result,input){
switch(arguments.length){
case 0:
return G__41979__0.call(this);
case 1:
return G__41979__1.call(this,result);
case 2:
return G__41979__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__41979.cljs$core$IFn$_invoke$arity$0 = G__41979__0;
G__41979.cljs$core$IFn$_invoke$arity$1 = G__41979__1;
G__41979.cljs$core$IFn$_invoke$arity$2 = G__41979__2;
return G__41979;
})()
;})(na))
});
});
var take__2 = (function (n,coll){
return (new cljs.core.LazySeq(null,(function (){
if((n > (0))){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
return cljs.core.cons(cljs.core.first(s),take.cljs$core$IFn$_invoke$arity$2((n - (1)),cljs.core.rest(s)));
} else {
return null;
}
} else {
return null;
}
}),null,null));
});
take = function(n,coll){
switch(arguments.length){
case 1:
return take__1.call(this,n);
case 2:
return take__2.call(this,n,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
take.cljs$core$IFn$_invoke$arity$1 = take__1;
take.cljs$core$IFn$_invoke$arity$2 = take__2;
return take;
})()
;
/**
* Returns a lazy sequence of all but the first n items in coll.
* Returns a stateful transducer when no collection is provided.
*/
cljs.core.drop = (function() {
var drop = null;
var drop__1 = (function (n){
return (function (rf){
var na = cljs.core.volatile_BANG_(n);
return ((function (na){
return (function() {
var G__41986 = null;
var G__41986__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__41986__1 = (function (result){
var G__41983 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__41983) : rf.call(null,G__41983));
});
var G__41986__2 = (function (result,input){
var n__$1 = cljs.core.deref(na);
na.cljs$core$IVolatile$_vreset_BANG_$arity$2(null,(na.cljs$core$IDeref$_deref$arity$1(null) - (1)));

if((n__$1 > (0))){
return result;
} else {
var G__41984 = result;
var G__41985 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__41984,G__41985) : rf.call(null,G__41984,G__41985));
}
});
G__41986 = function(result,input){
switch(arguments.length){
case 0:
return G__41986__0.call(this);
case 1:
return G__41986__1.call(this,result);
case 2:
return G__41986__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__41986.cljs$core$IFn$_invoke$arity$0 = G__41986__0;
G__41986.cljs$core$IFn$_invoke$arity$1 = G__41986__1;
G__41986.cljs$core$IFn$_invoke$arity$2 = G__41986__2;
return G__41986;
})()
;})(na))
});
});
var drop__2 = (function (n,coll){
var step = (function (n__$1,coll__$1){
while(true){
var s = cljs.core.seq(coll__$1);
if(((n__$1 > (0))) && (s)){
var G__41987 = (n__$1 - (1));
var G__41988 = cljs.core.rest(s);
n__$1 = G__41987;
coll__$1 = G__41988;
continue;
} else {
return s;
}
break;
}
});
return (new cljs.core.LazySeq(null,((function (step){
return (function (){
return step(n,coll);
});})(step))
,null,null));
});
drop = function(n,coll){
switch(arguments.length){
case 1:
return drop__1.call(this,n);
case 2:
return drop__2.call(this,n,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
drop.cljs$core$IFn$_invoke$arity$1 = drop__1;
drop.cljs$core$IFn$_invoke$arity$2 = drop__2;
return drop;
})()
;
/**
* Return a lazy sequence of all but the last n (default 1) items in coll
*/
cljs.core.drop_last = (function() {
var drop_last = null;
var drop_last__1 = (function (s){
return drop_last.cljs$core$IFn$_invoke$arity$2((1),s);
});
var drop_last__2 = (function (n,s){
return cljs.core.map.cljs$core$IFn$_invoke$arity$3((function (x,_){
return x;
}),s,cljs.core.drop.cljs$core$IFn$_invoke$arity$2(n,s));
});
drop_last = function(n,s){
switch(arguments.length){
case 1:
return drop_last__1.call(this,n);
case 2:
return drop_last__2.call(this,n,s);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
drop_last.cljs$core$IFn$_invoke$arity$1 = drop_last__1;
drop_last.cljs$core$IFn$_invoke$arity$2 = drop_last__2;
return drop_last;
})()
;
/**
* Returns a seq of the last n items in coll.  Depending on the type
* of coll may be no better than linear time.  For vectors, see also subvec.
*/
cljs.core.take_last = (function take_last(n,coll){
var s = cljs.core.seq(coll);
var lead = cljs.core.seq(cljs.core.drop.cljs$core$IFn$_invoke$arity$2(n,coll));
while(true){
if(lead){
var G__41991 = cljs.core.next(s);
var G__41992 = cljs.core.next(lead);
s = G__41991;
lead = G__41992;
continue;
} else {
return s;
}
break;
}
});
/**
* Returns a lazy sequence of the items in coll starting from the
* first item for which (pred item) returns logical false.  Returns a
* stateful transducer when no collection is provided.
*/
cljs.core.drop_while = (function() {
var drop_while = null;
var drop_while__1 = (function (pred){
return (function (rf){
var da = cljs.core.volatile_BANG_(true);
return ((function (da){
return (function() {
var G__42005 = null;
var G__42005__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__42005__1 = (function (result){
var G__41999 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__41999) : rf.call(null,G__41999));
});
var G__42005__2 = (function (result,input){
var drop_QMARK_ = cljs.core.deref(da);
if(cljs.core.truth_((function (){var and__24260__auto__ = drop_QMARK_;
if(cljs.core.truth_(and__24260__auto__)){
var G__42000 = input;
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__42000) : pred.call(null,G__42000));
} else {
return and__24260__auto__;
}
})())){
return result;
} else {
cljs.core.vreset_BANG_(da,null);

var G__42001 = result;
var G__42002 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__42001,G__42002) : rf.call(null,G__42001,G__42002));
}
});
G__42005 = function(result,input){
switch(arguments.length){
case 0:
return G__42005__0.call(this);
case 1:
return G__42005__1.call(this,result);
case 2:
return G__42005__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__42005.cljs$core$IFn$_invoke$arity$0 = G__42005__0;
G__42005.cljs$core$IFn$_invoke$arity$1 = G__42005__1;
G__42005.cljs$core$IFn$_invoke$arity$2 = G__42005__2;
return G__42005;
})()
;})(da))
});
});
var drop_while__2 = (function (pred,coll){
var step = (function (pred__$1,coll__$1){
while(true){
var s = cljs.core.seq(coll__$1);
if(cljs.core.truth_((function (){var and__24260__auto__ = s;
if(and__24260__auto__){
var G__42004 = cljs.core.first(s);
return (pred__$1.cljs$core$IFn$_invoke$arity$1 ? pred__$1.cljs$core$IFn$_invoke$arity$1(G__42004) : pred__$1.call(null,G__42004));
} else {
return and__24260__auto__;
}
})())){
var G__42006 = pred__$1;
var G__42007 = cljs.core.rest(s);
pred__$1 = G__42006;
coll__$1 = G__42007;
continue;
} else {
return s;
}
break;
}
});
return (new cljs.core.LazySeq(null,((function (step){
return (function (){
return step(pred,coll);
});})(step))
,null,null));
});
drop_while = function(pred,coll){
switch(arguments.length){
case 1:
return drop_while__1.call(this,pred);
case 2:
return drop_while__2.call(this,pred,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
drop_while.cljs$core$IFn$_invoke$arity$1 = drop_while__1;
drop_while.cljs$core$IFn$_invoke$arity$2 = drop_while__2;
return drop_while;
})()
;
/**
* Returns a lazy (infinite!) sequence of repetitions of the items in coll.
*/
cljs.core.cycle = (function cycle(coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
return cljs.core.concat.cljs$core$IFn$_invoke$arity$2(s,cycle(s));
} else {
return null;
}
}),null,null));
});
/**
* Returns a vector of [(take n coll) (drop n coll)]
*/
cljs.core.split_at = (function split_at(n,coll){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,coll),cljs.core.drop.cljs$core$IFn$_invoke$arity$2(n,coll)], null);
});
/**
* Returns a lazy (infinite!, or length n if supplied) sequence of xs.
*/
cljs.core.repeat = (function() {
var repeat = null;
var repeat__1 = (function (x){
return (new cljs.core.LazySeq(null,(function (){
return cljs.core.cons(x,repeat.cljs$core$IFn$_invoke$arity$1(x));
}),null,null));
});
var repeat__2 = (function (n,x){
return cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,repeat.cljs$core$IFn$_invoke$arity$1(x));
});
repeat = function(n,x){
switch(arguments.length){
case 1:
return repeat__1.call(this,n);
case 2:
return repeat__2.call(this,n,x);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
repeat.cljs$core$IFn$_invoke$arity$1 = repeat__1;
repeat.cljs$core$IFn$_invoke$arity$2 = repeat__2;
return repeat;
})()
;
/**
* Returns a lazy seq of n xs.
*/
cljs.core.replicate = (function replicate(n,x){
return cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,cljs.core.repeat.cljs$core$IFn$_invoke$arity$1(x));
});
/**
* Takes a function of no args, presumably with side effects, and
* returns an infinite (or length n if supplied) lazy sequence of calls
* to it
*/
cljs.core.repeatedly = (function() {
var repeatedly = null;
var repeatedly__1 = (function (f){
return (new cljs.core.LazySeq(null,(function (){
return cljs.core.cons((function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})(),repeatedly.cljs$core$IFn$_invoke$arity$1(f));
}),null,null));
});
var repeatedly__2 = (function (n,f){
return cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,repeatedly.cljs$core$IFn$_invoke$arity$1(f));
});
repeatedly = function(n,f){
switch(arguments.length){
case 1:
return repeatedly__1.call(this,n);
case 2:
return repeatedly__2.call(this,n,f);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
repeatedly.cljs$core$IFn$_invoke$arity$1 = repeatedly__1;
repeatedly.cljs$core$IFn$_invoke$arity$2 = repeatedly__2;
return repeatedly;
})()
;
/**
* Returns a lazy sequence of x, (f x), (f (f x)) etc. f must be free of side-effects
*/
cljs.core.iterate = (function iterate(f,x){
return cljs.core.cons(x,(new cljs.core.LazySeq(null,(function (){
return iterate(f,(function (){var G__42016 = x;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__42016) : f.call(null,G__42016));
})());
}),null,null)));
});
/**
* Returns a lazy seq of the first item in each coll, then the second etc.
* @param {...*} var_args
*/
cljs.core.interleave = (function() {
var interleave = null;
var interleave__2 = (function (c1,c2){
return (new cljs.core.LazySeq(null,(function (){
var s1 = cljs.core.seq(c1);
var s2 = cljs.core.seq(c2);
if((s1) && (s2)){
return cljs.core.cons(cljs.core.first(s1),cljs.core.cons(cljs.core.first(s2),interleave.cljs$core$IFn$_invoke$arity$2(cljs.core.rest(s1),cljs.core.rest(s2))));
} else {
return null;
}
}),null,null));
});
var interleave__3 = (function() { 
var G__42019__delegate = function (c1,c2,colls){
return (new cljs.core.LazySeq(null,(function (){
var ss = cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.seq,cljs.core.conj.cljs$core$IFn$_invoke$arity$variadic(colls,c2,cljs.core.array_seq([c1], 0)));
if(cljs.core.every_QMARK_(cljs.core.identity,ss)){
return cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.first,ss),cljs.core.apply.cljs$core$IFn$_invoke$arity$2(interleave,cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.rest,ss)));
} else {
return null;
}
}),null,null));
};
var G__42019 = function (c1,c2,var_args){
var colls = null;
if (arguments.length > 2) {
var G__42020__i = 0, G__42020__a = new Array(arguments.length -  2);
while (G__42020__i < G__42020__a.length) {G__42020__a[G__42020__i] = arguments[G__42020__i + 2]; ++G__42020__i;}
  colls = new cljs.core.IndexedSeq(G__42020__a,0);
} 
return G__42019__delegate.call(this,c1,c2,colls);};
G__42019.cljs$lang$maxFixedArity = 2;
G__42019.cljs$lang$applyTo = (function (arglist__42021){
var c1 = cljs.core.first(arglist__42021);
arglist__42021 = cljs.core.next(arglist__42021);
var c2 = cljs.core.first(arglist__42021);
var colls = cljs.core.rest(arglist__42021);
return G__42019__delegate(c1,c2,colls);
});
G__42019.cljs$core$IFn$_invoke$arity$variadic = G__42019__delegate;
return G__42019;
})()
;
interleave = function(c1,c2,var_args){
var colls = var_args;
switch(arguments.length){
case 2:
return interleave__2.call(this,c1,c2);
default:
var G__42022 = null;
if (arguments.length > 2) {
var G__42023__i = 0, G__42023__a = new Array(arguments.length -  2);
while (G__42023__i < G__42023__a.length) {G__42023__a[G__42023__i] = arguments[G__42023__i + 2]; ++G__42023__i;}
G__42022 = new cljs.core.IndexedSeq(G__42023__a,0);
}
return interleave__3.cljs$core$IFn$_invoke$arity$variadic(c1,c2, G__42022);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
interleave.cljs$lang$maxFixedArity = 2;
interleave.cljs$lang$applyTo = interleave__3.cljs$lang$applyTo;
interleave.cljs$core$IFn$_invoke$arity$2 = interleave__2;
interleave.cljs$core$IFn$_invoke$arity$variadic = interleave__3.cljs$core$IFn$_invoke$arity$variadic;
return interleave;
})()
;
/**
* Returns a lazy seq of the elements of coll separated by sep
*/
cljs.core.interpose = (function interpose(sep,coll){
return cljs.core.drop.cljs$core$IFn$_invoke$arity$2((1),cljs.core.interleave.cljs$core$IFn$_invoke$arity$2(cljs.core.repeat.cljs$core$IFn$_invoke$arity$1(sep),coll));
});
/**
* Take a collection of collections, and return a lazy seq
* of items from the inner collection
*/
cljs.core.flatten1 = (function flatten1(colls){
var cat = (function cat(coll,colls__$1){
return (new cljs.core.LazySeq(null,(function (){
var temp__4124__auto__ = cljs.core.seq(coll);
if(temp__4124__auto__){
var coll__$1 = temp__4124__auto__;
return cljs.core.cons(cljs.core.first(coll__$1),cat(cljs.core.rest(coll__$1),colls__$1));
} else {
if(cljs.core.seq(colls__$1)){
return cat(cljs.core.first(colls__$1),cljs.core.rest(colls__$1));
} else {
return null;
}
}
}),null,null));
});
return cat(null,colls);
});
/**
* Returns the result of applying concat to the result of applying map
* to f and colls.  Thus function f should return a collection. Returns
* a transducer when no collections are provided
* @param {...*} var_args
*/
cljs.core.mapcat = (function() {
var mapcat = null;
var mapcat__1 = (function (f){
return cljs.core.comp.cljs$core$IFn$_invoke$arity$2(cljs.core.map.cljs$core$IFn$_invoke$arity$1(f),cljs.core.cat);
});
var mapcat__2 = (function() { 
var G__42032__delegate = function (f,colls){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.concat,cljs.core.apply.cljs$core$IFn$_invoke$arity$3(cljs.core.map,f,colls));
};
var G__42032 = function (f,var_args){
var colls = null;
if (arguments.length > 1) {
var G__42033__i = 0, G__42033__a = new Array(arguments.length -  1);
while (G__42033__i < G__42033__a.length) {G__42033__a[G__42033__i] = arguments[G__42033__i + 1]; ++G__42033__i;}
  colls = new cljs.core.IndexedSeq(G__42033__a,0);
} 
return G__42032__delegate.call(this,f,colls);};
G__42032.cljs$lang$maxFixedArity = 1;
G__42032.cljs$lang$applyTo = (function (arglist__42034){
var f = cljs.core.first(arglist__42034);
var colls = cljs.core.rest(arglist__42034);
return G__42032__delegate(f,colls);
});
G__42032.cljs$core$IFn$_invoke$arity$variadic = G__42032__delegate;
return G__42032;
})()
;
mapcat = function(f,var_args){
var colls = var_args;
switch(arguments.length){
case 1:
return mapcat__1.call(this,f);
default:
var G__42035 = null;
if (arguments.length > 1) {
var G__42036__i = 0, G__42036__a = new Array(arguments.length -  1);
while (G__42036__i < G__42036__a.length) {G__42036__a[G__42036__i] = arguments[G__42036__i + 1]; ++G__42036__i;}
G__42035 = new cljs.core.IndexedSeq(G__42036__a,0);
}
return mapcat__2.cljs$core$IFn$_invoke$arity$variadic(f, G__42035);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
mapcat.cljs$lang$maxFixedArity = 1;
mapcat.cljs$lang$applyTo = mapcat__2.cljs$lang$applyTo;
mapcat.cljs$core$IFn$_invoke$arity$1 = mapcat__1;
mapcat.cljs$core$IFn$_invoke$arity$variadic = mapcat__2.cljs$core$IFn$_invoke$arity$variadic;
return mapcat;
})()
;
/**
* Returns a lazy sequence of the items in coll for which
* (pred item) returns true. pred must be free of side-effects.
* Returns a transducer when no collection is provided.
*/
cljs.core.filter = (function() {
var filter = null;
var filter__1 = (function (pred){
return (function (rf){
return (function() {
var G__42055 = null;
var G__42055__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__42055__1 = (function (result){
var G__42049 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__42049) : rf.call(null,G__42049));
});
var G__42055__2 = (function (result,input){
if(cljs.core.truth_((function (){var G__42050 = input;
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__42050) : pred.call(null,G__42050));
})())){
var G__42051 = result;
var G__42052 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__42051,G__42052) : rf.call(null,G__42051,G__42052));
} else {
return result;
}
});
G__42055 = function(result,input){
switch(arguments.length){
case 0:
return G__42055__0.call(this);
case 1:
return G__42055__1.call(this,result);
case 2:
return G__42055__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__42055.cljs$core$IFn$_invoke$arity$0 = G__42055__0;
G__42055.cljs$core$IFn$_invoke$arity$1 = G__42055__1;
G__42055.cljs$core$IFn$_invoke$arity$2 = G__42055__2;
return G__42055;
})()
});
});
var filter__2 = (function (pred,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(s)){
var c = cljs.core.chunk_first(s);
var size = cljs.core.count(c);
var b = cljs.core.chunk_buffer(size);
var n__25159__auto___42056 = size;
var i_42057 = (0);
while(true){
if((i_42057 < n__25159__auto___42056)){
if(cljs.core.truth_((function (){var G__42053 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c,i_42057);
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__42053) : pred.call(null,G__42053));
})())){
cljs.core.chunk_append(b,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c,i_42057));
} else {
}

var G__42058 = (i_42057 + (1));
i_42057 = G__42058;
continue;
} else {
}
break;
}

return cljs.core.chunk_cons(cljs.core.chunk(b),filter.cljs$core$IFn$_invoke$arity$2(pred,cljs.core.chunk_rest(s)));
} else {
var f = cljs.core.first(s);
var r = cljs.core.rest(s);
if(cljs.core.truth_((function (){var G__42054 = f;
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__42054) : pred.call(null,G__42054));
})())){
return cljs.core.cons(f,filter.cljs$core$IFn$_invoke$arity$2(pred,r));
} else {
return filter.cljs$core$IFn$_invoke$arity$2(pred,r);
}
}
} else {
return null;
}
}),null,null));
});
filter = function(pred,coll){
switch(arguments.length){
case 1:
return filter__1.call(this,pred);
case 2:
return filter__2.call(this,pred,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
filter.cljs$core$IFn$_invoke$arity$1 = filter__1;
filter.cljs$core$IFn$_invoke$arity$2 = filter__2;
return filter;
})()
;
/**
* Returns a lazy sequence of the items in coll for which
* (pred item) returns false. pred must be free of side-effects.
* Returns a transducer when no collection is provided.
*/
cljs.core.remove = (function() {
var remove = null;
var remove__1 = (function (pred){
return cljs.core.filter.cljs$core$IFn$_invoke$arity$1(cljs.core.complement(pred));
});
var remove__2 = (function (pred,coll){
return cljs.core.filter.cljs$core$IFn$_invoke$arity$2(cljs.core.complement(pred),coll);
});
remove = function(pred,coll){
switch(arguments.length){
case 1:
return remove__1.call(this,pred);
case 2:
return remove__2.call(this,pred,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
remove.cljs$core$IFn$_invoke$arity$1 = remove__1;
remove.cljs$core$IFn$_invoke$arity$2 = remove__2;
return remove;
})()
;
/**
* Returns a lazy sequence of the nodes in a tree, via a depth-first walk.
* branch? must be a fn of one arg that returns true if passed a node
* that can have children (but may not).  children must be a fn of one
* arg that returns a sequence of the children. Will only be called on
* nodes for which branch? returns true. Root is the root node of the
* tree.
*/
cljs.core.tree_seq = (function tree_seq(branch_QMARK_,children,root){
var walk = (function walk(node){
return (new cljs.core.LazySeq(null,(function (){
return cljs.core.cons(node,(cljs.core.truth_((function (){var G__42065 = node;
return (branch_QMARK_.cljs$core$IFn$_invoke$arity$1 ? branch_QMARK_.cljs$core$IFn$_invoke$arity$1(G__42065) : branch_QMARK_.call(null,G__42065));
})())?cljs.core.mapcat.cljs$core$IFn$_invoke$arity$variadic(walk,cljs.core.array_seq([(function (){var G__42066 = node;
return (children.cljs$core$IFn$_invoke$arity$1 ? children.cljs$core$IFn$_invoke$arity$1(G__42066) : children.call(null,G__42066));
})()], 0)):null));
}),null,null));
});
return walk(root);
});
/**
* Takes any nested combination of sequential things (lists, vectors,
* etc.) and returns their contents as a single, flat sequence.
* (flatten nil) returns nil.
*/
cljs.core.flatten = (function flatten(x){
return cljs.core.filter.cljs$core$IFn$_invoke$arity$2((function (p1__42067_SHARP_){
return !(cljs.core.sequential_QMARK_(p1__42067_SHARP_));
}),cljs.core.rest(cljs.core.tree_seq(cljs.core.sequential_QMARK_,cljs.core.seq,x)));
});
/**
* Returns a new coll consisting of to-coll with all of the items of
* from-coll conjoined. A transducer may be supplied.
*/
cljs.core.into = (function() {
var into = null;
var into__2 = (function (to,from){
if(!((to == null))){
if((function (){var G__42070 = to;
if(G__42070){
var bit__24946__auto__ = (G__42070.cljs$lang$protocol_mask$partition1$ & (4));
if((bit__24946__auto__) || (G__42070.cljs$core$IEditableCollection$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return cljs.core.with_meta(cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj_BANG_,cljs.core.transient$(to),from)),cljs.core.meta(to));
} else {
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj,to,from);
}
} else {
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.conj,cljs.core.List.EMPTY,from);
}
});
var into__3 = (function (to,xform,from){
if((function (){var G__42071 = to;
if(G__42071){
var bit__24946__auto__ = (G__42071.cljs$lang$protocol_mask$partition1$ & (4));
if((bit__24946__auto__) || (G__42071.cljs$core$IEditableCollection$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return cljs.core.with_meta(cljs.core.persistent_BANG_(cljs.core.transduce.cljs$core$IFn$_invoke$arity$4(xform,cljs.core.conj_BANG_,cljs.core.transient$(to),from)),cljs.core.meta(to));
} else {
return cljs.core.transduce.cljs$core$IFn$_invoke$arity$4(xform,cljs.core.conj,to,from);
}
});
into = function(to,xform,from){
switch(arguments.length){
case 2:
return into__2.call(this,to,xform);
case 3:
return into__3.call(this,to,xform,from);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
into.cljs$core$IFn$_invoke$arity$2 = into__2;
into.cljs$core$IFn$_invoke$arity$3 = into__3;
return into;
})()
;
/**
* Returns a vector consisting of the result of applying f to the
* set of first items of each coll, followed by applying f to the set
* of second items in each coll, until any one of the colls is
* exhausted.  Any remaining items in other colls are ignored. Function
* f should accept number-of-colls arguments.
* @param {...*} var_args
*/
cljs.core.mapv = (function() {
var mapv = null;
var mapv__2 = (function (f,coll){
return cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (v,o){
return cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$2(v,(function (){var G__42073 = o;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__42073) : f.call(null,G__42073));
})());
}),cljs.core.transient$(cljs.core.PersistentVector.EMPTY),coll));
});
var mapv__3 = (function (f,c1,c2){
return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentVector.EMPTY,cljs.core.map.cljs$core$IFn$_invoke$arity$3(f,c1,c2));
});
var mapv__4 = (function (f,c1,c2,c3){
return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentVector.EMPTY,cljs.core.map.cljs$core$IFn$_invoke$arity$4(f,c1,c2,c3));
});
var mapv__5 = (function() { 
var G__42074__delegate = function (f,c1,c2,c3,colls){
return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentVector.EMPTY,cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(cljs.core.map,f,c1,c2,c3,cljs.core.array_seq([colls], 0)));
};
var G__42074 = function (f,c1,c2,c3,var_args){
var colls = null;
if (arguments.length > 4) {
var G__42075__i = 0, G__42075__a = new Array(arguments.length -  4);
while (G__42075__i < G__42075__a.length) {G__42075__a[G__42075__i] = arguments[G__42075__i + 4]; ++G__42075__i;}
  colls = new cljs.core.IndexedSeq(G__42075__a,0);
} 
return G__42074__delegate.call(this,f,c1,c2,c3,colls);};
G__42074.cljs$lang$maxFixedArity = 4;
G__42074.cljs$lang$applyTo = (function (arglist__42076){
var f = cljs.core.first(arglist__42076);
arglist__42076 = cljs.core.next(arglist__42076);
var c1 = cljs.core.first(arglist__42076);
arglist__42076 = cljs.core.next(arglist__42076);
var c2 = cljs.core.first(arglist__42076);
arglist__42076 = cljs.core.next(arglist__42076);
var c3 = cljs.core.first(arglist__42076);
var colls = cljs.core.rest(arglist__42076);
return G__42074__delegate(f,c1,c2,c3,colls);
});
G__42074.cljs$core$IFn$_invoke$arity$variadic = G__42074__delegate;
return G__42074;
})()
;
mapv = function(f,c1,c2,c3,var_args){
var colls = var_args;
switch(arguments.length){
case 2:
return mapv__2.call(this,f,c1);
case 3:
return mapv__3.call(this,f,c1,c2);
case 4:
return mapv__4.call(this,f,c1,c2,c3);
default:
var G__42077 = null;
if (arguments.length > 4) {
var G__42078__i = 0, G__42078__a = new Array(arguments.length -  4);
while (G__42078__i < G__42078__a.length) {G__42078__a[G__42078__i] = arguments[G__42078__i + 4]; ++G__42078__i;}
G__42077 = new cljs.core.IndexedSeq(G__42078__a,0);
}
return mapv__5.cljs$core$IFn$_invoke$arity$variadic(f,c1,c2,c3, G__42077);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
mapv.cljs$lang$maxFixedArity = 4;
mapv.cljs$lang$applyTo = mapv__5.cljs$lang$applyTo;
mapv.cljs$core$IFn$_invoke$arity$2 = mapv__2;
mapv.cljs$core$IFn$_invoke$arity$3 = mapv__3;
mapv.cljs$core$IFn$_invoke$arity$4 = mapv__4;
mapv.cljs$core$IFn$_invoke$arity$variadic = mapv__5.cljs$core$IFn$_invoke$arity$variadic;
return mapv;
})()
;
/**
* Returns a vector of the items in coll for which
* (pred item) returns true. pred must be free of side-effects.
*/
cljs.core.filterv = (function filterv(pred,coll){
return cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (v,o){
if(cljs.core.truth_((function (){var G__42080 = o;
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__42080) : pred.call(null,G__42080));
})())){
return cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$2(v,o);
} else {
return v;
}
}),cljs.core.transient$(cljs.core.PersistentVector.EMPTY),coll));
});
/**
* Returns a lazy sequence of lists of n items each, at offsets step
* apart. If step is not supplied, defaults to n, i.e. the partitions
* do not overlap. If a pad collection is supplied, use its elements as
* necessary to complete last partition up to n items. In case there are
* not enough padding elements, return a partition with less than n items.
*/
cljs.core.partition = (function() {
var partition = null;
var partition__2 = (function (n,coll){
return partition.cljs$core$IFn$_invoke$arity$3(n,n,coll);
});
var partition__3 = (function (n,step,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
var p = cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,s);
if((n === cljs.core.count(p))){
return cljs.core.cons(p,partition.cljs$core$IFn$_invoke$arity$3(n,step,cljs.core.drop.cljs$core$IFn$_invoke$arity$2(step,s)));
} else {
return null;
}
} else {
return null;
}
}),null,null));
});
var partition__4 = (function (n,step,pad,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
var p = cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,s);
if((n === cljs.core.count(p))){
return cljs.core.cons(p,partition.cljs$core$IFn$_invoke$arity$4(n,step,pad,cljs.core.drop.cljs$core$IFn$_invoke$arity$2(step,s)));
} else {
return cljs.core._conj(cljs.core.List.EMPTY,cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,cljs.core.concat.cljs$core$IFn$_invoke$arity$2(p,pad)));
}
} else {
return null;
}
}),null,null));
});
partition = function(n,step,pad,coll){
switch(arguments.length){
case 2:
return partition__2.call(this,n,step);
case 3:
return partition__3.call(this,n,step,pad);
case 4:
return partition__4.call(this,n,step,pad,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
partition.cljs$core$IFn$_invoke$arity$2 = partition__2;
partition.cljs$core$IFn$_invoke$arity$3 = partition__3;
partition.cljs$core$IFn$_invoke$arity$4 = partition__4;
return partition;
})()
;
/**
* Returns the value in a nested associative structure,
* where ks is a sequence of keys. Returns nil if the key is not present,
* or the not-found value if supplied.
*/
cljs.core.get_in = (function() {
var get_in = null;
var get_in__2 = (function (m,ks){
return get_in.cljs$core$IFn$_invoke$arity$3(m,ks,null);
});
var get_in__3 = (function (m,ks,not_found){
var sentinel = cljs.core.lookup_sentinel;
var m__$1 = m;
var ks__$1 = cljs.core.seq(ks);
while(true){
if(ks__$1){
if(!((function (){var G__42095 = m__$1;
if(G__42095){
var bit__24953__auto__ = (G__42095.cljs$lang$protocol_mask$partition0$ & (256));
if((bit__24953__auto__) || (G__42095.cljs$core$ILookup$)){
return true;
} else {
if((!G__42095.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ILookup,G__42095);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ILookup,G__42095);
}
})())){
return not_found;
} else {
var m__$2 = cljs.core.get.cljs$core$IFn$_invoke$arity$3(m__$1,cljs.core.first(ks__$1),sentinel);
if((sentinel === m__$2)){
return not_found;
} else {
var G__42096 = sentinel;
var G__42097 = m__$2;
var G__42098 = cljs.core.next(ks__$1);
sentinel = G__42096;
m__$1 = G__42097;
ks__$1 = G__42098;
continue;
}
}
} else {
return m__$1;
}
break;
}
});
get_in = function(m,ks,not_found){
switch(arguments.length){
case 2:
return get_in__2.call(this,m,ks);
case 3:
return get_in__3.call(this,m,ks,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
get_in.cljs$core$IFn$_invoke$arity$2 = get_in__2;
get_in.cljs$core$IFn$_invoke$arity$3 = get_in__3;
return get_in;
})()
;
/**
* Associates a value in a nested associative structure, where ks is a
* sequence of keys and v is the new value and returns a new nested structure.
* If any levels do not exist, hash-maps will be created.
*/
cljs.core.assoc_in = (function assoc_in(m,p__42099,v){
var vec__42104 = p__42099;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__42104,(0),null);
var ks = cljs.core.nthnext(vec__42104,(1));
if(ks){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,assoc_in(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),ks,v));
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,v);
}
});
/**
* 'Updates' a value in a nested associative structure, where ks is a
* sequence of keys and f is a function that will take the old value
* and any supplied args and return the new value, and returns a new
* nested structure.  If any levels do not exist, hash-maps will be
* created.
* @param {...*} var_args
*/
cljs.core.update_in = (function() {
var update_in = null;
var update_in__3 = (function (m,p__42105,f){
var vec__42143 = p__42105;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__42143,(0),null);
var ks = cljs.core.nthnext(vec__42143,(1));
if(ks){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,update_in.cljs$core$IFn$_invoke$arity$3(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),ks,f));
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__42144 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__42144) : f.call(null,G__42144));
})());
}
});
var update_in__4 = (function (m,p__42106,f,a){
var vec__42145 = p__42106;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__42145,(0),null);
var ks = cljs.core.nthnext(vec__42145,(1));
if(ks){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,update_in.cljs$core$IFn$_invoke$arity$4(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),ks,f,a));
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__42146 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__42147 = a;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__42146,G__42147) : f.call(null,G__42146,G__42147));
})());
}
});
var update_in__5 = (function (m,p__42107,f,a,b){
var vec__42148 = p__42107;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__42148,(0),null);
var ks = cljs.core.nthnext(vec__42148,(1));
if(ks){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,update_in.cljs$core$IFn$_invoke$arity$5(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),ks,f,a,b));
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__42149 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__42150 = a;
var G__42151 = b;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__42149,G__42150,G__42151) : f.call(null,G__42149,G__42150,G__42151));
})());
}
});
var update_in__6 = (function (m,p__42108,f,a,b,c){
var vec__42152 = p__42108;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__42152,(0),null);
var ks = cljs.core.nthnext(vec__42152,(1));
if(ks){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,update_in.cljs$core$IFn$_invoke$arity$6(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),ks,f,a,b,c));
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__42153 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__42154 = a;
var G__42155 = b;
var G__42156 = c;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__42153,G__42154,G__42155,G__42156) : f.call(null,G__42153,G__42154,G__42155,G__42156));
})());
}
});
var update_in__7 = (function() { 
var G__42158__delegate = function (m,p__42109,f,a,b,c,args){
var vec__42157 = p__42109;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__42157,(0),null);
var ks = cljs.core.nthnext(vec__42157,(1));
if(ks){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(update_in,cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),ks,f,a,cljs.core.array_seq([b,c,args], 0)));
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f,cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),a,b,c,cljs.core.array_seq([args], 0)));
}
};
var G__42158 = function (m,p__42109,f,a,b,c,var_args){
var args = null;
if (arguments.length > 6) {
var G__42159__i = 0, G__42159__a = new Array(arguments.length -  6);
while (G__42159__i < G__42159__a.length) {G__42159__a[G__42159__i] = arguments[G__42159__i + 6]; ++G__42159__i;}
  args = new cljs.core.IndexedSeq(G__42159__a,0);
} 
return G__42158__delegate.call(this,m,p__42109,f,a,b,c,args);};
G__42158.cljs$lang$maxFixedArity = 6;
G__42158.cljs$lang$applyTo = (function (arglist__42160){
var m = cljs.core.first(arglist__42160);
arglist__42160 = cljs.core.next(arglist__42160);
var p__42109 = cljs.core.first(arglist__42160);
arglist__42160 = cljs.core.next(arglist__42160);
var f = cljs.core.first(arglist__42160);
arglist__42160 = cljs.core.next(arglist__42160);
var a = cljs.core.first(arglist__42160);
arglist__42160 = cljs.core.next(arglist__42160);
var b = cljs.core.first(arglist__42160);
arglist__42160 = cljs.core.next(arglist__42160);
var c = cljs.core.first(arglist__42160);
var args = cljs.core.rest(arglist__42160);
return G__42158__delegate(m,p__42109,f,a,b,c,args);
});
G__42158.cljs$core$IFn$_invoke$arity$variadic = G__42158__delegate;
return G__42158;
})()
;
update_in = function(m,p__42109,f,a,b,c,var_args){
var args = var_args;
switch(arguments.length){
case 3:
return update_in__3.call(this,m,p__42109,f);
case 4:
return update_in__4.call(this,m,p__42109,f,a);
case 5:
return update_in__5.call(this,m,p__42109,f,a,b);
case 6:
return update_in__6.call(this,m,p__42109,f,a,b,c);
default:
var G__42161 = null;
if (arguments.length > 6) {
var G__42162__i = 0, G__42162__a = new Array(arguments.length -  6);
while (G__42162__i < G__42162__a.length) {G__42162__a[G__42162__i] = arguments[G__42162__i + 6]; ++G__42162__i;}
G__42161 = new cljs.core.IndexedSeq(G__42162__a,0);
}
return update_in__7.cljs$core$IFn$_invoke$arity$variadic(m,p__42109,f,a,b,c, G__42161);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
update_in.cljs$lang$maxFixedArity = 6;
update_in.cljs$lang$applyTo = update_in__7.cljs$lang$applyTo;
update_in.cljs$core$IFn$_invoke$arity$3 = update_in__3;
update_in.cljs$core$IFn$_invoke$arity$4 = update_in__4;
update_in.cljs$core$IFn$_invoke$arity$5 = update_in__5;
update_in.cljs$core$IFn$_invoke$arity$6 = update_in__6;
update_in.cljs$core$IFn$_invoke$arity$variadic = update_in__7.cljs$core$IFn$_invoke$arity$variadic;
return update_in;
})()
;
/**
* 'Updates' a value in an associative structure, where k is a
* key and f is a function that will take the old value
* and any supplied args and return the new value, and returns a new
* structure.  If the key does not exist, nil is passed as the old value.
* @param {...*} var_args
*/
cljs.core.update = (function() {
var update = null;
var update__3 = (function (m,k,f){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__42173 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__42173) : f.call(null,G__42173));
})());
});
var update__4 = (function (m,k,f,x){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__42174 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__42175 = x;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__42174,G__42175) : f.call(null,G__42174,G__42175));
})());
});
var update__5 = (function (m,k,f,x,y){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__42176 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__42177 = x;
var G__42178 = y;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__42176,G__42177,G__42178) : f.call(null,G__42176,G__42177,G__42178));
})());
});
var update__6 = (function (m,k,f,x,y,z){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__42179 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__42180 = x;
var G__42181 = y;
var G__42182 = z;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__42179,G__42180,G__42181,G__42182) : f.call(null,G__42179,G__42180,G__42181,G__42182));
})());
});
var update__7 = (function() { 
var G__42183__delegate = function (m,k,f,x,y,z,more){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f,cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),x,y,z,cljs.core.array_seq([more], 0)));
};
var G__42183 = function (m,k,f,x,y,z,var_args){
var more = null;
if (arguments.length > 6) {
var G__42184__i = 0, G__42184__a = new Array(arguments.length -  6);
while (G__42184__i < G__42184__a.length) {G__42184__a[G__42184__i] = arguments[G__42184__i + 6]; ++G__42184__i;}
  more = new cljs.core.IndexedSeq(G__42184__a,0);
} 
return G__42183__delegate.call(this,m,k,f,x,y,z,more);};
G__42183.cljs$lang$maxFixedArity = 6;
G__42183.cljs$lang$applyTo = (function (arglist__42185){
var m = cljs.core.first(arglist__42185);
arglist__42185 = cljs.core.next(arglist__42185);
var k = cljs.core.first(arglist__42185);
arglist__42185 = cljs.core.next(arglist__42185);
var f = cljs.core.first(arglist__42185);
arglist__42185 = cljs.core.next(arglist__42185);
var x = cljs.core.first(arglist__42185);
arglist__42185 = cljs.core.next(arglist__42185);
var y = cljs.core.first(arglist__42185);
arglist__42185 = cljs.core.next(arglist__42185);
var z = cljs.core.first(arglist__42185);
var more = cljs.core.rest(arglist__42185);
return G__42183__delegate(m,k,f,x,y,z,more);
});
G__42183.cljs$core$IFn$_invoke$arity$variadic = G__42183__delegate;
return G__42183;
})()
;
update = function(m,k,f,x,y,z,var_args){
var more = var_args;
switch(arguments.length){
case 3:
return update__3.call(this,m,k,f);
case 4:
return update__4.call(this,m,k,f,x);
case 5:
return update__5.call(this,m,k,f,x,y);
case 6:
return update__6.call(this,m,k,f,x,y,z);
default:
var G__42186 = null;
if (arguments.length > 6) {
var G__42187__i = 0, G__42187__a = new Array(arguments.length -  6);
while (G__42187__i < G__42187__a.length) {G__42187__a[G__42187__i] = arguments[G__42187__i + 6]; ++G__42187__i;}
G__42186 = new cljs.core.IndexedSeq(G__42187__a,0);
}
return update__7.cljs$core$IFn$_invoke$arity$variadic(m,k,f,x,y,z, G__42186);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
update.cljs$lang$maxFixedArity = 6;
update.cljs$lang$applyTo = update__7.cljs$lang$applyTo;
update.cljs$core$IFn$_invoke$arity$3 = update__3;
update.cljs$core$IFn$_invoke$arity$4 = update__4;
update.cljs$core$IFn$_invoke$arity$5 = update__5;
update.cljs$core$IFn$_invoke$arity$6 = update__6;
update.cljs$core$IFn$_invoke$arity$variadic = update__7.cljs$core$IFn$_invoke$arity$variadic;
return update;
})()
;

/**
* @constructor
*/
cljs.core.VectorNode = (function (edit,arr){
this.edit = edit;
this.arr = arr;
})

cljs.core.VectorNode.cljs$lang$type = true;

cljs.core.VectorNode.cljs$lang$ctorStr = "cljs.core/VectorNode";

cljs.core.VectorNode.cljs$lang$ctorPrWriter = (function (this__24859__auto__,writer__24860__auto__,opt__24861__auto__){
return cljs.core._write(writer__24860__auto__,"cljs.core/VectorNode");
});

cljs.core.__GT_VectorNode = (function __GT_VectorNode(edit,arr){
return (new cljs.core.VectorNode(edit,arr));
});

cljs.core.pv_fresh_node = (function pv_fresh_node(edit){
return (new cljs.core.VectorNode(edit,[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null]));
});
cljs.core.pv_aget = (function pv_aget(node,idx){
return (node.arr[idx]);
});
cljs.core.pv_aset = (function pv_aset(node,idx,val){
return (node.arr[idx] = val);
});
cljs.core.pv_clone_node = (function pv_clone_node(node){
return (new cljs.core.VectorNode(node.edit,cljs.core.aclone(node.arr)));
});
cljs.core.tail_off = (function tail_off(pv){
var cnt = pv.cnt;
if((cnt < (32))){
return (0);
} else {
return (((cnt - (1)) >>> (5)) << (5));
}
});
cljs.core.new_path = (function new_path(edit,level,node){
var ll = level;
var ret = node;
while(true){
if((ll === (0))){
return ret;
} else {
var embed = ret;
var r = cljs.core.pv_fresh_node(edit);
var _ = cljs.core.pv_aset(r,(0),embed);
var G__42188 = (ll - (5));
var G__42189 = r;
ll = G__42188;
ret = G__42189;
continue;
}
break;
}
});
cljs.core.push_tail = (function push_tail(pv,level,parent,tailnode){
var ret = cljs.core.pv_clone_node(parent);
var subidx = (((pv.cnt - (1)) >>> level) & (31));
if(((5) === level)){
cljs.core.pv_aset(ret,subidx,tailnode);

return ret;
} else {
var child = cljs.core.pv_aget(parent,subidx);
if(!((child == null))){
var node_to_insert = push_tail(pv,(level - (5)),child,tailnode);
cljs.core.pv_aset(ret,subidx,node_to_insert);

return ret;
} else {
var node_to_insert = cljs.core.new_path(null,(level - (5)),tailnode);
cljs.core.pv_aset(ret,subidx,node_to_insert);

return ret;
}
}
});
cljs.core.vector_index_out_of_bounds = (function vector_index_out_of_bounds(i,cnt){
throw (new Error([cljs.core.str("No item "),cljs.core.str(i),cljs.core.str(" in vector of length "),cljs.core.str(cnt)].join('')));
});
cljs.core.first_array_for_longvec = (function first_array_for_longvec(pv){
var node = pv.root;
var level = pv.shift;
while(true){
if((level > (0))){
var G__42194 = cljs.core.pv_aget(node,(0));
var G__42195 = (level - (5));
node = G__42194;
level = G__42195;
continue;
} else {
return node.arr;
}
break;
}
});
cljs.core.unchecked_array_for = (function unchecked_array_for(pv,i){
if((i >= cljs.core.tail_off(pv))){
return pv.tail;
} else {
var node = pv.root;
var level = pv.shift;
while(true){
if((level > (0))){
var G__42196 = cljs.core.pv_aget(node,((i >>> level) & (31)));
var G__42197 = (level - (5));
node = G__42196;
level = G__42197;
continue;
} else {
return node.arr;
}
break;
}
}
});
cljs.core.array_for = (function array_for(pv,i){
if((((0) <= i)) && ((i < pv.cnt))){
return cljs.core.unchecked_array_for(pv,i);
} else {
return cljs.core.vector_index_out_of_bounds(i,pv.cnt);
}
});
cljs.core.do_assoc = (function do_assoc(pv,level,node,i,val){
var ret = cljs.core.pv_clone_node(node);
if((level === (0))){
cljs.core.pv_aset(ret,(i & (31)),val);

return ret;
} else {
var subidx = ((i >>> level) & (31));
cljs.core.pv_aset(ret,subidx,do_assoc(pv,(level - (5)),cljs.core.pv_aget(node,subidx),i,val));

return ret;
}
});
cljs.core.pop_tail = (function pop_tail(pv,level,node){
var subidx = (((pv.cnt - (2)) >>> level) & (31));
if((level > (5))){
var new_child = pop_tail(pv,(level - (5)),cljs.core.pv_aget(node,subidx));
if(((new_child == null)) && ((subidx === (0)))){
return null;
} else {
var ret = cljs.core.pv_clone_node(node);
cljs.core.pv_aset(ret,subidx,new_child);

return ret;
}
} else {
if((subidx === (0))){
return null;
} else {
var ret = cljs.core.pv_clone_node(node);
cljs.core.pv_aset(ret,subidx,null);

return ret;

}
}
});

/**
* @constructor
*/
cljs.core.RangedIterator = (function (i,base,arr,v,start,end){
this.i = i;
this.base = base;
this.arr = arr;
this.v = v;
this.start = start;
this.end = end;
})
cljs.core.RangedIterator.prototype.hasNext = (function (){
var self__ = this;
var this$ = this;
return (self__.i < self__.end);
});

cljs.core.RangedIterator.prototype.next = (function (){
var self__ = this;
var this$ = this;
if(((self__.i - self__.base) === (32))){
self__.arr = cljs.core.unchecked_array_for(self__.v,self__.i);

self__.base = (self__.base + (32));
} else {
}

var ret = (self__.arr[(self__.i & (31))]);
self__.i = (self__.i + (1));

return ret;
});

cljs.core.RangedIterator.cljs$lang$type = true;

cljs.core.RangedIterator.cljs$lang$ctorStr = "cljs.core/RangedIterator";

cljs.core.RangedIterator.cljs$lang$ctorPrWriter = (function (this__24859__auto__,writer__24860__auto__,opt__24861__auto__){
return cljs.core._write(writer__24860__auto__,"cljs.core/RangedIterator");
});

cljs.core.__GT_RangedIterator = (function __GT_RangedIterator(i,base,arr,v,start,end){
return (new cljs.core.RangedIterator(i,base,arr,v,start,end));
});

cljs.core.ranged_iterator = (function ranged_iterator(v,start,end){
var i = start;
return (new cljs.core.RangedIterator(i,(i - (i % (32))),(((start < cljs.core.count(v)))?cljs.core.unchecked_array_for(v,i):null),v,start,end));
});







/**
* @constructor
*/
cljs.core.PersistentVector = (function (meta,cnt,shift,root,tail,__hash){
this.meta = meta;
this.cnt = cnt;
this.shift = shift;
this.root = root;
this.tail = tail;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 167668511;
this.cljs$lang$protocol_mask$partition1$ = 8196;
})
cljs.core.PersistentVector.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentVector.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentVector.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.PersistentVector.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
if(typeof k === 'number'){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(coll__$1,k,not_found);
} else {
return not_found;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = (function (v,f,init){
var self__ = this;
var v__$1 = this;
var i = (0);
var init__$1 = init;
while(true){
if((i < self__.cnt)){
var arr = cljs.core.unchecked_array_for(v__$1,i);
var len = arr.length;
var init__$2 = (function (){var j = (0);
var init__$2 = init__$1;
while(true){
if((j < len)){
var init__$3 = (function (){var G__42207 = init__$2;
var G__42208 = (j + i);
var G__42209 = (arr[j]);
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__42207,G__42208,G__42209) : f.call(null,G__42207,G__42208,G__42209));
})();
if(cljs.core.reduced_QMARK_(init__$3)){
return init__$3;
} else {
var G__42220 = (j + (1));
var G__42221 = init__$3;
j = G__42220;
init__$2 = G__42221;
continue;
}
} else {
return init__$2;
}
break;
}
})();
if(cljs.core.reduced_QMARK_(init__$2)){
var G__42210 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__42210) : cljs.core.deref.call(null,G__42210));
} else {
var G__42222 = (i + len);
var G__42223 = init__$2;
i = G__42222;
init__$1 = G__42223;
continue;
}
} else {
return init__$1;
}
break;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (coll,n){
var self__ = this;
var coll__$1 = this;
return (cljs.core.array_for(coll__$1,n)[(n & (31))]);
});

cljs.core.PersistentVector.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (coll,n,not_found){
var self__ = this;
var coll__$1 = this;
if((((0) <= n)) && ((n < self__.cnt))){
return (cljs.core.unchecked_array_for(coll__$1,n)[(n & (31))]);
} else {
return not_found;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IVector$_assoc_n$arity$3 = (function (coll,n,val){
var self__ = this;
var coll__$1 = this;
if((((0) <= n)) && ((n < self__.cnt))){
if((cljs.core.tail_off(coll__$1) <= n)){
var new_tail = cljs.core.aclone(self__.tail);
(new_tail[(n & (31))] = val);

return (new cljs.core.PersistentVector(self__.meta,self__.cnt,self__.shift,self__.root,new_tail,null));
} else {
return (new cljs.core.PersistentVector(self__.meta,self__.cnt,self__.shift,cljs.core.do_assoc(coll__$1,self__.shift,self__.root,n,val),self__.tail,null));
}
} else {
if((n === self__.cnt)){
return cljs.core._conj(coll__$1,val);
} else {
throw (new Error([cljs.core.str("Index "),cljs.core.str(n),cljs.core.str(" out of bounds  [0,"),cljs.core.str(self__.cnt),cljs.core.str("]")].join('')));

}
}
});

cljs.core.PersistentVector.prototype.cljs$core$IIterable$ = true;

cljs.core.PersistentVector.prototype.cljs$core$IIterable$_iterator$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return cljs.core.ranged_iterator(this$__$1,(0),self__.cnt);
});

cljs.core.PersistentVector.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentVector.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.PersistentVector(self__.meta,self__.cnt,self__.shift,self__.root,self__.tail,self__.__hash));
});

cljs.core.PersistentVector.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.cnt;
});

cljs.core.PersistentVector.prototype.cljs$core$IMapEntry$_key$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll__$1,(0));
});

cljs.core.PersistentVector.prototype.cljs$core$IMapEntry$_val$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll__$1,(1));
});

cljs.core.PersistentVector.prototype.cljs$core$IStack$_peek$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll__$1,(self__.cnt - (1)));
} else {
return null;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IStack$_pop$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt === (0))){
throw (new Error("Can't pop empty vector"));
} else {
if(((1) === self__.cnt)){
return cljs.core._with_meta(cljs.core.PersistentVector.EMPTY,self__.meta);
} else {
if(((1) < (self__.cnt - cljs.core.tail_off(coll__$1)))){
return (new cljs.core.PersistentVector(self__.meta,(self__.cnt - (1)),self__.shift,self__.root,self__.tail.slice((0),(-1)),null));
} else {
var new_tail = cljs.core.unchecked_array_for(coll__$1,(self__.cnt - (2)));
var nr = cljs.core.pop_tail(coll__$1,self__.shift,self__.root);
var new_root = (((nr == null))?cljs.core.PersistentVector.EMPTY_NODE:nr);
var cnt_1 = (self__.cnt - (1));
if((((5) < self__.shift)) && ((cljs.core.pv_aget(new_root,(1)) == null))){
return (new cljs.core.PersistentVector(self__.meta,cnt_1,(self__.shift - (5)),cljs.core.pv_aget(new_root,(0)),new_tail,null));
} else {
return (new cljs.core.PersistentVector(self__.meta,cnt_1,self__.shift,new_root,new_tail,null));
}

}
}
}
});

cljs.core.PersistentVector.prototype.cljs$core$IReversible$_rseq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
return (new cljs.core.RSeq(coll__$1,(self__.cnt - (1)),null));
} else {
return null;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__24693__auto__ = self__.__hash;
if(!((h__24693__auto__ == null))){
return h__24693__auto__;
} else {
var h__24693__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__24693__auto____$1;

return h__24693__auto____$1;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
if((other instanceof cljs.core.PersistentVector)){
if((self__.cnt === cljs.core.count(other))){
var me_iter = cljs.core._iterator(coll__$1);
var you_iter = cljs.core._iterator(other);
while(true){
if(cljs.core.truth_(me_iter.hasNext())){
var x = me_iter.next();
var y = you_iter.next();
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x,y)){
continue;
} else {
return false;
}
} else {
return true;
}
break;
}
} else {
return false;
}
} else {
return cljs.core.equiv_sequential(coll__$1,other);
}
});

cljs.core.PersistentVector.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.TransientVector(self__.cnt,self__.shift,(function (){var G__42211 = self__.root;
return (cljs.core.tv_editable_root.cljs$core$IFn$_invoke$arity$1 ? cljs.core.tv_editable_root.cljs$core$IFn$_invoke$arity$1(G__42211) : cljs.core.tv_editable_root.call(null,G__42211));
})(),(function (){var G__42212 = self__.tail;
return (cljs.core.tv_editable_tail.cljs$core$IFn$_invoke$arity$1 ? cljs.core.tv_editable_tail.cljs$core$IFn$_invoke$arity$1(G__42212) : cljs.core.tv_editable_tail.call(null,G__42212));
})()));
});

cljs.core.PersistentVector.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.PersistentVector.EMPTY,self__.meta);
});

cljs.core.PersistentVector.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (v,f){
var self__ = this;
var v__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(v__$1,f);
});

cljs.core.PersistentVector.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (v,f,init){
var self__ = this;
var v__$1 = this;
var i = (0);
var init__$1 = init;
while(true){
if((i < self__.cnt)){
var arr = cljs.core.unchecked_array_for(v__$1,i);
var len = arr.length;
var init__$2 = (function (){var j = (0);
var init__$2 = init__$1;
while(true){
if((j < len)){
var init__$3 = (function (){var G__42213 = init__$2;
var G__42214 = (arr[j]);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__42213,G__42214) : f.call(null,G__42213,G__42214));
})();
if(cljs.core.reduced_QMARK_(init__$3)){
return init__$3;
} else {
var G__42224 = (j + (1));
var G__42225 = init__$3;
j = G__42224;
init__$2 = G__42225;
continue;
}
} else {
return init__$2;
}
break;
}
})();
if(cljs.core.reduced_QMARK_(init__$2)){
var G__42215 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__42215) : cljs.core.deref.call(null,G__42215));
} else {
var G__42226 = (i + len);
var G__42227 = init__$2;
i = G__42226;
init__$1 = G__42227;
continue;
}
} else {
return init__$1;
}
break;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (coll,k,v){
var self__ = this;
var coll__$1 = this;
if(typeof k === 'number'){
return cljs.core._assoc_n(coll__$1,k,v);
} else {
throw (new Error("Vector's key for assoc must be a number."));
}
});

cljs.core.PersistentVector.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt === (0))){
return null;
} else {
if((self__.cnt <= (32))){
return (new cljs.core.IndexedSeq(self__.tail,(0)));
} else {
var G__42216 = coll__$1;
var G__42217 = cljs.core.first_array_for_longvec(coll__$1);
var G__42218 = (0);
var G__42219 = (0);
return (cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__42216,G__42217,G__42218,G__42219) : cljs.core.chunked_seq.call(null,G__42216,G__42217,G__42218,G__42219));

}
}
});

cljs.core.PersistentVector.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentVector(meta__$1,self__.cnt,self__.shift,self__.root,self__.tail,self__.__hash));
});

cljs.core.PersistentVector.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
if(((self__.cnt - cljs.core.tail_off(coll__$1)) < (32))){
var len = self__.tail.length;
var new_tail = (new Array((len + (1))));
var n__25159__auto___42228 = len;
var i_42229 = (0);
while(true){
if((i_42229 < n__25159__auto___42228)){
(new_tail[i_42229] = (self__.tail[i_42229]));

var G__42230 = (i_42229 + (1));
i_42229 = G__42230;
continue;
} else {
}
break;
}

(new_tail[len] = o);

return (new cljs.core.PersistentVector(self__.meta,(self__.cnt + (1)),self__.shift,self__.root,new_tail,null));
} else {
var root_overflow_QMARK_ = ((self__.cnt >>> (5)) > ((1) << self__.shift));
var new_shift = ((root_overflow_QMARK_)?(self__.shift + (5)):self__.shift);
var new_root = ((root_overflow_QMARK_)?(function (){var n_r = cljs.core.pv_fresh_node(null);
cljs.core.pv_aset(n_r,(0),self__.root);

cljs.core.pv_aset(n_r,(1),cljs.core.new_path(null,self__.shift,(new cljs.core.VectorNode(null,self__.tail))));

return n_r;
})():cljs.core.push_tail(coll__$1,self__.shift,self__.root,(new cljs.core.VectorNode(null,self__.tail))));
return (new cljs.core.PersistentVector(self__.meta,(self__.cnt + (1)),new_shift,new_root,[o],null));
}
});

cljs.core.PersistentVector.prototype.call = (function() {
var G__42231 = null;
var G__42231__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$IIndexed$_nth$arity$2(null,k);
});
var G__42231__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$IIndexed$_nth$arity$3(null,k,not_found);
});
G__42231 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__42231__2.call(this,self__,k);
case 3:
return G__42231__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__42231.cljs$core$IFn$_invoke$arity$2 = G__42231__2;
G__42231.cljs$core$IFn$_invoke$arity$3 = G__42231__3;
return G__42231;
})()
;

cljs.core.PersistentVector.prototype.apply = (function (self__,args42206){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args42206)));
});

cljs.core.PersistentVector.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$IIndexed$_nth$arity$2(null,k);
});

cljs.core.PersistentVector.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$IIndexed$_nth$arity$3(null,k,not_found);
});

cljs.core.PersistentVector.cljs$lang$type = true;

cljs.core.PersistentVector.cljs$lang$ctorStr = "cljs.core/PersistentVector";

cljs.core.PersistentVector.cljs$lang$ctorPrWriter = (function (this__24859__auto__,writer__24860__auto__,opt__24861__auto__){
return cljs.core._write(writer__24860__auto__,"cljs.core/PersistentVector");
});

cljs.core.__GT_PersistentVector = (function __GT_PersistentVector(meta,cnt,shift,root,tail,__hash){
return (new cljs.core.PersistentVector(meta,cnt,shift,root,tail,__hash));
});

cljs.core.PersistentVector.EMPTY_NODE = (new cljs.core.VectorNode(null,[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null]));
cljs.core.PersistentVector.EMPTY = (new cljs.core.PersistentVector(null,(0),(5),cljs.core.PersistentVector.EMPTY_NODE,[],(0)));
cljs.core.PersistentVector.fromArray = (function (xs,no_clone){
var l = xs.length;
var xs__$1 = ((no_clone)?xs:cljs.core.aclone(xs));
if((l < (32))){
return (new cljs.core.PersistentVector(null,l,(5),cljs.core.PersistentVector.EMPTY_NODE,xs__$1,null));
} else {
var node = xs__$1.slice((0),(32));
var v = (new cljs.core.PersistentVector(null,(32),(5),cljs.core.PersistentVector.EMPTY_NODE,node,null));
var i = (32);
var out = v.cljs$core$IEditableCollection$_as_transient$arity$1(null);
while(true){
if((i < l)){
var G__42232 = (i + (1));
var G__42233 = cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$2(out,(xs__$1[i]));
i = G__42232;
out = G__42233;
continue;
} else {
return cljs.core.persistent_BANG_(out);
}
break;
}
}
});
(cljs.core.PersistentVector.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__25250__auto__ = this;
return cljs.core.es6_iterator(this__25250__auto__);
}));
cljs.core.vec = (function vec(coll){
return cljs.core._persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj_BANG_,cljs.core._as_transient(cljs.core.PersistentVector.EMPTY),coll));
});
/**
* @param {...*} var_args
*/
cljs.core.vector = (function() { 
var vector__delegate = function (args){
if(((args instanceof cljs.core.IndexedSeq)) && ((args.i === (0)))){
return cljs.core.PersistentVector.fromArray(args.arr,true);
} else {
return cljs.core.vec(args);
}
};
var vector = function (var_args){
var args = null;
if (arguments.length > 0) {
var G__42234__i = 0, G__42234__a = new Array(arguments.length -  0);
while (G__42234__i < G__42234__a.length) {G__42234__a[G__42234__i] = arguments[G__42234__i + 0]; ++G__42234__i;}
  args = new cljs.core.IndexedSeq(G__42234__a,0);
} 
return vector__delegate.call(this,args);};
vector.cljs$lang$maxFixedArity = 0;
vector.cljs$lang$applyTo = (function (arglist__42235){
var args = cljs.core.seq(arglist__42235);
return vector__delegate(args);
});
vector.cljs$core$IFn$_invoke$arity$variadic = vector__delegate;
return vector;
})()
;

/**
* @constructor
*/
cljs.core.ChunkedSeq = (function (vec,node,i,off,meta,__hash){
this.vec = vec;
this.node = node;
this.i = i;
this.off = off;
this.meta = meta;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 32375020;
this.cljs$lang$protocol_mask$partition1$ = 1536;
})
cljs.core.ChunkedSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.ChunkedSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.ChunkedSeq.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if(((self__.off + (1)) < self__.node.length)){
var s = (function (){var G__42236 = self__.vec;
var G__42237 = self__.node;
var G__42238 = self__.i;
var G__42239 = (self__.off + (1));
return (cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__42236,G__42237,G__42238,G__42239) : cljs.core.chunked_seq.call(null,G__42236,G__42237,G__42238,G__42239));
})();
if((s == null)){
return null;
} else {
return s;
}
} else {
return cljs.core._chunked_next(coll__$1);
}
});

cljs.core.ChunkedSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__24693__auto__ = self__.__hash;
if(!((h__24693__auto__ == null))){
return h__24693__auto__;
} else {
var h__24693__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__24693__auto____$1;

return h__24693__auto____$1;
}
});

cljs.core.ChunkedSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.PersistentVector.EMPTY,self__.meta);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2((function (){var G__42240 = self__.vec;
var G__42241 = (self__.i + self__.off);
var G__42242 = cljs.core.count(self__.vec);
return (cljs.core.subvec.cljs$core$IFn$_invoke$arity$3 ? cljs.core.subvec.cljs$core$IFn$_invoke$arity$3(G__42240,G__42241,G__42242) : cljs.core.subvec.call(null,G__42240,G__42241,G__42242));
})(),f);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3((function (){var G__42243 = self__.vec;
var G__42244 = (self__.i + self__.off);
var G__42245 = cljs.core.count(self__.vec);
return (cljs.core.subvec.cljs$core$IFn$_invoke$arity$3 ? cljs.core.subvec.cljs$core$IFn$_invoke$arity$3(G__42243,G__42244,G__42245) : cljs.core.subvec.call(null,G__42243,G__42244,G__42245));
})(),f,start);
});

cljs.core.ChunkedSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (self__.node[self__.off]);
});

cljs.core.ChunkedSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if(((self__.off + (1)) < self__.node.length)){
var s = (function (){var G__42246 = self__.vec;
var G__42247 = self__.node;
var G__42248 = self__.i;
var G__42249 = (self__.off + (1));
return (cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__42246,G__42247,G__42248,G__42249) : cljs.core.chunked_seq.call(null,G__42246,G__42247,G__42248,G__42249));
})();
if((s == null)){
return cljs.core.List.EMPTY;
} else {
return s;
}
} else {
return cljs.core._chunked_rest(coll__$1);
}
});

cljs.core.ChunkedSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedSeq$_chunked_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.array_chunk.cljs$core$IFn$_invoke$arity$2(self__.node,self__.off);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedSeq$_chunked_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var end = (self__.i + self__.node.length);
if((end < cljs.core._count(self__.vec))){
var G__42250 = self__.vec;
var G__42251 = cljs.core.unchecked_array_for(self__.vec,end);
var G__42252 = end;
var G__42253 = (0);
return (cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__42250,G__42251,G__42252,G__42253) : cljs.core.chunked_seq.call(null,G__42250,G__42251,G__42252,G__42253));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.ChunkedSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,m){
var self__ = this;
var coll__$1 = this;
var G__42254 = self__.vec;
var G__42255 = self__.node;
var G__42256 = self__.i;
var G__42257 = self__.off;
var G__42258 = m;
return (cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$5 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$5(G__42254,G__42255,G__42256,G__42257,G__42258) : cljs.core.chunked_seq.call(null,G__42254,G__42255,G__42256,G__42257,G__42258));
});

cljs.core.ChunkedSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedNext$_chunked_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var end = (self__.i + self__.node.length);
if((end < cljs.core._count(self__.vec))){
var G__42259 = self__.vec;
var G__42260 = cljs.core.unchecked_array_for(self__.vec,end);
var G__42261 = end;
var G__42262 = (0);
return (cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__42259,G__42260,G__42261,G__42262) : cljs.core.chunked_seq.call(null,G__42259,G__42260,G__42261,G__42262));
} else {
return null;
}
});

cljs.core.ChunkedSeq.cljs$lang$type = true;

cljs.core.ChunkedSeq.cljs$lang$ctorStr = "cljs.core/ChunkedSeq";

cljs.core.ChunkedSeq.cljs$lang$ctorPrWriter = (function (this__24859__auto__,writer__24860__auto__,opt__24861__auto__){
return cljs.core._write(writer__24860__auto__,"cljs.core/ChunkedSeq");
});

cljs.core.__GT_ChunkedSeq = (function __GT_ChunkedSeq(vec,node,i,off,meta,__hash){
return (new cljs.core.ChunkedSeq(vec,node,i,off,meta,__hash));
});

(cljs.core.ChunkedSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__25250__auto__ = this;
return cljs.core.es6_iterator(this__25250__auto__);
}));
cljs.core.chunked_seq = (function() {
var chunked_seq = null;
var chunked_seq__3 = (function (vec,i,off){
return (new cljs.core.ChunkedSeq(vec,cljs.core.array_for(vec,i),i,off,null,null));
});
var chunked_seq__4 = (function (vec,node,i,off){
return (new cljs.core.ChunkedSeq(vec,node,i,off,null,null));
});
var chunked_seq__5 = (function (vec,node,i,off,meta){
return (new cljs.core.ChunkedSeq(vec,node,i,off,meta,null));
});
chunked_seq = function(vec,node,i,off,meta){
switch(arguments.length){
case 3:
return chunked_seq__3.call(this,vec,node,i);
case 4:
return chunked_seq__4.call(this,vec,node,i,off);
case 5:
return chunked_seq__5.call(this,vec,node,i,off,meta);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
chunked_seq.cljs$core$IFn$_invoke$arity$3 = chunked_seq__3;
chunked_seq.cljs$core$IFn$_invoke$arity$4 = chunked_seq__4;
chunked_seq.cljs$core$IFn$_invoke$arity$5 = chunked_seq__5;
return chunked_seq;
})()
;

/**
* @constructor
*/
cljs.core.Subvec = (function (meta,v,start,end,__hash){
this.meta = meta;
this.v = v;
this.start = start;
this.end = end;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 166617887;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.Subvec.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.Subvec.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.Subvec.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.Subvec.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
if(typeof k === 'number'){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(coll__$1,k,not_found);
} else {
return not_found;
}
});

cljs.core.Subvec.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (coll,n){
var self__ = this;
var coll__$1 = this;
if(((n < (0))) || ((self__.end <= (self__.start + n)))){
return cljs.core.vector_index_out_of_bounds(n,(self__.end - self__.start));
} else {
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.v,(self__.start + n));
}
});

cljs.core.Subvec.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (coll,n,not_found){
var self__ = this;
var coll__$1 = this;
if(((n < (0))) || ((self__.end <= (self__.start + n)))){
return not_found;
} else {
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(self__.v,(self__.start + n),not_found);
}
});

cljs.core.Subvec.prototype.cljs$core$IVector$_assoc_n$arity$3 = (function (coll,n,val){
var self__ = this;
var coll__$1 = this;
var v_pos = (self__.start + n);
var G__42264 = self__.meta;
var G__42265 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.v,v_pos,val);
var G__42266 = self__.start;
var G__42267 = (function (){var x__24589__auto__ = self__.end;
var y__24590__auto__ = (v_pos + (1));
return ((x__24589__auto__ > y__24590__auto__) ? x__24589__auto__ : y__24590__auto__);
})();
var G__42268 = null;
return (cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5 ? cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5(G__42264,G__42265,G__42266,G__42267,G__42268) : cljs.core.build_subvec.call(null,G__42264,G__42265,G__42266,G__42267,G__42268));
});

cljs.core.Subvec.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.Subvec.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.Subvec(self__.meta,self__.v,self__.start,self__.end,self__.__hash));
});

cljs.core.Subvec.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (self__.end - self__.start);
});

cljs.core.Subvec.prototype.cljs$core$IStack$_peek$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.v,(self__.end - (1)));
});

cljs.core.Subvec.prototype.cljs$core$IStack$_pop$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.start === self__.end)){
throw (new Error("Can't pop empty vector"));
} else {
var G__42269 = self__.meta;
var G__42270 = self__.v;
var G__42271 = self__.start;
var G__42272 = (self__.end - (1));
var G__42273 = null;
return (cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5 ? cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5(G__42269,G__42270,G__42271,G__42272,G__42273) : cljs.core.build_subvec.call(null,G__42269,G__42270,G__42271,G__42272,G__42273));
}
});

cljs.core.Subvec.prototype.cljs$core$IReversible$_rseq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if(!((self__.start === self__.end))){
return (new cljs.core.RSeq(coll__$1,((self__.end - self__.start) - (1)),null));
} else {
return null;
}
});

cljs.core.Subvec.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__24693__auto__ = self__.__hash;
if(!((h__24693__auto__ == null))){
return h__24693__auto__;
} else {
var h__24693__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__24693__auto____$1;

return h__24693__auto____$1;
}
});

cljs.core.Subvec.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.Subvec.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.PersistentVector.EMPTY,self__.meta);
});

cljs.core.Subvec.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(coll__$1,f);
});

cljs.core.Subvec.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start__$1){
var self__ = this;
var coll__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3(coll__$1,f,start__$1);
});

cljs.core.Subvec.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (coll,key,val){
var self__ = this;
var coll__$1 = this;
if(typeof key === 'number'){
return cljs.core._assoc_n(coll__$1,key,val);
} else {
throw (new Error("Subvec's key for assoc must be a number."));
}
});

cljs.core.Subvec.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var subvec_seq = ((function (coll__$1){
return (function subvec_seq(i){
if((i === self__.end)){
return null;
} else {
return cljs.core.cons(cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.v,i),(new cljs.core.LazySeq(null,((function (coll__$1){
return (function (){
return subvec_seq((i + (1)));
});})(coll__$1))
,null,null)));
}
});})(coll__$1))
;
return subvec_seq(self__.start);
});

cljs.core.Subvec.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
var G__42275 = meta__$1;
var G__42276 = self__.v;
var G__42277 = self__.start;
var G__42278 = self__.end;
var G__42279 = self__.__hash;
return (cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5 ? cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5(G__42275,G__42276,G__42277,G__42278,G__42279) : cljs.core.build_subvec.call(null,G__42275,G__42276,G__42277,G__42278,G__42279));
});

cljs.core.Subvec.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
var G__42280 = self__.meta;
var G__42281 = cljs.core._assoc_n(self__.v,self__.end,o);
var G__42282 = self__.start;
var G__42283 = (self__.end + (1));
var G__42284 = null;
return (cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5 ? cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5(G__42280,G__42281,G__42282,G__42283,G__42284) : cljs.core.build_subvec.call(null,G__42280,G__42281,G__42282,G__42283,G__42284));
});

cljs.core.Subvec.prototype.call = (function() {
var G__42285 = null;
var G__42285__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$IIndexed$_nth$arity$2(null,k);
});
var G__42285__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$IIndexed$_nth$arity$3(null,k,not_found);
});
G__42285 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__42285__2.call(this,self__,k);
case 3:
return G__42285__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__42285.cljs$core$IFn$_invoke$arity$2 = G__42285__2;
G__42285.cljs$core$IFn$_invoke$arity$3 = G__42285__3;
return G__42285;
})()
;

cljs.core.Subvec.prototype.apply = (function (self__,args42263){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args42263)));
});

cljs.core.Subvec.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$IIndexed$_nth$arity$2(null,k);
});

cljs.core.Subvec.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$IIndexed$_nth$arity$3(null,k,not_found);
});

cljs.core.Subvec.cljs$lang$type = true;

cljs.core.Subvec.cljs$lang$ctorStr = "cljs.core/Subvec";

cljs.core.Subvec.cljs$lang$ctorPrWriter = (function (this__24859__auto__,writer__24860__auto__,opt__24861__auto__){
return cljs.core._write(writer__24860__auto__,"cljs.core/Subvec");
});

cljs.core.__GT_Subvec = (function __GT_Subvec(meta,v,start,end,__hash){
return (new cljs.core.Subvec(meta,v,start,end,__hash));
});

(cljs.core.Subvec.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__25250__auto__ = this;
return cljs.core.es6_iterator(this__25250__auto__);
}));
cljs.core.build_subvec = (function build_subvec(meta,v,start,end,__hash){
while(true){
if((v instanceof cljs.core.Subvec)){
var G__42286 = meta;
var G__42287 = v.v;
var G__42288 = (v.start + start);
var G__42289 = (v.start + end);
var G__42290 = __hash;
meta = G__42286;
v = G__42287;
start = G__42288;
end = G__42289;
__hash = G__42290;
continue;
} else {
var c = cljs.core.count(v);
if(((start < (0))) || ((end < (0))) || ((start > c)) || ((end > c))){
throw (new Error("Index out of bounds"));
} else {
}

return (new cljs.core.Subvec(meta,v,start,end,__hash));
}
break;
}
});
/**
* Returns a persistent vector of the items in vector from
* start (inclusive) to end (exclusive).  If end is not supplied,
* defaults to (count vector). This operation is O(1) and very fast, as
* the resulting vector shares structure with the original and no
* trimming is done.
*/
cljs.core.subvec = (function() {
var subvec = null;
var subvec__2 = (function (v,start){
return subvec.cljs$core$IFn$_invoke$arity$3(v,start,cljs.core.count(v));
});
var subvec__3 = (function (v,start,end){
return cljs.core.build_subvec(null,v,start,end,null);
});
subvec = function(v,start,end){
switch(arguments.length){
case 2:
return subvec__2.call(this,v,start);
case 3:
return subvec__3.call(this,v,start,end);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
subvec.cljs$core$IFn$_invoke$arity$2 = subvec__2;
subvec.cljs$core$IFn$_invoke$arity$3 = subvec__3;
return subvec;
})()
;
cljs.core.tv_ensure_editable = (function tv_ensure_editable(edit,node){
if((edit === node.edit)){
return node;
} else {
return (new cljs.core.VectorNode(edit,cljs.core.aclone(node.arr)));
}
});
cljs.core.tv_editable_root = (function tv_editable_root(node){
return (new cljs.core.VectorNode((function (){var obj42297 = {};
return obj42297;
})(),cljs.core.aclone(node.arr)));
});
cljs.core.tv_editable_tail = (function tv_editable_tail(tl){
var ret = [null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null];
cljs.core.array_copy(tl,(0),ret,(0),tl.length);

return ret;
});
cljs.core.tv_push_tail = (function tv_push_tail(tv,level,parent,tail_node){
var ret = cljs.core.tv_ensure_editable(tv.root.edit,parent);
var subidx = (((tv.cnt - (1)) >>> level) & (31));
cljs.core.pv_aset(ret,subidx,(((level === (5)))?tail_node:(function (){var child = cljs.core.pv_aget(ret,subidx);
if(!((child == null))){
return tv_push_tail(tv,(level - (5)),child,tail_node);
} else {
return cljs.core.new_path(tv.root.edit,(level - (5)),tail_node);
}
})()));

return ret;
});
cljs.core.tv_pop_tail = (function tv_pop_tail(tv,level,node){
var node__$1 = cljs.core.tv_ensure_editable(tv.root.edit,node);
var subidx = (((tv.cnt - (2)) >>> level) & (31));
if((level > (5))){
var new_child = tv_pop_tail(tv,(level - (5)),cljs.core.pv_aget(node__$1,subidx));
if(((new_child == null)) && ((subidx === (0)))){
return null;
} else {
cljs.core.pv_aset(node__$1,subidx,new_child);

return node__$1;
}
} else {
if((subidx === (0))){
return null;
} else {
cljs.core.pv_aset(node__$1,subidx,null);

return node__$1;

}
}
});
cljs.core.unchecked_editable_array_for = (function unchecked_editable_array_for(tv,i){
if((i >= cljs.core.tail_off(tv))){
return tv.tail;
} else {
var root = tv.root;
var node = root;
var level = tv.shift;
while(true){
if((level > (0))){
var G__42305 = cljs.core.tv_ensure_editable(root.edit,cljs.core.pv_aget(node,((i >>> level) & (31))));
var G__42306 = (level - (5));
node = G__42305;
level = G__42306;
continue;
} else {
return node.arr;
}
break;
}
}
});

/**
* @constructor
*/
cljs.core.TransientVector = (function (cnt,shift,root,tail){
this.cnt = cnt;
this.shift = shift;
this.root = root;
this.tail = tail;
this.cljs$lang$protocol_mask$partition0$ = 275;
this.cljs$lang$protocol_mask$partition1$ = 88;
})
cljs.core.TransientVector.prototype.call = (function() {
var G__42310 = null;
var G__42310__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__42310__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__42310 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__42310__2.call(this,self__,k);
case 3:
return G__42310__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__42310.cljs$core$IFn$_invoke$arity$2 = G__42310__2;
G__42310.cljs$core$IFn$_invoke$arity$3 = G__42310__3;
return G__42310;
})()
;

cljs.core.TransientVector.prototype.apply = (function (self__,args42307){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args42307)));
});

cljs.core.TransientVector.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.TransientVector.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.TransientVector.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.TransientVector.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
if(typeof k === 'number'){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(coll__$1,k,not_found);
} else {
return not_found;
}
});

cljs.core.TransientVector.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (coll,n){
var self__ = this;
var coll__$1 = this;
if(self__.root.edit){
return (cljs.core.array_for(coll__$1,n)[(n & (31))]);
} else {
throw (new Error("nth after persistent!"));
}
});

cljs.core.TransientVector.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (coll,n,not_found){
var self__ = this;
var coll__$1 = this;
if((((0) <= n)) && ((n < self__.cnt))){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll__$1,n);
} else {
return not_found;
}
});

cljs.core.TransientVector.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if(self__.root.edit){
return self__.cnt;
} else {
throw (new Error("count after persistent!"));
}
});

cljs.core.TransientVector.prototype.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3 = (function (tcoll,n,val){
var self__ = this;
var tcoll__$1 = this;
if(self__.root.edit){
if((((0) <= n)) && ((n < self__.cnt))){
if((cljs.core.tail_off(tcoll__$1) <= n)){
(self__.tail[(n & (31))] = val);

return tcoll__$1;
} else {
var new_root = ((function (tcoll__$1){
return (function go(level,node){
var node__$1 = cljs.core.tv_ensure_editable(self__.root.edit,node);
if((level === (0))){
cljs.core.pv_aset(node__$1,(n & (31)),val);

return node__$1;
} else {
var subidx = ((n >>> level) & (31));
cljs.core.pv_aset(node__$1,subidx,go((level - (5)),cljs.core.pv_aget(node__$1,subidx)));

return node__$1;
}
});})(tcoll__$1))
.call(null,self__.shift,self__.root);
self__.root = new_root;

return tcoll__$1;
}
} else {
if((n === self__.cnt)){
return cljs.core._conj_BANG_(tcoll__$1,val);
} else {
throw (new Error([cljs.core.str("Index "),cljs.core.str(n),cljs.core.str(" out of bounds for TransientVector of length"),cljs.core.str(self__.cnt)].join('')));

}
}
} else {
throw (new Error("assoc! after persistent!"));
}
});

cljs.core.TransientVector.prototype.cljs$core$ITransientVector$_pop_BANG_$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
if(self__.root.edit){
if((self__.cnt === (0))){
throw (new Error("Can't pop empty vector"));
} else {
if(((1) === self__.cnt)){
self__.cnt = (0);

return tcoll__$1;
} else {
if((((self__.cnt - (1)) & (31)) > (0))){
self__.cnt = (self__.cnt - (1));

return tcoll__$1;
} else {
var new_tail = cljs.core.unchecked_editable_array_for(tcoll__$1,(self__.cnt - (2)));
var new_root = (function (){var nr = cljs.core.tv_pop_tail(tcoll__$1,self__.shift,self__.root);
if(!((nr == null))){
return nr;
} else {
return (new cljs.core.VectorNode(self__.root.edit,[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null]));
}
})();
if((((5) < self__.shift)) && ((cljs.core.pv_aget(new_root,(1)) == null))){
var new_root__$1 = cljs.core.tv_ensure_editable(self__.root.edit,cljs.core.pv_aget(new_root,(0)));
self__.root = new_root__$1;

self__.shift = (self__.shift - (5));

self__.cnt = (self__.cnt - (1));

self__.tail = new_tail;

return tcoll__$1;
} else {
self__.root = new_root;

self__.cnt = (self__.cnt - (1));

self__.tail = new_tail;

return tcoll__$1;
}

}
}
}
} else {
throw (new Error("pop! after persistent!"));
}
});

cljs.core.TransientVector.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = (function (tcoll,key,val){
var self__ = this;
var tcoll__$1 = this;
if(typeof key === 'number'){
return cljs.core._assoc_n_BANG_(tcoll__$1,key,val);
} else {
throw (new Error("TransientVector's key for assoc! must be a number."));
}
});

cljs.core.TransientVector.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = (function (tcoll,o){
var self__ = this;
var tcoll__$1 = this;
if(self__.root.edit){
if(((self__.cnt - cljs.core.tail_off(tcoll__$1)) < (32))){
(self__.tail[(self__.cnt & (31))] = o);

self__.cnt = (self__.cnt + (1));

return tcoll__$1;
} else {
var tail_node = (new cljs.core.VectorNode(self__.root.edit,self__.tail));
var new_tail = [null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null];
(new_tail[(0)] = o);

self__.tail = new_tail;

if(((self__.cnt >>> (5)) > ((1) << self__.shift))){
var new_root_array = [null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null];
var new_shift = (self__.shift + (5));
(new_root_array[(0)] = self__.root);

(new_root_array[(1)] = cljs.core.new_path(self__.root.edit,self__.shift,tail_node));

self__.root = (new cljs.core.VectorNode(self__.root.edit,new_root_array));

self__.shift = new_shift;

self__.cnt = (self__.cnt + (1));

return tcoll__$1;
} else {
var new_root = cljs.core.tv_push_tail(tcoll__$1,self__.shift,self__.root,tail_node);
self__.root = new_root;

self__.cnt = (self__.cnt + (1));

return tcoll__$1;
}
}
} else {
throw (new Error("conj! after persistent!"));
}
});

cljs.core.TransientVector.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
if(self__.root.edit){
self__.root.edit = null;

var len = (self__.cnt - cljs.core.tail_off(tcoll__$1));
var trimmed_tail = (new Array(len));
cljs.core.array_copy(self__.tail,(0),trimmed_tail,(0),len);

return (new cljs.core.PersistentVector(null,self__.cnt,self__.shift,self__.root,trimmed_tail,null));
} else {
throw (new Error("persistent! called twice"));
}
});

cljs.core.TransientVector.cljs$lang$type = true;

cljs.core.TransientVector.cljs$lang$ctorStr = "cljs.core/TransientVector";

cljs.core.TransientVector.cljs$lang$ctorPrWriter = (function (this__24859__auto__,writer__24860__auto__,opt__24861__auto__){
return cljs.core._write(writer__24860__auto__,"cljs.core/TransientVector");
});

cljs.core.__GT_TransientVector = (function __GT_TransientVector(cnt,shift,root,tail){
return (new cljs.core.TransientVector(cnt,shift,root,tail));
});


/**
* @constructor
*/
cljs.core.PersistentQueueSeq = (function (meta,front,rear,__hash){
this.meta = meta;
this.front = front;
this.rear = rear;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 31850572;
})
cljs.core.PersistentQueueSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentQueueSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__24693__auto__ = self__.__hash;
if(!((h__24693__auto__ == null))){
return h__24693__auto__;
} else {
var h__24693__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__24693__auto____$1;

return h__24693__auto____$1;
}
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.first(self__.front);
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var temp__4124__auto__ = cljs.core.next(self__.front);
if(temp__4124__auto__){
var f1 = temp__4124__auto__;
return (new cljs.core.PersistentQueueSeq(self__.meta,f1,self__.rear,null));
} else {
if((self__.rear == null)){
return cljs.core._empty(coll__$1);
} else {
return (new cljs.core.PersistentQueueSeq(self__.meta,self__.rear,null,null));
}
}
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentQueueSeq(meta__$1,self__.front,self__.rear,self__.__hash));
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.PersistentQueueSeq.cljs$lang$type = true;

cljs.core.PersistentQueueSeq.cljs$lang$ctorStr = "cljs.core/PersistentQueueSeq";

cljs.core.PersistentQueueSeq.cljs$lang$ctorPrWriter = (function (this__24859__auto__,writer__24860__auto__,opt__24861__auto__){
return cljs.core._write(writer__24860__auto__,"cljs.core/PersistentQueueSeq");
});

cljs.core.__GT_PersistentQueueSeq = (function __GT_PersistentQueueSeq(meta,front,rear,__hash){
return (new cljs.core.PersistentQueueSeq(meta,front,rear,__hash));
});

(cljs.core.PersistentQueueSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__25250__auto__ = this;
return cljs.core.es6_iterator(this__25250__auto__);
}));

/**
* @constructor
*/
cljs.core.PersistentQueue = (function (meta,count,front,rear,__hash){
this.meta = meta;
this.count = count;
this.front = front;
this.rear = rear;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 31858766;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.PersistentQueue.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentQueue.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentQueue.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentQueue.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentQueue(self__.meta,self__.count,self__.front,self__.rear,self__.__hash));
});

cljs.core.PersistentQueue.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.count;
});

cljs.core.PersistentQueue.prototype.cljs$core$IStack$_peek$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.first(self__.front);
});

cljs.core.PersistentQueue.prototype.cljs$core$IStack$_pop$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if(cljs.core.truth_(self__.front)){
var temp__4124__auto__ = cljs.core.next(self__.front);
if(temp__4124__auto__){
var f1 = temp__4124__auto__;
return (new cljs.core.PersistentQueue(self__.meta,(self__.count - (1)),f1,self__.rear,null));
} else {
return (new cljs.core.PersistentQueue(self__.meta,(self__.count - (1)),cljs.core.seq(self__.rear),cljs.core.PersistentVector.EMPTY,null));
}
} else {
return coll__$1;
}
});

cljs.core.PersistentQueue.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__24693__auto__ = self__.__hash;
if(!((h__24693__auto__ == null))){
return h__24693__auto__;
} else {
var h__24693__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__24693__auto____$1;

return h__24693__auto____$1;
}
});

cljs.core.PersistentQueue.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.PersistentQueue.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.PersistentQueue.EMPTY,self__.meta);
});

cljs.core.PersistentQueue.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.first(self__.front);
});

cljs.core.PersistentQueue.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.rest(cljs.core.seq(coll__$1));
});

cljs.core.PersistentQueue.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var rear__$1 = cljs.core.seq(self__.rear);
if(cljs.core.truth_((function (){var or__24272__auto__ = self__.front;
if(cljs.core.truth_(or__24272__auto__)){
return or__24272__auto__;
} else {
return rear__$1;
}
})())){
return (new cljs.core.PersistentQueueSeq(null,self__.front,cljs.core.seq(rear__$1),null));
} else {
return null;
}
});

cljs.core.PersistentQueue.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentQueue(meta__$1,self__.count,self__.front,self__.rear,self__.__hash));
});

cljs.core.PersistentQueue.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
if(cljs.core.truth_(self__.front)){
return (new cljs.core.PersistentQueue(self__.meta,(self__.count + (1)),self__.front,cljs.core.conj.cljs$core$IFn$_invoke$arity$2((function (){var or__24272__auto__ = self__.rear;
if(cljs.core.truth_(or__24272__auto__)){
return or__24272__auto__;
} else {
return cljs.core.PersistentVector.EMPTY;
}
})(),o),null));
} else {
return (new cljs.core.PersistentQueue(self__.meta,(self__.count + (1)),cljs.core.conj.cljs$core$IFn$_invoke$arity$2(self__.front,o),cljs.core.PersistentVector.EMPTY,null));
}
});

cljs.core.PersistentQueue.cljs$lang$type = true;

cljs.core.PersistentQueue.cljs$lang$ctorStr = "cljs.core/PersistentQueue";

cljs.core.PersistentQueue.cljs$lang$ctorPrWriter = (function (this__24859__auto__,writer__24860__auto__,opt__24861__auto__){
return cljs.core._write(writer__24860__auto__,"cljs.core/PersistentQueue");
});

cljs.core.__GT_PersistentQueue = (function __GT_PersistentQueue(meta,count,front,rear,__hash){
return (new cljs.core.PersistentQueue(meta,count,front,rear,__hash));
});

cljs.core.PersistentQueue.EMPTY = (new cljs.core.PersistentQueue(null,(0),null,cljs.core.PersistentVector.EMPTY,(0)));
(cljs.core.PersistentQueue.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__25250__auto__ = this;
return cljs.core.es6_iterator(this__25250__auto__);
}));

/**
* @constructor
*/
cljs.core.NeverEquiv = (function (){
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 2097152;
})
cljs.core.NeverEquiv.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (o,other){
var self__ = this;
var o__$1 = this;
return false;
});

cljs.core.NeverEquiv.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.NeverEquiv.cljs$lang$type = true;

cljs.core.NeverEquiv.cljs$lang$ctorStr = "cljs.core/NeverEquiv";

cljs.core.NeverEquiv.cljs$lang$ctorPrWriter = (function (this__24859__auto__,writer__24860__auto__,opt__24861__auto__){
return cljs.core._write(writer__24860__auto__,"cljs.core/NeverEquiv");
});

cljs.core.__GT_NeverEquiv = (function __GT_NeverEquiv(){
return (new cljs.core.NeverEquiv());
});

cljs.core.never_equiv = (new cljs.core.NeverEquiv());
/**
* Assumes y is a map. Returns true if x equals y, otherwise returns
* false.
*/
cljs.core.equiv_map = (function equiv_map(x,y){
return cljs.core.boolean$(((cljs.core.map_QMARK_(y))?(((cljs.core.count(x) === cljs.core.count(y)))?cljs.core.every_QMARK_(cljs.core.identity,cljs.core.map.cljs$core$IFn$_invoke$arity$2((function (xkv){
return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$3(y,cljs.core.first(xkv),cljs.core.never_equiv),cljs.core.second(xkv));
}),x)):null):null));
});
cljs.core.scan_array = (function scan_array(incr,k,array){
var len = array.length;
var i = (0);
while(true){
if((i < len)){
if((k === (array[i]))){
return i;
} else {
var G__42311 = (i + incr);
i = G__42311;
continue;
}
} else {
return null;
}
break;
}
});
cljs.core.obj_map_compare_keys = (function obj_map_compare_keys(a,b){
var a__$1 = cljs.core.hash(a);
var b__$1 = cljs.core.hash(b);
if((a__$1 < b__$1)){
return (-1);
} else {
if((a__$1 > b__$1)){
return (1);
} else {
return (0);

}
}
});
cljs.core.obj_map__GT_hash_map = (function obj_map__GT_hash_map(m,k,v){
var ks = m.keys;
var len = ks.length;
var so = m.strobj;
var mm = cljs.core.meta(m);
var i = (0);
var out = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
while(true){
if((i < len)){
var k__$1 = (ks[i]);
var G__42312 = (i + (1));
var G__42313 = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(out,k__$1,(so[k__$1]));
i = G__42312;
out = G__42313;
continue;
} else {
return cljs.core.with_meta(cljs.core.persistent_BANG_(cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(out,k,v)),mm);
}
break;
}
});
cljs.core.obj_clone = (function obj_clone(obj,ks){
var new_obj = (function (){var obj42317 = {};
return obj42317;
})();
var l = ks.length;
var i_42318 = (0);
while(true){
if((i_42318 < l)){
var k_42319 = (ks[i_42318]);
(new_obj[k_42319] = (obj[k_42319]));

var G__42320 = (i_42318 + (1));
i_42318 = G__42320;
continue;
} else {
}
break;
}

return new_obj;
});

/**
* @constructor
*/
cljs.core.ObjMap = (function (meta,keys,strobj,update_count,__hash){
this.meta = meta;
this.keys = keys;
this.strobj = strobj;
this.update_count = update_count;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 16123663;
this.cljs$lang$protocol_mask$partition1$ = 4;
})
cljs.core.ObjMap.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.ObjMap.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.ObjMap.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.ObjMap.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
if(cljs.core.truth_((function (){var and__24260__auto__ = (function (){var G__42324 = k;
return goog.isString(G__42324);
})();
if(cljs.core.truth_(and__24260__auto__)){
return !((cljs.core.scan_array((1),k,self__.keys) == null));
} else {
return and__24260__auto__;
}
})())){
return (self__.strobj[k]);
} else {
return not_found;
}
});

cljs.core.ObjMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = (function (coll,f,init){
var self__ = this;
var coll__$1 = this;
var len = self__.keys.length;
var keys__$1 = self__.keys.sort(cljs.core.obj_map_compare_keys);
var init__$1 = init;
while(true){
if(cljs.core.seq(keys__$1)){
var k = cljs.core.first(keys__$1);
var init__$2 = (function (){var G__42325 = init__$1;
var G__42326 = k;
var G__42327 = (self__.strobj[k]);
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__42325,G__42326,G__42327) : f.call(null,G__42325,G__42326,G__42327));
})();
if(cljs.core.reduced_QMARK_(init__$2)){
var G__42328 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__42328) : cljs.core.deref.call(null,G__42328));
} else {
var G__42334 = cljs.core.rest(keys__$1);
var G__42335 = init__$2;
keys__$1 = G__42334;
init__$1 = G__42335;
continue;
}
} else {
return init__$1;
}
break;
}
});

cljs.core.ObjMap.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.ObjMap.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.keys.length;
});

cljs.core.ObjMap.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__24693__auto__ = self__.__hash;
if(!((h__24693__auto__ == null))){
return h__24693__auto__;
} else {
var h__24693__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
self__.__hash = h__24693__auto____$1;

return h__24693__auto____$1;
}
});

cljs.core.ObjMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_map(coll__$1,other);
});

cljs.core.ObjMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.transient$(cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentHashMap.EMPTY,coll__$1));
});

cljs.core.ObjMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.ObjMap.EMPTY,self__.meta);
});

cljs.core.ObjMap.prototype.cljs$core$IMap$_dissoc$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
if(cljs.core.truth_((function (){var and__24260__auto__ = (function (){var G__42330 = k;
return goog.isString(G__42330);
})();
if(cljs.core.truth_(and__24260__auto__)){
return !((cljs.core.scan_array((1),k,self__.keys) == null));
} else {
return and__24260__auto__;
}
})())){
var new_keys = cljs.core.aclone(self__.keys);
var new_strobj = cljs.core.obj_clone(self__.strobj,self__.keys);
new_keys.splice(cljs.core.scan_array((1),k,new_keys),(1));

delete new_strobj[k];

return (new cljs.core.ObjMap(self__.meta,new_keys,new_strobj,(self__.update_count + (1)),null));
} else {
return coll__$1;
}
});

cljs.core.ObjMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (coll,k,v){
var self__ = this;
var coll__$1 = this;
if(cljs.core.truth_((function (){var G__42331 = k;
return goog.isString(G__42331);
})())){
if(((self__.update_count > cljs.core.ObjMap.HASHMAP_THRESHOLD)) || ((self__.keys.length >= cljs.core.ObjMap.HASHMAP_THRESHOLD))){
return cljs.core.obj_map__GT_hash_map(coll__$1,k,v);
} else {
if(!((cljs.core.scan_array((1),k,self__.keys) == null))){
var new_strobj = cljs.core.obj_clone(self__.strobj,self__.keys);
(new_strobj[k] = v);

return (new cljs.core.ObjMap(self__.meta,self__.keys,new_strobj,(self__.update_count + (1)),null));
} else {
var new_strobj = cljs.core.obj_clone(self__.strobj,self__.keys);
var new_keys = cljs.core.aclone(self__.keys);
(new_strobj[k] = v);

new_keys.push(k);

return (new cljs.core.ObjMap(self__.meta,new_keys,new_strobj,(self__.update_count + (1)),null));
}
}
} else {
return cljs.core.obj_map__GT_hash_map(coll__$1,k,v);
}
});

cljs.core.ObjMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
if(cljs.core.truth_((function (){var and__24260__auto__ = (function (){var G__42333 = k;
return goog.isString(G__42333);
})();
if(cljs.core.truth_(and__24260__auto__)){
return !((cljs.core.scan_array((1),k,self__.keys) == null));
} else {
return and__24260__auto__;
}
})())){
return true;
} else {
return false;
}
});

cljs.core.ObjMap.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.keys.length > (0))){
return cljs.core.map.cljs$core$IFn$_invoke$arity$2(((function (coll__$1){
return (function (p1__42321_SHARP_){
return (new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[p1__42321_SHARP_,(self__.strobj[p1__42321_SHARP_])],null));
});})(coll__$1))
,self__.keys.sort(cljs.core.obj_map_compare_keys));
} else {
return null;
}
});

cljs.core.ObjMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.ObjMap(meta__$1,self__.keys,self__.strobj,self__.update_count,self__.__hash));
});

cljs.core.ObjMap.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,entry){
var self__ = this;
var coll__$1 = this;
if(cljs.core.vector_QMARK_(entry)){
return cljs.core._assoc(coll__$1,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(1)));
} else {
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj,coll__$1,entry);
}
});

cljs.core.ObjMap.prototype.call = (function() {
var G__42336 = null;
var G__42336__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__42336__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__42336 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__42336__2.call(this,self__,k);
case 3:
return G__42336__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__42336.cljs$core$IFn$_invoke$arity$2 = G__42336__2;
G__42336.cljs$core$IFn$_invoke$arity$3 = G__42336__3;
return G__42336;
})()
;

cljs.core.ObjMap.prototype.apply = (function (self__,args42322){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args42322)));
});

cljs.core.ObjMap.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.ObjMap.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.ObjMap.cljs$lang$type = true;

cljs.core.ObjMap.cljs$lang$ctorStr = "cljs.core/ObjMap";

cljs.core.ObjMap.cljs$lang$ctorPrWriter = (function (this__24859__auto__,writer__24860__auto__,opt__24861__auto__){
return cljs.core._write(writer__24860__auto__,"cljs.core/ObjMap");
});

cljs.core.__GT_ObjMap = (function __GT_ObjMap(meta,keys,strobj,update_count,__hash){
return (new cljs.core.ObjMap(meta,keys,strobj,update_count,__hash));
});

cljs.core.ObjMap.EMPTY = (new cljs.core.ObjMap(null,[],(function (){var obj42338 = {};
return obj42338;
})(),(0),(0)));
cljs.core.ObjMap.HASHMAP_THRESHOLD = (8);
cljs.core.ObjMap.fromObject = (function (ks,obj){
return (new cljs.core.ObjMap(null,ks,obj,(0),null));
});

/**
* @constructor
*/
cljs.core.ES6EntriesIterator = (function (s){
this.s = s;
})
cljs.core.ES6EntriesIterator.prototype.next = (function (){
var self__ = this;
var _ = this;
if(!((self__.s == null))){
var vec__42339 = cljs.core.first(self__.s);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__42339,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__42339,(1),null);
self__.s = cljs.core.next(self__.s);

return {"done": false, "value": [k,v]};
} else {
return {"done": true, "value": null};
}
});

cljs.core.ES6EntriesIterator.cljs$lang$type = true;

cljs.core.ES6EntriesIterator.cljs$lang$ctorStr = "cljs.core/ES6EntriesIterator";

cljs.core.ES6EntriesIterator.cljs$lang$ctorPrWriter = (function (this__24859__auto__,writer__24860__auto__,opt__24861__auto__){
return cljs.core._write(writer__24860__auto__,"cljs.core/ES6EntriesIterator");
});

cljs.core.__GT_ES6EntriesIterator = (function __GT_ES6EntriesIterator(s){
return (new cljs.core.ES6EntriesIterator(s));
});

cljs.core.es6_entries_iterator = (function es6_entries_iterator(coll){
return (new cljs.core.ES6EntriesIterator(cljs.core.seq(coll)));
});

/**
* @constructor
*/
cljs.core.ES6SetEntriesIterator = (function (s){
this.s = s;
})
cljs.core.ES6SetEntriesIterator.prototype.next = (function (){
var self__ = this;
var _ = this;
if(!((self__.s == null))){
var x = cljs.core.first(self__.s);
self__.s = cljs.core.next(self__.s);

return {"done": false, "value": [x,x]};
} else {
return {"done": true, "value": null};
}
});

cljs.core.ES6SetEntriesIterator.cljs$lang$type = true;

cljs.core.ES6SetEntriesIterator.cljs$lang$ctorStr = "cljs.core/ES6SetEntriesIterator";

cljs.core.ES6SetEntriesIterator.cljs$lang$ctorPrWriter = (function (this__24859__auto__,writer__24860__auto__,opt__24861__auto__){
return cljs.core._write(writer__24860__auto__,"cljs.core/ES6SetEntriesIterator");
});

cljs.core.__GT_ES6SetEntriesIterator = (function __GT_ES6SetEntriesIterator(s){
return (new cljs.core.ES6SetEntriesIterator(s));
});

cljs.core.es6_set_entries_iterator = (function es6_set_entries_iterator(coll){
return (new cljs.core.ES6SetEntriesIterator(cljs.core.seq(coll)));
});
cljs.core.array_map_index_of_nil_QMARK_ = (function array_map_index_of_nil_QMARK_(arr,m,k){
var len = arr.length;
var i = (0);
while(true){
if((len <= i)){
return (-1);
} else {
if(((arr[i]) == null)){
return i;
} else {
var G__42340 = (i + (2));
i = G__42340;
continue;

}
}
break;
}
});
cljs.core.array_map_index_of_keyword_QMARK_ = (function array_map_index_of_keyword_QMARK_(arr,m,k){
var len = arr.length;
var kstr = k.fqn;
var i = (0);
while(true){
if((len <= i)){
return (-1);
} else {
if((function (){var k_SINGLEQUOTE_ = (arr[i]);
return ((k_SINGLEQUOTE_ instanceof cljs.core.Keyword)) && ((kstr === k_SINGLEQUOTE_.fqn));
})()){
return i;
} else {
var G__42341 = (i + (2));
i = G__42341;
continue;

}
}
break;
}
});
cljs.core.array_map_index_of_symbol_QMARK_ = (function array_map_index_of_symbol_QMARK_(arr,m,k){
var len = arr.length;
var kstr = k.str;
var i = (0);
while(true){
if((len <= i)){
return (-1);
} else {
if((function (){var k_SINGLEQUOTE_ = (arr[i]);
return ((k_SINGLEQUOTE_ instanceof cljs.core.Symbol)) && ((kstr === k_SINGLEQUOTE_.str));
})()){
return i;
} else {
var G__42342 = (i + (2));
i = G__42342;
continue;

}
}
break;
}
});
cljs.core.array_map_index_of_identical_QMARK_ = (function array_map_index_of_identical_QMARK_(arr,m,k){
var len = arr.length;
var i = (0);
while(true){
if((len <= i)){
return (-1);
} else {
if((k === (arr[i]))){
return i;
} else {
var G__42343 = (i + (2));
i = G__42343;
continue;

}
}
break;
}
});
cljs.core.array_map_index_of_equiv_QMARK_ = (function array_map_index_of_equiv_QMARK_(arr,m,k){
var len = arr.length;
var i = (0);
while(true){
if((len <= i)){
return (-1);
} else {
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(k,(arr[i]))){
return i;
} else {
var G__42344 = (i + (2));
i = G__42344;
continue;

}
}
break;
}
});
cljs.core.array_map_index_of = (function array_map_index_of(m,k){
var arr = m.arr;
if((k instanceof cljs.core.Keyword)){
return cljs.core.array_map_index_of_keyword_QMARK_(arr,m,k);
} else {
if(cljs.core.truth_((function (){var or__24272__auto__ = (function (){var G__42348 = k;
return goog.isString(G__42348);
})();
if(cljs.core.truth_(or__24272__auto__)){
return or__24272__auto__;
} else {
return typeof k === 'number';
}
})())){
return cljs.core.array_map_index_of_identical_QMARK_(arr,m,k);
} else {
if((k instanceof cljs.core.Symbol)){
return cljs.core.array_map_index_of_symbol_QMARK_(arr,m,k);
} else {
if((k == null)){
return cljs.core.array_map_index_of_nil_QMARK_(arr,m,k);
} else {
return cljs.core.array_map_index_of_equiv_QMARK_(arr,m,k);

}
}
}
}
});
cljs.core.array_map_extend_kv = (function array_map_extend_kv(m,k,v){
var arr = m.arr;
var l = arr.length;
var narr = (new Array((l + (2))));
var i_42349 = (0);
while(true){
if((i_42349 < l)){
(narr[i_42349] = (arr[i_42349]));

var G__42350 = (i_42349 + (1));
i_42349 = G__42350;
continue;
} else {
}
break;
}

(narr[l] = k);

(narr[(l + (1))] = v);

return narr;
});

/**
* @constructor
*/
cljs.core.PersistentArrayMapSeq = (function (arr,i,_meta){
this.arr = arr;
this.i = i;
this._meta = _meta;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32374990;
})
cljs.core.PersistentArrayMapSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentArrayMapSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__._meta;
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.i < (self__.arr.length - (2)))){
return (new cljs.core.PersistentArrayMapSeq(self__.arr,(self__.i + (2)),self__._meta));
} else {
return null;
}
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return ((self__.arr.length - self__.i) / (2));
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.hash_ordered_coll(coll__$1);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__._meta);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(self__.arr[self__.i]),(self__.arr[(self__.i + (1))])], null);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.i < (self__.arr.length - (2)))){
return (new cljs.core.PersistentArrayMapSeq(self__.arr,(self__.i + (2)),self__._meta));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,new_meta){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentArrayMapSeq(self__.arr,self__.i,new_meta));
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.PersistentArrayMapSeq.cljs$lang$type = true;

cljs.core.PersistentArrayMapSeq.cljs$lang$ctorStr = "cljs.core/PersistentArrayMapSeq";

cljs.core.PersistentArrayMapSeq.cljs$lang$ctorPrWriter = (function (this__24859__auto__,writer__24860__auto__,opt__24861__auto__){
return cljs.core._write(writer__24860__auto__,"cljs.core/PersistentArrayMapSeq");
});

cljs.core.__GT_PersistentArrayMapSeq = (function __GT_PersistentArrayMapSeq(arr,i,_meta){
return (new cljs.core.PersistentArrayMapSeq(arr,i,_meta));
});

(cljs.core.PersistentArrayMapSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__25250__auto__ = this;
return cljs.core.es6_iterator(this__25250__auto__);
}));
cljs.core.persistent_array_map_seq = (function persistent_array_map_seq(arr,i,_meta){
if((i <= (arr.length - (2)))){
return (new cljs.core.PersistentArrayMapSeq(arr,i,_meta));
} else {
return null;
}
});


/**
* @constructor
*/
cljs.core.PersistentArrayMapIterator = (function (arr,i,cnt){
this.arr = arr;
this.i = i;
this.cnt = cnt;
})
cljs.core.PersistentArrayMapIterator.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
return (self__.i < self__.cnt);
});

cljs.core.PersistentArrayMapIterator.prototype.next = (function (){
var self__ = this;
var _ = this;
var ret = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(self__.arr[self__.i]),(self__.arr[(self__.i + (1))])], null);
self__.i = (self__.i + (2));

return ret;
});

cljs.core.PersistentArrayMapIterator.cljs$lang$type = true;

cljs.core.PersistentArrayMapIterator.cljs$lang$ctorStr = "cljs.core/PersistentArrayMapIterator";

cljs.core.PersistentArrayMapIterator.cljs$lang$ctorPrWriter = (function (this__24859__auto__,writer__24860__auto__,opt__24861__auto__){
return cljs.core._write(writer__24860__auto__,"cljs.core/PersistentArrayMapIterator");
});

cljs.core.__GT_PersistentArrayMapIterator = (function __GT_PersistentArrayMapIterator(arr,i,cnt){
return (new cljs.core.PersistentArrayMapIterator(arr,i,cnt));
});


/**
* @constructor
*/
cljs.core.PersistentArrayMap = (function (meta,cnt,arr,__hash){
this.meta = meta;
this.cnt = cnt;
this.arr = arr;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 16647951;
this.cljs$lang$protocol_mask$partition1$ = 8196;
})
cljs.core.PersistentArrayMap.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentArrayMap.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentArrayMap.prototype.keys = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator((function (){var G__42352 = coll;
return (cljs.core.keys.cljs$core$IFn$_invoke$arity$1 ? cljs.core.keys.cljs$core$IFn$_invoke$arity$1(G__42352) : cljs.core.keys.call(null,G__42352));
})());
});

cljs.core.PersistentArrayMap.prototype.entries = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_entries_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentArrayMap.prototype.values = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator((function (){var G__42353 = coll;
return (cljs.core.vals.cljs$core$IFn$_invoke$arity$1 ? cljs.core.vals.cljs$core$IFn$_invoke$arity$1(G__42353) : cljs.core.vals.call(null,G__42353));
})());
});

cljs.core.PersistentArrayMap.prototype.has = (function (k){
var self__ = this;
var coll = this;
return cljs.core.contains_QMARK_(coll,k);
});

cljs.core.PersistentArrayMap.prototype.get = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentArrayMap.prototype.forEach = (function (f){
var self__ = this;
var coll = this;
var seq__42354 = cljs.core.seq(coll);
var chunk__42355 = null;
var count__42356 = (0);
var i__42357 = (0);
while(true){
if((i__42357 < count__42356)){
var vec__42358 = chunk__42355.cljs$core$IIndexed$_nth$arity$2(null,i__42357);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__42358,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__42358,(1),null);
var G__42359_42372 = v;
var G__42360_42373 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__42359_42372,G__42360_42373) : f.call(null,G__42359_42372,G__42360_42373));

var G__42374 = seq__42354;
var G__42375 = chunk__42355;
var G__42376 = count__42356;
var G__42377 = (i__42357 + (1));
seq__42354 = G__42374;
chunk__42355 = G__42375;
count__42356 = G__42376;
i__42357 = G__42377;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__42354);
if(temp__4126__auto__){
var seq__42354__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__42354__$1)){
var c__25059__auto__ = cljs.core.chunk_first(seq__42354__$1);
var G__42378 = cljs.core.chunk_rest(seq__42354__$1);
var G__42379 = c__25059__auto__;
var G__42380 = cljs.core.count(c__25059__auto__);
var G__42381 = (0);
seq__42354 = G__42378;
chunk__42355 = G__42379;
count__42356 = G__42380;
i__42357 = G__42381;
continue;
} else {
var vec__42361 = cljs.core.first(seq__42354__$1);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__42361,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__42361,(1),null);
var G__42362_42382 = v;
var G__42363_42383 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__42362_42382,G__42363_42383) : f.call(null,G__42362_42382,G__42363_42383));

var G__42384 = cljs.core.next(seq__42354__$1);
var G__42385 = null;
var G__42386 = (0);
var G__42387 = (0);
seq__42354 = G__42384;
chunk__42355 = G__42385;
count__42356 = G__42386;
i__42357 = G__42387;
continue;
}
} else {
return null;
}
}
break;
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.PersistentArrayMap.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
var idx = cljs.core.array_map_index_of(coll__$1,k);
if((idx === (-1))){
return not_found;
} else {
return (self__.arr[(idx + (1))]);
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = (function (coll,f,init){
var self__ = this;
var coll__$1 = this;
var len = self__.arr.length;
var i = (0);
var init__$1 = init;
while(true){
if((i < len)){
var init__$2 = (function (){var G__42364 = init__$1;
var G__42365 = (self__.arr[i]);
var G__42366 = (self__.arr[(i + (1))]);
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__42364,G__42365,G__42366) : f.call(null,G__42364,G__42365,G__42366));
})();
if(cljs.core.reduced_QMARK_(init__$2)){
var G__42367 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__42367) : cljs.core.deref.call(null,G__42367));
} else {
var G__42388 = (i + (2));
var G__42389 = init__$2;
i = G__42388;
init__$1 = G__42389;
continue;
}
} else {
return init__$1;
}
break;
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IIterable$ = true;

cljs.core.PersistentArrayMap.prototype.cljs$core$IIterable$_iterator$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return (new cljs.core.PersistentArrayMapIterator(self__.arr,(0),(self__.cnt * (2))));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentArrayMap.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.PersistentArrayMap(self__.meta,self__.cnt,self__.arr,self__.__hash));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.cnt;
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__24693__auto__ = self__.__hash;
if(!((h__24693__auto__ == null))){
return h__24693__auto__;
} else {
var h__24693__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
self__.__hash = h__24693__auto____$1;

return h__24693__auto____$1;
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
if((function (){var G__42368 = other;
if(G__42368){
var bit__24946__auto__ = (G__42368.cljs$lang$protocol_mask$partition0$ & (1024));
if((bit__24946__auto__) || (G__42368.cljs$core$IMap$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
var alen = self__.arr.length;
var other__$1 = other;
if((self__.cnt === other__$1.cljs$core$ICounted$_count$arity$1(null))){
var i = (0);
while(true){
if((i < alen)){
var v = other__$1.cljs$core$ILookup$_lookup$arity$3(null,(self__.arr[i]),cljs.core.lookup_sentinel);
if(!((v === cljs.core.lookup_sentinel))){
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2((self__.arr[(i + (1))]),v)){
var G__42390 = (i + (2));
i = G__42390;
continue;
} else {
return false;
}
} else {
return false;
}
} else {
return true;
}
break;
}
} else {
return false;
}
} else {
return cljs.core.equiv_map(coll__$1,other);
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.TransientArrayMap((function (){var obj42370 = {};
return obj42370;
})(),self__.arr.length,cljs.core.aclone(self__.arr)));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._with_meta(cljs.core.PersistentArrayMap.EMPTY,self__.meta);
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IMap$_dissoc$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
var idx = cljs.core.array_map_index_of(coll__$1,k);
if((idx >= (0))){
var len = self__.arr.length;
var new_len = (len - (2));
if((new_len === (0))){
return cljs.core._empty(coll__$1);
} else {
var new_arr = (new Array(new_len));
var s = (0);
var d = (0);
while(true){
if((s >= len)){
return (new cljs.core.PersistentArrayMap(self__.meta,(self__.cnt - (1)),new_arr,null));
} else {
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(k,(self__.arr[s]))){
var G__42391 = (s + (2));
var G__42392 = d;
s = G__42391;
d = G__42392;
continue;
} else {
(new_arr[d] = (self__.arr[s]));

(new_arr[(d + (1))] = (self__.arr[(s + (1))]));

var G__42393 = (s + (2));
var G__42394 = (d + (2));
s = G__42393;
d = G__42394;
continue;

}
}
break;
}
}
} else {
return coll__$1;
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (coll,k,v){
var self__ = this;
var coll__$1 = this;
var idx = cljs.core.array_map_index_of(coll__$1,k);
if((idx === (-1))){
if((self__.cnt < cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD)){
var arr__$1 = cljs.core.array_map_extend_kv(coll__$1,k,v);
return (new cljs.core.PersistentArrayMap(self__.meta,(self__.cnt + (1)),arr__$1,null));
} else {
return cljs.core._with_meta(cljs.core._assoc(cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentHashMap.EMPTY,coll__$1),k,v),self__.meta);
}
} else {
if((v === (self__.arr[(idx + (1))]))){
return coll__$1;
} else {
var arr__$1 = (function (){var G__42371 = cljs.core.aclone(self__.arr);
(G__42371[(idx + (1))] = v);

return G__42371;
})();
return (new cljs.core.PersistentArrayMap(self__.meta,self__.cnt,arr__$1,null));

}
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return !((cljs.core.array_map_index_of(coll__$1,k) === (-1)));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.persistent_array_map_seq(self__.arr,(0),null);
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentArrayMap(meta__$1,self__.cnt,self__.arr,self__.__hash));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,entry){
var self__ = this;
var coll__$1 = this;
if(cljs.core.vector_QMARK_(entry)){
return cljs.core._assoc(coll__$1,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(1)));
} else {
var ret = coll__$1;
var es = cljs.core.seq(entry);
while(true){
if((es == null)){
return ret;
} else {
var e = cljs.core.first(es);
if(cljs.core.vector_QMARK_(e)){
var G__42395 = cljs.core._assoc(ret,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e,(1)));
var G__42396 = cljs.core.next(es);
ret = G__42395;
es = G__42396;
continue;
} else {
throw (new Error("conj on a map takes map entries or seqables of map entries"));
}
}
break;
}
}
});

cljs.core.PersistentArrayMap.prototype.call = (function() {
var G__42397 = null;
var G__42397__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__42397__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__42397 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__42397__2.call(this,self__,k);
case 3:
return G__42397__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__42397.cljs$core$IFn$_invoke$arity$2 = G__42397__2;
G__42397.cljs$core$IFn$_invoke$arity$3 = G__42397__3;
return G__42397;
})()
;

cljs.core.PersistentArrayMap.prototype.apply = (function (self__,args42351){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args42351)));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.PersistentArrayMap.cljs$lang$type = true;

cljs.core.PersistentArrayMap.cljs$lang$ctorStr = "cljs.core/PersistentArrayMap";

cljs.core.PersistentArrayMap.cljs$lang$ctorPrWriter = (function (this__24859__auto__,writer__24860__auto__,opt__24861__auto__){
return cljs.core._write(writer__24860__auto__,"cljs.core/PersistentArrayMap");
});

cljs.core.__GT_PersistentArrayMap = (function __GT_PersistentArrayMap(meta,cnt,arr,__hash){
return (new cljs.core.PersistentArrayMap(meta,cnt,arr,__hash));
});

cljs.core.PersistentArrayMap.EMPTY = (new cljs.core.PersistentArrayMap(null,(0),[],null));
cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD = (8);
cljs.core.PersistentArrayMap.fromArray = (function (arr,no_clone,no_check){
var arr__$1 = ((no_clone)?arr:cljs.core.aclone(arr));
if(no_check){
var cnt = (arr__$1.length / (2));
return (new cljs.core.PersistentArrayMap(null,cnt,arr__$1,null));
} else {
var len = arr__$1.length;
var i = (0);
var ret = cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY);
while(true){
if((i < len)){
var G__42398 = (i + (2));
var G__42399 = cljs.core._assoc_BANG_(ret,(arr__$1[i]),(arr__$1[(i + (1))]));
i = G__42398;
ret = G__42399;
continue;
} else {
return cljs.core._persistent_BANG_(ret);
}
break;
}
}
});
(cljs.core.PersistentArrayMap.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__25250__auto__ = this;
return cljs.core.es6_iterator(this__25250__auto__);
}));

/**
* @constructor
*/
cljs.core.TransientArrayMap = (function (editable_QMARK_,len,arr){
this.editable_QMARK_ = editable_QMARK_;
this.len = len;
this.arr = arr;
this.cljs$lang$protocol_mask$partition1$ = 56;
this.cljs$lang$protocol_mask$partition0$ = 258;
})
cljs.core.TransientArrayMap.prototype.cljs$core$ITransientMap$_dissoc_BANG_$arity$2 = (function (tcoll,key){
var self__ = this;
var tcoll__$1 = this;
if(cljs.core.truth_(self__.editable_QMARK_)){
var idx = cljs.core.array_map_index_of(tcoll__$1,key);
if((idx >= (0))){
(self__.arr[idx] = (self__.arr[(self__.len - (2))]));

(self__.arr[(idx + (1))] = (self__.arr[(self__.len - (1))]));

var G__42400_42408 = self__.arr;
G__42400_42408.pop();

G__42400_42408.pop();


self__.len = (self__.len - (2));
} else {
}

return tcoll__$1;
} else {
throw (new Error("dissoc! after persistent!"));
}
});

cljs.core.TransientArrayMap.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = (function (tcoll,key,val){
var self__ = this;
var tcoll__$1 = this;
if(cljs.core.truth_(self__.editable_QMARK_)){
var idx = cljs.core.array_map_index_of(tcoll__$1,key);
if((idx === (-1))){
if(((self__.len + (2)) <= ((2) * cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD))){
self__.len = (self__.len + (2));

self__.arr.push(key);

self__.arr.push(val);

return tcoll__$1;
} else {
return cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3((function (){var G__42401 = self__.len;
var G__42402 = self__.arr;
return (cljs.core.array__GT_transient_hash_map.cljs$core$IFn$_invoke$arity$2 ? cljs.core.array__GT_transient_hash_map.cljs$core$IFn$_invoke$arity$2(G__42401,G__42402) : cljs.core.array__GT_transient_hash_map.call(null,G__42401,G__42402));
})(),key,val);
}
} else {
if((val === (self__.arr[(idx + (1))]))){
return tcoll__$1;
} else {
(self__.arr[(idx + (1))] = val);

return tcoll__$1;
}
}
} else {
throw (new Error("assoc! after persistent!"));
}
});

cljs.core.TransientArrayMap.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = (function (tcoll,o){
var self__ = this;
var tcoll__$1 = this;
if(cljs.core.truth_(self__.editable_QMARK_)){
if((function (){var G__42403 = o;
if(G__42403){
var bit__24953__auto__ = (G__42403.cljs$lang$protocol_mask$partition0$ & (2048));
if((bit__24953__auto__) || (G__42403.cljs$core$IMapEntry$)){
return true;
} else {
if((!G__42403.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IMapEntry,G__42403);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IMapEntry,G__42403);
}
})()){
return cljs.core._assoc_BANG_(tcoll__$1,(function (){var G__42404 = o;
return (cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__42404) : cljs.core.key.call(null,G__42404));
})(),(function (){var G__42405 = o;
return (cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(G__42405) : cljs.core.val.call(null,G__42405));
})());
} else {
var es = cljs.core.seq(o);
var tcoll__$2 = tcoll__$1;
while(true){
var temp__4124__auto__ = cljs.core.first(es);
if(cljs.core.truth_(temp__4124__auto__)){
var e = temp__4124__auto__;
var G__42409 = cljs.core.next(es);
var G__42410 = cljs.core._assoc_BANG_(tcoll__$2,(function (){var G__42406 = e;
return (cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__42406) : cljs.core.key.call(null,G__42406));
})(),(function (){var G__42407 = e;
return (cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(G__42407) : cljs.core.val.call(null,G__42407));
})());
es = G__42409;
tcoll__$2 = G__42410;
continue;
} else {
return tcoll__$2;
}
break;
}
}
} else {
throw (new Error("conj! after persistent!"));
}
});

cljs.core.TransientArrayMap.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
if(cljs.core.truth_(self__.editable_QMARK_)){
self__.editable_QMARK_ = false;

return (new cljs.core.PersistentArrayMap(null,cljs.core.quot(self__.len,(2)),self__.arr,null));
} else {
throw (new Error("persistent! called twice"));
}
});

cljs.core.TransientArrayMap.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (tcoll,k){
var self__ = this;
var tcoll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(tcoll__$1,k,null);
});

cljs.core.TransientArrayMap.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (tcoll,k,not_found){
var self__ = this;
var tcoll__$1 = this;
if(cljs.core.truth_(self__.editable_QMARK_)){
var idx = cljs.core.array_map_index_of(tcoll__$1,k);
if((idx === (-1))){
return not_found;
} else {
return (self__.arr[(idx + (1))]);
}
} else {
throw (new Error("lookup after persistent!"));
}
});

cljs.core.TransientArrayMap.prototype.cljs$core$ICounted$_count$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
if(cljs.core.truth_(self__.editable_QMARK_)){
return cljs.core.quot(self__.len,(2));
} else {
throw (new Error("count after persistent!"));
}
});

cljs.core.TransientArrayMap.cljs$lang$type = true;

cljs.core.TransientArrayMap.cljs$lang$ctorStr = "cljs.core/TransientArrayMap";

cljs.core.TransientArrayMap.cljs$lang$ctorPrWriter = (function (this__24859__auto__,writer__24860__auto__,opt__24861__auto__){
return cljs.core._write(writer__24860__auto__,"cljs.core/TransientArrayMap");
});

cljs.core.__GT_TransientArrayMap = (function __GT_TransientArrayMap(editable_QMARK_,len,arr){
return (new cljs.core.TransientArrayMap(editable_QMARK_,len,arr));
});


cljs.core.array__GT_transient_hash_map = (function array__GT_transient_hash_map(len,arr){
var out = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
var i = (0);
while(true){
if((i < len)){
var G__42411 = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(out,(arr[i]),(arr[(i + (1))]));
var G__42412 = (i + (2));
out = G__42411;
i = G__42412;
continue;
} else {
return out;
}
break;
}
});

/**
* @constructor
*/
cljs.core.Box = (function (val){
this.val = val;
})

cljs.core.Box.cljs$lang$type = true;

cljs.core.Box.cljs$lang$ctorStr = "cljs.core/Box";

cljs.core.Box.cljs$lang$ctorPrWriter = (function (this__24859__auto__,writer__24860__auto__,opt__24861__auto__){
return cljs.core._write(writer__24860__auto__,"cljs.core/Box");
});

cljs.core.__GT_Box = (function __GT_Box(val){
return (new cljs.core.Box(val));
});






cljs.core.key_test = (function key_test(key,other){
if((key === other)){
return true;
} else {
if(cljs.core.keyword_identical_QMARK_(key,other)){
return true;
} else {
return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(key,other);

}
}
});
cljs.core.mask = (function mask(hash,shift){
return ((hash >>> shift) & (31));
});
cljs.core.clone_and_set = (function() {
var clone_and_set = null;
var clone_and_set__3 = (function (arr,i,a){
var G__42415 = cljs.core.aclone(arr);
(G__42415[i] = a);

return G__42415;
});
var clone_and_set__5 = (function (arr,i,a,j,b){
var G__42416 = cljs.core.aclone(arr);
(G__42416[i] = a);

(G__42416[j] = b);

return G__42416;
});
clone_and_set = function(arr,i,a,j,b){
switch(arguments.length){
case 3:
return clone_and_set__3.call(this,arr,i,a);
case 5:
return clone_and_set__5.call(this,arr,i,a,j,b);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
clone_and_set.cljs$core$IFn$_invoke$arity$3 = clone_and_set__3;
clone_and_set.cljs$core$IFn$_invoke$arity$5 = clone_and_set__5;
return clone_and_set;
})()
;
cljs.core.remove_pair = (function remove_pair(arr,i){
var new_arr = (new Array((arr.length - (2))));
cljs.core.array_copy(arr,(0),new_arr,(0),((2) * i));

cljs.core.array_copy(arr,((2) * (i + (1))),new_arr,((2) * i),(new_arr.length - ((2) * i)));

return new_arr;
});
cljs.core.bitmap_indexed_node_index = (function bitmap_indexed_node_index(bitmap,bit){
return cljs.core.bit_count((bitmap & (bit - (1))));
});
cljs.core.bitpos = (function bitpos(hash,shift){
return ((1) << ((hash >>> shift) & 0x01f));
});
cljs.core.edit_and_set = (function() {
var edit_and_set = null;
var edit_and_set__4 = (function (inode,edit,i,a){
var editable = inode.ensure_editable(edit);
(editable.arr[i] = a);

return editable;
});
var edit_and_set__6 = (function (inode,edit,i,a,j,b){
var editable = inode.ensure_editable(edit);
(editable.arr[i] = a);

(editable.arr[j] = b);

return editable;
});
edit_and_set = function(inode,edit,i,a,j,b){
switch(arguments.length){
case 4:
return edit_and_set__4.call(this,inode,edit,i,a);
case 6:
return edit_and_set__6.call(this,inode,edit,i,a,j,b);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
edit_and_set.cljs$core$IFn$_invoke$arity$4 = edit_and_set__4;
edit_and_set.cljs$core$IFn$_invoke$arity$6 = edit_and_set__6;
return edit_and_set;
})()
;
cljs.core.inode_kv_reduce = (function inode_kv_reduce(arr,f,init){
var len = arr.length;
var i = (0);
var init__$1 = init;
while(true){
if((i < len)){
var init__$2 = (function (){var k = (arr[i]);
if(!((k == null))){
var G__42421 = init__$1;
var G__42422 = k;
var G__42423 = (arr[(i + (1))]);
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__42421,G__42422,G__42423) : f.call(null,G__42421,G__42422,G__42423));
} else {
var node = (arr[(i + (1))]);
if(!((node == null))){
return node.kv_reduce(f,init__$1);
} else {
return init__$1;
}
}
})();
if(cljs.core.reduced_QMARK_(init__$2)){
var G__42424 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__42424) : cljs.core.deref.call(null,G__42424));
} else {
var G__42425 = (i + (2));
var G__42426 = init__$2;
i = G__42425;
init__$1 = G__42426;
continue;
}
} else {
return init__$1;
}
break;
}
});

/**
* @constructor
*/
cljs.core.BitmapIndexedNode = (function (edit,bitmap,arr){
this.edit = edit;
this.bitmap = bitmap;
this.arr = arr;
})
cljs.core.BitmapIndexedNode.prototype.ensure_editable = (function (e){
var self__ = this;
var inode = this;
if((e === self__.edit)){
return inode;
} else {
var n = cljs.core.bit_count(self__.bitmap);
var new_arr = (new Array((((n < (0)))?(4):((2) * (n + (1))))));
cljs.core.array_copy(self__.arr,(0),new_arr,(0),((2) * n));

return (new cljs.core.BitmapIndexedNode(e,self__.bitmap,new_arr));
}
});

cljs.core.BitmapIndexedNode.prototype.inode_without_BANG_ = (function (edit__$1,shift,hash,key,removed_leaf_QMARK_){
var self__ = this;
var inode = this;
var bit = (1 << ((hash >>> shift) & 0x01f));
if(((self__.bitmap & bit) === (0))){
return inode;
} else {
var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap,bit);
var key_or_nil = (self__.arr[((2) * idx)]);
var val_or_node = (self__.arr[(((2) * idx) + (1))]);
if((key_or_nil == null)){
var n = val_or_node.inode_without_BANG_(edit__$1,(shift + (5)),hash,key,removed_leaf_QMARK_);
if((n === val_or_node)){
return inode;
} else {
if(!((n == null))){
return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,(((2) * idx) + (1)),n);
} else {
if((self__.bitmap === bit)){
return null;
} else {
return inode.edit_and_remove_pair(edit__$1,bit,idx);

}
}
}
} else {
if(cljs.core.key_test(key,key_or_nil)){
(removed_leaf_QMARK_[(0)] = true);

return inode.edit_and_remove_pair(edit__$1,bit,idx);
} else {
return inode;

}
}
}
});

cljs.core.BitmapIndexedNode.prototype.edit_and_remove_pair = (function (e,bit,i){
var self__ = this;
var inode = this;
if((self__.bitmap === bit)){
return null;
} else {
var editable = inode.ensure_editable(e);
var earr = editable.arr;
var len = earr.length;
editable.bitmap = (bit ^ editable.bitmap);

cljs.core.array_copy(earr,((2) * (i + (1))),earr,((2) * i),(len - ((2) * (i + (1)))));

(earr[(len - (2))] = null);

(earr[(len - (1))] = null);

return editable;
}
});

cljs.core.BitmapIndexedNode.prototype.inode_seq = (function (){
var self__ = this;
var inode = this;
var G__42427 = self__.arr;
return (cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1 ? cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1(G__42427) : cljs.core.create_inode_seq.call(null,G__42427));
});

cljs.core.BitmapIndexedNode.prototype.kv_reduce = (function (f,init){
var self__ = this;
var inode = this;
return cljs.core.inode_kv_reduce(self__.arr,f,init);
});

cljs.core.BitmapIndexedNode.prototype.inode_lookup = (function (shift,hash,key,not_found){
var self__ = this;
var inode = this;
var bit = (1 << ((hash >>> shift) & 0x01f));
if(((self__.bitmap & bit) === (0))){
return not_found;
} else {
var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap,bit);
var key_or_nil = (self__.arr[((2) * idx)]);
var val_or_node = (self__.arr[(((2) * idx) + (1))]);
if((key_or_nil == null)){
return val_or_node.inode_lookup((shift + (5)),hash,key,not_found);
} else {
if(cljs.core.key_test(key,key_or_nil)){
return val_or_node;
} else {
return not_found;

}
}
}
});

cljs.core.BitmapIndexedNode.prototype.inode_assoc_BANG_ = (function (edit__$1,shift,hash,key,val,added_leaf_QMARK_){
var self__ = this;
var inode = this;
var bit = (1 << ((hash >>> shift) & 0x01f));
var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap,bit);
if(((self__.bitmap & bit) === (0))){
var n = cljs.core.bit_count(self__.bitmap);
if((((2) * n) < self__.arr.length)){
var editable = inode.ensure_editable(edit__$1);
var earr = editable.arr;
added_leaf_QMARK_.val = true;

cljs.core.array_copy_downward(earr,((2) * idx),earr,((2) * (idx + (1))),((2) * (n - idx)));

(earr[((2) * idx)] = key);

(earr[(((2) * idx) + (1))] = val);

editable.bitmap = (editable.bitmap | bit);

return editable;
} else {
if((n >= (16))){
var nodes = [null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null];
var jdx = ((hash >>> shift) & 0x01f);
(nodes[jdx] = cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit__$1,(shift + (5)),hash,key,val,added_leaf_QMARK_));

var i_42441 = (0);
var j_42442 = (0);
while(true){
if((i_42441 < (32))){
if((((self__.bitmap >>> i_42441) & (1)) === (0))){
var G__42443 = (i_42441 + (1));
var G__42444 = j_42442;
i_42441 = G__42443;
j_42442 = G__42444;
continue;
} else {
(nodes[i_42441] = ((!(((self__.arr[j_42442]) == null)))?cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit__$1,(shift + (5)),cljs.core.hash((self__.arr[j_42442])),(self__.arr[j_42442]),(self__.arr[(j_42442 + (1))]),added_leaf_QMARK_):(self__.arr[(j_42442 + (1))])));

var G__42445 = (i_42441 + (1));
var G__42446 = (j_42442 + (2));
i_42441 = G__42445;
j_42442 = G__42446;
continue;
}
} else {
}
break;
}

return (new cljs.core.ArrayNode(edit__$1,(n + (1)),nodes));
} else {
var new_arr = (new Array(((2) * (n + (4)))));
cljs.core.array_copy(self__.arr,(0),new_arr,(0),((2) * idx));

(new_arr[((2) * idx)] = key);

(new_arr[(((2) * idx) + (1))] = val);

cljs.core.array_copy(self__.arr,((2) * idx),new_arr,((2) * (idx + (1))),((2) * (n - idx)));

added_leaf_QMARK_.val = true;

var editable = inode.ensure_editable(edit__$1);
editable.arr = new_arr;

editable.bitmap = (editable.bitmap | bit);

return editable;

}
}
} else {
var key_or_nil = (self__.arr[((2) * idx)]);
var val_or_node = (self__.arr[(((2) * idx) + (1))]);
if((key_or_nil == null)){
var n = val_or_node.inode_assoc_BANG_(edit__$1,(shift + (5)),hash,key,val,added_leaf_QMARK_);
if((n === val_or_node)){
return inode;
} else {
return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,(((2) * idx) + (1)),n);
}
} else {
if(cljs.core.key_test(key,key_or_nil)){
if((val === val_or_node)){
return inode;
} else {
return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,(((2) * idx) + (1)),val);
}
} else {
added_leaf_QMARK_.val = true;

return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$6(inode,edit__$1,((2) * idx),null,(((2) * idx) + (1)),(function (){var G__42428 = edit__$1;
var G__42429 = (shift + (5));
var G__42430 = key_or_nil;
var G__42431 = val_or_node;
var G__42432 = hash;
var G__42433 = key;
var G__42434 = val;
return (cljs.core.create_node.cljs$core$IFn$_invoke$arity$7 ? cljs.core.create_node.cljs$core$IFn$_invoke$arity$7(G__42428,G__42429,G__42430,G__42431,G__42432,G__42433,G__42434) : cljs.core.create_node.call(null,G__42428,G__42429,G__42430,G__42431,G__42432,G__42433,G__42434));
})());

}
}
}
});

cljs.core.BitmapIndexedNode.prototype.inode_assoc = (function (shift,hash,key,val,added_leaf_QMARK_){
var self__ = this;
var inode = this;
var bit = (1 << ((hash >>> shift) & 0x01f));
var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap,bit);
if(((self__.bitmap & bit) === (0))){
var n = cljs.core.bit_count(self__.bitmap);
if((n >= (16))){
var nodes = [null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null];
var jdx = ((hash >>> shift) & 0x01f);
(nodes[jdx] = cljs.core.BitmapIndexedNode.EMPTY.inode_assoc((shift + (5)),hash,key,val,added_leaf_QMARK_));

var i_42447 = (0);
var j_42448 = (0);
while(true){
if((i_42447 < (32))){
if((((self__.bitmap >>> i_42447) & (1)) === (0))){
var G__42449 = (i_42447 + (1));
var G__42450 = j_42448;
i_42447 = G__42449;
j_42448 = G__42450;
continue;
} else {
(nodes[i_42447] = ((!(((self__.arr[j_42448]) == null)))?cljs.core.BitmapIndexedNode.EMPTY.inode_assoc((shift + (5)),cljs.core.hash((self__.arr[j_42448])),(self__.arr[j_42448]),(self__.arr[(j_42448 + (1))]),added_leaf_QMARK_):(self__.arr[(j_42448 + (1))])));

var G__42451 = (i_42447 + (1));
var G__42452 = (j_42448 + (2));
i_42447 = G__42451;
j_42448 = G__42452;
continue;
}
} else {
}
break;
}

return (new cljs.core.ArrayNode(null,(n + (1)),nodes));
} else {
var new_arr = (new Array(((2) * (n + (1)))));
cljs.core.array_copy(self__.arr,(0),new_arr,(0),((2) * idx));

(new_arr[((2) * idx)] = key);

(new_arr[(((2) * idx) + (1))] = val);

cljs.core.array_copy(self__.arr,((2) * idx),new_arr,((2) * (idx + (1))),((2) * (n - idx)));

added_leaf_QMARK_.val = true;

return (new cljs.core.BitmapIndexedNode(null,(self__.bitmap | bit),new_arr));
}
} else {
var key_or_nil = (self__.arr[((2) * idx)]);
var val_or_node = (self__.arr[(((2) * idx) + (1))]);
if((key_or_nil == null)){
var n = val_or_node.inode_assoc((shift + (5)),hash,key,val,added_leaf_QMARK_);
if((n === val_or_node)){
return inode;
} else {
return (new cljs.core.BitmapIndexedNode(null,self__.bitmap,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,(((2) * idx) + (1)),n)));
}
} else {
if(cljs.core.key_test(key,key_or_nil)){
if((val === val_or_node)){
return inode;
} else {
return (new cljs.core.BitmapIndexedNode(null,self__.bitmap,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,(((2) * idx) + (1)),val)));
}
} else {
added_leaf_QMARK_.val = true;

return (new cljs.core.BitmapIndexedNode(null,self__.bitmap,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$5(self__.arr,((2) * idx),null,(((2) * idx) + (1)),(function (){var G__42435 = (shift + (5));
var G__42436 = key_or_nil;
var G__42437 = val_or_node;
var G__42438 = hash;
var G__42439 = key;
var G__42440 = val;
return (cljs.core.create_node.cljs$core$IFn$_invoke$arity$6 ? cljs.core.create_node.cljs$core$IFn$_invoke$arity$6(G__42435,G__42436,G__42437,G__42438,G__42439,G__42440) : cljs.core.create_node.call(null,G__42435,G__42436,G__42437,G__42438,G__42439,G__42440));
})())));

}
}
}
});

cljs.core.BitmapIndexedNode.prototype.inode_find = (function (shift,hash,key,not_found){
var self__ = this;
var inode = this;
var bit = (1 << ((hash >>> shift) & 0x01f));
if(((self__.bitmap & bit) === (0))){
return not_found;
} else {
var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap,bit);
var key_or_nil = (self__.arr[((2) * idx)]);
var val_or_node = (self__.arr[(((2) * idx) + (1))]);
if((key_or_nil == null)){
return val_or_node.inode_find((shift + (5)),hash,key,not_found);
} else {
if(cljs.core.key_test(key,key_or_nil)){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [key_or_nil,val_or_node], null);
} else {
return not_found;

}
}
}
});

cljs.core.BitmapIndexedNode.prototype.inode_without = (function (shift,hash,key){
var self__ = this;
var inode = this;
var bit = (1 << ((hash >>> shift) & 0x01f));
if(((self__.bitmap & bit) === (0))){
return inode;
} else {
var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap,bit);
var key_or_nil = (self__.arr[((2) * idx)]);
var val_or_node = (self__.arr[(((2) * idx) + (1))]);
if((key_or_nil == null)){
var n = val_or_node.inode_without((shift + (5)),hash,key);
if((n === val_or_node)){
return inode;
} else {
if(!((n == null))){
return (new cljs.core.BitmapIndexedNode(null,self__.bitmap,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,(((2) * idx) + (1)),n)));
} else {
if((self__.bitmap === bit)){
return null;
} else {
return (new cljs.core.BitmapIndexedNode(null,(self__.bitmap ^ bit),cljs.core.remove_pair(self__.arr,idx)));

}
}
}
} else {
if(cljs.core.key_test(key,key_or_nil)){
return (new cljs.core.BitmapIndexedNode(null,(self__.bitmap ^ bit),cljs.core.remove_pair(self__.arr,idx)));
} else {
return inode;

}
}
}
});

cljs.core.BitmapIndexedNode.cljs$lang$type = true;

cljs.core.BitmapIndexedNode.cljs$lang$ctorStr = "cljs.core/BitmapIndexedNode";

cljs.core.BitmapIndexedNode.cljs$lang$ctorPrWriter = (function (this__24859__auto__,writer__24860__auto__,opt__24861__auto__){
return cljs.core._write(writer__24860__auto__,"cljs.core/BitmapIndexedNode");
});

cljs.core.__GT_BitmapIndexedNode = (function __GT_BitmapIndexedNode(edit,bitmap,arr){
return (new cljs.core.BitmapIndexedNode(edit,bitmap,arr));
});

cljs.core.BitmapIndexedNode.EMPTY = (new cljs.core.BitmapIndexedNode(null,(0),[]));
cljs.core.pack_array_node = (function pack_array_node(array_node,edit,idx){
var arr = array_node.arr;
var len = arr.length;
var new_arr = (new Array(((2) * (array_node.cnt - (1)))));
var i = (0);
var j = (1);
var bitmap = (0);
while(true){
if((i < len)){
if((!((i === idx))) && (!(((arr[i]) == null)))){
(new_arr[j] = (arr[i]));

var G__42453 = (i + (1));
var G__42454 = (j + (2));
var G__42455 = (bitmap | ((1) << i));
i = G__42453;
j = G__42454;
bitmap = G__42455;
continue;
} else {
var G__42456 = (i + (1));
var G__42457 = j;
var G__42458 = bitmap;
i = G__42456;
j = G__42457;
bitmap = G__42458;
continue;
}
} else {
return (new cljs.core.BitmapIndexedNode(edit,bitmap,new_arr));
}
break;
}
});

/**
* @constructor
*/
cljs.core.ArrayNode = (function (edit,cnt,arr){
this.edit = edit;
this.cnt = cnt;
this.arr = arr;
})
cljs.core.ArrayNode.prototype.ensure_editable = (function (e){
var self__ = this;
var inode = this;
if((e === self__.edit)){
return inode;
} else {
return (new cljs.core.ArrayNode(e,self__.cnt,cljs.core.aclone(self__.arr)));
}
});

cljs.core.ArrayNode.prototype.inode_without_BANG_ = (function (edit__$1,shift,hash,key,removed_leaf_QMARK_){
var self__ = this;
var inode = this;
var idx = ((hash >>> shift) & 0x01f);
var node = (self__.arr[idx]);
if((node == null)){
return inode;
} else {
var n = node.inode_without_BANG_(edit__$1,(shift + (5)),hash,key,removed_leaf_QMARK_);
if((n === node)){
return inode;
} else {
if((n == null)){
if((self__.cnt <= (8))){
return cljs.core.pack_array_node(inode,edit__$1,idx);
} else {
var editable = cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,idx,n);
editable.cnt = (editable.cnt - (1));

return editable;
}
} else {
return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,idx,n);

}
}
}
});

cljs.core.ArrayNode.prototype.inode_seq = (function (){
var self__ = this;
var inode = this;
var G__42459 = self__.arr;
return (cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$1 ? cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$1(G__42459) : cljs.core.create_array_node_seq.call(null,G__42459));
});

cljs.core.ArrayNode.prototype.kv_reduce = (function (f,init){
var self__ = this;
var inode = this;
var len = self__.arr.length;
var i = (0);
var init__$1 = init;
while(true){
if((i < len)){
var node = (self__.arr[i]);
if(!((node == null))){
var init__$2 = node.kv_reduce(f,init__$1);
if(cljs.core.reduced_QMARK_(init__$2)){
var G__42460 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__42460) : cljs.core.deref.call(null,G__42460));
} else {
var G__42461 = (i + (1));
var G__42462 = init__$2;
i = G__42461;
init__$1 = G__42462;
continue;
}
} else {
var G__42463 = (i + (1));
var G__42464 = init__$1;
i = G__42463;
init__$1 = G__42464;
continue;
}
} else {
return init__$1;
}
break;
}
});

cljs.core.ArrayNode.prototype.inode_lookup = (function (shift,hash,key,not_found){
var self__ = this;
var inode = this;
var idx = ((hash >>> shift) & 0x01f);
var node = (self__.arr[idx]);
if(!((node == null))){
return node.inode_lookup((shift + (5)),hash,key,not_found);
} else {
return not_found;
}
});

cljs.core.ArrayNode.prototype.inode_assoc_BANG_ = (function (edit__$1,shift,hash,key,val,added_leaf_QMARK_){
var self__ = this;
var inode = this;
var idx = ((hash >>> shift) & 0x01f);
var node = (self__.arr[idx]);
if((node == null)){
var editable = cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,idx,cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit__$1,(shift + (5)),hash,key,val,added_leaf_QMARK_));
editable.cnt = (editable.cnt + (1));

return editable;
} else {
var n = node.inode_assoc_BANG_(edit__$1,(shift + (5)),hash,key,val,added_leaf_QMARK_);
if((n === node)){
return inode;
} else {
return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,idx,n);
}
}
});

cljs.core.ArrayNode.prototype.inode_assoc = (function (shift,hash,key,val,added_leaf_QMARK_){
var self__ = this;
var inode = this;
var idx = ((hash >>> shift) & 0x01f);
var node = (self__.arr[idx]);
if((node == null)){
return (new cljs.core.ArrayNode(null,(self__.cnt + (1)),cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,idx,cljs.core.BitmapIndexedNode.EMPTY.inode_assoc((shift + (5)),hash,key,val,added_leaf_QMARK_))));
} else {
var n = node.inode_assoc((shift + (5)),hash,key,val,added_leaf_QMARK_);
if((n === node)){
return inode;
} else {
return (new cljs.core.ArrayNode(null,self__.cnt,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,idx,n)));
}
}
});

cljs.core.ArrayNode.prototype.inode_find = (function (shift,hash,key,not_found){
var self__ = this;
var inode = this;
var idx = ((hash >>> shift) & 0x01f);
var node = (self__.arr[idx]);
if(!((node == null))){
return node.inode_find((shift + (5)),hash,key,not_found);
} else {
return not_found;
}
});

cljs.core.ArrayNode.prototype.inode_without = (function (shift,hash,key){
var self__ = this;
var inode = this;
var idx = ((hash >>> shift) & 0x01f);
var node = (self__.arr[idx]);
if(!((node == null))){
var n = node.inode_without((shift + (5)),hash,key);
if((n === node)){
return inode;
} else {
if((n == null)){
if((self__.cnt <= (8))){
return cljs.core.pack_array_node(inode,null,idx);
} else {
return (new cljs.core.ArrayNode(null,(self__.cnt - (1)),cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,idx,n)));
}
} else {
return (new cljs.core.ArrayNode(null,self__.cnt,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,idx,n)));

}
}
} else {
return inode;
}
});

cljs.core.ArrayNode.cljs$lang$type = true;

cljs.core.ArrayNode.cljs$lang$ctorStr = "cljs.core/ArrayNode";

cljs.core.ArrayNode.cljs$lang$ctorPrWriter = (function (this__24859__auto__,writer__24860__auto__,opt__24861__auto__){
return cljs.core._write(writer__24860__auto__,"cljs.core/ArrayNode");
});

cljs.core.__GT_ArrayNode = (function __GT_ArrayNode(edit,cnt,arr){
return (new cljs.core.ArrayNode(edit,cnt,arr));
});

cljs.core.hash_collision_node_find_index = (function hash_collision_node_find_index(arr,cnt,key){
var lim = ((2) * cnt);
var i = (0);
while(true){
if((i < lim)){
if(cljs.core.key_test(key,(arr[i]))){
return i;
} else {
var G__42465 = (i + (2));
i = G__42465;
continue;
}
} else {
return (-1);
}
break;
}
});

/**
* @constructor
*/
cljs.core.HashCollisionNode = (function (edit,collision_hash,cnt,arr){
this.edit = edit;
this.collision_hash = collision_hash;
this.cnt = cnt;
this.arr = arr;
})
cljs.core.HashCollisionNode.prototype.ensure_editable = (function (e){
var self__ = this;
var inode = this;
if((e === self__.edit)){
return inode;
} else {
var new_arr = (new Array(((2) * (self__.cnt + (1)))));
cljs.core.array_copy(self__.arr,(0),new_arr,(0),((2) * self__.cnt));

return (new cljs.core.HashCollisionNode(e,self__.collision_hash,self__.cnt,new_arr));
}
});

cljs.core.HashCollisionNode.prototype.inode_without_BANG_ = (function (edit__$1,shift,hash,key,removed_leaf_QMARK_){
var self__ = this;
var inode = this;
var idx = cljs.core.hash_collision_node_find_index(self__.arr,self__.cnt,key);
if((idx === (-1))){
return inode;
} else {
(removed_leaf_QMARK_[(0)] = true);

if((self__.cnt === (1))){
return null;
} else {
var editable = inode.ensure_editable(edit__$1);
var earr = editable.arr;
(earr[idx] = (earr[(((2) * self__.cnt) - (2))]));

(earr[(idx + (1))] = (earr[(((2) * self__.cnt) - (1))]));

(earr[(((2) * self__.cnt) - (1))] = null);

(earr[(((2) * self__.cnt) - (2))] = null);

editable.cnt = (editable.cnt - (1));

return editable;
}
}
});

cljs.core.HashCollisionNode.prototype.inode_seq = (function (){
var self__ = this;
var inode = this;
var G__42466 = self__.arr;
return (cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1 ? cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1(G__42466) : cljs.core.create_inode_seq.call(null,G__42466));
});

cljs.core.HashCollisionNode.prototype.kv_reduce = (function (f,init){
var self__ = this;
var inode = this;
return cljs.core.inode_kv_reduce(self__.arr,f,init);
});

cljs.core.HashCollisionNode.prototype.inode_lookup = (function (shift,hash,key,not_found){
var self__ = this;
var inode = this;
var idx = cljs.core.hash_collision_node_find_index(self__.arr,self__.cnt,key);
if((idx < (0))){
return not_found;
} else {
if(cljs.core.key_test(key,(self__.arr[idx]))){
return (self__.arr[(idx + (1))]);
} else {
return not_found;

}
}
});

cljs.core.HashCollisionNode.prototype.inode_assoc_BANG_ = (function (edit__$1,shift,hash,key,val,added_leaf_QMARK_){
var self__ = this;
var inode = this;
if((hash === self__.collision_hash)){
var idx = cljs.core.hash_collision_node_find_index(self__.arr,self__.cnt,key);
if((idx === (-1))){
if((self__.arr.length > ((2) * self__.cnt))){
var editable = cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$6(inode,edit__$1,((2) * self__.cnt),key,(((2) * self__.cnt) + (1)),val);
added_leaf_QMARK_.val = true;

editable.cnt = (editable.cnt + (1));

return editable;
} else {
var len = self__.arr.length;
var new_arr = (new Array((len + (2))));
cljs.core.array_copy(self__.arr,(0),new_arr,(0),len);

(new_arr[len] = key);

(new_arr[(len + (1))] = val);

added_leaf_QMARK_.val = true;

return inode.ensure_editable_array(edit__$1,(self__.cnt + (1)),new_arr);
}
} else {
if(((self__.arr[(idx + (1))]) === val)){
return inode;
} else {
return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,(idx + (1)),val);
}
}
} else {
return (new cljs.core.BitmapIndexedNode(edit__$1,(1 << ((self__.collision_hash >>> shift) & 0x01f)),[null,inode,null,null])).inode_assoc_BANG_(edit__$1,shift,hash,key,val,added_leaf_QMARK_);
}
});

cljs.core.HashCollisionNode.prototype.inode_assoc = (function (shift,hash,key,val,added_leaf_QMARK_){
var self__ = this;
var inode = this;
if((hash === self__.collision_hash)){
var idx = cljs.core.hash_collision_node_find_index(self__.arr,self__.cnt,key);
if((idx === (-1))){
var len = ((2) * self__.cnt);
var new_arr = (new Array((len + (2))));
cljs.core.array_copy(self__.arr,(0),new_arr,(0),len);

(new_arr[len] = key);

(new_arr[(len + (1))] = val);

added_leaf_QMARK_.val = true;

return (new cljs.core.HashCollisionNode(null,self__.collision_hash,(self__.cnt + (1)),new_arr));
} else {
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2((self__.arr[idx]),val)){
return inode;
} else {
return (new cljs.core.HashCollisionNode(null,self__.collision_hash,self__.cnt,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,(idx + (1)),val)));
}
}
} else {
return (new cljs.core.BitmapIndexedNode(null,(1 << ((self__.collision_hash >>> shift) & 0x01f)),[null,inode])).inode_assoc(shift,hash,key,val,added_leaf_QMARK_);
}
});

cljs.core.HashCollisionNode.prototype.ensure_editable_array = (function (e,count,array){
var self__ = this;
var inode = this;
if((e === self__.edit)){
self__.arr = array;

self__.cnt = count;

return inode;
} else {
return (new cljs.core.HashCollisionNode(self__.edit,self__.collision_hash,count,array));
}
});

cljs.core.HashCollisionNode.prototype.inode_find = (function (shift,hash,key,not_found){
var self__ = this;
var inode = this;
var idx = cljs.core.hash_collision_node_find_index(self__.arr,self__.cnt,key);
if((idx < (0))){
return not_found;
} else {
if(cljs.core.key_test(key,(self__.arr[idx]))){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(self__.arr[idx]),(self__.arr[(idx + (1))])], null);
} else {
return not_found;

}
}
});

cljs.core.HashCollisionNode.prototype.inode_without = (function (shift,hash,key){
var self__ = this;
var inode = this;
var idx = cljs.core.hash_collision_node_find_index(self__.arr,self__.cnt,key);
if((idx === (-1))){
return inode;
} else {
if((self__.cnt === (1))){
return null;
} else {
return (new cljs.core.HashCollisionNode(null,self__.collision_hash,(self__.cnt - (1)),cljs.core.remove_pair(self__.arr,cljs.core.quot(idx,(2)))));

}
}
});

cljs.core.HashCollisionNode.cljs$lang$type = true;

cljs.core.HashCollisionNode.cljs$lang$ctorStr = "cljs.core/HashCollisionNode";

cljs.core.HashCollisionNode.cljs$lang$ctorPrWriter = (function (this__24859__auto__,writer__24860__auto__,opt__24861__auto__){
return cljs.core._write(writer__24860__auto__,"cljs.core/HashCollisionNode");
});

cljs.core.__GT_HashCollisionNode = (function __GT_HashCollisionNode(edit,collision_hash,cnt,arr){
return (new cljs.core.HashCollisionNode(edit,collision_hash,cnt,arr));
});

cljs.core.create_node = (function() {
var create_node = null;
var create_node__6 = (function (shift,key1,val1,key2hash,key2,val2){
var key1hash = cljs.core.hash(key1);
if((key1hash === key2hash)){
return (new cljs.core.HashCollisionNode(null,key1hash,(2),[key1,val1,key2,val2]));
} else {
var added_leaf_QMARK_ = (new cljs.core.Box(false));
return cljs.core.BitmapIndexedNode.EMPTY.inode_assoc(shift,key1hash,key1,val1,added_leaf_QMARK_).inode_assoc(shift,key2hash,key2,val2,added_leaf_QMARK_);
}
});
var create_node__7 = (function (edit,shift,key1,val1,key2hash,key2,val2){
var key1hash = cljs.core.hash(key1);
if((key1hash === key2hash)){
return (new cljs.core.HashCollisionNode(null,key1hash,(2),[key1,val1,key2,val2]));
} else {
var added_leaf_QMARK_ = (new cljs.core.Box(false));
return cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit,shift,key1hash,key1,val1,added_leaf_QMARK_).inode_assoc_BANG_(edit,shift,key2hash,key2,val2,added_leaf_QMARK_);
}
});
create_node = function(edit,shift,key1,val1,key2hash,key2,val2){
switch(arguments.length){
case 6:
return create_node__6.call(this,edit,shift,key1,val1,key2hash,key2);
case 7:
return create_node__7.call(this,edit,shift,key1,val1,key2hash,key2,val2);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
create_node.cljs$core$IFn$_invoke$arity$6 = create_node__6;
create_node.cljs$core$IFn$_invoke$arity$7 = create_node__7;
return create_node;
})()
;

/**
* @constructor
*/
cljs.core.NodeSeq = (function (meta,nodes,i,s,__hash){
this.meta = meta;
this.nodes = nodes;
this.i = i;
this.s = s;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32374860;
})
cljs.core.NodeSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.NodeSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.NodeSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.NodeSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__24693__auto__ = self__.__hash;
if(!((h__24693__auto__ == null))){
return h__24693__auto__;
} else {
var h__24693__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__24693__auto____$1;

return h__24693__auto____$1;
}
});

cljs.core.NodeSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.NodeSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.NodeSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.NodeSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.NodeSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.s == null)){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(self__.nodes[self__.i]),(self__.nodes[(self__.i + (1))])], null);
} else {
return cljs.core.first(self__.s);
}
});

cljs.core.NodeSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.s == null)){
var G__42467 = self__.nodes;
var G__42468 = (self__.i + (2));
var G__42469 = null;
return (cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3 ? cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3(G__42467,G__42468,G__42469) : cljs.core.create_inode_seq.call(null,G__42467,G__42468,G__42469));
} else {
var G__42470 = self__.nodes;
var G__42471 = self__.i;
var G__42472 = cljs.core.next(self__.s);
return (cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3 ? cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3(G__42470,G__42471,G__42472) : cljs.core.create_inode_seq.call(null,G__42470,G__42471,G__42472));
}
});

cljs.core.NodeSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return this$__$1;
});

cljs.core.NodeSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.NodeSeq(meta__$1,self__.nodes,self__.i,self__.s,self__.__hash));
});

cljs.core.NodeSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.NodeSeq.cljs$lang$type = true;

cljs.core.NodeSeq.cljs$lang$ctorStr = "cljs.core/NodeSeq";

cljs.core.NodeSeq.cljs$lang$ctorPrWriter = (function (this__24859__auto__,writer__24860__auto__,opt__24861__auto__){
return cljs.core._write(writer__24860__auto__,"cljs.core/NodeSeq");
});

cljs.core.__GT_NodeSeq = (function __GT_NodeSeq(meta,nodes,i,s,__hash){
return (new cljs.core.NodeSeq(meta,nodes,i,s,__hash));
});

(cljs.core.NodeSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__25250__auto__ = this;
return cljs.core.es6_iterator(this__25250__auto__);
}));
cljs.core.create_inode_seq = (function() {
var create_inode_seq = null;
var create_inode_seq__1 = (function (nodes){
return create_inode_seq.cljs$core$IFn$_invoke$arity$3(nodes,(0),null);
});
var create_inode_seq__3 = (function (nodes,i,s){
if((s == null)){
var len = nodes.length;
var j = i;
while(true){
if((j < len)){
if(!(((nodes[j]) == null))){
return (new cljs.core.NodeSeq(null,nodes,j,null,null));
} else {
var temp__4124__auto__ = (nodes[(j + (1))]);
if(cljs.core.truth_(temp__4124__auto__)){
var node = temp__4124__auto__;
var temp__4124__auto____$1 = node.inode_seq();
if(cljs.core.truth_(temp__4124__auto____$1)){
var node_seq = temp__4124__auto____$1;
return (new cljs.core.NodeSeq(null,nodes,(j + (2)),node_seq,null));
} else {
var G__42476 = (j + (2));
j = G__42476;
continue;
}
} else {
var G__42477 = (j + (2));
j = G__42477;
continue;
}
}
} else {
return null;
}
break;
}
} else {
return (new cljs.core.NodeSeq(null,nodes,i,s,null));
}
});
create_inode_seq = function(nodes,i,s){
switch(arguments.length){
case 1:
return create_inode_seq__1.call(this,nodes);
case 3:
return create_inode_seq__3.call(this,nodes,i,s);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
create_inode_seq.cljs$core$IFn$_invoke$arity$1 = create_inode_seq__1;
create_inode_seq.cljs$core$IFn$_invoke$arity$3 = create_inode_seq__3;
return create_inode_seq;
})()
;

/**
* @constructor
*/
cljs.core.ArrayNodeSeq = (function (meta,nodes,i,s,__hash){
this.meta = meta;
this.nodes = nodes;
this.i = i;
this.s = s;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32374860;
})
cljs.core.ArrayNodeSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.ArrayNodeSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__24693__auto__ = self__.__hash;
if(!((h__24693__auto__ == null))){
return h__24693__auto__;
} else {
var h__24693__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__24693__auto____$1;

return h__24693__auto____$1;
}
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.first(self__.s);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var G__42478 = null;
var G__42479 = self__.nodes;
var G__42480 = self__.i;
var G__42481 = cljs.core.next(self__.s);
return (cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$4(G__42478,G__42479,G__42480,G__42481) : cljs.core.create_array_node_seq.call(null,G__42478,G__42479,G__42480,G__42481));
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return this$__$1;
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.ArrayNodeSeq(meta__$1,self__.nodes,self__.i,self__.s,self__.__hash));
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.ArrayNodeSeq.cljs$lang$type = true;

cljs.core.ArrayNodeSeq.cljs$lang$ctorStr = "cljs.core/ArrayNodeSeq";

cljs.core.ArrayNodeSeq.cljs$lang$ctorPrWriter = (function (this__24859__auto__,writer__24860__auto__,opt__24861__auto__){
return cljs.core._write(writer__24860__auto__,"cljs.core/ArrayNodeSeq");
});

cljs.core.__GT_ArrayNodeSeq = (function __GT_ArrayNodeSeq(meta,nodes,i,s,__hash){
return (new cljs.core.ArrayNodeSeq(meta,nodes,i,s,__hash));
});

(cljs.core.ArrayNodeSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__25250__auto__ = this;
return cljs.core.es6_iterator(this__25250__auto__);
}));
cljs.core.create_array_node_seq = (function() {
var create_array_node_seq = null;
var create_array_node_seq__1 = (function (nodes){
return create_array_node_seq.cljs$core$IFn$_invoke$arity$4(null,nodes,(0),null);
});
var create_array_node_seq__4 = (function (meta,nodes,i,s){
if((s == null)){
var len = nodes.length;
var j = i;
while(true){
if((j < len)){
var temp__4124__auto__ = (nodes[j]);
if(cljs.core.truth_(temp__4124__auto__)){
var nj = temp__4124__auto__;
var temp__4124__auto____$1 = nj.inode_seq();
if(cljs.core.truth_(temp__4124__auto____$1)){
var ns = temp__4124__auto____$1;
return (new cljs.core.ArrayNodeSeq(meta,nodes,(j + (1)),ns,null));
} else {
var G__42486 = (j + (1));
j = G__42486;
continue;
}
} else {
var G__42487 = (j + (1));
j = G__42487;
continue;
}
} else {
return null;
}
break;
}
} else {
return (new cljs.core.ArrayNodeSeq(meta,nodes,i,s,null));
}
});
create_array_node_seq = function(meta,nodes,i,s){
switch(arguments.length){
case 1:
return create_array_node_seq__1.call(this,meta);
case 4:
return create_array_node_seq__4.call(this,meta,nodes,i,s);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
create_array_node_seq.cljs$core$IFn$_invoke$arity$1 = create_array_node_seq__1;
create_array_node_seq.cljs$core$IFn$_invoke$arity$4 = create_array_node_seq__4;
return create_array_node_seq;
})()
;

/**
* @constructor
*/
cljs.core.PersistentHashMap = (function (meta,cnt,root,has_nil_QMARK_,nil_val,__hash){
this.meta = meta;
this.cnt = cnt;
this.root = root;
this.has_nil_QMARK_ = has_nil_QMARK_;
this.nil_val = nil_val;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 16123663;
this.cljs$lang$protocol_mask$partition1$ = 8196;
})
cljs.core.PersistentHashMap.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentHashMap.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentHashMap.prototype.keys = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator((function (){var G__42489 = coll;
return (cljs.core.keys.cljs$core$IFn$_invoke$arity$1 ? cljs.core.keys.cljs$core$IFn$_invoke$arity$1(G__42489) : cljs.core.keys.call(null,G__42489));
})());
});

cljs.core.PersistentHashMap.prototype.entries = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_entries_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentHashMap.prototype.values = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator((function (){var G__42490 = coll;
return (cljs.core.vals.cljs$core$IFn$_invoke$arity$1 ? cljs.core.vals.cljs$core$IFn$_invoke$arity$1(G__42490) : cljs.core.vals.call(null,G__42490));
})());
});

cljs.core.PersistentHashMap.prototype.has = (function (k){
var self__ = this;
var coll = this;
return cljs.core.contains_QMARK_(coll,k);
});

cljs.core.PersistentHashMap.prototype.get = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentHashMap.prototype.forEach = (function (f){
var self__ = this;
var coll = this;
var seq__42491 = cljs.core.seq(coll);
var chunk__42492 = null;
var count__42493 = (0);
var i__42494 = (0);
while(true){
if((i__42494 < count__42493)){
var vec__42495 = chunk__42492.cljs$core$IIndexed$_nth$arity$2(null,i__42494);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__42495,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__42495,(1),null);
var G__42496_42507 = v;
var G__42497_42508 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__42496_42507,G__42497_42508) : f.call(null,G__42496_42507,G__42497_42508));

var G__42509 = seq__42491;
var G__42510 = chunk__42492;
var G__42511 = count__42493;
var G__42512 = (i__42494 + (1));
seq__42491 = G__42509;
chunk__42492 = G__42510;
count__42493 = G__42511;
i__42494 = G__42512;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__42491);
if(temp__4126__auto__){
var seq__42491__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__42491__$1)){
var c__25059__auto__ = cljs.core.chunk_first(seq__42491__$1);
var G__42513 = cljs.core.chunk_rest(seq__42491__$1);
var G__42514 = c__25059__auto__;
var G__42515 = cljs.core.count(c__25059__auto__);
var G__42516 = (0);
seq__42491 = G__42513;
chunk__42492 = G__42514;
count__42493 = G__42515;
i__42494 = G__42516;
continue;
} else {
var vec__42498 = cljs.core.first(seq__42491__$1);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__42498,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__42498,(1),null);
var G__42499_42517 = v;
var G__42500_42518 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__42499_42517,G__42500_42518) : f.call(null,G__42499_42517,G__42500_42518));

var G__42519 = cljs.core.next(seq__42491__$1);
var G__42520 = null;
var G__42521 = (0);
var G__42522 = (0);
seq__42491 = G__42519;
chunk__42492 = G__42520;
count__42493 = G__42521;
i__42494 = G__42522;
continue;
}
} else {
return null;
}
}
break;
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.PersistentHashMap.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
if((k == null)){
if(self__.has_nil_QMARK_){
return self__.nil_val;
} else {
return not_found;
}
} else {
if((self__.root == null)){
return not_found;
} else {
return self__.root.inode_lookup((0),cljs.core.hash(k),k,not_found);

}
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = (function (coll,f,init){
var self__ = this;
var coll__$1 = this;
var init__$1 = ((self__.has_nil_QMARK_)?(function (){var G__42501 = init;
var G__42502 = null;
var G__42503 = self__.nil_val;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__42501,G__42502,G__42503) : f.call(null,G__42501,G__42502,G__42503));
})():init);
if(cljs.core.reduced_QMARK_(init__$1)){
var G__42504 = init__$1;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__42504) : cljs.core.deref.call(null,G__42504));
} else {
if(!((self__.root == null))){
return self__.root.kv_reduce(f,init__$1);
} else {
return init__$1;

}
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentHashMap.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.PersistentHashMap(self__.meta,self__.cnt,self__.root,self__.has_nil_QMARK_,self__.nil_val,self__.__hash));
});

cljs.core.PersistentHashMap.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.cnt;
});

cljs.core.PersistentHashMap.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__24693__auto__ = self__.__hash;
if(!((h__24693__auto__ == null))){
return h__24693__auto__;
} else {
var h__24693__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
self__.__hash = h__24693__auto____$1;

return h__24693__auto____$1;
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_map(coll__$1,other);
});

cljs.core.PersistentHashMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.TransientHashMap((function (){var obj42506 = {};
return obj42506;
})(),self__.root,self__.cnt,self__.has_nil_QMARK_,self__.nil_val));
});

cljs.core.PersistentHashMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._with_meta(cljs.core.PersistentHashMap.EMPTY,self__.meta);
});

cljs.core.PersistentHashMap.prototype.cljs$core$IMap$_dissoc$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
if((k == null)){
if(self__.has_nil_QMARK_){
return (new cljs.core.PersistentHashMap(self__.meta,(self__.cnt - (1)),self__.root,false,null,null));
} else {
return coll__$1;
}
} else {
if((self__.root == null)){
return coll__$1;
} else {
var new_root = self__.root.inode_without((0),cljs.core.hash(k),k);
if((new_root === self__.root)){
return coll__$1;
} else {
return (new cljs.core.PersistentHashMap(self__.meta,(self__.cnt - (1)),new_root,self__.has_nil_QMARK_,self__.nil_val,null));
}

}
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (coll,k,v){
var self__ = this;
var coll__$1 = this;
if((k == null)){
if((self__.has_nil_QMARK_) && ((v === self__.nil_val))){
return coll__$1;
} else {
return (new cljs.core.PersistentHashMap(self__.meta,((self__.has_nil_QMARK_)?self__.cnt:(self__.cnt + (1))),self__.root,true,v,null));
}
} else {
var added_leaf_QMARK_ = (new cljs.core.Box(false));
var new_root = (((self__.root == null))?cljs.core.BitmapIndexedNode.EMPTY:self__.root).inode_assoc((0),cljs.core.hash(k),k,v,added_leaf_QMARK_);
if((new_root === self__.root)){
return coll__$1;
} else {
return (new cljs.core.PersistentHashMap(self__.meta,((added_leaf_QMARK_.val)?(self__.cnt + (1)):self__.cnt),new_root,self__.has_nil_QMARK_,self__.nil_val,null));
}
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
if((k == null)){
return self__.has_nil_QMARK_;
} else {
if((self__.root == null)){
return false;
} else {
return !((self__.root.inode_lookup((0),cljs.core.hash(k),k,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel));

}
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
var s = ((!((self__.root == null)))?self__.root.inode_seq():null);
if(self__.has_nil_QMARK_){
return cljs.core.cons(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null,self__.nil_val], null),s);
} else {
return s;
}
} else {
return null;
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentHashMap(meta__$1,self__.cnt,self__.root,self__.has_nil_QMARK_,self__.nil_val,self__.__hash));
});

cljs.core.PersistentHashMap.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,entry){
var self__ = this;
var coll__$1 = this;
if(cljs.core.vector_QMARK_(entry)){
return cljs.core._assoc(coll__$1,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(1)));
} else {
var ret = coll__$1;
var es = cljs.core.seq(entry);
while(true){
if((es == null)){
return ret;
} else {
var e = cljs.core.first(es);
if(cljs.core.vector_QMARK_(e)){
var G__42523 = cljs.core._assoc(ret,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e,(1)));
var G__42524 = cljs.core.next(es);
ret = G__42523;
es = G__42524;
continue;
} else {
throw (new Error("conj on a map takes map entries or seqables of map entries"));
}
}
break;
}
}
});

cljs.core.PersistentHashMap.prototype.call = (function() {
var G__42525 = null;
var G__42525__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__42525__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__42525 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__42525__2.call(this,self__,k);
case 3:
return G__42525__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__42525.cljs$core$IFn$_invoke$arity$2 = G__42525__2;
G__42525.cljs$core$IFn$_invoke$arity$3 = G__42525__3;
return G__42525;
})()
;

cljs.core.PersistentHashMap.prototype.apply = (function (self__,args42488){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args42488)));
});

cljs.core.PersistentHashMap.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentHashMap.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.PersistentHashMap.cljs$lang$type = true;

cljs.core.PersistentHashMap.cljs$lang$ctorStr = "cljs.core/PersistentHashMap";

cljs.core.PersistentHashMap.cljs$lang$ctorPrWriter = (function (this__24859__auto__,writer__24860__auto__,opt__24861__auto__){
return cljs.core._write(writer__24860__auto__,"cljs.core/PersistentHashMap");
});

cljs.core.__GT_PersistentHashMap = (function __GT_PersistentHashMap(meta,cnt,root,has_nil_QMARK_,nil_val,__hash){
return (new cljs.core.PersistentHashMap(meta,cnt,root,has_nil_QMARK_,nil_val,__hash));
});

cljs.core.PersistentHashMap.EMPTY = (new cljs.core.PersistentHashMap(null,(0),null,false,null,(0)));
cljs.core.PersistentHashMap.fromArrays = (function (ks,vs){
var len = ks.length;
var i = (0);
var out = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
while(true){
if((i < len)){
var G__42526 = (i + (1));
var G__42527 = out.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3(null,(ks[i]),(vs[i]));
i = G__42526;
out = G__42527;
continue;
} else {
return cljs.core.persistent_BANG_(out);
}
break;
}
});
(cljs.core.PersistentHashMap.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__25250__auto__ = this;
return cljs.core.es6_iterator(this__25250__auto__);
}));

/**
* @constructor
*/
cljs.core.TransientHashMap = (function (edit,root,count,has_nil_QMARK_,nil_val){
this.edit = edit;
this.root = root;
this.count = count;
this.has_nil_QMARK_ = has_nil_QMARK_;
this.nil_val = nil_val;
this.cljs$lang$protocol_mask$partition1$ = 56;
this.cljs$lang$protocol_mask$partition0$ = 258;
})
cljs.core.TransientHashMap.prototype.cljs$core$ITransientMap$_dissoc_BANG_$arity$2 = (function (tcoll,key){
var self__ = this;
var tcoll__$1 = this;
return tcoll__$1.without_BANG_(key);
});

cljs.core.TransientHashMap.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = (function (tcoll,key,val){
var self__ = this;
var tcoll__$1 = this;
return tcoll__$1.assoc_BANG_(key,val);
});

cljs.core.TransientHashMap.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = (function (tcoll,val){
var self__ = this;
var tcoll__$1 = this;
return tcoll__$1.conj_BANG_(val);
});

cljs.core.TransientHashMap.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
return tcoll__$1.persistent_BANG_();
});

cljs.core.TransientHashMap.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (tcoll,k){
var self__ = this;
var tcoll__$1 = this;
if((k == null)){
if(self__.has_nil_QMARK_){
return self__.nil_val;
} else {
return null;
}
} else {
if((self__.root == null)){
return null;
} else {
return self__.root.inode_lookup((0),cljs.core.hash(k),k);
}
}
});

cljs.core.TransientHashMap.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (tcoll,k,not_found){
var self__ = this;
var tcoll__$1 = this;
if((k == null)){
if(self__.has_nil_QMARK_){
return self__.nil_val;
} else {
return not_found;
}
} else {
if((self__.root == null)){
return not_found;
} else {
return self__.root.inode_lookup((0),cljs.core.hash(k),k,not_found);
}
}
});

cljs.core.TransientHashMap.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if(self__.edit){
return self__.count;
} else {
throw (new Error("count after persistent!"));
}
});

cljs.core.TransientHashMap.prototype.conj_BANG_ = (function (o){
var self__ = this;
var tcoll = this;
if(self__.edit){
if((function (){var G__42528 = o;
if(G__42528){
var bit__24953__auto__ = (G__42528.cljs$lang$protocol_mask$partition0$ & (2048));
if((bit__24953__auto__) || (G__42528.cljs$core$IMapEntry$)){
return true;
} else {
if((!G__42528.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IMapEntry,G__42528);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IMapEntry,G__42528);
}
})()){
return tcoll.assoc_BANG_((function (){var G__42529 = o;
return (cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__42529) : cljs.core.key.call(null,G__42529));
})(),(function (){var G__42530 = o;
return (cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(G__42530) : cljs.core.val.call(null,G__42530));
})());
} else {
var es = cljs.core.seq(o);
var tcoll__$1 = tcoll;
while(true){
var temp__4124__auto__ = cljs.core.first(es);
if(cljs.core.truth_(temp__4124__auto__)){
var e = temp__4124__auto__;
var G__42533 = cljs.core.next(es);
var G__42534 = tcoll__$1.assoc_BANG_((function (){var G__42531 = e;
return (cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__42531) : cljs.core.key.call(null,G__42531));
})(),(function (){var G__42532 = e;
return (cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(G__42532) : cljs.core.val.call(null,G__42532));
})());
es = G__42533;
tcoll__$1 = G__42534;
continue;
} else {
return tcoll__$1;
}
break;
}
}
} else {
throw (new Error("conj! after persistent"));
}
});

cljs.core.TransientHashMap.prototype.assoc_BANG_ = (function (k,v){
var self__ = this;
var tcoll = this;
if(self__.edit){
if((k == null)){
if((self__.nil_val === v)){
} else {
self__.nil_val = v;
}

if(self__.has_nil_QMARK_){
} else {
self__.count = (self__.count + (1));

self__.has_nil_QMARK_ = true;
}

return tcoll;
} else {
var added_leaf_QMARK_ = (new cljs.core.Box(false));
var node = (((self__.root == null))?cljs.core.BitmapIndexedNode.EMPTY:self__.root).inode_assoc_BANG_(self__.edit,(0),cljs.core.hash(k),k,v,added_leaf_QMARK_);
if((node === self__.root)){
} else {
self__.root = node;
}

if(added_leaf_QMARK_.val){
self__.count = (self__.count + (1));
} else {
}

return tcoll;
}
} else {
throw (new Error("assoc! after persistent!"));
}
});

cljs.core.TransientHashMap.prototype.without_BANG_ = (function (k){
var self__ = this;
var tcoll = this;
if(self__.edit){
if((k == null)){
if(self__.has_nil_QMARK_){
self__.has_nil_QMARK_ = false;

self__.nil_val = null;

self__.count = (self__.count - (1));

return tcoll;
} else {
return tcoll;
}
} else {
if((self__.root == null)){
return tcoll;
} else {
var removed_leaf_QMARK_ = (new cljs.core.Box(false));
var node = self__.root.inode_without_BANG_(self__.edit,(0),cljs.core.hash(k),k,removed_leaf_QMARK_);
if((node === self__.root)){
} else {
self__.root = node;
}

if(cljs.core.truth_((removed_leaf_QMARK_[(0)]))){
self__.count = (self__.count - (1));
} else {
}

return tcoll;
}
}
} else {
throw (new Error("dissoc! after persistent!"));
}
});

cljs.core.TransientHashMap.prototype.persistent_BANG_ = (function (){
var self__ = this;
var tcoll = this;
if(self__.edit){
self__.edit = null;

return (new cljs.core.PersistentHashMap(null,self__.count,self__.root,self__.has_nil_QMARK_,self__.nil_val,null));
} else {
throw (new Error("persistent! called twice"));
}
});

cljs.core.TransientHashMap.cljs$lang$type = true;

cljs.core.TransientHashMap.cljs$lang$ctorStr = "cljs.core/TransientHashMap";

cljs.core.TransientHashMap.cljs$lang$ctorPrWriter = (function (this__24859__auto__,writer__24860__auto__,opt__24861__auto__){
return cljs.core._write(writer__24860__auto__,"cljs.core/TransientHashMap");
});

cljs.core.__GT_TransientHashMap = (function __GT_TransientHashMap(edit,root,count,has_nil_QMARK_,nil_val){
return (new cljs.core.TransientHashMap(edit,root,count,has_nil_QMARK_,nil_val));
});

cljs.core.tree_map_seq_push = (function tree_map_seq_push(node,stack,ascending_QMARK_){
var t = node;
var stack__$1 = stack;
while(true){
if(!((t == null))){
var G__42535 = ((ascending_QMARK_)?t.left:t.right);
var G__42536 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(stack__$1,t);
t = G__42535;
stack__$1 = G__42536;
continue;
} else {
return stack__$1;
}
break;
}
});

/**
* @constructor
*/
cljs.core.PersistentTreeMapSeq = (function (meta,stack,ascending_QMARK_,cnt,__hash){
this.meta = meta;
this.stack = stack;
this.ascending_QMARK_ = ascending_QMARK_;
this.cnt = cnt;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32374862;
})
cljs.core.PersistentTreeMapSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentTreeMapSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt < (0))){
return (cljs.core.count(cljs.core.next(coll__$1)) + (1));
} else {
return self__.cnt;
}
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__24693__auto__ = self__.__hash;
if(!((h__24693__auto__ == null))){
return h__24693__auto__;
} else {
var h__24693__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__24693__auto____$1;

return h__24693__auto____$1;
}
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return cljs.core.peek(self__.stack);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
var t = cljs.core.first(self__.stack);
var next_stack = cljs.core.tree_map_seq_push(((self__.ascending_QMARK_)?t.right:t.left),cljs.core.next(self__.stack),self__.ascending_QMARK_);
if(!((next_stack == null))){
return (new cljs.core.PersistentTreeMapSeq(null,next_stack,self__.ascending_QMARK_,(self__.cnt - (1)),null));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return this$__$1;
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeMapSeq(meta__$1,self__.stack,self__.ascending_QMARK_,self__.cnt,self__.__hash));
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.PersistentTreeMapSeq.cljs$lang$type = true;

cljs.core.PersistentTreeMapSeq.cljs$lang$ctorStr = "cljs.core/PersistentTreeMapSeq";

cljs.core.PersistentTreeMapSeq.cljs$lang$ctorPrWriter = (function (this__24859__auto__,writer__24860__auto__,opt__24861__auto__){
return cljs.core._write(writer__24860__auto__,"cljs.core/PersistentTreeMapSeq");
});

cljs.core.__GT_PersistentTreeMapSeq = (function __GT_PersistentTreeMapSeq(meta,stack,ascending_QMARK_,cnt,__hash){
return (new cljs.core.PersistentTreeMapSeq(meta,stack,ascending_QMARK_,cnt,__hash));
});

(cljs.core.PersistentTreeMapSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__25250__auto__ = this;
return cljs.core.es6_iterator(this__25250__auto__);
}));
cljs.core.create_tree_map_seq = (function create_tree_map_seq(tree,ascending_QMARK_,cnt){
return (new cljs.core.PersistentTreeMapSeq(null,cljs.core.tree_map_seq_push(tree,null,ascending_QMARK_),ascending_QMARK_,cnt,null));
});

cljs.core.balance_left = (function balance_left(key,val,ins,right){
if((ins instanceof cljs.core.RedNode)){
if((ins.left instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(ins.key,ins.val,ins.left.blacken(),(new cljs.core.BlackNode(key,val,ins.right,right,null)),null));
} else {
if((ins.right instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(ins.right.key,ins.right.val,(new cljs.core.BlackNode(ins.key,ins.val,ins.left,ins.right.left,null)),(new cljs.core.BlackNode(key,val,ins.right.right,right,null)),null));
} else {
return (new cljs.core.BlackNode(key,val,ins,right,null));

}
}
} else {
return (new cljs.core.BlackNode(key,val,ins,right,null));
}
});
cljs.core.balance_right = (function balance_right(key,val,left,ins){
if((ins instanceof cljs.core.RedNode)){
if((ins.right instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(ins.key,ins.val,(new cljs.core.BlackNode(key,val,left,ins.left,null)),ins.right.blacken(),null));
} else {
if((ins.left instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(ins.left.key,ins.left.val,(new cljs.core.BlackNode(key,val,left,ins.left.left,null)),(new cljs.core.BlackNode(ins.key,ins.val,ins.left.right,ins.right,null)),null));
} else {
return (new cljs.core.BlackNode(key,val,left,ins,null));

}
}
} else {
return (new cljs.core.BlackNode(key,val,left,ins,null));
}
});
cljs.core.balance_left_del = (function balance_left_del(key,val,del,right){
if((del instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(key,val,del.blacken(),right,null));
} else {
if((right instanceof cljs.core.BlackNode)){
return cljs.core.balance_right(key,val,del,right.redden());
} else {
if(((right instanceof cljs.core.RedNode)) && ((right.left instanceof cljs.core.BlackNode))){
return (new cljs.core.RedNode(right.left.key,right.left.val,(new cljs.core.BlackNode(key,val,del,right.left.left,null)),cljs.core.balance_right(right.key,right.val,right.left.right,right.right.redden()),null));
} else {
throw (new Error("red-black tree invariant violation"));

}
}
}
});
cljs.core.balance_right_del = (function balance_right_del(key,val,left,del){
if((del instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(key,val,left,del.blacken(),null));
} else {
if((left instanceof cljs.core.BlackNode)){
return cljs.core.balance_left(key,val,left.redden(),del);
} else {
if(((left instanceof cljs.core.RedNode)) && ((left.right instanceof cljs.core.BlackNode))){
return (new cljs.core.RedNode(left.right.key,left.right.val,cljs.core.balance_left(left.key,left.val,left.left.redden(),left.right.left),(new cljs.core.BlackNode(key,val,left.right.right,del,null)),null));
} else {
throw (new Error("red-black tree invariant violation"));

}
}
}
});
cljs.core.tree_map_kv_reduce = (function tree_map_kv_reduce(node,f,init){
var init__$1 = ((!((node.left == null)))?tree_map_kv_reduce(node.left,f,init):init);
if(cljs.core.reduced_QMARK_(init__$1)){
var G__42549 = init__$1;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__42549) : cljs.core.deref.call(null,G__42549));
} else {
var init__$2 = (function (){var G__42550 = init__$1;
var G__42551 = node.key;
var G__42552 = node.val;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__42550,G__42551,G__42552) : f.call(null,G__42550,G__42551,G__42552));
})();
if(cljs.core.reduced_QMARK_(init__$2)){
var G__42553 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__42553) : cljs.core.deref.call(null,G__42553));
} else {
var init__$3 = ((!((node.right == null)))?tree_map_kv_reduce(node.right,f,init__$2):init__$2);
if(cljs.core.reduced_QMARK_(init__$3)){
var G__42554 = init__$3;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__42554) : cljs.core.deref.call(null,G__42554));
} else {
return init__$3;
}
}
}
});

/**
* @constructor
*/
cljs.core.BlackNode = (function (key,val,left,right,__hash){
this.key = key;
this.val = val;
this.left = left;
this.right = right;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32402207;
})
cljs.core.BlackNode.prototype.add_right = (function (ins){
var self__ = this;
var node = this;
return ins.balance_right(node);
});

cljs.core.BlackNode.prototype.redden = (function (){
var self__ = this;
var node = this;
return (new cljs.core.RedNode(self__.key,self__.val,self__.left,self__.right,null));
});

cljs.core.BlackNode.prototype.blacken = (function (){
var self__ = this;
var node = this;
return node;
});

cljs.core.BlackNode.prototype.add_left = (function (ins){
var self__ = this;
var node = this;
return ins.balance_left(node);
});

cljs.core.BlackNode.prototype.replace = (function (key__$1,val__$1,left__$1,right__$1){
var self__ = this;
var node = this;
return (new cljs.core.BlackNode(key__$1,val__$1,left__$1,right__$1,null));
});

cljs.core.BlackNode.prototype.balance_left = (function (parent){
var self__ = this;
var node = this;
return (new cljs.core.BlackNode(parent.key,parent.val,node,parent.right,null));
});

cljs.core.BlackNode.prototype.balance_right = (function (parent){
var self__ = this;
var node = this;
return (new cljs.core.BlackNode(parent.key,parent.val,parent.left,node,null));
});

cljs.core.BlackNode.prototype.remove_left = (function (del){
var self__ = this;
var node = this;
return cljs.core.balance_left_del(self__.key,self__.val,del,self__.right);
});

cljs.core.BlackNode.prototype.kv_reduce = (function (f,init){
var self__ = this;
var node = this;
return cljs.core.tree_map_kv_reduce(node,f,init);
});

cljs.core.BlackNode.prototype.remove_right = (function (del){
var self__ = this;
var node = this;
return cljs.core.balance_right_del(self__.key,self__.val,self__.left,del);
});

cljs.core.BlackNode.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (node,k){
var self__ = this;
var node__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(node__$1,k,null);
});

cljs.core.BlackNode.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (node,k,not_found){
var self__ = this;
var node__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(node__$1,k,not_found);
});

cljs.core.BlackNode.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (node,n){
var self__ = this;
var node__$1 = this;
if((n === (0))){
return self__.key;
} else {
if((n === (1))){
return self__.val;
} else {
return null;

}
}
});

cljs.core.BlackNode.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (node,n,not_found){
var self__ = this;
var node__$1 = this;
if((n === (0))){
return self__.key;
} else {
if((n === (1))){
return self__.val;
} else {
return not_found;

}
}
});

cljs.core.BlackNode.prototype.cljs$core$IVector$_assoc_n$arity$3 = (function (node,n,v){
var self__ = this;
var node__$1 = this;
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val], null).cljs$core$IVector$_assoc_n$arity$3(null,n,v);
});

cljs.core.BlackNode.prototype.cljs$core$IMeta$_meta$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return null;
});

cljs.core.BlackNode.prototype.cljs$core$ICounted$_count$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return (2);
});

cljs.core.BlackNode.prototype.cljs$core$IMapEntry$_key$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return self__.key;
});

cljs.core.BlackNode.prototype.cljs$core$IMapEntry$_val$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return self__.val;
});

cljs.core.BlackNode.prototype.cljs$core$IStack$_peek$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return self__.val;
});

cljs.core.BlackNode.prototype.cljs$core$IStack$_pop$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key], null);
});

cljs.core.BlackNode.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__24693__auto__ = self__.__hash;
if(!((h__24693__auto__ == null))){
return h__24693__auto__;
} else {
var h__24693__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__24693__auto____$1;

return h__24693__auto____$1;
}
});

cljs.core.BlackNode.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.BlackNode.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return cljs.core.PersistentVector.EMPTY;
});

cljs.core.BlackNode.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (node,f){
var self__ = this;
var node__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(node__$1,f);
});

cljs.core.BlackNode.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (node,f,start){
var self__ = this;
var node__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3(node__$1,f,start);
});

cljs.core.BlackNode.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (node,k,v){
var self__ = this;
var node__$1 = this;
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val], null),k,v);
});

cljs.core.BlackNode.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return cljs.core._conj(cljs.core._conj(cljs.core.List.EMPTY,self__.val),self__.key);
});

cljs.core.BlackNode.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (node,meta){
var self__ = this;
var node__$1 = this;
return cljs.core.with_meta(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val], null),meta);
});

cljs.core.BlackNode.prototype.cljs$core$ICollection$_conj$arity$2 = (function (node,o){
var self__ = this;
var node__$1 = this;
return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val,o], null);
});

cljs.core.BlackNode.prototype.call = (function() {
var G__42556 = null;
var G__42556__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var node = self____$1;
return node.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__42556__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var node = self____$1;
return node.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__42556 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__42556__2.call(this,self__,k);
case 3:
return G__42556__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__42556.cljs$core$IFn$_invoke$arity$2 = G__42556__2;
G__42556.cljs$core$IFn$_invoke$arity$3 = G__42556__3;
return G__42556;
})()
;

cljs.core.BlackNode.prototype.apply = (function (self__,args42555){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args42555)));
});

cljs.core.BlackNode.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var node = this;
return node.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.BlackNode.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var node = this;
return node.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.BlackNode.cljs$lang$type = true;

cljs.core.BlackNode.cljs$lang$ctorStr = "cljs.core/BlackNode";

cljs.core.BlackNode.cljs$lang$ctorPrWriter = (function (this__24859__auto__,writer__24860__auto__,opt__24861__auto__){
return cljs.core._write(writer__24860__auto__,"cljs.core/BlackNode");
});

cljs.core.__GT_BlackNode = (function __GT_BlackNode(key,val,left,right,__hash){
return (new cljs.core.BlackNode(key,val,left,right,__hash));
});

(cljs.core.BlackNode.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__25250__auto__ = this;
return cljs.core.es6_iterator(this__25250__auto__);
}));

/**
* @constructor
*/
cljs.core.RedNode = (function (key,val,left,right,__hash){
this.key = key;
this.val = val;
this.left = left;
this.right = right;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32402207;
})
cljs.core.RedNode.prototype.add_right = (function (ins){
var self__ = this;
var node = this;
return (new cljs.core.RedNode(self__.key,self__.val,self__.left,ins,null));
});

cljs.core.RedNode.prototype.redden = (function (){
var self__ = this;
var node = this;
throw (new Error("red-black tree invariant violation"));
});

cljs.core.RedNode.prototype.blacken = (function (){
var self__ = this;
var node = this;
return (new cljs.core.BlackNode(self__.key,self__.val,self__.left,self__.right,null));
});

cljs.core.RedNode.prototype.add_left = (function (ins){
var self__ = this;
var node = this;
return (new cljs.core.RedNode(self__.key,self__.val,ins,self__.right,null));
});

cljs.core.RedNode.prototype.replace = (function (key__$1,val__$1,left__$1,right__$1){
var self__ = this;
var node = this;
return (new cljs.core.RedNode(key__$1,val__$1,left__$1,right__$1,null));
});

cljs.core.RedNode.prototype.balance_left = (function (parent){
var self__ = this;
var node = this;
if((self__.left instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(self__.key,self__.val,self__.left.blacken(),(new cljs.core.BlackNode(parent.key,parent.val,self__.right,parent.right,null)),null));
} else {
if((self__.right instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(self__.right.key,self__.right.val,(new cljs.core.BlackNode(self__.key,self__.val,self__.left,self__.right.left,null)),(new cljs.core.BlackNode(parent.key,parent.val,self__.right.right,parent.right,null)),null));
} else {
return (new cljs.core.BlackNode(parent.key,parent.val,node,parent.right,null));

}
}
});

cljs.core.RedNode.prototype.balance_right = (function (parent){
var self__ = this;
var node = this;
if((self__.right instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(self__.key,self__.val,(new cljs.core.BlackNode(parent.key,parent.val,parent.left,self__.left,null)),self__.right.blacken(),null));
} else {
if((self__.left instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(self__.left.key,self__.left.val,(new cljs.core.BlackNode(parent.key,parent.val,parent.left,self__.left.left,null)),(new cljs.core.BlackNode(self__.key,self__.val,self__.left.right,self__.right,null)),null));
} else {
return (new cljs.core.BlackNode(parent.key,parent.val,parent.left,node,null));

}
}
});

cljs.core.RedNode.prototype.remove_left = (function (del){
var self__ = this;
var node = this;
return (new cljs.core.RedNode(self__.key,self__.val,del,self__.right,null));
});

cljs.core.RedNode.prototype.kv_reduce = (function (f,init){
var self__ = this;
var node = this;
return cljs.core.tree_map_kv_reduce(node,f,init);
});

cljs.core.RedNode.prototype.remove_right = (function (del){
var self__ = this;
var node = this;
return (new cljs.core.RedNode(self__.key,self__.val,self__.left,del,null));
});

cljs.core.RedNode.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (node,k){
var self__ = this;
var node__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(node__$1,k,null);
});

cljs.core.RedNode.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (node,k,not_found){
var self__ = this;
var node__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(node__$1,k,not_found);
});

cljs.core.RedNode.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (node,n){
var self__ = this;
var node__$1 = this;
if((n === (0))){
return self__.key;
} else {
if((n === (1))){
return self__.val;
} else {
return null;

}
}
});

cljs.core.RedNode.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (node,n,not_found){
var self__ = this;
var node__$1 = this;
if((n === (0))){
return self__.key;
} else {
if((n === (1))){
return self__.val;
} else {
return not_found;

}
}
});

cljs.core.RedNode.prototype.cljs$core$IVector$_assoc_n$arity$3 = (function (node,n,v){
var self__ = this;
var node__$1 = this;
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val], null).cljs$core$IVector$_assoc_n$arity$3(null,n,v);
});

cljs.core.RedNode.prototype.cljs$core$IMeta$_meta$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return null;
});

cljs.core.RedNode.prototype.cljs$core$ICounted$_count$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return (2);
});

cljs.core.RedNode.prototype.cljs$core$IMapEntry$_key$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return self__.key;
});

cljs.core.RedNode.prototype.cljs$core$IMapEntry$_val$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return self__.val;
});

cljs.core.RedNode.prototype.cljs$core$IStack$_peek$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return self__.val;
});

cljs.core.RedNode.prototype.cljs$core$IStack$_pop$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key], null);
});

cljs.core.RedNode.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__24693__auto__ = self__.__hash;
if(!((h__24693__auto__ == null))){
return h__24693__auto__;
} else {
var h__24693__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__24693__auto____$1;

return h__24693__auto____$1;
}
});

cljs.core.RedNode.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.RedNode.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return cljs.core.PersistentVector.EMPTY;
});

cljs.core.RedNode.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (node,f){
var self__ = this;
var node__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(node__$1,f);
});

cljs.core.RedNode.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (node,f,start){
var self__ = this;
var node__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3(node__$1,f,start);
});

cljs.core.RedNode.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (node,k,v){
var self__ = this;
var node__$1 = this;
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val], null),k,v);
});

cljs.core.RedNode.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return cljs.core._conj(cljs.core._conj(cljs.core.List.EMPTY,self__.val),self__.key);
});

cljs.core.RedNode.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (node,meta){
var self__ = this;
var node__$1 = this;
return cljs.core.with_meta(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val], null),meta);
});

cljs.core.RedNode.prototype.cljs$core$ICollection$_conj$arity$2 = (function (node,o){
var self__ = this;
var node__$1 = this;
return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val,o], null);
});

cljs.core.RedNode.prototype.call = (function() {
var G__42558 = null;
var G__42558__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var node = self____$1;
return node.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__42558__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var node = self____$1;
return node.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__42558 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__42558__2.call(this,self__,k);
case 3:
return G__42558__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__42558.cljs$core$IFn$_invoke$arity$2 = G__42558__2;
G__42558.cljs$core$IFn$_invoke$arity$3 = G__42558__3;
return G__42558;
})()
;

cljs.core.RedNode.prototype.apply = (function (self__,args42557){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args42557)));
});

cljs.core.RedNode.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var node = this;
return node.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.RedNode.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var node = this;
return node.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.RedNode.cljs$lang$type = true;

cljs.core.RedNode.cljs$lang$ctorStr = "cljs.core/RedNode";

cljs.core.RedNode.cljs$lang$ctorPrWriter = (function (this__24859__auto__,writer__24860__auto__,opt__24861__auto__){
return cljs.core._write(writer__24860__auto__,"cljs.core/RedNode");
});

cljs.core.__GT_RedNode = (function __GT_RedNode(key,val,left,right,__hash){
return (new cljs.core.RedNode(key,val,left,right,__hash));
});

(cljs.core.RedNode.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__25250__auto__ = this;
return cljs.core.es6_iterator(this__25250__auto__);
}));
cljs.core.tree_map_add = (function tree_map_add(comp,tree,k,v,found){
if((tree == null)){
return (new cljs.core.RedNode(k,v,null,null,null));
} else {
var c = (function (){var G__42571 = k;
var G__42572 = tree.key;
return (comp.cljs$core$IFn$_invoke$arity$2 ? comp.cljs$core$IFn$_invoke$arity$2(G__42571,G__42572) : comp.call(null,G__42571,G__42572));
})();
if((c === (0))){
(found[(0)] = tree);

return null;
} else {
if((c < (0))){
var ins = tree_map_add(comp,tree.left,k,v,found);
if(!((ins == null))){
return tree.add_left(ins);
} else {
return null;
}
} else {
var ins = tree_map_add(comp,tree.right,k,v,found);
if(!((ins == null))){
return tree.add_right(ins);
} else {
return null;
}

}
}
}
});
cljs.core.tree_map_append = (function tree_map_append(left,right){
if((left == null)){
return right;
} else {
if((right == null)){
return left;
} else {
if((left instanceof cljs.core.RedNode)){
if((right instanceof cljs.core.RedNode)){
var app = tree_map_append(left.right,right.left);
if((app instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(app.key,app.val,(new cljs.core.RedNode(left.key,left.val,left.left,app.left,null)),(new cljs.core.RedNode(right.key,right.val,app.right,right.right,null)),null));
} else {
return (new cljs.core.RedNode(left.key,left.val,left.left,(new cljs.core.RedNode(right.key,right.val,app,right.right,null)),null));
}
} else {
return (new cljs.core.RedNode(left.key,left.val,left.left,tree_map_append(left.right,right),null));
}
} else {
if((right instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(right.key,right.val,tree_map_append(left,right.left),right.right,null));
} else {
var app = tree_map_append(left.right,right.left);
if((app instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(app.key,app.val,(new cljs.core.BlackNode(left.key,left.val,left.left,app.left,null)),(new cljs.core.BlackNode(right.key,right.val,app.right,right.right,null)),null));
} else {
return cljs.core.balance_left_del(left.key,left.val,left.left,(new cljs.core.BlackNode(right.key,right.val,app,right.right,null)));
}

}
}
}
}
});
cljs.core.tree_map_remove = (function tree_map_remove(comp,tree,k,found){
if(!((tree == null))){
var c = (function (){var G__42591 = k;
var G__42592 = tree.key;
return (comp.cljs$core$IFn$_invoke$arity$2 ? comp.cljs$core$IFn$_invoke$arity$2(G__42591,G__42592) : comp.call(null,G__42591,G__42592));
})();
if((c === (0))){
(found[(0)] = tree);

return cljs.core.tree_map_append(tree.left,tree.right);
} else {
if((c < (0))){
var del = tree_map_remove(comp,tree.left,k,found);
if((!((del == null))) || (!(((found[(0)]) == null)))){
if((tree.left instanceof cljs.core.BlackNode)){
return cljs.core.balance_left_del(tree.key,tree.val,del,tree.right);
} else {
return (new cljs.core.RedNode(tree.key,tree.val,del,tree.right,null));
}
} else {
return null;
}
} else {
var del = tree_map_remove(comp,tree.right,k,found);
if((!((del == null))) || (!(((found[(0)]) == null)))){
if((tree.right instanceof cljs.core.BlackNode)){
return cljs.core.balance_right_del(tree.key,tree.val,tree.left,del);
} else {
return (new cljs.core.RedNode(tree.key,tree.val,tree.left,del,null));
}
} else {
return null;
}

}
}
} else {
return null;
}
});
cljs.core.tree_map_replace = (function tree_map_replace(comp,tree,k,v){
var tk = tree.key;
var c = (function (){var G__42603 = k;
var G__42604 = tk;
return (comp.cljs$core$IFn$_invoke$arity$2 ? comp.cljs$core$IFn$_invoke$arity$2(G__42603,G__42604) : comp.call(null,G__42603,G__42604));
})();
if((c === (0))){
return tree.replace(tk,v,tree.left,tree.right);
} else {
if((c < (0))){
return tree.replace(tk,tree.val,tree_map_replace(comp,tree.left,k,v),tree.right);
} else {
return tree.replace(tk,tree.val,tree.left,tree_map_replace(comp,tree.right,k,v));

}
}
});

/**
* @constructor
*/
cljs.core.PersistentTreeMap = (function (comp,tree,cnt,meta,__hash){
this.comp = comp;
this.tree = tree;
this.cnt = cnt;
this.meta = meta;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 418776847;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.PersistentTreeMap.prototype.forEach = (function (f){
var self__ = this;
var coll = this;
var seq__42606 = cljs.core.seq(coll);
var chunk__42607 = null;
var count__42608 = (0);
var i__42609 = (0);
while(true){
if((i__42609 < count__42608)){
var vec__42610 = chunk__42607.cljs$core$IIndexed$_nth$arity$2(null,i__42609);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__42610,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__42610,(1),null);
var G__42611_42623 = v;
var G__42612_42624 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__42611_42623,G__42612_42624) : f.call(null,G__42611_42623,G__42612_42624));

var G__42625 = seq__42606;
var G__42626 = chunk__42607;
var G__42627 = count__42608;
var G__42628 = (i__42609 + (1));
seq__42606 = G__42625;
chunk__42607 = G__42626;
count__42608 = G__42627;
i__42609 = G__42628;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__42606);
if(temp__4126__auto__){
var seq__42606__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__42606__$1)){
var c__25059__auto__ = cljs.core.chunk_first(seq__42606__$1);
var G__42629 = cljs.core.chunk_rest(seq__42606__$1);
var G__42630 = c__25059__auto__;
var G__42631 = cljs.core.count(c__25059__auto__);
var G__42632 = (0);
seq__42606 = G__42629;
chunk__42607 = G__42630;
count__42608 = G__42631;
i__42609 = G__42632;
continue;
} else {
var vec__42613 = cljs.core.first(seq__42606__$1);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__42613,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__42613,(1),null);
var G__42614_42633 = v;
var G__42615_42634 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__42614_42633,G__42615_42634) : f.call(null,G__42614_42633,G__42615_42634));

var G__42635 = cljs.core.next(seq__42606__$1);
var G__42636 = null;
var G__42637 = (0);
var G__42638 = (0);
seq__42606 = G__42635;
chunk__42607 = G__42636;
count__42608 = G__42637;
i__42609 = G__42638;
continue;
}
} else {
return null;
}
}
break;
}
});

cljs.core.PersistentTreeMap.prototype.get = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentTreeMap.prototype.entries = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_entries_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentTreeMap.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentTreeMap.prototype.keys = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator((function (){var G__42616 = coll;
return (cljs.core.keys.cljs$core$IFn$_invoke$arity$1 ? cljs.core.keys.cljs$core$IFn$_invoke$arity$1(G__42616) : cljs.core.keys.call(null,G__42616));
})());
});

cljs.core.PersistentTreeMap.prototype.values = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator((function (){var G__42617 = coll;
return (cljs.core.vals.cljs$core$IFn$_invoke$arity$1 ? cljs.core.vals.cljs$core$IFn$_invoke$arity$1(G__42617) : cljs.core.vals.call(null,G__42617));
})());
});

cljs.core.PersistentTreeMap.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentTreeMap.prototype.entry_at = (function (k){
var self__ = this;
var coll = this;
var t = self__.tree;
while(true){
if(!((t == null))){
var c = (function (){var G__42618 = k;
var G__42619 = t.key;
return (self__.comp.cljs$core$IFn$_invoke$arity$2 ? self__.comp.cljs$core$IFn$_invoke$arity$2(G__42618,G__42619) : self__.comp.call(null,G__42618,G__42619));
})();
if((c === (0))){
return t;
} else {
if((c < (0))){
var G__42639 = t.left;
t = G__42639;
continue;
} else {
var G__42640 = t.right;
t = G__42640;
continue;

}
}
} else {
return null;
}
break;
}
});

cljs.core.PersistentTreeMap.prototype.has = (function (k){
var self__ = this;
var coll = this;
return cljs.core.contains_QMARK_(coll,k);
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
var n = coll__$1.entry_at(k);
if(!((n == null))){
return n.val;
} else {
return not_found;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = (function (coll,f,init){
var self__ = this;
var coll__$1 = this;
if(!((self__.tree == null))){
return cljs.core.tree_map_kv_reduce(self__.tree,f,init);
} else {
return init;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.PersistentTreeMap(self__.comp,self__.tree,self__.cnt,self__.meta,self__.__hash));
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.cnt;
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IReversible$_rseq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
return cljs.core.create_tree_map_seq(self__.tree,false,self__.cnt);
} else {
return null;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__24693__auto__ = self__.__hash;
if(!((h__24693__auto__ == null))){
return h__24693__auto__;
} else {
var h__24693__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
self__.__hash = h__24693__auto____$1;

return h__24693__auto____$1;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_map(coll__$1,other);
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeMap(self__.comp,null,(0),self__.meta,(0)));
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IMap$_dissoc$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
var found = [null];
var t = cljs.core.tree_map_remove(self__.comp,self__.tree,k,found);
if((t == null)){
if((cljs.core.nth.cljs$core$IFn$_invoke$arity$2(found,(0)) == null)){
return coll__$1;
} else {
return (new cljs.core.PersistentTreeMap(self__.comp,null,(0),self__.meta,null));
}
} else {
return (new cljs.core.PersistentTreeMap(self__.comp,t.blacken(),(self__.cnt - (1)),self__.meta,null));
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (coll,k,v){
var self__ = this;
var coll__$1 = this;
var found = [null];
var t = cljs.core.tree_map_add(self__.comp,self__.tree,k,v,found);
if((t == null)){
var found_node = cljs.core.nth.cljs$core$IFn$_invoke$arity$2(found,(0));
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(v,found_node.val)){
return coll__$1;
} else {
return (new cljs.core.PersistentTreeMap(self__.comp,cljs.core.tree_map_replace(self__.comp,self__.tree,k,v),self__.cnt,self__.meta,null));
}
} else {
return (new cljs.core.PersistentTreeMap(self__.comp,t.blacken(),(self__.cnt + (1)),self__.meta,null));
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return !((coll__$1.entry_at(k) == null));
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
return cljs.core.create_tree_map_seq(self__.tree,true,self__.cnt);
} else {
return null;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeMap(self__.comp,self__.tree,self__.cnt,meta__$1,self__.__hash));
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,entry){
var self__ = this;
var coll__$1 = this;
if(cljs.core.vector_QMARK_(entry)){
return cljs.core._assoc(coll__$1,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(1)));
} else {
var ret = coll__$1;
var es = cljs.core.seq(entry);
while(true){
if((es == null)){
return ret;
} else {
var e = cljs.core.first(es);
if(cljs.core.vector_QMARK_(e)){
var G__42641 = cljs.core._assoc(ret,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e,(1)));
var G__42642 = cljs.core.next(es);
ret = G__42641;
es = G__42642;
continue;
} else {
throw (new Error("conj on a map takes map entries or seqables of map entries"));
}
}
break;
}
}
});

cljs.core.PersistentTreeMap.prototype.call = (function() {
var G__42643 = null;
var G__42643__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__42643__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__42643 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__42643__2.call(this,self__,k);
case 3:
return G__42643__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__42643.cljs$core$IFn$_invoke$arity$2 = G__42643__2;
G__42643.cljs$core$IFn$_invoke$arity$3 = G__42643__3;
return G__42643;
})()
;

cljs.core.PersistentTreeMap.prototype.apply = (function (self__,args42605){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args42605)));
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_sorted_seq$arity$2 = (function (coll,ascending_QMARK_){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
return cljs.core.create_tree_map_seq(self__.tree,ascending_QMARK_,self__.cnt);
} else {
return null;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_sorted_seq_from$arity$3 = (function (coll,k,ascending_QMARK_){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
var stack = null;
var t = self__.tree;
while(true){
if(!((t == null))){
var c = (function (){var G__42620 = k;
var G__42621 = t.key;
return (self__.comp.cljs$core$IFn$_invoke$arity$2 ? self__.comp.cljs$core$IFn$_invoke$arity$2(G__42620,G__42621) : self__.comp.call(null,G__42620,G__42621));
})();
if((c === (0))){
return (new cljs.core.PersistentTreeMapSeq(null,cljs.core.conj.cljs$core$IFn$_invoke$arity$2(stack,t),ascending_QMARK_,(-1),null));
} else {
if(cljs.core.truth_(ascending_QMARK_)){
if((c < (0))){
var G__42644 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(stack,t);
var G__42645 = t.left;
stack = G__42644;
t = G__42645;
continue;
} else {
var G__42646 = stack;
var G__42647 = t.right;
stack = G__42646;
t = G__42647;
continue;
}
} else {
if((c > (0))){
var G__42648 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(stack,t);
var G__42649 = t.right;
stack = G__42648;
t = G__42649;
continue;
} else {
var G__42650 = stack;
var G__42651 = t.left;
stack = G__42650;
t = G__42651;
continue;
}

}
}
} else {
if((stack == null)){
return null;
} else {
return (new cljs.core.PersistentTreeMapSeq(null,stack,ascending_QMARK_,(-1),null));
}
}
break;
}
} else {
return null;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_entry_key$arity$2 = (function (coll,entry){
var self__ = this;
var coll__$1 = this;
var G__42622 = entry;
return (cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__42622) : cljs.core.key.call(null,G__42622));
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_comparator$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.comp;
});

cljs.core.PersistentTreeMap.cljs$lang$type = true;

cljs.core.PersistentTreeMap.cljs$lang$ctorStr = "cljs.core/PersistentTreeMap";

cljs.core.PersistentTreeMap.cljs$lang$ctorPrWriter = (function (this__24859__auto__,writer__24860__auto__,opt__24861__auto__){
return cljs.core._write(writer__24860__auto__,"cljs.core/PersistentTreeMap");
});

cljs.core.__GT_PersistentTreeMap = (function __GT_PersistentTreeMap(comp,tree,cnt,meta,__hash){
return (new cljs.core.PersistentTreeMap(comp,tree,cnt,meta,__hash));
});

cljs.core.PersistentTreeMap.EMPTY = (new cljs.core.PersistentTreeMap(cljs.core.compare,null,(0),null,(0)));
(cljs.core.PersistentTreeMap.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__25250__auto__ = this;
return cljs.core.es6_iterator(this__25250__auto__);
}));
/**
* keyval => key val
* Returns a new hash map with supplied mappings.
* @param {...*} var_args
*/
cljs.core.hash_map = (function() { 
var hash_map__delegate = function (keyvals){
var in$ = cljs.core.seq(keyvals);
var out = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
while(true){
if(in$){
var G__42652 = cljs.core.nnext(in$);
var G__42653 = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(out,cljs.core.first(in$),cljs.core.second(in$));
in$ = G__42652;
out = G__42653;
continue;
} else {
return cljs.core.persistent_BANG_(out);
}
break;
}
};
var hash_map = function (var_args){
var keyvals = null;
if (arguments.length > 0) {
var G__42654__i = 0, G__42654__a = new Array(arguments.length -  0);
while (G__42654__i < G__42654__a.length) {G__42654__a[G__42654__i] = arguments[G__42654__i + 0]; ++G__42654__i;}
  keyvals = new cljs.core.IndexedSeq(G__42654__a,0);
} 
return hash_map__delegate.call(this,keyvals);};
hash_map.cljs$lang$maxFixedArity = 0;
hash_map.cljs$lang$applyTo = (function (arglist__42655){
var keyvals = cljs.core.seq(arglist__42655);
return hash_map__delegate(keyvals);
});
hash_map.cljs$core$IFn$_invoke$arity$variadic = hash_map__delegate;
return hash_map;
})()
;
/**
* keyval => key val
* Returns a new array map with supplied mappings.
* @param {...*} var_args
*/
cljs.core.array_map = (function() { 
var array_map__delegate = function (keyvals){
return cljs.core.PersistentArrayMap.fromArray(cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.array,keyvals),true,false);
};
var array_map = function (var_args){
var keyvals = null;
if (arguments.length > 0) {
var G__42656__i = 0, G__42656__a = new Array(arguments.length -  0);
while (G__42656__i < G__42656__a.length) {G__42656__a[G__42656__i] = arguments[G__42656__i + 0]; ++G__42656__i;}
  keyvals = new cljs.core.IndexedSeq(G__42656__a,0);
} 
return array_map__delegate.call(this,keyvals);};
array_map.cljs$lang$maxFixedArity = 0;
array_map.cljs$lang$applyTo = (function (arglist__42657){
var keyvals = cljs.core.seq(arglist__42657);
return array_map__delegate(keyvals);
});
array_map.cljs$core$IFn$_invoke$arity$variadic = array_map__delegate;
return array_map;
})()
;
/**
* keyval => key val
* Returns a new object map with supplied mappings.
* @param {...*} var_args
*/
cljs.core.obj_map = (function() { 
var obj_map__delegate = function (keyvals){
var ks = [];
var obj = (function (){var obj42661 = {};
return obj42661;
})();
var kvs = cljs.core.seq(keyvals);
while(true){
if(kvs){
ks.push(cljs.core.first(kvs));

(obj[cljs.core.first(kvs)] = cljs.core.second(kvs));

var G__42662 = cljs.core.nnext(kvs);
kvs = G__42662;
continue;
} else {
return cljs.core.ObjMap.fromObject(ks,obj);
}
break;
}
};
var obj_map = function (var_args){
var keyvals = null;
if (arguments.length > 0) {
var G__42663__i = 0, G__42663__a = new Array(arguments.length -  0);
while (G__42663__i < G__42663__a.length) {G__42663__a[G__42663__i] = arguments[G__42663__i + 0]; ++G__42663__i;}
  keyvals = new cljs.core.IndexedSeq(G__42663__a,0);
} 
return obj_map__delegate.call(this,keyvals);};
obj_map.cljs$lang$maxFixedArity = 0;
obj_map.cljs$lang$applyTo = (function (arglist__42664){
var keyvals = cljs.core.seq(arglist__42664);
return obj_map__delegate(keyvals);
});
obj_map.cljs$core$IFn$_invoke$arity$variadic = obj_map__delegate;
return obj_map;
})()
;
/**
* keyval => key val
* Returns a new sorted map with supplied mappings.
* @param {...*} var_args
*/
cljs.core.sorted_map = (function() { 
var sorted_map__delegate = function (keyvals){
var in$ = cljs.core.seq(keyvals);
var out = cljs.core.PersistentTreeMap.EMPTY;
while(true){
if(in$){
var G__42665 = cljs.core.nnext(in$);
var G__42666 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(out,cljs.core.first(in$),cljs.core.second(in$));
in$ = G__42665;
out = G__42666;
continue;
} else {
return out;
}
break;
}
};
var sorted_map = function (var_args){
var keyvals = null;
if (arguments.length > 0) {
var G__42667__i = 0, G__42667__a = new Array(arguments.length -  0);
while (G__42667__i < G__42667__a.length) {G__42667__a[G__42667__i] = arguments[G__42667__i + 0]; ++G__42667__i;}
  keyvals = new cljs.core.IndexedSeq(G__42667__a,0);
} 
return sorted_map__delegate.call(this,keyvals);};
sorted_map.cljs$lang$maxFixedArity = 0;
sorted_map.cljs$lang$applyTo = (function (arglist__42668){
var keyvals = cljs.core.seq(arglist__42668);
return sorted_map__delegate(keyvals);
});
sorted_map.cljs$core$IFn$_invoke$arity$variadic = sorted_map__delegate;
return sorted_map;
})()
;
/**
* keyval => key val
* Returns a new sorted map with supplied mappings, using the supplied comparator.
* @param {...*} var_args
*/
cljs.core.sorted_map_by = (function() { 
var sorted_map_by__delegate = function (comparator,keyvals){
var in$ = cljs.core.seq(keyvals);
var out = (new cljs.core.PersistentTreeMap(cljs.core.fn__GT_comparator(comparator),null,(0),null,(0)));
while(true){
if(in$){
var G__42669 = cljs.core.nnext(in$);
var G__42670 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(out,cljs.core.first(in$),cljs.core.second(in$));
in$ = G__42669;
out = G__42670;
continue;
} else {
return out;
}
break;
}
};
var sorted_map_by = function (comparator,var_args){
var keyvals = null;
if (arguments.length > 1) {
var G__42671__i = 0, G__42671__a = new Array(arguments.length -  1);
while (G__42671__i < G__42671__a.length) {G__42671__a[G__42671__i] = arguments[G__42671__i + 1]; ++G__42671__i;}
  keyvals = new cljs.core.IndexedSeq(G__42671__a,0);
} 
return sorted_map_by__delegate.call(this,comparator,keyvals);};
sorted_map_by.cljs$lang$maxFixedArity = 1;
sorted_map_by.cljs$lang$applyTo = (function (arglist__42672){
var comparator = cljs.core.first(arglist__42672);
var keyvals = cljs.core.rest(arglist__42672);
return sorted_map_by__delegate(comparator,keyvals);
});
sorted_map_by.cljs$core$IFn$_invoke$arity$variadic = sorted_map_by__delegate;
return sorted_map_by;
})()
;

/**
* @constructor
*/
cljs.core.KeySeq = (function (mseq,_meta){
this.mseq = mseq;
this._meta = _meta;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32374988;
})
cljs.core.KeySeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.KeySeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.KeySeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__._meta;
});

cljs.core.KeySeq.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var nseq = (((function (){var G__42673 = self__.mseq;
if(G__42673){
var bit__24953__auto__ = (G__42673.cljs$lang$protocol_mask$partition0$ & (128));
if((bit__24953__auto__) || (G__42673.cljs$core$INext$)){
return true;
} else {
if((!G__42673.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__42673);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__42673);
}
})())?self__.mseq.cljs$core$INext$_next$arity$1(null):cljs.core.next(self__.mseq));
if((nseq == null)){
return null;
} else {
return (new cljs.core.KeySeq(nseq,self__._meta));
}
});

cljs.core.KeySeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.hash_ordered_coll(coll__$1);
});

cljs.core.KeySeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.KeySeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__._meta);
});

cljs.core.KeySeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.KeySeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.KeySeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var me = self__.mseq.cljs$core$ISeq$_first$arity$1(null);
return me.cljs$core$IMapEntry$_key$arity$1(null);
});

cljs.core.KeySeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var nseq = (((function (){var G__42674 = self__.mseq;
if(G__42674){
var bit__24953__auto__ = (G__42674.cljs$lang$protocol_mask$partition0$ & (128));
if((bit__24953__auto__) || (G__42674.cljs$core$INext$)){
return true;
} else {
if((!G__42674.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__42674);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__42674);
}
})())?self__.mseq.cljs$core$INext$_next$arity$1(null):cljs.core.next(self__.mseq));
if(!((nseq == null))){
return (new cljs.core.KeySeq(nseq,self__._meta));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.KeySeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.KeySeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,new_meta){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.KeySeq(self__.mseq,new_meta));
});

cljs.core.KeySeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.KeySeq.cljs$lang$type = true;

cljs.core.KeySeq.cljs$lang$ctorStr = "cljs.core/KeySeq";

cljs.core.KeySeq.cljs$lang$ctorPrWriter = (function (this__24859__auto__,writer__24860__auto__,opt__24861__auto__){
return cljs.core._write(writer__24860__auto__,"cljs.core/KeySeq");
});

cljs.core.__GT_KeySeq = (function __GT_KeySeq(mseq,_meta){
return (new cljs.core.KeySeq(mseq,_meta));
});

(cljs.core.KeySeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__25250__auto__ = this;
return cljs.core.es6_iterator(this__25250__auto__);
}));
/**
* Returns a sequence of the map's keys.
*/
cljs.core.keys = (function keys(hash_map){
var temp__4126__auto__ = cljs.core.seq(hash_map);
if(temp__4126__auto__){
var mseq = temp__4126__auto__;
return (new cljs.core.KeySeq(mseq,null));
} else {
return null;
}
});
/**
* Returns the key of the map entry.
*/
cljs.core.key = (function key(map_entry){
return cljs.core._key(map_entry);
});

/**
* @constructor
*/
cljs.core.ValSeq = (function (mseq,_meta){
this.mseq = mseq;
this._meta = _meta;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32374988;
})
cljs.core.ValSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.ValSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.ValSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__._meta;
});

cljs.core.ValSeq.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var nseq = (((function (){var G__42675 = self__.mseq;
if(G__42675){
var bit__24953__auto__ = (G__42675.cljs$lang$protocol_mask$partition0$ & (128));
if((bit__24953__auto__) || (G__42675.cljs$core$INext$)){
return true;
} else {
if((!G__42675.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__42675);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__42675);
}
})())?self__.mseq.cljs$core$INext$_next$arity$1(null):cljs.core.next(self__.mseq));
if((nseq == null)){
return null;
} else {
return (new cljs.core.ValSeq(nseq,self__._meta));
}
});

cljs.core.ValSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.hash_ordered_coll(coll__$1);
});

cljs.core.ValSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.ValSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__._meta);
});

cljs.core.ValSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.ValSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.ValSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var me = self__.mseq.cljs$core$ISeq$_first$arity$1(null);
return me.cljs$core$IMapEntry$_val$arity$1(null);
});

cljs.core.ValSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var nseq = (((function (){var G__42676 = self__.mseq;
if(G__42676){
var bit__24953__auto__ = (G__42676.cljs$lang$protocol_mask$partition0$ & (128));
if((bit__24953__auto__) || (G__42676.cljs$core$INext$)){
return true;
} else {
if((!G__42676.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__42676);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__42676);
}
})())?self__.mseq.cljs$core$INext$_next$arity$1(null):cljs.core.next(self__.mseq));
if(!((nseq == null))){
return (new cljs.core.ValSeq(nseq,self__._meta));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.ValSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.ValSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,new_meta){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.ValSeq(self__.mseq,new_meta));
});

cljs.core.ValSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.ValSeq.cljs$lang$type = true;

cljs.core.ValSeq.cljs$lang$ctorStr = "cljs.core/ValSeq";

cljs.core.ValSeq.cljs$lang$ctorPrWriter = (function (this__24859__auto__,writer__24860__auto__,opt__24861__auto__){
return cljs.core._write(writer__24860__auto__,"cljs.core/ValSeq");
});

cljs.core.__GT_ValSeq = (function __GT_ValSeq(mseq,_meta){
return (new cljs.core.ValSeq(mseq,_meta));
});

(cljs.core.ValSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__25250__auto__ = this;
return cljs.core.es6_iterator(this__25250__auto__);
}));
/**
* Returns a sequence of the map's values.
*/
cljs.core.vals = (function vals(hash_map){
var temp__4126__auto__ = cljs.core.seq(hash_map);
if(temp__4126__auto__){
var mseq = temp__4126__auto__;
return (new cljs.core.ValSeq(mseq,null));
} else {
return null;
}
});
/**
* Returns the value in the map entry.
*/
cljs.core.val = (function val(map_entry){
return cljs.core._val(map_entry);
});
/**
* Returns a map that consists of the rest of the maps conj-ed onto
* the first.  If a key occurs in more than one map, the mapping from
* the latter (left-to-right) will be the mapping in the result.
* @param {...*} var_args
*/
cljs.core.merge = (function() { 
var merge__delegate = function (maps){
if(cljs.core.truth_(cljs.core.some(cljs.core.identity,maps))){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$2((function (p1__42677_SHARP_,p2__42678_SHARP_){
return cljs.core.conj.cljs$core$IFn$_invoke$arity$2((function (){var or__24272__auto__ = p1__42677_SHARP_;
if(cljs.core.truth_(or__24272__auto__)){
return or__24272__auto__;
} else {
return cljs.core.PersistentArrayMap.EMPTY;
}
})(),p2__42678_SHARP_);
}),maps);
} else {
return null;
}
};
var merge = function (var_args){
var maps = null;
if (arguments.length > 0) {
var G__42679__i = 0, G__42679__a = new Array(arguments.length -  0);
while (G__42679__i < G__42679__a.length) {G__42679__a[G__42679__i] = arguments[G__42679__i + 0]; ++G__42679__i;}
  maps = new cljs.core.IndexedSeq(G__42679__a,0);
} 
return merge__delegate.call(this,maps);};
merge.cljs$lang$maxFixedArity = 0;
merge.cljs$lang$applyTo = (function (arglist__42680){
var maps = cljs.core.seq(arglist__42680);
return merge__delegate(maps);
});
merge.cljs$core$IFn$_invoke$arity$variadic = merge__delegate;
return merge;
})()
;
/**
* Returns a map that consists of the rest of the maps conj-ed onto
* the first.  If a key occurs in more than one map, the mapping(s)
* from the latter (left-to-right) will be combined with the mapping in
* the result by calling (f val-in-result val-in-latter).
* @param {...*} var_args
*/
cljs.core.merge_with = (function() { 
var merge_with__delegate = function (f,maps){
if(cljs.core.truth_(cljs.core.some(cljs.core.identity,maps))){
var merge_entry = (function (m,e){
var k = cljs.core.first(e);
var v = cljs.core.second(e);
if(cljs.core.contains_QMARK_(m,k)){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__42683 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__42684 = v;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__42683,G__42684) : f.call(null,G__42683,G__42684));
})());
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,v);
}
});
var merge2 = ((function (merge_entry){
return (function (m1,m2){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(merge_entry,(function (){var or__24272__auto__ = m1;
if(cljs.core.truth_(or__24272__auto__)){
return or__24272__auto__;
} else {
return cljs.core.PersistentArrayMap.EMPTY;
}
})(),cljs.core.seq(m2));
});})(merge_entry))
;
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$2(merge2,maps);
} else {
return null;
}
};
var merge_with = function (f,var_args){
var maps = null;
if (arguments.length > 1) {
var G__42685__i = 0, G__42685__a = new Array(arguments.length -  1);
while (G__42685__i < G__42685__a.length) {G__42685__a[G__42685__i] = arguments[G__42685__i + 1]; ++G__42685__i;}
  maps = new cljs.core.IndexedSeq(G__42685__a,0);
} 
return merge_with__delegate.call(this,f,maps);};
merge_with.cljs$lang$maxFixedArity = 1;
merge_with.cljs$lang$applyTo = (function (arglist__42686){
var f = cljs.core.first(arglist__42686);
var maps = cljs.core.rest(arglist__42686);
return merge_with__delegate(f,maps);
});
merge_with.cljs$core$IFn$_invoke$arity$variadic = merge_with__delegate;
return merge_with;
})()
;
/**
* Returns a map containing only those entries in map whose key is in keys
*/
cljs.core.select_keys = (function select_keys(map,keyseq){
var ret = cljs.core.PersistentArrayMap.EMPTY;
var keys = cljs.core.seq(keyseq);
while(true){
if(keys){
var key = cljs.core.first(keys);
var entry = cljs.core.get.cljs$core$IFn$_invoke$arity$3(map,key,new cljs.core.Keyword("cljs.core","not-found","cljs.core/not-found",-1572889185));
var G__42687 = ((cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2(entry,new cljs.core.Keyword("cljs.core","not-found","cljs.core/not-found",-1572889185)))?cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(ret,key,entry):ret);
var G__42688 = cljs.core.next(keys);
ret = G__42687;
keys = G__42688;
continue;
} else {
return cljs.core.with_meta(ret,cljs.core.meta(map));
}
break;
}
});

/**
* @constructor
*/
cljs.core.PersistentHashSet = (function (meta,hash_map,__hash){
this.meta = meta;
this.hash_map = hash_map;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 15077647;
this.cljs$lang$protocol_mask$partition1$ = 8196;
})
cljs.core.PersistentHashSet.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentHashSet.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentHashSet.prototype.keys = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentHashSet.prototype.entries = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_set_entries_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentHashSet.prototype.values = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentHashSet.prototype.has = (function (k){
var self__ = this;
var coll = this;
return cljs.core.contains_QMARK_(coll,k);
});

cljs.core.PersistentHashSet.prototype.forEach = (function (f){
var self__ = this;
var coll = this;
var seq__42691 = cljs.core.seq(coll);
var chunk__42692 = null;
var count__42693 = (0);
var i__42694 = (0);
while(true){
if((i__42694 < count__42693)){
var vec__42695 = chunk__42692.cljs$core$IIndexed$_nth$arity$2(null,i__42694);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__42695,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__42695,(1),null);
var G__42696_42701 = v;
var G__42697_42702 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__42696_42701,G__42697_42702) : f.call(null,G__42696_42701,G__42697_42702));

var G__42703 = seq__42691;
var G__42704 = chunk__42692;
var G__42705 = count__42693;
var G__42706 = (i__42694 + (1));
seq__42691 = G__42703;
chunk__42692 = G__42704;
count__42693 = G__42705;
i__42694 = G__42706;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__42691);
if(temp__4126__auto__){
var seq__42691__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__42691__$1)){
var c__25059__auto__ = cljs.core.chunk_first(seq__42691__$1);
var G__42707 = cljs.core.chunk_rest(seq__42691__$1);
var G__42708 = c__25059__auto__;
var G__42709 = cljs.core.count(c__25059__auto__);
var G__42710 = (0);
seq__42691 = G__42707;
chunk__42692 = G__42708;
count__42693 = G__42709;
i__42694 = G__42710;
continue;
} else {
var vec__42698 = cljs.core.first(seq__42691__$1);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__42698,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__42698,(1),null);
var G__42699_42711 = v;
var G__42700_42712 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__42699_42711,G__42700_42712) : f.call(null,G__42699_42711,G__42700_42712));

var G__42713 = cljs.core.next(seq__42691__$1);
var G__42714 = null;
var G__42715 = (0);
var G__42716 = (0);
seq__42691 = G__42713;
chunk__42692 = G__42714;
count__42693 = G__42715;
i__42694 = G__42716;
continue;
}
} else {
return null;
}
}
break;
}
});

cljs.core.PersistentHashSet.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,v){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,v,null);
});

cljs.core.PersistentHashSet.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,v,not_found){
var self__ = this;
var coll__$1 = this;
if(cljs.core._contains_key_QMARK_(self__.hash_map,v)){
return v;
} else {
return not_found;
}
});

cljs.core.PersistentHashSet.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentHashSet.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.PersistentHashSet(self__.meta,self__.hash_map,self__.__hash));
});

cljs.core.PersistentHashSet.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._count(self__.hash_map);
});

cljs.core.PersistentHashSet.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__24693__auto__ = self__.__hash;
if(!((h__24693__auto__ == null))){
return h__24693__auto__;
} else {
var h__24693__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
self__.__hash = h__24693__auto____$1;

return h__24693__auto____$1;
}
});

cljs.core.PersistentHashSet.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return (cljs.core.set_QMARK_(other)) && ((cljs.core.count(coll__$1) === cljs.core.count(other))) && (cljs.core.every_QMARK_(((function (coll__$1){
return (function (p1__42689_SHARP_){
return cljs.core.contains_QMARK_(coll__$1,p1__42689_SHARP_);
});})(coll__$1))
,other));
});

cljs.core.PersistentHashSet.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.TransientHashSet(cljs.core._as_transient(self__.hash_map)));
});

cljs.core.PersistentHashSet.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.PersistentHashSet.EMPTY,self__.meta);
});

cljs.core.PersistentHashSet.prototype.cljs$core$ISet$_disjoin$arity$2 = (function (coll,v){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentHashSet(self__.meta,cljs.core._dissoc(self__.hash_map,v),null));
});

cljs.core.PersistentHashSet.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.keys(self__.hash_map);
});

cljs.core.PersistentHashSet.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentHashSet(meta__$1,self__.hash_map,self__.__hash));
});

cljs.core.PersistentHashSet.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentHashSet(self__.meta,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.hash_map,o,null),null));
});

cljs.core.PersistentHashSet.prototype.call = (function() {
var G__42717 = null;
var G__42717__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__42717__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__42717 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__42717__2.call(this,self__,k);
case 3:
return G__42717__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__42717.cljs$core$IFn$_invoke$arity$2 = G__42717__2;
G__42717.cljs$core$IFn$_invoke$arity$3 = G__42717__3;
return G__42717;
})()
;

cljs.core.PersistentHashSet.prototype.apply = (function (self__,args42690){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args42690)));
});

cljs.core.PersistentHashSet.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentHashSet.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.PersistentHashSet.cljs$lang$type = true;

cljs.core.PersistentHashSet.cljs$lang$ctorStr = "cljs.core/PersistentHashSet";

cljs.core.PersistentHashSet.cljs$lang$ctorPrWriter = (function (this__24859__auto__,writer__24860__auto__,opt__24861__auto__){
return cljs.core._write(writer__24860__auto__,"cljs.core/PersistentHashSet");
});

cljs.core.__GT_PersistentHashSet = (function __GT_PersistentHashSet(meta,hash_map,__hash){
return (new cljs.core.PersistentHashSet(meta,hash_map,__hash));
});

cljs.core.PersistentHashSet.EMPTY = (new cljs.core.PersistentHashSet(null,cljs.core.PersistentArrayMap.EMPTY,(0)));
cljs.core.PersistentHashSet.fromArray = (function (items,no_clone){
var len = items.length;
if((len <= cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD)){
var arr = ((no_clone)?items:cljs.core.aclone(items));
var i = (0);
var out = cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY);
while(true){
if((i < len)){
var G__42718 = (i + (1));
var G__42719 = cljs.core._assoc_BANG_(out,(items[i]),null);
i = G__42718;
out = G__42719;
continue;
} else {
return (new cljs.core.PersistentHashSet(null,cljs.core._persistent_BANG_(out),null));
}
break;
}
} else {
var i = (0);
var out = cljs.core.transient$(cljs.core.PersistentHashSet.EMPTY);
while(true){
if((i < len)){
var G__42720 = (i + (1));
var G__42721 = cljs.core._conj_BANG_(out,(items[i]));
i = G__42720;
out = G__42721;
continue;
} else {
return cljs.core._persistent_BANG_(out);
}
break;
}
}
});
(cljs.core.PersistentHashSet.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__25250__auto__ = this;
return cljs.core.es6_iterator(this__25250__auto__);
}));

/**
* @constructor
*/
cljs.core.TransientHashSet = (function (transient_map){
this.transient_map = transient_map;
this.cljs$lang$protocol_mask$partition0$ = 259;
this.cljs$lang$protocol_mask$partition1$ = 136;
})
cljs.core.TransientHashSet.prototype.call = (function() {
var G__42723 = null;
var G__42723__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var tcoll = self____$1;
if((cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map,k,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel)){
return null;
} else {
return k;
}
});
var G__42723__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var tcoll = self____$1;
if((cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map,k,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel)){
return not_found;
} else {
return k;
}
});
G__42723 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__42723__2.call(this,self__,k);
case 3:
return G__42723__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__42723.cljs$core$IFn$_invoke$arity$2 = G__42723__2;
G__42723.cljs$core$IFn$_invoke$arity$3 = G__42723__3;
return G__42723;
})()
;

cljs.core.TransientHashSet.prototype.apply = (function (self__,args42722){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args42722)));
});

cljs.core.TransientHashSet.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var tcoll = this;
if((cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map,k,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel)){
return null;
} else {
return k;
}
});

cljs.core.TransientHashSet.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var tcoll = this;
if((cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map,k,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel)){
return not_found;
} else {
return k;
}
});

cljs.core.TransientHashSet.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (tcoll,v){
var self__ = this;
var tcoll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(tcoll__$1,v,null);
});

cljs.core.TransientHashSet.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (tcoll,v,not_found){
var self__ = this;
var tcoll__$1 = this;
if((cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map,v,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel)){
return not_found;
} else {
return v;
}
});

cljs.core.TransientHashSet.prototype.cljs$core$ICounted$_count$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
return cljs.core.count(self__.transient_map);
});

cljs.core.TransientHashSet.prototype.cljs$core$ITransientSet$_disjoin_BANG_$arity$2 = (function (tcoll,v){
var self__ = this;
var tcoll__$1 = this;
self__.transient_map = cljs.core.dissoc_BANG_.cljs$core$IFn$_invoke$arity$2(self__.transient_map,v);

return tcoll__$1;
});

cljs.core.TransientHashSet.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = (function (tcoll,o){
var self__ = this;
var tcoll__$1 = this;
self__.transient_map = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(self__.transient_map,o,null);

return tcoll__$1;
});

cljs.core.TransientHashSet.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
return (new cljs.core.PersistentHashSet(null,cljs.core.persistent_BANG_(self__.transient_map),null));
});

cljs.core.TransientHashSet.cljs$lang$type = true;

cljs.core.TransientHashSet.cljs$lang$ctorStr = "cljs.core/TransientHashSet";

cljs.core.TransientHashSet.cljs$lang$ctorPrWriter = (function (this__24859__auto__,writer__24860__auto__,opt__24861__auto__){
return cljs.core._write(writer__24860__auto__,"cljs.core/TransientHashSet");
});

cljs.core.__GT_TransientHashSet = (function __GT_TransientHashSet(transient_map){
return (new cljs.core.TransientHashSet(transient_map));
});


/**
* @constructor
*/
cljs.core.PersistentTreeSet = (function (meta,tree_map,__hash){
this.meta = meta;
this.tree_map = tree_map;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 417730831;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.PersistentTreeSet.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentTreeSet.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentTreeSet.prototype.keys = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentTreeSet.prototype.entries = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_set_entries_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentTreeSet.prototype.values = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentTreeSet.prototype.has = (function (k){
var self__ = this;
var coll = this;
return cljs.core.contains_QMARK_(coll,k);
});

cljs.core.PersistentTreeSet.prototype.forEach = (function (f){
var self__ = this;
var coll = this;
var seq__42726 = cljs.core.seq(coll);
var chunk__42727 = null;
var count__42728 = (0);
var i__42729 = (0);
while(true){
if((i__42729 < count__42728)){
var vec__42730 = chunk__42727.cljs$core$IIndexed$_nth$arity$2(null,i__42729);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__42730,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__42730,(1),null);
var G__42731_42736 = v;
var G__42732_42737 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__42731_42736,G__42732_42737) : f.call(null,G__42731_42736,G__42732_42737));

var G__42738 = seq__42726;
var G__42739 = chunk__42727;
var G__42740 = count__42728;
var G__42741 = (i__42729 + (1));
seq__42726 = G__42738;
chunk__42727 = G__42739;
count__42728 = G__42740;
i__42729 = G__42741;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__42726);
if(temp__4126__auto__){
var seq__42726__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__42726__$1)){
var c__25059__auto__ = cljs.core.chunk_first(seq__42726__$1);
var G__42742 = cljs.core.chunk_rest(seq__42726__$1);
var G__42743 = c__25059__auto__;
var G__42744 = cljs.core.count(c__25059__auto__);
var G__42745 = (0);
seq__42726 = G__42742;
chunk__42727 = G__42743;
count__42728 = G__42744;
i__42729 = G__42745;
continue;
} else {
var vec__42733 = cljs.core.first(seq__42726__$1);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__42733,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__42733,(1),null);
var G__42734_42746 = v;
var G__42735_42747 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__42734_42746,G__42735_42747) : f.call(null,G__42734_42746,G__42735_42747));

var G__42748 = cljs.core.next(seq__42726__$1);
var G__42749 = null;
var G__42750 = (0);
var G__42751 = (0);
seq__42726 = G__42748;
chunk__42727 = G__42749;
count__42728 = G__42750;
i__42729 = G__42751;
continue;
}
} else {
return null;
}
}
break;
}
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,v){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,v,null);
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,v,not_found){
var self__ = this;
var coll__$1 = this;
var n = self__.tree_map.entry_at(v);
if(!((n == null))){
return n.key;
} else {
return not_found;
}
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.PersistentTreeSet(self__.meta,self__.tree_map,self__.__hash));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.count(self__.tree_map);
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IReversible$_rseq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((cljs.core.count(self__.tree_map) > (0))){
return cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.key,cljs.core.rseq(self__.tree_map));
} else {
return null;
}
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__24693__auto__ = self__.__hash;
if(!((h__24693__auto__ == null))){
return h__24693__auto__;
} else {
var h__24693__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
self__.__hash = h__24693__auto____$1;

return h__24693__auto____$1;
}
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return (cljs.core.set_QMARK_(other)) && ((cljs.core.count(coll__$1) === cljs.core.count(other))) && (cljs.core.every_QMARK_(((function (coll__$1){
return (function (p1__42724_SHARP_){
return cljs.core.contains_QMARK_(coll__$1,p1__42724_SHARP_);
});})(coll__$1))
,other));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeSet(self__.meta,cljs.core._empty(self__.tree_map),(0)));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ISet$_disjoin$arity$2 = (function (coll,v){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeSet(self__.meta,cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(self__.tree_map,v),null));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.keys(self__.tree_map);
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeSet(meta__$1,self__.tree_map,self__.__hash));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeSet(self__.meta,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.tree_map,o,null),null));
});

cljs.core.PersistentTreeSet.prototype.call = (function() {
var G__42752 = null;
var G__42752__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__42752__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__42752 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__42752__2.call(this,self__,k);
case 3:
return G__42752__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__42752.cljs$core$IFn$_invoke$arity$2 = G__42752__2;
G__42752.cljs$core$IFn$_invoke$arity$3 = G__42752__3;
return G__42752;
})()
;

cljs.core.PersistentTreeSet.prototype.apply = (function (self__,args42725){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args42725)));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_sorted_seq$arity$2 = (function (coll,ascending_QMARK_){
var self__ = this;
var coll__$1 = this;
return cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.key,cljs.core._sorted_seq(self__.tree_map,ascending_QMARK_));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_sorted_seq_from$arity$3 = (function (coll,k,ascending_QMARK_){
var self__ = this;
var coll__$1 = this;
return cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.key,cljs.core._sorted_seq_from(self__.tree_map,k,ascending_QMARK_));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_entry_key$arity$2 = (function (coll,entry){
var self__ = this;
var coll__$1 = this;
return entry;
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_comparator$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._comparator(self__.tree_map);
});

cljs.core.PersistentTreeSet.cljs$lang$type = true;

cljs.core.PersistentTreeSet.cljs$lang$ctorStr = "cljs.core/PersistentTreeSet";

cljs.core.PersistentTreeSet.cljs$lang$ctorPrWriter = (function (this__24859__auto__,writer__24860__auto__,opt__24861__auto__){
return cljs.core._write(writer__24860__auto__,"cljs.core/PersistentTreeSet");
});

cljs.core.__GT_PersistentTreeSet = (function __GT_PersistentTreeSet(meta,tree_map,__hash){
return (new cljs.core.PersistentTreeSet(meta,tree_map,__hash));
});

cljs.core.PersistentTreeSet.EMPTY = (new cljs.core.PersistentTreeSet(null,cljs.core.PersistentTreeMap.EMPTY,(0)));
(cljs.core.PersistentTreeSet.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__25250__auto__ = this;
return cljs.core.es6_iterator(this__25250__auto__);
}));
cljs.core.set_from_indexed_seq = (function set_from_indexed_seq(iseq){
var arr = iseq.arr;
var ret = (function (){var a__25153__auto__ = arr;
var i = (0);
var res = cljs.core._as_transient(cljs.core.PersistentHashSet.EMPTY);
while(true){
if((i < a__25153__auto__.length)){
var G__42753 = (i + (1));
var G__42754 = res.cljs$core$ITransientCollection$_conj_BANG_$arity$2(null,(arr[i]));
i = G__42753;
res = G__42754;
continue;
} else {
return res;
}
break;
}
})();
return ret.cljs$core$ITransientCollection$_persistent_BANG_$arity$1(null);
});
/**
* Returns a set of the distinct elements of coll.
*/
cljs.core.set = (function set(coll){
var in$ = cljs.core.seq(coll);
if((in$ == null)){
return cljs.core.PersistentHashSet.EMPTY;
} else {
if(((in$ instanceof cljs.core.IndexedSeq)) && ((in$.i === (0)))){
return cljs.core.set_from_indexed_seq(in$);
} else {
var in$__$1 = in$;
var out = cljs.core._as_transient(cljs.core.PersistentHashSet.EMPTY);
while(true){
if(!((in$__$1 == null))){
var G__42755 = in$__$1.cljs$core$INext$_next$arity$1(null);
var G__42756 = out.cljs$core$ITransientCollection$_conj_BANG_$arity$2(null,in$__$1.cljs$core$ISeq$_first$arity$1(null));
in$__$1 = G__42755;
out = G__42756;
continue;
} else {
return out.cljs$core$ITransientCollection$_persistent_BANG_$arity$1(null);
}
break;
}

}
}
});
/**
* @param {...*} var_args
*/
cljs.core.hash_set = (function() {
var hash_set = null;
var hash_set__0 = (function (){
return cljs.core.PersistentHashSet.EMPTY;
});
var hash_set__1 = (function() { 
var G__42757__delegate = function (keys){
return cljs.core.set(keys);
};
var G__42757 = function (var_args){
var keys = null;
if (arguments.length > 0) {
var G__42758__i = 0, G__42758__a = new Array(arguments.length -  0);
while (G__42758__i < G__42758__a.length) {G__42758__a[G__42758__i] = arguments[G__42758__i + 0]; ++G__42758__i;}
  keys = new cljs.core.IndexedSeq(G__42758__a,0);
} 
return G__42757__delegate.call(this,keys);};
G__42757.cljs$lang$maxFixedArity = 0;
G__42757.cljs$lang$applyTo = (function (arglist__42759){
var keys = cljs.core.seq(arglist__42759);
return G__42757__delegate(keys);
});
G__42757.cljs$core$IFn$_invoke$arity$variadic = G__42757__delegate;
return G__42757;
})()
;
hash_set = function(var_args){
var keys = var_args;
switch(arguments.length){
case 0:
return hash_set__0.call(this);
default:
var G__42760 = null;
if (arguments.length > 0) {
var G__42761__i = 0, G__42761__a = new Array(arguments.length -  0);
while (G__42761__i < G__42761__a.length) {G__42761__a[G__42761__i] = arguments[G__42761__i + 0]; ++G__42761__i;}
G__42760 = new cljs.core.IndexedSeq(G__42761__a,0);
}
return hash_set__1.cljs$core$IFn$_invoke$arity$variadic(G__42760);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
hash_set.cljs$lang$maxFixedArity = 0;
hash_set.cljs$lang$applyTo = hash_set__1.cljs$lang$applyTo;
hash_set.cljs$core$IFn$_invoke$arity$0 = hash_set__0;
hash_set.cljs$core$IFn$_invoke$arity$variadic = hash_set__1.cljs$core$IFn$_invoke$arity$variadic;
return hash_set;
})()
;
/**
* Returns a new sorted set with supplied keys.
* @param {...*} var_args
*/
cljs.core.sorted_set = (function() { 
var sorted_set__delegate = function (keys){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj,cljs.core.PersistentTreeSet.EMPTY,keys);
};
var sorted_set = function (var_args){
var keys = null;
if (arguments.length > 0) {
var G__42762__i = 0, G__42762__a = new Array(arguments.length -  0);
while (G__42762__i < G__42762__a.length) {G__42762__a[G__42762__i] = arguments[G__42762__i + 0]; ++G__42762__i;}
  keys = new cljs.core.IndexedSeq(G__42762__a,0);
} 
return sorted_set__delegate.call(this,keys);};
sorted_set.cljs$lang$maxFixedArity = 0;
sorted_set.cljs$lang$applyTo = (function (arglist__42763){
var keys = cljs.core.seq(arglist__42763);
return sorted_set__delegate(keys);
});
sorted_set.cljs$core$IFn$_invoke$arity$variadic = sorted_set__delegate;
return sorted_set;
})()
;
/**
* Returns a new sorted set with supplied keys, using the supplied comparator.
* @param {...*} var_args
*/
cljs.core.sorted_set_by = (function() { 
var sorted_set_by__delegate = function (comparator,keys){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj,(new cljs.core.PersistentTreeSet(null,cljs.core.sorted_map_by(comparator),(0))),keys);
};
var sorted_set_by = function (comparator,var_args){
var keys = null;
if (arguments.length > 1) {
var G__42764__i = 0, G__42764__a = new Array(arguments.length -  1);
while (G__42764__i < G__42764__a.length) {G__42764__a[G__42764__i] = arguments[G__42764__i + 1]; ++G__42764__i;}
  keys = new cljs.core.IndexedSeq(G__42764__a,0);
} 
return sorted_set_by__delegate.call(this,comparator,keys);};
sorted_set_by.cljs$lang$maxFixedArity = 1;
sorted_set_by.cljs$lang$applyTo = (function (arglist__42765){
var comparator = cljs.core.first(arglist__42765);
var keys = cljs.core.rest(arglist__42765);
return sorted_set_by__delegate(comparator,keys);
});
sorted_set_by.cljs$core$IFn$_invoke$arity$variadic = sorted_set_by__delegate;
return sorted_set_by;
})()
;
/**
* Given a map of replacement pairs and a vector/collection, returns a
* vector/seq with any elements = a key in smap replaced with the
* corresponding val in smap.  Returns a transducer when no collection
* is provided.
*/
cljs.core.replace = (function() {
var replace = null;
var replace__1 = (function (smap){
return cljs.core.map.cljs$core$IFn$_invoke$arity$1((function (p1__42766_SHARP_){
var temp__4124__auto__ = cljs.core.find(smap,p1__42766_SHARP_);
if(cljs.core.truth_(temp__4124__auto__)){
var e = temp__4124__auto__;
return cljs.core.val(e);
} else {
return p1__42766_SHARP_;
}
}));
});
var replace__2 = (function (smap,coll){
if(cljs.core.vector_QMARK_(coll)){
var n = cljs.core.count(coll);
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (n){
return (function (v,i){
var temp__4124__auto__ = cljs.core.find(smap,cljs.core.nth.cljs$core$IFn$_invoke$arity$2(v,i));
if(cljs.core.truth_(temp__4124__auto__)){
var e = temp__4124__auto__;
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(v,i,cljs.core.second(e));
} else {
return v;
}
});})(n))
,coll,cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,cljs.core.iterate(cljs.core.inc,(0))));
} else {
return cljs.core.map.cljs$core$IFn$_invoke$arity$2((function (p1__42767_SHARP_){
var temp__4124__auto__ = cljs.core.find(smap,p1__42767_SHARP_);
if(cljs.core.truth_(temp__4124__auto__)){
var e = temp__4124__auto__;
return cljs.core.second(e);
} else {
return p1__42767_SHARP_;
}
}),coll);
}
});
replace = function(smap,coll){
switch(arguments.length){
case 1:
return replace__1.call(this,smap);
case 2:
return replace__2.call(this,smap,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
replace.cljs$core$IFn$_invoke$arity$1 = replace__1;
replace.cljs$core$IFn$_invoke$arity$2 = replace__2;
return replace;
})()
;
/**
* Returns a lazy sequence of the elements of coll with duplicates removed
*/
cljs.core.distinct = (function distinct(coll){
var step = (function step(xs,seen){
return (new cljs.core.LazySeq(null,(function (){
return (function (p__42778,seen__$1){
while(true){
var vec__42779 = p__42778;
var f = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__42779,(0),null);
var xs__$1 = vec__42779;
var temp__4126__auto__ = cljs.core.seq(xs__$1);
if(temp__4126__auto__){
var s = temp__4126__auto__;
if(cljs.core.contains_QMARK_(seen__$1,f)){
var G__42780 = cljs.core.rest(s);
var G__42781 = seen__$1;
p__42778 = G__42780;
seen__$1 = G__42781;
continue;
} else {
return cljs.core.cons(f,step(cljs.core.rest(s),cljs.core.conj.cljs$core$IFn$_invoke$arity$2(seen__$1,f)));
}
} else {
return null;
}
break;
}
}).call(null,xs,seen);
}),null,null));
});
return step(coll,cljs.core.PersistentHashSet.EMPTY);
});
cljs.core.butlast = (function butlast(s){
var ret = cljs.core.PersistentVector.EMPTY;
var s__$1 = s;
while(true){
if(cljs.core.next(s__$1)){
var G__42782 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(ret,cljs.core.first(s__$1));
var G__42783 = cljs.core.next(s__$1);
ret = G__42782;
s__$1 = G__42783;
continue;
} else {
return cljs.core.seq(ret);
}
break;
}
});
/**
* Returns the name String of a string, symbol or keyword.
*/
cljs.core.name = (function name(x){
if((function (){var G__42785 = x;
if(G__42785){
var bit__24946__auto__ = (G__42785.cljs$lang$protocol_mask$partition1$ & (4096));
if((bit__24946__auto__) || (G__42785.cljs$core$INamed$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return x.cljs$core$INamed$_name$arity$1(null);
} else {
if(typeof x === 'string'){
return x;
} else {
throw (new Error([cljs.core.str("Doesn't support name: "),cljs.core.str(x)].join('')));
}
}
});
/**
* Returns a map with the keys mapped to the corresponding vals.
*/
cljs.core.zipmap = (function zipmap(keys,vals){
var map = cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY);
var ks = cljs.core.seq(keys);
var vs = cljs.core.seq(vals);
while(true){
if((ks) && (vs)){
var G__42786 = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(map,cljs.core.first(ks),cljs.core.first(vs));
var G__42787 = cljs.core.next(ks);
var G__42788 = cljs.core.next(vs);
map = G__42786;
ks = G__42787;
vs = G__42788;
continue;
} else {
return cljs.core.persistent_BANG_(map);
}
break;
}
});
/**
* Returns the x for which (k x), a number, is greatest.
* @param {...*} var_args
*/
cljs.core.max_key = (function() {
var max_key = null;
var max_key__2 = (function (k,x){
return x;
});
var max_key__3 = (function (k,x,y){
if(((function (){var G__42799 = x;
return (k.cljs$core$IFn$_invoke$arity$1 ? k.cljs$core$IFn$_invoke$arity$1(G__42799) : k.call(null,G__42799));
})() > (function (){var G__42800 = y;
return (k.cljs$core$IFn$_invoke$arity$1 ? k.cljs$core$IFn$_invoke$arity$1(G__42800) : k.call(null,G__42800));
})())){
return x;
} else {
return y;
}
});
var max_key__4 = (function() { 
var G__42801__delegate = function (k,x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (p1__42789_SHARP_,p2__42790_SHARP_){
return max_key.cljs$core$IFn$_invoke$arity$3(k,p1__42789_SHARP_,p2__42790_SHARP_);
}),max_key.cljs$core$IFn$_invoke$arity$3(k,x,y),more);
};
var G__42801 = function (k,x,y,var_args){
var more = null;
if (arguments.length > 3) {
var G__42802__i = 0, G__42802__a = new Array(arguments.length -  3);
while (G__42802__i < G__42802__a.length) {G__42802__a[G__42802__i] = arguments[G__42802__i + 3]; ++G__42802__i;}
  more = new cljs.core.IndexedSeq(G__42802__a,0);
} 
return G__42801__delegate.call(this,k,x,y,more);};
G__42801.cljs$lang$maxFixedArity = 3;
G__42801.cljs$lang$applyTo = (function (arglist__42803){
var k = cljs.core.first(arglist__42803);
arglist__42803 = cljs.core.next(arglist__42803);
var x = cljs.core.first(arglist__42803);
arglist__42803 = cljs.core.next(arglist__42803);
var y = cljs.core.first(arglist__42803);
var more = cljs.core.rest(arglist__42803);
return G__42801__delegate(k,x,y,more);
});
G__42801.cljs$core$IFn$_invoke$arity$variadic = G__42801__delegate;
return G__42801;
})()
;
max_key = function(k,x,y,var_args){
var more = var_args;
switch(arguments.length){
case 2:
return max_key__2.call(this,k,x);
case 3:
return max_key__3.call(this,k,x,y);
default:
var G__42804 = null;
if (arguments.length > 3) {
var G__42805__i = 0, G__42805__a = new Array(arguments.length -  3);
while (G__42805__i < G__42805__a.length) {G__42805__a[G__42805__i] = arguments[G__42805__i + 3]; ++G__42805__i;}
G__42804 = new cljs.core.IndexedSeq(G__42805__a,0);
}
return max_key__4.cljs$core$IFn$_invoke$arity$variadic(k,x,y, G__42804);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
max_key.cljs$lang$maxFixedArity = 3;
max_key.cljs$lang$applyTo = max_key__4.cljs$lang$applyTo;
max_key.cljs$core$IFn$_invoke$arity$2 = max_key__2;
max_key.cljs$core$IFn$_invoke$arity$3 = max_key__3;
max_key.cljs$core$IFn$_invoke$arity$variadic = max_key__4.cljs$core$IFn$_invoke$arity$variadic;
return max_key;
})()
;
/**
* Returns the x for which (k x), a number, is least.
* @param {...*} var_args
*/
cljs.core.min_key = (function() {
var min_key = null;
var min_key__2 = (function (k,x){
return x;
});
var min_key__3 = (function (k,x,y){
if(((function (){var G__42816 = x;
return (k.cljs$core$IFn$_invoke$arity$1 ? k.cljs$core$IFn$_invoke$arity$1(G__42816) : k.call(null,G__42816));
})() < (function (){var G__42817 = y;
return (k.cljs$core$IFn$_invoke$arity$1 ? k.cljs$core$IFn$_invoke$arity$1(G__42817) : k.call(null,G__42817));
})())){
return x;
} else {
return y;
}
});
var min_key__4 = (function() { 
var G__42818__delegate = function (k,x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (p1__42806_SHARP_,p2__42807_SHARP_){
return min_key.cljs$core$IFn$_invoke$arity$3(k,p1__42806_SHARP_,p2__42807_SHARP_);
}),min_key.cljs$core$IFn$_invoke$arity$3(k,x,y),more);
};
var G__42818 = function (k,x,y,var_args){
var more = null;
if (arguments.length > 3) {
var G__42819__i = 0, G__42819__a = new Array(arguments.length -  3);
while (G__42819__i < G__42819__a.length) {G__42819__a[G__42819__i] = arguments[G__42819__i + 3]; ++G__42819__i;}
  more = new cljs.core.IndexedSeq(G__42819__a,0);
} 
return G__42818__delegate.call(this,k,x,y,more);};
G__42818.cljs$lang$maxFixedArity = 3;
G__42818.cljs$lang$applyTo = (function (arglist__42820){
var k = cljs.core.first(arglist__42820);
arglist__42820 = cljs.core.next(arglist__42820);
var x = cljs.core.first(arglist__42820);
arglist__42820 = cljs.core.next(arglist__42820);
var y = cljs.core.first(arglist__42820);
var more = cljs.core.rest(arglist__42820);
return G__42818__delegate(k,x,y,more);
});
G__42818.cljs$core$IFn$_invoke$arity$variadic = G__42818__delegate;
return G__42818;
})()
;
min_key = function(k,x,y,var_args){
var more = var_args;
switch(arguments.length){
case 2:
return min_key__2.call(this,k,x);
case 3:
return min_key__3.call(this,k,x,y);
default:
var G__42821 = null;
if (arguments.length > 3) {
var G__42822__i = 0, G__42822__a = new Array(arguments.length -  3);
while (G__42822__i < G__42822__a.length) {G__42822__a[G__42822__i] = arguments[G__42822__i + 3]; ++G__42822__i;}
G__42821 = new cljs.core.IndexedSeq(G__42822__a,0);
}
return min_key__4.cljs$core$IFn$_invoke$arity$variadic(k,x,y, G__42821);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
min_key.cljs$lang$maxFixedArity = 3;
min_key.cljs$lang$applyTo = min_key__4.cljs$lang$applyTo;
min_key.cljs$core$IFn$_invoke$arity$2 = min_key__2;
min_key.cljs$core$IFn$_invoke$arity$3 = min_key__3;
min_key.cljs$core$IFn$_invoke$arity$variadic = min_key__4.cljs$core$IFn$_invoke$arity$variadic;
return min_key;
})()
;

/**
* @constructor
*/
cljs.core.ArrayList = (function (arr){
this.arr = arr;
})
cljs.core.ArrayList.prototype.add = (function (x){
var self__ = this;
var _ = this;
return self__.arr.push(x);
});

cljs.core.ArrayList.prototype.size = (function (){
var self__ = this;
var _ = this;
return self__.arr.length;
});

cljs.core.ArrayList.prototype.clear = (function (){
var self__ = this;
var _ = this;
return self__.arr = [];
});

cljs.core.ArrayList.prototype.isEmpty = (function (){
var self__ = this;
var _ = this;
return (self__.arr.length === (0));
});

cljs.core.ArrayList.prototype.toArray = (function (){
var self__ = this;
var _ = this;
return self__.arr;
});

cljs.core.ArrayList.cljs$lang$type = true;

cljs.core.ArrayList.cljs$lang$ctorStr = "cljs.core/ArrayList";

cljs.core.ArrayList.cljs$lang$ctorPrWriter = (function (this__24859__auto__,writer__24860__auto__,opt__24861__auto__){
return cljs.core._write(writer__24860__auto__,"cljs.core/ArrayList");
});

cljs.core.__GT_ArrayList = (function __GT_ArrayList(arr){
return (new cljs.core.ArrayList(arr));
});

cljs.core.array_list = (function array_list(){
return (new cljs.core.ArrayList([]));
});
/**
* Returns a lazy sequence of lists like partition, but may include
* partitions with fewer than n items at the end.  Returns a stateful
* transducer when no collection is provided.
*/
cljs.core.partition_all = (function() {
var partition_all = null;
var partition_all__1 = (function (n){
return (function (rf){
var a = cljs.core.array_list();
return ((function (a){
return (function() {
var G__42839 = null;
var G__42839__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__42839__1 = (function (result){
var result__$1 = (cljs.core.truth_(a.isEmpty())?result:(function (){var v = cljs.core.vec(a.toArray());
a.clear();

return cljs.core.unreduced((function (){var G__42834 = result;
var G__42835 = v;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__42834,G__42835) : rf.call(null,G__42834,G__42835));
})());
})());
var G__42836 = result__$1;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__42836) : rf.call(null,G__42836));
});
var G__42839__2 = (function (result,input){
a.add(input);

if((n === a.size())){
var v = cljs.core.vec(a.toArray());
a.clear();

var G__42837 = result;
var G__42838 = v;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__42837,G__42838) : rf.call(null,G__42837,G__42838));
} else {
return result;
}
});
G__42839 = function(result,input){
switch(arguments.length){
case 0:
return G__42839__0.call(this);
case 1:
return G__42839__1.call(this,result);
case 2:
return G__42839__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__42839.cljs$core$IFn$_invoke$arity$0 = G__42839__0;
G__42839.cljs$core$IFn$_invoke$arity$1 = G__42839__1;
G__42839.cljs$core$IFn$_invoke$arity$2 = G__42839__2;
return G__42839;
})()
;})(a))
});
});
var partition_all__2 = (function (n,coll){
return partition_all.cljs$core$IFn$_invoke$arity$3(n,n,coll);
});
var partition_all__3 = (function (n,step,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
return cljs.core.cons(cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,s),partition_all.cljs$core$IFn$_invoke$arity$3(n,step,cljs.core.drop.cljs$core$IFn$_invoke$arity$2(step,s)));
} else {
return null;
}
}),null,null));
});
partition_all = function(n,step,coll){
switch(arguments.length){
case 1:
return partition_all__1.call(this,n);
case 2:
return partition_all__2.call(this,n,step);
case 3:
return partition_all__3.call(this,n,step,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
partition_all.cljs$core$IFn$_invoke$arity$1 = partition_all__1;
partition_all.cljs$core$IFn$_invoke$arity$2 = partition_all__2;
partition_all.cljs$core$IFn$_invoke$arity$3 = partition_all__3;
return partition_all;
})()
;
/**
* Returns a lazy sequence of successive items from coll while
* (pred item) returns true. pred must be free of side-effects.
* Returns a transducer when no collection is provided.
*/
cljs.core.take_while = (function() {
var take_while = null;
var take_while__1 = (function (pred){
return (function (rf){
return (function() {
var G__42852 = null;
var G__42852__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__42852__1 = (function (result){
var G__42847 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__42847) : rf.call(null,G__42847));
});
var G__42852__2 = (function (result,input){
if(cljs.core.truth_((function (){var G__42848 = input;
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__42848) : pred.call(null,G__42848));
})())){
var G__42849 = result;
var G__42850 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__42849,G__42850) : rf.call(null,G__42849,G__42850));
} else {
return cljs.core.reduced(result);
}
});
G__42852 = function(result,input){
switch(arguments.length){
case 0:
return G__42852__0.call(this);
case 1:
return G__42852__1.call(this,result);
case 2:
return G__42852__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__42852.cljs$core$IFn$_invoke$arity$0 = G__42852__0;
G__42852.cljs$core$IFn$_invoke$arity$1 = G__42852__1;
G__42852.cljs$core$IFn$_invoke$arity$2 = G__42852__2;
return G__42852;
})()
});
});
var take_while__2 = (function (pred,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
if(cljs.core.truth_((function (){var G__42851 = cljs.core.first(s);
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__42851) : pred.call(null,G__42851));
})())){
return cljs.core.cons(cljs.core.first(s),take_while.cljs$core$IFn$_invoke$arity$2(pred,cljs.core.rest(s)));
} else {
return null;
}
} else {
return null;
}
}),null,null));
});
take_while = function(pred,coll){
switch(arguments.length){
case 1:
return take_while__1.call(this,pred);
case 2:
return take_while__2.call(this,pred,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
take_while.cljs$core$IFn$_invoke$arity$1 = take_while__1;
take_while.cljs$core$IFn$_invoke$arity$2 = take_while__2;
return take_while;
})()
;
cljs.core.mk_bound_fn = (function mk_bound_fn(sc,test,key){
return (function (e){
var comp = cljs.core._comparator(sc);
var G__42857 = (function (){var G__42859 = cljs.core._entry_key(sc,e);
var G__42860 = key;
return (comp.cljs$core$IFn$_invoke$arity$2 ? comp.cljs$core$IFn$_invoke$arity$2(G__42859,G__42860) : comp.call(null,G__42859,G__42860));
})();
var G__42858 = (0);
return (test.cljs$core$IFn$_invoke$arity$2 ? test.cljs$core$IFn$_invoke$arity$2(G__42857,G__42858) : test.call(null,G__42857,G__42858));
});
});
/**
* sc must be a sorted collection, test(s) one of <, <=, > or
* >=. Returns a seq of those entries with keys ek for
* which (test (.. sc comparator (compare ek key)) 0) is true
*/
cljs.core.subseq = (function() {
var subseq = null;
var subseq__3 = (function (sc,test,key){
var include = cljs.core.mk_bound_fn(sc,test,key);
if(cljs.core.truth_(cljs.core.PersistentHashSet.fromArray([cljs.core._GT_,cljs.core._GT__EQ_], true).call(null,test))){
var temp__4126__auto__ = cljs.core._sorted_seq_from(sc,key,true);
if(cljs.core.truth_(temp__4126__auto__)){
var vec__42864 = temp__4126__auto__;
var e = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__42864,(0),null);
var s = vec__42864;
if(cljs.core.truth_((function (){var G__42865 = e;
return (include.cljs$core$IFn$_invoke$arity$1 ? include.cljs$core$IFn$_invoke$arity$1(G__42865) : include.call(null,G__42865));
})())){
return s;
} else {
return cljs.core.next(s);
}
} else {
return null;
}
} else {
return cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(include,cljs.core._sorted_seq(sc,true));
}
});
var subseq__5 = (function (sc,start_test,start_key,end_test,end_key){
var temp__4126__auto__ = cljs.core._sorted_seq_from(sc,start_key,true);
if(cljs.core.truth_(temp__4126__auto__)){
var vec__42866 = temp__4126__auto__;
var e = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__42866,(0),null);
var s = vec__42866;
return cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(cljs.core.mk_bound_fn(sc,end_test,end_key),(cljs.core.truth_(cljs.core.mk_bound_fn(sc,start_test,start_key).call(null,e))?s:cljs.core.next(s)));
} else {
return null;
}
});
subseq = function(sc,start_test,start_key,end_test,end_key){
switch(arguments.length){
case 3:
return subseq__3.call(this,sc,start_test,start_key);
case 5:
return subseq__5.call(this,sc,start_test,start_key,end_test,end_key);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
subseq.cljs$core$IFn$_invoke$arity$3 = subseq__3;
subseq.cljs$core$IFn$_invoke$arity$5 = subseq__5;
return subseq;
})()
;
/**
* sc must be a sorted collection, test(s) one of <, <=, > or
* >=. Returns a reverse seq of those entries with keys ek for
* which (test (.. sc comparator (compare ek key)) 0) is true
*/
cljs.core.rsubseq = (function() {
var rsubseq = null;
var rsubseq__3 = (function (sc,test,key){
var include = cljs.core.mk_bound_fn(sc,test,key);
if(cljs.core.truth_(cljs.core.PersistentHashSet.fromArray([cljs.core._LT_,cljs.core._LT__EQ_], true).call(null,test))){
var temp__4126__auto__ = cljs.core._sorted_seq_from(sc,key,false);
if(cljs.core.truth_(temp__4126__auto__)){
var vec__42870 = temp__4126__auto__;
var e = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__42870,(0),null);
var s = vec__42870;
if(cljs.core.truth_((function (){var G__42871 = e;
return (include.cljs$core$IFn$_invoke$arity$1 ? include.cljs$core$IFn$_invoke$arity$1(G__42871) : include.call(null,G__42871));
})())){
return s;
} else {
return cljs.core.next(s);
}
} else {
return null;
}
} else {
return cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(include,cljs.core._sorted_seq(sc,false));
}
});
var rsubseq__5 = (function (sc,start_test,start_key,end_test,end_key){
var temp__4126__auto__ = cljs.core._sorted_seq_from(sc,end_key,false);
if(cljs.core.truth_(temp__4126__auto__)){
var vec__42872 = temp__4126__auto__;
var e = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__42872,(0),null);
var s = vec__42872;
return cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(cljs.core.mk_bound_fn(sc,start_test,start_key),(cljs.core.truth_(cljs.core.mk_bound_fn(sc,end_test,end_key).call(null,e))?s:cljs.core.next(s)));
} else {
return null;
}
});
rsubseq = function(sc,start_test,start_key,end_test,end_key){
switch(arguments.length){
case 3:
return rsubseq__3.call(this,sc,start_test,start_key);
case 5:
return rsubseq__5.call(this,sc,start_test,start_key,end_test,end_key);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
rsubseq.cljs$core$IFn$_invoke$arity$3 = rsubseq__3;
rsubseq.cljs$core$IFn$_invoke$arity$5 = rsubseq__5;
return rsubseq;
})()
;

/**
* @constructor
*/
cljs.core.RangeIterator = (function (i,end,step){
this.i = i;
this.end = end;
this.step = step;
})
cljs.core.RangeIterator.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
if((self__.step > (0))){
return (self__.i < self__.end);
} else {
return (self__.i > self__.end);
}
});

cljs.core.RangeIterator.prototype.next = (function (){
var self__ = this;
var _ = this;
var ret = self__.i;
self__.i = (self__.i + self__.step);

return ret;
});

cljs.core.RangeIterator.cljs$lang$type = true;

cljs.core.RangeIterator.cljs$lang$ctorStr = "cljs.core/RangeIterator";

cljs.core.RangeIterator.cljs$lang$ctorPrWriter = (function (this__24859__auto__,writer__24860__auto__,opt__24861__auto__){
return cljs.core._write(writer__24860__auto__,"cljs.core/RangeIterator");
});

cljs.core.__GT_RangeIterator = (function __GT_RangeIterator(i,end,step){
return (new cljs.core.RangeIterator(i,end,step));
});


/**
* @constructor
*/
cljs.core.Range = (function (meta,start,end,step,__hash){
this.meta = meta;
this.start = start;
this.end = end;
this.step = step;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 32375006;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.Range.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.Range.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.Range.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (rng,n){
var self__ = this;
var rng__$1 = this;
if((n < cljs.core._count(rng__$1))){
return (self__.start + (n * self__.step));
} else {
if(((self__.start > self__.end)) && ((self__.step === (0)))){
return self__.start;
} else {
throw (new Error("Index out of bounds"));
}
}
});

cljs.core.Range.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (rng,n,not_found){
var self__ = this;
var rng__$1 = this;
if((n < cljs.core._count(rng__$1))){
return (self__.start + (n * self__.step));
} else {
if(((self__.start > self__.end)) && ((self__.step === (0)))){
return self__.start;
} else {
return not_found;
}
}
});

cljs.core.Range.prototype.cljs$core$IIterable$ = true;

cljs.core.Range.prototype.cljs$core$IIterable$_iterator$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.RangeIterator(self__.start,self__.end,self__.step));
});

cljs.core.Range.prototype.cljs$core$IMeta$_meta$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
return self__.meta;
});

cljs.core.Range.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.Range(self__.meta,self__.start,self__.end,self__.step,self__.__hash));
});

cljs.core.Range.prototype.cljs$core$INext$_next$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
if((self__.step > (0))){
if(((self__.start + self__.step) < self__.end)){
return (new cljs.core.Range(self__.meta,(self__.start + self__.step),self__.end,self__.step,null));
} else {
return null;
}
} else {
if(((self__.start + self__.step) > self__.end)){
return (new cljs.core.Range(self__.meta,(self__.start + self__.step),self__.end,self__.step,null));
} else {
return null;
}
}
});

cljs.core.Range.prototype.cljs$core$ICounted$_count$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
if(cljs.core.not(cljs.core._seq(rng__$1))){
return (0);
} else {
var G__42873 = ((self__.end - self__.start) / self__.step);
return (Math.ceil.cljs$core$IFn$_invoke$arity$1 ? Math.ceil.cljs$core$IFn$_invoke$arity$1(G__42873) : Math.ceil.call(null,G__42873));
}
});

cljs.core.Range.prototype.cljs$core$IHash$_hash$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
var h__24693__auto__ = self__.__hash;
if(!((h__24693__auto__ == null))){
return h__24693__auto__;
} else {
var h__24693__auto____$1 = cljs.core.hash_ordered_coll(rng__$1);
self__.__hash = h__24693__auto____$1;

return h__24693__auto____$1;
}
});

cljs.core.Range.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (rng,other){
var self__ = this;
var rng__$1 = this;
return cljs.core.equiv_sequential(rng__$1,other);
});

cljs.core.Range.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.Range.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (rng,f){
var self__ = this;
var rng__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(rng__$1,f);
});

cljs.core.Range.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (rng,f,init){
var self__ = this;
var rng__$1 = this;
var i = self__.start;
var ret = init;
while(true){
if((((self__.step > (0)))?(i < self__.end):(i > self__.end))){
var ret__$1 = (function (){var G__42874 = ret;
var G__42875 = i;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__42874,G__42875) : f.call(null,G__42874,G__42875));
})();
if(cljs.core.reduced_QMARK_(ret__$1)){
var G__42876 = ret__$1;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__42876) : cljs.core.deref.call(null,G__42876));
} else {
var G__42877 = (i + self__.step);
var G__42878 = ret__$1;
i = G__42877;
ret = G__42878;
continue;
}
} else {
return ret;
}
break;
}
});

cljs.core.Range.prototype.cljs$core$ISeq$_first$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
if((cljs.core._seq(rng__$1) == null)){
return null;
} else {
return self__.start;
}
});

cljs.core.Range.prototype.cljs$core$ISeq$_rest$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
if(!((cljs.core._seq(rng__$1) == null))){
return (new cljs.core.Range(self__.meta,(self__.start + self__.step),self__.end,self__.step,null));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.Range.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
if((self__.step > (0))){
if((self__.start < self__.end)){
return rng__$1;
} else {
return null;
}
} else {
if((self__.start > self__.end)){
return rng__$1;
} else {
return null;
}
}
});

cljs.core.Range.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (rng,meta__$1){
var self__ = this;
var rng__$1 = this;
return (new cljs.core.Range(meta__$1,self__.start,self__.end,self__.step,self__.__hash));
});

cljs.core.Range.prototype.cljs$core$ICollection$_conj$arity$2 = (function (rng,o){
var self__ = this;
var rng__$1 = this;
return cljs.core.cons(o,rng__$1);
});

cljs.core.Range.cljs$lang$type = true;

cljs.core.Range.cljs$lang$ctorStr = "cljs.core/Range";

cljs.core.Range.cljs$lang$ctorPrWriter = (function (this__24859__auto__,writer__24860__auto__,opt__24861__auto__){
return cljs.core._write(writer__24860__auto__,"cljs.core/Range");
});

cljs.core.__GT_Range = (function __GT_Range(meta,start,end,step,__hash){
return (new cljs.core.Range(meta,start,end,step,__hash));
});

(cljs.core.Range.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__25250__auto__ = this;
return cljs.core.es6_iterator(this__25250__auto__);
}));
/**
* Returns a lazy seq of nums from start (inclusive) to end
* (exclusive), by step, where start defaults to 0, step to 1,
* and end to infinity.
*/
cljs.core.range = (function() {
var range = null;
var range__0 = (function (){
return range.cljs$core$IFn$_invoke$arity$3((0),Number.MAX_VALUE,(1));
});
var range__1 = (function (end){
return range.cljs$core$IFn$_invoke$arity$3((0),end,(1));
});
var range__2 = (function (start,end){
return range.cljs$core$IFn$_invoke$arity$3(start,end,(1));
});
var range__3 = (function (start,end,step){
return (new cljs.core.Range(null,start,end,step,null));
});
range = function(start,end,step){
switch(arguments.length){
case 0:
return range__0.call(this);
case 1:
return range__1.call(this,start);
case 2:
return range__2.call(this,start,end);
case 3:
return range__3.call(this,start,end,step);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
range.cljs$core$IFn$_invoke$arity$0 = range__0;
range.cljs$core$IFn$_invoke$arity$1 = range__1;
range.cljs$core$IFn$_invoke$arity$2 = range__2;
range.cljs$core$IFn$_invoke$arity$3 = range__3;
return range;
})()
;
/**
* Returns a lazy seq of every nth item in coll.  Returns a stateful
* transducer when no collection is provided.
*/
cljs.core.take_nth = (function() {
var take_nth = null;
var take_nth__1 = (function (n){
return (function (rf){
var ia = cljs.core.volatile_BANG_((-1));
return ((function (ia){
return (function() {
var G__42896 = null;
var G__42896__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__42896__1 = (function (result){
var G__42893 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__42893) : rf.call(null,G__42893));
});
var G__42896__2 = (function (result,input){
var i = ia.cljs$core$IVolatile$_vreset_BANG_$arity$2(null,(ia.cljs$core$IDeref$_deref$arity$1(null) + (1)));
if((cljs.core.rem(i,n) === (0))){
var G__42894 = result;
var G__42895 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__42894,G__42895) : rf.call(null,G__42894,G__42895));
} else {
return result;
}
});
G__42896 = function(result,input){
switch(arguments.length){
case 0:
return G__42896__0.call(this);
case 1:
return G__42896__1.call(this,result);
case 2:
return G__42896__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__42896.cljs$core$IFn$_invoke$arity$0 = G__42896__0;
G__42896.cljs$core$IFn$_invoke$arity$1 = G__42896__1;
G__42896.cljs$core$IFn$_invoke$arity$2 = G__42896__2;
return G__42896;
})()
;})(ia))
});
});
var take_nth__2 = (function (n,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
return cljs.core.cons(cljs.core.first(s),take_nth.cljs$core$IFn$_invoke$arity$2(n,cljs.core.drop.cljs$core$IFn$_invoke$arity$2(n,s)));
} else {
return null;
}
}),null,null));
});
take_nth = function(n,coll){
switch(arguments.length){
case 1:
return take_nth__1.call(this,n);
case 2:
return take_nth__2.call(this,n,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
take_nth.cljs$core$IFn$_invoke$arity$1 = take_nth__1;
take_nth.cljs$core$IFn$_invoke$arity$2 = take_nth__2;
return take_nth;
})()
;
/**
* Returns a vector of [(take-while pred coll) (drop-while pred coll)]
*/
cljs.core.split_with = (function split_with(pred,coll){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(pred,coll),cljs.core.drop_while.cljs$core$IFn$_invoke$arity$2(pred,coll)], null);
});
/**
* Applies f to each value in coll, splitting it each time f returns a
* new value.  Returns a lazy seq of partitions.  Returns a stateful
* transducer when no collection is provided.
*/
cljs.core.partition_by = (function() {
var partition_by = null;
var partition_by__1 = (function (f){
return (function (rf){
var a = cljs.core.array_list();
var pa = cljs.core.volatile_BANG_(new cljs.core.Keyword("cljs.core","none","cljs.core/none",926646439));
return ((function (a,pa){
return (function() {
var G__42918 = null;
var G__42918__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__42918__1 = (function (result){
var result__$1 = (cljs.core.truth_(a.isEmpty())?result:(function (){var v = cljs.core.vec(a.toArray());
a.clear();

return cljs.core.unreduced((function (){var G__42909 = result;
var G__42910 = v;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__42909,G__42910) : rf.call(null,G__42909,G__42910));
})());
})());
var G__42911 = result__$1;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__42911) : rf.call(null,G__42911));
});
var G__42918__2 = (function (result,input){
var pval = (function (){var G__42912 = pa;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__42912) : cljs.core.deref.call(null,G__42912));
})();
var val = (function (){var G__42913 = input;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__42913) : f.call(null,G__42913));
})();
cljs.core.vreset_BANG_(pa,val);

if((cljs.core.keyword_identical_QMARK_(pval,new cljs.core.Keyword("cljs.core","none","cljs.core/none",926646439))) || (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(val,pval))){
a.add(input);

return result;
} else {
var v = cljs.core.vec(a.toArray());
a.clear();

var ret = (function (){var G__42914 = result;
var G__42915 = v;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__42914,G__42915) : rf.call(null,G__42914,G__42915));
})();
if(cljs.core.reduced_QMARK_(ret)){
} else {
a.add(input);
}

return ret;
}
});
G__42918 = function(result,input){
switch(arguments.length){
case 0:
return G__42918__0.call(this);
case 1:
return G__42918__1.call(this,result);
case 2:
return G__42918__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__42918.cljs$core$IFn$_invoke$arity$0 = G__42918__0;
G__42918.cljs$core$IFn$_invoke$arity$1 = G__42918__1;
G__42918.cljs$core$IFn$_invoke$arity$2 = G__42918__2;
return G__42918;
})()
;})(a,pa))
});
});
var partition_by__2 = (function (f,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
var fst = cljs.core.first(s);
var fv = (function (){var G__42916 = fst;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__42916) : f.call(null,G__42916));
})();
var run = cljs.core.cons(fst,cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(((function (fst,fv,s,temp__4126__auto__){
return (function (p1__42897_SHARP_){
return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(fv,(function (){var G__42917 = p1__42897_SHARP_;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__42917) : f.call(null,G__42917));
})());
});})(fst,fv,s,temp__4126__auto__))
,cljs.core.next(s)));
return cljs.core.cons(run,partition_by.cljs$core$IFn$_invoke$arity$2(f,cljs.core.seq(cljs.core.drop.cljs$core$IFn$_invoke$arity$2(cljs.core.count(run),s))));
} else {
return null;
}
}),null,null));
});
partition_by = function(f,coll){
switch(arguments.length){
case 1:
return partition_by__1.call(this,f);
case 2:
return partition_by__2.call(this,f,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
partition_by.cljs$core$IFn$_invoke$arity$1 = partition_by__1;
partition_by.cljs$core$IFn$_invoke$arity$2 = partition_by__2;
return partition_by;
})()
;
/**
* Returns a map from distinct items in coll to the number of times
* they appear.
*/
cljs.core.frequencies = (function frequencies(coll){
return cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (counts,x){
return cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(counts,x,(cljs.core.get.cljs$core$IFn$_invoke$arity$3(counts,x,(0)) + (1)));
}),cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY),coll));
});
/**
* Returns a lazy seq of the intermediate values of the reduction (as
* per reduce) of coll by f, starting with init.
*/
cljs.core.reductions = (function() {
var reductions = null;
var reductions__2 = (function (f,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4124__auto__ = cljs.core.seq(coll);
if(temp__4124__auto__){
var s = temp__4124__auto__;
return reductions.cljs$core$IFn$_invoke$arity$3(f,cljs.core.first(s),cljs.core.rest(s));
} else {
return cljs.core._conj(cljs.core.List.EMPTY,(function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})());
}
}),null,null));
});
var reductions__3 = (function (f,init,coll){
return cljs.core.cons(init,(new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
return reductions.cljs$core$IFn$_invoke$arity$3(f,(function (){var G__42927 = init;
var G__42928 = cljs.core.first(s);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__42927,G__42928) : f.call(null,G__42927,G__42928));
})(),cljs.core.rest(s));
} else {
return null;
}
}),null,null)));
});
reductions = function(f,init,coll){
switch(arguments.length){
case 2:
return reductions__2.call(this,f,init);
case 3:
return reductions__3.call(this,f,init,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
reductions.cljs$core$IFn$_invoke$arity$2 = reductions__2;
reductions.cljs$core$IFn$_invoke$arity$3 = reductions__3;
return reductions;
})()
;
/**
* Takes a set of functions and returns a fn that is the juxtaposition
* of those fns.  The returned fn takes a variable number of args, and
* returns a vector containing the result of applying each fn to the
* args (left-to-right).
* ((juxt a b c) x) => [(a x) (b x) (c x)]
* @param {...*} var_args
*/
cljs.core.juxt = (function() {
var juxt = null;
var juxt__1 = (function (f){
return (function() {
var G__43023 = null;
var G__43023__0 = (function (){
return (new cljs.core.PersistentVector(null,1,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})()],null));
});
var G__43023__1 = (function (x){
return (new cljs.core.PersistentVector(null,1,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__42981 = x;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__42981) : f.call(null,G__42981));
})()],null));
});
var G__43023__2 = (function (x,y){
return (new cljs.core.PersistentVector(null,1,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__42982 = x;
var G__42983 = y;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__42982,G__42983) : f.call(null,G__42982,G__42983));
})()],null));
});
var G__43023__3 = (function (x,y,z){
return (new cljs.core.PersistentVector(null,1,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__42984 = x;
var G__42985 = y;
var G__42986 = z;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__42984,G__42985,G__42986) : f.call(null,G__42984,G__42985,G__42986));
})()],null));
});
var G__43023__4 = (function() { 
var G__43024__delegate = function (x,y,z,args){
return (new cljs.core.PersistentVector(null,1,(5),cljs.core.PersistentVector.EMPTY_NODE,[cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,x,y,z,args)],null));
};
var G__43024 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__43025__i = 0, G__43025__a = new Array(arguments.length -  3);
while (G__43025__i < G__43025__a.length) {G__43025__a[G__43025__i] = arguments[G__43025__i + 3]; ++G__43025__i;}
  args = new cljs.core.IndexedSeq(G__43025__a,0);
} 
return G__43024__delegate.call(this,x,y,z,args);};
G__43024.cljs$lang$maxFixedArity = 3;
G__43024.cljs$lang$applyTo = (function (arglist__43026){
var x = cljs.core.first(arglist__43026);
arglist__43026 = cljs.core.next(arglist__43026);
var y = cljs.core.first(arglist__43026);
arglist__43026 = cljs.core.next(arglist__43026);
var z = cljs.core.first(arglist__43026);
var args = cljs.core.rest(arglist__43026);
return G__43024__delegate(x,y,z,args);
});
G__43024.cljs$core$IFn$_invoke$arity$variadic = G__43024__delegate;
return G__43024;
})()
;
G__43023 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__43023__0.call(this);
case 1:
return G__43023__1.call(this,x);
case 2:
return G__43023__2.call(this,x,y);
case 3:
return G__43023__3.call(this,x,y,z);
default:
var G__43027 = null;
if (arguments.length > 3) {
var G__43028__i = 0, G__43028__a = new Array(arguments.length -  3);
while (G__43028__i < G__43028__a.length) {G__43028__a[G__43028__i] = arguments[G__43028__i + 3]; ++G__43028__i;}
G__43027 = new cljs.core.IndexedSeq(G__43028__a,0);
}
return G__43023__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__43027);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__43023.cljs$lang$maxFixedArity = 3;
G__43023.cljs$lang$applyTo = G__43023__4.cljs$lang$applyTo;
G__43023.cljs$core$IFn$_invoke$arity$0 = G__43023__0;
G__43023.cljs$core$IFn$_invoke$arity$1 = G__43023__1;
G__43023.cljs$core$IFn$_invoke$arity$2 = G__43023__2;
G__43023.cljs$core$IFn$_invoke$arity$3 = G__43023__3;
G__43023.cljs$core$IFn$_invoke$arity$variadic = G__43023__4.cljs$core$IFn$_invoke$arity$variadic;
return G__43023;
})()
});
var juxt__2 = (function (f,g){
return (function() {
var G__43029 = null;
var G__43029__0 = (function (){
return (new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})(),(function (){return (g.cljs$core$IFn$_invoke$arity$0 ? g.cljs$core$IFn$_invoke$arity$0() : g.call(null));
})()],null));
});
var G__43029__1 = (function (x){
return (new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__42987 = x;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__42987) : f.call(null,G__42987));
})(),(function (){var G__42988 = x;
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__42988) : g.call(null,G__42988));
})()],null));
});
var G__43029__2 = (function (x,y){
return (new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__42989 = x;
var G__42990 = y;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__42989,G__42990) : f.call(null,G__42989,G__42990));
})(),(function (){var G__42991 = x;
var G__42992 = y;
return (g.cljs$core$IFn$_invoke$arity$2 ? g.cljs$core$IFn$_invoke$arity$2(G__42991,G__42992) : g.call(null,G__42991,G__42992));
})()],null));
});
var G__43029__3 = (function (x,y,z){
return (new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__42993 = x;
var G__42994 = y;
var G__42995 = z;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__42993,G__42994,G__42995) : f.call(null,G__42993,G__42994,G__42995));
})(),(function (){var G__42996 = x;
var G__42997 = y;
var G__42998 = z;
return (g.cljs$core$IFn$_invoke$arity$3 ? g.cljs$core$IFn$_invoke$arity$3(G__42996,G__42997,G__42998) : g.call(null,G__42996,G__42997,G__42998));
})()],null));
});
var G__43029__4 = (function() { 
var G__43030__delegate = function (x,y,z,args){
return (new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,x,y,z,args),cljs.core.apply.cljs$core$IFn$_invoke$arity$5(g,x,y,z,args)],null));
};
var G__43030 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__43031__i = 0, G__43031__a = new Array(arguments.length -  3);
while (G__43031__i < G__43031__a.length) {G__43031__a[G__43031__i] = arguments[G__43031__i + 3]; ++G__43031__i;}
  args = new cljs.core.IndexedSeq(G__43031__a,0);
} 
return G__43030__delegate.call(this,x,y,z,args);};
G__43030.cljs$lang$maxFixedArity = 3;
G__43030.cljs$lang$applyTo = (function (arglist__43032){
var x = cljs.core.first(arglist__43032);
arglist__43032 = cljs.core.next(arglist__43032);
var y = cljs.core.first(arglist__43032);
arglist__43032 = cljs.core.next(arglist__43032);
var z = cljs.core.first(arglist__43032);
var args = cljs.core.rest(arglist__43032);
return G__43030__delegate(x,y,z,args);
});
G__43030.cljs$core$IFn$_invoke$arity$variadic = G__43030__delegate;
return G__43030;
})()
;
G__43029 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__43029__0.call(this);
case 1:
return G__43029__1.call(this,x);
case 2:
return G__43029__2.call(this,x,y);
case 3:
return G__43029__3.call(this,x,y,z);
default:
var G__43033 = null;
if (arguments.length > 3) {
var G__43034__i = 0, G__43034__a = new Array(arguments.length -  3);
while (G__43034__i < G__43034__a.length) {G__43034__a[G__43034__i] = arguments[G__43034__i + 3]; ++G__43034__i;}
G__43033 = new cljs.core.IndexedSeq(G__43034__a,0);
}
return G__43029__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__43033);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__43029.cljs$lang$maxFixedArity = 3;
G__43029.cljs$lang$applyTo = G__43029__4.cljs$lang$applyTo;
G__43029.cljs$core$IFn$_invoke$arity$0 = G__43029__0;
G__43029.cljs$core$IFn$_invoke$arity$1 = G__43029__1;
G__43029.cljs$core$IFn$_invoke$arity$2 = G__43029__2;
G__43029.cljs$core$IFn$_invoke$arity$3 = G__43029__3;
G__43029.cljs$core$IFn$_invoke$arity$variadic = G__43029__4.cljs$core$IFn$_invoke$arity$variadic;
return G__43029;
})()
});
var juxt__3 = (function (f,g,h){
return (function() {
var G__43035 = null;
var G__43035__0 = (function (){
return (new cljs.core.PersistentVector(null,3,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})(),(function (){return (g.cljs$core$IFn$_invoke$arity$0 ? g.cljs$core$IFn$_invoke$arity$0() : g.call(null));
})(),(function (){return (h.cljs$core$IFn$_invoke$arity$0 ? h.cljs$core$IFn$_invoke$arity$0() : h.call(null));
})()],null));
});
var G__43035__1 = (function (x){
return (new cljs.core.PersistentVector(null,3,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__42999 = x;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__42999) : f.call(null,G__42999));
})(),(function (){var G__43000 = x;
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__43000) : g.call(null,G__43000));
})(),(function (){var G__43001 = x;
return (h.cljs$core$IFn$_invoke$arity$1 ? h.cljs$core$IFn$_invoke$arity$1(G__43001) : h.call(null,G__43001));
})()],null));
});
var G__43035__2 = (function (x,y){
return (new cljs.core.PersistentVector(null,3,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__43002 = x;
var G__43003 = y;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__43002,G__43003) : f.call(null,G__43002,G__43003));
})(),(function (){var G__43004 = x;
var G__43005 = y;
return (g.cljs$core$IFn$_invoke$arity$2 ? g.cljs$core$IFn$_invoke$arity$2(G__43004,G__43005) : g.call(null,G__43004,G__43005));
})(),(function (){var G__43006 = x;
var G__43007 = y;
return (h.cljs$core$IFn$_invoke$arity$2 ? h.cljs$core$IFn$_invoke$arity$2(G__43006,G__43007) : h.call(null,G__43006,G__43007));
})()],null));
});
var G__43035__3 = (function (x,y,z){
return (new cljs.core.PersistentVector(null,3,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__43008 = x;
var G__43009 = y;
var G__43010 = z;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__43008,G__43009,G__43010) : f.call(null,G__43008,G__43009,G__43010));
})(),(function (){var G__43011 = x;
var G__43012 = y;
var G__43013 = z;
return (g.cljs$core$IFn$_invoke$arity$3 ? g.cljs$core$IFn$_invoke$arity$3(G__43011,G__43012,G__43013) : g.call(null,G__43011,G__43012,G__43013));
})(),(function (){var G__43014 = x;
var G__43015 = y;
var G__43016 = z;
return (h.cljs$core$IFn$_invoke$arity$3 ? h.cljs$core$IFn$_invoke$arity$3(G__43014,G__43015,G__43016) : h.call(null,G__43014,G__43015,G__43016));
})()],null));
});
var G__43035__4 = (function() { 
var G__43036__delegate = function (x,y,z,args){
return (new cljs.core.PersistentVector(null,3,(5),cljs.core.PersistentVector.EMPTY_NODE,[cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,x,y,z,args),cljs.core.apply.cljs$core$IFn$_invoke$arity$5(g,x,y,z,args),cljs.core.apply.cljs$core$IFn$_invoke$arity$5(h,x,y,z,args)],null));
};
var G__43036 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__43037__i = 0, G__43037__a = new Array(arguments.length -  3);
while (G__43037__i < G__43037__a.length) {G__43037__a[G__43037__i] = arguments[G__43037__i + 3]; ++G__43037__i;}
  args = new cljs.core.IndexedSeq(G__43037__a,0);
} 
return G__43036__delegate.call(this,x,y,z,args);};
G__43036.cljs$lang$maxFixedArity = 3;
G__43036.cljs$lang$applyTo = (function (arglist__43038){
var x = cljs.core.first(arglist__43038);
arglist__43038 = cljs.core.next(arglist__43038);
var y = cljs.core.first(arglist__43038);
arglist__43038 = cljs.core.next(arglist__43038);
var z = cljs.core.first(arglist__43038);
var args = cljs.core.rest(arglist__43038);
return G__43036__delegate(x,y,z,args);
});
G__43036.cljs$core$IFn$_invoke$arity$variadic = G__43036__delegate;
return G__43036;
})()
;
G__43035 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__43035__0.call(this);
case 1:
return G__43035__1.call(this,x);
case 2:
return G__43035__2.call(this,x,y);
case 3:
return G__43035__3.call(this,x,y,z);
default:
var G__43039 = null;
if (arguments.length > 3) {
var G__43040__i = 0, G__43040__a = new Array(arguments.length -  3);
while (G__43040__i < G__43040__a.length) {G__43040__a[G__43040__i] = arguments[G__43040__i + 3]; ++G__43040__i;}
G__43039 = new cljs.core.IndexedSeq(G__43040__a,0);
}
return G__43035__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__43039);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__43035.cljs$lang$maxFixedArity = 3;
G__43035.cljs$lang$applyTo = G__43035__4.cljs$lang$applyTo;
G__43035.cljs$core$IFn$_invoke$arity$0 = G__43035__0;
G__43035.cljs$core$IFn$_invoke$arity$1 = G__43035__1;
G__43035.cljs$core$IFn$_invoke$arity$2 = G__43035__2;
G__43035.cljs$core$IFn$_invoke$arity$3 = G__43035__3;
G__43035.cljs$core$IFn$_invoke$arity$variadic = G__43035__4.cljs$core$IFn$_invoke$arity$variadic;
return G__43035;
})()
});
var juxt__4 = (function() { 
var G__43041__delegate = function (f,g,h,fs){
var fs__$1 = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(f,g,h,fs);
return ((function (fs__$1){
return (function() {
var G__43042 = null;
var G__43042__0 = (function (){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (fs__$1){
return (function (p1__42929_SHARP_,p2__42930_SHARP_){
return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__42929_SHARP_,(function (){return (p2__42930_SHARP_.cljs$core$IFn$_invoke$arity$0 ? p2__42930_SHARP_.cljs$core$IFn$_invoke$arity$0() : p2__42930_SHARP_.call(null));
})());
});})(fs__$1))
,cljs.core.PersistentVector.EMPTY,fs__$1);
});
var G__43042__1 = (function (x){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (fs__$1){
return (function (p1__42931_SHARP_,p2__42932_SHARP_){
return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__42931_SHARP_,(function (){var G__43017 = x;
return (p2__42932_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p2__42932_SHARP_.cljs$core$IFn$_invoke$arity$1(G__43017) : p2__42932_SHARP_.call(null,G__43017));
})());
});})(fs__$1))
,cljs.core.PersistentVector.EMPTY,fs__$1);
});
var G__43042__2 = (function (x,y){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (fs__$1){
return (function (p1__42933_SHARP_,p2__42934_SHARP_){
return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__42933_SHARP_,(function (){var G__43018 = x;
var G__43019 = y;
return (p2__42934_SHARP_.cljs$core$IFn$_invoke$arity$2 ? p2__42934_SHARP_.cljs$core$IFn$_invoke$arity$2(G__43018,G__43019) : p2__42934_SHARP_.call(null,G__43018,G__43019));
})());
});})(fs__$1))
,cljs.core.PersistentVector.EMPTY,fs__$1);
});
var G__43042__3 = (function (x,y,z){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (fs__$1){
return (function (p1__42935_SHARP_,p2__42936_SHARP_){
return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__42935_SHARP_,(function (){var G__43020 = x;
var G__43021 = y;
var G__43022 = z;
return (p2__42936_SHARP_.cljs$core$IFn$_invoke$arity$3 ? p2__42936_SHARP_.cljs$core$IFn$_invoke$arity$3(G__43020,G__43021,G__43022) : p2__42936_SHARP_.call(null,G__43020,G__43021,G__43022));
})());
});})(fs__$1))
,cljs.core.PersistentVector.EMPTY,fs__$1);
});
var G__43042__4 = (function() { 
var G__43043__delegate = function (x,y,z,args){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (fs__$1){
return (function (p1__42937_SHARP_,p2__42938_SHARP_){
return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__42937_SHARP_,cljs.core.apply.cljs$core$IFn$_invoke$arity$5(p2__42938_SHARP_,x,y,z,args));
});})(fs__$1))
,cljs.core.PersistentVector.EMPTY,fs__$1);
};
var G__43043 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__43044__i = 0, G__43044__a = new Array(arguments.length -  3);
while (G__43044__i < G__43044__a.length) {G__43044__a[G__43044__i] = arguments[G__43044__i + 3]; ++G__43044__i;}
  args = new cljs.core.IndexedSeq(G__43044__a,0);
} 
return G__43043__delegate.call(this,x,y,z,args);};
G__43043.cljs$lang$maxFixedArity = 3;
G__43043.cljs$lang$applyTo = (function (arglist__43045){
var x = cljs.core.first(arglist__43045);
arglist__43045 = cljs.core.next(arglist__43045);
var y = cljs.core.first(arglist__43045);
arglist__43045 = cljs.core.next(arglist__43045);
var z = cljs.core.first(arglist__43045);
var args = cljs.core.rest(arglist__43045);
return G__43043__delegate(x,y,z,args);
});
G__43043.cljs$core$IFn$_invoke$arity$variadic = G__43043__delegate;
return G__43043;
})()
;
G__43042 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__43042__0.call(this);
case 1:
return G__43042__1.call(this,x);
case 2:
return G__43042__2.call(this,x,y);
case 3:
return G__43042__3.call(this,x,y,z);
default:
var G__43046 = null;
if (arguments.length > 3) {
var G__43047__i = 0, G__43047__a = new Array(arguments.length -  3);
while (G__43047__i < G__43047__a.length) {G__43047__a[G__43047__i] = arguments[G__43047__i + 3]; ++G__43047__i;}
G__43046 = new cljs.core.IndexedSeq(G__43047__a,0);
}
return G__43042__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__43046);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__43042.cljs$lang$maxFixedArity = 3;
G__43042.cljs$lang$applyTo = G__43042__4.cljs$lang$applyTo;
G__43042.cljs$core$IFn$_invoke$arity$0 = G__43042__0;
G__43042.cljs$core$IFn$_invoke$arity$1 = G__43042__1;
G__43042.cljs$core$IFn$_invoke$arity$2 = G__43042__2;
G__43042.cljs$core$IFn$_invoke$arity$3 = G__43042__3;
G__43042.cljs$core$IFn$_invoke$arity$variadic = G__43042__4.cljs$core$IFn$_invoke$arity$variadic;
return G__43042;
})()
;})(fs__$1))
};
var G__43041 = function (f,g,h,var_args){
var fs = null;
if (arguments.length > 3) {
var G__43048__i = 0, G__43048__a = new Array(arguments.length -  3);
while (G__43048__i < G__43048__a.length) {G__43048__a[G__43048__i] = arguments[G__43048__i + 3]; ++G__43048__i;}
  fs = new cljs.core.IndexedSeq(G__43048__a,0);
} 
return G__43041__delegate.call(this,f,g,h,fs);};
G__43041.cljs$lang$maxFixedArity = 3;
G__43041.cljs$lang$applyTo = (function (arglist__43049){
var f = cljs.core.first(arglist__43049);
arglist__43049 = cljs.core.next(arglist__43049);
var g = cljs.core.first(arglist__43049);
arglist__43049 = cljs.core.next(arglist__43049);
var h = cljs.core.first(arglist__43049);
var fs = cljs.core.rest(arglist__43049);
return G__43041__delegate(f,g,h,fs);
});
G__43041.cljs$core$IFn$_invoke$arity$variadic = G__43041__delegate;
return G__43041;
})()
;
juxt = function(f,g,h,var_args){
var fs = var_args;
switch(arguments.length){
case 1:
return juxt__1.call(this,f);
case 2:
return juxt__2.call(this,f,g);
case 3:
return juxt__3.call(this,f,g,h);
default:
var G__43050 = null;
if (arguments.length > 3) {
var G__43051__i = 0, G__43051__a = new Array(arguments.length -  3);
while (G__43051__i < G__43051__a.length) {G__43051__a[G__43051__i] = arguments[G__43051__i + 3]; ++G__43051__i;}
G__43050 = new cljs.core.IndexedSeq(G__43051__a,0);
}
return juxt__4.cljs$core$IFn$_invoke$arity$variadic(f,g,h, G__43050);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
juxt.cljs$lang$maxFixedArity = 3;
juxt.cljs$lang$applyTo = juxt__4.cljs$lang$applyTo;
juxt.cljs$core$IFn$_invoke$arity$1 = juxt__1;
juxt.cljs$core$IFn$_invoke$arity$2 = juxt__2;
juxt.cljs$core$IFn$_invoke$arity$3 = juxt__3;
juxt.cljs$core$IFn$_invoke$arity$variadic = juxt__4.cljs$core$IFn$_invoke$arity$variadic;
return juxt;
})()
;
/**
* When lazy sequences are produced via functions that have side
* effects, any effects other than those needed to produce the first
* element in the seq do not occur until the seq is consumed. dorun can
* be used to force any effects. Walks through the successive nexts of
* the seq, does not retain the head and returns nil.
*/
cljs.core.dorun = (function() {
var dorun = null;
var dorun__1 = (function (coll){
while(true){
if(cljs.core.seq(coll)){
var G__43052 = cljs.core.next(coll);
coll = G__43052;
continue;
} else {
return null;
}
break;
}
});
var dorun__2 = (function (n,coll){
while(true){
if((cljs.core.seq(coll)) && ((n > (0)))){
var G__43053 = (n - (1));
var G__43054 = cljs.core.next(coll);
n = G__43053;
coll = G__43054;
continue;
} else {
return null;
}
break;
}
});
dorun = function(n,coll){
switch(arguments.length){
case 1:
return dorun__1.call(this,n);
case 2:
return dorun__2.call(this,n,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
dorun.cljs$core$IFn$_invoke$arity$1 = dorun__1;
dorun.cljs$core$IFn$_invoke$arity$2 = dorun__2;
return dorun;
})()
;
/**
* When lazy sequences are produced via functions that have side
* effects, any effects other than those needed to produce the first
* element in the seq do not occur until the seq is consumed. doall can
* be used to force any effects. Walks through the successive nexts of
* the seq, retains the head and returns it, thus causing the entire
* seq to reside in memory at one time.
*/
cljs.core.doall = (function() {
var doall = null;
var doall__1 = (function (coll){
cljs.core.dorun.cljs$core$IFn$_invoke$arity$1(coll);

return coll;
});
var doall__2 = (function (n,coll){
cljs.core.dorun.cljs$core$IFn$_invoke$arity$2(n,coll);

return coll;
});
doall = function(n,coll){
switch(arguments.length){
case 1:
return doall__1.call(this,n);
case 2:
return doall__2.call(this,n,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
doall.cljs$core$IFn$_invoke$arity$1 = doall__1;
doall.cljs$core$IFn$_invoke$arity$2 = doall__2;
return doall;
})()
;
cljs.core.regexp_QMARK_ = (function regexp_QMARK_(o){
return (o instanceof RegExp);
});
/**
* Returns the result of (re-find re s) if re fully matches s.
*/
cljs.core.re_matches = (function re_matches(re,s){
if(typeof s === 'string'){
var matches = re.exec(s);
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.first(matches),s)){
if((cljs.core.count(matches) === (1))){
return cljs.core.first(matches);
} else {
return cljs.core.vec(matches);
}
} else {
return null;
}
} else {
throw (new TypeError("re-matches must match against a string."));
}
});
/**
* Returns the first regex match, if any, of s to re, using
* re.exec(s). Returns a vector, containing first the matching
* substring, then any capturing groups if the regular expression contains
* capturing groups.
*/
cljs.core.re_find = (function re_find(re,s){
if(typeof s === 'string'){
var matches = re.exec(s);
if((matches == null)){
return null;
} else {
if((cljs.core.count(matches) === (1))){
return cljs.core.first(matches);
} else {
return cljs.core.vec(matches);
}
}
} else {
throw (new TypeError("re-find must match against a string."));
}
});
/**
* Returns a lazy sequence of successive matches of re in s.
*/
cljs.core.re_seq = (function re_seq(re,s){
var match_data = cljs.core.re_find(re,s);
var match_idx = s.search(re);
var match_str = ((cljs.core.coll_QMARK_(match_data))?cljs.core.first(match_data):match_data);
var post_match = cljs.core.subs.cljs$core$IFn$_invoke$arity$2(s,(match_idx + cljs.core.count(match_str)));
if(cljs.core.truth_(match_data)){
return (new cljs.core.LazySeq(null,((function (match_data,match_idx,match_str,post_match){
return (function (){
return cljs.core.cons(match_data,((cljs.core.seq(post_match))?re_seq(re,post_match):null));
});})(match_data,match_idx,match_str,post_match))
,null,null));
} else {
return null;
}
});
/**
* Returns an instance of RegExp which has compiled the provided string.
*/
cljs.core.re_pattern = (function re_pattern(s){
if((s instanceof RegExp)){
return s;
} else {
var vec__43058 = cljs.core.re_find(/^(?:\(\?([idmsux]*)\))?(.*)/,s);
var _ = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__43058,(0),null);
var flags = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__43058,(1),null);
var pattern = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__43058,(2),null);
return (new RegExp(pattern,flags));
}
});
cljs.core.pr_sequential_writer = (function pr_sequential_writer(writer,print_one,begin,sep,end,opts,coll){
var _STAR_print_level_STAR_43066 = cljs.core._STAR_print_level_STAR_;
try{cljs.core._STAR_print_level_STAR_ = (((cljs.core._STAR_print_level_STAR_ == null))?null:(cljs.core._STAR_print_level_STAR_ - (1)));

if((!((cljs.core._STAR_print_level_STAR_ == null))) && ((cljs.core._STAR_print_level_STAR_ < (0)))){
return cljs.core._write(writer,"#");
} else {
cljs.core._write(writer,begin);

if(cljs.core.seq(coll)){
var G__43067_43073 = cljs.core.first(coll);
var G__43068_43074 = writer;
var G__43069_43075 = opts;
(print_one.cljs$core$IFn$_invoke$arity$3 ? print_one.cljs$core$IFn$_invoke$arity$3(G__43067_43073,G__43068_43074,G__43069_43075) : print_one.call(null,G__43067_43073,G__43068_43074,G__43069_43075));
} else {
}

var coll_43076__$1 = cljs.core.next(coll);
var n_43077 = (new cljs.core.Keyword(null,"print-length","print-length",1931866356).cljs$core$IFn$_invoke$arity$1(opts) - (1));
while(true){
if((coll_43076__$1) && (((n_43077 == null)) || (!((n_43077 === (0)))))){
cljs.core._write(writer,sep);

var G__43070_43078 = cljs.core.first(coll_43076__$1);
var G__43071_43079 = writer;
var G__43072_43080 = opts;
(print_one.cljs$core$IFn$_invoke$arity$3 ? print_one.cljs$core$IFn$_invoke$arity$3(G__43070_43078,G__43071_43079,G__43072_43080) : print_one.call(null,G__43070_43078,G__43071_43079,G__43072_43080));

var G__43081 = cljs.core.next(coll_43076__$1);
var G__43082 = (n_43077 - (1));
coll_43076__$1 = G__43081;
n_43077 = G__43082;
continue;
} else {
if((cljs.core.seq(coll_43076__$1)) && ((n_43077 === (0)))){
cljs.core._write(writer,sep);

cljs.core._write(writer,"...");
} else {
}
}
break;
}

return cljs.core._write(writer,end);
}
}finally {cljs.core._STAR_print_level_STAR_ = _STAR_print_level_STAR_43066;
}});
/**
* @param {...*} var_args
*/
cljs.core.write_all = (function() { 
var write_all__delegate = function (writer,ss){
var seq__43087 = cljs.core.seq(ss);
var chunk__43088 = null;
var count__43089 = (0);
var i__43090 = (0);
while(true){
if((i__43090 < count__43089)){
var s = chunk__43088.cljs$core$IIndexed$_nth$arity$2(null,i__43090);
cljs.core._write(writer,s);

var G__43091 = seq__43087;
var G__43092 = chunk__43088;
var G__43093 = count__43089;
var G__43094 = (i__43090 + (1));
seq__43087 = G__43091;
chunk__43088 = G__43092;
count__43089 = G__43093;
i__43090 = G__43094;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__43087);
if(temp__4126__auto__){
var seq__43087__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__43087__$1)){
var c__25059__auto__ = cljs.core.chunk_first(seq__43087__$1);
var G__43095 = cljs.core.chunk_rest(seq__43087__$1);
var G__43096 = c__25059__auto__;
var G__43097 = cljs.core.count(c__25059__auto__);
var G__43098 = (0);
seq__43087 = G__43095;
chunk__43088 = G__43096;
count__43089 = G__43097;
i__43090 = G__43098;
continue;
} else {
var s = cljs.core.first(seq__43087__$1);
cljs.core._write(writer,s);

var G__43099 = cljs.core.next(seq__43087__$1);
var G__43100 = null;
var G__43101 = (0);
var G__43102 = (0);
seq__43087 = G__43099;
chunk__43088 = G__43100;
count__43089 = G__43101;
i__43090 = G__43102;
continue;
}
} else {
return null;
}
}
break;
}
};
var write_all = function (writer,var_args){
var ss = null;
if (arguments.length > 1) {
var G__43103__i = 0, G__43103__a = new Array(arguments.length -  1);
while (G__43103__i < G__43103__a.length) {G__43103__a[G__43103__i] = arguments[G__43103__i + 1]; ++G__43103__i;}
  ss = new cljs.core.IndexedSeq(G__43103__a,0);
} 
return write_all__delegate.call(this,writer,ss);};
write_all.cljs$lang$maxFixedArity = 1;
write_all.cljs$lang$applyTo = (function (arglist__43104){
var writer = cljs.core.first(arglist__43104);
var ss = cljs.core.rest(arglist__43104);
return write_all__delegate(writer,ss);
});
write_all.cljs$core$IFn$_invoke$arity$variadic = write_all__delegate;
return write_all;
})()
;
cljs.core.string_print = (function string_print(x){
(cljs.core._STAR_print_fn_STAR_.cljs$core$IFn$_invoke$arity$1 ? cljs.core._STAR_print_fn_STAR_.cljs$core$IFn$_invoke$arity$1(x) : cljs.core._STAR_print_fn_STAR_.call(null,x));

return null;
});
cljs.core.flush = (function flush(){
return null;
});
cljs.core.char_escapes = (function (){var obj43106 = {"\"":"\\\"","\\":"\\\\","\b":"\\b","\f":"\\f","\n":"\\n","\r":"\\r","\t":"\\t"};
return obj43106;
})();
cljs.core.quote_string = (function quote_string(s){
return [cljs.core.str("\""),cljs.core.str(s.replace((function (){var G__43109 = "[\\\\\"\b\f\n\r\t]";
var G__43110 = "g";
return RegExp(G__43109,G__43110);
})(),(function (match){
return (cljs.core.char_escapes[match]);
}))),cljs.core.str("\"")].join('');
});
/**
* Prefer this to pr-seq, because it makes the printing function
* configurable, allowing efficient implementations such as appending
* to a StringBuffer.
*/
cljs.core.pr_writer = (function pr_writer(obj,writer,opts){
if((obj == null)){
return cljs.core._write(writer,"nil");
} else {
if((void 0 === obj)){
return cljs.core._write(writer,"#<undefined>");
} else {
if(cljs.core.truth_((function (){var and__24260__auto__ = cljs.core.get.cljs$core$IFn$_invoke$arity$2(opts,new cljs.core.Keyword(null,"meta","meta",1499536964));
if(cljs.core.truth_(and__24260__auto__)){
var and__24260__auto____$1 = (function (){var G__43124 = obj;
if(G__43124){
var bit__24953__auto__ = (G__43124.cljs$lang$protocol_mask$partition0$ & (131072));
if((bit__24953__auto__) || (G__43124.cljs$core$IMeta$)){
return true;
} else {
if((!G__43124.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IMeta,G__43124);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IMeta,G__43124);
}
})();
if(and__24260__auto____$1){
return cljs.core.meta(obj);
} else {
return and__24260__auto____$1;
}
} else {
return and__24260__auto__;
}
})())){
cljs.core._write(writer,"^");

pr_writer(cljs.core.meta(obj),writer,opts);

cljs.core._write(writer," ");
} else {
}

if((obj == null)){
return cljs.core._write(writer,"nil");
} else {
if(obj.cljs$lang$type){
return obj.cljs$lang$ctorPrWriter(obj,writer,opts);
} else {
if((function (){var G__43125 = obj;
if(G__43125){
var bit__24946__auto__ = (G__43125.cljs$lang$protocol_mask$partition0$ & (2147483648));
if((bit__24946__auto__) || (G__43125.cljs$core$IPrintWithWriter$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return obj.cljs$core$IPrintWithWriter$_pr_writer$arity$3(null,writer,opts);
} else {
if(((cljs.core.type(obj) === Boolean)) || (typeof obj === 'number')){
return cljs.core._write(writer,[cljs.core.str(obj)].join(''));
} else {
if(cljs.core.object_QMARK_(obj)){
cljs.core._write(writer,"#js ");

var G__43126 = cljs.core.map.cljs$core$IFn$_invoke$arity$2((function (k){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.keyword.cljs$core$IFn$_invoke$arity$1(k),(obj[k])], null);
}),cljs.core.js_keys(obj));
var G__43127 = pr_writer;
var G__43128 = writer;
var G__43129 = opts;
return (cljs.core.print_map.cljs$core$IFn$_invoke$arity$4 ? cljs.core.print_map.cljs$core$IFn$_invoke$arity$4(G__43126,G__43127,G__43128,G__43129) : cljs.core.print_map.call(null,G__43126,G__43127,G__43128,G__43129));
} else {
if(obj instanceof Array){
return cljs.core.pr_sequential_writer(writer,pr_writer,"#js ["," ","]",opts,obj);
} else {
if(cljs.core.truth_((function (){var G__43130 = obj;
return goog.isString(G__43130);
})())){
if(cljs.core.truth_(new cljs.core.Keyword(null,"readably","readably",1129599760).cljs$core$IFn$_invoke$arity$1(opts))){
return cljs.core._write(writer,cljs.core.quote_string(obj));
} else {
return cljs.core._write(writer,obj);
}
} else {
if(cljs.core.fn_QMARK_(obj)){
return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(writer,cljs.core.array_seq(["#<",[cljs.core.str(obj)].join(''),">"], 0));
} else {
if((obj instanceof Date)){
var normalize = (function (n,len){
var ns = [cljs.core.str(n)].join('');
while(true){
if((cljs.core.count(ns) < len)){
var G__43132 = [cljs.core.str("0"),cljs.core.str(ns)].join('');
ns = G__43132;
continue;
} else {
return ns;
}
break;
}
});
return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(writer,cljs.core.array_seq(["#inst \"",[cljs.core.str(obj.getUTCFullYear())].join(''),"-",normalize((obj.getUTCMonth() + (1)),(2)),"-",normalize(obj.getUTCDate(),(2)),"T",normalize(obj.getUTCHours(),(2)),":",normalize(obj.getUTCMinutes(),(2)),":",normalize(obj.getUTCSeconds(),(2)),".",normalize(obj.getUTCMilliseconds(),(3)),"-","00:00\""], 0));
} else {
if(cljs.core.regexp_QMARK_(obj)){
return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(writer,cljs.core.array_seq(["#\"",obj.source,"\""], 0));
} else {
if((function (){var G__43131 = obj;
if(G__43131){
var bit__24953__auto__ = (G__43131.cljs$lang$protocol_mask$partition0$ & (2147483648));
if((bit__24953__auto__) || (G__43131.cljs$core$IPrintWithWriter$)){
return true;
} else {
if((!G__43131.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IPrintWithWriter,G__43131);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IPrintWithWriter,G__43131);
}
})()){
return cljs.core._pr_writer(obj,writer,opts);
} else {
return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(writer,cljs.core.array_seq(["#<",[cljs.core.str(obj)].join(''),">"], 0));

}
}
}
}
}
}
}
}
}
}
}

}
}
});
cljs.core.pr_seq_writer = (function pr_seq_writer(objs,writer,opts){
cljs.core.pr_writer(cljs.core.first(objs),writer,opts);

var seq__43137 = cljs.core.seq(cljs.core.next(objs));
var chunk__43138 = null;
var count__43139 = (0);
var i__43140 = (0);
while(true){
if((i__43140 < count__43139)){
var obj = chunk__43138.cljs$core$IIndexed$_nth$arity$2(null,i__43140);
cljs.core._write(writer," ");

cljs.core.pr_writer(obj,writer,opts);

var G__43141 = seq__43137;
var G__43142 = chunk__43138;
var G__43143 = count__43139;
var G__43144 = (i__43140 + (1));
seq__43137 = G__43141;
chunk__43138 = G__43142;
count__43139 = G__43143;
i__43140 = G__43144;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__43137);
if(temp__4126__auto__){
var seq__43137__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__43137__$1)){
var c__25059__auto__ = cljs.core.chunk_first(seq__43137__$1);
var G__43145 = cljs.core.chunk_rest(seq__43137__$1);
var G__43146 = c__25059__auto__;
var G__43147 = cljs.core.count(c__25059__auto__);
var G__43148 = (0);
seq__43137 = G__43145;
chunk__43138 = G__43146;
count__43139 = G__43147;
i__43140 = G__43148;
continue;
} else {
var obj = cljs.core.first(seq__43137__$1);
cljs.core._write(writer," ");

cljs.core.pr_writer(obj,writer,opts);

var G__43149 = cljs.core.next(seq__43137__$1);
var G__43150 = null;
var G__43151 = (0);
var G__43152 = (0);
seq__43137 = G__43149;
chunk__43138 = G__43150;
count__43139 = G__43151;
i__43140 = G__43152;
continue;
}
} else {
return null;
}
}
break;
}
});
cljs.core.pr_sb_with_opts = (function pr_sb_with_opts(objs,opts){
var sb = (new goog.string.StringBuffer());
var writer = (new cljs.core.StringBufferWriter(sb));
cljs.core.pr_seq_writer(objs,writer,opts);

writer.cljs$core$IWriter$_flush$arity$1(null);

return sb;
});
/**
* Prints a sequence of objects to a string, observing all the
* options given in opts
*/
cljs.core.pr_str_with_opts = (function pr_str_with_opts(objs,opts){
if(cljs.core.empty_QMARK_(objs)){
return "";
} else {
return [cljs.core.str(cljs.core.pr_sb_with_opts(objs,opts))].join('');
}
});
/**
* Same as pr-str-with-opts followed by (newline)
*/
cljs.core.prn_str_with_opts = (function prn_str_with_opts(objs,opts){
if(cljs.core.empty_QMARK_(objs)){
return "\n";
} else {
var sb = cljs.core.pr_sb_with_opts(objs,opts);
sb.append("\n");

return [cljs.core.str(sb)].join('');
}
});
/**
* Prints a sequence of objects using string-print, observing all
* the options given in opts
*/
cljs.core.pr_with_opts = (function pr_with_opts(objs,opts){
return cljs.core.string_print(cljs.core.pr_str_with_opts(objs,opts));
});
cljs.core.newline = (function newline(opts){
cljs.core.string_print("\n");

if(cljs.core.truth_(cljs.core.get.cljs$core$IFn$_invoke$arity$2(opts,new cljs.core.Keyword(null,"flush-on-newline","flush-on-newline",-151457939)))){
return cljs.core.flush();
} else {
return null;
}
});
/**
* pr to a string, returning it. Fundamental entrypoint to IPrintWithWriter.
* @param {...*} var_args
*/
cljs.core.pr_str = (function() { 
var pr_str__delegate = function (objs){
return cljs.core.pr_str_with_opts(objs,cljs.core.pr_opts());
};
var pr_str = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__43153__i = 0, G__43153__a = new Array(arguments.length -  0);
while (G__43153__i < G__43153__a.length) {G__43153__a[G__43153__i] = arguments[G__43153__i + 0]; ++G__43153__i;}
  objs = new cljs.core.IndexedSeq(G__43153__a,0);
} 
return pr_str__delegate.call(this,objs);};
pr_str.cljs$lang$maxFixedArity = 0;
pr_str.cljs$lang$applyTo = (function (arglist__43154){
var objs = cljs.core.seq(arglist__43154);
return pr_str__delegate(objs);
});
pr_str.cljs$core$IFn$_invoke$arity$variadic = pr_str__delegate;
return pr_str;
})()
;
/**
* Same as pr-str followed by (newline)
* @param {...*} var_args
*/
cljs.core.prn_str = (function() { 
var prn_str__delegate = function (objs){
return cljs.core.prn_str_with_opts(objs,cljs.core.pr_opts());
};
var prn_str = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__43155__i = 0, G__43155__a = new Array(arguments.length -  0);
while (G__43155__i < G__43155__a.length) {G__43155__a[G__43155__i] = arguments[G__43155__i + 0]; ++G__43155__i;}
  objs = new cljs.core.IndexedSeq(G__43155__a,0);
} 
return prn_str__delegate.call(this,objs);};
prn_str.cljs$lang$maxFixedArity = 0;
prn_str.cljs$lang$applyTo = (function (arglist__43156){
var objs = cljs.core.seq(arglist__43156);
return prn_str__delegate(objs);
});
prn_str.cljs$core$IFn$_invoke$arity$variadic = prn_str__delegate;
return prn_str;
})()
;
/**
* Prints the object(s) using string-print.  Prints the
* object(s), separated by spaces if there is more than one.
* By default, pr and prn print in a way that objects can be
* read by the reader
* @param {...*} var_args
*/
cljs.core.pr = (function() { 
var pr__delegate = function (objs){
return cljs.core.pr_with_opts(objs,cljs.core.pr_opts());
};
var pr = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__43157__i = 0, G__43157__a = new Array(arguments.length -  0);
while (G__43157__i < G__43157__a.length) {G__43157__a[G__43157__i] = arguments[G__43157__i + 0]; ++G__43157__i;}
  objs = new cljs.core.IndexedSeq(G__43157__a,0);
} 
return pr__delegate.call(this,objs);};
pr.cljs$lang$maxFixedArity = 0;
pr.cljs$lang$applyTo = (function (arglist__43158){
var objs = cljs.core.seq(arglist__43158);
return pr__delegate(objs);
});
pr.cljs$core$IFn$_invoke$arity$variadic = pr__delegate;
return pr;
})()
;
/**
* Prints the object(s) using string-print.
* print and println produce output for human consumption.
* @param {...*} var_args
*/
cljs.core.print = (function() { 
var cljs_core_print__delegate = function (objs){
return cljs.core.pr_with_opts(objs,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.pr_opts(),new cljs.core.Keyword(null,"readably","readably",1129599760),false));
};
var cljs_core_print = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__43159__i = 0, G__43159__a = new Array(arguments.length -  0);
while (G__43159__i < G__43159__a.length) {G__43159__a[G__43159__i] = arguments[G__43159__i + 0]; ++G__43159__i;}
  objs = new cljs.core.IndexedSeq(G__43159__a,0);
} 
return cljs_core_print__delegate.call(this,objs);};
cljs_core_print.cljs$lang$maxFixedArity = 0;
cljs_core_print.cljs$lang$applyTo = (function (arglist__43160){
var objs = cljs.core.seq(arglist__43160);
return cljs_core_print__delegate(objs);
});
cljs_core_print.cljs$core$IFn$_invoke$arity$variadic = cljs_core_print__delegate;
return cljs_core_print;
})()
;
/**
* print to a string, returning it
* @param {...*} var_args
*/
cljs.core.print_str = (function() { 
var print_str__delegate = function (objs){
return cljs.core.pr_str_with_opts(objs,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.pr_opts(),new cljs.core.Keyword(null,"readably","readably",1129599760),false));
};
var print_str = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__43161__i = 0, G__43161__a = new Array(arguments.length -  0);
while (G__43161__i < G__43161__a.length) {G__43161__a[G__43161__i] = arguments[G__43161__i + 0]; ++G__43161__i;}
  objs = new cljs.core.IndexedSeq(G__43161__a,0);
} 
return print_str__delegate.call(this,objs);};
print_str.cljs$lang$maxFixedArity = 0;
print_str.cljs$lang$applyTo = (function (arglist__43162){
var objs = cljs.core.seq(arglist__43162);
return print_str__delegate(objs);
});
print_str.cljs$core$IFn$_invoke$arity$variadic = print_str__delegate;
return print_str;
})()
;
/**
* Same as print followed by (newline)
* @param {...*} var_args
*/
cljs.core.println = (function() { 
var println__delegate = function (objs){
cljs.core.pr_with_opts(objs,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.pr_opts(),new cljs.core.Keyword(null,"readably","readably",1129599760),false));

if(cljs.core.truth_(cljs.core._STAR_print_newline_STAR_)){
return cljs.core.newline(cljs.core.pr_opts());
} else {
return null;
}
};
var println = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__43163__i = 0, G__43163__a = new Array(arguments.length -  0);
while (G__43163__i < G__43163__a.length) {G__43163__a[G__43163__i] = arguments[G__43163__i + 0]; ++G__43163__i;}
  objs = new cljs.core.IndexedSeq(G__43163__a,0);
} 
return println__delegate.call(this,objs);};
println.cljs$lang$maxFixedArity = 0;
println.cljs$lang$applyTo = (function (arglist__43164){
var objs = cljs.core.seq(arglist__43164);
return println__delegate(objs);
});
println.cljs$core$IFn$_invoke$arity$variadic = println__delegate;
return println;
})()
;
/**
* println to a string, returning it
* @param {...*} var_args
*/
cljs.core.println_str = (function() { 
var println_str__delegate = function (objs){
return cljs.core.prn_str_with_opts(objs,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.pr_opts(),new cljs.core.Keyword(null,"readably","readably",1129599760),false));
};
var println_str = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__43165__i = 0, G__43165__a = new Array(arguments.length -  0);
while (G__43165__i < G__43165__a.length) {G__43165__a[G__43165__i] = arguments[G__43165__i + 0]; ++G__43165__i;}
  objs = new cljs.core.IndexedSeq(G__43165__a,0);
} 
return println_str__delegate.call(this,objs);};
println_str.cljs$lang$maxFixedArity = 0;
println_str.cljs$lang$applyTo = (function (arglist__43166){
var objs = cljs.core.seq(arglist__43166);
return println_str__delegate(objs);
});
println_str.cljs$core$IFn$_invoke$arity$variadic = println_str__delegate;
return println_str;
})()
;
/**
* Same as pr followed by (newline).
* @param {...*} var_args
*/
cljs.core.prn = (function() { 
var prn__delegate = function (objs){
cljs.core.pr_with_opts(objs,cljs.core.pr_opts());

if(cljs.core.truth_(cljs.core._STAR_print_newline_STAR_)){
return cljs.core.newline(cljs.core.pr_opts());
} else {
return null;
}
};
var prn = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__43167__i = 0, G__43167__a = new Array(arguments.length -  0);
while (G__43167__i < G__43167__a.length) {G__43167__a[G__43167__i] = arguments[G__43167__i + 0]; ++G__43167__i;}
  objs = new cljs.core.IndexedSeq(G__43167__a,0);
} 
return prn__delegate.call(this,objs);};
prn.cljs$lang$maxFixedArity = 0;
prn.cljs$lang$applyTo = (function (arglist__43168){
var objs = cljs.core.seq(arglist__43168);
return prn__delegate(objs);
});
prn.cljs$core$IFn$_invoke$arity$variadic = prn__delegate;
return prn;
})()
;
cljs.core.print_map = (function print_map(m,print_one,writer,opts){
return cljs.core.pr_sequential_writer(writer,(function (e,w,opts__$1){
var G__43175_43181 = cljs.core.key(e);
var G__43176_43182 = w;
var G__43177_43183 = opts__$1;
(print_one.cljs$core$IFn$_invoke$arity$3 ? print_one.cljs$core$IFn$_invoke$arity$3(G__43175_43181,G__43176_43182,G__43177_43183) : print_one.call(null,G__43175_43181,G__43176_43182,G__43177_43183));

cljs.core._write(w," ");

var G__43178 = cljs.core.val(e);
var G__43179 = w;
var G__43180 = opts__$1;
return (print_one.cljs$core$IFn$_invoke$arity$3 ? print_one.cljs$core$IFn$_invoke$arity$3(G__43178,G__43179,G__43180) : print_one.call(null,G__43178,G__43179,G__43180));
}),"{",", ","}",opts,cljs.core.seq(m));
});
cljs.core.Volatile.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.Volatile.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (a,writer,opts){
var a__$1 = this;
cljs.core._write(writer,"#<Volatile: ");

cljs.core.pr_writer(a__$1.state,writer,opts);

return cljs.core._write(writer,">");
});

cljs.core.Var.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.Var.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (a,writer,opts){
var a__$1 = this;
cljs.core._write(writer,"#'");

return cljs.core.pr_writer(a__$1.sym,writer,opts);
});

cljs.core.IndexedSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.IndexedSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.LazySeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.LazySeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.NodeSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.NodeSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.BlackNode.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.BlackNode.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"["," ","]",opts,coll__$1);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.ES6IteratorSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ES6IteratorSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentTreeSet.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"#{"," ","}",opts,coll__$1);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ChunkedSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.ObjMap.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ObjMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.print_map(coll__$1,cljs.core.pr_writer,writer,opts);
});

cljs.core.Cons.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.Cons.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.RSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.RSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.PersistentHashMap.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentHashMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.print_map(coll__$1,cljs.core.pr_writer,writer,opts);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ArrayNodeSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.Subvec.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.Subvec.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"["," ","]",opts,coll__$1);
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentTreeMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.print_map(coll__$1,cljs.core.pr_writer,writer,opts);
});

cljs.core.PersistentHashSet.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentHashSet.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"#{"," ","}",opts,coll__$1);
});

cljs.core.ChunkedCons.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ChunkedCons.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.Atom.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.Atom.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (a,writer,opts){
var a__$1 = this;
cljs.core._write(writer,"#<Atom: ");

cljs.core.pr_writer(a__$1.state,writer,opts);

return cljs.core._write(writer,">");
});

cljs.core.ValSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ValSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.RedNode.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.RedNode.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"["," ","]",opts,coll__$1);
});

cljs.core.PersistentVector.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentVector.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"["," ","]",opts,coll__$1);
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentQueueSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.EmptyList.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.EmptyList.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core._write(writer,"()");
});

cljs.core.LazyTransformer.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.LazyTransformer.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.PersistentQueue.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentQueue.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"#queue ["," ","]",opts,cljs.core.seq(coll__$1));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentArrayMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.print_map(coll__$1,cljs.core.pr_writer,writer,opts);
});

cljs.core.Range.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.Range.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.KeySeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.KeySeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.List.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.List.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});
cljs.core.PersistentVector.prototype.cljs$core$IComparable$ = true;

cljs.core.PersistentVector.prototype.cljs$core$IComparable$_compare$arity$2 = (function (x,y){
var x__$1 = this;
return cljs.core.compare_indexed.cljs$core$IFn$_invoke$arity$2(x__$1,y);
});

cljs.core.Subvec.prototype.cljs$core$IComparable$ = true;

cljs.core.Subvec.prototype.cljs$core$IComparable$_compare$arity$2 = (function (x,y){
var x__$1 = this;
return cljs.core.compare_indexed.cljs$core$IFn$_invoke$arity$2(x__$1,y);
});

cljs.core.Keyword.prototype.cljs$core$IComparable$ = true;

cljs.core.Keyword.prototype.cljs$core$IComparable$_compare$arity$2 = (function (x,y){
var x__$1 = this;
return cljs.core.compare_keywords(x__$1,y);
});

cljs.core.Symbol.prototype.cljs$core$IComparable$ = true;

cljs.core.Symbol.prototype.cljs$core$IComparable$_compare$arity$2 = (function (x,y){
var x__$1 = this;
return cljs.core.compare_symbols(x__$1,y);
});
/**
* Atomically sets the metadata for a namespace/var/ref/agent/atom to be:
* 
* (apply f its-current-meta args)
* 
* f must be free of side-effects
* @param {...*} var_args
*/
cljs.core.alter_meta_BANG_ = (function() { 
var alter_meta_BANG___delegate = function (iref,f,args){
return iref.meta = cljs.core.apply.cljs$core$IFn$_invoke$arity$3(f,iref.meta,args);
};
var alter_meta_BANG_ = function (iref,f,var_args){
var args = null;
if (arguments.length > 2) {
var G__43184__i = 0, G__43184__a = new Array(arguments.length -  2);
while (G__43184__i < G__43184__a.length) {G__43184__a[G__43184__i] = arguments[G__43184__i + 2]; ++G__43184__i;}
  args = new cljs.core.IndexedSeq(G__43184__a,0);
} 
return alter_meta_BANG___delegate.call(this,iref,f,args);};
alter_meta_BANG_.cljs$lang$maxFixedArity = 2;
alter_meta_BANG_.cljs$lang$applyTo = (function (arglist__43185){
var iref = cljs.core.first(arglist__43185);
arglist__43185 = cljs.core.next(arglist__43185);
var f = cljs.core.first(arglist__43185);
var args = cljs.core.rest(arglist__43185);
return alter_meta_BANG___delegate(iref,f,args);
});
alter_meta_BANG_.cljs$core$IFn$_invoke$arity$variadic = alter_meta_BANG___delegate;
return alter_meta_BANG_;
})()
;
/**
* Atomically resets the metadata for an atom
*/
cljs.core.reset_meta_BANG_ = (function reset_meta_BANG_(iref,m){
return iref.meta = m;
});
/**
* Alpha - subject to change.
* 
* Adds a watch function to an atom reference. The watch fn must be a
* fn of 4 args: a key, the reference, its old-state, its
* new-state. Whenever the reference's state might have been changed,
* any registered watches will have their functions called. The watch
* fn will be called synchronously. Note that an atom's state
* may have changed again prior to the fn call, so use old/new-state
* rather than derefing the reference. Keys must be unique per
* reference, and can be used to remove the watch with remove-watch,
* but are otherwise considered opaque by the watch mechanism.  Bear in
* mind that regardless of the result or action of the watch fns the
* atom's value will change.  Example:
* 
* (def a (atom 0))
* (add-watch a :inc (fn [k r o n] (assert (== 0 n))))
* (swap! a inc)
* ;; Assertion Error
* (deref a)
* ;=> 1
*/
cljs.core.add_watch = (function add_watch(iref,key,f){
cljs.core._add_watch(iref,key,f);

return iref;
});
/**
* Alpha - subject to change.
* 
* Removes a watch (set by add-watch) from a reference
*/
cljs.core.remove_watch = (function remove_watch(iref,key){
cljs.core._remove_watch(iref,key);

return iref;
});
cljs.core.gensym_counter = null;
/**
* Returns a new symbol with a unique name. If a prefix string is
* supplied, the name is prefix# where # is some unique number. If
* prefix is not supplied, the prefix is 'G__'.
*/
cljs.core.gensym = (function() {
var gensym = null;
var gensym__0 = (function (){
return gensym.cljs$core$IFn$_invoke$arity$1("G__");
});
var gensym__1 = (function (prefix_string){
if((cljs.core.gensym_counter == null)){
cljs.core.gensym_counter = (function (){var G__43188 = (0);
return (cljs.core.atom.cljs$core$IFn$_invoke$arity$1 ? cljs.core.atom.cljs$core$IFn$_invoke$arity$1(G__43188) : cljs.core.atom.call(null,G__43188));
})();
} else {
}

return cljs.core.symbol.cljs$core$IFn$_invoke$arity$1([cljs.core.str(prefix_string),cljs.core.str(cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(cljs.core.gensym_counter,cljs.core.inc))].join(''));
});
gensym = function(prefix_string){
switch(arguments.length){
case 0:
return gensym__0.call(this);
case 1:
return gensym__1.call(this,prefix_string);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
gensym.cljs$core$IFn$_invoke$arity$0 = gensym__0;
gensym.cljs$core$IFn$_invoke$arity$1 = gensym__1;
return gensym;
})()
;
cljs.core.fixture1 = (1);
cljs.core.fixture2 = (2);

/**
* @constructor
*/
cljs.core.Delay = (function (f,value){
this.f = f;
this.value = value;
this.cljs$lang$protocol_mask$partition1$ = 1;
this.cljs$lang$protocol_mask$partition0$ = 32768;
})
cljs.core.Delay.prototype.cljs$core$IPending$_realized_QMARK_$arity$1 = (function (d){
var self__ = this;
var d__$1 = this;
return cljs.core.not(self__.f);
});

cljs.core.Delay.prototype.cljs$core$IDeref$_deref$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
if(cljs.core.truth_(self__.f)){
self__.value = (function (){return (self__.f.cljs$core$IFn$_invoke$arity$0 ? self__.f.cljs$core$IFn$_invoke$arity$0() : self__.f.call(null));
})();

self__.f = null;
} else {
}

return self__.value;
});

cljs.core.Delay.cljs$lang$type = true;

cljs.core.Delay.cljs$lang$ctorStr = "cljs.core/Delay";

cljs.core.Delay.cljs$lang$ctorPrWriter = (function (this__24859__auto__,writer__24860__auto__,opt__24861__auto__){
return cljs.core._write(writer__24860__auto__,"cljs.core/Delay");
});

cljs.core.__GT_Delay = (function __GT_Delay(f,value){
return (new cljs.core.Delay(f,value));
});

/**
* returns true if x is a Delay created with delay
*/
cljs.core.delay_QMARK_ = (function delay_QMARK_(x){
return (x instanceof cljs.core.Delay);
});
/**
* If x is a Delay, returns the (possibly cached) value of its expression, else returns x
*/
cljs.core.force = (function force(x){
if(cljs.core.delay_QMARK_(x)){
var G__43190 = x;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__43190) : cljs.core.deref.call(null,G__43190));
} else {
return x;
}
});
/**
* Returns true if a value has been produced for a promise, delay, future or lazy sequence.
*/
cljs.core.realized_QMARK_ = (function realized_QMARK_(d){
return cljs.core._realized_QMARK_(d);
});
cljs.core.preserving_reduced = (function preserving_reduced(rf){
return (function (p1__43191_SHARP_,p2__43192_SHARP_){
var ret = (function (){var G__43195 = p1__43191_SHARP_;
var G__43196 = p2__43192_SHARP_;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__43195,G__43196) : rf.call(null,G__43195,G__43196));
})();
if(cljs.core.reduced_QMARK_(ret)){
return cljs.core.reduced(ret);
} else {
return ret;
}
});
});
/**
* A transducer which concatenates the contents of each input, which must be a
* collection, into the reduction.
*/
cljs.core.cat = (function cat(rf){
var rf1 = cljs.core.preserving_reduced(rf);
return ((function (rf1){
return (function() {
var G__43199 = null;
var G__43199__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__43199__1 = (function (result){
var G__43198 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__43198) : rf.call(null,G__43198));
});
var G__43199__2 = (function (result,input){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(rf1,result,input);
});
G__43199 = function(result,input){
switch(arguments.length){
case 0:
return G__43199__0.call(this);
case 1:
return G__43199__1.call(this,result);
case 2:
return G__43199__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__43199.cljs$core$IFn$_invoke$arity$0 = G__43199__0;
G__43199.cljs$core$IFn$_invoke$arity$1 = G__43199__1;
G__43199.cljs$core$IFn$_invoke$arity$2 = G__43199__2;
return G__43199;
})()
;})(rf1))
});
/**
* Returns a lazy sequence removing consecutive duplicates in coll.
* Returns a transducer when no collection is provided.
*/
cljs.core.dedupe = (function() {
var dedupe = null;
var dedupe__0 = (function (){
return (function (rf){
var pa = cljs.core.volatile_BANG_(new cljs.core.Keyword("cljs.core","none","cljs.core/none",926646439));
return ((function (pa){
return (function() {
var G__43208 = null;
var G__43208__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__43208__1 = (function (result){
var G__43204 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__43204) : rf.call(null,G__43204));
});
var G__43208__2 = (function (result,input){
var prior = (function (){var G__43205 = pa;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__43205) : cljs.core.deref.call(null,G__43205));
})();
cljs.core.vreset_BANG_(pa,input);

if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(prior,input)){
return result;
} else {
var G__43206 = result;
var G__43207 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__43206,G__43207) : rf.call(null,G__43206,G__43207));
}
});
G__43208 = function(result,input){
switch(arguments.length){
case 0:
return G__43208__0.call(this);
case 1:
return G__43208__1.call(this,result);
case 2:
return G__43208__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__43208.cljs$core$IFn$_invoke$arity$0 = G__43208__0;
G__43208.cljs$core$IFn$_invoke$arity$1 = G__43208__1;
G__43208.cljs$core$IFn$_invoke$arity$2 = G__43208__2;
return G__43208;
})()
;})(pa))
});
});
var dedupe__1 = (function (coll){
return cljs.core.sequence.cljs$core$IFn$_invoke$arity$2(dedupe.cljs$core$IFn$_invoke$arity$0(),coll);
});
dedupe = function(coll){
switch(arguments.length){
case 0:
return dedupe__0.call(this);
case 1:
return dedupe__1.call(this,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
dedupe.cljs$core$IFn$_invoke$arity$0 = dedupe__0;
dedupe.cljs$core$IFn$_invoke$arity$1 = dedupe__1;
return dedupe;
})()
;
/**
* Returns items from coll with random probability of prob (0.0 -
* 1.0).  Returns a transducer when no collection is provided.
*/
cljs.core.random_sample = (function() {
var random_sample = null;
var random_sample__1 = (function (prob){
return cljs.core.filter.cljs$core$IFn$_invoke$arity$1((function (_){
return ((function (){return (cljs.core.rand.cljs$core$IFn$_invoke$arity$0 ? cljs.core.rand.cljs$core$IFn$_invoke$arity$0() : cljs.core.rand.call(null));
})() < prob);
}));
});
var random_sample__2 = (function (prob,coll){
return cljs.core.filter.cljs$core$IFn$_invoke$arity$2((function (_){
return ((function (){return (cljs.core.rand.cljs$core$IFn$_invoke$arity$0 ? cljs.core.rand.cljs$core$IFn$_invoke$arity$0() : cljs.core.rand.call(null));
})() < prob);
}),coll);
});
random_sample = function(prob,coll){
switch(arguments.length){
case 1:
return random_sample__1.call(this,prob);
case 2:
return random_sample__2.call(this,prob,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
random_sample.cljs$core$IFn$_invoke$arity$1 = random_sample__1;
random_sample.cljs$core$IFn$_invoke$arity$2 = random_sample__2;
return random_sample;
})()
;

/**
* @constructor
*/
cljs.core.Eduction = (function (xform,coll){
this.xform = xform;
this.coll = coll;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 2173173760;
})
cljs.core.Eduction.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll__$1,writer,opts){
var self__ = this;
var coll__$2 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$2);
});

cljs.core.Eduction.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (_,f,init){
var self__ = this;
var ___$1 = this;
return cljs.core.transduce.cljs$core$IFn$_invoke$arity$4(self__.xform,f,init,self__.coll);
});

cljs.core.Eduction.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return cljs.core.seq(cljs.core.sequence.cljs$core$IFn$_invoke$arity$2(self__.xform,self__.coll));
});

cljs.core.Eduction.cljs$lang$type = true;

cljs.core.Eduction.cljs$lang$ctorStr = "cljs.core/Eduction";

cljs.core.Eduction.cljs$lang$ctorPrWriter = (function (this__24859__auto__,writer__24860__auto__,opt__24861__auto__){
return cljs.core._write(writer__24860__auto__,"cljs.core/Eduction");
});

cljs.core.__GT_Eduction = (function __GT_Eduction(xform,coll){
return (new cljs.core.Eduction(xform,coll));
});

(cljs.core.Eduction.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__25250__auto__ = this;
return cljs.core.es6_iterator(this__25250__auto__);
}));
/**
* Returns a reducible/iterable/seqable application of
* the transducer to the items in coll. Note that these applications
* will be performed every time iterator/seq/reduce is called.
*/
cljs.core.eduction = (function eduction(xform,coll){
return (new cljs.core.Eduction(xform,coll));
});
/**
* Runs the supplied procedure (via reduce), for purposes of side
* effects, on successive items in the collection. Returns nil
*/
cljs.core.run_BANG_ = (function run_BANG_(proc,coll){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (p1__43210_SHARP_,p2__43209_SHARP_){
var G__43212 = p2__43209_SHARP_;
return (proc.cljs$core$IFn$_invoke$arity$1 ? proc.cljs$core$IFn$_invoke$arity$1(G__43212) : proc.call(null,G__43212));
}),null,coll);
});

cljs.core.IEncodeJS = (function (){var obj43214 = {};
return obj43214;
})();

cljs.core._clj__GT_js = (function _clj__GT_js(x){
if((function (){var and__24260__auto__ = x;
if(and__24260__auto__){
return x.cljs$core$IEncodeJS$_clj__GT_js$arity$1;
} else {
return and__24260__auto__;
}
})()){
return x.cljs$core$IEncodeJS$_clj__GT_js$arity$1(x);
} else {
var x__24916__auto__ = (((x == null))?null:x);
return (function (){var or__24272__auto__ = (cljs.core._clj__GT_js[(function (){var G__43218 = x__24916__auto__;
return goog.typeOf(G__43218);
})()]);
if(or__24272__auto__){
return or__24272__auto__;
} else {
var or__24272__auto____$1 = (cljs.core._clj__GT_js["_"]);
if(or__24272__auto____$1){
return or__24272__auto____$1;
} else {
throw cljs.core.missing_protocol("IEncodeJS.-clj->js",x);
}
}
})().call(null,x);
}
});

cljs.core._key__GT_js = (function _key__GT_js(x){
if((function (){var and__24260__auto__ = x;
if(and__24260__auto__){
return x.cljs$core$IEncodeJS$_key__GT_js$arity$1;
} else {
return and__24260__auto__;
}
})()){
return x.cljs$core$IEncodeJS$_key__GT_js$arity$1(x);
} else {
var x__24916__auto__ = (((x == null))?null:x);
return (function (){var or__24272__auto__ = (cljs.core._key__GT_js[(function (){var G__43222 = x__24916__auto__;
return goog.typeOf(G__43222);
})()]);
if(or__24272__auto__){
return or__24272__auto__;
} else {
var or__24272__auto____$1 = (cljs.core._key__GT_js["_"]);
if(or__24272__auto____$1){
return or__24272__auto____$1;
} else {
throw cljs.core.missing_protocol("IEncodeJS.-key->js",x);
}
}
})().call(null,x);
}
});

cljs.core.key__GT_js = (function key__GT_js(k){
if((function (){var G__43225 = k;
if(G__43225){
var bit__24953__auto__ = null;
if(cljs.core.truth_((function (){var or__24272__auto__ = bit__24953__auto__;
if(cljs.core.truth_(or__24272__auto__)){
return or__24272__auto__;
} else {
return G__43225.cljs$core$IEncodeJS$;
}
})())){
return true;
} else {
if((!G__43225.cljs$lang$protocol_mask$partition$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeJS,G__43225);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeJS,G__43225);
}
})()){
return cljs.core._clj__GT_js(k);
} else {
if((typeof k === 'string') || (typeof k === 'number') || ((k instanceof cljs.core.Keyword)) || ((k instanceof cljs.core.Symbol))){
var G__43226 = k;
return (cljs.core.clj__GT_js.cljs$core$IFn$_invoke$arity$1 ? cljs.core.clj__GT_js.cljs$core$IFn$_invoke$arity$1(G__43226) : cljs.core.clj__GT_js.call(null,G__43226));
} else {
return cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([k], 0));
}
}
});
/**
* Recursively transforms ClojureScript values to JavaScript.
* sets/vectors/lists become Arrays, Keywords and Symbol become Strings,
* Maps become Objects. Arbitrary keys are encoded to by key->js.
*/
cljs.core.clj__GT_js = (function clj__GT_js(x){
if((x == null)){
return null;
} else {
if((function (){var G__43242 = x;
if(G__43242){
var bit__24953__auto__ = null;
if(cljs.core.truth_((function (){var or__24272__auto__ = bit__24953__auto__;
if(cljs.core.truth_(or__24272__auto__)){
return or__24272__auto__;
} else {
return G__43242.cljs$core$IEncodeJS$;
}
})())){
return true;
} else {
if((!G__43242.cljs$lang$protocol_mask$partition$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeJS,G__43242);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeJS,G__43242);
}
})()){
return cljs.core._clj__GT_js(x);
} else {
if((x instanceof cljs.core.Keyword)){
return cljs.core.name(x);
} else {
if((x instanceof cljs.core.Symbol)){
return [cljs.core.str(x)].join('');
} else {
if(cljs.core.map_QMARK_(x)){
var m = (function (){var obj43244 = {};
return obj43244;
})();
var seq__43245_43255 = cljs.core.seq(x);
var chunk__43246_43256 = null;
var count__43247_43257 = (0);
var i__43248_43258 = (0);
while(true){
if((i__43248_43258 < count__43247_43257)){
var vec__43249_43259 = chunk__43246_43256.cljs$core$IIndexed$_nth$arity$2(null,i__43248_43258);
var k_43260 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__43249_43259,(0),null);
var v_43261 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__43249_43259,(1),null);
(m[cljs.core.key__GT_js(k_43260)] = clj__GT_js(v_43261));

var G__43262 = seq__43245_43255;
var G__43263 = chunk__43246_43256;
var G__43264 = count__43247_43257;
var G__43265 = (i__43248_43258 + (1));
seq__43245_43255 = G__43262;
chunk__43246_43256 = G__43263;
count__43247_43257 = G__43264;
i__43248_43258 = G__43265;
continue;
} else {
var temp__4126__auto___43266 = cljs.core.seq(seq__43245_43255);
if(temp__4126__auto___43266){
var seq__43245_43267__$1 = temp__4126__auto___43266;
if(cljs.core.chunked_seq_QMARK_(seq__43245_43267__$1)){
var c__25059__auto___43268 = cljs.core.chunk_first(seq__43245_43267__$1);
var G__43269 = cljs.core.chunk_rest(seq__43245_43267__$1);
var G__43270 = c__25059__auto___43268;
var G__43271 = cljs.core.count(c__25059__auto___43268);
var G__43272 = (0);
seq__43245_43255 = G__43269;
chunk__43246_43256 = G__43270;
count__43247_43257 = G__43271;
i__43248_43258 = G__43272;
continue;
} else {
var vec__43250_43273 = cljs.core.first(seq__43245_43267__$1);
var k_43274 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__43250_43273,(0),null);
var v_43275 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__43250_43273,(1),null);
(m[cljs.core.key__GT_js(k_43274)] = clj__GT_js(v_43275));

var G__43276 = cljs.core.next(seq__43245_43267__$1);
var G__43277 = null;
var G__43278 = (0);
var G__43279 = (0);
seq__43245_43255 = G__43276;
chunk__43246_43256 = G__43277;
count__43247_43257 = G__43278;
i__43248_43258 = G__43279;
continue;
}
} else {
}
}
break;
}

return m;
} else {
if(cljs.core.coll_QMARK_(x)){
var arr = [];
var seq__43251_43280 = cljs.core.seq(cljs.core.map.cljs$core$IFn$_invoke$arity$2(clj__GT_js,x));
var chunk__43252_43281 = null;
var count__43253_43282 = (0);
var i__43254_43283 = (0);
while(true){
if((i__43254_43283 < count__43253_43282)){
var x_43284__$1 = chunk__43252_43281.cljs$core$IIndexed$_nth$arity$2(null,i__43254_43283);
arr.push(x_43284__$1);

var G__43285 = seq__43251_43280;
var G__43286 = chunk__43252_43281;
var G__43287 = count__43253_43282;
var G__43288 = (i__43254_43283 + (1));
seq__43251_43280 = G__43285;
chunk__43252_43281 = G__43286;
count__43253_43282 = G__43287;
i__43254_43283 = G__43288;
continue;
} else {
var temp__4126__auto___43289 = cljs.core.seq(seq__43251_43280);
if(temp__4126__auto___43289){
var seq__43251_43290__$1 = temp__4126__auto___43289;
if(cljs.core.chunked_seq_QMARK_(seq__43251_43290__$1)){
var c__25059__auto___43291 = cljs.core.chunk_first(seq__43251_43290__$1);
var G__43292 = cljs.core.chunk_rest(seq__43251_43290__$1);
var G__43293 = c__25059__auto___43291;
var G__43294 = cljs.core.count(c__25059__auto___43291);
var G__43295 = (0);
seq__43251_43280 = G__43292;
chunk__43252_43281 = G__43293;
count__43253_43282 = G__43294;
i__43254_43283 = G__43295;
continue;
} else {
var x_43296__$1 = cljs.core.first(seq__43251_43290__$1);
arr.push(x_43296__$1);

var G__43297 = cljs.core.next(seq__43251_43290__$1);
var G__43298 = null;
var G__43299 = (0);
var G__43300 = (0);
seq__43251_43280 = G__43297;
chunk__43252_43281 = G__43298;
count__43253_43282 = G__43299;
i__43254_43283 = G__43300;
continue;
}
} else {
}
}
break;
}

return arr;
} else {
return x;

}
}
}
}
}
}
});

cljs.core.IEncodeClojure = (function (){var obj43302 = {};
return obj43302;
})();

cljs.core._js__GT_clj = (function _js__GT_clj(x,options){
if((function (){var and__24260__auto__ = x;
if(and__24260__auto__){
return x.cljs$core$IEncodeClojure$_js__GT_clj$arity$2;
} else {
return and__24260__auto__;
}
})()){
return x.cljs$core$IEncodeClojure$_js__GT_clj$arity$2(x,options);
} else {
var x__24916__auto__ = (((x == null))?null:x);
return (function (){var or__24272__auto__ = (cljs.core._js__GT_clj[(function (){var G__43306 = x__24916__auto__;
return goog.typeOf(G__43306);
})()]);
if(or__24272__auto__){
return or__24272__auto__;
} else {
var or__24272__auto____$1 = (cljs.core._js__GT_clj["_"]);
if(or__24272__auto____$1){
return or__24272__auto____$1;
} else {
throw cljs.core.missing_protocol("IEncodeClojure.-js->clj",x);
}
}
})().call(null,x,options);
}
});

/**
* Recursively transforms JavaScript arrays into ClojureScript
* vectors, and JavaScript objects into ClojureScript maps.  With
* option ':keywordize-keys true' will convert object fields from
* strings to keywords.
* @param {...*} var_args
*/
cljs.core.js__GT_clj = (function() {
var js__GT_clj = null;
var js__GT_clj__1 = (function (x){
return js__GT_clj.cljs$core$IFn$_invoke$arity$variadic(x,cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,"keywordize-keys","keywordize-keys",1310784252),false], null)], 0));
});
var js__GT_clj__2 = (function() { 
var G__43363__delegate = function (x,opts){
var map__43336 = opts;
var map__43336__$1 = ((cljs.core.seq_QMARK_(map__43336))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__43336):map__43336);
var keywordize_keys = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__43336__$1,new cljs.core.Keyword(null,"keywordize-keys","keywordize-keys",1310784252));
var keyfn = (cljs.core.truth_(keywordize_keys)?cljs.core.keyword:cljs.core.str);
var f = ((function (map__43336,map__43336__$1,keywordize_keys,keyfn){
return (function thisfn(x__$1){
if((function (){var G__43352 = x__$1;
if(G__43352){
var bit__24953__auto__ = null;
if(cljs.core.truth_((function (){var or__24272__auto__ = bit__24953__auto__;
if(cljs.core.truth_(or__24272__auto__)){
return or__24272__auto__;
} else {
return G__43352.cljs$core$IEncodeClojure$;
}
})())){
return true;
} else {
if((!G__43352.cljs$lang$protocol_mask$partition$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeClojure,G__43352);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeClojure,G__43352);
}
})()){
return cljs.core._js__GT_clj(x__$1,cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.array_map,opts));
} else {
if(cljs.core.seq_QMARK_(x__$1)){
return cljs.core.doall.cljs$core$IFn$_invoke$arity$1(cljs.core.map.cljs$core$IFn$_invoke$arity$2(thisfn,x__$1));
} else {
if(cljs.core.coll_QMARK_(x__$1)){
return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.empty(x__$1),cljs.core.map.cljs$core$IFn$_invoke$arity$2(thisfn,x__$1));
} else {
if(x__$1 instanceof Array){
return cljs.core.vec(cljs.core.map.cljs$core$IFn$_invoke$arity$2(thisfn,x__$1));
} else {
if((cljs.core.type(x__$1) === Object)){
return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentArrayMap.EMPTY,(function (){var iter__25028__auto__ = ((function (map__43336,map__43336__$1,keywordize_keys,keyfn){
return (function iter__43353(s__43354){
return (new cljs.core.LazySeq(null,((function (map__43336,map__43336__$1,keywordize_keys,keyfn){
return (function (){
var s__43354__$1 = s__43354;
while(true){
var temp__4126__auto__ = cljs.core.seq(s__43354__$1);
if(temp__4126__auto__){
var s__43354__$2 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(s__43354__$2)){
var c__25026__auto__ = cljs.core.chunk_first(s__43354__$2);
var size__25027__auto__ = cljs.core.count(c__25026__auto__);
var b__43356 = cljs.core.chunk_buffer(size__25027__auto__);
if((function (){var i__43355 = (0);
while(true){
if((i__43355 < size__25027__auto__)){
var k = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c__25026__auto__,i__43355);
cljs.core.chunk_append(b__43356,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__43361 = k;
return (keyfn.cljs$core$IFn$_invoke$arity$1 ? keyfn.cljs$core$IFn$_invoke$arity$1(G__43361) : keyfn.call(null,G__43361));
})(),thisfn((x__$1[k]))], null));

var G__43364 = (i__43355 + (1));
i__43355 = G__43364;
continue;
} else {
return true;
}
break;
}
})()){
return cljs.core.chunk_cons(cljs.core.chunk(b__43356),iter__43353(cljs.core.chunk_rest(s__43354__$2)));
} else {
return cljs.core.chunk_cons(cljs.core.chunk(b__43356),null);
}
} else {
var k = cljs.core.first(s__43354__$2);
return cljs.core.cons(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__43362 = k;
return (keyfn.cljs$core$IFn$_invoke$arity$1 ? keyfn.cljs$core$IFn$_invoke$arity$1(G__43362) : keyfn.call(null,G__43362));
})(),thisfn((x__$1[k]))], null),iter__43353(cljs.core.rest(s__43354__$2)));
}
} else {
return null;
}
break;
}
});})(map__43336,map__43336__$1,keywordize_keys,keyfn))
,null,null));
});})(map__43336,map__43336__$1,keywordize_keys,keyfn))
;
return iter__25028__auto__(cljs.core.js_keys(x__$1));
})());
} else {
return x__$1;

}
}
}
}
}
});})(map__43336,map__43336__$1,keywordize_keys,keyfn))
;
return f(x);
};
var G__43363 = function (x,var_args){
var opts = null;
if (arguments.length > 1) {
var G__43365__i = 0, G__43365__a = new Array(arguments.length -  1);
while (G__43365__i < G__43365__a.length) {G__43365__a[G__43365__i] = arguments[G__43365__i + 1]; ++G__43365__i;}
  opts = new cljs.core.IndexedSeq(G__43365__a,0);
} 
return G__43363__delegate.call(this,x,opts);};
G__43363.cljs$lang$maxFixedArity = 1;
G__43363.cljs$lang$applyTo = (function (arglist__43366){
var x = cljs.core.first(arglist__43366);
var opts = cljs.core.rest(arglist__43366);
return G__43363__delegate(x,opts);
});
G__43363.cljs$core$IFn$_invoke$arity$variadic = G__43363__delegate;
return G__43363;
})()
;
js__GT_clj = function(x,var_args){
var opts = var_args;
switch(arguments.length){
case 1:
return js__GT_clj__1.call(this,x);
default:
var G__43367 = null;
if (arguments.length > 1) {
var G__43368__i = 0, G__43368__a = new Array(arguments.length -  1);
while (G__43368__i < G__43368__a.length) {G__43368__a[G__43368__i] = arguments[G__43368__i + 1]; ++G__43368__i;}
G__43367 = new cljs.core.IndexedSeq(G__43368__a,0);
}
return js__GT_clj__2.cljs$core$IFn$_invoke$arity$variadic(x, G__43367);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
js__GT_clj.cljs$lang$maxFixedArity = 1;
js__GT_clj.cljs$lang$applyTo = js__GT_clj__2.cljs$lang$applyTo;
js__GT_clj.cljs$core$IFn$_invoke$arity$1 = js__GT_clj__1;
js__GT_clj.cljs$core$IFn$_invoke$arity$variadic = js__GT_clj__2.cljs$core$IFn$_invoke$arity$variadic;
return js__GT_clj;
})()
;
/**
* Returns a memoized version of a referentially transparent function. The
* memoized version of the function keeps a cache of the mapping from arguments
* to results and, when calls with the same arguments are repeated often, has
* higher performance at the expense of higher memory use.
*/
cljs.core.memoize = (function memoize(f){
var mem = (function (){var G__43371 = cljs.core.PersistentArrayMap.EMPTY;
return (cljs.core.atom.cljs$core$IFn$_invoke$arity$1 ? cljs.core.atom.cljs$core$IFn$_invoke$arity$1(G__43371) : cljs.core.atom.call(null,G__43371));
})();
return ((function (mem){
return (function() { 
var G__43373__delegate = function (args){
var v = cljs.core.get.cljs$core$IFn$_invoke$arity$3((function (){var G__43372 = mem;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__43372) : cljs.core.deref.call(null,G__43372));
})(),args,cljs.core.lookup_sentinel);
if((v === cljs.core.lookup_sentinel)){
var ret = cljs.core.apply.cljs$core$IFn$_invoke$arity$2(f,args);
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(mem,cljs.core.assoc,args,ret);

return ret;
} else {
return v;
}
};
var G__43373 = function (var_args){
var args = null;
if (arguments.length > 0) {
var G__43374__i = 0, G__43374__a = new Array(arguments.length -  0);
while (G__43374__i < G__43374__a.length) {G__43374__a[G__43374__i] = arguments[G__43374__i + 0]; ++G__43374__i;}
  args = new cljs.core.IndexedSeq(G__43374__a,0);
} 
return G__43373__delegate.call(this,args);};
G__43373.cljs$lang$maxFixedArity = 0;
G__43373.cljs$lang$applyTo = (function (arglist__43375){
var args = cljs.core.seq(arglist__43375);
return G__43373__delegate(args);
});
G__43373.cljs$core$IFn$_invoke$arity$variadic = G__43373__delegate;
return G__43373;
})()
;
;})(mem))
});
/**
* trampoline can be used to convert algorithms requiring mutual
* recursion without stack consumption. Calls f with supplied args, if
* any. If f returns a fn, calls that fn with no arguments, and
* continues to repeat, until the return value is not a fn, then
* returns that non-fn value. Note that if you want to return a fn as a
* final value, you must wrap it in some data structure and unpack it
* after trampoline returns.
* @param {...*} var_args
*/
cljs.core.trampoline = (function() {
var trampoline = null;
var trampoline__1 = (function (f){
while(true){
var ret = (function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})();
if(cljs.core.fn_QMARK_(ret)){
var G__43377 = ret;
f = G__43377;
continue;
} else {
return ret;
}
break;
}
});
var trampoline__2 = (function() { 
var G__43378__delegate = function (f,args){
return trampoline.cljs$core$IFn$_invoke$arity$1((function (){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$2(f,args);
}));
};
var G__43378 = function (f,var_args){
var args = null;
if (arguments.length > 1) {
var G__43379__i = 0, G__43379__a = new Array(arguments.length -  1);
while (G__43379__i < G__43379__a.length) {G__43379__a[G__43379__i] = arguments[G__43379__i + 1]; ++G__43379__i;}
  args = new cljs.core.IndexedSeq(G__43379__a,0);
} 
return G__43378__delegate.call(this,f,args);};
G__43378.cljs$lang$maxFixedArity = 1;
G__43378.cljs$lang$applyTo = (function (arglist__43380){
var f = cljs.core.first(arglist__43380);
var args = cljs.core.rest(arglist__43380);
return G__43378__delegate(f,args);
});
G__43378.cljs$core$IFn$_invoke$arity$variadic = G__43378__delegate;
return G__43378;
})()
;
trampoline = function(f,var_args){
var args = var_args;
switch(arguments.length){
case 1:
return trampoline__1.call(this,f);
default:
var G__43381 = null;
if (arguments.length > 1) {
var G__43382__i = 0, G__43382__a = new Array(arguments.length -  1);
while (G__43382__i < G__43382__a.length) {G__43382__a[G__43382__i] = arguments[G__43382__i + 1]; ++G__43382__i;}
G__43381 = new cljs.core.IndexedSeq(G__43382__a,0);
}
return trampoline__2.cljs$core$IFn$_invoke$arity$variadic(f, G__43381);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
trampoline.cljs$lang$maxFixedArity = 1;
trampoline.cljs$lang$applyTo = trampoline__2.cljs$lang$applyTo;
trampoline.cljs$core$IFn$_invoke$arity$1 = trampoline__1;
trampoline.cljs$core$IFn$_invoke$arity$variadic = trampoline__2.cljs$core$IFn$_invoke$arity$variadic;
return trampoline;
})()
;
/**
* Returns a random floating point number between 0 (inclusive) and
* n (default 1) (exclusive).
*/
cljs.core.rand = (function() {
var rand = null;
var rand__0 = (function (){
return rand.cljs$core$IFn$_invoke$arity$1((1));
});
var rand__1 = (function (n){
return ((function (){return (Math.random.cljs$core$IFn$_invoke$arity$0 ? Math.random.cljs$core$IFn$_invoke$arity$0() : Math.random.call(null));
})() * n);
});
rand = function(n){
switch(arguments.length){
case 0:
return rand__0.call(this);
case 1:
return rand__1.call(this,n);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
rand.cljs$core$IFn$_invoke$arity$0 = rand__0;
rand.cljs$core$IFn$_invoke$arity$1 = rand__1;
return rand;
})()
;
/**
* Returns a random integer between 0 (inclusive) and n (exclusive).
*/
cljs.core.rand_int = (function rand_int(n){
var G__43385 = ((function (){return (Math.random.cljs$core$IFn$_invoke$arity$0 ? Math.random.cljs$core$IFn$_invoke$arity$0() : Math.random.call(null));
})() * n);
return (Math.floor.cljs$core$IFn$_invoke$arity$1 ? Math.floor.cljs$core$IFn$_invoke$arity$1(G__43385) : Math.floor.call(null,G__43385));
});
/**
* Return a random element of the (sequential) collection. Will have
* the same performance characteristics as nth for the given
* collection.
*/
cljs.core.rand_nth = (function rand_nth(coll){
return cljs.core.nth.cljs$core$IFn$_invoke$arity$2(coll,cljs.core.rand_int(cljs.core.count(coll)));
});
/**
* Returns a map of the elements of coll keyed by the result of
* f on each element. The value at each key will be a vector of the
* corresponding elements, in the order they appeared in coll.
*/
cljs.core.group_by = (function group_by(f,coll){
return cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (ret,x){
var k = (function (){var G__43387 = x;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__43387) : f.call(null,G__43387));
})();
return cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(ret,k,cljs.core.conj.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$3(ret,k,cljs.core.PersistentVector.EMPTY),x));
}),cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY),coll));
});
/**
* Creates a hierarchy object for use with derive, isa? etc.
*/
cljs.core.make_hierarchy = (function make_hierarchy(){
return new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,"parents","parents",-2027538891),cljs.core.PersistentArrayMap.EMPTY,new cljs.core.Keyword(null,"descendants","descendants",1824886031),cljs.core.PersistentArrayMap.EMPTY,new cljs.core.Keyword(null,"ancestors","ancestors",-776045424),cljs.core.PersistentArrayMap.EMPTY], null);
});
cljs.core._global_hierarchy = null;
cljs.core.get_global_hierarchy = (function get_global_hierarchy(){
if((cljs.core._global_hierarchy == null)){
cljs.core._global_hierarchy = (function (){var G__43389 = cljs.core.make_hierarchy();
return (cljs.core.atom.cljs$core$IFn$_invoke$arity$1 ? cljs.core.atom.cljs$core$IFn$_invoke$arity$1(G__43389) : cljs.core.atom.call(null,G__43389));
})();
} else {
}

return cljs.core._global_hierarchy;
});
/**
* @param {...*} var_args
*/
cljs.core.swap_global_hierarchy_BANG_ = (function() { 
var swap_global_hierarchy_BANG___delegate = function (f,args){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$4(cljs.core.swap_BANG_,cljs.core.get_global_hierarchy(),f,args);
};
var swap_global_hierarchy_BANG_ = function (f,var_args){
var args = null;
if (arguments.length > 1) {
var G__43390__i = 0, G__43390__a = new Array(arguments.length -  1);
while (G__43390__i < G__43390__a.length) {G__43390__a[G__43390__i] = arguments[G__43390__i + 1]; ++G__43390__i;}
  args = new cljs.core.IndexedSeq(G__43390__a,0);
} 
return swap_global_hierarchy_BANG___delegate.call(this,f,args);};
swap_global_hierarchy_BANG_.cljs$lang$maxFixedArity = 1;
swap_global_hierarchy_BANG_.cljs$lang$applyTo = (function (arglist__43391){
var f = cljs.core.first(arglist__43391);
var args = cljs.core.rest(arglist__43391);
return swap_global_hierarchy_BANG___delegate(f,args);
});
swap_global_hierarchy_BANG_.cljs$core$IFn$_invoke$arity$variadic = swap_global_hierarchy_BANG___delegate;
return swap_global_hierarchy_BANG_;
})()
;
/**
* Returns true if (= child parent), or child is directly or indirectly derived from
* parent, either via a JavaScript type inheritance relationship or a
* relationship established via derive. h must be a hierarchy obtained
* from make-hierarchy, if not supplied defaults to the global
* hierarchy
*/
cljs.core.isa_QMARK_ = (function() {
var isa_QMARK_ = null;
var isa_QMARK___2 = (function (child,parent){
return isa_QMARK_.cljs$core$IFn$_invoke$arity$3((function (){var G__43456 = cljs.core.get_global_hierarchy();
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__43456) : cljs.core.deref.call(null,G__43456));
})(),child,parent);
});
var isa_QMARK___3 = (function (h,child,parent){
var or__24272__auto__ = cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(child,parent);
if(or__24272__auto__){
return or__24272__auto__;
} else {
var or__24272__auto____$1 = cljs.core.contains_QMARK_(new cljs.core.Keyword(null,"ancestors","ancestors",-776045424).cljs$core$IFn$_invoke$arity$1(h).call(null,child),parent);
if(or__24272__auto____$1){
return or__24272__auto____$1;
} else {
var and__24260__auto__ = cljs.core.vector_QMARK_(parent);
if(and__24260__auto__){
var and__24260__auto____$1 = cljs.core.vector_QMARK_(child);
if(and__24260__auto____$1){
var and__24260__auto____$2 = (cljs.core.count(parent) === cljs.core.count(child));
if(and__24260__auto____$2){
var ret = true;
var i = (0);
while(true){
if((!(ret)) || ((i === cljs.core.count(parent)))){
return ret;
} else {
var G__43481 = isa_QMARK_.cljs$core$IFn$_invoke$arity$3(h,(function (){var G__43479 = i;
return (child.cljs$core$IFn$_invoke$arity$1 ? child.cljs$core$IFn$_invoke$arity$1(G__43479) : child.call(null,G__43479));
})(),(function (){var G__43480 = i;
return (parent.cljs$core$IFn$_invoke$arity$1 ? parent.cljs$core$IFn$_invoke$arity$1(G__43480) : parent.call(null,G__43480));
})());
var G__43482 = (i + (1));
ret = G__43481;
i = G__43482;
continue;
}
break;
}
} else {
return and__24260__auto____$2;
}
} else {
return and__24260__auto____$1;
}
} else {
return and__24260__auto__;
}
}
}
});
isa_QMARK_ = function(h,child,parent){
switch(arguments.length){
case 2:
return isa_QMARK___2.call(this,h,child);
case 3:
return isa_QMARK___3.call(this,h,child,parent);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
isa_QMARK_.cljs$core$IFn$_invoke$arity$2 = isa_QMARK___2;
isa_QMARK_.cljs$core$IFn$_invoke$arity$3 = isa_QMARK___3;
return isa_QMARK_;
})()
;
/**
* Returns the immediate parents of tag, either via a JavaScript type
* inheritance relationship or a relationship established via derive. h
* must be a hierarchy obtained from make-hierarchy, if not supplied
* defaults to the global hierarchy
*/
cljs.core.parents = (function() {
var parents = null;
var parents__1 = (function (tag){
return parents.cljs$core$IFn$_invoke$arity$2((function (){var G__43486 = cljs.core.get_global_hierarchy();
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__43486) : cljs.core.deref.call(null,G__43486));
})(),tag);
});
var parents__2 = (function (h,tag){
return cljs.core.not_empty(cljs.core.get.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,"parents","parents",-2027538891).cljs$core$IFn$_invoke$arity$1(h),tag));
});
parents = function(h,tag){
switch(arguments.length){
case 1:
return parents__1.call(this,h);
case 2:
return parents__2.call(this,h,tag);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
parents.cljs$core$IFn$_invoke$arity$1 = parents__1;
parents.cljs$core$IFn$_invoke$arity$2 = parents__2;
return parents;
})()
;
/**
* Returns the immediate and indirect parents of tag, either via a JavaScript type
* inheritance relationship or a relationship established via derive. h
* must be a hierarchy obtained from make-hierarchy, if not supplied
* defaults to the global hierarchy
*/
cljs.core.ancestors = (function() {
var ancestors = null;
var ancestors__1 = (function (tag){
return ancestors.cljs$core$IFn$_invoke$arity$2((function (){var G__43490 = cljs.core.get_global_hierarchy();
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__43490) : cljs.core.deref.call(null,G__43490));
})(),tag);
});
var ancestors__2 = (function (h,tag){
return cljs.core.not_empty(cljs.core.get.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,"ancestors","ancestors",-776045424).cljs$core$IFn$_invoke$arity$1(h),tag));
});
ancestors = function(h,tag){
switch(arguments.length){
case 1:
return ancestors__1.call(this,h);
case 2:
return ancestors__2.call(this,h,tag);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
ancestors.cljs$core$IFn$_invoke$arity$1 = ancestors__1;
ancestors.cljs$core$IFn$_invoke$arity$2 = ancestors__2;
return ancestors;
})()
;
/**
* Returns the immediate and indirect children of tag, through a
* relationship established via derive. h must be a hierarchy obtained
* from make-hierarchy, if not supplied defaults to the global
* hierarchy. Note: does not work on JavaScript type inheritance
* relationships.
*/
cljs.core.descendants = (function() {
var descendants = null;
var descendants__1 = (function (tag){
return descendants.cljs$core$IFn$_invoke$arity$2((function (){var G__43494 = cljs.core.get_global_hierarchy();
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__43494) : cljs.core.deref.call(null,G__43494));
})(),tag);
});
var descendants__2 = (function (h,tag){
return cljs.core.not_empty(cljs.core.get.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,"descendants","descendants",1824886031).cljs$core$IFn$_invoke$arity$1(h),tag));
});
descendants = function(h,tag){
switch(arguments.length){
case 1:
return descendants__1.call(this,h);
case 2:
return descendants__2.call(this,h,tag);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
descendants.cljs$core$IFn$_invoke$arity$1 = descendants__1;
descendants.cljs$core$IFn$_invoke$arity$2 = descendants__2;
return descendants;
})()
;
/**
* Establishes a parent/child relationship between parent and
* tag. Parent must be a namespace-qualified symbol or keyword and
* child can be either a namespace-qualified symbol or keyword or a
* class. h must be a hierarchy obtained from make-hierarchy, if not
* supplied defaults to, and modifies, the global hierarchy.
*/
cljs.core.derive = (function() {
var derive = null;
var derive__2 = (function (tag,parent){
if(cljs.core.truth_(cljs.core.namespace(parent))){
} else {
throw (new Error([cljs.core.str("Assert failed: "),cljs.core.str(cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.list(new cljs.core.Symbol(null,"namespace","namespace",1263021155,null),new cljs.core.Symbol(null,"parent","parent",761652748,null))], 0)))].join('')));
}

cljs.core.swap_global_hierarchy_BANG_.cljs$core$IFn$_invoke$arity$variadic(derive,cljs.core.array_seq([tag,parent], 0));

return null;
});
var derive__3 = (function (h,tag,parent){
if(cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2(tag,parent)){
} else {
throw (new Error([cljs.core.str("Assert failed: "),cljs.core.str(cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.list(new cljs.core.Symbol(null,"not=","not=",1466536204,null),new cljs.core.Symbol(null,"tag","tag",350170304,null),new cljs.core.Symbol(null,"parent","parent",761652748,null))], 0)))].join('')));
}

var tp = new cljs.core.Keyword(null,"parents","parents",-2027538891).cljs$core$IFn$_invoke$arity$1(h);
var td = new cljs.core.Keyword(null,"descendants","descendants",1824886031).cljs$core$IFn$_invoke$arity$1(h);
var ta = new cljs.core.Keyword(null,"ancestors","ancestors",-776045424).cljs$core$IFn$_invoke$arity$1(h);
var tf = ((function (tp,td,ta){
return (function (m,source,sources,target,targets){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (tp,td,ta){
return (function (ret,k){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(ret,k,cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.conj,cljs.core.get.cljs$core$IFn$_invoke$arity$3(targets,k,cljs.core.PersistentHashSet.EMPTY),cljs.core.cons(target,(function (){var G__43503 = target;
return (targets.cljs$core$IFn$_invoke$arity$1 ? targets.cljs$core$IFn$_invoke$arity$1(G__43503) : targets.call(null,G__43503));
})())));
});})(tp,td,ta))
,m,cljs.core.cons(source,(function (){var G__43504 = source;
return (sources.cljs$core$IFn$_invoke$arity$1 ? sources.cljs$core$IFn$_invoke$arity$1(G__43504) : sources.call(null,G__43504));
})()));
});})(tp,td,ta))
;
var or__24272__auto__ = ((cljs.core.contains_QMARK_((function (){var G__43508 = tag;
return (tp.cljs$core$IFn$_invoke$arity$1 ? tp.cljs$core$IFn$_invoke$arity$1(G__43508) : tp.call(null,G__43508));
})(),parent))?null:(function (){
if(cljs.core.contains_QMARK_((function (){var G__43509 = tag;
return (ta.cljs$core$IFn$_invoke$arity$1 ? ta.cljs$core$IFn$_invoke$arity$1(G__43509) : ta.call(null,G__43509));
})(),parent)){
throw (new Error([cljs.core.str(tag),cljs.core.str("already has"),cljs.core.str(parent),cljs.core.str("as ancestor")].join('')));
} else {
}

if(cljs.core.contains_QMARK_((function (){var G__43510 = parent;
return (ta.cljs$core$IFn$_invoke$arity$1 ? ta.cljs$core$IFn$_invoke$arity$1(G__43510) : ta.call(null,G__43510));
})(),tag)){
throw (new Error([cljs.core.str("Cyclic derivation:"),cljs.core.str(parent),cljs.core.str("has"),cljs.core.str(tag),cljs.core.str("as ancestor")].join('')));
} else {
}

return new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,"parents","parents",-2027538891),cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(new cljs.core.Keyword(null,"parents","parents",-2027538891).cljs$core$IFn$_invoke$arity$1(h),tag,cljs.core.conj.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$3(tp,tag,cljs.core.PersistentHashSet.EMPTY),parent)),new cljs.core.Keyword(null,"ancestors","ancestors",-776045424),tf(new cljs.core.Keyword(null,"ancestors","ancestors",-776045424).cljs$core$IFn$_invoke$arity$1(h),tag,td,parent,ta),new cljs.core.Keyword(null,"descendants","descendants",1824886031),tf(new cljs.core.Keyword(null,"descendants","descendants",1824886031).cljs$core$IFn$_invoke$arity$1(h),parent,ta,tag,td)], null);
})()
);
if(cljs.core.truth_(or__24272__auto__)){
return or__24272__auto__;
} else {
return h;
}
});
derive = function(h,tag,parent){
switch(arguments.length){
case 2:
return derive__2.call(this,h,tag);
case 3:
return derive__3.call(this,h,tag,parent);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
derive.cljs$core$IFn$_invoke$arity$2 = derive__2;
derive.cljs$core$IFn$_invoke$arity$3 = derive__3;
return derive;
})()
;
/**
* Removes a parent/child relationship between parent and
* tag. h must be a hierarchy obtained from make-hierarchy, if not
* supplied defaults to, and modifies, the global hierarchy.
*/
cljs.core.underive = (function() {
var underive = null;
var underive__2 = (function (tag,parent){
cljs.core.swap_global_hierarchy_BANG_.cljs$core$IFn$_invoke$arity$variadic(underive,cljs.core.array_seq([tag,parent], 0));

return null;
});
var underive__3 = (function (h,tag,parent){
var parentMap = new cljs.core.Keyword(null,"parents","parents",-2027538891).cljs$core$IFn$_invoke$arity$1(h);
var childsParents = (cljs.core.truth_((function (){var G__43517 = tag;
return (parentMap.cljs$core$IFn$_invoke$arity$1 ? parentMap.cljs$core$IFn$_invoke$arity$1(G__43517) : parentMap.call(null,G__43517));
})())?cljs.core.disj.cljs$core$IFn$_invoke$arity$2((function (){var G__43518 = tag;
return (parentMap.cljs$core$IFn$_invoke$arity$1 ? parentMap.cljs$core$IFn$_invoke$arity$1(G__43518) : parentMap.call(null,G__43518));
})(),parent):cljs.core.PersistentHashSet.EMPTY);
var newParents = (cljs.core.truth_(cljs.core.not_empty(childsParents))?cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(parentMap,tag,childsParents):cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(parentMap,tag));
var deriv_seq = cljs.core.flatten(cljs.core.map.cljs$core$IFn$_invoke$arity$2(((function (parentMap,childsParents,newParents){
return (function (p1__43511_SHARP_){
return cljs.core.cons(cljs.core.first(p1__43511_SHARP_),cljs.core.interpose(cljs.core.first(p1__43511_SHARP_),cljs.core.second(p1__43511_SHARP_)));
});})(parentMap,childsParents,newParents))
,cljs.core.seq(newParents)));
if(cljs.core.contains_QMARK_((function (){var G__43519 = tag;
return (parentMap.cljs$core$IFn$_invoke$arity$1 ? parentMap.cljs$core$IFn$_invoke$arity$1(G__43519) : parentMap.call(null,G__43519));
})(),parent)){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (parentMap,childsParents,newParents,deriv_seq){
return (function (p1__43512_SHARP_,p2__43513_SHARP_){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$3(cljs.core.derive,p1__43512_SHARP_,p2__43513_SHARP_);
});})(parentMap,childsParents,newParents,deriv_seq))
,cljs.core.make_hierarchy(),cljs.core.partition.cljs$core$IFn$_invoke$arity$2((2),deriv_seq));
} else {
return h;
}
});
underive = function(h,tag,parent){
switch(arguments.length){
case 2:
return underive__2.call(this,h,tag);
case 3:
return underive__3.call(this,h,tag,parent);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
underive.cljs$core$IFn$_invoke$arity$2 = underive__2;
underive.cljs$core$IFn$_invoke$arity$3 = underive__3;
return underive;
})()
;
cljs.core.reset_cache = (function reset_cache(method_cache,method_table,cached_hierarchy,hierarchy){
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(method_cache,(function (_){
var G__43522 = method_table;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__43522) : cljs.core.deref.call(null,G__43522));
}));

return cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(cached_hierarchy,(function (_){
var G__43523 = hierarchy;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__43523) : cljs.core.deref.call(null,G__43523));
}));
});
cljs.core.prefers_STAR_ = (function prefers_STAR_(x,y,prefer_table){
var xprefs = (function (){var G__43539 = prefer_table;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__43539) : cljs.core.deref.call(null,G__43539));
})().call(null,x);
var or__24272__auto__ = (cljs.core.truth_((function (){var and__24260__auto__ = xprefs;
if(cljs.core.truth_(and__24260__auto__)){
var G__43541 = y;
return (xprefs.cljs$core$IFn$_invoke$arity$1 ? xprefs.cljs$core$IFn$_invoke$arity$1(G__43541) : xprefs.call(null,G__43541));
} else {
return and__24260__auto__;
}
})())?true:null);
if(cljs.core.truth_(or__24272__auto__)){
return or__24272__auto__;
} else {
var or__24272__auto____$1 = (function (){var ps = cljs.core.parents.cljs$core$IFn$_invoke$arity$1(y);
while(true){
if((cljs.core.count(ps) > (0))){
if(cljs.core.truth_(prefers_STAR_(x,cljs.core.first(ps),prefer_table))){
} else {
}

var G__43542 = cljs.core.rest(ps);
ps = G__43542;
continue;
} else {
return null;
}
break;
}
})();
if(cljs.core.truth_(or__24272__auto____$1)){
return or__24272__auto____$1;
} else {
var or__24272__auto____$2 = (function (){var ps = cljs.core.parents.cljs$core$IFn$_invoke$arity$1(x);
while(true){
if((cljs.core.count(ps) > (0))){
if(cljs.core.truth_(prefers_STAR_(cljs.core.first(ps),y,prefer_table))){
} else {
}

var G__43543 = cljs.core.rest(ps);
ps = G__43543;
continue;
} else {
return null;
}
break;
}
})();
if(cljs.core.truth_(or__24272__auto____$2)){
return or__24272__auto____$2;
} else {
return false;
}
}
}
});
cljs.core.dominates = (function dominates(x,y,prefer_table){
var or__24272__auto__ = cljs.core.prefers_STAR_(x,y,prefer_table);
if(cljs.core.truth_(or__24272__auto__)){
return or__24272__auto__;
} else {
return cljs.core.isa_QMARK_.cljs$core$IFn$_invoke$arity$2(x,y);
}
});
cljs.core.find_and_cache_best_method = (function find_and_cache_best_method(name,dispatch_val,hierarchy,method_table,prefer_table,method_cache,cached_hierarchy){
var best_entry = cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (be,p__43557){
var vec__43558 = p__43557;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__43558,(0),null);
var _ = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__43558,(1),null);
var e = vec__43558;
if(cljs.core.isa_QMARK_.cljs$core$IFn$_invoke$arity$3((function (){var G__43559 = hierarchy;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__43559) : cljs.core.deref.call(null,G__43559));
})(),dispatch_val,k)){
var be2 = (cljs.core.truth_((function (){var or__24272__auto__ = (be == null);
if(or__24272__auto__){
return or__24272__auto__;
} else {
return cljs.core.dominates(k,cljs.core.first(be),prefer_table);
}
})())?e:be);
if(cljs.core.truth_(cljs.core.dominates(cljs.core.first(be2),k,prefer_table))){
} else {
throw (new Error([cljs.core.str("Multiple methods in multimethod '"),cljs.core.str(name),cljs.core.str("' match dispatch value: "),cljs.core.str(dispatch_val),cljs.core.str(" -> "),cljs.core.str(k),cljs.core.str(" and "),cljs.core.str(cljs.core.first(be2)),cljs.core.str(", and neither is preferred")].join('')));
}

return be2;
} else {
return be;
}
}),null,(function (){var G__43560 = method_table;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__43560) : cljs.core.deref.call(null,G__43560));
})());
if(cljs.core.truth_(best_entry)){
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2((function (){var G__43561 = cached_hierarchy;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__43561) : cljs.core.deref.call(null,G__43561));
})(),(function (){var G__43562 = hierarchy;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__43562) : cljs.core.deref.call(null,G__43562));
})())){
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(method_cache,cljs.core.assoc,dispatch_val,cljs.core.second(best_entry));

return cljs.core.second(best_entry);
} else {
cljs.core.reset_cache(method_cache,method_table,cached_hierarchy,hierarchy);

return find_and_cache_best_method(name,dispatch_val,hierarchy,method_table,prefer_table,method_cache,cached_hierarchy);
}
} else {
return null;
}
});

cljs.core.IMultiFn = (function (){var obj43564 = {};
return obj43564;
})();

cljs.core._reset = (function _reset(mf){
if((function (){var and__24260__auto__ = mf;
if(and__24260__auto__){
return mf.cljs$core$IMultiFn$_reset$arity$1;
} else {
return and__24260__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_reset$arity$1(mf);
} else {
var x__24916__auto__ = (((mf == null))?null:mf);
return (function (){var or__24272__auto__ = (cljs.core._reset[(function (){var G__43568 = x__24916__auto__;
return goog.typeOf(G__43568);
})()]);
if(or__24272__auto__){
return or__24272__auto__;
} else {
var or__24272__auto____$1 = (cljs.core._reset["_"]);
if(or__24272__auto____$1){
return or__24272__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-reset",mf);
}
}
})().call(null,mf);
}
});

cljs.core._add_method = (function _add_method(mf,dispatch_val,method){
if((function (){var and__24260__auto__ = mf;
if(and__24260__auto__){
return mf.cljs$core$IMultiFn$_add_method$arity$3;
} else {
return and__24260__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_add_method$arity$3(mf,dispatch_val,method);
} else {
var x__24916__auto__ = (((mf == null))?null:mf);
return (function (){var or__24272__auto__ = (cljs.core._add_method[(function (){var G__43572 = x__24916__auto__;
return goog.typeOf(G__43572);
})()]);
if(or__24272__auto__){
return or__24272__auto__;
} else {
var or__24272__auto____$1 = (cljs.core._add_method["_"]);
if(or__24272__auto____$1){
return or__24272__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-add-method",mf);
}
}
})().call(null,mf,dispatch_val,method);
}
});

cljs.core._remove_method = (function _remove_method(mf,dispatch_val){
if((function (){var and__24260__auto__ = mf;
if(and__24260__auto__){
return mf.cljs$core$IMultiFn$_remove_method$arity$2;
} else {
return and__24260__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_remove_method$arity$2(mf,dispatch_val);
} else {
var x__24916__auto__ = (((mf == null))?null:mf);
return (function (){var or__24272__auto__ = (cljs.core._remove_method[(function (){var G__43576 = x__24916__auto__;
return goog.typeOf(G__43576);
})()]);
if(or__24272__auto__){
return or__24272__auto__;
} else {
var or__24272__auto____$1 = (cljs.core._remove_method["_"]);
if(or__24272__auto____$1){
return or__24272__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-remove-method",mf);
}
}
})().call(null,mf,dispatch_val);
}
});

cljs.core._prefer_method = (function _prefer_method(mf,dispatch_val,dispatch_val_y){
if((function (){var and__24260__auto__ = mf;
if(and__24260__auto__){
return mf.cljs$core$IMultiFn$_prefer_method$arity$3;
} else {
return and__24260__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_prefer_method$arity$3(mf,dispatch_val,dispatch_val_y);
} else {
var x__24916__auto__ = (((mf == null))?null:mf);
return (function (){var or__24272__auto__ = (cljs.core._prefer_method[(function (){var G__43580 = x__24916__auto__;
return goog.typeOf(G__43580);
})()]);
if(or__24272__auto__){
return or__24272__auto__;
} else {
var or__24272__auto____$1 = (cljs.core._prefer_method["_"]);
if(or__24272__auto____$1){
return or__24272__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-prefer-method",mf);
}
}
})().call(null,mf,dispatch_val,dispatch_val_y);
}
});

cljs.core._get_method = (function _get_method(mf,dispatch_val){
if((function (){var and__24260__auto__ = mf;
if(and__24260__auto__){
return mf.cljs$core$IMultiFn$_get_method$arity$2;
} else {
return and__24260__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_get_method$arity$2(mf,dispatch_val);
} else {
var x__24916__auto__ = (((mf == null))?null:mf);
return (function (){var or__24272__auto__ = (cljs.core._get_method[(function (){var G__43584 = x__24916__auto__;
return goog.typeOf(G__43584);
})()]);
if(or__24272__auto__){
return or__24272__auto__;
} else {
var or__24272__auto____$1 = (cljs.core._get_method["_"]);
if(or__24272__auto____$1){
return or__24272__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-get-method",mf);
}
}
})().call(null,mf,dispatch_val);
}
});

cljs.core._methods = (function _methods(mf){
if((function (){var and__24260__auto__ = mf;
if(and__24260__auto__){
return mf.cljs$core$IMultiFn$_methods$arity$1;
} else {
return and__24260__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_methods$arity$1(mf);
} else {
var x__24916__auto__ = (((mf == null))?null:mf);
return (function (){var or__24272__auto__ = (cljs.core._methods[(function (){var G__43588 = x__24916__auto__;
return goog.typeOf(G__43588);
})()]);
if(or__24272__auto__){
return or__24272__auto__;
} else {
var or__24272__auto____$1 = (cljs.core._methods["_"]);
if(or__24272__auto____$1){
return or__24272__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-methods",mf);
}
}
})().call(null,mf);
}
});

cljs.core._prefers = (function _prefers(mf){
if((function (){var and__24260__auto__ = mf;
if(and__24260__auto__){
return mf.cljs$core$IMultiFn$_prefers$arity$1;
} else {
return and__24260__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_prefers$arity$1(mf);
} else {
var x__24916__auto__ = (((mf == null))?null:mf);
return (function (){var or__24272__auto__ = (cljs.core._prefers[(function (){var G__43592 = x__24916__auto__;
return goog.typeOf(G__43592);
})()]);
if(or__24272__auto__){
return or__24272__auto__;
} else {
var or__24272__auto____$1 = (cljs.core._prefers["_"]);
if(or__24272__auto____$1){
return or__24272__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-prefers",mf);
}
}
})().call(null,mf);
}
});

cljs.core.throw_no_method_error = (function throw_no_method_error(name,dispatch_val){
throw (new Error([cljs.core.str("No method in multimethod '"),cljs.core.str(name),cljs.core.str("' for dispatch value: "),cljs.core.str(dispatch_val)].join('')));
});

/**
* @constructor
*/
cljs.core.MultiFn = (function (name,dispatch_fn,default_dispatch_val,hierarchy,method_table,prefer_table,method_cache,cached_hierarchy){
this.name = name;
this.dispatch_fn = dispatch_fn;
this.default_dispatch_val = default_dispatch_val;
this.hierarchy = hierarchy;
this.method_table = method_table;
this.prefer_table = prefer_table;
this.method_cache = method_cache;
this.cached_hierarchy = cached_hierarchy;
this.cljs$lang$protocol_mask$partition0$ = 4194305;
this.cljs$lang$protocol_mask$partition1$ = 4352;
})
cljs.core.MultiFn.prototype.cljs$core$IHash$_hash$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
var G__43594 = this$__$1;
return goog.getUid(G__43594);
});

cljs.core.MultiFn.prototype.cljs$core$INamed$_name$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return cljs.core._name(self__.name);
});

cljs.core.MultiFn.prototype.cljs$core$INamed$_namespace$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return cljs.core._namespace(self__.name);
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_reset$arity$1 = (function (mf){
var self__ = this;
var mf__$1 = this;
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.method_table,((function (mf__$1){
return (function (mf__$2){
return cljs.core.PersistentArrayMap.EMPTY;
});})(mf__$1))
);

cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.method_cache,((function (mf__$1){
return (function (mf__$2){
return cljs.core.PersistentArrayMap.EMPTY;
});})(mf__$1))
);

cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.prefer_table,((function (mf__$1){
return (function (mf__$2){
return cljs.core.PersistentArrayMap.EMPTY;
});})(mf__$1))
);

cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.cached_hierarchy,((function (mf__$1){
return (function (mf__$2){
return null;
});})(mf__$1))
);

return mf__$1;
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_add_method$arity$3 = (function (mf,dispatch_val,method){
var self__ = this;
var mf__$1 = this;
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(self__.method_table,cljs.core.assoc,dispatch_val,method);

cljs.core.reset_cache(self__.method_cache,self__.method_table,self__.cached_hierarchy,self__.hierarchy);

return mf__$1;
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_remove_method$arity$2 = (function (mf,dispatch_val){
var self__ = this;
var mf__$1 = this;
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$3(self__.method_table,cljs.core.dissoc,dispatch_val);

cljs.core.reset_cache(self__.method_cache,self__.method_table,self__.cached_hierarchy,self__.hierarchy);

return mf__$1;
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_get_method$arity$2 = (function (mf,dispatch_val){
var self__ = this;
var mf__$1 = this;
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2((function (){var G__43595 = self__.cached_hierarchy;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__43595) : cljs.core.deref.call(null,G__43595));
})(),(function (){var G__43596 = self__.hierarchy;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__43596) : cljs.core.deref.call(null,G__43596));
})())){
} else {
cljs.core.reset_cache(self__.method_cache,self__.method_table,self__.cached_hierarchy,self__.hierarchy);
}

var temp__4124__auto__ = (function (){var G__43597 = self__.method_cache;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__43597) : cljs.core.deref.call(null,G__43597));
})().call(null,dispatch_val);
if(cljs.core.truth_(temp__4124__auto__)){
var target_fn = temp__4124__auto__;
return target_fn;
} else {
var temp__4124__auto____$1 = cljs.core.find_and_cache_best_method(self__.name,dispatch_val,self__.hierarchy,self__.method_table,self__.prefer_table,self__.method_cache,self__.cached_hierarchy);
if(cljs.core.truth_(temp__4124__auto____$1)){
var target_fn = temp__4124__auto____$1;
return target_fn;
} else {
return (function (){var G__43598 = self__.method_table;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__43598) : cljs.core.deref.call(null,G__43598));
})().call(null,self__.default_dispatch_val);
}
}
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_prefer_method$arity$3 = (function (mf,dispatch_val_x,dispatch_val_y){
var self__ = this;
var mf__$1 = this;
if(cljs.core.truth_(cljs.core.prefers_STAR_(dispatch_val_x,dispatch_val_y,self__.prefer_table))){
throw (new Error([cljs.core.str("Preference conflict in multimethod '"),cljs.core.str(self__.name),cljs.core.str("': "),cljs.core.str(dispatch_val_y),cljs.core.str(" is already preferred to "),cljs.core.str(dispatch_val_x)].join('')));
} else {
}

cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.prefer_table,((function (mf__$1){
return (function (old){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(old,dispatch_val_x,cljs.core.conj.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$3(old,dispatch_val_x,cljs.core.PersistentHashSet.EMPTY),dispatch_val_y));
});})(mf__$1))
);

return cljs.core.reset_cache(self__.method_cache,self__.method_table,self__.cached_hierarchy,self__.hierarchy);
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_methods$arity$1 = (function (mf){
var self__ = this;
var mf__$1 = this;
var G__43599 = self__.method_table;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__43599) : cljs.core.deref.call(null,G__43599));
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_prefers$arity$1 = (function (mf){
var self__ = this;
var mf__$1 = this;
var G__43600 = self__.prefer_table;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__43600) : cljs.core.deref.call(null,G__43600));
});

cljs.core.MultiFn.prototype.call = (function() {
var G__44441 = null;
var G__44441__1 = (function (self__){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$0 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$0() : self__.dispatch_fn.call(null));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

return (target_fn.cljs$core$IFn$_invoke$arity$0 ? target_fn.cljs$core$IFn$_invoke$arity$0() : target_fn.call(null));
});
var G__44441__2 = (function (self__,a){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__43601 = a;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$1 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$1(G__43601) : self__.dispatch_fn.call(null,G__43601));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__43602 = a;
return (target_fn.cljs$core$IFn$_invoke$arity$1 ? target_fn.cljs$core$IFn$_invoke$arity$1(G__43602) : target_fn.call(null,G__43602));
});
var G__44441__3 = (function (self__,a,b){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__43603 = a;
var G__43604 = b;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$2 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$2(G__43603,G__43604) : self__.dispatch_fn.call(null,G__43603,G__43604));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__43605 = a;
var G__43606 = b;
return (target_fn.cljs$core$IFn$_invoke$arity$2 ? target_fn.cljs$core$IFn$_invoke$arity$2(G__43605,G__43606) : target_fn.call(null,G__43605,G__43606));
});
var G__44441__4 = (function (self__,a,b,c){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__43607 = a;
var G__43608 = b;
var G__43609 = c;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$3 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$3(G__43607,G__43608,G__43609) : self__.dispatch_fn.call(null,G__43607,G__43608,G__43609));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__43610 = a;
var G__43611 = b;
var G__43612 = c;
return (target_fn.cljs$core$IFn$_invoke$arity$3 ? target_fn.cljs$core$IFn$_invoke$arity$3(G__43610,G__43611,G__43612) : target_fn.call(null,G__43610,G__43611,G__43612));
});
var G__44441__5 = (function (self__,a,b,c,d){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__43613 = a;
var G__43614 = b;
var G__43615 = c;
var G__43616 = d;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$4 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$4(G__43613,G__43614,G__43615,G__43616) : self__.dispatch_fn.call(null,G__43613,G__43614,G__43615,G__43616));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__43617 = a;
var G__43618 = b;
var G__43619 = c;
var G__43620 = d;
return (target_fn.cljs$core$IFn$_invoke$arity$4 ? target_fn.cljs$core$IFn$_invoke$arity$4(G__43617,G__43618,G__43619,G__43620) : target_fn.call(null,G__43617,G__43618,G__43619,G__43620));
});
var G__44441__6 = (function (self__,a,b,c,d,e){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__43621 = a;
var G__43622 = b;
var G__43623 = c;
var G__43624 = d;
var G__43625 = e;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$5 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$5(G__43621,G__43622,G__43623,G__43624,G__43625) : self__.dispatch_fn.call(null,G__43621,G__43622,G__43623,G__43624,G__43625));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__43626 = a;
var G__43627 = b;
var G__43628 = c;
var G__43629 = d;
var G__43630 = e;
return (target_fn.cljs$core$IFn$_invoke$arity$5 ? target_fn.cljs$core$IFn$_invoke$arity$5(G__43626,G__43627,G__43628,G__43629,G__43630) : target_fn.call(null,G__43626,G__43627,G__43628,G__43629,G__43630));
});
var G__44441__7 = (function (self__,a,b,c,d,e,f){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__43631 = a;
var G__43632 = b;
var G__43633 = c;
var G__43634 = d;
var G__43635 = e;
var G__43636 = f;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$6 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$6(G__43631,G__43632,G__43633,G__43634,G__43635,G__43636) : self__.dispatch_fn.call(null,G__43631,G__43632,G__43633,G__43634,G__43635,G__43636));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__43637 = a;
var G__43638 = b;
var G__43639 = c;
var G__43640 = d;
var G__43641 = e;
var G__43642 = f;
return (target_fn.cljs$core$IFn$_invoke$arity$6 ? target_fn.cljs$core$IFn$_invoke$arity$6(G__43637,G__43638,G__43639,G__43640,G__43641,G__43642) : target_fn.call(null,G__43637,G__43638,G__43639,G__43640,G__43641,G__43642));
});
var G__44441__8 = (function (self__,a,b,c,d,e,f,g){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__43643 = a;
var G__43644 = b;
var G__43645 = c;
var G__43646 = d;
var G__43647 = e;
var G__43648 = f;
var G__43649 = g;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$7 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$7(G__43643,G__43644,G__43645,G__43646,G__43647,G__43648,G__43649) : self__.dispatch_fn.call(null,G__43643,G__43644,G__43645,G__43646,G__43647,G__43648,G__43649));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__43650 = a;
var G__43651 = b;
var G__43652 = c;
var G__43653 = d;
var G__43654 = e;
var G__43655 = f;
var G__43656 = g;
return (target_fn.cljs$core$IFn$_invoke$arity$7 ? target_fn.cljs$core$IFn$_invoke$arity$7(G__43650,G__43651,G__43652,G__43653,G__43654,G__43655,G__43656) : target_fn.call(null,G__43650,G__43651,G__43652,G__43653,G__43654,G__43655,G__43656));
});
var G__44441__9 = (function (self__,a,b,c,d,e,f,g,h){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__43657 = a;
var G__43658 = b;
var G__43659 = c;
var G__43660 = d;
var G__43661 = e;
var G__43662 = f;
var G__43663 = g;
var G__43664 = h;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$8 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$8(G__43657,G__43658,G__43659,G__43660,G__43661,G__43662,G__43663,G__43664) : self__.dispatch_fn.call(null,G__43657,G__43658,G__43659,G__43660,G__43661,G__43662,G__43663,G__43664));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__43665 = a;
var G__43666 = b;
var G__43667 = c;
var G__43668 = d;
var G__43669 = e;
var G__43670 = f;
var G__43671 = g;
var G__43672 = h;
return (target_fn.cljs$core$IFn$_invoke$arity$8 ? target_fn.cljs$core$IFn$_invoke$arity$8(G__43665,G__43666,G__43667,G__43668,G__43669,G__43670,G__43671,G__43672) : target_fn.call(null,G__43665,G__43666,G__43667,G__43668,G__43669,G__43670,G__43671,G__43672));
});
var G__44441__10 = (function (self__,a,b,c,d,e,f,g,h,i){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__43673 = a;
var G__43674 = b;
var G__43675 = c;
var G__43676 = d;
var G__43677 = e;
var G__43678 = f;
var G__43679 = g;
var G__43680 = h;
var G__43681 = i;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$9 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$9(G__43673,G__43674,G__43675,G__43676,G__43677,G__43678,G__43679,G__43680,G__43681) : self__.dispatch_fn.call(null,G__43673,G__43674,G__43675,G__43676,G__43677,G__43678,G__43679,G__43680,G__43681));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__43682 = a;
var G__43683 = b;
var G__43684 = c;
var G__43685 = d;
var G__43686 = e;
var G__43687 = f;
var G__43688 = g;
var G__43689 = h;
var G__43690 = i;
return (target_fn.cljs$core$IFn$_invoke$arity$9 ? target_fn.cljs$core$IFn$_invoke$arity$9(G__43682,G__43683,G__43684,G__43685,G__43686,G__43687,G__43688,G__43689,G__43690) : target_fn.call(null,G__43682,G__43683,G__43684,G__43685,G__43686,G__43687,G__43688,G__43689,G__43690));
});
var G__44441__11 = (function (self__,a,b,c,d,e,f,g,h,i,j){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__43691 = a;
var G__43692 = b;
var G__43693 = c;
var G__43694 = d;
var G__43695 = e;
var G__43696 = f;
var G__43697 = g;
var G__43698 = h;
var G__43699 = i;
var G__43700 = j;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$10 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$10(G__43691,G__43692,G__43693,G__43694,G__43695,G__43696,G__43697,G__43698,G__43699,G__43700) : self__.dispatch_fn.call(null,G__43691,G__43692,G__43693,G__43694,G__43695,G__43696,G__43697,G__43698,G__43699,G__43700));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__43701 = a;
var G__43702 = b;
var G__43703 = c;
var G__43704 = d;
var G__43705 = e;
var G__43706 = f;
var G__43707 = g;
var G__43708 = h;
var G__43709 = i;
var G__43710 = j;
return (target_fn.cljs$core$IFn$_invoke$arity$10 ? target_fn.cljs$core$IFn$_invoke$arity$10(G__43701,G__43702,G__43703,G__43704,G__43705,G__43706,G__43707,G__43708,G__43709,G__43710) : target_fn.call(null,G__43701,G__43702,G__43703,G__43704,G__43705,G__43706,G__43707,G__43708,G__43709,G__43710));
});
var G__44441__12 = (function (self__,a,b,c,d,e,f,g,h,i,j,k){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__43711 = a;
var G__43712 = b;
var G__43713 = c;
var G__43714 = d;
var G__43715 = e;
var G__43716 = f;
var G__43717 = g;
var G__43718 = h;
var G__43719 = i;
var G__43720 = j;
var G__43721 = k;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$11 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$11(G__43711,G__43712,G__43713,G__43714,G__43715,G__43716,G__43717,G__43718,G__43719,G__43720,G__43721) : self__.dispatch_fn.call(null,G__43711,G__43712,G__43713,G__43714,G__43715,G__43716,G__43717,G__43718,G__43719,G__43720,G__43721));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__43722 = a;
var G__43723 = b;
var G__43724 = c;
var G__43725 = d;
var G__43726 = e;
var G__43727 = f;
var G__43728 = g;
var G__43729 = h;
var G__43730 = i;
var G__43731 = j;
var G__43732 = k;
return (target_fn.cljs$core$IFn$_invoke$arity$11 ? target_fn.cljs$core$IFn$_invoke$arity$11(G__43722,G__43723,G__43724,G__43725,G__43726,G__43727,G__43728,G__43729,G__43730,G__43731,G__43732) : target_fn.call(null,G__43722,G__43723,G__43724,G__43725,G__43726,G__43727,G__43728,G__43729,G__43730,G__43731,G__43732));
});
var G__44441__13 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__43733 = a;
var G__43734 = b;
var G__43735 = c;
var G__43736 = d;
var G__43737 = e;
var G__43738 = f;
var G__43739 = g;
var G__43740 = h;
var G__43741 = i;
var G__43742 = j;
var G__43743 = k;
var G__43744 = l;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$12 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$12(G__43733,G__43734,G__43735,G__43736,G__43737,G__43738,G__43739,G__43740,G__43741,G__43742,G__43743,G__43744) : self__.dispatch_fn.call(null,G__43733,G__43734,G__43735,G__43736,G__43737,G__43738,G__43739,G__43740,G__43741,G__43742,G__43743,G__43744));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__43745 = a;
var G__43746 = b;
var G__43747 = c;
var G__43748 = d;
var G__43749 = e;
var G__43750 = f;
var G__43751 = g;
var G__43752 = h;
var G__43753 = i;
var G__43754 = j;
var G__43755 = k;
var G__43756 = l;
return (target_fn.cljs$core$IFn$_invoke$arity$12 ? target_fn.cljs$core$IFn$_invoke$arity$12(G__43745,G__43746,G__43747,G__43748,G__43749,G__43750,G__43751,G__43752,G__43753,G__43754,G__43755,G__43756) : target_fn.call(null,G__43745,G__43746,G__43747,G__43748,G__43749,G__43750,G__43751,G__43752,G__43753,G__43754,G__43755,G__43756));
});
var G__44441__14 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__43757 = a;
var G__43758 = b;
var G__43759 = c;
var G__43760 = d;
var G__43761 = e;
var G__43762 = f;
var G__43763 = g;
var G__43764 = h;
var G__43765 = i;
var G__43766 = j;
var G__43767 = k;
var G__43768 = l;
var G__43769 = m;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$13 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$13(G__43757,G__43758,G__43759,G__43760,G__43761,G__43762,G__43763,G__43764,G__43765,G__43766,G__43767,G__43768,G__43769) : self__.dispatch_fn.call(null,G__43757,G__43758,G__43759,G__43760,G__43761,G__43762,G__43763,G__43764,G__43765,G__43766,G__43767,G__43768,G__43769));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__43770 = a;
var G__43771 = b;
var G__43772 = c;
var G__43773 = d;
var G__43774 = e;
var G__43775 = f;
var G__43776 = g;
var G__43777 = h;
var G__43778 = i;
var G__43779 = j;
var G__43780 = k;
var G__43781 = l;
var G__43782 = m;
return (target_fn.cljs$core$IFn$_invoke$arity$13 ? target_fn.cljs$core$IFn$_invoke$arity$13(G__43770,G__43771,G__43772,G__43773,G__43774,G__43775,G__43776,G__43777,G__43778,G__43779,G__43780,G__43781,G__43782) : target_fn.call(null,G__43770,G__43771,G__43772,G__43773,G__43774,G__43775,G__43776,G__43777,G__43778,G__43779,G__43780,G__43781,G__43782));
});
var G__44441__15 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__43783 = a;
var G__43784 = b;
var G__43785 = c;
var G__43786 = d;
var G__43787 = e;
var G__43788 = f;
var G__43789 = g;
var G__43790 = h;
var G__43791 = i;
var G__43792 = j;
var G__43793 = k;
var G__43794 = l;
var G__43795 = m;
var G__43796 = n;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$14 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$14(G__43783,G__43784,G__43785,G__43786,G__43787,G__43788,G__43789,G__43790,G__43791,G__43792,G__43793,G__43794,G__43795,G__43796) : self__.dispatch_fn.call(null,G__43783,G__43784,G__43785,G__43786,G__43787,G__43788,G__43789,G__43790,G__43791,G__43792,G__43793,G__43794,G__43795,G__43796));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__43797 = a;
var G__43798 = b;
var G__43799 = c;
var G__43800 = d;
var G__43801 = e;
var G__43802 = f;
var G__43803 = g;
var G__43804 = h;
var G__43805 = i;
var G__43806 = j;
var G__43807 = k;
var G__43808 = l;
var G__43809 = m;
var G__43810 = n;
return (target_fn.cljs$core$IFn$_invoke$arity$14 ? target_fn.cljs$core$IFn$_invoke$arity$14(G__43797,G__43798,G__43799,G__43800,G__43801,G__43802,G__43803,G__43804,G__43805,G__43806,G__43807,G__43808,G__43809,G__43810) : target_fn.call(null,G__43797,G__43798,G__43799,G__43800,G__43801,G__43802,G__43803,G__43804,G__43805,G__43806,G__43807,G__43808,G__43809,G__43810));
});
var G__44441__16 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__43811 = a;
var G__43812 = b;
var G__43813 = c;
var G__43814 = d;
var G__43815 = e;
var G__43816 = f;
var G__43817 = g;
var G__43818 = h;
var G__43819 = i;
var G__43820 = j;
var G__43821 = k;
var G__43822 = l;
var G__43823 = m;
var G__43824 = n;
var G__43825 = o;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$15 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$15(G__43811,G__43812,G__43813,G__43814,G__43815,G__43816,G__43817,G__43818,G__43819,G__43820,G__43821,G__43822,G__43823,G__43824,G__43825) : self__.dispatch_fn.call(null,G__43811,G__43812,G__43813,G__43814,G__43815,G__43816,G__43817,G__43818,G__43819,G__43820,G__43821,G__43822,G__43823,G__43824,G__43825));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__43826 = a;
var G__43827 = b;
var G__43828 = c;
var G__43829 = d;
var G__43830 = e;
var G__43831 = f;
var G__43832 = g;
var G__43833 = h;
var G__43834 = i;
var G__43835 = j;
var G__43836 = k;
var G__43837 = l;
var G__43838 = m;
var G__43839 = n;
var G__43840 = o;
return (target_fn.cljs$core$IFn$_invoke$arity$15 ? target_fn.cljs$core$IFn$_invoke$arity$15(G__43826,G__43827,G__43828,G__43829,G__43830,G__43831,G__43832,G__43833,G__43834,G__43835,G__43836,G__43837,G__43838,G__43839,G__43840) : target_fn.call(null,G__43826,G__43827,G__43828,G__43829,G__43830,G__43831,G__43832,G__43833,G__43834,G__43835,G__43836,G__43837,G__43838,G__43839,G__43840));
});
var G__44441__17 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__43841 = a;
var G__43842 = b;
var G__43843 = c;
var G__43844 = d;
var G__43845 = e;
var G__43846 = f;
var G__43847 = g;
var G__43848 = h;
var G__43849 = i;
var G__43850 = j;
var G__43851 = k;
var G__43852 = l;
var G__43853 = m;
var G__43854 = n;
var G__43855 = o;
var G__43856 = p;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$16 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$16(G__43841,G__43842,G__43843,G__43844,G__43845,G__43846,G__43847,G__43848,G__43849,G__43850,G__43851,G__43852,G__43853,G__43854,G__43855,G__43856) : self__.dispatch_fn.call(null,G__43841,G__43842,G__43843,G__43844,G__43845,G__43846,G__43847,G__43848,G__43849,G__43850,G__43851,G__43852,G__43853,G__43854,G__43855,G__43856));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__43857 = a;
var G__43858 = b;
var G__43859 = c;
var G__43860 = d;
var G__43861 = e;
var G__43862 = f;
var G__43863 = g;
var G__43864 = h;
var G__43865 = i;
var G__43866 = j;
var G__43867 = k;
var G__43868 = l;
var G__43869 = m;
var G__43870 = n;
var G__43871 = o;
var G__43872 = p;
return (target_fn.cljs$core$IFn$_invoke$arity$16 ? target_fn.cljs$core$IFn$_invoke$arity$16(G__43857,G__43858,G__43859,G__43860,G__43861,G__43862,G__43863,G__43864,G__43865,G__43866,G__43867,G__43868,G__43869,G__43870,G__43871,G__43872) : target_fn.call(null,G__43857,G__43858,G__43859,G__43860,G__43861,G__43862,G__43863,G__43864,G__43865,G__43866,G__43867,G__43868,G__43869,G__43870,G__43871,G__43872));
});
var G__44441__18 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__43873 = a;
var G__43874 = b;
var G__43875 = c;
var G__43876 = d;
var G__43877 = e;
var G__43878 = f;
var G__43879 = g;
var G__43880 = h;
var G__43881 = i;
var G__43882 = j;
var G__43883 = k;
var G__43884 = l;
var G__43885 = m;
var G__43886 = n;
var G__43887 = o;
var G__43888 = p;
var G__43889 = q;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$17 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$17(G__43873,G__43874,G__43875,G__43876,G__43877,G__43878,G__43879,G__43880,G__43881,G__43882,G__43883,G__43884,G__43885,G__43886,G__43887,G__43888,G__43889) : self__.dispatch_fn.call(null,G__43873,G__43874,G__43875,G__43876,G__43877,G__43878,G__43879,G__43880,G__43881,G__43882,G__43883,G__43884,G__43885,G__43886,G__43887,G__43888,G__43889));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__43890 = a;
var G__43891 = b;
var G__43892 = c;
var G__43893 = d;
var G__43894 = e;
var G__43895 = f;
var G__43896 = g;
var G__43897 = h;
var G__43898 = i;
var G__43899 = j;
var G__43900 = k;
var G__43901 = l;
var G__43902 = m;
var G__43903 = n;
var G__43904 = o;
var G__43905 = p;
var G__43906 = q;
return (target_fn.cljs$core$IFn$_invoke$arity$17 ? target_fn.cljs$core$IFn$_invoke$arity$17(G__43890,G__43891,G__43892,G__43893,G__43894,G__43895,G__43896,G__43897,G__43898,G__43899,G__43900,G__43901,G__43902,G__43903,G__43904,G__43905,G__43906) : target_fn.call(null,G__43890,G__43891,G__43892,G__43893,G__43894,G__43895,G__43896,G__43897,G__43898,G__43899,G__43900,G__43901,G__43902,G__43903,G__43904,G__43905,G__43906));
});
var G__44441__19 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__43907 = a;
var G__43908 = b;
var G__43909 = c;
var G__43910 = d;
var G__43911 = e;
var G__43912 = f;
var G__43913 = g;
var G__43914 = h;
var G__43915 = i;
var G__43916 = j;
var G__43917 = k;
var G__43918 = l;
var G__43919 = m;
var G__43920 = n;
var G__43921 = o;
var G__43922 = p;
var G__43923 = q;
var G__43924 = r;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$18 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$18(G__43907,G__43908,G__43909,G__43910,G__43911,G__43912,G__43913,G__43914,G__43915,G__43916,G__43917,G__43918,G__43919,G__43920,G__43921,G__43922,G__43923,G__43924) : self__.dispatch_fn.call(null,G__43907,G__43908,G__43909,G__43910,G__43911,G__43912,G__43913,G__43914,G__43915,G__43916,G__43917,G__43918,G__43919,G__43920,G__43921,G__43922,G__43923,G__43924));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__43925 = a;
var G__43926 = b;
var G__43927 = c;
var G__43928 = d;
var G__43929 = e;
var G__43930 = f;
var G__43931 = g;
var G__43932 = h;
var G__43933 = i;
var G__43934 = j;
var G__43935 = k;
var G__43936 = l;
var G__43937 = m;
var G__43938 = n;
var G__43939 = o;
var G__43940 = p;
var G__43941 = q;
var G__43942 = r;
return (target_fn.cljs$core$IFn$_invoke$arity$18 ? target_fn.cljs$core$IFn$_invoke$arity$18(G__43925,G__43926,G__43927,G__43928,G__43929,G__43930,G__43931,G__43932,G__43933,G__43934,G__43935,G__43936,G__43937,G__43938,G__43939,G__43940,G__43941,G__43942) : target_fn.call(null,G__43925,G__43926,G__43927,G__43928,G__43929,G__43930,G__43931,G__43932,G__43933,G__43934,G__43935,G__43936,G__43937,G__43938,G__43939,G__43940,G__43941,G__43942));
});
var G__44441__20 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__43943 = a;
var G__43944 = b;
var G__43945 = c;
var G__43946 = d;
var G__43947 = e;
var G__43948 = f;
var G__43949 = g;
var G__43950 = h;
var G__43951 = i;
var G__43952 = j;
var G__43953 = k;
var G__43954 = l;
var G__43955 = m;
var G__43956 = n;
var G__43957 = o;
var G__43958 = p;
var G__43959 = q;
var G__43960 = r;
var G__43961 = s;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$19 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$19(G__43943,G__43944,G__43945,G__43946,G__43947,G__43948,G__43949,G__43950,G__43951,G__43952,G__43953,G__43954,G__43955,G__43956,G__43957,G__43958,G__43959,G__43960,G__43961) : self__.dispatch_fn.call(null,G__43943,G__43944,G__43945,G__43946,G__43947,G__43948,G__43949,G__43950,G__43951,G__43952,G__43953,G__43954,G__43955,G__43956,G__43957,G__43958,G__43959,G__43960,G__43961));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__43962 = a;
var G__43963 = b;
var G__43964 = c;
var G__43965 = d;
var G__43966 = e;
var G__43967 = f;
var G__43968 = g;
var G__43969 = h;
var G__43970 = i;
var G__43971 = j;
var G__43972 = k;
var G__43973 = l;
var G__43974 = m;
var G__43975 = n;
var G__43976 = o;
var G__43977 = p;
var G__43978 = q;
var G__43979 = r;
var G__43980 = s;
return (target_fn.cljs$core$IFn$_invoke$arity$19 ? target_fn.cljs$core$IFn$_invoke$arity$19(G__43962,G__43963,G__43964,G__43965,G__43966,G__43967,G__43968,G__43969,G__43970,G__43971,G__43972,G__43973,G__43974,G__43975,G__43976,G__43977,G__43978,G__43979,G__43980) : target_fn.call(null,G__43962,G__43963,G__43964,G__43965,G__43966,G__43967,G__43968,G__43969,G__43970,G__43971,G__43972,G__43973,G__43974,G__43975,G__43976,G__43977,G__43978,G__43979,G__43980));
});
var G__44441__21 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__43981 = a;
var G__43982 = b;
var G__43983 = c;
var G__43984 = d;
var G__43985 = e;
var G__43986 = f;
var G__43987 = g;
var G__43988 = h;
var G__43989 = i;
var G__43990 = j;
var G__43991 = k;
var G__43992 = l;
var G__43993 = m;
var G__43994 = n;
var G__43995 = o;
var G__43996 = p;
var G__43997 = q;
var G__43998 = r;
var G__43999 = s;
var G__44000 = t;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$20 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$20(G__43981,G__43982,G__43983,G__43984,G__43985,G__43986,G__43987,G__43988,G__43989,G__43990,G__43991,G__43992,G__43993,G__43994,G__43995,G__43996,G__43997,G__43998,G__43999,G__44000) : self__.dispatch_fn.call(null,G__43981,G__43982,G__43983,G__43984,G__43985,G__43986,G__43987,G__43988,G__43989,G__43990,G__43991,G__43992,G__43993,G__43994,G__43995,G__43996,G__43997,G__43998,G__43999,G__44000));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__44001 = a;
var G__44002 = b;
var G__44003 = c;
var G__44004 = d;
var G__44005 = e;
var G__44006 = f;
var G__44007 = g;
var G__44008 = h;
var G__44009 = i;
var G__44010 = j;
var G__44011 = k;
var G__44012 = l;
var G__44013 = m;
var G__44014 = n;
var G__44015 = o;
var G__44016 = p;
var G__44017 = q;
var G__44018 = r;
var G__44019 = s;
var G__44020 = t;
return (target_fn.cljs$core$IFn$_invoke$arity$20 ? target_fn.cljs$core$IFn$_invoke$arity$20(G__44001,G__44002,G__44003,G__44004,G__44005,G__44006,G__44007,G__44008,G__44009,G__44010,G__44011,G__44012,G__44013,G__44014,G__44015,G__44016,G__44017,G__44018,G__44019,G__44020) : target_fn.call(null,G__44001,G__44002,G__44003,G__44004,G__44005,G__44006,G__44007,G__44008,G__44009,G__44010,G__44011,G__44012,G__44013,G__44014,G__44015,G__44016,G__44017,G__44018,G__44019,G__44020));
});
var G__44441__22 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(self__.dispatch_fn,a,b,c,d,cljs.core.array_seq([e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest], 0));
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(target_fn,a,b,c,d,cljs.core.array_seq([e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest], 0));
});
G__44441 = function(self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
switch(arguments.length){
case 1:
return G__44441__1.call(this,self__);
case 2:
return G__44441__2.call(this,self__,a);
case 3:
return G__44441__3.call(this,self__,a,b);
case 4:
return G__44441__4.call(this,self__,a,b,c);
case 5:
return G__44441__5.call(this,self__,a,b,c,d);
case 6:
return G__44441__6.call(this,self__,a,b,c,d,e);
case 7:
return G__44441__7.call(this,self__,a,b,c,d,e,f);
case 8:
return G__44441__8.call(this,self__,a,b,c,d,e,f,g);
case 9:
return G__44441__9.call(this,self__,a,b,c,d,e,f,g,h);
case 10:
return G__44441__10.call(this,self__,a,b,c,d,e,f,g,h,i);
case 11:
return G__44441__11.call(this,self__,a,b,c,d,e,f,g,h,i,j);
case 12:
return G__44441__12.call(this,self__,a,b,c,d,e,f,g,h,i,j,k);
case 13:
return G__44441__13.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l);
case 14:
return G__44441__14.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m);
case 15:
return G__44441__15.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
case 16:
return G__44441__16.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
case 17:
return G__44441__17.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
case 18:
return G__44441__18.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
case 19:
return G__44441__19.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
case 20:
return G__44441__20.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
case 21:
return G__44441__21.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
case 22:
return G__44441__22.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__44441.cljs$core$IFn$_invoke$arity$1 = G__44441__1;
G__44441.cljs$core$IFn$_invoke$arity$2 = G__44441__2;
G__44441.cljs$core$IFn$_invoke$arity$3 = G__44441__3;
G__44441.cljs$core$IFn$_invoke$arity$4 = G__44441__4;
G__44441.cljs$core$IFn$_invoke$arity$5 = G__44441__5;
G__44441.cljs$core$IFn$_invoke$arity$6 = G__44441__6;
G__44441.cljs$core$IFn$_invoke$arity$7 = G__44441__7;
G__44441.cljs$core$IFn$_invoke$arity$8 = G__44441__8;
G__44441.cljs$core$IFn$_invoke$arity$9 = G__44441__9;
G__44441.cljs$core$IFn$_invoke$arity$10 = G__44441__10;
G__44441.cljs$core$IFn$_invoke$arity$11 = G__44441__11;
G__44441.cljs$core$IFn$_invoke$arity$12 = G__44441__12;
G__44441.cljs$core$IFn$_invoke$arity$13 = G__44441__13;
G__44441.cljs$core$IFn$_invoke$arity$14 = G__44441__14;
G__44441.cljs$core$IFn$_invoke$arity$15 = G__44441__15;
G__44441.cljs$core$IFn$_invoke$arity$16 = G__44441__16;
G__44441.cljs$core$IFn$_invoke$arity$17 = G__44441__17;
G__44441.cljs$core$IFn$_invoke$arity$18 = G__44441__18;
G__44441.cljs$core$IFn$_invoke$arity$19 = G__44441__19;
G__44441.cljs$core$IFn$_invoke$arity$20 = G__44441__20;
G__44441.cljs$core$IFn$_invoke$arity$21 = G__44441__21;
G__44441.cljs$core$IFn$_invoke$arity$22 = G__44441__22;
return G__44441;
})()
;

cljs.core.MultiFn.prototype.apply = (function (self__,args43593){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args43593)));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$0 = (function (){
var self__ = this;
var mf = this;
var dispatch_val = (function (){return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$0 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$0() : self__.dispatch_fn.call(null));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

return (target_fn.cljs$core$IFn$_invoke$arity$0 ? target_fn.cljs$core$IFn$_invoke$arity$0() : target_fn.call(null));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$1 = (function (a){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__44021 = a;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$1 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$1(G__44021) : self__.dispatch_fn.call(null,G__44021));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__44022 = a;
return (target_fn.cljs$core$IFn$_invoke$arity$1 ? target_fn.cljs$core$IFn$_invoke$arity$1(G__44022) : target_fn.call(null,G__44022));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$2 = (function (a,b){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__44023 = a;
var G__44024 = b;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$2 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$2(G__44023,G__44024) : self__.dispatch_fn.call(null,G__44023,G__44024));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__44025 = a;
var G__44026 = b;
return (target_fn.cljs$core$IFn$_invoke$arity$2 ? target_fn.cljs$core$IFn$_invoke$arity$2(G__44025,G__44026) : target_fn.call(null,G__44025,G__44026));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$3 = (function (a,b,c){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__44027 = a;
var G__44028 = b;
var G__44029 = c;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$3 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$3(G__44027,G__44028,G__44029) : self__.dispatch_fn.call(null,G__44027,G__44028,G__44029));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__44030 = a;
var G__44031 = b;
var G__44032 = c;
return (target_fn.cljs$core$IFn$_invoke$arity$3 ? target_fn.cljs$core$IFn$_invoke$arity$3(G__44030,G__44031,G__44032) : target_fn.call(null,G__44030,G__44031,G__44032));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$4 = (function (a,b,c,d){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__44033 = a;
var G__44034 = b;
var G__44035 = c;
var G__44036 = d;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$4 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$4(G__44033,G__44034,G__44035,G__44036) : self__.dispatch_fn.call(null,G__44033,G__44034,G__44035,G__44036));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__44037 = a;
var G__44038 = b;
var G__44039 = c;
var G__44040 = d;
return (target_fn.cljs$core$IFn$_invoke$arity$4 ? target_fn.cljs$core$IFn$_invoke$arity$4(G__44037,G__44038,G__44039,G__44040) : target_fn.call(null,G__44037,G__44038,G__44039,G__44040));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$5 = (function (a,b,c,d,e){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__44041 = a;
var G__44042 = b;
var G__44043 = c;
var G__44044 = d;
var G__44045 = e;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$5 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$5(G__44041,G__44042,G__44043,G__44044,G__44045) : self__.dispatch_fn.call(null,G__44041,G__44042,G__44043,G__44044,G__44045));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__44046 = a;
var G__44047 = b;
var G__44048 = c;
var G__44049 = d;
var G__44050 = e;
return (target_fn.cljs$core$IFn$_invoke$arity$5 ? target_fn.cljs$core$IFn$_invoke$arity$5(G__44046,G__44047,G__44048,G__44049,G__44050) : target_fn.call(null,G__44046,G__44047,G__44048,G__44049,G__44050));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$6 = (function (a,b,c,d,e,f){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__44051 = a;
var G__44052 = b;
var G__44053 = c;
var G__44054 = d;
var G__44055 = e;
var G__44056 = f;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$6 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$6(G__44051,G__44052,G__44053,G__44054,G__44055,G__44056) : self__.dispatch_fn.call(null,G__44051,G__44052,G__44053,G__44054,G__44055,G__44056));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__44057 = a;
var G__44058 = b;
var G__44059 = c;
var G__44060 = d;
var G__44061 = e;
var G__44062 = f;
return (target_fn.cljs$core$IFn$_invoke$arity$6 ? target_fn.cljs$core$IFn$_invoke$arity$6(G__44057,G__44058,G__44059,G__44060,G__44061,G__44062) : target_fn.call(null,G__44057,G__44058,G__44059,G__44060,G__44061,G__44062));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$7 = (function (a,b,c,d,e,f,g){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__44063 = a;
var G__44064 = b;
var G__44065 = c;
var G__44066 = d;
var G__44067 = e;
var G__44068 = f;
var G__44069 = g;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$7 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$7(G__44063,G__44064,G__44065,G__44066,G__44067,G__44068,G__44069) : self__.dispatch_fn.call(null,G__44063,G__44064,G__44065,G__44066,G__44067,G__44068,G__44069));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__44070 = a;
var G__44071 = b;
var G__44072 = c;
var G__44073 = d;
var G__44074 = e;
var G__44075 = f;
var G__44076 = g;
return (target_fn.cljs$core$IFn$_invoke$arity$7 ? target_fn.cljs$core$IFn$_invoke$arity$7(G__44070,G__44071,G__44072,G__44073,G__44074,G__44075,G__44076) : target_fn.call(null,G__44070,G__44071,G__44072,G__44073,G__44074,G__44075,G__44076));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$8 = (function (a,b,c,d,e,f,g,h){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__44077 = a;
var G__44078 = b;
var G__44079 = c;
var G__44080 = d;
var G__44081 = e;
var G__44082 = f;
var G__44083 = g;
var G__44084 = h;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$8 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$8(G__44077,G__44078,G__44079,G__44080,G__44081,G__44082,G__44083,G__44084) : self__.dispatch_fn.call(null,G__44077,G__44078,G__44079,G__44080,G__44081,G__44082,G__44083,G__44084));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__44085 = a;
var G__44086 = b;
var G__44087 = c;
var G__44088 = d;
var G__44089 = e;
var G__44090 = f;
var G__44091 = g;
var G__44092 = h;
return (target_fn.cljs$core$IFn$_invoke$arity$8 ? target_fn.cljs$core$IFn$_invoke$arity$8(G__44085,G__44086,G__44087,G__44088,G__44089,G__44090,G__44091,G__44092) : target_fn.call(null,G__44085,G__44086,G__44087,G__44088,G__44089,G__44090,G__44091,G__44092));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$9 = (function (a,b,c,d,e,f,g,h,i){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__44093 = a;
var G__44094 = b;
var G__44095 = c;
var G__44096 = d;
var G__44097 = e;
var G__44098 = f;
var G__44099 = g;
var G__44100 = h;
var G__44101 = i;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$9 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$9(G__44093,G__44094,G__44095,G__44096,G__44097,G__44098,G__44099,G__44100,G__44101) : self__.dispatch_fn.call(null,G__44093,G__44094,G__44095,G__44096,G__44097,G__44098,G__44099,G__44100,G__44101));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__44102 = a;
var G__44103 = b;
var G__44104 = c;
var G__44105 = d;
var G__44106 = e;
var G__44107 = f;
var G__44108 = g;
var G__44109 = h;
var G__44110 = i;
return (target_fn.cljs$core$IFn$_invoke$arity$9 ? target_fn.cljs$core$IFn$_invoke$arity$9(G__44102,G__44103,G__44104,G__44105,G__44106,G__44107,G__44108,G__44109,G__44110) : target_fn.call(null,G__44102,G__44103,G__44104,G__44105,G__44106,G__44107,G__44108,G__44109,G__44110));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$10 = (function (a,b,c,d,e,f,g,h,i,j){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__44111 = a;
var G__44112 = b;
var G__44113 = c;
var G__44114 = d;
var G__44115 = e;
var G__44116 = f;
var G__44117 = g;
var G__44118 = h;
var G__44119 = i;
var G__44120 = j;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$10 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$10(G__44111,G__44112,G__44113,G__44114,G__44115,G__44116,G__44117,G__44118,G__44119,G__44120) : self__.dispatch_fn.call(null,G__44111,G__44112,G__44113,G__44114,G__44115,G__44116,G__44117,G__44118,G__44119,G__44120));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__44121 = a;
var G__44122 = b;
var G__44123 = c;
var G__44124 = d;
var G__44125 = e;
var G__44126 = f;
var G__44127 = g;
var G__44128 = h;
var G__44129 = i;
var G__44130 = j;
return (target_fn.cljs$core$IFn$_invoke$arity$10 ? target_fn.cljs$core$IFn$_invoke$arity$10(G__44121,G__44122,G__44123,G__44124,G__44125,G__44126,G__44127,G__44128,G__44129,G__44130) : target_fn.call(null,G__44121,G__44122,G__44123,G__44124,G__44125,G__44126,G__44127,G__44128,G__44129,G__44130));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$11 = (function (a,b,c,d,e,f,g,h,i,j,k){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__44131 = a;
var G__44132 = b;
var G__44133 = c;
var G__44134 = d;
var G__44135 = e;
var G__44136 = f;
var G__44137 = g;
var G__44138 = h;
var G__44139 = i;
var G__44140 = j;
var G__44141 = k;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$11 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$11(G__44131,G__44132,G__44133,G__44134,G__44135,G__44136,G__44137,G__44138,G__44139,G__44140,G__44141) : self__.dispatch_fn.call(null,G__44131,G__44132,G__44133,G__44134,G__44135,G__44136,G__44137,G__44138,G__44139,G__44140,G__44141));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__44142 = a;
var G__44143 = b;
var G__44144 = c;
var G__44145 = d;
var G__44146 = e;
var G__44147 = f;
var G__44148 = g;
var G__44149 = h;
var G__44150 = i;
var G__44151 = j;
var G__44152 = k;
return (target_fn.cljs$core$IFn$_invoke$arity$11 ? target_fn.cljs$core$IFn$_invoke$arity$11(G__44142,G__44143,G__44144,G__44145,G__44146,G__44147,G__44148,G__44149,G__44150,G__44151,G__44152) : target_fn.call(null,G__44142,G__44143,G__44144,G__44145,G__44146,G__44147,G__44148,G__44149,G__44150,G__44151,G__44152));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$12 = (function (a,b,c,d,e,f,g,h,i,j,k,l){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__44153 = a;
var G__44154 = b;
var G__44155 = c;
var G__44156 = d;
var G__44157 = e;
var G__44158 = f;
var G__44159 = g;
var G__44160 = h;
var G__44161 = i;
var G__44162 = j;
var G__44163 = k;
var G__44164 = l;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$12 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$12(G__44153,G__44154,G__44155,G__44156,G__44157,G__44158,G__44159,G__44160,G__44161,G__44162,G__44163,G__44164) : self__.dispatch_fn.call(null,G__44153,G__44154,G__44155,G__44156,G__44157,G__44158,G__44159,G__44160,G__44161,G__44162,G__44163,G__44164));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__44165 = a;
var G__44166 = b;
var G__44167 = c;
var G__44168 = d;
var G__44169 = e;
var G__44170 = f;
var G__44171 = g;
var G__44172 = h;
var G__44173 = i;
var G__44174 = j;
var G__44175 = k;
var G__44176 = l;
return (target_fn.cljs$core$IFn$_invoke$arity$12 ? target_fn.cljs$core$IFn$_invoke$arity$12(G__44165,G__44166,G__44167,G__44168,G__44169,G__44170,G__44171,G__44172,G__44173,G__44174,G__44175,G__44176) : target_fn.call(null,G__44165,G__44166,G__44167,G__44168,G__44169,G__44170,G__44171,G__44172,G__44173,G__44174,G__44175,G__44176));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$13 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__44177 = a;
var G__44178 = b;
var G__44179 = c;
var G__44180 = d;
var G__44181 = e;
var G__44182 = f;
var G__44183 = g;
var G__44184 = h;
var G__44185 = i;
var G__44186 = j;
var G__44187 = k;
var G__44188 = l;
var G__44189 = m;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$13 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$13(G__44177,G__44178,G__44179,G__44180,G__44181,G__44182,G__44183,G__44184,G__44185,G__44186,G__44187,G__44188,G__44189) : self__.dispatch_fn.call(null,G__44177,G__44178,G__44179,G__44180,G__44181,G__44182,G__44183,G__44184,G__44185,G__44186,G__44187,G__44188,G__44189));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__44190 = a;
var G__44191 = b;
var G__44192 = c;
var G__44193 = d;
var G__44194 = e;
var G__44195 = f;
var G__44196 = g;
var G__44197 = h;
var G__44198 = i;
var G__44199 = j;
var G__44200 = k;
var G__44201 = l;
var G__44202 = m;
return (target_fn.cljs$core$IFn$_invoke$arity$13 ? target_fn.cljs$core$IFn$_invoke$arity$13(G__44190,G__44191,G__44192,G__44193,G__44194,G__44195,G__44196,G__44197,G__44198,G__44199,G__44200,G__44201,G__44202) : target_fn.call(null,G__44190,G__44191,G__44192,G__44193,G__44194,G__44195,G__44196,G__44197,G__44198,G__44199,G__44200,G__44201,G__44202));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$14 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__44203 = a;
var G__44204 = b;
var G__44205 = c;
var G__44206 = d;
var G__44207 = e;
var G__44208 = f;
var G__44209 = g;
var G__44210 = h;
var G__44211 = i;
var G__44212 = j;
var G__44213 = k;
var G__44214 = l;
var G__44215 = m;
var G__44216 = n;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$14 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$14(G__44203,G__44204,G__44205,G__44206,G__44207,G__44208,G__44209,G__44210,G__44211,G__44212,G__44213,G__44214,G__44215,G__44216) : self__.dispatch_fn.call(null,G__44203,G__44204,G__44205,G__44206,G__44207,G__44208,G__44209,G__44210,G__44211,G__44212,G__44213,G__44214,G__44215,G__44216));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__44217 = a;
var G__44218 = b;
var G__44219 = c;
var G__44220 = d;
var G__44221 = e;
var G__44222 = f;
var G__44223 = g;
var G__44224 = h;
var G__44225 = i;
var G__44226 = j;
var G__44227 = k;
var G__44228 = l;
var G__44229 = m;
var G__44230 = n;
return (target_fn.cljs$core$IFn$_invoke$arity$14 ? target_fn.cljs$core$IFn$_invoke$arity$14(G__44217,G__44218,G__44219,G__44220,G__44221,G__44222,G__44223,G__44224,G__44225,G__44226,G__44227,G__44228,G__44229,G__44230) : target_fn.call(null,G__44217,G__44218,G__44219,G__44220,G__44221,G__44222,G__44223,G__44224,G__44225,G__44226,G__44227,G__44228,G__44229,G__44230));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$15 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__44231 = a;
var G__44232 = b;
var G__44233 = c;
var G__44234 = d;
var G__44235 = e;
var G__44236 = f;
var G__44237 = g;
var G__44238 = h;
var G__44239 = i;
var G__44240 = j;
var G__44241 = k;
var G__44242 = l;
var G__44243 = m;
var G__44244 = n;
var G__44245 = o;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$15 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$15(G__44231,G__44232,G__44233,G__44234,G__44235,G__44236,G__44237,G__44238,G__44239,G__44240,G__44241,G__44242,G__44243,G__44244,G__44245) : self__.dispatch_fn.call(null,G__44231,G__44232,G__44233,G__44234,G__44235,G__44236,G__44237,G__44238,G__44239,G__44240,G__44241,G__44242,G__44243,G__44244,G__44245));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__44246 = a;
var G__44247 = b;
var G__44248 = c;
var G__44249 = d;
var G__44250 = e;
var G__44251 = f;
var G__44252 = g;
var G__44253 = h;
var G__44254 = i;
var G__44255 = j;
var G__44256 = k;
var G__44257 = l;
var G__44258 = m;
var G__44259 = n;
var G__44260 = o;
return (target_fn.cljs$core$IFn$_invoke$arity$15 ? target_fn.cljs$core$IFn$_invoke$arity$15(G__44246,G__44247,G__44248,G__44249,G__44250,G__44251,G__44252,G__44253,G__44254,G__44255,G__44256,G__44257,G__44258,G__44259,G__44260) : target_fn.call(null,G__44246,G__44247,G__44248,G__44249,G__44250,G__44251,G__44252,G__44253,G__44254,G__44255,G__44256,G__44257,G__44258,G__44259,G__44260));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$16 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__44261 = a;
var G__44262 = b;
var G__44263 = c;
var G__44264 = d;
var G__44265 = e;
var G__44266 = f;
var G__44267 = g;
var G__44268 = h;
var G__44269 = i;
var G__44270 = j;
var G__44271 = k;
var G__44272 = l;
var G__44273 = m;
var G__44274 = n;
var G__44275 = o;
var G__44276 = p;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$16 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$16(G__44261,G__44262,G__44263,G__44264,G__44265,G__44266,G__44267,G__44268,G__44269,G__44270,G__44271,G__44272,G__44273,G__44274,G__44275,G__44276) : self__.dispatch_fn.call(null,G__44261,G__44262,G__44263,G__44264,G__44265,G__44266,G__44267,G__44268,G__44269,G__44270,G__44271,G__44272,G__44273,G__44274,G__44275,G__44276));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__44277 = a;
var G__44278 = b;
var G__44279 = c;
var G__44280 = d;
var G__44281 = e;
var G__44282 = f;
var G__44283 = g;
var G__44284 = h;
var G__44285 = i;
var G__44286 = j;
var G__44287 = k;
var G__44288 = l;
var G__44289 = m;
var G__44290 = n;
var G__44291 = o;
var G__44292 = p;
return (target_fn.cljs$core$IFn$_invoke$arity$16 ? target_fn.cljs$core$IFn$_invoke$arity$16(G__44277,G__44278,G__44279,G__44280,G__44281,G__44282,G__44283,G__44284,G__44285,G__44286,G__44287,G__44288,G__44289,G__44290,G__44291,G__44292) : target_fn.call(null,G__44277,G__44278,G__44279,G__44280,G__44281,G__44282,G__44283,G__44284,G__44285,G__44286,G__44287,G__44288,G__44289,G__44290,G__44291,G__44292));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$17 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__44293 = a;
var G__44294 = b;
var G__44295 = c;
var G__44296 = d;
var G__44297 = e;
var G__44298 = f;
var G__44299 = g;
var G__44300 = h;
var G__44301 = i;
var G__44302 = j;
var G__44303 = k;
var G__44304 = l;
var G__44305 = m;
var G__44306 = n;
var G__44307 = o;
var G__44308 = p;
var G__44309 = q;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$17 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$17(G__44293,G__44294,G__44295,G__44296,G__44297,G__44298,G__44299,G__44300,G__44301,G__44302,G__44303,G__44304,G__44305,G__44306,G__44307,G__44308,G__44309) : self__.dispatch_fn.call(null,G__44293,G__44294,G__44295,G__44296,G__44297,G__44298,G__44299,G__44300,G__44301,G__44302,G__44303,G__44304,G__44305,G__44306,G__44307,G__44308,G__44309));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__44310 = a;
var G__44311 = b;
var G__44312 = c;
var G__44313 = d;
var G__44314 = e;
var G__44315 = f;
var G__44316 = g;
var G__44317 = h;
var G__44318 = i;
var G__44319 = j;
var G__44320 = k;
var G__44321 = l;
var G__44322 = m;
var G__44323 = n;
var G__44324 = o;
var G__44325 = p;
var G__44326 = q;
return (target_fn.cljs$core$IFn$_invoke$arity$17 ? target_fn.cljs$core$IFn$_invoke$arity$17(G__44310,G__44311,G__44312,G__44313,G__44314,G__44315,G__44316,G__44317,G__44318,G__44319,G__44320,G__44321,G__44322,G__44323,G__44324,G__44325,G__44326) : target_fn.call(null,G__44310,G__44311,G__44312,G__44313,G__44314,G__44315,G__44316,G__44317,G__44318,G__44319,G__44320,G__44321,G__44322,G__44323,G__44324,G__44325,G__44326));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$18 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__44327 = a;
var G__44328 = b;
var G__44329 = c;
var G__44330 = d;
var G__44331 = e;
var G__44332 = f;
var G__44333 = g;
var G__44334 = h;
var G__44335 = i;
var G__44336 = j;
var G__44337 = k;
var G__44338 = l;
var G__44339 = m;
var G__44340 = n;
var G__44341 = o;
var G__44342 = p;
var G__44343 = q;
var G__44344 = r;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$18 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$18(G__44327,G__44328,G__44329,G__44330,G__44331,G__44332,G__44333,G__44334,G__44335,G__44336,G__44337,G__44338,G__44339,G__44340,G__44341,G__44342,G__44343,G__44344) : self__.dispatch_fn.call(null,G__44327,G__44328,G__44329,G__44330,G__44331,G__44332,G__44333,G__44334,G__44335,G__44336,G__44337,G__44338,G__44339,G__44340,G__44341,G__44342,G__44343,G__44344));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__44345 = a;
var G__44346 = b;
var G__44347 = c;
var G__44348 = d;
var G__44349 = e;
var G__44350 = f;
var G__44351 = g;
var G__44352 = h;
var G__44353 = i;
var G__44354 = j;
var G__44355 = k;
var G__44356 = l;
var G__44357 = m;
var G__44358 = n;
var G__44359 = o;
var G__44360 = p;
var G__44361 = q;
var G__44362 = r;
return (target_fn.cljs$core$IFn$_invoke$arity$18 ? target_fn.cljs$core$IFn$_invoke$arity$18(G__44345,G__44346,G__44347,G__44348,G__44349,G__44350,G__44351,G__44352,G__44353,G__44354,G__44355,G__44356,G__44357,G__44358,G__44359,G__44360,G__44361,G__44362) : target_fn.call(null,G__44345,G__44346,G__44347,G__44348,G__44349,G__44350,G__44351,G__44352,G__44353,G__44354,G__44355,G__44356,G__44357,G__44358,G__44359,G__44360,G__44361,G__44362));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$19 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__44363 = a;
var G__44364 = b;
var G__44365 = c;
var G__44366 = d;
var G__44367 = e;
var G__44368 = f;
var G__44369 = g;
var G__44370 = h;
var G__44371 = i;
var G__44372 = j;
var G__44373 = k;
var G__44374 = l;
var G__44375 = m;
var G__44376 = n;
var G__44377 = o;
var G__44378 = p;
var G__44379 = q;
var G__44380 = r;
var G__44381 = s;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$19 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$19(G__44363,G__44364,G__44365,G__44366,G__44367,G__44368,G__44369,G__44370,G__44371,G__44372,G__44373,G__44374,G__44375,G__44376,G__44377,G__44378,G__44379,G__44380,G__44381) : self__.dispatch_fn.call(null,G__44363,G__44364,G__44365,G__44366,G__44367,G__44368,G__44369,G__44370,G__44371,G__44372,G__44373,G__44374,G__44375,G__44376,G__44377,G__44378,G__44379,G__44380,G__44381));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__44382 = a;
var G__44383 = b;
var G__44384 = c;
var G__44385 = d;
var G__44386 = e;
var G__44387 = f;
var G__44388 = g;
var G__44389 = h;
var G__44390 = i;
var G__44391 = j;
var G__44392 = k;
var G__44393 = l;
var G__44394 = m;
var G__44395 = n;
var G__44396 = o;
var G__44397 = p;
var G__44398 = q;
var G__44399 = r;
var G__44400 = s;
return (target_fn.cljs$core$IFn$_invoke$arity$19 ? target_fn.cljs$core$IFn$_invoke$arity$19(G__44382,G__44383,G__44384,G__44385,G__44386,G__44387,G__44388,G__44389,G__44390,G__44391,G__44392,G__44393,G__44394,G__44395,G__44396,G__44397,G__44398,G__44399,G__44400) : target_fn.call(null,G__44382,G__44383,G__44384,G__44385,G__44386,G__44387,G__44388,G__44389,G__44390,G__44391,G__44392,G__44393,G__44394,G__44395,G__44396,G__44397,G__44398,G__44399,G__44400));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$20 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__44401 = a;
var G__44402 = b;
var G__44403 = c;
var G__44404 = d;
var G__44405 = e;
var G__44406 = f;
var G__44407 = g;
var G__44408 = h;
var G__44409 = i;
var G__44410 = j;
var G__44411 = k;
var G__44412 = l;
var G__44413 = m;
var G__44414 = n;
var G__44415 = o;
var G__44416 = p;
var G__44417 = q;
var G__44418 = r;
var G__44419 = s;
var G__44420 = t;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$20 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$20(G__44401,G__44402,G__44403,G__44404,G__44405,G__44406,G__44407,G__44408,G__44409,G__44410,G__44411,G__44412,G__44413,G__44414,G__44415,G__44416,G__44417,G__44418,G__44419,G__44420) : self__.dispatch_fn.call(null,G__44401,G__44402,G__44403,G__44404,G__44405,G__44406,G__44407,G__44408,G__44409,G__44410,G__44411,G__44412,G__44413,G__44414,G__44415,G__44416,G__44417,G__44418,G__44419,G__44420));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__44421 = a;
var G__44422 = b;
var G__44423 = c;
var G__44424 = d;
var G__44425 = e;
var G__44426 = f;
var G__44427 = g;
var G__44428 = h;
var G__44429 = i;
var G__44430 = j;
var G__44431 = k;
var G__44432 = l;
var G__44433 = m;
var G__44434 = n;
var G__44435 = o;
var G__44436 = p;
var G__44437 = q;
var G__44438 = r;
var G__44439 = s;
var G__44440 = t;
return (target_fn.cljs$core$IFn$_invoke$arity$20 ? target_fn.cljs$core$IFn$_invoke$arity$20(G__44421,G__44422,G__44423,G__44424,G__44425,G__44426,G__44427,G__44428,G__44429,G__44430,G__44431,G__44432,G__44433,G__44434,G__44435,G__44436,G__44437,G__44438,G__44439,G__44440) : target_fn.call(null,G__44421,G__44422,G__44423,G__44424,G__44425,G__44426,G__44427,G__44428,G__44429,G__44430,G__44431,G__44432,G__44433,G__44434,G__44435,G__44436,G__44437,G__44438,G__44439,G__44440));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$21 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
var self__ = this;
var mf = this;
var dispatch_val = cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(self__.dispatch_fn,a,b,c,d,cljs.core.array_seq([e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest], 0));
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(target_fn,a,b,c,d,cljs.core.array_seq([e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest], 0));
});

cljs.core.MultiFn.cljs$lang$type = true;

cljs.core.MultiFn.cljs$lang$ctorStr = "cljs.core/MultiFn";

cljs.core.MultiFn.cljs$lang$ctorPrWriter = (function (this__24859__auto__,writer__24860__auto__,opt__24861__auto__){
return cljs.core._write(writer__24860__auto__,"cljs.core/MultiFn");
});

cljs.core.__GT_MultiFn = (function __GT_MultiFn(name,dispatch_fn,default_dispatch_val,hierarchy,method_table,prefer_table,method_cache,cached_hierarchy){
return (new cljs.core.MultiFn(name,dispatch_fn,default_dispatch_val,hierarchy,method_table,prefer_table,method_cache,cached_hierarchy));
});

/**
* Removes all of the methods of multimethod.
*/
cljs.core.remove_all_methods = (function remove_all_methods(multifn){
return cljs.core._reset(multifn);
});
/**
* Removes the method of multimethod associated with dispatch-value.
*/
cljs.core.remove_method = (function remove_method(multifn,dispatch_val){
return cljs.core._remove_method(multifn,dispatch_val);
});
/**
* Causes the multimethod to prefer matches of dispatch-val-x over dispatch-val-y
* when there is a conflict
*/
cljs.core.prefer_method = (function prefer_method(multifn,dispatch_val_x,dispatch_val_y){
return cljs.core._prefer_method(multifn,dispatch_val_x,dispatch_val_y);
});
/**
* Given a multimethod, returns a map of dispatch values -> dispatch fns
*/
cljs.core.methods$ = (function methods$(multifn){
return cljs.core._methods(multifn);
});
/**
* Given a multimethod and a dispatch value, returns the dispatch fn
* that would apply to that value, or nil if none apply and no default
*/
cljs.core.get_method = (function get_method(multifn,dispatch_val){
return cljs.core._get_method(multifn,dispatch_val);
});
/**
* Given a multimethod, returns a map of preferred value -> set of other values
*/
cljs.core.prefers = (function prefers(multifn){
return cljs.core._prefers(multifn);
});

/**
* @constructor
*/
cljs.core.UUID = (function (uuid){
this.uuid = uuid;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 2153775104;
})
cljs.core.UUID.prototype.cljs$core$IHash$_hash$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
var G__44442 = cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([this$__$1], 0));
return goog.string.hashCode(G__44442);
});

cljs.core.UUID.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (_,writer,___$1){
var self__ = this;
var ___$2 = this;
return cljs.core._write(writer,[cljs.core.str("#uuid \""),cljs.core.str(self__.uuid),cljs.core.str("\"")].join(''));
});

cljs.core.UUID.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (_,other){
var self__ = this;
var ___$1 = this;
return ((other instanceof cljs.core.UUID)) && ((self__.uuid === other.uuid));
});

cljs.core.UUID.prototype.toString = (function (){
var self__ = this;
var _ = this;
return self__.uuid;
});

cljs.core.UUID.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.UUID.cljs$lang$type = true;

cljs.core.UUID.cljs$lang$ctorStr = "cljs.core/UUID";

cljs.core.UUID.cljs$lang$ctorPrWriter = (function (this__24859__auto__,writer__24860__auto__,opt__24861__auto__){
return cljs.core._write(writer__24860__auto__,"cljs.core/UUID");
});

cljs.core.__GT_UUID = (function __GT_UUID(uuid){
return (new cljs.core.UUID(uuid));
});


/**
* @constructor
*/
cljs.core.ExceptionInfo = (function (message,data,cause){
this.message = message;
this.data = data;
this.cause = cause;
})

cljs.core.ExceptionInfo.cljs$lang$type = true;

cljs.core.ExceptionInfo.cljs$lang$ctorStr = "cljs.core/ExceptionInfo";

cljs.core.ExceptionInfo.cljs$lang$ctorPrWriter = (function (this__24859__auto__,writer__24860__auto__,opt__24861__auto__){
return cljs.core._write(writer__24860__auto__,"cljs.core/ExceptionInfo");
});

cljs.core.__GT_ExceptionInfo = (function __GT_ExceptionInfo(message,data,cause){
return (new cljs.core.ExceptionInfo(message,data,cause));
});

cljs.core.ExceptionInfo.prototype = (new Error());
cljs.core.ExceptionInfo.prototype.constructor = cljs.core.ExceptionInfo;
/**
* Alpha - subject to change.
* Create an instance of ExceptionInfo, an Error type that carries a
* map of additional data.
*/
cljs.core.ex_info = (function() {
var ex_info = null;
var ex_info__2 = (function (msg,map){
return (new cljs.core.ExceptionInfo(msg,map,null));
});
var ex_info__3 = (function (msg,map,cause){
return (new cljs.core.ExceptionInfo(msg,map,cause));
});
ex_info = function(msg,map,cause){
switch(arguments.length){
case 2:
return ex_info__2.call(this,msg,map);
case 3:
return ex_info__3.call(this,msg,map,cause);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
ex_info.cljs$core$IFn$_invoke$arity$2 = ex_info__2;
ex_info.cljs$core$IFn$_invoke$arity$3 = ex_info__3;
return ex_info;
})()
;
/**
* Alpha - subject to change.
* Returns exception data (a map) if ex is an ExceptionInfo.
* Otherwise returns nil.
*/
cljs.core.ex_data = (function ex_data(ex){
if((ex instanceof cljs.core.ExceptionInfo)){
return ex.data;
} else {
return null;
}
});
/**
* Alpha - subject to change.
* Returns the message attached to the given Error / ExceptionInfo object.
* For non-Errors returns nil.
*/
cljs.core.ex_message = (function ex_message(ex){
if((ex instanceof Error)){
return ex.message;
} else {
return null;
}
});
/**
* Alpha - subject to change.
* Returns exception cause (an Error / ExceptionInfo) if ex is an
* ExceptionInfo.
* Otherwise returns nil.
*/
cljs.core.ex_cause = (function ex_cause(ex){
if((ex instanceof cljs.core.ExceptionInfo)){
return ex.cause;
} else {
return null;
}
});
/**
* Returns an JavaScript compatible comparator based upon pred.
*/
cljs.core.comparator = (function comparator(pred){
return (function (x,y){
if(cljs.core.truth_((function (){var G__44447 = x;
var G__44448 = y;
return (pred.cljs$core$IFn$_invoke$arity$2 ? pred.cljs$core$IFn$_invoke$arity$2(G__44447,G__44448) : pred.call(null,G__44447,G__44448));
})())){
return (-1);
} else {
if(cljs.core.truth_((function (){var G__44449 = y;
var G__44450 = x;
return (pred.cljs$core$IFn$_invoke$arity$2 ? pred.cljs$core$IFn$_invoke$arity$2(G__44449,G__44450) : pred.call(null,G__44449,G__44450));
})())){
return (1);
} else {
return (0);

}
}
});
});
cljs.core.special_symbol_QMARK_ = (function special_symbol_QMARK_(x){
return cljs.core.contains_QMARK_(new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 19, [new cljs.core.Symbol(null,"&","&",-2144855648,null),null,new cljs.core.Symbol(null,"defrecord*","defrecord*",-1936366207,null),null,new cljs.core.Symbol(null,"try","try",-1273693247,null),null,new cljs.core.Symbol(null,"loop*","loop*",615029416,null),null,new cljs.core.Symbol(null,"do","do",1686842252,null),null,new cljs.core.Symbol(null,"letfn*","letfn*",-110097810,null),null,new cljs.core.Symbol(null,"if","if",1181717262,null),null,new cljs.core.Symbol(null,"new","new",-444906321,null),null,new cljs.core.Symbol(null,"ns","ns",2082130287,null),null,new cljs.core.Symbol(null,"deftype*","deftype*",962659890,null),null,new cljs.core.Symbol(null,"let*","let*",1920721458,null),null,new cljs.core.Symbol(null,"js*","js*",-1134233646,null),null,new cljs.core.Symbol(null,"fn*","fn*",-752876845,null),null,new cljs.core.Symbol(null,"recur","recur",1202958259,null),null,new cljs.core.Symbol(null,"set!","set!",250714521,null),null,new cljs.core.Symbol(null,".",".",1975675962,null),null,new cljs.core.Symbol(null,"quote","quote",1377916282,null),null,new cljs.core.Symbol(null,"throw","throw",595905694,null),null,new cljs.core.Symbol(null,"def","def",597100991,null),null], null), null),x);
});
/**
* test [v] finds fn at key :test in var metadata and calls it,
* presuming failure will throw exception
*/
cljs.core.test = (function test(v){
var f = v.cljs$lang$test;
if(cljs.core.truth_(f)){
(f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));

return new cljs.core.Keyword(null,"ok","ok",967785236);
} else {
return new cljs.core.Keyword(null,"no-test","no-test",-1679482642);
}
});
