// Compiled by ClojureScript 0.0-2665 {:static-fns true}
goog.provide('cljs.core');
goog.require('goog.string.StringBuffer');
goog.require('goog.array');
goog.require('goog.object');
goog.require('goog.string');
cljs.core._STAR_clojurescript_version_STAR_ = "0.0-2665";
cljs.core._STAR_unchecked_if_STAR_ = false;
if(typeof cljs.core._STAR_print_fn_STAR_ !== 'undefined'){
} else {
/**
* Each runtime environment provides a different way to print output.
* Whatever function *print-fn* is bound to will be passed any
* Strings which should be printed.
*/
cljs.core._STAR_print_fn_STAR_ = (function _STAR_print_fn_STAR_(_){
throw (new Error("No *print-fn* fn set for evaluation environment"));
});
}
/**
* Set *print-fn* to f.
*/
cljs.core.set_print_fn_BANG_ = (function set_print_fn_BANG_(f){
return cljs.core._STAR_print_fn_STAR_ = f;
});
cljs.core._STAR_flush_on_newline_STAR_ = true;
cljs.core._STAR_print_newline_STAR_ = true;
cljs.core._STAR_print_readably_STAR_ = true;
cljs.core._STAR_print_meta_STAR_ = false;
cljs.core._STAR_print_dup_STAR_ = false;
cljs.core._STAR_print_length_STAR_ = null;
cljs.core._STAR_print_level_STAR_ = null;
if(typeof cljs.core._STAR_loaded_libs_STAR_ !== 'undefined'){
} else {
cljs.core._STAR_loaded_libs_STAR_ = null;
}
cljs.core.pr_opts = (function pr_opts(){
return new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null,"flush-on-newline","flush-on-newline",-151457939),cljs.core._STAR_flush_on_newline_STAR_,new cljs.core.Keyword(null,"readably","readably",1129599760),cljs.core._STAR_print_readably_STAR_,new cljs.core.Keyword(null,"meta","meta",1499536964),cljs.core._STAR_print_meta_STAR_,new cljs.core.Keyword(null,"dup","dup",556298533),cljs.core._STAR_print_dup_STAR_,new cljs.core.Keyword(null,"print-length","print-length",1931866356),cljs.core._STAR_print_length_STAR_], null);
});
/**
* Set *print-fn* to console.log
*/
cljs.core.enable_console_print_BANG_ = (function enable_console_print_BANG_(){
cljs.core._STAR_print_newline_STAR_ = false;

return cljs.core._STAR_print_fn_STAR_ = (function() { 
var G__25793__delegate = function (args){
return console.log.apply(console,(function (){var G__25792 = args;
return (cljs.core.into_array.cljs$core$IFn$_invoke$arity$1 ? cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(G__25792) : cljs.core.into_array.call(null,G__25792));
})());
};
var G__25793 = function (var_args){
var args = null;
if (arguments.length > 0) {
var G__25794__i = 0, G__25794__a = new Array(arguments.length -  0);
while (G__25794__i < G__25794__a.length) {G__25794__a[G__25794__i] = arguments[G__25794__i + 0]; ++G__25794__i;}
  args = new cljs.core.IndexedSeq(G__25794__a,0);
} 
return G__25793__delegate.call(this,args);};
G__25793.cljs$lang$maxFixedArity = 0;
G__25793.cljs$lang$applyTo = (function (arglist__25795){
var args = cljs.core.seq(arglist__25795);
return G__25793__delegate(args);
});
G__25793.cljs$core$IFn$_invoke$arity$variadic = G__25793__delegate;
return G__25793;
})()
;
});
/**
* Internal - do not use!
*/
cljs.core.truth_ = (function truth_(x){
return (x != null && x !== false);
});
cljs.core.not_native = null;

/**
* Tests if 2 arguments are the same object
*/
cljs.core.identical_QMARK_ = (function identical_QMARK_(x,y){
return (x === y);
});
/**
* Returns true if x is nil, false otherwise.
*/
cljs.core.nil_QMARK_ = (function nil_QMARK_(x){
return (x == null);
});
cljs.core.array_QMARK_ = (function array_QMARK_(x){
return x instanceof Array;
});
cljs.core.number_QMARK_ = (function number_QMARK_(n){
return typeof n === 'number';
});
/**
* Returns true if x is logical false, false otherwise.
*/
cljs.core.not = (function not(x){
if(cljs.core.truth_(x)){
return false;
} else {
return true;
}
});
/**
* Returns true if x is not nil, false otherwise.
*/
cljs.core.some_QMARK_ = (function some_QMARK_(x){
return !((x == null));
});
cljs.core.object_QMARK_ = (function object_QMARK_(x){
if(!((x == null))){
return (x.constructor === Object);
} else {
return false;
}
});
cljs.core.string_QMARK_ = (function string_QMARK_(x){
var G__25797 = x;
return goog.isString(G__25797);
});
/**
* Internal - do not use!
*/
cljs.core.native_satisfies_QMARK_ = (function native_satisfies_QMARK_(p,x){
var x__$1 = (((x == null))?null:x);
if((p[(function (){var G__25799 = x__$1;
return goog.typeOf(G__25799);
})()])){
return true;
} else {
if((p["_"])){
return true;
} else {
return false;

}
}
});
cljs.core.is_proto_ = (function is_proto_(x){
return (x.constructor.prototype === x);
});
/**
* When compiled for a command-line target, whatever
* function *main-fn* is set to will be called with the command-line
* argv as arguments
*/
cljs.core._STAR_main_cli_fn_STAR_ = null;
cljs.core.type = (function type(x){
if((x == null)){
return null;
} else {
return x.constructor;
}
});
cljs.core.missing_protocol = (function missing_protocol(proto,obj){
var ty = cljs.core.type(obj);
var ty__$1 = (cljs.core.truth_((function (){var and__24262__auto__ = ty;
if(cljs.core.truth_(and__24262__auto__)){
return ty.cljs$lang$type;
} else {
return and__24262__auto__;
}
})())?ty.cljs$lang$ctorStr:(function (){var G__25801 = obj;
return goog.typeOf(G__25801);
})());
return (new Error(["No protocol method ",proto," defined for type ",ty__$1,": ",obj].join("")));
});
cljs.core.type__GT_str = (function type__GT_str(ty){
var temp__4124__auto__ = ty.cljs$lang$ctorStr;
if(cljs.core.truth_(temp__4124__auto__)){
var s = temp__4124__auto__;
return s;
} else {
return [cljs.core.str(ty)].join('');
}
});
if((typeof Symbol !== 'undefined') && (((function (){var G__25803 = Symbol;
return goog.typeOf(G__25803);
})() === "function"))){
cljs.core.ITER_SYMBOL = Symbol.iterator;
} else {
cljs.core.ITER_SYMBOL = "@@iterator";
}
cljs.core.make_array = (function() {
var make_array = null;
var make_array__1 = (function (size){
return (new Array(size));
});
var make_array__2 = (function (type,size){
return make_array.cljs$core$IFn$_invoke$arity$1(size);
});
make_array = function(type,size){
switch(arguments.length){
case 1:
return make_array__1.call(this,type);
case 2:
return make_array__2.call(this,type,size);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
make_array.cljs$core$IFn$_invoke$arity$1 = make_array__1;
make_array.cljs$core$IFn$_invoke$arity$2 = make_array__2;
return make_array;
})()
;
/**
* Returns a javascript array, cloned from the passed in array
*/
cljs.core.aclone = (function aclone(arr){
var len = arr.length;
var new_arr = (new Array(len));
var n__25161__auto___25805 = len;
var i_25806 = (0);
while(true){
if((i_25806 < n__25161__auto___25805)){
(new_arr[i_25806] = (arr[i_25806]));

var G__25807 = (i_25806 + (1));
i_25806 = G__25807;
continue;
} else {
}
break;
}

return new_arr;
});
/**
* Creates a new javascript array.
* @param {...*} var_args
*/
cljs.core.array = (function array(var_args){
var a = (new Array(arguments.length));
var i = (0);
while(true){
if((i < a.length)){
(a[i] = (arguments[i]));

var G__25808 = (i + (1));
i = G__25808;
continue;
} else {
return a;
}
break;
}
});
/**
* Returns the value at the index.
* @param {...*} var_args
*/
cljs.core.aget = (function() {
var aget = null;
var aget__2 = (function (array,i){
return (array[i]);
});
var aget__3 = (function() { 
var G__25817__delegate = function (array,i,idxs){
var G__25814 = aget;
var G__25815 = aget.cljs$core$IFn$_invoke$arity$2(array,i);
var G__25816 = idxs;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$3 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$3(G__25814,G__25815,G__25816) : cljs.core.apply.call(null,G__25814,G__25815,G__25816));
};
var G__25817 = function (array,i,var_args){
var idxs = null;
if (arguments.length > 2) {
var G__25818__i = 0, G__25818__a = new Array(arguments.length -  2);
while (G__25818__i < G__25818__a.length) {G__25818__a[G__25818__i] = arguments[G__25818__i + 2]; ++G__25818__i;}
  idxs = new cljs.core.IndexedSeq(G__25818__a,0);
} 
return G__25817__delegate.call(this,array,i,idxs);};
G__25817.cljs$lang$maxFixedArity = 2;
G__25817.cljs$lang$applyTo = (function (arglist__25819){
var array = cljs.core.first(arglist__25819);
arglist__25819 = cljs.core.next(arglist__25819);
var i = cljs.core.first(arglist__25819);
var idxs = cljs.core.rest(arglist__25819);
return G__25817__delegate(array,i,idxs);
});
G__25817.cljs$core$IFn$_invoke$arity$variadic = G__25817__delegate;
return G__25817;
})()
;
aget = function(array,i,var_args){
var idxs = var_args;
switch(arguments.length){
case 2:
return aget__2.call(this,array,i);
default:
var G__25820 = null;
if (arguments.length > 2) {
var G__25821__i = 0, G__25821__a = new Array(arguments.length -  2);
while (G__25821__i < G__25821__a.length) {G__25821__a[G__25821__i] = arguments[G__25821__i + 2]; ++G__25821__i;}
G__25820 = new cljs.core.IndexedSeq(G__25821__a,0);
}
return aget__3.cljs$core$IFn$_invoke$arity$variadic(array,i, G__25820);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
aget.cljs$lang$maxFixedArity = 2;
aget.cljs$lang$applyTo = aget__3.cljs$lang$applyTo;
aget.cljs$core$IFn$_invoke$arity$2 = aget__2;
aget.cljs$core$IFn$_invoke$arity$variadic = aget__3.cljs$core$IFn$_invoke$arity$variadic;
return aget;
})()
;
/**
* Sets the value at the index.
* @param {...*} var_args
*/
cljs.core.aset = (function() {
var aset = null;
var aset__3 = (function (array,i,val){
return (array[i] = val);
});
var aset__4 = (function() { 
var G__25830__delegate = function (array,idx,idx2,idxv){
var G__25826 = aset;
var G__25827 = (array[idx]);
var G__25828 = idx2;
var G__25829 = idxv;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$4 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$4(G__25826,G__25827,G__25828,G__25829) : cljs.core.apply.call(null,G__25826,G__25827,G__25828,G__25829));
};
var G__25830 = function (array,idx,idx2,var_args){
var idxv = null;
if (arguments.length > 3) {
var G__25831__i = 0, G__25831__a = new Array(arguments.length -  3);
while (G__25831__i < G__25831__a.length) {G__25831__a[G__25831__i] = arguments[G__25831__i + 3]; ++G__25831__i;}
  idxv = new cljs.core.IndexedSeq(G__25831__a,0);
} 
return G__25830__delegate.call(this,array,idx,idx2,idxv);};
G__25830.cljs$lang$maxFixedArity = 3;
G__25830.cljs$lang$applyTo = (function (arglist__25832){
var array = cljs.core.first(arglist__25832);
arglist__25832 = cljs.core.next(arglist__25832);
var idx = cljs.core.first(arglist__25832);
arglist__25832 = cljs.core.next(arglist__25832);
var idx2 = cljs.core.first(arglist__25832);
var idxv = cljs.core.rest(arglist__25832);
return G__25830__delegate(array,idx,idx2,idxv);
});
G__25830.cljs$core$IFn$_invoke$arity$variadic = G__25830__delegate;
return G__25830;
})()
;
aset = function(array,idx,idx2,var_args){
var idxv = var_args;
switch(arguments.length){
case 3:
return aset__3.call(this,array,idx,idx2);
default:
var G__25833 = null;
if (arguments.length > 3) {
var G__25834__i = 0, G__25834__a = new Array(arguments.length -  3);
while (G__25834__i < G__25834__a.length) {G__25834__a[G__25834__i] = arguments[G__25834__i + 3]; ++G__25834__i;}
G__25833 = new cljs.core.IndexedSeq(G__25834__a,0);
}
return aset__4.cljs$core$IFn$_invoke$arity$variadic(array,idx,idx2, G__25833);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
aset.cljs$lang$maxFixedArity = 3;
aset.cljs$lang$applyTo = aset__4.cljs$lang$applyTo;
aset.cljs$core$IFn$_invoke$arity$3 = aset__3;
aset.cljs$core$IFn$_invoke$arity$variadic = aset__4.cljs$core$IFn$_invoke$arity$variadic;
return aset;
})()
;
/**
* Returns the length of the array. Works on arrays of all types.
*/
cljs.core.alength = (function alength(array){
return array.length;
});
cljs.core.into_array = (function() {
var into_array = null;
var into_array__1 = (function (aseq){
return into_array.cljs$core$IFn$_invoke$arity$2(null,aseq);
});
var into_array__2 = (function (type,aseq){
var G__25840 = (function (a,x){
a.push(x);

return a;
});
var G__25841 = [];
var G__25842 = aseq;
return (cljs.core.reduce.cljs$core$IFn$_invoke$arity$3 ? cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(G__25840,G__25841,G__25842) : cljs.core.reduce.call(null,G__25840,G__25841,G__25842));
});
into_array = function(type,aseq){
switch(arguments.length){
case 1:
return into_array__1.call(this,type);
case 2:
return into_array__2.call(this,type,aseq);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
into_array.cljs$core$IFn$_invoke$arity$1 = into_array__1;
into_array.cljs$core$IFn$_invoke$arity$2 = into_array__2;
return into_array;
})()
;
/**
* Invoke JavaScript object method via string. Needed when the
* string is not a valid unquoted property name.
* @param {...*} var_args
*/
cljs.core.js_invoke = (function() { 
var js_invoke__delegate = function (obj,s,args){
return (obj[s]).apply(obj,cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(args));
};
var js_invoke = function (obj,s,var_args){
var args = null;
if (arguments.length > 2) {
var G__25843__i = 0, G__25843__a = new Array(arguments.length -  2);
while (G__25843__i < G__25843__a.length) {G__25843__a[G__25843__i] = arguments[G__25843__i + 2]; ++G__25843__i;}
  args = new cljs.core.IndexedSeq(G__25843__a,0);
} 
return js_invoke__delegate.call(this,obj,s,args);};
js_invoke.cljs$lang$maxFixedArity = 2;
js_invoke.cljs$lang$applyTo = (function (arglist__25844){
var obj = cljs.core.first(arglist__25844);
arglist__25844 = cljs.core.next(arglist__25844);
var s = cljs.core.first(arglist__25844);
var args = cljs.core.rest(arglist__25844);
return js_invoke__delegate(obj,s,args);
});
js_invoke.cljs$core$IFn$_invoke$arity$variadic = js_invoke__delegate;
return js_invoke;
})()
;

cljs.core.Fn = (function (){var obj25846 = {};
return obj25846;
})();


cljs.core.IFn = (function (){var obj25848 = {};
return obj25848;
})();

cljs.core._invoke = (function() {
var _invoke = null;
var _invoke__1 = (function (this$){
if((function (){var and__24262__auto__ = this$;
if(and__24262__auto__){
return this$.cljs$core$IFn$_invoke$arity$1;
} else {
return and__24262__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$1(this$);
} else {
var x__24918__auto__ = (((this$ == null))?null:this$);
return (function (){var or__24274__auto__ = (cljs.core._invoke[(function (){var G__25894 = x__24918__auto__;
return goog.typeOf(G__25894);
})()]);
if(or__24274__auto__){
return or__24274__auto__;
} else {
var or__24274__auto____$1 = (cljs.core._invoke["_"]);
if(or__24274__auto____$1){
return or__24274__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$);
}
});
var _invoke__2 = (function (this$,a){
if((function (){var and__24262__auto__ = this$;
if(and__24262__auto__){
return this$.cljs$core$IFn$_invoke$arity$2;
} else {
return and__24262__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$2(this$,a);
} else {
var x__24918__auto__ = (((this$ == null))?null:this$);
return (function (){var or__24274__auto__ = (cljs.core._invoke[(function (){var G__25896 = x__24918__auto__;
return goog.typeOf(G__25896);
})()]);
if(or__24274__auto__){
return or__24274__auto__;
} else {
var or__24274__auto____$1 = (cljs.core._invoke["_"]);
if(or__24274__auto____$1){
return or__24274__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a);
}
});
var _invoke__3 = (function (this$,a,b){
if((function (){var and__24262__auto__ = this$;
if(and__24262__auto__){
return this$.cljs$core$IFn$_invoke$arity$3;
} else {
return and__24262__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$3(this$,a,b);
} else {
var x__24918__auto__ = (((this$ == null))?null:this$);
return (function (){var or__24274__auto__ = (cljs.core._invoke[(function (){var G__25898 = x__24918__auto__;
return goog.typeOf(G__25898);
})()]);
if(or__24274__auto__){
return or__24274__auto__;
} else {
var or__24274__auto____$1 = (cljs.core._invoke["_"]);
if(or__24274__auto____$1){
return or__24274__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b);
}
});
var _invoke__4 = (function (this$,a,b,c){
if((function (){var and__24262__auto__ = this$;
if(and__24262__auto__){
return this$.cljs$core$IFn$_invoke$arity$4;
} else {
return and__24262__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$4(this$,a,b,c);
} else {
var x__24918__auto__ = (((this$ == null))?null:this$);
return (function (){var or__24274__auto__ = (cljs.core._invoke[(function (){var G__25900 = x__24918__auto__;
return goog.typeOf(G__25900);
})()]);
if(or__24274__auto__){
return or__24274__auto__;
} else {
var or__24274__auto____$1 = (cljs.core._invoke["_"]);
if(or__24274__auto____$1){
return or__24274__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c);
}
});
var _invoke__5 = (function (this$,a,b,c,d){
if((function (){var and__24262__auto__ = this$;
if(and__24262__auto__){
return this$.cljs$core$IFn$_invoke$arity$5;
} else {
return and__24262__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$5(this$,a,b,c,d);
} else {
var x__24918__auto__ = (((this$ == null))?null:this$);
return (function (){var or__24274__auto__ = (cljs.core._invoke[(function (){var G__25902 = x__24918__auto__;
return goog.typeOf(G__25902);
})()]);
if(or__24274__auto__){
return or__24274__auto__;
} else {
var or__24274__auto____$1 = (cljs.core._invoke["_"]);
if(or__24274__auto____$1){
return or__24274__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d);
}
});
var _invoke__6 = (function (this$,a,b,c,d,e){
if((function (){var and__24262__auto__ = this$;
if(and__24262__auto__){
return this$.cljs$core$IFn$_invoke$arity$6;
} else {
return and__24262__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$6(this$,a,b,c,d,e);
} else {
var x__24918__auto__ = (((this$ == null))?null:this$);
return (function (){var or__24274__auto__ = (cljs.core._invoke[(function (){var G__25904 = x__24918__auto__;
return goog.typeOf(G__25904);
})()]);
if(or__24274__auto__){
return or__24274__auto__;
} else {
var or__24274__auto____$1 = (cljs.core._invoke["_"]);
if(or__24274__auto____$1){
return or__24274__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e);
}
});
var _invoke__7 = (function (this$,a,b,c,d,e,f){
if((function (){var and__24262__auto__ = this$;
if(and__24262__auto__){
return this$.cljs$core$IFn$_invoke$arity$7;
} else {
return and__24262__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$7(this$,a,b,c,d,e,f);
} else {
var x__24918__auto__ = (((this$ == null))?null:this$);
return (function (){var or__24274__auto__ = (cljs.core._invoke[(function (){var G__25906 = x__24918__auto__;
return goog.typeOf(G__25906);
})()]);
if(or__24274__auto__){
return or__24274__auto__;
} else {
var or__24274__auto____$1 = (cljs.core._invoke["_"]);
if(or__24274__auto____$1){
return or__24274__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f);
}
});
var _invoke__8 = (function (this$,a,b,c,d,e,f,g){
if((function (){var and__24262__auto__ = this$;
if(and__24262__auto__){
return this$.cljs$core$IFn$_invoke$arity$8;
} else {
return and__24262__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$8(this$,a,b,c,d,e,f,g);
} else {
var x__24918__auto__ = (((this$ == null))?null:this$);
return (function (){var or__24274__auto__ = (cljs.core._invoke[(function (){var G__25908 = x__24918__auto__;
return goog.typeOf(G__25908);
})()]);
if(or__24274__auto__){
return or__24274__auto__;
} else {
var or__24274__auto____$1 = (cljs.core._invoke["_"]);
if(or__24274__auto____$1){
return or__24274__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g);
}
});
var _invoke__9 = (function (this$,a,b,c,d,e,f,g,h){
if((function (){var and__24262__auto__ = this$;
if(and__24262__auto__){
return this$.cljs$core$IFn$_invoke$arity$9;
} else {
return and__24262__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$9(this$,a,b,c,d,e,f,g,h);
} else {
var x__24918__auto__ = (((this$ == null))?null:this$);
return (function (){var or__24274__auto__ = (cljs.core._invoke[(function (){var G__25910 = x__24918__auto__;
return goog.typeOf(G__25910);
})()]);
if(or__24274__auto__){
return or__24274__auto__;
} else {
var or__24274__auto____$1 = (cljs.core._invoke["_"]);
if(or__24274__auto____$1){
return or__24274__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h);
}
});
var _invoke__10 = (function (this$,a,b,c,d,e,f,g,h,i){
if((function (){var and__24262__auto__ = this$;
if(and__24262__auto__){
return this$.cljs$core$IFn$_invoke$arity$10;
} else {
return and__24262__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$10(this$,a,b,c,d,e,f,g,h,i);
} else {
var x__24918__auto__ = (((this$ == null))?null:this$);
return (function (){var or__24274__auto__ = (cljs.core._invoke[(function (){var G__25912 = x__24918__auto__;
return goog.typeOf(G__25912);
})()]);
if(or__24274__auto__){
return or__24274__auto__;
} else {
var or__24274__auto____$1 = (cljs.core._invoke["_"]);
if(or__24274__auto____$1){
return or__24274__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i);
}
});
var _invoke__11 = (function (this$,a,b,c,d,e,f,g,h,i,j){
if((function (){var and__24262__auto__ = this$;
if(and__24262__auto__){
return this$.cljs$core$IFn$_invoke$arity$11;
} else {
return and__24262__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$11(this$,a,b,c,d,e,f,g,h,i,j);
} else {
var x__24918__auto__ = (((this$ == null))?null:this$);
return (function (){var or__24274__auto__ = (cljs.core._invoke[(function (){var G__25914 = x__24918__auto__;
return goog.typeOf(G__25914);
})()]);
if(or__24274__auto__){
return or__24274__auto__;
} else {
var or__24274__auto____$1 = (cljs.core._invoke["_"]);
if(or__24274__auto____$1){
return or__24274__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j);
}
});
var _invoke__12 = (function (this$,a,b,c,d,e,f,g,h,i,j,k){
if((function (){var and__24262__auto__ = this$;
if(and__24262__auto__){
return this$.cljs$core$IFn$_invoke$arity$12;
} else {
return and__24262__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$12(this$,a,b,c,d,e,f,g,h,i,j,k);
} else {
var x__24918__auto__ = (((this$ == null))?null:this$);
return (function (){var or__24274__auto__ = (cljs.core._invoke[(function (){var G__25916 = x__24918__auto__;
return goog.typeOf(G__25916);
})()]);
if(or__24274__auto__){
return or__24274__auto__;
} else {
var or__24274__auto____$1 = (cljs.core._invoke["_"]);
if(or__24274__auto____$1){
return or__24274__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k);
}
});
var _invoke__13 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l){
if((function (){var and__24262__auto__ = this$;
if(and__24262__auto__){
return this$.cljs$core$IFn$_invoke$arity$13;
} else {
return and__24262__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$13(this$,a,b,c,d,e,f,g,h,i,j,k,l);
} else {
var x__24918__auto__ = (((this$ == null))?null:this$);
return (function (){var or__24274__auto__ = (cljs.core._invoke[(function (){var G__25918 = x__24918__auto__;
return goog.typeOf(G__25918);
})()]);
if(or__24274__auto__){
return or__24274__auto__;
} else {
var or__24274__auto____$1 = (cljs.core._invoke["_"]);
if(or__24274__auto____$1){
return or__24274__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l);
}
});
var _invoke__14 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m){
if((function (){var and__24262__auto__ = this$;
if(and__24262__auto__){
return this$.cljs$core$IFn$_invoke$arity$14;
} else {
return and__24262__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$14(this$,a,b,c,d,e,f,g,h,i,j,k,l,m);
} else {
var x__24918__auto__ = (((this$ == null))?null:this$);
return (function (){var or__24274__auto__ = (cljs.core._invoke[(function (){var G__25920 = x__24918__auto__;
return goog.typeOf(G__25920);
})()]);
if(or__24274__auto__){
return or__24274__auto__;
} else {
var or__24274__auto____$1 = (cljs.core._invoke["_"]);
if(or__24274__auto____$1){
return or__24274__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m);
}
});
var _invoke__15 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n){
if((function (){var and__24262__auto__ = this$;
if(and__24262__auto__){
return this$.cljs$core$IFn$_invoke$arity$15;
} else {
return and__24262__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$15(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
} else {
var x__24918__auto__ = (((this$ == null))?null:this$);
return (function (){var or__24274__auto__ = (cljs.core._invoke[(function (){var G__25922 = x__24918__auto__;
return goog.typeOf(G__25922);
})()]);
if(or__24274__auto__){
return or__24274__auto__;
} else {
var or__24274__auto____$1 = (cljs.core._invoke["_"]);
if(or__24274__auto____$1){
return or__24274__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
}
});
var _invoke__16 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
if((function (){var and__24262__auto__ = this$;
if(and__24262__auto__){
return this$.cljs$core$IFn$_invoke$arity$16;
} else {
return and__24262__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$16(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
} else {
var x__24918__auto__ = (((this$ == null))?null:this$);
return (function (){var or__24274__auto__ = (cljs.core._invoke[(function (){var G__25924 = x__24918__auto__;
return goog.typeOf(G__25924);
})()]);
if(or__24274__auto__){
return or__24274__auto__;
} else {
var or__24274__auto____$1 = (cljs.core._invoke["_"]);
if(or__24274__auto____$1){
return or__24274__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
}
});
var _invoke__17 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
if((function (){var and__24262__auto__ = this$;
if(and__24262__auto__){
return this$.cljs$core$IFn$_invoke$arity$17;
} else {
return and__24262__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$17(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
} else {
var x__24918__auto__ = (((this$ == null))?null:this$);
return (function (){var or__24274__auto__ = (cljs.core._invoke[(function (){var G__25926 = x__24918__auto__;
return goog.typeOf(G__25926);
})()]);
if(or__24274__auto__){
return or__24274__auto__;
} else {
var or__24274__auto____$1 = (cljs.core._invoke["_"]);
if(or__24274__auto____$1){
return or__24274__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
}
});
var _invoke__18 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
if((function (){var and__24262__auto__ = this$;
if(and__24262__auto__){
return this$.cljs$core$IFn$_invoke$arity$18;
} else {
return and__24262__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$18(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
} else {
var x__24918__auto__ = (((this$ == null))?null:this$);
return (function (){var or__24274__auto__ = (cljs.core._invoke[(function (){var G__25928 = x__24918__auto__;
return goog.typeOf(G__25928);
})()]);
if(or__24274__auto__){
return or__24274__auto__;
} else {
var or__24274__auto____$1 = (cljs.core._invoke["_"]);
if(or__24274__auto____$1){
return or__24274__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
}
});
var _invoke__19 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
if((function (){var and__24262__auto__ = this$;
if(and__24262__auto__){
return this$.cljs$core$IFn$_invoke$arity$19;
} else {
return and__24262__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$19(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
} else {
var x__24918__auto__ = (((this$ == null))?null:this$);
return (function (){var or__24274__auto__ = (cljs.core._invoke[(function (){var G__25930 = x__24918__auto__;
return goog.typeOf(G__25930);
})()]);
if(or__24274__auto__){
return or__24274__auto__;
} else {
var or__24274__auto____$1 = (cljs.core._invoke["_"]);
if(or__24274__auto____$1){
return or__24274__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
}
});
var _invoke__20 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
if((function (){var and__24262__auto__ = this$;
if(and__24262__auto__){
return this$.cljs$core$IFn$_invoke$arity$20;
} else {
return and__24262__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$20(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
} else {
var x__24918__auto__ = (((this$ == null))?null:this$);
return (function (){var or__24274__auto__ = (cljs.core._invoke[(function (){var G__25932 = x__24918__auto__;
return goog.typeOf(G__25932);
})()]);
if(or__24274__auto__){
return or__24274__auto__;
} else {
var or__24274__auto____$1 = (cljs.core._invoke["_"]);
if(or__24274__auto____$1){
return or__24274__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
}
});
var _invoke__21 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
if((function (){var and__24262__auto__ = this$;
if(and__24262__auto__){
return this$.cljs$core$IFn$_invoke$arity$21;
} else {
return and__24262__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$21(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
} else {
var x__24918__auto__ = (((this$ == null))?null:this$);
return (function (){var or__24274__auto__ = (cljs.core._invoke[(function (){var G__25934 = x__24918__auto__;
return goog.typeOf(G__25934);
})()]);
if(or__24274__auto__){
return or__24274__auto__;
} else {
var or__24274__auto____$1 = (cljs.core._invoke["_"]);
if(or__24274__auto____$1){
return or__24274__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
}
});
var _invoke__22 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
if((function (){var and__24262__auto__ = this$;
if(and__24262__auto__){
return this$.cljs$core$IFn$_invoke$arity$22;
} else {
return and__24262__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$22(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest);
} else {
var x__24918__auto__ = (((this$ == null))?null:this$);
return (function (){var or__24274__auto__ = (cljs.core._invoke[(function (){var G__25936 = x__24918__auto__;
return goog.typeOf(G__25936);
})()]);
if(or__24274__auto__){
return or__24274__auto__;
} else {
var or__24274__auto____$1 = (cljs.core._invoke["_"]);
if(or__24274__auto____$1){
return or__24274__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest);
}
});
_invoke = function(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
switch(arguments.length){
case 1:
return _invoke__1.call(this,this$);
case 2:
return _invoke__2.call(this,this$,a);
case 3:
return _invoke__3.call(this,this$,a,b);
case 4:
return _invoke__4.call(this,this$,a,b,c);
case 5:
return _invoke__5.call(this,this$,a,b,c,d);
case 6:
return _invoke__6.call(this,this$,a,b,c,d,e);
case 7:
return _invoke__7.call(this,this$,a,b,c,d,e,f);
case 8:
return _invoke__8.call(this,this$,a,b,c,d,e,f,g);
case 9:
return _invoke__9.call(this,this$,a,b,c,d,e,f,g,h);
case 10:
return _invoke__10.call(this,this$,a,b,c,d,e,f,g,h,i);
case 11:
return _invoke__11.call(this,this$,a,b,c,d,e,f,g,h,i,j);
case 12:
return _invoke__12.call(this,this$,a,b,c,d,e,f,g,h,i,j,k);
case 13:
return _invoke__13.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l);
case 14:
return _invoke__14.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m);
case 15:
return _invoke__15.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
case 16:
return _invoke__16.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
case 17:
return _invoke__17.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
case 18:
return _invoke__18.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
case 19:
return _invoke__19.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
case 20:
return _invoke__20.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
case 21:
return _invoke__21.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
case 22:
return _invoke__22.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_invoke.cljs$core$IFn$_invoke$arity$1 = _invoke__1;
_invoke.cljs$core$IFn$_invoke$arity$2 = _invoke__2;
_invoke.cljs$core$IFn$_invoke$arity$3 = _invoke__3;
_invoke.cljs$core$IFn$_invoke$arity$4 = _invoke__4;
_invoke.cljs$core$IFn$_invoke$arity$5 = _invoke__5;
_invoke.cljs$core$IFn$_invoke$arity$6 = _invoke__6;
_invoke.cljs$core$IFn$_invoke$arity$7 = _invoke__7;
_invoke.cljs$core$IFn$_invoke$arity$8 = _invoke__8;
_invoke.cljs$core$IFn$_invoke$arity$9 = _invoke__9;
_invoke.cljs$core$IFn$_invoke$arity$10 = _invoke__10;
_invoke.cljs$core$IFn$_invoke$arity$11 = _invoke__11;
_invoke.cljs$core$IFn$_invoke$arity$12 = _invoke__12;
_invoke.cljs$core$IFn$_invoke$arity$13 = _invoke__13;
_invoke.cljs$core$IFn$_invoke$arity$14 = _invoke__14;
_invoke.cljs$core$IFn$_invoke$arity$15 = _invoke__15;
_invoke.cljs$core$IFn$_invoke$arity$16 = _invoke__16;
_invoke.cljs$core$IFn$_invoke$arity$17 = _invoke__17;
_invoke.cljs$core$IFn$_invoke$arity$18 = _invoke__18;
_invoke.cljs$core$IFn$_invoke$arity$19 = _invoke__19;
_invoke.cljs$core$IFn$_invoke$arity$20 = _invoke__20;
_invoke.cljs$core$IFn$_invoke$arity$21 = _invoke__21;
_invoke.cljs$core$IFn$_invoke$arity$22 = _invoke__22;
return _invoke;
})()
;


cljs.core.ICloneable = (function (){var obj25938 = {};
return obj25938;
})();

cljs.core._clone = (function _clone(value){
if((function (){var and__24262__auto__ = value;
if(and__24262__auto__){
return value.cljs$core$ICloneable$_clone$arity$1;
} else {
return and__24262__auto__;
}
})()){
return value.cljs$core$ICloneable$_clone$arity$1(value);
} else {
var x__24918__auto__ = (((value == null))?null:value);
return (function (){var or__24274__auto__ = (cljs.core._clone[(function (){var G__25942 = x__24918__auto__;
return goog.typeOf(G__25942);
})()]);
if(or__24274__auto__){
return or__24274__auto__;
} else {
var or__24274__auto____$1 = (cljs.core._clone["_"]);
if(or__24274__auto____$1){
return or__24274__auto____$1;
} else {
throw cljs.core.missing_protocol("ICloneable.-clone",value);
}
}
})().call(null,value);
}
});


cljs.core.ICounted = (function (){var obj25944 = {};
return obj25944;
})();

cljs.core._count = (function _count(coll){
if((function (){var and__24262__auto__ = coll;
if(and__24262__auto__){
return coll.cljs$core$ICounted$_count$arity$1;
} else {
return and__24262__auto__;
}
})()){
return coll.cljs$core$ICounted$_count$arity$1(coll);
} else {
var x__24918__auto__ = (((coll == null))?null:coll);
return (function (){var or__24274__auto__ = (cljs.core._count[(function (){var G__25948 = x__24918__auto__;
return goog.typeOf(G__25948);
})()]);
if(or__24274__auto__){
return or__24274__auto__;
} else {
var or__24274__auto____$1 = (cljs.core._count["_"]);
if(or__24274__auto____$1){
return or__24274__auto____$1;
} else {
throw cljs.core.missing_protocol("ICounted.-count",coll);
}
}
})().call(null,coll);
}
});


cljs.core.IEmptyableCollection = (function (){var obj25950 = {};
return obj25950;
})();

cljs.core._empty = (function _empty(coll){
if((function (){var and__24262__auto__ = coll;
if(and__24262__auto__){
return coll.cljs$core$IEmptyableCollection$_empty$arity$1;
} else {
return and__24262__auto__;
}
})()){
return coll.cljs$core$IEmptyableCollection$_empty$arity$1(coll);
} else {
var x__24918__auto__ = (((coll == null))?null:coll);
return (function (){var or__24274__auto__ = (cljs.core._empty[(function (){var G__25954 = x__24918__auto__;
return goog.typeOf(G__25954);
})()]);
if(or__24274__auto__){
return or__24274__auto__;
} else {
var or__24274__auto____$1 = (cljs.core._empty["_"]);
if(or__24274__auto____$1){
return or__24274__auto____$1;
} else {
throw cljs.core.missing_protocol("IEmptyableCollection.-empty",coll);
}
}
})().call(null,coll);
}
});


cljs.core.ICollection = (function (){var obj25956 = {};
return obj25956;
})();

cljs.core._conj = (function _conj(coll,o){
if((function (){var and__24262__auto__ = coll;
if(and__24262__auto__){
return coll.cljs$core$ICollection$_conj$arity$2;
} else {
return and__24262__auto__;
}
})()){
return coll.cljs$core$ICollection$_conj$arity$2(coll,o);
} else {
var x__24918__auto__ = (((coll == null))?null:coll);
return (function (){var or__24274__auto__ = (cljs.core._conj[(function (){var G__25960 = x__24918__auto__;
return goog.typeOf(G__25960);
})()]);
if(or__24274__auto__){
return or__24274__auto__;
} else {
var or__24274__auto____$1 = (cljs.core._conj["_"]);
if(or__24274__auto____$1){
return or__24274__auto____$1;
} else {
throw cljs.core.missing_protocol("ICollection.-conj",coll);
}
}
})().call(null,coll,o);
}
});


cljs.core.IIndexed = (function (){var obj25962 = {};
return obj25962;
})();

cljs.core._nth = (function() {
var _nth = null;
var _nth__2 = (function (coll,n){
if((function (){var and__24262__auto__ = coll;
if(and__24262__auto__){
return coll.cljs$core$IIndexed$_nth$arity$2;
} else {
return and__24262__auto__;
}
})()){
return coll.cljs$core$IIndexed$_nth$arity$2(coll,n);
} else {
var x__24918__auto__ = (((coll == null))?null:coll);
return (function (){var or__24274__auto__ = (cljs.core._nth[(function (){var G__25968 = x__24918__auto__;
return goog.typeOf(G__25968);
})()]);
if(or__24274__auto__){
return or__24274__auto__;
} else {
var or__24274__auto____$1 = (cljs.core._nth["_"]);
if(or__24274__auto____$1){
return or__24274__auto____$1;
} else {
throw cljs.core.missing_protocol("IIndexed.-nth",coll);
}
}
})().call(null,coll,n);
}
});
var _nth__3 = (function (coll,n,not_found){
if((function (){var and__24262__auto__ = coll;
if(and__24262__auto__){
return coll.cljs$core$IIndexed$_nth$arity$3;
} else {
return and__24262__auto__;
}
})()){
return coll.cljs$core$IIndexed$_nth$arity$3(coll,n,not_found);
} else {
var x__24918__auto__ = (((coll == null))?null:coll);
return (function (){var or__24274__auto__ = (cljs.core._nth[(function (){var G__25970 = x__24918__auto__;
return goog.typeOf(G__25970);
})()]);
if(or__24274__auto__){
return or__24274__auto__;
} else {
var or__24274__auto____$1 = (cljs.core._nth["_"]);
if(or__24274__auto____$1){
return or__24274__auto____$1;
} else {
throw cljs.core.missing_protocol("IIndexed.-nth",coll);
}
}
})().call(null,coll,n,not_found);
}
});
_nth = function(coll,n,not_found){
switch(arguments.length){
case 2:
return _nth__2.call(this,coll,n);
case 3:
return _nth__3.call(this,coll,n,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_nth.cljs$core$IFn$_invoke$arity$2 = _nth__2;
_nth.cljs$core$IFn$_invoke$arity$3 = _nth__3;
return _nth;
})()
;


cljs.core.ASeq = (function (){var obj25972 = {};
return obj25972;
})();


cljs.core.ISeq = (function (){var obj25974 = {};
return obj25974;
})();

cljs.core._first = (function _first(coll){
if((function (){var and__24262__auto__ = coll;
if(and__24262__auto__){
return coll.cljs$core$ISeq$_first$arity$1;
} else {
return and__24262__auto__;
}
})()){
return coll.cljs$core$ISeq$_first$arity$1(coll);
} else {
var x__24918__auto__ = (((coll == null))?null:coll);
return (function (){var or__24274__auto__ = (cljs.core._first[(function (){var G__25978 = x__24918__auto__;
return goog.typeOf(G__25978);
})()]);
if(or__24274__auto__){
return or__24274__auto__;
} else {
var or__24274__auto____$1 = (cljs.core._first["_"]);
if(or__24274__auto____$1){
return or__24274__auto____$1;
} else {
throw cljs.core.missing_protocol("ISeq.-first",coll);
}
}
})().call(null,coll);
}
});

cljs.core._rest = (function _rest(coll){
if((function (){var and__24262__auto__ = coll;
if(and__24262__auto__){
return coll.cljs$core$ISeq$_rest$arity$1;
} else {
return and__24262__auto__;
}
})()){
return coll.cljs$core$ISeq$_rest$arity$1(coll);
} else {
var x__24918__auto__ = (((coll == null))?null:coll);
return (function (){var or__24274__auto__ = (cljs.core._rest[(function (){var G__25982 = x__24918__auto__;
return goog.typeOf(G__25982);
})()]);
if(or__24274__auto__){
return or__24274__auto__;
} else {
var or__24274__auto____$1 = (cljs.core._rest["_"]);
if(or__24274__auto____$1){
return or__24274__auto____$1;
} else {
throw cljs.core.missing_protocol("ISeq.-rest",coll);
}
}
})().call(null,coll);
}
});


cljs.core.INext = (function (){var obj25984 = {};
return obj25984;
})();

cljs.core._next = (function _next(coll){
if((function (){var and__24262__auto__ = coll;
if(and__24262__auto__){
return coll.cljs$core$INext$_next$arity$1;
} else {
return and__24262__auto__;
}
})()){
return coll.cljs$core$INext$_next$arity$1(coll);
} else {
var x__24918__auto__ = (((coll == null))?null:coll);
return (function (){var or__24274__auto__ = (cljs.core._next[(function (){var G__25988 = x__24918__auto__;
return goog.typeOf(G__25988);
})()]);
if(or__24274__auto__){
return or__24274__auto__;
} else {
var or__24274__auto____$1 = (cljs.core._next["_"]);
if(or__24274__auto____$1){
return or__24274__auto____$1;
} else {
throw cljs.core.missing_protocol("INext.-next",coll);
}
}
})().call(null,coll);
}
});


cljs.core.ILookup = (function (){var obj25990 = {};
return obj25990;
})();

cljs.core._lookup = (function() {
var _lookup = null;
var _lookup__2 = (function (o,k){
if((function (){var and__24262__auto__ = o;
if(and__24262__auto__){
return o.cljs$core$ILookup$_lookup$arity$2;
} else {
return and__24262__auto__;
}
})()){
return o.cljs$core$ILookup$_lookup$arity$2(o,k);
} else {
var x__24918__auto__ = (((o == null))?null:o);
return (function (){var or__24274__auto__ = (cljs.core._lookup[(function (){var G__25996 = x__24918__auto__;
return goog.typeOf(G__25996);
})()]);
if(or__24274__auto__){
return or__24274__auto__;
} else {
var or__24274__auto____$1 = (cljs.core._lookup["_"]);
if(or__24274__auto____$1){
return or__24274__auto____$1;
} else {
throw cljs.core.missing_protocol("ILookup.-lookup",o);
}
}
})().call(null,o,k);
}
});
var _lookup__3 = (function (o,k,not_found){
if((function (){var and__24262__auto__ = o;
if(and__24262__auto__){
return o.cljs$core$ILookup$_lookup$arity$3;
} else {
return and__24262__auto__;
}
})()){
return o.cljs$core$ILookup$_lookup$arity$3(o,k,not_found);
} else {
var x__24918__auto__ = (((o == null))?null:o);
return (function (){var or__24274__auto__ = (cljs.core._lookup[(function (){var G__25998 = x__24918__auto__;
return goog.typeOf(G__25998);
})()]);
if(or__24274__auto__){
return or__24274__auto__;
} else {
var or__24274__auto____$1 = (cljs.core._lookup["_"]);
if(or__24274__auto____$1){
return or__24274__auto____$1;
} else {
throw cljs.core.missing_protocol("ILookup.-lookup",o);
}
}
})().call(null,o,k,not_found);
}
});
_lookup = function(o,k,not_found){
switch(arguments.length){
case 2:
return _lookup__2.call(this,o,k);
case 3:
return _lookup__3.call(this,o,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_lookup.cljs$core$IFn$_invoke$arity$2 = _lookup__2;
_lookup.cljs$core$IFn$_invoke$arity$3 = _lookup__3;
return _lookup;
})()
;


cljs.core.IAssociative = (function (){var obj26000 = {};
return obj26000;
})();

cljs.core._contains_key_QMARK_ = (function _contains_key_QMARK_(coll,k){
if((function (){var and__24262__auto__ = coll;
if(and__24262__auto__){
return coll.cljs$core$IAssociative$_contains_key_QMARK_$arity$2;
} else {
return and__24262__auto__;
}
})()){
return coll.cljs$core$IAssociative$_contains_key_QMARK_$arity$2(coll,k);
} else {
var x__24918__auto__ = (((coll == null))?null:coll);
return (function (){var or__24274__auto__ = (cljs.core._contains_key_QMARK_[(function (){var G__26004 = x__24918__auto__;
return goog.typeOf(G__26004);
})()]);
if(or__24274__auto__){
return or__24274__auto__;
} else {
var or__24274__auto____$1 = (cljs.core._contains_key_QMARK_["_"]);
if(or__24274__auto____$1){
return or__24274__auto____$1;
} else {
throw cljs.core.missing_protocol("IAssociative.-contains-key?",coll);
}
}
})().call(null,coll,k);
}
});

cljs.core._assoc = (function _assoc(coll,k,v){
if((function (){var and__24262__auto__ = coll;
if(and__24262__auto__){
return coll.cljs$core$IAssociative$_assoc$arity$3;
} else {
return and__24262__auto__;
}
})()){
return coll.cljs$core$IAssociative$_assoc$arity$3(coll,k,v);
} else {
var x__24918__auto__ = (((coll == null))?null:coll);
return (function (){var or__24274__auto__ = (cljs.core._assoc[(function (){var G__26008 = x__24918__auto__;
return goog.typeOf(G__26008);
})()]);
if(or__24274__auto__){
return or__24274__auto__;
} else {
var or__24274__auto____$1 = (cljs.core._assoc["_"]);
if(or__24274__auto____$1){
return or__24274__auto____$1;
} else {
throw cljs.core.missing_protocol("IAssociative.-assoc",coll);
}
}
})().call(null,coll,k,v);
}
});


cljs.core.IMap = (function (){var obj26010 = {};
return obj26010;
})();

cljs.core._dissoc = (function _dissoc(coll,k){
if((function (){var and__24262__auto__ = coll;
if(and__24262__auto__){
return coll.cljs$core$IMap$_dissoc$arity$2;
} else {
return and__24262__auto__;
}
})()){
return coll.cljs$core$IMap$_dissoc$arity$2(coll,k);
} else {
var x__24918__auto__ = (((coll == null))?null:coll);
return (function (){var or__24274__auto__ = (cljs.core._dissoc[(function (){var G__26014 = x__24918__auto__;
return goog.typeOf(G__26014);
})()]);
if(or__24274__auto__){
return or__24274__auto__;
} else {
var or__24274__auto____$1 = (cljs.core._dissoc["_"]);
if(or__24274__auto____$1){
return or__24274__auto____$1;
} else {
throw cljs.core.missing_protocol("IMap.-dissoc",coll);
}
}
})().call(null,coll,k);
}
});


cljs.core.IMapEntry = (function (){var obj26016 = {};
return obj26016;
})();

cljs.core._key = (function _key(coll){
if((function (){var and__24262__auto__ = coll;
if(and__24262__auto__){
return coll.cljs$core$IMapEntry$_key$arity$1;
} else {
return and__24262__auto__;
}
})()){
return coll.cljs$core$IMapEntry$_key$arity$1(coll);
} else {
var x__24918__auto__ = (((coll == null))?null:coll);
return (function (){var or__24274__auto__ = (cljs.core._key[(function (){var G__26020 = x__24918__auto__;
return goog.typeOf(G__26020);
})()]);
if(or__24274__auto__){
return or__24274__auto__;
} else {
var or__24274__auto____$1 = (cljs.core._key["_"]);
if(or__24274__auto____$1){
return or__24274__auto____$1;
} else {
throw cljs.core.missing_protocol("IMapEntry.-key",coll);
}
}
})().call(null,coll);
}
});

cljs.core._val = (function _val(coll){
if((function (){var and__24262__auto__ = coll;
if(and__24262__auto__){
return coll.cljs$core$IMapEntry$_val$arity$1;
} else {
return and__24262__auto__;
}
})()){
return coll.cljs$core$IMapEntry$_val$arity$1(coll);
} else {
var x__24918__auto__ = (((coll == null))?null:coll);
return (function (){var or__24274__auto__ = (cljs.core._val[(function (){var G__26024 = x__24918__auto__;
return goog.typeOf(G__26024);
})()]);
if(or__24274__auto__){
return or__24274__auto__;
} else {
var or__24274__auto____$1 = (cljs.core._val["_"]);
if(or__24274__auto____$1){
return or__24274__auto____$1;
} else {
throw cljs.core.missing_protocol("IMapEntry.-val",coll);
}
}
})().call(null,coll);
}
});


cljs.core.ISet = (function (){var obj26026 = {};
return obj26026;
})();

cljs.core._disjoin = (function _disjoin(coll,v){
if((function (){var and__24262__auto__ = coll;
if(and__24262__auto__){
return coll.cljs$core$ISet$_disjoin$arity$2;
} else {
return and__24262__auto__;
}
})()){
return coll.cljs$core$ISet$_disjoin$arity$2(coll,v);
} else {
var x__24918__auto__ = (((coll == null))?null:coll);
return (function (){var or__24274__auto__ = (cljs.core._disjoin[(function (){var G__26030 = x__24918__auto__;
return goog.typeOf(G__26030);
})()]);
if(or__24274__auto__){
return or__24274__auto__;
} else {
var or__24274__auto____$1 = (cljs.core._disjoin["_"]);
if(or__24274__auto____$1){
return or__24274__auto____$1;
} else {
throw cljs.core.missing_protocol("ISet.-disjoin",coll);
}
}
})().call(null,coll,v);
}
});


cljs.core.IStack = (function (){var obj26032 = {};
return obj26032;
})();

cljs.core._peek = (function _peek(coll){
if((function (){var and__24262__auto__ = coll;
if(and__24262__auto__){
return coll.cljs$core$IStack$_peek$arity$1;
} else {
return and__24262__auto__;
}
})()){
return coll.cljs$core$IStack$_peek$arity$1(coll);
} else {
var x__24918__auto__ = (((coll == null))?null:coll);
return (function (){var or__24274__auto__ = (cljs.core._peek[(function (){var G__26036 = x__24918__auto__;
return goog.typeOf(G__26036);
})()]);
if(or__24274__auto__){
return or__24274__auto__;
} else {
var or__24274__auto____$1 = (cljs.core._peek["_"]);
if(or__24274__auto____$1){
return or__24274__auto____$1;
} else {
throw cljs.core.missing_protocol("IStack.-peek",coll);
}
}
})().call(null,coll);
}
});

cljs.core._pop = (function _pop(coll){
if((function (){var and__24262__auto__ = coll;
if(and__24262__auto__){
return coll.cljs$core$IStack$_pop$arity$1;
} else {
return and__24262__auto__;
}
})()){
return coll.cljs$core$IStack$_pop$arity$1(coll);
} else {
var x__24918__auto__ = (((coll == null))?null:coll);
return (function (){var or__24274__auto__ = (cljs.core._pop[(function (){var G__26040 = x__24918__auto__;
return goog.typeOf(G__26040);
})()]);
if(or__24274__auto__){
return or__24274__auto__;
} else {
var or__24274__auto____$1 = (cljs.core._pop["_"]);
if(or__24274__auto____$1){
return or__24274__auto____$1;
} else {
throw cljs.core.missing_protocol("IStack.-pop",coll);
}
}
})().call(null,coll);
}
});


cljs.core.IVector = (function (){var obj26042 = {};
return obj26042;
})();

cljs.core._assoc_n = (function _assoc_n(coll,n,val){
if((function (){var and__24262__auto__ = coll;
if(and__24262__auto__){
return coll.cljs$core$IVector$_assoc_n$arity$3;
} else {
return and__24262__auto__;
}
})()){
return coll.cljs$core$IVector$_assoc_n$arity$3(coll,n,val);
} else {
var x__24918__auto__ = (((coll == null))?null:coll);
return (function (){var or__24274__auto__ = (cljs.core._assoc_n[(function (){var G__26046 = x__24918__auto__;
return goog.typeOf(G__26046);
})()]);
if(or__24274__auto__){
return or__24274__auto__;
} else {
var or__24274__auto____$1 = (cljs.core._assoc_n["_"]);
if(or__24274__auto____$1){
return or__24274__auto____$1;
} else {
throw cljs.core.missing_protocol("IVector.-assoc-n",coll);
}
}
})().call(null,coll,n,val);
}
});


cljs.core.IDeref = (function (){var obj26048 = {};
return obj26048;
})();

cljs.core._deref = (function _deref(o){
if((function (){var and__24262__auto__ = o;
if(and__24262__auto__){
return o.cljs$core$IDeref$_deref$arity$1;
} else {
return and__24262__auto__;
}
})()){
return o.cljs$core$IDeref$_deref$arity$1(o);
} else {
var x__24918__auto__ = (((o == null))?null:o);
return (function (){var or__24274__auto__ = (cljs.core._deref[(function (){var G__26052 = x__24918__auto__;
return goog.typeOf(G__26052);
})()]);
if(or__24274__auto__){
return or__24274__auto__;
} else {
var or__24274__auto____$1 = (cljs.core._deref["_"]);
if(or__24274__auto____$1){
return or__24274__auto____$1;
} else {
throw cljs.core.missing_protocol("IDeref.-deref",o);
}
}
})().call(null,o);
}
});


cljs.core.IDerefWithTimeout = (function (){var obj26054 = {};
return obj26054;
})();

cljs.core._deref_with_timeout = (function _deref_with_timeout(o,msec,timeout_val){
if((function (){var and__24262__auto__ = o;
if(and__24262__auto__){
return o.cljs$core$IDerefWithTimeout$_deref_with_timeout$arity$3;
} else {
return and__24262__auto__;
}
})()){
return o.cljs$core$IDerefWithTimeout$_deref_with_timeout$arity$3(o,msec,timeout_val);
} else {
var x__24918__auto__ = (((o == null))?null:o);
return (function (){var or__24274__auto__ = (cljs.core._deref_with_timeout[(function (){var G__26058 = x__24918__auto__;
return goog.typeOf(G__26058);
})()]);
if(or__24274__auto__){
return or__24274__auto__;
} else {
var or__24274__auto____$1 = (cljs.core._deref_with_timeout["_"]);
if(or__24274__auto____$1){
return or__24274__auto____$1;
} else {
throw cljs.core.missing_protocol("IDerefWithTimeout.-deref-with-timeout",o);
}
}
})().call(null,o,msec,timeout_val);
}
});


cljs.core.IMeta = (function (){var obj26060 = {};
return obj26060;
})();

cljs.core._meta = (function _meta(o){
if((function (){var and__24262__auto__ = o;
if(and__24262__auto__){
return o.cljs$core$IMeta$_meta$arity$1;
} else {
return and__24262__auto__;
}
})()){
return o.cljs$core$IMeta$_meta$arity$1(o);
} else {
var x__24918__auto__ = (((o == null))?null:o);
return (function (){var or__24274__auto__ = (cljs.core._meta[(function (){var G__26064 = x__24918__auto__;
return goog.typeOf(G__26064);
})()]);
if(or__24274__auto__){
return or__24274__auto__;
} else {
var or__24274__auto____$1 = (cljs.core._meta["_"]);
if(or__24274__auto____$1){
return or__24274__auto____$1;
} else {
throw cljs.core.missing_protocol("IMeta.-meta",o);
}
}
})().call(null,o);
}
});


cljs.core.IWithMeta = (function (){var obj26066 = {};
return obj26066;
})();

cljs.core._with_meta = (function _with_meta(o,meta){
if((function (){var and__24262__auto__ = o;
if(and__24262__auto__){
return o.cljs$core$IWithMeta$_with_meta$arity$2;
} else {
return and__24262__auto__;
}
})()){
return o.cljs$core$IWithMeta$_with_meta$arity$2(o,meta);
} else {
var x__24918__auto__ = (((o == null))?null:o);
return (function (){var or__24274__auto__ = (cljs.core._with_meta[(function (){var G__26070 = x__24918__auto__;
return goog.typeOf(G__26070);
})()]);
if(or__24274__auto__){
return or__24274__auto__;
} else {
var or__24274__auto____$1 = (cljs.core._with_meta["_"]);
if(or__24274__auto____$1){
return or__24274__auto____$1;
} else {
throw cljs.core.missing_protocol("IWithMeta.-with-meta",o);
}
}
})().call(null,o,meta);
}
});


cljs.core.IReduce = (function (){var obj26072 = {};
return obj26072;
})();

cljs.core._reduce = (function() {
var _reduce = null;
var _reduce__2 = (function (coll,f){
if((function (){var and__24262__auto__ = coll;
if(and__24262__auto__){
return coll.cljs$core$IReduce$_reduce$arity$2;
} else {
return and__24262__auto__;
}
})()){
return coll.cljs$core$IReduce$_reduce$arity$2(coll,f);
} else {
var x__24918__auto__ = (((coll == null))?null:coll);
return (function (){var or__24274__auto__ = (cljs.core._reduce[(function (){var G__26078 = x__24918__auto__;
return goog.typeOf(G__26078);
})()]);
if(or__24274__auto__){
return or__24274__auto__;
} else {
var or__24274__auto____$1 = (cljs.core._reduce["_"]);
if(or__24274__auto____$1){
return or__24274__auto____$1;
} else {
throw cljs.core.missing_protocol("IReduce.-reduce",coll);
}
}
})().call(null,coll,f);
}
});
var _reduce__3 = (function (coll,f,start){
if((function (){var and__24262__auto__ = coll;
if(and__24262__auto__){
return coll.cljs$core$IReduce$_reduce$arity$3;
} else {
return and__24262__auto__;
}
})()){
return coll.cljs$core$IReduce$_reduce$arity$3(coll,f,start);
} else {
var x__24918__auto__ = (((coll == null))?null:coll);
return (function (){var or__24274__auto__ = (cljs.core._reduce[(function (){var G__26080 = x__24918__auto__;
return goog.typeOf(G__26080);
})()]);
if(or__24274__auto__){
return or__24274__auto__;
} else {
var or__24274__auto____$1 = (cljs.core._reduce["_"]);
if(or__24274__auto____$1){
return or__24274__auto____$1;
} else {
throw cljs.core.missing_protocol("IReduce.-reduce",coll);
}
}
})().call(null,coll,f,start);
}
});
_reduce = function(coll,f,start){
switch(arguments.length){
case 2:
return _reduce__2.call(this,coll,f);
case 3:
return _reduce__3.call(this,coll,f,start);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_reduce.cljs$core$IFn$_invoke$arity$2 = _reduce__2;
_reduce.cljs$core$IFn$_invoke$arity$3 = _reduce__3;
return _reduce;
})()
;


cljs.core.IKVReduce = (function (){var obj26082 = {};
return obj26082;
})();

cljs.core._kv_reduce = (function _kv_reduce(coll,f,init){
if((function (){var and__24262__auto__ = coll;
if(and__24262__auto__){
return coll.cljs$core$IKVReduce$_kv_reduce$arity$3;
} else {
return and__24262__auto__;
}
})()){
return coll.cljs$core$IKVReduce$_kv_reduce$arity$3(coll,f,init);
} else {
var x__24918__auto__ = (((coll == null))?null:coll);
return (function (){var or__24274__auto__ = (cljs.core._kv_reduce[(function (){var G__26086 = x__24918__auto__;
return goog.typeOf(G__26086);
})()]);
if(or__24274__auto__){
return or__24274__auto__;
} else {
var or__24274__auto____$1 = (cljs.core._kv_reduce["_"]);
if(or__24274__auto____$1){
return or__24274__auto____$1;
} else {
throw cljs.core.missing_protocol("IKVReduce.-kv-reduce",coll);
}
}
})().call(null,coll,f,init);
}
});


cljs.core.IEquiv = (function (){var obj26088 = {};
return obj26088;
})();

cljs.core._equiv = (function _equiv(o,other){
if((function (){var and__24262__auto__ = o;
if(and__24262__auto__){
return o.cljs$core$IEquiv$_equiv$arity$2;
} else {
return and__24262__auto__;
}
})()){
return o.cljs$core$IEquiv$_equiv$arity$2(o,other);
} else {
var x__24918__auto__ = (((o == null))?null:o);
return (function (){var or__24274__auto__ = (cljs.core._equiv[(function (){var G__26092 = x__24918__auto__;
return goog.typeOf(G__26092);
})()]);
if(or__24274__auto__){
return or__24274__auto__;
} else {
var or__24274__auto____$1 = (cljs.core._equiv["_"]);
if(or__24274__auto____$1){
return or__24274__auto____$1;
} else {
throw cljs.core.missing_protocol("IEquiv.-equiv",o);
}
}
})().call(null,o,other);
}
});


cljs.core.IHash = (function (){var obj26094 = {};
return obj26094;
})();

cljs.core._hash = (function _hash(o){
if((function (){var and__24262__auto__ = o;
if(and__24262__auto__){
return o.cljs$core$IHash$_hash$arity$1;
} else {
return and__24262__auto__;
}
})()){
return o.cljs$core$IHash$_hash$arity$1(o);
} else {
var x__24918__auto__ = (((o == null))?null:o);
return (function (){var or__24274__auto__ = (cljs.core._hash[(function (){var G__26098 = x__24918__auto__;
return goog.typeOf(G__26098);
})()]);
if(or__24274__auto__){
return or__24274__auto__;
} else {
var or__24274__auto____$1 = (cljs.core._hash["_"]);
if(or__24274__auto____$1){
return or__24274__auto____$1;
} else {
throw cljs.core.missing_protocol("IHash.-hash",o);
}
}
})().call(null,o);
}
});


cljs.core.ISeqable = (function (){var obj26100 = {};
return obj26100;
})();

cljs.core._seq = (function _seq(o){
if((function (){var and__24262__auto__ = o;
if(and__24262__auto__){
return o.cljs$core$ISeqable$_seq$arity$1;
} else {
return and__24262__auto__;
}
})()){
return o.cljs$core$ISeqable$_seq$arity$1(o);
} else {
var x__24918__auto__ = (((o == null))?null:o);
return (function (){var or__24274__auto__ = (cljs.core._seq[(function (){var G__26104 = x__24918__auto__;
return goog.typeOf(G__26104);
})()]);
if(or__24274__auto__){
return or__24274__auto__;
} else {
var or__24274__auto____$1 = (cljs.core._seq["_"]);
if(or__24274__auto____$1){
return or__24274__auto____$1;
} else {
throw cljs.core.missing_protocol("ISeqable.-seq",o);
}
}
})().call(null,o);
}
});


cljs.core.ISequential = (function (){var obj26106 = {};
return obj26106;
})();


cljs.core.IList = (function (){var obj26108 = {};
return obj26108;
})();


cljs.core.IRecord = (function (){var obj26110 = {};
return obj26110;
})();


cljs.core.IReversible = (function (){var obj26112 = {};
return obj26112;
})();

cljs.core._rseq = (function _rseq(coll){
if((function (){var and__24262__auto__ = coll;
if(and__24262__auto__){
return coll.cljs$core$IReversible$_rseq$arity$1;
} else {
return and__24262__auto__;
}
})()){
return coll.cljs$core$IReversible$_rseq$arity$1(coll);
} else {
var x__24918__auto__ = (((coll == null))?null:coll);
return (function (){var or__24274__auto__ = (cljs.core._rseq[(function (){var G__26116 = x__24918__auto__;
return goog.typeOf(G__26116);
})()]);
if(or__24274__auto__){
return or__24274__auto__;
} else {
var or__24274__auto____$1 = (cljs.core._rseq["_"]);
if(or__24274__auto____$1){
return or__24274__auto____$1;
} else {
throw cljs.core.missing_protocol("IReversible.-rseq",coll);
}
}
})().call(null,coll);
}
});


cljs.core.ISorted = (function (){var obj26118 = {};
return obj26118;
})();

cljs.core._sorted_seq = (function _sorted_seq(coll,ascending_QMARK_){
if((function (){var and__24262__auto__ = coll;
if(and__24262__auto__){
return coll.cljs$core$ISorted$_sorted_seq$arity$2;
} else {
return and__24262__auto__;
}
})()){
return coll.cljs$core$ISorted$_sorted_seq$arity$2(coll,ascending_QMARK_);
} else {
var x__24918__auto__ = (((coll == null))?null:coll);
return (function (){var or__24274__auto__ = (cljs.core._sorted_seq[(function (){var G__26122 = x__24918__auto__;
return goog.typeOf(G__26122);
})()]);
if(or__24274__auto__){
return or__24274__auto__;
} else {
var or__24274__auto____$1 = (cljs.core._sorted_seq["_"]);
if(or__24274__auto____$1){
return or__24274__auto____$1;
} else {
throw cljs.core.missing_protocol("ISorted.-sorted-seq",coll);
}
}
})().call(null,coll,ascending_QMARK_);
}
});

cljs.core._sorted_seq_from = (function _sorted_seq_from(coll,k,ascending_QMARK_){
if((function (){var and__24262__auto__ = coll;
if(and__24262__auto__){
return coll.cljs$core$ISorted$_sorted_seq_from$arity$3;
} else {
return and__24262__auto__;
}
})()){
return coll.cljs$core$ISorted$_sorted_seq_from$arity$3(coll,k,ascending_QMARK_);
} else {
var x__24918__auto__ = (((coll == null))?null:coll);
return (function (){var or__24274__auto__ = (cljs.core._sorted_seq_from[(function (){var G__26126 = x__24918__auto__;
return goog.typeOf(G__26126);
})()]);
if(or__24274__auto__){
return or__24274__auto__;
} else {
var or__24274__auto____$1 = (cljs.core._sorted_seq_from["_"]);
if(or__24274__auto____$1){
return or__24274__auto____$1;
} else {
throw cljs.core.missing_protocol("ISorted.-sorted-seq-from",coll);
}
}
})().call(null,coll,k,ascending_QMARK_);
}
});

cljs.core._entry_key = (function _entry_key(coll,entry){
if((function (){var and__24262__auto__ = coll;
if(and__24262__auto__){
return coll.cljs$core$ISorted$_entry_key$arity$2;
} else {
return and__24262__auto__;
}
})()){
return coll.cljs$core$ISorted$_entry_key$arity$2(coll,entry);
} else {
var x__24918__auto__ = (((coll == null))?null:coll);
return (function (){var or__24274__auto__ = (cljs.core._entry_key[(function (){var G__26130 = x__24918__auto__;
return goog.typeOf(G__26130);
})()]);
if(or__24274__auto__){
return or__24274__auto__;
} else {
var or__24274__auto____$1 = (cljs.core._entry_key["_"]);
if(or__24274__auto____$1){
return or__24274__auto____$1;
} else {
throw cljs.core.missing_protocol("ISorted.-entry-key",coll);
}
}
})().call(null,coll,entry);
}
});

cljs.core._comparator = (function _comparator(coll){
if((function (){var and__24262__auto__ = coll;
if(and__24262__auto__){
return coll.cljs$core$ISorted$_comparator$arity$1;
} else {
return and__24262__auto__;
}
})()){
return coll.cljs$core$ISorted$_comparator$arity$1(coll);
} else {
var x__24918__auto__ = (((coll == null))?null:coll);
return (function (){var or__24274__auto__ = (cljs.core._comparator[(function (){var G__26134 = x__24918__auto__;
return goog.typeOf(G__26134);
})()]);
if(or__24274__auto__){
return or__24274__auto__;
} else {
var or__24274__auto____$1 = (cljs.core._comparator["_"]);
if(or__24274__auto____$1){
return or__24274__auto____$1;
} else {
throw cljs.core.missing_protocol("ISorted.-comparator",coll);
}
}
})().call(null,coll);
}
});


cljs.core.IWriter = (function (){var obj26136 = {};
return obj26136;
})();

cljs.core._write = (function _write(writer,s){
if((function (){var and__24262__auto__ = writer;
if(and__24262__auto__){
return writer.cljs$core$IWriter$_write$arity$2;
} else {
return and__24262__auto__;
}
})()){
return writer.cljs$core$IWriter$_write$arity$2(writer,s);
} else {
var x__24918__auto__ = (((writer == null))?null:writer);
return (function (){var or__24274__auto__ = (cljs.core._write[(function (){var G__26140 = x__24918__auto__;
return goog.typeOf(G__26140);
})()]);
if(or__24274__auto__){
return or__24274__auto__;
} else {
var or__24274__auto____$1 = (cljs.core._write["_"]);
if(or__24274__auto____$1){
return or__24274__auto____$1;
} else {
throw cljs.core.missing_protocol("IWriter.-write",writer);
}
}
})().call(null,writer,s);
}
});

cljs.core._flush = (function _flush(writer){
if((function (){var and__24262__auto__ = writer;
if(and__24262__auto__){
return writer.cljs$core$IWriter$_flush$arity$1;
} else {
return and__24262__auto__;
}
})()){
return writer.cljs$core$IWriter$_flush$arity$1(writer);
} else {
var x__24918__auto__ = (((writer == null))?null:writer);
return (function (){var or__24274__auto__ = (cljs.core._flush[(function (){var G__26144 = x__24918__auto__;
return goog.typeOf(G__26144);
})()]);
if(or__24274__auto__){
return or__24274__auto__;
} else {
var or__24274__auto____$1 = (cljs.core._flush["_"]);
if(or__24274__auto____$1){
return or__24274__auto____$1;
} else {
throw cljs.core.missing_protocol("IWriter.-flush",writer);
}
}
})().call(null,writer);
}
});


cljs.core.IPrintWithWriter = (function (){var obj26146 = {};
return obj26146;
})();

cljs.core._pr_writer = (function _pr_writer(o,writer,opts){
if((function (){var and__24262__auto__ = o;
if(and__24262__auto__){
return o.cljs$core$IPrintWithWriter$_pr_writer$arity$3;
} else {
return and__24262__auto__;
}
})()){
return o.cljs$core$IPrintWithWriter$_pr_writer$arity$3(o,writer,opts);
} else {
var x__24918__auto__ = (((o == null))?null:o);
return (function (){var or__24274__auto__ = (cljs.core._pr_writer[(function (){var G__26150 = x__24918__auto__;
return goog.typeOf(G__26150);
})()]);
if(or__24274__auto__){
return or__24274__auto__;
} else {
var or__24274__auto____$1 = (cljs.core._pr_writer["_"]);
if(or__24274__auto____$1){
return or__24274__auto____$1;
} else {
throw cljs.core.missing_protocol("IPrintWithWriter.-pr-writer",o);
}
}
})().call(null,o,writer,opts);
}
});


cljs.core.IPending = (function (){var obj26152 = {};
return obj26152;
})();

cljs.core._realized_QMARK_ = (function _realized_QMARK_(d){
if((function (){var and__24262__auto__ = d;
if(and__24262__auto__){
return d.cljs$core$IPending$_realized_QMARK_$arity$1;
} else {
return and__24262__auto__;
}
})()){
return d.cljs$core$IPending$_realized_QMARK_$arity$1(d);
} else {
var x__24918__auto__ = (((d == null))?null:d);
return (function (){var or__24274__auto__ = (cljs.core._realized_QMARK_[(function (){var G__26156 = x__24918__auto__;
return goog.typeOf(G__26156);
})()]);
if(or__24274__auto__){
return or__24274__auto__;
} else {
var or__24274__auto____$1 = (cljs.core._realized_QMARK_["_"]);
if(or__24274__auto____$1){
return or__24274__auto____$1;
} else {
throw cljs.core.missing_protocol("IPending.-realized?",d);
}
}
})().call(null,d);
}
});


cljs.core.IWatchable = (function (){var obj26158 = {};
return obj26158;
})();

cljs.core._notify_watches = (function _notify_watches(this$,oldval,newval){
if((function (){var and__24262__auto__ = this$;
if(and__24262__auto__){
return this$.cljs$core$IWatchable$_notify_watches$arity$3;
} else {
return and__24262__auto__;
}
})()){
return this$.cljs$core$IWatchable$_notify_watches$arity$3(this$,oldval,newval);
} else {
var x__24918__auto__ = (((this$ == null))?null:this$);
return (function (){var or__24274__auto__ = (cljs.core._notify_watches[(function (){var G__26162 = x__24918__auto__;
return goog.typeOf(G__26162);
})()]);
if(or__24274__auto__){
return or__24274__auto__;
} else {
var or__24274__auto____$1 = (cljs.core._notify_watches["_"]);
if(or__24274__auto____$1){
return or__24274__auto____$1;
} else {
throw cljs.core.missing_protocol("IWatchable.-notify-watches",this$);
}
}
})().call(null,this$,oldval,newval);
}
});

cljs.core._add_watch = (function _add_watch(this$,key,f){
if((function (){var and__24262__auto__ = this$;
if(and__24262__auto__){
return this$.cljs$core$IWatchable$_add_watch$arity$3;
} else {
return and__24262__auto__;
}
})()){
return this$.cljs$core$IWatchable$_add_watch$arity$3(this$,key,f);
} else {
var x__24918__auto__ = (((this$ == null))?null:this$);
return (function (){var or__24274__auto__ = (cljs.core._add_watch[(function (){var G__26166 = x__24918__auto__;
return goog.typeOf(G__26166);
})()]);
if(or__24274__auto__){
return or__24274__auto__;
} else {
var or__24274__auto____$1 = (cljs.core._add_watch["_"]);
if(or__24274__auto____$1){
return or__24274__auto____$1;
} else {
throw cljs.core.missing_protocol("IWatchable.-add-watch",this$);
}
}
})().call(null,this$,key,f);
}
});

cljs.core._remove_watch = (function _remove_watch(this$,key){
if((function (){var and__24262__auto__ = this$;
if(and__24262__auto__){
return this$.cljs$core$IWatchable$_remove_watch$arity$2;
} else {
return and__24262__auto__;
}
})()){
return this$.cljs$core$IWatchable$_remove_watch$arity$2(this$,key);
} else {
var x__24918__auto__ = (((this$ == null))?null:this$);
return (function (){var or__24274__auto__ = (cljs.core._remove_watch[(function (){var G__26170 = x__24918__auto__;
return goog.typeOf(G__26170);
})()]);
if(or__24274__auto__){
return or__24274__auto__;
} else {
var or__24274__auto____$1 = (cljs.core._remove_watch["_"]);
if(or__24274__auto____$1){
return or__24274__auto____$1;
} else {
throw cljs.core.missing_protocol("IWatchable.-remove-watch",this$);
}
}
})().call(null,this$,key);
}
});


cljs.core.IEditableCollection = (function (){var obj26172 = {};
return obj26172;
})();

cljs.core._as_transient = (function _as_transient(coll){
if((function (){var and__24262__auto__ = coll;
if(and__24262__auto__){
return coll.cljs$core$IEditableCollection$_as_transient$arity$1;
} else {
return and__24262__auto__;
}
})()){
return coll.cljs$core$IEditableCollection$_as_transient$arity$1(coll);
} else {
var x__24918__auto__ = (((coll == null))?null:coll);
return (function (){var or__24274__auto__ = (cljs.core._as_transient[(function (){var G__26176 = x__24918__auto__;
return goog.typeOf(G__26176);
})()]);
if(or__24274__auto__){
return or__24274__auto__;
} else {
var or__24274__auto____$1 = (cljs.core._as_transient["_"]);
if(or__24274__auto____$1){
return or__24274__auto____$1;
} else {
throw cljs.core.missing_protocol("IEditableCollection.-as-transient",coll);
}
}
})().call(null,coll);
}
});


cljs.core.ITransientCollection = (function (){var obj26178 = {};
return obj26178;
})();

cljs.core._conj_BANG_ = (function _conj_BANG_(tcoll,val){
if((function (){var and__24262__auto__ = tcoll;
if(and__24262__auto__){
return tcoll.cljs$core$ITransientCollection$_conj_BANG_$arity$2;
} else {
return and__24262__auto__;
}
})()){
return tcoll.cljs$core$ITransientCollection$_conj_BANG_$arity$2(tcoll,val);
} else {
var x__24918__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__24274__auto__ = (cljs.core._conj_BANG_[(function (){var G__26182 = x__24918__auto__;
return goog.typeOf(G__26182);
})()]);
if(or__24274__auto__){
return or__24274__auto__;
} else {
var or__24274__auto____$1 = (cljs.core._conj_BANG_["_"]);
if(or__24274__auto____$1){
return or__24274__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientCollection.-conj!",tcoll);
}
}
})().call(null,tcoll,val);
}
});

cljs.core._persistent_BANG_ = (function _persistent_BANG_(tcoll){
if((function (){var and__24262__auto__ = tcoll;
if(and__24262__auto__){
return tcoll.cljs$core$ITransientCollection$_persistent_BANG_$arity$1;
} else {
return and__24262__auto__;
}
})()){
return tcoll.cljs$core$ITransientCollection$_persistent_BANG_$arity$1(tcoll);
} else {
var x__24918__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__24274__auto__ = (cljs.core._persistent_BANG_[(function (){var G__26186 = x__24918__auto__;
return goog.typeOf(G__26186);
})()]);
if(or__24274__auto__){
return or__24274__auto__;
} else {
var or__24274__auto____$1 = (cljs.core._persistent_BANG_["_"]);
if(or__24274__auto____$1){
return or__24274__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientCollection.-persistent!",tcoll);
}
}
})().call(null,tcoll);
}
});


cljs.core.ITransientAssociative = (function (){var obj26188 = {};
return obj26188;
})();

cljs.core._assoc_BANG_ = (function _assoc_BANG_(tcoll,key,val){
if((function (){var and__24262__auto__ = tcoll;
if(and__24262__auto__){
return tcoll.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3;
} else {
return and__24262__auto__;
}
})()){
return tcoll.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3(tcoll,key,val);
} else {
var x__24918__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__24274__auto__ = (cljs.core._assoc_BANG_[(function (){var G__26192 = x__24918__auto__;
return goog.typeOf(G__26192);
})()]);
if(or__24274__auto__){
return or__24274__auto__;
} else {
var or__24274__auto____$1 = (cljs.core._assoc_BANG_["_"]);
if(or__24274__auto____$1){
return or__24274__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientAssociative.-assoc!",tcoll);
}
}
})().call(null,tcoll,key,val);
}
});


cljs.core.ITransientMap = (function (){var obj26194 = {};
return obj26194;
})();

cljs.core._dissoc_BANG_ = (function _dissoc_BANG_(tcoll,key){
if((function (){var and__24262__auto__ = tcoll;
if(and__24262__auto__){
return tcoll.cljs$core$ITransientMap$_dissoc_BANG_$arity$2;
} else {
return and__24262__auto__;
}
})()){
return tcoll.cljs$core$ITransientMap$_dissoc_BANG_$arity$2(tcoll,key);
} else {
var x__24918__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__24274__auto__ = (cljs.core._dissoc_BANG_[(function (){var G__26198 = x__24918__auto__;
return goog.typeOf(G__26198);
})()]);
if(or__24274__auto__){
return or__24274__auto__;
} else {
var or__24274__auto____$1 = (cljs.core._dissoc_BANG_["_"]);
if(or__24274__auto____$1){
return or__24274__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientMap.-dissoc!",tcoll);
}
}
})().call(null,tcoll,key);
}
});


cljs.core.ITransientVector = (function (){var obj26200 = {};
return obj26200;
})();

cljs.core._assoc_n_BANG_ = (function _assoc_n_BANG_(tcoll,n,val){
if((function (){var and__24262__auto__ = tcoll;
if(and__24262__auto__){
return tcoll.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3;
} else {
return and__24262__auto__;
}
})()){
return tcoll.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3(tcoll,n,val);
} else {
var x__24918__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__24274__auto__ = (cljs.core._assoc_n_BANG_[(function (){var G__26204 = x__24918__auto__;
return goog.typeOf(G__26204);
})()]);
if(or__24274__auto__){
return or__24274__auto__;
} else {
var or__24274__auto____$1 = (cljs.core._assoc_n_BANG_["_"]);
if(or__24274__auto____$1){
return or__24274__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientVector.-assoc-n!",tcoll);
}
}
})().call(null,tcoll,n,val);
}
});

cljs.core._pop_BANG_ = (function _pop_BANG_(tcoll){
if((function (){var and__24262__auto__ = tcoll;
if(and__24262__auto__){
return tcoll.cljs$core$ITransientVector$_pop_BANG_$arity$1;
} else {
return and__24262__auto__;
}
})()){
return tcoll.cljs$core$ITransientVector$_pop_BANG_$arity$1(tcoll);
} else {
var x__24918__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__24274__auto__ = (cljs.core._pop_BANG_[(function (){var G__26208 = x__24918__auto__;
return goog.typeOf(G__26208);
})()]);
if(or__24274__auto__){
return or__24274__auto__;
} else {
var or__24274__auto____$1 = (cljs.core._pop_BANG_["_"]);
if(or__24274__auto____$1){
return or__24274__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientVector.-pop!",tcoll);
}
}
})().call(null,tcoll);
}
});


cljs.core.ITransientSet = (function (){var obj26210 = {};
return obj26210;
})();

cljs.core._disjoin_BANG_ = (function _disjoin_BANG_(tcoll,v){
if((function (){var and__24262__auto__ = tcoll;
if(and__24262__auto__){
return tcoll.cljs$core$ITransientSet$_disjoin_BANG_$arity$2;
} else {
return and__24262__auto__;
}
})()){
return tcoll.cljs$core$ITransientSet$_disjoin_BANG_$arity$2(tcoll,v);
} else {
var x__24918__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__24274__auto__ = (cljs.core._disjoin_BANG_[(function (){var G__26214 = x__24918__auto__;
return goog.typeOf(G__26214);
})()]);
if(or__24274__auto__){
return or__24274__auto__;
} else {
var or__24274__auto____$1 = (cljs.core._disjoin_BANG_["_"]);
if(or__24274__auto____$1){
return or__24274__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientSet.-disjoin!",tcoll);
}
}
})().call(null,tcoll,v);
}
});


cljs.core.IComparable = (function (){var obj26216 = {};
return obj26216;
})();

cljs.core._compare = (function _compare(x,y){
if((function (){var and__24262__auto__ = x;
if(and__24262__auto__){
return x.cljs$core$IComparable$_compare$arity$2;
} else {
return and__24262__auto__;
}
})()){
return x.cljs$core$IComparable$_compare$arity$2(x,y);
} else {
var x__24918__auto__ = (((x == null))?null:x);
return (function (){var or__24274__auto__ = (cljs.core._compare[(function (){var G__26220 = x__24918__auto__;
return goog.typeOf(G__26220);
})()]);
if(or__24274__auto__){
return or__24274__auto__;
} else {
var or__24274__auto____$1 = (cljs.core._compare["_"]);
if(or__24274__auto____$1){
return or__24274__auto____$1;
} else {
throw cljs.core.missing_protocol("IComparable.-compare",x);
}
}
})().call(null,x,y);
}
});


cljs.core.IChunk = (function (){var obj26222 = {};
return obj26222;
})();

cljs.core._drop_first = (function _drop_first(coll){
if((function (){var and__24262__auto__ = coll;
if(and__24262__auto__){
return coll.cljs$core$IChunk$_drop_first$arity$1;
} else {
return and__24262__auto__;
}
})()){
return coll.cljs$core$IChunk$_drop_first$arity$1(coll);
} else {
var x__24918__auto__ = (((coll == null))?null:coll);
return (function (){var or__24274__auto__ = (cljs.core._drop_first[(function (){var G__26226 = x__24918__auto__;
return goog.typeOf(G__26226);
})()]);
if(or__24274__auto__){
return or__24274__auto__;
} else {
var or__24274__auto____$1 = (cljs.core._drop_first["_"]);
if(or__24274__auto____$1){
return or__24274__auto____$1;
} else {
throw cljs.core.missing_protocol("IChunk.-drop-first",coll);
}
}
})().call(null,coll);
}
});


cljs.core.IChunkedSeq = (function (){var obj26228 = {};
return obj26228;
})();

cljs.core._chunked_first = (function _chunked_first(coll){
if((function (){var and__24262__auto__ = coll;
if(and__24262__auto__){
return coll.cljs$core$IChunkedSeq$_chunked_first$arity$1;
} else {
return and__24262__auto__;
}
})()){
return coll.cljs$core$IChunkedSeq$_chunked_first$arity$1(coll);
} else {
var x__24918__auto__ = (((coll == null))?null:coll);
return (function (){var or__24274__auto__ = (cljs.core._chunked_first[(function (){var G__26232 = x__24918__auto__;
return goog.typeOf(G__26232);
})()]);
if(or__24274__auto__){
return or__24274__auto__;
} else {
var or__24274__auto____$1 = (cljs.core._chunked_first["_"]);
if(or__24274__auto____$1){
return or__24274__auto____$1;
} else {
throw cljs.core.missing_protocol("IChunkedSeq.-chunked-first",coll);
}
}
})().call(null,coll);
}
});

cljs.core._chunked_rest = (function _chunked_rest(coll){
if((function (){var and__24262__auto__ = coll;
if(and__24262__auto__){
return coll.cljs$core$IChunkedSeq$_chunked_rest$arity$1;
} else {
return and__24262__auto__;
}
})()){
return coll.cljs$core$IChunkedSeq$_chunked_rest$arity$1(coll);
} else {
var x__24918__auto__ = (((coll == null))?null:coll);
return (function (){var or__24274__auto__ = (cljs.core._chunked_rest[(function (){var G__26236 = x__24918__auto__;
return goog.typeOf(G__26236);
})()]);
if(or__24274__auto__){
return or__24274__auto__;
} else {
var or__24274__auto____$1 = (cljs.core._chunked_rest["_"]);
if(or__24274__auto____$1){
return or__24274__auto____$1;
} else {
throw cljs.core.missing_protocol("IChunkedSeq.-chunked-rest",coll);
}
}
})().call(null,coll);
}
});


cljs.core.IChunkedNext = (function (){var obj26238 = {};
return obj26238;
})();

cljs.core._chunked_next = (function _chunked_next(coll){
if((function (){var and__24262__auto__ = coll;
if(and__24262__auto__){
return coll.cljs$core$IChunkedNext$_chunked_next$arity$1;
} else {
return and__24262__auto__;
}
})()){
return coll.cljs$core$IChunkedNext$_chunked_next$arity$1(coll);
} else {
var x__24918__auto__ = (((coll == null))?null:coll);
return (function (){var or__24274__auto__ = (cljs.core._chunked_next[(function (){var G__26242 = x__24918__auto__;
return goog.typeOf(G__26242);
})()]);
if(or__24274__auto__){
return or__24274__auto__;
} else {
var or__24274__auto____$1 = (cljs.core._chunked_next["_"]);
if(or__24274__auto____$1){
return or__24274__auto____$1;
} else {
throw cljs.core.missing_protocol("IChunkedNext.-chunked-next",coll);
}
}
})().call(null,coll);
}
});


cljs.core.INamed = (function (){var obj26244 = {};
return obj26244;
})();

cljs.core._name = (function _name(x){
if((function (){var and__24262__auto__ = x;
if(and__24262__auto__){
return x.cljs$core$INamed$_name$arity$1;
} else {
return and__24262__auto__;
}
})()){
return x.cljs$core$INamed$_name$arity$1(x);
} else {
var x__24918__auto__ = (((x == null))?null:x);
return (function (){var or__24274__auto__ = (cljs.core._name[(function (){var G__26248 = x__24918__auto__;
return goog.typeOf(G__26248);
})()]);
if(or__24274__auto__){
return or__24274__auto__;
} else {
var or__24274__auto____$1 = (cljs.core._name["_"]);
if(or__24274__auto____$1){
return or__24274__auto____$1;
} else {
throw cljs.core.missing_protocol("INamed.-name",x);
}
}
})().call(null,x);
}
});

cljs.core._namespace = (function _namespace(x){
if((function (){var and__24262__auto__ = x;
if(and__24262__auto__){
return x.cljs$core$INamed$_namespace$arity$1;
} else {
return and__24262__auto__;
}
})()){
return x.cljs$core$INamed$_namespace$arity$1(x);
} else {
var x__24918__auto__ = (((x == null))?null:x);
return (function (){var or__24274__auto__ = (cljs.core._namespace[(function (){var G__26252 = x__24918__auto__;
return goog.typeOf(G__26252);
})()]);
if(or__24274__auto__){
return or__24274__auto__;
} else {
var or__24274__auto____$1 = (cljs.core._namespace["_"]);
if(or__24274__auto____$1){
return or__24274__auto____$1;
} else {
throw cljs.core.missing_protocol("INamed.-namespace",x);
}
}
})().call(null,x);
}
});


cljs.core.IAtom = (function (){var obj26254 = {};
return obj26254;
})();


cljs.core.IReset = (function (){var obj26256 = {};
return obj26256;
})();

cljs.core._reset_BANG_ = (function _reset_BANG_(o,new_value){
if((function (){var and__24262__auto__ = o;
if(and__24262__auto__){
return o.cljs$core$IReset$_reset_BANG_$arity$2;
} else {
return and__24262__auto__;
}
})()){
return o.cljs$core$IReset$_reset_BANG_$arity$2(o,new_value);
} else {
var x__24918__auto__ = (((o == null))?null:o);
return (function (){var or__24274__auto__ = (cljs.core._reset_BANG_[(function (){var G__26260 = x__24918__auto__;
return goog.typeOf(G__26260);
})()]);
if(or__24274__auto__){
return or__24274__auto__;
} else {
var or__24274__auto____$1 = (cljs.core._reset_BANG_["_"]);
if(or__24274__auto____$1){
return or__24274__auto____$1;
} else {
throw cljs.core.missing_protocol("IReset.-reset!",o);
}
}
})().call(null,o,new_value);
}
});


cljs.core.ISwap = (function (){var obj26262 = {};
return obj26262;
})();

cljs.core._swap_BANG_ = (function() {
var _swap_BANG_ = null;
var _swap_BANG___2 = (function (o,f){
if((function (){var and__24262__auto__ = o;
if(and__24262__auto__){
return o.cljs$core$ISwap$_swap_BANG_$arity$2;
} else {
return and__24262__auto__;
}
})()){
return o.cljs$core$ISwap$_swap_BANG_$arity$2(o,f);
} else {
var x__24918__auto__ = (((o == null))?null:o);
return (function (){var or__24274__auto__ = (cljs.core._swap_BANG_[(function (){var G__26272 = x__24918__auto__;
return goog.typeOf(G__26272);
})()]);
if(or__24274__auto__){
return or__24274__auto__;
} else {
var or__24274__auto____$1 = (cljs.core._swap_BANG_["_"]);
if(or__24274__auto____$1){
return or__24274__auto____$1;
} else {
throw cljs.core.missing_protocol("ISwap.-swap!",o);
}
}
})().call(null,o,f);
}
});
var _swap_BANG___3 = (function (o,f,a){
if((function (){var and__24262__auto__ = o;
if(and__24262__auto__){
return o.cljs$core$ISwap$_swap_BANG_$arity$3;
} else {
return and__24262__auto__;
}
})()){
return o.cljs$core$ISwap$_swap_BANG_$arity$3(o,f,a);
} else {
var x__24918__auto__ = (((o == null))?null:o);
return (function (){var or__24274__auto__ = (cljs.core._swap_BANG_[(function (){var G__26274 = x__24918__auto__;
return goog.typeOf(G__26274);
})()]);
if(or__24274__auto__){
return or__24274__auto__;
} else {
var or__24274__auto____$1 = (cljs.core._swap_BANG_["_"]);
if(or__24274__auto____$1){
return or__24274__auto____$1;
} else {
throw cljs.core.missing_protocol("ISwap.-swap!",o);
}
}
})().call(null,o,f,a);
}
});
var _swap_BANG___4 = (function (o,f,a,b){
if((function (){var and__24262__auto__ = o;
if(and__24262__auto__){
return o.cljs$core$ISwap$_swap_BANG_$arity$4;
} else {
return and__24262__auto__;
}
})()){
return o.cljs$core$ISwap$_swap_BANG_$arity$4(o,f,a,b);
} else {
var x__24918__auto__ = (((o == null))?null:o);
return (function (){var or__24274__auto__ = (cljs.core._swap_BANG_[(function (){var G__26276 = x__24918__auto__;
return goog.typeOf(G__26276);
})()]);
if(or__24274__auto__){
return or__24274__auto__;
} else {
var or__24274__auto____$1 = (cljs.core._swap_BANG_["_"]);
if(or__24274__auto____$1){
return or__24274__auto____$1;
} else {
throw cljs.core.missing_protocol("ISwap.-swap!",o);
}
}
})().call(null,o,f,a,b);
}
});
var _swap_BANG___5 = (function (o,f,a,b,xs){
if((function (){var and__24262__auto__ = o;
if(and__24262__auto__){
return o.cljs$core$ISwap$_swap_BANG_$arity$5;
} else {
return and__24262__auto__;
}
})()){
return o.cljs$core$ISwap$_swap_BANG_$arity$5(o,f,a,b,xs);
} else {
var x__24918__auto__ = (((o == null))?null:o);
return (function (){var or__24274__auto__ = (cljs.core._swap_BANG_[(function (){var G__26278 = x__24918__auto__;
return goog.typeOf(G__26278);
})()]);
if(or__24274__auto__){
return or__24274__auto__;
} else {
var or__24274__auto____$1 = (cljs.core._swap_BANG_["_"]);
if(or__24274__auto____$1){
return or__24274__auto____$1;
} else {
throw cljs.core.missing_protocol("ISwap.-swap!",o);
}
}
})().call(null,o,f,a,b,xs);
}
});
_swap_BANG_ = function(o,f,a,b,xs){
switch(arguments.length){
case 2:
return _swap_BANG___2.call(this,o,f);
case 3:
return _swap_BANG___3.call(this,o,f,a);
case 4:
return _swap_BANG___4.call(this,o,f,a,b);
case 5:
return _swap_BANG___5.call(this,o,f,a,b,xs);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_swap_BANG_.cljs$core$IFn$_invoke$arity$2 = _swap_BANG___2;
_swap_BANG_.cljs$core$IFn$_invoke$arity$3 = _swap_BANG___3;
_swap_BANG_.cljs$core$IFn$_invoke$arity$4 = _swap_BANG___4;
_swap_BANG_.cljs$core$IFn$_invoke$arity$5 = _swap_BANG___5;
return _swap_BANG_;
})()
;


cljs.core.IVolatile = (function (){var obj26280 = {};
return obj26280;
})();

cljs.core._vreset_BANG_ = (function _vreset_BANG_(o,new_value){
if((function (){var and__24262__auto__ = o;
if(and__24262__auto__){
return o.cljs$core$IVolatile$_vreset_BANG_$arity$2;
} else {
return and__24262__auto__;
}
})()){
return o.cljs$core$IVolatile$_vreset_BANG_$arity$2(o,new_value);
} else {
var x__24918__auto__ = (((o == null))?null:o);
return (function (){var or__24274__auto__ = (cljs.core._vreset_BANG_[(function (){var G__26284 = x__24918__auto__;
return goog.typeOf(G__26284);
})()]);
if(or__24274__auto__){
return or__24274__auto__;
} else {
var or__24274__auto____$1 = (cljs.core._vreset_BANG_["_"]);
if(or__24274__auto____$1){
return or__24274__auto____$1;
} else {
throw cljs.core.missing_protocol("IVolatile.-vreset!",o);
}
}
})().call(null,o,new_value);
}
});


cljs.core.IIterable = (function (){var obj26286 = {};
return obj26286;
})();

cljs.core._iterator = (function _iterator(coll){
if((function (){var and__24262__auto__ = coll;
if(and__24262__auto__){
return coll.cljs$core$IIterable$_iterator$arity$1;
} else {
return and__24262__auto__;
}
})()){
return coll.cljs$core$IIterable$_iterator$arity$1(coll);
} else {
var x__24918__auto__ = (((coll == null))?null:coll);
return (function (){var or__24274__auto__ = (cljs.core._iterator[(function (){var G__26290 = x__24918__auto__;
return goog.typeOf(G__26290);
})()]);
if(or__24274__auto__){
return or__24274__auto__;
} else {
var or__24274__auto____$1 = (cljs.core._iterator["_"]);
if(or__24274__auto____$1){
return or__24274__auto____$1;
} else {
throw cljs.core.missing_protocol("IIterable.-iterator",coll);
}
}
})().call(null,coll);
}
});


/**
* @constructor
*/
cljs.core.StringBufferWriter = (function (sb){
this.sb = sb;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 1073741824;
})
cljs.core.StringBufferWriter.prototype.cljs$core$IWriter$_write$arity$2 = (function (_,s){
var self__ = this;
var ___$1 = this;
return self__.sb.append(s);
});

cljs.core.StringBufferWriter.prototype.cljs$core$IWriter$_flush$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return null;
});

cljs.core.StringBufferWriter.cljs$lang$type = true;

cljs.core.StringBufferWriter.cljs$lang$ctorStr = "cljs.core/StringBufferWriter";

cljs.core.StringBufferWriter.cljs$lang$ctorPrWriter = (function (this__24861__auto__,writer__24862__auto__,opt__24863__auto__){
return cljs.core._write(writer__24862__auto__,"cljs.core/StringBufferWriter");
});

cljs.core.__GT_StringBufferWriter = (function __GT_StringBufferWriter(sb){
return (new cljs.core.StringBufferWriter(sb));
});

/**
* Support so that collections can implement toString without
* loading all the printing machinery.
*/
cljs.core.pr_str_STAR_ = (function pr_str_STAR_(obj){
var sb = (new goog.string.StringBuffer());
var writer = (new cljs.core.StringBufferWriter(sb));
obj.cljs$core$IPrintWithWriter$_pr_writer$arity$3(null,writer,cljs.core.pr_opts());

writer.cljs$core$IWriter$_flush$arity$1(null);

return [cljs.core.str(sb)].join('');
});
cljs.core.int_rotate_left = (function int_rotate_left(x,n){
return ((x << n) | (x >>> (- n)));
});
if((typeof Math.imul !== 'undefined') && (!(((function (){var G__26293 = (4294967295);
var G__26294 = (5);
return (Math.imul.cljs$core$IFn$_invoke$arity$2 ? Math.imul.cljs$core$IFn$_invoke$arity$2(G__26293,G__26294) : Math.imul.call(null,G__26293,G__26294));
})() === (0))))){
cljs.core.imul = (function imul(a,b){
var G__26297 = a;
var G__26298 = b;
return (Math.imul.cljs$core$IFn$_invoke$arity$2 ? Math.imul.cljs$core$IFn$_invoke$arity$2(G__26297,G__26298) : Math.imul.call(null,G__26297,G__26298));
});
} else {
cljs.core.imul = (function imul(a,b){
var ah = ((a >>> (16)) & (65535));
var al = (a & (65535));
var bh = ((b >>> (16)) & (65535));
var bl = (b & (65535));
return (((al * bl) + ((((ah * bl) + (al * bh)) << (16)) >>> (0))) | (0));
});
}
cljs.core.m3_seed = (0);
cljs.core.m3_C1 = (3432918353);
cljs.core.m3_C2 = (461845907);
cljs.core.m3_mix_K1 = (function m3_mix_K1(k1){
return cljs.core.imul(cljs.core.int_rotate_left(cljs.core.imul(k1,cljs.core.m3_C1),(15)),cljs.core.m3_C2);
});
cljs.core.m3_mix_H1 = (function m3_mix_H1(h1,k1){
return (cljs.core.imul(cljs.core.int_rotate_left((h1 ^ k1),(13)),(5)) + (3864292196));
});
cljs.core.m3_fmix = (function m3_fmix(h1,len){
var h1__$1 = h1;
var h1__$2 = (h1__$1 ^ len);
var h1__$3 = (h1__$2 ^ (h1__$2 >>> (16)));
var h1__$4 = cljs.core.imul(h1__$3,(2246822507));
var h1__$5 = (h1__$4 ^ (h1__$4 >>> (13)));
var h1__$6 = cljs.core.imul(h1__$5,(3266489909));
var h1__$7 = (h1__$6 ^ (h1__$6 >>> (16)));
return h1__$7;
});
cljs.core.m3_hash_int = (function m3_hash_int(in$){
if((in$ === (0))){
return in$;
} else {
var k1 = cljs.core.m3_mix_K1(in$);
var h1 = cljs.core.m3_mix_H1(cljs.core.m3_seed,k1);
return cljs.core.m3_fmix(h1,(4));
}
});
cljs.core.m3_hash_unencoded_chars = (function m3_hash_unencoded_chars(in$){
var h1 = (function (){var i = (1);
var h1 = cljs.core.m3_seed;
while(true){
if((i < in$.length)){
var G__26299 = (i + (2));
var G__26300 = cljs.core.m3_mix_H1(h1,cljs.core.m3_mix_K1((in$.charCodeAt((i - (1))) | (in$.charCodeAt(i) << (16)))));
i = G__26299;
h1 = G__26300;
continue;
} else {
return h1;
}
break;
}
})();
var h1__$1 = ((((in$.length & (1)) === (1)))?(h1 ^ cljs.core.m3_mix_K1(in$.charCodeAt((in$.length - (1))))):h1);
return cljs.core.m3_fmix(h1__$1,cljs.core.imul((2),in$.length));
});



cljs.core.string_hash_cache = (function (){var obj26302 = {};
return obj26302;
})();
cljs.core.string_hash_cache_count = (0);
cljs.core.hash_string_STAR_ = (function hash_string_STAR_(s){
if(!((s == null))){
var len = s.length;
if((len > (0))){
var i = (0);
var hash = (0);
while(true){
if((i < len)){
var G__26303 = (i + (1));
var G__26304 = (cljs.core.imul((31),hash) + s.charCodeAt(i));
i = G__26303;
hash = G__26304;
continue;
} else {
return hash;
}
break;
}
} else {
return (0);
}
} else {
return (0);
}
});
cljs.core.add_to_string_hash_cache = (function add_to_string_hash_cache(k){
var h = cljs.core.hash_string_STAR_(k);
(cljs.core.string_hash_cache[k] = h);

cljs.core.string_hash_cache_count = (cljs.core.string_hash_cache_count + (1));

return h;
});
cljs.core.hash_string = (function hash_string(k){
if((cljs.core.string_hash_cache_count > (255))){
cljs.core.string_hash_cache = (function (){var obj26308 = {};
return obj26308;
})();

cljs.core.string_hash_cache_count = (0);
} else {
}

var h = (cljs.core.string_hash_cache[k]);
if(typeof h === 'number'){
return h;
} else {
return cljs.core.add_to_string_hash_cache(k);
}
});
cljs.core.hash = (function hash(o){
if((function (){var G__26311 = o;
if(G__26311){
var bit__24948__auto__ = (G__26311.cljs$lang$protocol_mask$partition0$ & (4194304));
if((bit__24948__auto__) || (G__26311.cljs$core$IHash$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return o.cljs$core$IHash$_hash$arity$1(null);
} else {
if(typeof o === 'number'){
return ((function (){var G__26312 = o;
return (Math.floor.cljs$core$IFn$_invoke$arity$1 ? Math.floor.cljs$core$IFn$_invoke$arity$1(G__26312) : Math.floor.call(null,G__26312));
})() % (2147483647));
} else {
if(o === true){
return (1);
} else {
if(o === false){
return (0);
} else {
if(typeof o === 'string'){
return cljs.core.m3_hash_int(cljs.core.hash_string(o));
} else {
if((o instanceof Date)){
return o.valueOf();
} else {
if((o == null)){
return (0);
} else {
return cljs.core._hash(o);

}
}
}
}
}
}
}
});
cljs.core.hash_combine = (function hash_combine(seed,hash){
return (seed ^ (((hash + (2654435769)) + (seed << (6))) + (seed >> (2))));
});
cljs.core.instance_QMARK_ = (function instance_QMARK_(t,o){
return (o instanceof t);
});
cljs.core.symbol_QMARK_ = (function symbol_QMARK_(x){
return (x instanceof cljs.core.Symbol);
});
cljs.core.hash_symbol = (function hash_symbol(sym){
return cljs.core.hash_combine(cljs.core.m3_hash_unencoded_chars(sym.name),cljs.core.hash_string(sym.ns));
});
cljs.core.compare_symbols = (function compare_symbols(a,b){
if((a.str === b.str)){
return (0);
} else {
if(cljs.core.truth_((function (){var and__24262__auto__ = cljs.core.not(a.ns);
if(and__24262__auto__){
return b.ns;
} else {
return and__24262__auto__;
}
})())){
return (-1);
} else {
if(cljs.core.truth_(a.ns)){
if(cljs.core.not(b.ns)){
return (1);
} else {
var nsc = (function (){var G__26319 = a.ns;
var G__26320 = b.ns;
return goog.array.defaultCompare(G__26319,G__26320);
})();
if(((0) === nsc)){
var G__26321 = a.name;
var G__26322 = b.name;
return goog.array.defaultCompare(G__26321,G__26322);
} else {
return nsc;
}
}
} else {
var G__26323 = a.name;
var G__26324 = b.name;
return goog.array.defaultCompare(G__26323,G__26324);

}
}
}
});

/**
* @constructor
*/
cljs.core.Symbol = (function (ns,name,str,_hash,_meta){
this.ns = ns;
this.name = name;
this.str = str;
this._hash = _hash;
this._meta = _meta;
this.cljs$lang$protocol_mask$partition0$ = 2154168321;
this.cljs$lang$protocol_mask$partition1$ = 4096;
})
cljs.core.Symbol.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (o,writer,_){
var self__ = this;
var o__$1 = this;
return cljs.core._write(writer,self__.str);
});

cljs.core.Symbol.prototype.cljs$core$INamed$_name$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.name;
});

cljs.core.Symbol.prototype.cljs$core$INamed$_namespace$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.ns;
});

cljs.core.Symbol.prototype.cljs$core$IHash$_hash$arity$1 = (function (sym){
var self__ = this;
var sym__$1 = this;
var h__24695__auto__ = self__._hash;
if(!((h__24695__auto__ == null))){
return h__24695__auto__;
} else {
var h__24695__auto____$1 = cljs.core.hash_symbol(sym__$1);
self__._hash = h__24695__auto____$1;

return h__24695__auto____$1;
}
});

cljs.core.Symbol.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (_,new_meta){
var self__ = this;
var ___$1 = this;
return (new cljs.core.Symbol(self__.ns,self__.name,self__.str,self__._hash,new_meta));
});

cljs.core.Symbol.prototype.cljs$core$IMeta$_meta$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__._meta;
});

cljs.core.Symbol.prototype.call = (function() {
var G__26326 = null;
var G__26326__2 = (function (self__,coll){
var self__ = this;
var self____$1 = this;
var sym = self____$1;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll,sym,null);
});
var G__26326__3 = (function (self__,coll,not_found){
var self__ = this;
var self____$1 = this;
var sym = self____$1;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll,sym,not_found);
});
G__26326 = function(self__,coll,not_found){
switch(arguments.length){
case 2:
return G__26326__2.call(this,self__,coll);
case 3:
return G__26326__3.call(this,self__,coll,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__26326.cljs$core$IFn$_invoke$arity$2 = G__26326__2;
G__26326.cljs$core$IFn$_invoke$arity$3 = G__26326__3;
return G__26326;
})()
;

cljs.core.Symbol.prototype.apply = (function (self__,args26325){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args26325)));
});

cljs.core.Symbol.prototype.cljs$core$IFn$_invoke$arity$1 = (function (coll){
var self__ = this;
var sym = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll,sym,null);
});

cljs.core.Symbol.prototype.cljs$core$IFn$_invoke$arity$2 = (function (coll,not_found){
var self__ = this;
var sym = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll,sym,not_found);
});

cljs.core.Symbol.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (_,other){
var self__ = this;
var ___$1 = this;
if((other instanceof cljs.core.Symbol)){
return (self__.str === other.str);
} else {
return false;
}
});

cljs.core.Symbol.prototype.toString = (function (){
var self__ = this;
var _ = this;
return self__.str;
});

cljs.core.Symbol.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.Symbol.cljs$lang$type = true;

cljs.core.Symbol.cljs$lang$ctorStr = "cljs.core/Symbol";

cljs.core.Symbol.cljs$lang$ctorPrWriter = (function (this__24861__auto__,writer__24862__auto__,opt__24863__auto__){
return cljs.core._write(writer__24862__auto__,"cljs.core/Symbol");
});

cljs.core.__GT_Symbol = (function __GT_Symbol(ns,name,str,_hash,_meta){
return (new cljs.core.Symbol(ns,name,str,_hash,_meta));
});

cljs.core.symbol = (function() {
var symbol = null;
var symbol__1 = (function (name){
if((name instanceof cljs.core.Symbol)){
return name;
} else {
return symbol.cljs$core$IFn$_invoke$arity$2(null,name);
}
});
var symbol__2 = (function (ns,name){
var sym_str = ((!((ns == null)))?[cljs.core.str(ns),cljs.core.str("/"),cljs.core.str(name)].join(''):name);
return (new cljs.core.Symbol(ns,name,sym_str,null,null));
});
symbol = function(ns,name){
switch(arguments.length){
case 1:
return symbol__1.call(this,ns);
case 2:
return symbol__2.call(this,ns,name);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
symbol.cljs$core$IFn$_invoke$arity$1 = symbol__1;
symbol.cljs$core$IFn$_invoke$arity$2 = symbol__2;
return symbol;
})()
;

/**
* @constructor
*/
cljs.core.Var = (function (val,sym,_meta){
this.val = val;
this.sym = sym;
this._meta = _meta;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 163840;
})
cljs.core.Var.prototype.cljs$core$IMeta$_meta$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__._meta;
});

cljs.core.Var.prototype.cljs$core$IDeref$_deref$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.val;
});

cljs.core.Var.cljs$lang$type = true;

cljs.core.Var.cljs$lang$ctorStr = "cljs.core/Var";

cljs.core.Var.cljs$lang$ctorPrWriter = (function (this__24861__auto__,writer__24862__auto__,opt__24863__auto__){
return cljs.core._write(writer__24862__auto__,"cljs.core/Var");
});

cljs.core.__GT_Var = (function __GT_Var(val,sym,_meta){
return (new cljs.core.Var(val,sym,_meta));
});



cljs.core.iterable_QMARK_ = (function iterable_QMARK_(x){
var G__26330 = x;
if(G__26330){
var bit__24955__auto__ = null;
if(cljs.core.truth_((function (){var or__24274__auto__ = bit__24955__auto__;
if(cljs.core.truth_(or__24274__auto__)){
return or__24274__auto__;
} else {
return G__26330.cljs$core$IIterable$;
}
})())){
return true;
} else {
if((!G__26330.cljs$lang$protocol_mask$partition$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IIterable,G__26330);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IIterable,G__26330);
}
});
cljs.core.clone = (function clone(value){
return cljs.core._clone(value);
});
cljs.core.cloneable_QMARK_ = (function cloneable_QMARK_(value){
var G__26332 = value;
if(G__26332){
var bit__24955__auto__ = (G__26332.cljs$lang$protocol_mask$partition1$ & (8192));
if((bit__24955__auto__) || (G__26332.cljs$core$ICloneable$)){
return true;
} else {
if((!G__26332.cljs$lang$protocol_mask$partition1$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ICloneable,G__26332);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ICloneable,G__26332);
}
});
/**
* Returns a seq on the collection. If the collection is
* empty, returns nil.  (seq nil) returns nil. seq also works on
* Strings.
*/
cljs.core.seq = (function seq(coll){
if((coll == null)){
return null;
} else {
if((function (){var G__26334 = coll;
if(G__26334){
var bit__24948__auto__ = (G__26334.cljs$lang$protocol_mask$partition0$ & (8388608));
if((bit__24948__auto__) || (G__26334.cljs$core$ISeqable$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$ISeqable$_seq$arity$1(null);
} else {
if(coll instanceof Array){
if((coll.length === (0))){
return null;
} else {
return (new cljs.core.IndexedSeq(coll,(0)));
}
} else {
if(typeof coll === 'string'){
if((coll.length === (0))){
return null;
} else {
return (new cljs.core.IndexedSeq(coll,(0)));
}
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.ISeqable,coll)){
return cljs.core._seq(coll);
} else {
throw (new Error([cljs.core.str(coll),cljs.core.str(" is not ISeqable")].join('')));

}
}
}
}
}
});
/**
* Returns the first item in the collection. Calls seq on its
* argument. If coll is nil, returns nil.
*/
cljs.core.first = (function first(coll){
if((coll == null)){
return null;
} else {
if((function (){var G__26336 = coll;
if(G__26336){
var bit__24948__auto__ = (G__26336.cljs$lang$protocol_mask$partition0$ & (64));
if((bit__24948__auto__) || (G__26336.cljs$core$ISeq$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$ISeq$_first$arity$1(null);
} else {
var s = cljs.core.seq(coll);
if((s == null)){
return null;
} else {
return cljs.core._first(s);
}
}
}
});
/**
* Returns a possibly empty seq of the items after the first. Calls seq on its
* argument.
*/
cljs.core.rest = (function rest(coll){
if(!((coll == null))){
if((function (){var G__26338 = coll;
if(G__26338){
var bit__24948__auto__ = (G__26338.cljs$lang$protocol_mask$partition0$ & (64));
if((bit__24948__auto__) || (G__26338.cljs$core$ISeq$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$ISeq$_rest$arity$1(null);
} else {
var s = cljs.core.seq(coll);
if(s){
return cljs.core._rest(s);
} else {
return cljs.core.List.EMPTY;
}
}
} else {
return cljs.core.List.EMPTY;
}
});
/**
* Returns a seq of the items after the first. Calls seq on its
* argument.  If there are no more items, returns nil
*/
cljs.core.next = (function next(coll){
if((coll == null)){
return null;
} else {
if((function (){var G__26340 = coll;
if(G__26340){
var bit__24948__auto__ = (G__26340.cljs$lang$protocol_mask$partition0$ & (128));
if((bit__24948__auto__) || (G__26340.cljs$core$INext$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$INext$_next$arity$1(null);
} else {
return cljs.core.seq(cljs.core.rest(coll));
}
}
});
/**
* Equality. Returns true if x equals y, false if not. Compares
* numbers and collections in a type-independent manner.  Clojure's immutable data
* structures define -equiv (and thus =) as a value, not an identity,
* comparison.
* @param {...*} var_args
*/
cljs.core._EQ_ = (function() {
var _EQ_ = null;
var _EQ___1 = (function (x){
return true;
});
var _EQ___2 = (function (x,y){
if((x == null)){
return (y == null);
} else {
return ((x === y)) || (cljs.core._equiv(x,y));
}
});
var _EQ___3 = (function() { 
var G__26345__delegate = function (x,y,more){
while(true){
if(_EQ_.cljs$core$IFn$_invoke$arity$2(x,y)){
if(cljs.core.next(more)){
var G__26346 = y;
var G__26347 = cljs.core.first(more);
var G__26348 = cljs.core.next(more);
x = G__26346;
y = G__26347;
more = G__26348;
continue;
} else {
return _EQ_.cljs$core$IFn$_invoke$arity$2(y,cljs.core.first(more));
}
} else {
return false;
}
break;
}
};
var G__26345 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__26349__i = 0, G__26349__a = new Array(arguments.length -  2);
while (G__26349__i < G__26349__a.length) {G__26349__a[G__26349__i] = arguments[G__26349__i + 2]; ++G__26349__i;}
  more = new cljs.core.IndexedSeq(G__26349__a,0);
} 
return G__26345__delegate.call(this,x,y,more);};
G__26345.cljs$lang$maxFixedArity = 2;
G__26345.cljs$lang$applyTo = (function (arglist__26350){
var x = cljs.core.first(arglist__26350);
arglist__26350 = cljs.core.next(arglist__26350);
var y = cljs.core.first(arglist__26350);
var more = cljs.core.rest(arglist__26350);
return G__26345__delegate(x,y,more);
});
G__26345.cljs$core$IFn$_invoke$arity$variadic = G__26345__delegate;
return G__26345;
})()
;
_EQ_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return _EQ___1.call(this,x);
case 2:
return _EQ___2.call(this,x,y);
default:
var G__26351 = null;
if (arguments.length > 2) {
var G__26352__i = 0, G__26352__a = new Array(arguments.length -  2);
while (G__26352__i < G__26352__a.length) {G__26352__a[G__26352__i] = arguments[G__26352__i + 2]; ++G__26352__i;}
G__26351 = new cljs.core.IndexedSeq(G__26352__a,0);
}
return _EQ___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__26351);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_EQ_.cljs$lang$maxFixedArity = 2;
_EQ_.cljs$lang$applyTo = _EQ___3.cljs$lang$applyTo;
_EQ_.cljs$core$IFn$_invoke$arity$1 = _EQ___1;
_EQ_.cljs$core$IFn$_invoke$arity$2 = _EQ___2;
_EQ_.cljs$core$IFn$_invoke$arity$variadic = _EQ___3.cljs$core$IFn$_invoke$arity$variadic;
return _EQ_;
})()
;

/**
* @constructor
*/
cljs.core.ES6Iterator = (function (s){
this.s = s;
})
cljs.core.ES6Iterator.prototype.next = (function (){
var self__ = this;
var _ = this;
if(!((self__.s == null))){
var x = cljs.core.first(self__.s);
self__.s = cljs.core.next(self__.s);

return {"done": false, "value": x};
} else {
return {"done": true, "value": null};
}
});

cljs.core.ES6Iterator.cljs$lang$type = true;

cljs.core.ES6Iterator.cljs$lang$ctorStr = "cljs.core/ES6Iterator";

cljs.core.ES6Iterator.cljs$lang$ctorPrWriter = (function (this__24861__auto__,writer__24862__auto__,opt__24863__auto__){
return cljs.core._write(writer__24862__auto__,"cljs.core/ES6Iterator");
});

cljs.core.__GT_ES6Iterator = (function __GT_ES6Iterator(s){
return (new cljs.core.ES6Iterator(s));
});

cljs.core.es6_iterator = (function es6_iterator(coll){
return (new cljs.core.ES6Iterator(cljs.core.seq(coll)));
});

/**
* @constructor
*/
cljs.core.ES6IteratorSeq = (function (value,iter,_rest){
this.value = value;
this.iter = iter;
this._rest = _rest;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 8388672;
})
cljs.core.ES6IteratorSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.value;
});

cljs.core.ES6IteratorSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
if((self__._rest == null)){
self__._rest = (function (){var G__26353 = self__.iter;
return (cljs.core.es6_iterator_seq.cljs$core$IFn$_invoke$arity$1 ? cljs.core.es6_iterator_seq.cljs$core$IFn$_invoke$arity$1(G__26353) : cljs.core.es6_iterator_seq.call(null,G__26353));
})();
} else {
}

return self__._rest;
});

cljs.core.ES6IteratorSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return this$__$1;
});

cljs.core.ES6IteratorSeq.cljs$lang$type = true;

cljs.core.ES6IteratorSeq.cljs$lang$ctorStr = "cljs.core/ES6IteratorSeq";

cljs.core.ES6IteratorSeq.cljs$lang$ctorPrWriter = (function (this__24861__auto__,writer__24862__auto__,opt__24863__auto__){
return cljs.core._write(writer__24862__auto__,"cljs.core/ES6IteratorSeq");
});

cljs.core.__GT_ES6IteratorSeq = (function __GT_ES6IteratorSeq(value,iter,_rest){
return (new cljs.core.ES6IteratorSeq(value,iter,_rest));
});

cljs.core.es6_iterator_seq = (function es6_iterator_seq(iter){
var v = iter.next();
if(cljs.core.truth_(v.done)){
return cljs.core.List.EMPTY;
} else {
return (new cljs.core.ES6IteratorSeq(v.value,iter,null));
}
});
/**
* Mix final collection hash for ordered or unordered collections.
* hash-basis is the combined collection hash, count is the number
* of elements included in the basis. Note this is the hash code
* consistent with =, different from .hashCode.
* See http://clojure.org/data_structures#hash for full algorithms.
*/
cljs.core.mix_collection_hash = (function mix_collection_hash(hash_basis,count){
var h1 = cljs.core.m3_seed;
var k1 = cljs.core.m3_mix_K1(hash_basis);
var h1__$1 = cljs.core.m3_mix_H1(h1,k1);
return cljs.core.m3_fmix(h1__$1,count);
});
/**
* Returns the hash code, consistent with =, for an external ordered
* collection implementing Iterable.
* See http://clojure.org/data_structures#hash for full algorithms.
*/
cljs.core.hash_ordered_coll = (function hash_ordered_coll(coll){
var n = (0);
var hash_code = (1);
var coll__$1 = cljs.core.seq(coll);
while(true){
if(!((coll__$1 == null))){
var G__26354 = (n + (1));
var G__26355 = ((cljs.core.imul((31),hash_code) + cljs.core.hash(cljs.core.first(coll__$1))) | (0));
var G__26356 = cljs.core.next(coll__$1);
n = G__26354;
hash_code = G__26355;
coll__$1 = G__26356;
continue;
} else {
return cljs.core.mix_collection_hash(hash_code,n);
}
break;
}
});
/**
* Returns the hash code, consistent with =, for an external unordered
* collection implementing Iterable. For maps, the iterator should
* return map entries whose hash is computed as
* (hash-ordered-coll [k v]).
* See http://clojure.org/data_structures#hash for full algorithms.
*/
cljs.core.hash_unordered_coll = (function hash_unordered_coll(coll){
var n = (0);
var hash_code = (0);
var coll__$1 = cljs.core.seq(coll);
while(true){
if(!((coll__$1 == null))){
var G__26357 = (n + (1));
var G__26358 = ((hash_code + cljs.core.hash(cljs.core.first(coll__$1))) | (0));
var G__26359 = cljs.core.next(coll__$1);
n = G__26357;
hash_code = G__26358;
coll__$1 = G__26359;
continue;
} else {
return cljs.core.mix_collection_hash(hash_code,n);
}
break;
}
});


(cljs.core.ICounted["null"] = true);

(cljs.core._count["null"] = (function (_){
return (0);
}));
Date.prototype.cljs$core$IEquiv$ = true;

Date.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (o,other){
var o__$1 = this;
return ((other instanceof Date)) && ((o__$1.toString() === other.toString()));
});
(cljs.core.IEquiv["number"] = true);

(cljs.core._equiv["number"] = (function (x,o){
return (x === o);
}));
(cljs.core.IMeta["function"] = true);

(cljs.core._meta["function"] = (function (_){
return null;
}));

(cljs.core.Fn["function"] = true);
(cljs.core.IHash["_"] = true);

(cljs.core._hash["_"] = (function (o){
var G__26360 = o;
return goog.getUid(G__26360);
}));
/**
* Returns a number one greater than num.
*/
cljs.core.inc = (function inc(x){
return (x + (1));
});

/**
* @constructor
*/
cljs.core.Reduced = (function (val){
this.val = val;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32768;
})
cljs.core.Reduced.prototype.cljs$core$IDeref$_deref$arity$1 = (function (o){
var self__ = this;
var o__$1 = this;
return self__.val;
});

cljs.core.Reduced.cljs$lang$type = true;

cljs.core.Reduced.cljs$lang$ctorStr = "cljs.core/Reduced";

cljs.core.Reduced.cljs$lang$ctorPrWriter = (function (this__24861__auto__,writer__24862__auto__,opt__24863__auto__){
return cljs.core._write(writer__24862__auto__,"cljs.core/Reduced");
});

cljs.core.__GT_Reduced = (function __GT_Reduced(val){
return (new cljs.core.Reduced(val));
});

/**
* Wraps x in a way such that a reduce will terminate with the value x
*/
cljs.core.reduced = (function reduced(x){
return (new cljs.core.Reduced(x));
});
/**
* Returns true if x is the result of a call to reduced
*/
cljs.core.reduced_QMARK_ = (function reduced_QMARK_(r){
return (r instanceof cljs.core.Reduced);
});
/**
* If x is already reduced?, returns it, else returns (reduced x)
*/
cljs.core.ensure_reduced = (function ensure_reduced(x){
if(cljs.core.reduced_QMARK_(x)){
return x;
} else {
return cljs.core.reduced(x);
}
});
/**
* If x is reduced?, returns (deref x), else returns x
*/
cljs.core.unreduced = (function unreduced(x){
if(cljs.core.reduced_QMARK_(x)){
var G__26362 = x;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__26362) : cljs.core.deref.call(null,G__26362));
} else {
return x;
}
});
cljs.core.deref = (function deref(o){
return cljs.core._deref(o);
});
/**
* Accepts any collection which satisfies the ICount and IIndexed protocols and
* reduces them without incurring seq initialization
*/
cljs.core.ci_reduce = (function() {
var ci_reduce = null;
var ci_reduce__2 = (function (cicoll,f){
var cnt = cljs.core._count(cicoll);
if((cnt === (0))){
return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
} else {
var val = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(cicoll,(0));
var n = (1);
while(true){
if((n < cnt)){
var nval = (function (){var G__26369 = val;
var G__26370 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(cicoll,n);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__26369,G__26370) : f.call(null,G__26369,G__26370));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__26375 = nval;
var G__26376 = (n + (1));
val = G__26375;
n = G__26376;
continue;
}
} else {
return val;
}
break;
}
}
});
var ci_reduce__3 = (function (cicoll,f,val){
var cnt = cljs.core._count(cicoll);
var val__$1 = val;
var n = (0);
while(true){
if((n < cnt)){
var nval = (function (){var G__26371 = val__$1;
var G__26372 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(cicoll,n);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__26371,G__26372) : f.call(null,G__26371,G__26372));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__26377 = nval;
var G__26378 = (n + (1));
val__$1 = G__26377;
n = G__26378;
continue;
}
} else {
return val__$1;
}
break;
}
});
var ci_reduce__4 = (function (cicoll,f,val,idx){
var cnt = cljs.core._count(cicoll);
var val__$1 = val;
var n = idx;
while(true){
if((n < cnt)){
var nval = (function (){var G__26373 = val__$1;
var G__26374 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(cicoll,n);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__26373,G__26374) : f.call(null,G__26373,G__26374));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__26379 = nval;
var G__26380 = (n + (1));
val__$1 = G__26379;
n = G__26380;
continue;
}
} else {
return val__$1;
}
break;
}
});
ci_reduce = function(cicoll,f,val,idx){
switch(arguments.length){
case 2:
return ci_reduce__2.call(this,cicoll,f);
case 3:
return ci_reduce__3.call(this,cicoll,f,val);
case 4:
return ci_reduce__4.call(this,cicoll,f,val,idx);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
ci_reduce.cljs$core$IFn$_invoke$arity$2 = ci_reduce__2;
ci_reduce.cljs$core$IFn$_invoke$arity$3 = ci_reduce__3;
ci_reduce.cljs$core$IFn$_invoke$arity$4 = ci_reduce__4;
return ci_reduce;
})()
;
cljs.core.array_reduce = (function() {
var array_reduce = null;
var array_reduce__2 = (function (arr,f){
var cnt = arr.length;
if((arr.length === (0))){
return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
} else {
var val = (arr[(0)]);
var n = (1);
while(true){
if((n < cnt)){
var nval = (function (){var G__26387 = val;
var G__26388 = (arr[n]);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__26387,G__26388) : f.call(null,G__26387,G__26388));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__26393 = nval;
var G__26394 = (n + (1));
val = G__26393;
n = G__26394;
continue;
}
} else {
return val;
}
break;
}
}
});
var array_reduce__3 = (function (arr,f,val){
var cnt = arr.length;
var val__$1 = val;
var n = (0);
while(true){
if((n < cnt)){
var nval = (function (){var G__26389 = val__$1;
var G__26390 = (arr[n]);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__26389,G__26390) : f.call(null,G__26389,G__26390));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__26395 = nval;
var G__26396 = (n + (1));
val__$1 = G__26395;
n = G__26396;
continue;
}
} else {
return val__$1;
}
break;
}
});
var array_reduce__4 = (function (arr,f,val,idx){
var cnt = arr.length;
var val__$1 = val;
var n = idx;
while(true){
if((n < cnt)){
var nval = (function (){var G__26391 = val__$1;
var G__26392 = (arr[n]);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__26391,G__26392) : f.call(null,G__26391,G__26392));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__26397 = nval;
var G__26398 = (n + (1));
val__$1 = G__26397;
n = G__26398;
continue;
}
} else {
return val__$1;
}
break;
}
});
array_reduce = function(arr,f,val,idx){
switch(arguments.length){
case 2:
return array_reduce__2.call(this,arr,f);
case 3:
return array_reduce__3.call(this,arr,f,val);
case 4:
return array_reduce__4.call(this,arr,f,val,idx);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
array_reduce.cljs$core$IFn$_invoke$arity$2 = array_reduce__2;
array_reduce.cljs$core$IFn$_invoke$arity$3 = array_reduce__3;
array_reduce.cljs$core$IFn$_invoke$arity$4 = array_reduce__4;
return array_reduce;
})()
;



/**
* Returns true if coll implements count in constant time
*/
cljs.core.counted_QMARK_ = (function counted_QMARK_(x){
var G__26400 = x;
if(G__26400){
var bit__24955__auto__ = (G__26400.cljs$lang$protocol_mask$partition0$ & (2));
if((bit__24955__auto__) || (G__26400.cljs$core$ICounted$)){
return true;
} else {
if((!G__26400.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ICounted,G__26400);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ICounted,G__26400);
}
});
/**
* Returns true if coll implements nth in constant time
*/
cljs.core.indexed_QMARK_ = (function indexed_QMARK_(x){
var G__26402 = x;
if(G__26402){
var bit__24955__auto__ = (G__26402.cljs$lang$protocol_mask$partition0$ & (16));
if((bit__24955__auto__) || (G__26402.cljs$core$IIndexed$)){
return true;
} else {
if((!G__26402.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IIndexed,G__26402);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IIndexed,G__26402);
}
});

/**
* @constructor
*/
cljs.core.IndexedSeqIterator = (function (arr,i){
this.arr = arr;
this.i = i;
})
cljs.core.IndexedSeqIterator.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
return (self__.i < self__.arr.length);
});

cljs.core.IndexedSeqIterator.prototype.next = (function (){
var self__ = this;
var _ = this;
var ret = (self__.arr[self__.i]);
self__.i = (self__.i + (1));

return ret;
});

cljs.core.IndexedSeqIterator.cljs$lang$type = true;

cljs.core.IndexedSeqIterator.cljs$lang$ctorStr = "cljs.core/IndexedSeqIterator";

cljs.core.IndexedSeqIterator.cljs$lang$ctorPrWriter = (function (this__24861__auto__,writer__24862__auto__,opt__24863__auto__){
return cljs.core._write(writer__24862__auto__,"cljs.core/IndexedSeqIterator");
});

cljs.core.__GT_IndexedSeqIterator = (function __GT_IndexedSeqIterator(arr,i){
return (new cljs.core.IndexedSeqIterator(arr,i));
});


/**
* @constructor
*/
cljs.core.IndexedSeq = (function (arr,i){
this.arr = arr;
this.i = i;
this.cljs$lang$protocol_mask$partition0$ = 166199550;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.IndexedSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.IndexedSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.IndexedSeq.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (coll,n){
var self__ = this;
var coll__$1 = this;
var i__$1 = (n + self__.i);
if((i__$1 < self__.arr.length)){
return (self__.arr[i__$1]);
} else {
return null;
}
});

cljs.core.IndexedSeq.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (coll,n,not_found){
var self__ = this;
var coll__$1 = this;
var i__$1 = (n + self__.i);
if((i__$1 < self__.arr.length)){
return (self__.arr[i__$1]);
} else {
return not_found;
}
});

cljs.core.IndexedSeq.prototype.cljs$core$IIterable$ = true;

cljs.core.IndexedSeq.prototype.cljs$core$IIterable$_iterator$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.IndexedSeqIterator(self__.arr,self__.i));
});

cljs.core.IndexedSeq.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.IndexedSeq(self__.arr,self__.i));
});

cljs.core.IndexedSeq.prototype.cljs$core$INext$_next$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
if(((self__.i + (1)) < self__.arr.length)){
return (new cljs.core.IndexedSeq(self__.arr,(self__.i + (1))));
} else {
return null;
}
});

cljs.core.IndexedSeq.prototype.cljs$core$ICounted$_count$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (self__.arr.length - self__.i);
});

cljs.core.IndexedSeq.prototype.cljs$core$IReversible$_rseq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var c = cljs.core._count(coll__$1);
if((c > (0))){
return (new cljs.core.RSeq(coll__$1,(c - (1)),null));
} else {
return null;
}
});

cljs.core.IndexedSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.hash_ordered_coll(coll__$1);
});

cljs.core.IndexedSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
var G__26403 = coll__$1;
var G__26404 = other;
return (cljs.core.equiv_sequential.cljs$core$IFn$_invoke$arity$2 ? cljs.core.equiv_sequential.cljs$core$IFn$_invoke$arity$2(G__26403,G__26404) : cljs.core.equiv_sequential.call(null,G__26403,G__26404));
});

cljs.core.IndexedSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.List.EMPTY;
});

cljs.core.IndexedSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4(self__.arr,f,(self__.arr[self__.i]),(self__.i + (1)));
});

cljs.core.IndexedSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4(self__.arr,f,start,self__.i);
});

cljs.core.IndexedSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (self__.arr[self__.i]);
});

cljs.core.IndexedSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
if(((self__.i + (1)) < self__.arr.length)){
return (new cljs.core.IndexedSeq(self__.arr,(self__.i + (1))));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.IndexedSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return this$__$1;
});

cljs.core.IndexedSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
var G__26405 = o;
var G__26406 = coll__$1;
return (cljs.core.cons.cljs$core$IFn$_invoke$arity$2 ? cljs.core.cons.cljs$core$IFn$_invoke$arity$2(G__26405,G__26406) : cljs.core.cons.call(null,G__26405,G__26406));
});

cljs.core.IndexedSeq.cljs$lang$type = true;

cljs.core.IndexedSeq.cljs$lang$ctorStr = "cljs.core/IndexedSeq";

cljs.core.IndexedSeq.cljs$lang$ctorPrWriter = (function (this__24861__auto__,writer__24862__auto__,opt__24863__auto__){
return cljs.core._write(writer__24862__auto__,"cljs.core/IndexedSeq");
});

cljs.core.__GT_IndexedSeq = (function __GT_IndexedSeq(arr,i){
return (new cljs.core.IndexedSeq(arr,i));
});

(cljs.core.IndexedSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__25252__auto__ = this;
return cljs.core.es6_iterator(this__25252__auto__);
}));
cljs.core.prim_seq = (function() {
var prim_seq = null;
var prim_seq__1 = (function (prim){
return prim_seq.cljs$core$IFn$_invoke$arity$2(prim,(0));
});
var prim_seq__2 = (function (prim,i){
if((i < prim.length)){
return (new cljs.core.IndexedSeq(prim,i));
} else {
return null;
}
});
prim_seq = function(prim,i){
switch(arguments.length){
case 1:
return prim_seq__1.call(this,prim);
case 2:
return prim_seq__2.call(this,prim,i);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
prim_seq.cljs$core$IFn$_invoke$arity$1 = prim_seq__1;
prim_seq.cljs$core$IFn$_invoke$arity$2 = prim_seq__2;
return prim_seq;
})()
;
cljs.core.array_seq = (function() {
var array_seq = null;
var array_seq__1 = (function (array){
return cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(array,(0));
});
var array_seq__2 = (function (array,i){
return cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(array,i);
});
array_seq = function(array,i){
switch(arguments.length){
case 1:
return array_seq__1.call(this,array);
case 2:
return array_seq__2.call(this,array,i);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
array_seq.cljs$core$IFn$_invoke$arity$1 = array_seq__1;
array_seq.cljs$core$IFn$_invoke$arity$2 = array_seq__2;
return array_seq;
})()
;


/**
* @constructor
*/
cljs.core.RSeq = (function (ci,i,meta){
this.ci = ci;
this.i = i;
this.meta = meta;
this.cljs$lang$protocol_mask$partition0$ = 32374990;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.RSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.RSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.RSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.RSeq.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.RSeq(self__.ci,self__.i,self__.meta));
});

cljs.core.RSeq.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.i > (0))){
return (new cljs.core.RSeq(self__.ci,(self__.i - (1)),null));
} else {
return null;
}
});

cljs.core.RSeq.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (self__.i + (1));
});

cljs.core.RSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.hash_ordered_coll(coll__$1);
});

cljs.core.RSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
var G__26409 = coll__$1;
var G__26410 = other;
return (cljs.core.equiv_sequential.cljs$core$IFn$_invoke$arity$2 ? cljs.core.equiv_sequential.cljs$core$IFn$_invoke$arity$2(G__26409,G__26410) : cljs.core.equiv_sequential.call(null,G__26409,G__26410));
});

cljs.core.RSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var G__26411 = cljs.core.List.EMPTY;
var G__26412 = self__.meta;
return (cljs.core.with_meta.cljs$core$IFn$_invoke$arity$2 ? cljs.core.with_meta.cljs$core$IFn$_invoke$arity$2(G__26411,G__26412) : cljs.core.with_meta.call(null,G__26411,G__26412));
});

cljs.core.RSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (col,f){
var self__ = this;
var col__$1 = this;
var G__26413 = f;
var G__26414 = col__$1;
return (cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2 ? cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(G__26413,G__26414) : cljs.core.seq_reduce.call(null,G__26413,G__26414));
});

cljs.core.RSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (col,f,start){
var self__ = this;
var col__$1 = this;
var G__26415 = f;
var G__26416 = start;
var G__26417 = col__$1;
return (cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3 ? cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(G__26415,G__26416,G__26417) : cljs.core.seq_reduce.call(null,G__26415,G__26416,G__26417));
});

cljs.core.RSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.ci,self__.i);
});

cljs.core.RSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.i > (0))){
return (new cljs.core.RSeq(self__.ci,(self__.i - (1)),null));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.RSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.RSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,new_meta){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.RSeq(self__.ci,self__.i,new_meta));
});

cljs.core.RSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
var G__26418 = o;
var G__26419 = coll__$1;
return (cljs.core.cons.cljs$core$IFn$_invoke$arity$2 ? cljs.core.cons.cljs$core$IFn$_invoke$arity$2(G__26418,G__26419) : cljs.core.cons.call(null,G__26418,G__26419));
});

cljs.core.RSeq.cljs$lang$type = true;

cljs.core.RSeq.cljs$lang$ctorStr = "cljs.core/RSeq";

cljs.core.RSeq.cljs$lang$ctorPrWriter = (function (this__24861__auto__,writer__24862__auto__,opt__24863__auto__){
return cljs.core._write(writer__24862__auto__,"cljs.core/RSeq");
});

cljs.core.__GT_RSeq = (function __GT_RSeq(ci,i,meta){
return (new cljs.core.RSeq(ci,i,meta));
});

(cljs.core.RSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__25252__auto__ = this;
return cljs.core.es6_iterator(this__25252__auto__);
}));
/**
* Same as (first (next x))
*/
cljs.core.second = (function second(coll){
return cljs.core.first(cljs.core.next(coll));
});
/**
* Same as (first (first x))
*/
cljs.core.ffirst = (function ffirst(coll){
return cljs.core.first(cljs.core.first(coll));
});
/**
* Same as (next (first x))
*/
cljs.core.nfirst = (function nfirst(coll){
return cljs.core.next(cljs.core.first(coll));
});
/**
* Same as (first (next x))
*/
cljs.core.fnext = (function fnext(coll){
return cljs.core.first(cljs.core.next(coll));
});
/**
* Same as (next (next x))
*/
cljs.core.nnext = (function nnext(coll){
return cljs.core.next(cljs.core.next(coll));
});
/**
* Return the last item in coll, in linear time
*/
cljs.core.last = (function last(s){
while(true){
var sn = cljs.core.next(s);
if(!((sn == null))){
var G__26420 = sn;
s = G__26420;
continue;
} else {
return cljs.core.first(s);
}
break;
}
});
(cljs.core.IEquiv["_"] = true);

(cljs.core._equiv["_"] = (function (x,o){
return (x === o);
}));
/**
* conj[oin]. Returns a new collection with the xs
* 'added'. (conj nil item) returns (item).  The 'addition' may
* happen at different 'places' depending on the concrete type.
* @param {...*} var_args
*/
cljs.core.conj = (function() {
var conj = null;
var conj__0 = (function (){
return cljs.core.PersistentVector.EMPTY;
});
var conj__1 = (function (coll){
return coll;
});
var conj__2 = (function (coll,x){
if(!((coll == null))){
return cljs.core._conj(coll,x);
} else {
return cljs.core._conj(cljs.core.List.EMPTY,x);
}
});
var conj__3 = (function() { 
var G__26425__delegate = function (coll,x,xs){
while(true){
if(cljs.core.truth_(xs)){
var G__26426 = conj.cljs$core$IFn$_invoke$arity$2(coll,x);
var G__26427 = cljs.core.first(xs);
var G__26428 = cljs.core.next(xs);
coll = G__26426;
x = G__26427;
xs = G__26428;
continue;
} else {
return conj.cljs$core$IFn$_invoke$arity$2(coll,x);
}
break;
}
};
var G__26425 = function (coll,x,var_args){
var xs = null;
if (arguments.length > 2) {
var G__26429__i = 0, G__26429__a = new Array(arguments.length -  2);
while (G__26429__i < G__26429__a.length) {G__26429__a[G__26429__i] = arguments[G__26429__i + 2]; ++G__26429__i;}
  xs = new cljs.core.IndexedSeq(G__26429__a,0);
} 
return G__26425__delegate.call(this,coll,x,xs);};
G__26425.cljs$lang$maxFixedArity = 2;
G__26425.cljs$lang$applyTo = (function (arglist__26430){
var coll = cljs.core.first(arglist__26430);
arglist__26430 = cljs.core.next(arglist__26430);
var x = cljs.core.first(arglist__26430);
var xs = cljs.core.rest(arglist__26430);
return G__26425__delegate(coll,x,xs);
});
G__26425.cljs$core$IFn$_invoke$arity$variadic = G__26425__delegate;
return G__26425;
})()
;
conj = function(coll,x,var_args){
var xs = var_args;
switch(arguments.length){
case 0:
return conj__0.call(this);
case 1:
return conj__1.call(this,coll);
case 2:
return conj__2.call(this,coll,x);
default:
var G__26431 = null;
if (arguments.length > 2) {
var G__26432__i = 0, G__26432__a = new Array(arguments.length -  2);
while (G__26432__i < G__26432__a.length) {G__26432__a[G__26432__i] = arguments[G__26432__i + 2]; ++G__26432__i;}
G__26431 = new cljs.core.IndexedSeq(G__26432__a,0);
}
return conj__3.cljs$core$IFn$_invoke$arity$variadic(coll,x, G__26431);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
conj.cljs$lang$maxFixedArity = 2;
conj.cljs$lang$applyTo = conj__3.cljs$lang$applyTo;
conj.cljs$core$IFn$_invoke$arity$0 = conj__0;
conj.cljs$core$IFn$_invoke$arity$1 = conj__1;
conj.cljs$core$IFn$_invoke$arity$2 = conj__2;
conj.cljs$core$IFn$_invoke$arity$variadic = conj__3.cljs$core$IFn$_invoke$arity$variadic;
return conj;
})()
;
/**
* Returns an empty collection of the same category as coll, or nil
*/
cljs.core.empty = (function empty(coll){
if((coll == null)){
return null;
} else {
return cljs.core._empty(coll);
}
});
cljs.core.accumulating_seq_count = (function accumulating_seq_count(coll){
var s = cljs.core.seq(coll);
var acc = (0);
while(true){
if(cljs.core.counted_QMARK_(s)){
return (acc + cljs.core._count(s));
} else {
var G__26433 = cljs.core.next(s);
var G__26434 = (acc + (1));
s = G__26433;
acc = G__26434;
continue;
}
break;
}
});
/**
* Returns the number of items in the collection. (count nil) returns
* 0.  Also works on strings, arrays, and Maps
*/
cljs.core.count = (function count(coll){
if(!((coll == null))){
if((function (){var G__26436 = coll;
if(G__26436){
var bit__24948__auto__ = (G__26436.cljs$lang$protocol_mask$partition0$ & (2));
if((bit__24948__auto__) || (G__26436.cljs$core$ICounted$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$ICounted$_count$arity$1(null);
} else {
if(coll instanceof Array){
return coll.length;
} else {
if(typeof coll === 'string'){
return coll.length;
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.ICounted,coll)){
return cljs.core._count(coll);
} else {
return cljs.core.accumulating_seq_count(coll);

}
}
}
}
} else {
return (0);
}
});
cljs.core.linear_traversal_nth = (function() {
var linear_traversal_nth = null;
var linear_traversal_nth__2 = (function (coll,n){
while(true){
if((coll == null)){
throw (new Error("Index out of bounds"));
} else {
if((n === (0))){
if(cljs.core.seq(coll)){
return cljs.core.first(coll);
} else {
throw (new Error("Index out of bounds"));
}
} else {
if(cljs.core.indexed_QMARK_(coll)){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll,n);
} else {
if(cljs.core.seq(coll)){
var G__26437 = cljs.core.next(coll);
var G__26438 = (n - (1));
coll = G__26437;
n = G__26438;
continue;
} else {
throw (new Error("Index out of bounds"));

}
}
}
}
break;
}
});
var linear_traversal_nth__3 = (function (coll,n,not_found){
while(true){
if((coll == null)){
return not_found;
} else {
if((n === (0))){
if(cljs.core.seq(coll)){
return cljs.core.first(coll);
} else {
return not_found;
}
} else {
if(cljs.core.indexed_QMARK_(coll)){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(coll,n,not_found);
} else {
if(cljs.core.seq(coll)){
var G__26439 = cljs.core.next(coll);
var G__26440 = (n - (1));
var G__26441 = not_found;
coll = G__26439;
n = G__26440;
not_found = G__26441;
continue;
} else {
return not_found;

}
}
}
}
break;
}
});
linear_traversal_nth = function(coll,n,not_found){
switch(arguments.length){
case 2:
return linear_traversal_nth__2.call(this,coll,n);
case 3:
return linear_traversal_nth__3.call(this,coll,n,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
linear_traversal_nth.cljs$core$IFn$_invoke$arity$2 = linear_traversal_nth__2;
linear_traversal_nth.cljs$core$IFn$_invoke$arity$3 = linear_traversal_nth__3;
return linear_traversal_nth;
})()
;
/**
* Returns the value at the index. get returns nil if index out of
* bounds, nth throws an exception unless not-found is supplied.  nth
* also works for strings, arrays, regex Matchers and Lists, and,
* in O(n) time, for sequences.
*/
cljs.core.nth = (function() {
var nth = null;
var nth__2 = (function (coll,n){
if(!(typeof n === 'number')){
throw (new Error("index argument to nth must be a number"));
} else {
if((coll == null)){
return coll;
} else {
if((function (){var G__26446 = coll;
if(G__26446){
var bit__24948__auto__ = (G__26446.cljs$lang$protocol_mask$partition0$ & (16));
if((bit__24948__auto__) || (G__26446.cljs$core$IIndexed$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$IIndexed$_nth$arity$2(null,n);
} else {
if(coll instanceof Array){
if((n < coll.length)){
return (coll[n]);
} else {
return null;
}
} else {
if(typeof coll === 'string'){
if((n < coll.length)){
return (coll[n]);
} else {
return null;
}
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.IIndexed,coll)){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll,n);
} else {
if((function (){var G__26447 = coll;
if(G__26447){
var bit__24955__auto__ = (G__26447.cljs$lang$protocol_mask$partition0$ & (64));
if((bit__24955__auto__) || (G__26447.cljs$core$ISeq$)){
return true;
} else {
if((!G__26447.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq,G__26447);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq,G__26447);
}
})()){
return cljs.core.linear_traversal_nth.cljs$core$IFn$_invoke$arity$2(coll,n);
} else {
throw (new Error([cljs.core.str("nth not supported on this type "),cljs.core.str(cljs.core.type__GT_str(cljs.core.type(coll)))].join('')));

}
}
}
}
}
}
}
});
var nth__3 = (function (coll,n,not_found){
if(!(typeof n === 'number')){
throw (new Error("index argument to nth must be a number."));
} else {
if((coll == null)){
return not_found;
} else {
if((function (){var G__26448 = coll;
if(G__26448){
var bit__24948__auto__ = (G__26448.cljs$lang$protocol_mask$partition0$ & (16));
if((bit__24948__auto__) || (G__26448.cljs$core$IIndexed$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$IIndexed$_nth$arity$3(null,n,not_found);
} else {
if(coll instanceof Array){
if((n < coll.length)){
return (coll[n]);
} else {
return not_found;
}
} else {
if(typeof coll === 'string'){
if((n < coll.length)){
return (coll[n]);
} else {
return not_found;
}
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.IIndexed,coll)){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll,n);
} else {
if((function (){var G__26449 = coll;
if(G__26449){
var bit__24955__auto__ = (G__26449.cljs$lang$protocol_mask$partition0$ & (64));
if((bit__24955__auto__) || (G__26449.cljs$core$ISeq$)){
return true;
} else {
if((!G__26449.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq,G__26449);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq,G__26449);
}
})()){
return cljs.core.linear_traversal_nth.cljs$core$IFn$_invoke$arity$3(coll,n,not_found);
} else {
throw (new Error([cljs.core.str("nth not supported on this type "),cljs.core.str(cljs.core.type__GT_str(cljs.core.type(coll)))].join('')));

}
}
}
}
}
}
}
});
nth = function(coll,n,not_found){
switch(arguments.length){
case 2:
return nth__2.call(this,coll,n);
case 3:
return nth__3.call(this,coll,n,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
nth.cljs$core$IFn$_invoke$arity$2 = nth__2;
nth.cljs$core$IFn$_invoke$arity$3 = nth__3;
return nth;
})()
;
/**
* Returns the nth rest of coll, coll when n is 0.
*/
cljs.core.nthrest = (function nthrest(coll,n){
var n__$1 = n;
var xs = coll;
while(true){
if(((n__$1 > (0))) && (cljs.core.seq(xs))){
var G__26450 = (n__$1 - (1));
var G__26451 = cljs.core.rest(xs);
n__$1 = G__26450;
xs = G__26451;
continue;
} else {
return xs;
}
break;
}
});
/**
* Returns the value mapped to key, not-found or nil if key not present.
*/
cljs.core.get = (function() {
var get = null;
var get__2 = (function (o,k){
if((o == null)){
return null;
} else {
if((function (){var G__26454 = o;
if(G__26454){
var bit__24948__auto__ = (G__26454.cljs$lang$protocol_mask$partition0$ & (256));
if((bit__24948__auto__) || (G__26454.cljs$core$ILookup$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return o.cljs$core$ILookup$_lookup$arity$2(null,k);
} else {
if(o instanceof Array){
if((k < o.length)){
return (o[k]);
} else {
return null;
}
} else {
if(typeof o === 'string'){
if((k < o.length)){
return (o[k]);
} else {
return null;
}
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.ILookup,o)){
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$2(o,k);
} else {
return null;

}
}
}
}
}
});
var get__3 = (function (o,k,not_found){
if(!((o == null))){
if((function (){var G__26455 = o;
if(G__26455){
var bit__24948__auto__ = (G__26455.cljs$lang$protocol_mask$partition0$ & (256));
if((bit__24948__auto__) || (G__26455.cljs$core$ILookup$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return o.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
} else {
if(o instanceof Array){
if((k < o.length)){
return (o[k]);
} else {
return not_found;
}
} else {
if(typeof o === 'string'){
if((k < o.length)){
return (o[k]);
} else {
return not_found;
}
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.ILookup,o)){
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(o,k,not_found);
} else {
return not_found;

}
}
}
}
} else {
return not_found;
}
});
get = function(o,k,not_found){
switch(arguments.length){
case 2:
return get__2.call(this,o,k);
case 3:
return get__3.call(this,o,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
get.cljs$core$IFn$_invoke$arity$2 = get__2;
get.cljs$core$IFn$_invoke$arity$3 = get__3;
return get;
})()
;
/**
* assoc[iate]. When applied to a map, returns a new map of the
* same (hashed/sorted) type, that contains the mapping of key(s) to
* val(s). When applied to a vector, returns a new vector that
* contains val at index.
* @param {...*} var_args
*/
cljs.core.assoc = (function() {
var assoc = null;
var assoc__3 = (function (coll,k,v){
if(!((coll == null))){
return cljs.core._assoc(coll,k,v);
} else {
return cljs.core.PersistentHashMap.fromArrays([k],[v]);
}
});
var assoc__4 = (function() { 
var G__26459__delegate = function (coll,k,v,kvs){
while(true){
var ret = assoc.cljs$core$IFn$_invoke$arity$3(coll,k,v);
if(cljs.core.truth_(kvs)){
var G__26460 = ret;
var G__26461 = cljs.core.first(kvs);
var G__26462 = cljs.core.second(kvs);
var G__26463 = cljs.core.nnext(kvs);
coll = G__26460;
k = G__26461;
v = G__26462;
kvs = G__26463;
continue;
} else {
return ret;
}
break;
}
};
var G__26459 = function (coll,k,v,var_args){
var kvs = null;
if (arguments.length > 3) {
var G__26464__i = 0, G__26464__a = new Array(arguments.length -  3);
while (G__26464__i < G__26464__a.length) {G__26464__a[G__26464__i] = arguments[G__26464__i + 3]; ++G__26464__i;}
  kvs = new cljs.core.IndexedSeq(G__26464__a,0);
} 
return G__26459__delegate.call(this,coll,k,v,kvs);};
G__26459.cljs$lang$maxFixedArity = 3;
G__26459.cljs$lang$applyTo = (function (arglist__26465){
var coll = cljs.core.first(arglist__26465);
arglist__26465 = cljs.core.next(arglist__26465);
var k = cljs.core.first(arglist__26465);
arglist__26465 = cljs.core.next(arglist__26465);
var v = cljs.core.first(arglist__26465);
var kvs = cljs.core.rest(arglist__26465);
return G__26459__delegate(coll,k,v,kvs);
});
G__26459.cljs$core$IFn$_invoke$arity$variadic = G__26459__delegate;
return G__26459;
})()
;
assoc = function(coll,k,v,var_args){
var kvs = var_args;
switch(arguments.length){
case 3:
return assoc__3.call(this,coll,k,v);
default:
var G__26466 = null;
if (arguments.length > 3) {
var G__26467__i = 0, G__26467__a = new Array(arguments.length -  3);
while (G__26467__i < G__26467__a.length) {G__26467__a[G__26467__i] = arguments[G__26467__i + 3]; ++G__26467__i;}
G__26466 = new cljs.core.IndexedSeq(G__26467__a,0);
}
return assoc__4.cljs$core$IFn$_invoke$arity$variadic(coll,k,v, G__26466);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
assoc.cljs$lang$maxFixedArity = 3;
assoc.cljs$lang$applyTo = assoc__4.cljs$lang$applyTo;
assoc.cljs$core$IFn$_invoke$arity$3 = assoc__3;
assoc.cljs$core$IFn$_invoke$arity$variadic = assoc__4.cljs$core$IFn$_invoke$arity$variadic;
return assoc;
})()
;
/**
* dissoc[iate]. Returns a new map of the same (hashed/sorted) type,
* that does not contain a mapping for key(s).
* @param {...*} var_args
*/
cljs.core.dissoc = (function() {
var dissoc = null;
var dissoc__1 = (function (coll){
return coll;
});
var dissoc__2 = (function (coll,k){
if((coll == null)){
return null;
} else {
return cljs.core._dissoc(coll,k);
}
});
var dissoc__3 = (function() { 
var G__26470__delegate = function (coll,k,ks){
while(true){
if((coll == null)){
return null;
} else {
var ret = dissoc.cljs$core$IFn$_invoke$arity$2(coll,k);
if(cljs.core.truth_(ks)){
var G__26471 = ret;
var G__26472 = cljs.core.first(ks);
var G__26473 = cljs.core.next(ks);
coll = G__26471;
k = G__26472;
ks = G__26473;
continue;
} else {
return ret;
}
}
break;
}
};
var G__26470 = function (coll,k,var_args){
var ks = null;
if (arguments.length > 2) {
var G__26474__i = 0, G__26474__a = new Array(arguments.length -  2);
while (G__26474__i < G__26474__a.length) {G__26474__a[G__26474__i] = arguments[G__26474__i + 2]; ++G__26474__i;}
  ks = new cljs.core.IndexedSeq(G__26474__a,0);
} 
return G__26470__delegate.call(this,coll,k,ks);};
G__26470.cljs$lang$maxFixedArity = 2;
G__26470.cljs$lang$applyTo = (function (arglist__26475){
var coll = cljs.core.first(arglist__26475);
arglist__26475 = cljs.core.next(arglist__26475);
var k = cljs.core.first(arglist__26475);
var ks = cljs.core.rest(arglist__26475);
return G__26470__delegate(coll,k,ks);
});
G__26470.cljs$core$IFn$_invoke$arity$variadic = G__26470__delegate;
return G__26470;
})()
;
dissoc = function(coll,k,var_args){
var ks = var_args;
switch(arguments.length){
case 1:
return dissoc__1.call(this,coll);
case 2:
return dissoc__2.call(this,coll,k);
default:
var G__26476 = null;
if (arguments.length > 2) {
var G__26477__i = 0, G__26477__a = new Array(arguments.length -  2);
while (G__26477__i < G__26477__a.length) {G__26477__a[G__26477__i] = arguments[G__26477__i + 2]; ++G__26477__i;}
G__26476 = new cljs.core.IndexedSeq(G__26477__a,0);
}
return dissoc__3.cljs$core$IFn$_invoke$arity$variadic(coll,k, G__26476);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
dissoc.cljs$lang$maxFixedArity = 2;
dissoc.cljs$lang$applyTo = dissoc__3.cljs$lang$applyTo;
dissoc.cljs$core$IFn$_invoke$arity$1 = dissoc__1;
dissoc.cljs$core$IFn$_invoke$arity$2 = dissoc__2;
dissoc.cljs$core$IFn$_invoke$arity$variadic = dissoc__3.cljs$core$IFn$_invoke$arity$variadic;
return dissoc;
})()
;
cljs.core.fn_QMARK_ = (function fn_QMARK_(f){
var or__24274__auto__ = (function (){var G__26482 = f;
return goog.isFunction(G__26482);
})();
if(cljs.core.truth_(or__24274__auto__)){
return or__24274__auto__;
} else {
var G__26483 = f;
if(G__26483){
var bit__24955__auto__ = null;
if(cljs.core.truth_((function (){var or__24274__auto____$1 = bit__24955__auto__;
if(cljs.core.truth_(or__24274__auto____$1)){
return or__24274__auto____$1;
} else {
return G__26483.cljs$core$Fn$;
}
})())){
return true;
} else {
if((!G__26483.cljs$lang$protocol_mask$partition$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.Fn,G__26483);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.Fn,G__26483);
}
}
});

/**
* @constructor
*/
cljs.core.MetaFn = (function (afn,meta){
this.afn = afn;
this.meta = meta;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 393217;
})
cljs.core.MetaFn.prototype.call = (function() {
var G__26949 = null;
var G__26949__1 = (function (self__){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (self__.afn.cljs$core$IFn$_invoke$arity$0 ? self__.afn.cljs$core$IFn$_invoke$arity$0() : self__.afn.call(null));
});
var G__26949__2 = (function (self__,a){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__26485 = a;
return (self__.afn.cljs$core$IFn$_invoke$arity$1 ? self__.afn.cljs$core$IFn$_invoke$arity$1(G__26485) : self__.afn.call(null,G__26485));
});
var G__26949__3 = (function (self__,a,b){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__26486 = a;
var G__26487 = b;
return (self__.afn.cljs$core$IFn$_invoke$arity$2 ? self__.afn.cljs$core$IFn$_invoke$arity$2(G__26486,G__26487) : self__.afn.call(null,G__26486,G__26487));
});
var G__26949__4 = (function (self__,a,b,c){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__26488 = a;
var G__26489 = b;
var G__26490 = c;
return (self__.afn.cljs$core$IFn$_invoke$arity$3 ? self__.afn.cljs$core$IFn$_invoke$arity$3(G__26488,G__26489,G__26490) : self__.afn.call(null,G__26488,G__26489,G__26490));
});
var G__26949__5 = (function (self__,a,b,c,d){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__26491 = a;
var G__26492 = b;
var G__26493 = c;
var G__26494 = d;
return (self__.afn.cljs$core$IFn$_invoke$arity$4 ? self__.afn.cljs$core$IFn$_invoke$arity$4(G__26491,G__26492,G__26493,G__26494) : self__.afn.call(null,G__26491,G__26492,G__26493,G__26494));
});
var G__26949__6 = (function (self__,a,b,c,d,e){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__26495 = a;
var G__26496 = b;
var G__26497 = c;
var G__26498 = d;
var G__26499 = e;
return (self__.afn.cljs$core$IFn$_invoke$arity$5 ? self__.afn.cljs$core$IFn$_invoke$arity$5(G__26495,G__26496,G__26497,G__26498,G__26499) : self__.afn.call(null,G__26495,G__26496,G__26497,G__26498,G__26499));
});
var G__26949__7 = (function (self__,a,b,c,d,e,f){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__26500 = a;
var G__26501 = b;
var G__26502 = c;
var G__26503 = d;
var G__26504 = e;
var G__26505 = f;
return (self__.afn.cljs$core$IFn$_invoke$arity$6 ? self__.afn.cljs$core$IFn$_invoke$arity$6(G__26500,G__26501,G__26502,G__26503,G__26504,G__26505) : self__.afn.call(null,G__26500,G__26501,G__26502,G__26503,G__26504,G__26505));
});
var G__26949__8 = (function (self__,a,b,c,d,e,f,g){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__26506 = a;
var G__26507 = b;
var G__26508 = c;
var G__26509 = d;
var G__26510 = e;
var G__26511 = f;
var G__26512 = g;
return (self__.afn.cljs$core$IFn$_invoke$arity$7 ? self__.afn.cljs$core$IFn$_invoke$arity$7(G__26506,G__26507,G__26508,G__26509,G__26510,G__26511,G__26512) : self__.afn.call(null,G__26506,G__26507,G__26508,G__26509,G__26510,G__26511,G__26512));
});
var G__26949__9 = (function (self__,a,b,c,d,e,f,g,h){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__26513 = a;
var G__26514 = b;
var G__26515 = c;
var G__26516 = d;
var G__26517 = e;
var G__26518 = f;
var G__26519 = g;
var G__26520 = h;
return (self__.afn.cljs$core$IFn$_invoke$arity$8 ? self__.afn.cljs$core$IFn$_invoke$arity$8(G__26513,G__26514,G__26515,G__26516,G__26517,G__26518,G__26519,G__26520) : self__.afn.call(null,G__26513,G__26514,G__26515,G__26516,G__26517,G__26518,G__26519,G__26520));
});
var G__26949__10 = (function (self__,a,b,c,d,e,f,g,h,i){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__26521 = a;
var G__26522 = b;
var G__26523 = c;
var G__26524 = d;
var G__26525 = e;
var G__26526 = f;
var G__26527 = g;
var G__26528 = h;
var G__26529 = i;
return (self__.afn.cljs$core$IFn$_invoke$arity$9 ? self__.afn.cljs$core$IFn$_invoke$arity$9(G__26521,G__26522,G__26523,G__26524,G__26525,G__26526,G__26527,G__26528,G__26529) : self__.afn.call(null,G__26521,G__26522,G__26523,G__26524,G__26525,G__26526,G__26527,G__26528,G__26529));
});
var G__26949__11 = (function (self__,a,b,c,d,e,f,g,h,i,j){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__26530 = a;
var G__26531 = b;
var G__26532 = c;
var G__26533 = d;
var G__26534 = e;
var G__26535 = f;
var G__26536 = g;
var G__26537 = h;
var G__26538 = i;
var G__26539 = j;
return (self__.afn.cljs$core$IFn$_invoke$arity$10 ? self__.afn.cljs$core$IFn$_invoke$arity$10(G__26530,G__26531,G__26532,G__26533,G__26534,G__26535,G__26536,G__26537,G__26538,G__26539) : self__.afn.call(null,G__26530,G__26531,G__26532,G__26533,G__26534,G__26535,G__26536,G__26537,G__26538,G__26539));
});
var G__26949__12 = (function (self__,a,b,c,d,e,f,g,h,i,j,k){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__26540 = a;
var G__26541 = b;
var G__26542 = c;
var G__26543 = d;
var G__26544 = e;
var G__26545 = f;
var G__26546 = g;
var G__26547 = h;
var G__26548 = i;
var G__26549 = j;
var G__26550 = k;
return (self__.afn.cljs$core$IFn$_invoke$arity$11 ? self__.afn.cljs$core$IFn$_invoke$arity$11(G__26540,G__26541,G__26542,G__26543,G__26544,G__26545,G__26546,G__26547,G__26548,G__26549,G__26550) : self__.afn.call(null,G__26540,G__26541,G__26542,G__26543,G__26544,G__26545,G__26546,G__26547,G__26548,G__26549,G__26550));
});
var G__26949__13 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__26551 = a;
var G__26552 = b;
var G__26553 = c;
var G__26554 = d;
var G__26555 = e;
var G__26556 = f;
var G__26557 = g;
var G__26558 = h;
var G__26559 = i;
var G__26560 = j;
var G__26561 = k;
var G__26562 = l;
return (self__.afn.cljs$core$IFn$_invoke$arity$12 ? self__.afn.cljs$core$IFn$_invoke$arity$12(G__26551,G__26552,G__26553,G__26554,G__26555,G__26556,G__26557,G__26558,G__26559,G__26560,G__26561,G__26562) : self__.afn.call(null,G__26551,G__26552,G__26553,G__26554,G__26555,G__26556,G__26557,G__26558,G__26559,G__26560,G__26561,G__26562));
});
var G__26949__14 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__26563 = a;
var G__26564 = b;
var G__26565 = c;
var G__26566 = d;
var G__26567 = e;
var G__26568 = f;
var G__26569 = g;
var G__26570 = h;
var G__26571 = i;
var G__26572 = j;
var G__26573 = k;
var G__26574 = l;
var G__26575 = m;
return (self__.afn.cljs$core$IFn$_invoke$arity$13 ? self__.afn.cljs$core$IFn$_invoke$arity$13(G__26563,G__26564,G__26565,G__26566,G__26567,G__26568,G__26569,G__26570,G__26571,G__26572,G__26573,G__26574,G__26575) : self__.afn.call(null,G__26563,G__26564,G__26565,G__26566,G__26567,G__26568,G__26569,G__26570,G__26571,G__26572,G__26573,G__26574,G__26575));
});
var G__26949__15 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__26576 = a;
var G__26577 = b;
var G__26578 = c;
var G__26579 = d;
var G__26580 = e;
var G__26581 = f;
var G__26582 = g;
var G__26583 = h;
var G__26584 = i;
var G__26585 = j;
var G__26586 = k;
var G__26587 = l;
var G__26588 = m;
var G__26589 = n;
return (self__.afn.cljs$core$IFn$_invoke$arity$14 ? self__.afn.cljs$core$IFn$_invoke$arity$14(G__26576,G__26577,G__26578,G__26579,G__26580,G__26581,G__26582,G__26583,G__26584,G__26585,G__26586,G__26587,G__26588,G__26589) : self__.afn.call(null,G__26576,G__26577,G__26578,G__26579,G__26580,G__26581,G__26582,G__26583,G__26584,G__26585,G__26586,G__26587,G__26588,G__26589));
});
var G__26949__16 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__26590 = a;
var G__26591 = b;
var G__26592 = c;
var G__26593 = d;
var G__26594 = e;
var G__26595 = f;
var G__26596 = g;
var G__26597 = h;
var G__26598 = i;
var G__26599 = j;
var G__26600 = k;
var G__26601 = l;
var G__26602 = m;
var G__26603 = n;
var G__26604 = o;
return (self__.afn.cljs$core$IFn$_invoke$arity$15 ? self__.afn.cljs$core$IFn$_invoke$arity$15(G__26590,G__26591,G__26592,G__26593,G__26594,G__26595,G__26596,G__26597,G__26598,G__26599,G__26600,G__26601,G__26602,G__26603,G__26604) : self__.afn.call(null,G__26590,G__26591,G__26592,G__26593,G__26594,G__26595,G__26596,G__26597,G__26598,G__26599,G__26600,G__26601,G__26602,G__26603,G__26604));
});
var G__26949__17 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__26605 = a;
var G__26606 = b;
var G__26607 = c;
var G__26608 = d;
var G__26609 = e;
var G__26610 = f;
var G__26611 = g;
var G__26612 = h;
var G__26613 = i;
var G__26614 = j;
var G__26615 = k;
var G__26616 = l;
var G__26617 = m;
var G__26618 = n;
var G__26619 = o;
var G__26620 = p;
return (self__.afn.cljs$core$IFn$_invoke$arity$16 ? self__.afn.cljs$core$IFn$_invoke$arity$16(G__26605,G__26606,G__26607,G__26608,G__26609,G__26610,G__26611,G__26612,G__26613,G__26614,G__26615,G__26616,G__26617,G__26618,G__26619,G__26620) : self__.afn.call(null,G__26605,G__26606,G__26607,G__26608,G__26609,G__26610,G__26611,G__26612,G__26613,G__26614,G__26615,G__26616,G__26617,G__26618,G__26619,G__26620));
});
var G__26949__18 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__26621 = a;
var G__26622 = b;
var G__26623 = c;
var G__26624 = d;
var G__26625 = e;
var G__26626 = f;
var G__26627 = g;
var G__26628 = h;
var G__26629 = i;
var G__26630 = j;
var G__26631 = k;
var G__26632 = l;
var G__26633 = m;
var G__26634 = n;
var G__26635 = o;
var G__26636 = p;
var G__26637 = q;
return (self__.afn.cljs$core$IFn$_invoke$arity$17 ? self__.afn.cljs$core$IFn$_invoke$arity$17(G__26621,G__26622,G__26623,G__26624,G__26625,G__26626,G__26627,G__26628,G__26629,G__26630,G__26631,G__26632,G__26633,G__26634,G__26635,G__26636,G__26637) : self__.afn.call(null,G__26621,G__26622,G__26623,G__26624,G__26625,G__26626,G__26627,G__26628,G__26629,G__26630,G__26631,G__26632,G__26633,G__26634,G__26635,G__26636,G__26637));
});
var G__26949__19 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__26638 = a;
var G__26639 = b;
var G__26640 = c;
var G__26641 = d;
var G__26642 = e;
var G__26643 = f;
var G__26644 = g;
var G__26645 = h;
var G__26646 = i;
var G__26647 = j;
var G__26648 = k;
var G__26649 = l;
var G__26650 = m;
var G__26651 = n;
var G__26652 = o;
var G__26653 = p;
var G__26654 = q;
var G__26655 = r;
return (self__.afn.cljs$core$IFn$_invoke$arity$18 ? self__.afn.cljs$core$IFn$_invoke$arity$18(G__26638,G__26639,G__26640,G__26641,G__26642,G__26643,G__26644,G__26645,G__26646,G__26647,G__26648,G__26649,G__26650,G__26651,G__26652,G__26653,G__26654,G__26655) : self__.afn.call(null,G__26638,G__26639,G__26640,G__26641,G__26642,G__26643,G__26644,G__26645,G__26646,G__26647,G__26648,G__26649,G__26650,G__26651,G__26652,G__26653,G__26654,G__26655));
});
var G__26949__20 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__26656 = a;
var G__26657 = b;
var G__26658 = c;
var G__26659 = d;
var G__26660 = e;
var G__26661 = f;
var G__26662 = g;
var G__26663 = h;
var G__26664 = i;
var G__26665 = j;
var G__26666 = k;
var G__26667 = l;
var G__26668 = m;
var G__26669 = n;
var G__26670 = o;
var G__26671 = p;
var G__26672 = q;
var G__26673 = r;
var G__26674 = s;
return (self__.afn.cljs$core$IFn$_invoke$arity$19 ? self__.afn.cljs$core$IFn$_invoke$arity$19(G__26656,G__26657,G__26658,G__26659,G__26660,G__26661,G__26662,G__26663,G__26664,G__26665,G__26666,G__26667,G__26668,G__26669,G__26670,G__26671,G__26672,G__26673,G__26674) : self__.afn.call(null,G__26656,G__26657,G__26658,G__26659,G__26660,G__26661,G__26662,G__26663,G__26664,G__26665,G__26666,G__26667,G__26668,G__26669,G__26670,G__26671,G__26672,G__26673,G__26674));
});
var G__26949__21 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__26675 = a;
var G__26676 = b;
var G__26677 = c;
var G__26678 = d;
var G__26679 = e;
var G__26680 = f;
var G__26681 = g;
var G__26682 = h;
var G__26683 = i;
var G__26684 = j;
var G__26685 = k;
var G__26686 = l;
var G__26687 = m;
var G__26688 = n;
var G__26689 = o;
var G__26690 = p;
var G__26691 = q;
var G__26692 = r;
var G__26693 = s;
var G__26694 = t;
return (self__.afn.cljs$core$IFn$_invoke$arity$20 ? self__.afn.cljs$core$IFn$_invoke$arity$20(G__26675,G__26676,G__26677,G__26678,G__26679,G__26680,G__26681,G__26682,G__26683,G__26684,G__26685,G__26686,G__26687,G__26688,G__26689,G__26690,G__26691,G__26692,G__26693,G__26694) : self__.afn.call(null,G__26675,G__26676,G__26677,G__26678,G__26679,G__26680,G__26681,G__26682,G__26683,G__26684,G__26685,G__26686,G__26687,G__26688,G__26689,G__26690,G__26691,G__26692,G__26693,G__26694));
});
var G__26949__22 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__26695 = self__.afn;
var G__26696 = a;
var G__26697 = b;
var G__26698 = c;
var G__26699 = d;
var G__26700 = e;
var G__26701 = f;
var G__26702 = g;
var G__26703 = h;
var G__26704 = i;
var G__26705 = j;
var G__26706 = k;
var G__26707 = l;
var G__26708 = m;
var G__26709 = n;
var G__26710 = o;
var G__26711 = p;
var G__26712 = q;
var G__26713 = r;
var G__26714 = s;
var G__26715 = t;
var G__26716 = rest;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$22 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$22(G__26695,G__26696,G__26697,G__26698,G__26699,G__26700,G__26701,G__26702,G__26703,G__26704,G__26705,G__26706,G__26707,G__26708,G__26709,G__26710,G__26711,G__26712,G__26713,G__26714,G__26715,G__26716) : cljs.core.apply.call(null,G__26695,G__26696,G__26697,G__26698,G__26699,G__26700,G__26701,G__26702,G__26703,G__26704,G__26705,G__26706,G__26707,G__26708,G__26709,G__26710,G__26711,G__26712,G__26713,G__26714,G__26715,G__26716));
});
G__26949 = function(self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
switch(arguments.length){
case 1:
return G__26949__1.call(this,self__);
case 2:
return G__26949__2.call(this,self__,a);
case 3:
return G__26949__3.call(this,self__,a,b);
case 4:
return G__26949__4.call(this,self__,a,b,c);
case 5:
return G__26949__5.call(this,self__,a,b,c,d);
case 6:
return G__26949__6.call(this,self__,a,b,c,d,e);
case 7:
return G__26949__7.call(this,self__,a,b,c,d,e,f);
case 8:
return G__26949__8.call(this,self__,a,b,c,d,e,f,g);
case 9:
return G__26949__9.call(this,self__,a,b,c,d,e,f,g,h);
case 10:
return G__26949__10.call(this,self__,a,b,c,d,e,f,g,h,i);
case 11:
return G__26949__11.call(this,self__,a,b,c,d,e,f,g,h,i,j);
case 12:
return G__26949__12.call(this,self__,a,b,c,d,e,f,g,h,i,j,k);
case 13:
return G__26949__13.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l);
case 14:
return G__26949__14.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m);
case 15:
return G__26949__15.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
case 16:
return G__26949__16.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
case 17:
return G__26949__17.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
case 18:
return G__26949__18.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
case 19:
return G__26949__19.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
case 20:
return G__26949__20.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
case 21:
return G__26949__21.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
case 22:
return G__26949__22.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__26949.cljs$core$IFn$_invoke$arity$1 = G__26949__1;
G__26949.cljs$core$IFn$_invoke$arity$2 = G__26949__2;
G__26949.cljs$core$IFn$_invoke$arity$3 = G__26949__3;
G__26949.cljs$core$IFn$_invoke$arity$4 = G__26949__4;
G__26949.cljs$core$IFn$_invoke$arity$5 = G__26949__5;
G__26949.cljs$core$IFn$_invoke$arity$6 = G__26949__6;
G__26949.cljs$core$IFn$_invoke$arity$7 = G__26949__7;
G__26949.cljs$core$IFn$_invoke$arity$8 = G__26949__8;
G__26949.cljs$core$IFn$_invoke$arity$9 = G__26949__9;
G__26949.cljs$core$IFn$_invoke$arity$10 = G__26949__10;
G__26949.cljs$core$IFn$_invoke$arity$11 = G__26949__11;
G__26949.cljs$core$IFn$_invoke$arity$12 = G__26949__12;
G__26949.cljs$core$IFn$_invoke$arity$13 = G__26949__13;
G__26949.cljs$core$IFn$_invoke$arity$14 = G__26949__14;
G__26949.cljs$core$IFn$_invoke$arity$15 = G__26949__15;
G__26949.cljs$core$IFn$_invoke$arity$16 = G__26949__16;
G__26949.cljs$core$IFn$_invoke$arity$17 = G__26949__17;
G__26949.cljs$core$IFn$_invoke$arity$18 = G__26949__18;
G__26949.cljs$core$IFn$_invoke$arity$19 = G__26949__19;
G__26949.cljs$core$IFn$_invoke$arity$20 = G__26949__20;
G__26949.cljs$core$IFn$_invoke$arity$21 = G__26949__21;
G__26949.cljs$core$IFn$_invoke$arity$22 = G__26949__22;
return G__26949;
})()
;

cljs.core.MetaFn.prototype.apply = (function (self__,args26484){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args26484)));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$0 = (function (){
var self__ = this;
var _ = this;
return (self__.afn.cljs$core$IFn$_invoke$arity$0 ? self__.afn.cljs$core$IFn$_invoke$arity$0() : self__.afn.call(null));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$1 = (function (a){
var self__ = this;
var _ = this;
var G__26717 = a;
return (self__.afn.cljs$core$IFn$_invoke$arity$1 ? self__.afn.cljs$core$IFn$_invoke$arity$1(G__26717) : self__.afn.call(null,G__26717));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$2 = (function (a,b){
var self__ = this;
var _ = this;
var G__26718 = a;
var G__26719 = b;
return (self__.afn.cljs$core$IFn$_invoke$arity$2 ? self__.afn.cljs$core$IFn$_invoke$arity$2(G__26718,G__26719) : self__.afn.call(null,G__26718,G__26719));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$3 = (function (a,b,c){
var self__ = this;
var _ = this;
var G__26720 = a;
var G__26721 = b;
var G__26722 = c;
return (self__.afn.cljs$core$IFn$_invoke$arity$3 ? self__.afn.cljs$core$IFn$_invoke$arity$3(G__26720,G__26721,G__26722) : self__.afn.call(null,G__26720,G__26721,G__26722));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$4 = (function (a,b,c,d){
var self__ = this;
var _ = this;
var G__26723 = a;
var G__26724 = b;
var G__26725 = c;
var G__26726 = d;
return (self__.afn.cljs$core$IFn$_invoke$arity$4 ? self__.afn.cljs$core$IFn$_invoke$arity$4(G__26723,G__26724,G__26725,G__26726) : self__.afn.call(null,G__26723,G__26724,G__26725,G__26726));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$5 = (function (a,b,c,d,e){
var self__ = this;
var _ = this;
var G__26727 = a;
var G__26728 = b;
var G__26729 = c;
var G__26730 = d;
var G__26731 = e;
return (self__.afn.cljs$core$IFn$_invoke$arity$5 ? self__.afn.cljs$core$IFn$_invoke$arity$5(G__26727,G__26728,G__26729,G__26730,G__26731) : self__.afn.call(null,G__26727,G__26728,G__26729,G__26730,G__26731));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$6 = (function (a,b,c,d,e,f){
var self__ = this;
var _ = this;
var G__26732 = a;
var G__26733 = b;
var G__26734 = c;
var G__26735 = d;
var G__26736 = e;
var G__26737 = f;
return (self__.afn.cljs$core$IFn$_invoke$arity$6 ? self__.afn.cljs$core$IFn$_invoke$arity$6(G__26732,G__26733,G__26734,G__26735,G__26736,G__26737) : self__.afn.call(null,G__26732,G__26733,G__26734,G__26735,G__26736,G__26737));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$7 = (function (a,b,c,d,e,f,g){
var self__ = this;
var _ = this;
var G__26738 = a;
var G__26739 = b;
var G__26740 = c;
var G__26741 = d;
var G__26742 = e;
var G__26743 = f;
var G__26744 = g;
return (self__.afn.cljs$core$IFn$_invoke$arity$7 ? self__.afn.cljs$core$IFn$_invoke$arity$7(G__26738,G__26739,G__26740,G__26741,G__26742,G__26743,G__26744) : self__.afn.call(null,G__26738,G__26739,G__26740,G__26741,G__26742,G__26743,G__26744));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$8 = (function (a,b,c,d,e,f,g,h){
var self__ = this;
var _ = this;
var G__26745 = a;
var G__26746 = b;
var G__26747 = c;
var G__26748 = d;
var G__26749 = e;
var G__26750 = f;
var G__26751 = g;
var G__26752 = h;
return (self__.afn.cljs$core$IFn$_invoke$arity$8 ? self__.afn.cljs$core$IFn$_invoke$arity$8(G__26745,G__26746,G__26747,G__26748,G__26749,G__26750,G__26751,G__26752) : self__.afn.call(null,G__26745,G__26746,G__26747,G__26748,G__26749,G__26750,G__26751,G__26752));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$9 = (function (a,b,c,d,e,f,g,h,i){
var self__ = this;
var _ = this;
var G__26753 = a;
var G__26754 = b;
var G__26755 = c;
var G__26756 = d;
var G__26757 = e;
var G__26758 = f;
var G__26759 = g;
var G__26760 = h;
var G__26761 = i;
return (self__.afn.cljs$core$IFn$_invoke$arity$9 ? self__.afn.cljs$core$IFn$_invoke$arity$9(G__26753,G__26754,G__26755,G__26756,G__26757,G__26758,G__26759,G__26760,G__26761) : self__.afn.call(null,G__26753,G__26754,G__26755,G__26756,G__26757,G__26758,G__26759,G__26760,G__26761));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$10 = (function (a,b,c,d,e,f,g,h,i,j){
var self__ = this;
var _ = this;
var G__26762 = a;
var G__26763 = b;
var G__26764 = c;
var G__26765 = d;
var G__26766 = e;
var G__26767 = f;
var G__26768 = g;
var G__26769 = h;
var G__26770 = i;
var G__26771 = j;
return (self__.afn.cljs$core$IFn$_invoke$arity$10 ? self__.afn.cljs$core$IFn$_invoke$arity$10(G__26762,G__26763,G__26764,G__26765,G__26766,G__26767,G__26768,G__26769,G__26770,G__26771) : self__.afn.call(null,G__26762,G__26763,G__26764,G__26765,G__26766,G__26767,G__26768,G__26769,G__26770,G__26771));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$11 = (function (a,b,c,d,e,f,g,h,i,j,k){
var self__ = this;
var _ = this;
var G__26772 = a;
var G__26773 = b;
var G__26774 = c;
var G__26775 = d;
var G__26776 = e;
var G__26777 = f;
var G__26778 = g;
var G__26779 = h;
var G__26780 = i;
var G__26781 = j;
var G__26782 = k;
return (self__.afn.cljs$core$IFn$_invoke$arity$11 ? self__.afn.cljs$core$IFn$_invoke$arity$11(G__26772,G__26773,G__26774,G__26775,G__26776,G__26777,G__26778,G__26779,G__26780,G__26781,G__26782) : self__.afn.call(null,G__26772,G__26773,G__26774,G__26775,G__26776,G__26777,G__26778,G__26779,G__26780,G__26781,G__26782));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$12 = (function (a,b,c,d,e,f,g,h,i,j,k,l){
var self__ = this;
var _ = this;
var G__26783 = a;
var G__26784 = b;
var G__26785 = c;
var G__26786 = d;
var G__26787 = e;
var G__26788 = f;
var G__26789 = g;
var G__26790 = h;
var G__26791 = i;
var G__26792 = j;
var G__26793 = k;
var G__26794 = l;
return (self__.afn.cljs$core$IFn$_invoke$arity$12 ? self__.afn.cljs$core$IFn$_invoke$arity$12(G__26783,G__26784,G__26785,G__26786,G__26787,G__26788,G__26789,G__26790,G__26791,G__26792,G__26793,G__26794) : self__.afn.call(null,G__26783,G__26784,G__26785,G__26786,G__26787,G__26788,G__26789,G__26790,G__26791,G__26792,G__26793,G__26794));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$13 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m){
var self__ = this;
var _ = this;
var G__26795 = a;
var G__26796 = b;
var G__26797 = c;
var G__26798 = d;
var G__26799 = e;
var G__26800 = f;
var G__26801 = g;
var G__26802 = h;
var G__26803 = i;
var G__26804 = j;
var G__26805 = k;
var G__26806 = l;
var G__26807 = m;
return (self__.afn.cljs$core$IFn$_invoke$arity$13 ? self__.afn.cljs$core$IFn$_invoke$arity$13(G__26795,G__26796,G__26797,G__26798,G__26799,G__26800,G__26801,G__26802,G__26803,G__26804,G__26805,G__26806,G__26807) : self__.afn.call(null,G__26795,G__26796,G__26797,G__26798,G__26799,G__26800,G__26801,G__26802,G__26803,G__26804,G__26805,G__26806,G__26807));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$14 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n){
var self__ = this;
var _ = this;
var G__26808 = a;
var G__26809 = b;
var G__26810 = c;
var G__26811 = d;
var G__26812 = e;
var G__26813 = f;
var G__26814 = g;
var G__26815 = h;
var G__26816 = i;
var G__26817 = j;
var G__26818 = k;
var G__26819 = l;
var G__26820 = m;
var G__26821 = n;
return (self__.afn.cljs$core$IFn$_invoke$arity$14 ? self__.afn.cljs$core$IFn$_invoke$arity$14(G__26808,G__26809,G__26810,G__26811,G__26812,G__26813,G__26814,G__26815,G__26816,G__26817,G__26818,G__26819,G__26820,G__26821) : self__.afn.call(null,G__26808,G__26809,G__26810,G__26811,G__26812,G__26813,G__26814,G__26815,G__26816,G__26817,G__26818,G__26819,G__26820,G__26821));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$15 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
var self__ = this;
var _ = this;
var G__26822 = a;
var G__26823 = b;
var G__26824 = c;
var G__26825 = d;
var G__26826 = e;
var G__26827 = f;
var G__26828 = g;
var G__26829 = h;
var G__26830 = i;
var G__26831 = j;
var G__26832 = k;
var G__26833 = l;
var G__26834 = m;
var G__26835 = n;
var G__26836 = o;
return (self__.afn.cljs$core$IFn$_invoke$arity$15 ? self__.afn.cljs$core$IFn$_invoke$arity$15(G__26822,G__26823,G__26824,G__26825,G__26826,G__26827,G__26828,G__26829,G__26830,G__26831,G__26832,G__26833,G__26834,G__26835,G__26836) : self__.afn.call(null,G__26822,G__26823,G__26824,G__26825,G__26826,G__26827,G__26828,G__26829,G__26830,G__26831,G__26832,G__26833,G__26834,G__26835,G__26836));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$16 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
var self__ = this;
var _ = this;
var G__26837 = a;
var G__26838 = b;
var G__26839 = c;
var G__26840 = d;
var G__26841 = e;
var G__26842 = f;
var G__26843 = g;
var G__26844 = h;
var G__26845 = i;
var G__26846 = j;
var G__26847 = k;
var G__26848 = l;
var G__26849 = m;
var G__26850 = n;
var G__26851 = o;
var G__26852 = p;
return (self__.afn.cljs$core$IFn$_invoke$arity$16 ? self__.afn.cljs$core$IFn$_invoke$arity$16(G__26837,G__26838,G__26839,G__26840,G__26841,G__26842,G__26843,G__26844,G__26845,G__26846,G__26847,G__26848,G__26849,G__26850,G__26851,G__26852) : self__.afn.call(null,G__26837,G__26838,G__26839,G__26840,G__26841,G__26842,G__26843,G__26844,G__26845,G__26846,G__26847,G__26848,G__26849,G__26850,G__26851,G__26852));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$17 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
var self__ = this;
var _ = this;
var G__26853 = a;
var G__26854 = b;
var G__26855 = c;
var G__26856 = d;
var G__26857 = e;
var G__26858 = f;
var G__26859 = g;
var G__26860 = h;
var G__26861 = i;
var G__26862 = j;
var G__26863 = k;
var G__26864 = l;
var G__26865 = m;
var G__26866 = n;
var G__26867 = o;
var G__26868 = p;
var G__26869 = q;
return (self__.afn.cljs$core$IFn$_invoke$arity$17 ? self__.afn.cljs$core$IFn$_invoke$arity$17(G__26853,G__26854,G__26855,G__26856,G__26857,G__26858,G__26859,G__26860,G__26861,G__26862,G__26863,G__26864,G__26865,G__26866,G__26867,G__26868,G__26869) : self__.afn.call(null,G__26853,G__26854,G__26855,G__26856,G__26857,G__26858,G__26859,G__26860,G__26861,G__26862,G__26863,G__26864,G__26865,G__26866,G__26867,G__26868,G__26869));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$18 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
var self__ = this;
var _ = this;
var G__26870 = a;
var G__26871 = b;
var G__26872 = c;
var G__26873 = d;
var G__26874 = e;
var G__26875 = f;
var G__26876 = g;
var G__26877 = h;
var G__26878 = i;
var G__26879 = j;
var G__26880 = k;
var G__26881 = l;
var G__26882 = m;
var G__26883 = n;
var G__26884 = o;
var G__26885 = p;
var G__26886 = q;
var G__26887 = r;
return (self__.afn.cljs$core$IFn$_invoke$arity$18 ? self__.afn.cljs$core$IFn$_invoke$arity$18(G__26870,G__26871,G__26872,G__26873,G__26874,G__26875,G__26876,G__26877,G__26878,G__26879,G__26880,G__26881,G__26882,G__26883,G__26884,G__26885,G__26886,G__26887) : self__.afn.call(null,G__26870,G__26871,G__26872,G__26873,G__26874,G__26875,G__26876,G__26877,G__26878,G__26879,G__26880,G__26881,G__26882,G__26883,G__26884,G__26885,G__26886,G__26887));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$19 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
var self__ = this;
var _ = this;
var G__26888 = a;
var G__26889 = b;
var G__26890 = c;
var G__26891 = d;
var G__26892 = e;
var G__26893 = f;
var G__26894 = g;
var G__26895 = h;
var G__26896 = i;
var G__26897 = j;
var G__26898 = k;
var G__26899 = l;
var G__26900 = m;
var G__26901 = n;
var G__26902 = o;
var G__26903 = p;
var G__26904 = q;
var G__26905 = r;
var G__26906 = s;
return (self__.afn.cljs$core$IFn$_invoke$arity$19 ? self__.afn.cljs$core$IFn$_invoke$arity$19(G__26888,G__26889,G__26890,G__26891,G__26892,G__26893,G__26894,G__26895,G__26896,G__26897,G__26898,G__26899,G__26900,G__26901,G__26902,G__26903,G__26904,G__26905,G__26906) : self__.afn.call(null,G__26888,G__26889,G__26890,G__26891,G__26892,G__26893,G__26894,G__26895,G__26896,G__26897,G__26898,G__26899,G__26900,G__26901,G__26902,G__26903,G__26904,G__26905,G__26906));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$20 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
var self__ = this;
var _ = this;
var G__26907 = a;
var G__26908 = b;
var G__26909 = c;
var G__26910 = d;
var G__26911 = e;
var G__26912 = f;
var G__26913 = g;
var G__26914 = h;
var G__26915 = i;
var G__26916 = j;
var G__26917 = k;
var G__26918 = l;
var G__26919 = m;
var G__26920 = n;
var G__26921 = o;
var G__26922 = p;
var G__26923 = q;
var G__26924 = r;
var G__26925 = s;
var G__26926 = t;
return (self__.afn.cljs$core$IFn$_invoke$arity$20 ? self__.afn.cljs$core$IFn$_invoke$arity$20(G__26907,G__26908,G__26909,G__26910,G__26911,G__26912,G__26913,G__26914,G__26915,G__26916,G__26917,G__26918,G__26919,G__26920,G__26921,G__26922,G__26923,G__26924,G__26925,G__26926) : self__.afn.call(null,G__26907,G__26908,G__26909,G__26910,G__26911,G__26912,G__26913,G__26914,G__26915,G__26916,G__26917,G__26918,G__26919,G__26920,G__26921,G__26922,G__26923,G__26924,G__26925,G__26926));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$21 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
var self__ = this;
var _ = this;
var G__26927 = self__.afn;
var G__26928 = a;
var G__26929 = b;
var G__26930 = c;
var G__26931 = d;
var G__26932 = e;
var G__26933 = f;
var G__26934 = g;
var G__26935 = h;
var G__26936 = i;
var G__26937 = j;
var G__26938 = k;
var G__26939 = l;
var G__26940 = m;
var G__26941 = n;
var G__26942 = o;
var G__26943 = p;
var G__26944 = q;
var G__26945 = r;
var G__26946 = s;
var G__26947 = t;
var G__26948 = rest;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$22 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$22(G__26927,G__26928,G__26929,G__26930,G__26931,G__26932,G__26933,G__26934,G__26935,G__26936,G__26937,G__26938,G__26939,G__26940,G__26941,G__26942,G__26943,G__26944,G__26945,G__26946,G__26947,G__26948) : cljs.core.apply.call(null,G__26927,G__26928,G__26929,G__26930,G__26931,G__26932,G__26933,G__26934,G__26935,G__26936,G__26937,G__26938,G__26939,G__26940,G__26941,G__26942,G__26943,G__26944,G__26945,G__26946,G__26947,G__26948));
});

cljs.core.MetaFn.prototype.cljs$core$Fn$ = true;

cljs.core.MetaFn.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (_,new_meta){
var self__ = this;
var ___$1 = this;
return (new cljs.core.MetaFn(self__.afn,new_meta));
});

cljs.core.MetaFn.prototype.cljs$core$IMeta$_meta$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.meta;
});

cljs.core.MetaFn.cljs$lang$type = true;

cljs.core.MetaFn.cljs$lang$ctorStr = "cljs.core/MetaFn";

cljs.core.MetaFn.cljs$lang$ctorPrWriter = (function (this__24861__auto__,writer__24862__auto__,opt__24863__auto__){
return cljs.core._write(writer__24862__auto__,"cljs.core/MetaFn");
});

cljs.core.__GT_MetaFn = (function __GT_MetaFn(afn,meta){
return (new cljs.core.MetaFn(afn,meta));
});

/**
* Returns an object of the same type and value as obj, with
* map m as its metadata.
*/
cljs.core.with_meta = (function with_meta(o,meta){
if((cljs.core.fn_QMARK_(o)) && (!((function (){var G__26953 = o;
if(G__26953){
var bit__24955__auto__ = (G__26953.cljs$lang$protocol_mask$partition0$ & (262144));
if((bit__24955__auto__) || (G__26953.cljs$core$IWithMeta$)){
return true;
} else {
if((!G__26953.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IWithMeta,G__26953);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IWithMeta,G__26953);
}
})()))){
return (new cljs.core.MetaFn(o,meta));
} else {
if((o == null)){
return null;
} else {
return cljs.core._with_meta(o,meta);
}
}
});
/**
* Returns the metadata of obj, returns nil if there is no metadata.
*/
cljs.core.meta = (function meta(o){
if((function (){var and__24262__auto__ = !((o == null));
if(and__24262__auto__){
var G__26957 = o;
if(G__26957){
var bit__24955__auto__ = (G__26957.cljs$lang$protocol_mask$partition0$ & (131072));
if((bit__24955__auto__) || (G__26957.cljs$core$IMeta$)){
return true;
} else {
if((!G__26957.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IMeta,G__26957);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IMeta,G__26957);
}
} else {
return and__24262__auto__;
}
})()){
return cljs.core._meta(o);
} else {
return null;
}
});
/**
* For a list or queue, same as first, for a vector, same as, but much
* more efficient than, last. If the collection is empty, returns nil.
*/
cljs.core.peek = (function peek(coll){
if((coll == null)){
return null;
} else {
return cljs.core._peek(coll);
}
});
/**
* For a list or queue, returns a new list/queue without the first
* item, for a vector, returns a new vector without the last item.
* Note - not the same as next/butlast.
*/
cljs.core.pop = (function pop(coll){
if((coll == null)){
return null;
} else {
return cljs.core._pop(coll);
}
});
/**
* disj[oin]. Returns a new set of the same (hashed/sorted) type, that
* does not contain key(s).
* @param {...*} var_args
*/
cljs.core.disj = (function() {
var disj = null;
var disj__1 = (function (coll){
return coll;
});
var disj__2 = (function (coll,k){
if((coll == null)){
return null;
} else {
return cljs.core._disjoin(coll,k);
}
});
var disj__3 = (function() { 
var G__26960__delegate = function (coll,k,ks){
while(true){
if((coll == null)){
return null;
} else {
var ret = disj.cljs$core$IFn$_invoke$arity$2(coll,k);
if(cljs.core.truth_(ks)){
var G__26961 = ret;
var G__26962 = cljs.core.first(ks);
var G__26963 = cljs.core.next(ks);
coll = G__26961;
k = G__26962;
ks = G__26963;
continue;
} else {
return ret;
}
}
break;
}
};
var G__26960 = function (coll,k,var_args){
var ks = null;
if (arguments.length > 2) {
var G__26964__i = 0, G__26964__a = new Array(arguments.length -  2);
while (G__26964__i < G__26964__a.length) {G__26964__a[G__26964__i] = arguments[G__26964__i + 2]; ++G__26964__i;}
  ks = new cljs.core.IndexedSeq(G__26964__a,0);
} 
return G__26960__delegate.call(this,coll,k,ks);};
G__26960.cljs$lang$maxFixedArity = 2;
G__26960.cljs$lang$applyTo = (function (arglist__26965){
var coll = cljs.core.first(arglist__26965);
arglist__26965 = cljs.core.next(arglist__26965);
var k = cljs.core.first(arglist__26965);
var ks = cljs.core.rest(arglist__26965);
return G__26960__delegate(coll,k,ks);
});
G__26960.cljs$core$IFn$_invoke$arity$variadic = G__26960__delegate;
return G__26960;
})()
;
disj = function(coll,k,var_args){
var ks = var_args;
switch(arguments.length){
case 1:
return disj__1.call(this,coll);
case 2:
return disj__2.call(this,coll,k);
default:
var G__26966 = null;
if (arguments.length > 2) {
var G__26967__i = 0, G__26967__a = new Array(arguments.length -  2);
while (G__26967__i < G__26967__a.length) {G__26967__a[G__26967__i] = arguments[G__26967__i + 2]; ++G__26967__i;}
G__26966 = new cljs.core.IndexedSeq(G__26967__a,0);
}
return disj__3.cljs$core$IFn$_invoke$arity$variadic(coll,k, G__26966);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
disj.cljs$lang$maxFixedArity = 2;
disj.cljs$lang$applyTo = disj__3.cljs$lang$applyTo;
disj.cljs$core$IFn$_invoke$arity$1 = disj__1;
disj.cljs$core$IFn$_invoke$arity$2 = disj__2;
disj.cljs$core$IFn$_invoke$arity$variadic = disj__3.cljs$core$IFn$_invoke$arity$variadic;
return disj;
})()
;
/**
* Returns true if coll has no items - same as (not (seq coll)).
* Please use the idiom (seq x) rather than (not (empty? x))
*/
cljs.core.empty_QMARK_ = (function empty_QMARK_(coll){
return ((coll == null)) || (cljs.core.not(cljs.core.seq(coll)));
});
/**
* Returns true if x satisfies ICollection
*/
cljs.core.coll_QMARK_ = (function coll_QMARK_(x){
if((x == null)){
return false;
} else {
var G__26969 = x;
if(G__26969){
var bit__24955__auto__ = (G__26969.cljs$lang$protocol_mask$partition0$ & (8));
if((bit__24955__auto__) || (G__26969.cljs$core$ICollection$)){
return true;
} else {
if((!G__26969.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ICollection,G__26969);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ICollection,G__26969);
}
}
});
/**
* Returns true if x satisfies ISet
*/
cljs.core.set_QMARK_ = (function set_QMARK_(x){
if((x == null)){
return false;
} else {
var G__26971 = x;
if(G__26971){
var bit__24955__auto__ = (G__26971.cljs$lang$protocol_mask$partition0$ & (4096));
if((bit__24955__auto__) || (G__26971.cljs$core$ISet$)){
return true;
} else {
if((!G__26971.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISet,G__26971);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISet,G__26971);
}
}
});
/**
* Returns true if coll implements Associative
*/
cljs.core.associative_QMARK_ = (function associative_QMARK_(x){
var G__26973 = x;
if(G__26973){
var bit__24955__auto__ = (G__26973.cljs$lang$protocol_mask$partition0$ & (512));
if((bit__24955__auto__) || (G__26973.cljs$core$IAssociative$)){
return true;
} else {
if((!G__26973.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IAssociative,G__26973);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IAssociative,G__26973);
}
});
/**
* Returns true if coll satisfies ISequential
*/
cljs.core.sequential_QMARK_ = (function sequential_QMARK_(x){
var G__26975 = x;
if(G__26975){
var bit__24955__auto__ = (G__26975.cljs$lang$protocol_mask$partition0$ & (16777216));
if((bit__24955__auto__) || (G__26975.cljs$core$ISequential$)){
return true;
} else {
if((!G__26975.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISequential,G__26975);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISequential,G__26975);
}
});
/**
* Returns true if coll satisfies ISorted
*/
cljs.core.sorted_QMARK_ = (function sorted_QMARK_(x){
var G__26977 = x;
if(G__26977){
var bit__24955__auto__ = (G__26977.cljs$lang$protocol_mask$partition0$ & (268435456));
if((bit__24955__auto__) || (G__26977.cljs$core$ISorted$)){
return true;
} else {
if((!G__26977.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISorted,G__26977);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISorted,G__26977);
}
});
/**
* Returns true if coll satisfies IReduce
*/
cljs.core.reduceable_QMARK_ = (function reduceable_QMARK_(x){
var G__26979 = x;
if(G__26979){
var bit__24955__auto__ = (G__26979.cljs$lang$protocol_mask$partition0$ & (524288));
if((bit__24955__auto__) || (G__26979.cljs$core$IReduce$)){
return true;
} else {
if((!G__26979.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IReduce,G__26979);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IReduce,G__26979);
}
});
/**
* Return true if x satisfies IMap
*/
cljs.core.map_QMARK_ = (function map_QMARK_(x){
if((x == null)){
return false;
} else {
var G__26981 = x;
if(G__26981){
var bit__24955__auto__ = (G__26981.cljs$lang$protocol_mask$partition0$ & (1024));
if((bit__24955__auto__) || (G__26981.cljs$core$IMap$)){
return true;
} else {
if((!G__26981.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IMap,G__26981);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IMap,G__26981);
}
}
});
/**
* Return true if x satisfies IVector
*/
cljs.core.vector_QMARK_ = (function vector_QMARK_(x){
var G__26983 = x;
if(G__26983){
var bit__24955__auto__ = (G__26983.cljs$lang$protocol_mask$partition0$ & (16384));
if((bit__24955__auto__) || (G__26983.cljs$core$IVector$)){
return true;
} else {
if((!G__26983.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IVector,G__26983);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IVector,G__26983);
}
});

cljs.core.chunked_seq_QMARK_ = (function chunked_seq_QMARK_(x){
var G__26985 = x;
if(G__26985){
var bit__24948__auto__ = (G__26985.cljs$lang$protocol_mask$partition1$ & (512));
if((bit__24948__auto__) || (G__26985.cljs$core$IChunkedSeq$)){
return true;
} else {
return false;
}
} else {
return false;
}
});
/**
* @param {...*} var_args
*/
cljs.core.js_obj = (function() {
var js_obj = null;
var js_obj__0 = (function (){
var obj26991 = {};
return obj26991;
});
var js_obj__1 = (function() { 
var G__26994__delegate = function (keyvals){
var G__26992 = goog.object.create;
var G__26993 = keyvals;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$2 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$2(G__26992,G__26993) : cljs.core.apply.call(null,G__26992,G__26993));
};
var G__26994 = function (var_args){
var keyvals = null;
if (arguments.length > 0) {
var G__26995__i = 0, G__26995__a = new Array(arguments.length -  0);
while (G__26995__i < G__26995__a.length) {G__26995__a[G__26995__i] = arguments[G__26995__i + 0]; ++G__26995__i;}
  keyvals = new cljs.core.IndexedSeq(G__26995__a,0);
} 
return G__26994__delegate.call(this,keyvals);};
G__26994.cljs$lang$maxFixedArity = 0;
G__26994.cljs$lang$applyTo = (function (arglist__26996){
var keyvals = cljs.core.seq(arglist__26996);
return G__26994__delegate(keyvals);
});
G__26994.cljs$core$IFn$_invoke$arity$variadic = G__26994__delegate;
return G__26994;
})()
;
js_obj = function(var_args){
var keyvals = var_args;
switch(arguments.length){
case 0:
return js_obj__0.call(this);
default:
var G__26997 = null;
if (arguments.length > 0) {
var G__26998__i = 0, G__26998__a = new Array(arguments.length -  0);
while (G__26998__i < G__26998__a.length) {G__26998__a[G__26998__i] = arguments[G__26998__i + 0]; ++G__26998__i;}
G__26997 = new cljs.core.IndexedSeq(G__26998__a,0);
}
return js_obj__1.cljs$core$IFn$_invoke$arity$variadic(G__26997);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
js_obj.cljs$lang$maxFixedArity = 0;
js_obj.cljs$lang$applyTo = js_obj__1.cljs$lang$applyTo;
js_obj.cljs$core$IFn$_invoke$arity$0 = js_obj__0;
js_obj.cljs$core$IFn$_invoke$arity$variadic = js_obj__1.cljs$core$IFn$_invoke$arity$variadic;
return js_obj;
})()
;
cljs.core.js_keys = (function js_keys(obj){
var keys = [];
var G__27001_27003 = obj;
var G__27002_27004 = ((function (G__27001_27003,keys){
return (function (val,key,obj__$1){
return keys.push(key);
});})(G__27001_27003,keys))
;
goog.object.forEach(G__27001_27003,G__27002_27004);

return keys;
});
cljs.core.js_delete = (function js_delete(obj,key){
return delete obj[key];
});
cljs.core.array_copy = (function array_copy(from,i,to,j,len){
var i__$1 = i;
var j__$1 = j;
var len__$1 = len;
while(true){
if((len__$1 === (0))){
return to;
} else {
(to[j__$1] = (from[i__$1]));

var G__27005 = (i__$1 + (1));
var G__27006 = (j__$1 + (1));
var G__27007 = (len__$1 - (1));
i__$1 = G__27005;
j__$1 = G__27006;
len__$1 = G__27007;
continue;
}
break;
}
});
cljs.core.array_copy_downward = (function array_copy_downward(from,i,to,j,len){
var i__$1 = (i + (len - (1)));
var j__$1 = (j + (len - (1)));
var len__$1 = len;
while(true){
if((len__$1 === (0))){
return to;
} else {
(to[j__$1] = (from[i__$1]));

var G__27008 = (i__$1 - (1));
var G__27009 = (j__$1 - (1));
var G__27010 = (len__$1 - (1));
i__$1 = G__27008;
j__$1 = G__27009;
len__$1 = G__27010;
continue;
}
break;
}
});
cljs.core.lookup_sentinel = (function (){var obj27012 = {};
return obj27012;
})();
/**
* Returns true if x is the value false, false otherwise.
*/
cljs.core.false_QMARK_ = (function false_QMARK_(x){
return x === false;
});
/**
* Returns true if x is the value true, false otherwise.
*/
cljs.core.true_QMARK_ = (function true_QMARK_(x){
return x === true;
});
cljs.core.undefined_QMARK_ = (function undefined_QMARK_(x){
return (void 0 === x);
});
/**
* Return true if s satisfies ISeq
*/
cljs.core.seq_QMARK_ = (function seq_QMARK_(s){
if((s == null)){
return false;
} else {
var G__27014 = s;
if(G__27014){
var bit__24955__auto__ = (G__27014.cljs$lang$protocol_mask$partition0$ & (64));
if((bit__24955__auto__) || (G__27014.cljs$core$ISeq$)){
return true;
} else {
if((!G__27014.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq,G__27014);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq,G__27014);
}
}
});
/**
* Return true if s satisfies ISeqable
*/
cljs.core.seqable_QMARK_ = (function seqable_QMARK_(s){
var G__27016 = s;
if(G__27016){
var bit__24955__auto__ = (G__27016.cljs$lang$protocol_mask$partition0$ & (8388608));
if((bit__24955__auto__) || (G__27016.cljs$core$ISeqable$)){
return true;
} else {
if((!G__27016.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeqable,G__27016);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeqable,G__27016);
}
});
cljs.core.boolean$ = (function boolean$(x){
if(cljs.core.truth_(x)){
return true;
} else {
return false;
}
});
cljs.core.ifn_QMARK_ = (function ifn_QMARK_(f){
var or__24274__auto__ = cljs.core.fn_QMARK_(f);
if(or__24274__auto__){
return or__24274__auto__;
} else {
var G__27020 = f;
if(G__27020){
var bit__24955__auto__ = (G__27020.cljs$lang$protocol_mask$partition0$ & (1));
if((bit__24955__auto__) || (G__27020.cljs$core$IFn$)){
return true;
} else {
if((!G__27020.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IFn,G__27020);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IFn,G__27020);
}
}
});
/**
* Returns true if n is an integer.
*/
cljs.core.integer_QMARK_ = (function integer_QMARK_(n){
return (typeof n === 'number') && (cljs.core.not((function (){var G__27033 = n;
return isNaN(G__27033);
})())) && (!((n === Infinity))) && (((function (){var G__27034 = n;
return parseFloat(G__27034);
})() === (function (){var G__27035 = n;
var G__27036 = (10);
return parseInt(G__27035,G__27036);
})()));
});
/**
* Returns true if key is present in the given collection, otherwise
* returns false.  Note that for numerically indexed collections like
* vectors and arrays, this tests if the numeric key is within the
* range of indexes. 'contains?' operates constant or logarithmic time;
* it will not perform a linear search for a value.  See also 'some'.
*/
cljs.core.contains_QMARK_ = (function contains_QMARK_(coll,v){
if((cljs.core.get.cljs$core$IFn$_invoke$arity$3(coll,v,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel)){
return false;
} else {
return true;
}
});
/**
* Returns the map entry for key, or nil if key not present.
*/
cljs.core.find = (function find(coll,k){
if((!((coll == null))) && (cljs.core.associative_QMARK_(coll)) && (cljs.core.contains_QMARK_(coll,k))){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [k,cljs.core.get.cljs$core$IFn$_invoke$arity$2(coll,k)], null);
} else {
return null;
}
});
/**
* Returns true if no two of the arguments are =
* @param {...*} var_args
*/
cljs.core.distinct_QMARK_ = (function() {
var distinct_QMARK_ = null;
var distinct_QMARK___1 = (function (x){
return true;
});
var distinct_QMARK___2 = (function (x,y){
return !(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x,y));
});
var distinct_QMARK___3 = (function() { 
var G__27037__delegate = function (x,y,more){
if(!(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x,y))){
var s = cljs.core.PersistentHashSet.fromArray([x,y], true);
var xs = more;
while(true){
var x__$1 = cljs.core.first(xs);
var etc = cljs.core.next(xs);
if(cljs.core.truth_(xs)){
if(cljs.core.contains_QMARK_(s,x__$1)){
return false;
} else {
var G__27038 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(s,x__$1);
var G__27039 = etc;
s = G__27038;
xs = G__27039;
continue;
}
} else {
return true;
}
break;
}
} else {
return false;
}
};
var G__27037 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__27040__i = 0, G__27040__a = new Array(arguments.length -  2);
while (G__27040__i < G__27040__a.length) {G__27040__a[G__27040__i] = arguments[G__27040__i + 2]; ++G__27040__i;}
  more = new cljs.core.IndexedSeq(G__27040__a,0);
} 
return G__27037__delegate.call(this,x,y,more);};
G__27037.cljs$lang$maxFixedArity = 2;
G__27037.cljs$lang$applyTo = (function (arglist__27041){
var x = cljs.core.first(arglist__27041);
arglist__27041 = cljs.core.next(arglist__27041);
var y = cljs.core.first(arglist__27041);
var more = cljs.core.rest(arglist__27041);
return G__27037__delegate(x,y,more);
});
G__27037.cljs$core$IFn$_invoke$arity$variadic = G__27037__delegate;
return G__27037;
})()
;
distinct_QMARK_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return distinct_QMARK___1.call(this,x);
case 2:
return distinct_QMARK___2.call(this,x,y);
default:
var G__27042 = null;
if (arguments.length > 2) {
var G__27043__i = 0, G__27043__a = new Array(arguments.length -  2);
while (G__27043__i < G__27043__a.length) {G__27043__a[G__27043__i] = arguments[G__27043__i + 2]; ++G__27043__i;}
G__27042 = new cljs.core.IndexedSeq(G__27043__a,0);
}
return distinct_QMARK___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__27042);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
distinct_QMARK_.cljs$lang$maxFixedArity = 2;
distinct_QMARK_.cljs$lang$applyTo = distinct_QMARK___3.cljs$lang$applyTo;
distinct_QMARK_.cljs$core$IFn$_invoke$arity$1 = distinct_QMARK___1;
distinct_QMARK_.cljs$core$IFn$_invoke$arity$2 = distinct_QMARK___2;
distinct_QMARK_.cljs$core$IFn$_invoke$arity$variadic = distinct_QMARK___3.cljs$core$IFn$_invoke$arity$variadic;
return distinct_QMARK_;
})()
;
/**
* Comparator. Returns a negative number, zero, or a positive number
* when x is logically 'less than', 'equal to', or 'greater than'
* y. Uses IComparable if available and google.array.defaultCompare for objects
* of the same type and special-cases nil to be less than any other object.
*/
cljs.core.compare = (function compare(x,y){
if((x === y)){
return (0);
} else {
if((x == null)){
return (-1);
} else {
if((y == null)){
return (1);
} else {
if((cljs.core.type(x) === cljs.core.type(y))){
if((function (){var G__27047 = x;
if(G__27047){
var bit__24948__auto__ = (G__27047.cljs$lang$protocol_mask$partition1$ & (2048));
if((bit__24948__auto__) || (G__27047.cljs$core$IComparable$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return x.cljs$core$IComparable$_compare$arity$2(null,y);
} else {
var G__27048 = x;
var G__27049 = y;
return goog.array.defaultCompare(G__27048,G__27049);
}
} else {
throw (new Error("compare on non-nil objects of different types"));

}
}
}
}
});
/**
* Compare indexed collection.
*/
cljs.core.compare_indexed = (function() {
var compare_indexed = null;
var compare_indexed__2 = (function (xs,ys){
var xl = cljs.core.count(xs);
var yl = cljs.core.count(ys);
if((xl < yl)){
return (-1);
} else {
if((xl > yl)){
return (1);
} else {
return compare_indexed.cljs$core$IFn$_invoke$arity$4(xs,ys,xl,(0));

}
}
});
var compare_indexed__4 = (function (xs,ys,len,n){
while(true){
var d = cljs.core.compare(cljs.core.nth.cljs$core$IFn$_invoke$arity$2(xs,n),cljs.core.nth.cljs$core$IFn$_invoke$arity$2(ys,n));
if(((d === (0))) && (((n + (1)) < len))){
var G__27054 = xs;
var G__27055 = ys;
var G__27056 = len;
var G__27057 = (n + (1));
xs = G__27054;
ys = G__27055;
len = G__27056;
n = G__27057;
continue;
} else {
return d;
}
break;
}
});
compare_indexed = function(xs,ys,len,n){
switch(arguments.length){
case 2:
return compare_indexed__2.call(this,xs,ys);
case 4:
return compare_indexed__4.call(this,xs,ys,len,n);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
compare_indexed.cljs$core$IFn$_invoke$arity$2 = compare_indexed__2;
compare_indexed.cljs$core$IFn$_invoke$arity$4 = compare_indexed__4;
return compare_indexed;
})()
;
/**
* Given a fn that might be boolean valued or a comparator,
* return a fn that is a comparator.
*/
cljs.core.fn__GT_comparator = (function fn__GT_comparator(f){
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(f,cljs.core.compare)){
return cljs.core.compare;
} else {
return (function (x,y){
var r = (function (){var G__27062 = x;
var G__27063 = y;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__27062,G__27063) : f.call(null,G__27062,G__27063));
})();
if(typeof r === 'number'){
return r;
} else {
if(cljs.core.truth_(r)){
return (-1);
} else {
if(cljs.core.truth_((function (){var G__27064 = y;
var G__27065 = x;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__27064,G__27065) : f.call(null,G__27064,G__27065));
})())){
return (1);
} else {
return (0);
}
}
}
});
}
});
/**
* Returns a sorted sequence of the items in coll. Comp can be
* boolean-valued comparison function, or a -/0/+ valued comparator.
* Comp defaults to compare.
*/
cljs.core.sort = (function() {
var sort = null;
var sort__1 = (function (coll){
return sort.cljs$core$IFn$_invoke$arity$2(cljs.core.compare,coll);
});
var sort__2 = (function (comp,coll){
if(cljs.core.seq(coll)){
var a = (function (){var G__27071 = coll;
return (cljs.core.to_array.cljs$core$IFn$_invoke$arity$1 ? cljs.core.to_array.cljs$core$IFn$_invoke$arity$1(G__27071) : cljs.core.to_array.call(null,G__27071));
})();
var G__27072_27074 = a;
var G__27073_27075 = cljs.core.fn__GT_comparator(comp);
goog.array.stableSort(G__27072_27074,G__27073_27075);

return cljs.core.seq(a);
} else {
return cljs.core.List.EMPTY;
}
});
sort = function(comp,coll){
switch(arguments.length){
case 1:
return sort__1.call(this,comp);
case 2:
return sort__2.call(this,comp,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
sort.cljs$core$IFn$_invoke$arity$1 = sort__1;
sort.cljs$core$IFn$_invoke$arity$2 = sort__2;
return sort;
})()
;
/**
* Returns a sorted sequence of the items in coll, where the sort
* order is determined by comparing (keyfn item).  Comp can be
* boolean-valued comparison funcion, or a -/0/+ valued comparator.
* Comp defaults to compare.
*/
cljs.core.sort_by = (function() {
var sort_by = null;
var sort_by__2 = (function (keyfn,coll){
return sort_by.cljs$core$IFn$_invoke$arity$3(keyfn,cljs.core.compare,coll);
});
var sort_by__3 = (function (keyfn,comp,coll){
return cljs.core.sort.cljs$core$IFn$_invoke$arity$2((function (x,y){
return cljs.core.fn__GT_comparator(comp).call(null,(function (){var G__27081 = x;
return (keyfn.cljs$core$IFn$_invoke$arity$1 ? keyfn.cljs$core$IFn$_invoke$arity$1(G__27081) : keyfn.call(null,G__27081));
})(),(function (){var G__27082 = y;
return (keyfn.cljs$core$IFn$_invoke$arity$1 ? keyfn.cljs$core$IFn$_invoke$arity$1(G__27082) : keyfn.call(null,G__27082));
})());
}),coll);
});
sort_by = function(keyfn,comp,coll){
switch(arguments.length){
case 2:
return sort_by__2.call(this,keyfn,comp);
case 3:
return sort_by__3.call(this,keyfn,comp,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
sort_by.cljs$core$IFn$_invoke$arity$2 = sort_by__2;
sort_by.cljs$core$IFn$_invoke$arity$3 = sort_by__3;
return sort_by;
})()
;
cljs.core.seq_reduce = (function() {
var seq_reduce = null;
var seq_reduce__2 = (function (f,coll){
var temp__4124__auto__ = cljs.core.seq(coll);
if(temp__4124__auto__){
var s = temp__4124__auto__;
var G__27088 = f;
var G__27089 = cljs.core.first(s);
var G__27090 = cljs.core.next(s);
return (cljs.core.reduce.cljs$core$IFn$_invoke$arity$3 ? cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(G__27088,G__27089,G__27090) : cljs.core.reduce.call(null,G__27088,G__27089,G__27090));
} else {
return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
}
});
var seq_reduce__3 = (function (f,val,coll){
var val__$1 = val;
var coll__$1 = cljs.core.seq(coll);
while(true){
if(coll__$1){
var nval = (function (){var G__27091 = val__$1;
var G__27092 = cljs.core.first(coll__$1);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__27091,G__27092) : f.call(null,G__27091,G__27092));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__27093 = nval;
var G__27094 = cljs.core.next(coll__$1);
val__$1 = G__27093;
coll__$1 = G__27094;
continue;
}
} else {
return val__$1;
}
break;
}
});
seq_reduce = function(f,val,coll){
switch(arguments.length){
case 2:
return seq_reduce__2.call(this,f,val);
case 3:
return seq_reduce__3.call(this,f,val,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
seq_reduce.cljs$core$IFn$_invoke$arity$2 = seq_reduce__2;
seq_reduce.cljs$core$IFn$_invoke$arity$3 = seq_reduce__3;
return seq_reduce;
})()
;
/**
* Return a random permutation of coll
*/
cljs.core.shuffle = (function shuffle(coll){
var a = (function (){var G__27098 = coll;
return (cljs.core.to_array.cljs$core$IFn$_invoke$arity$1 ? cljs.core.to_array.cljs$core$IFn$_invoke$arity$1(G__27098) : cljs.core.to_array.call(null,G__27098));
})();
var G__27099_27101 = a;
goog.array.shuffle(G__27099_27101);

var G__27100 = a;
return (cljs.core.vec.cljs$core$IFn$_invoke$arity$1 ? cljs.core.vec.cljs$core$IFn$_invoke$arity$1(G__27100) : cljs.core.vec.call(null,G__27100));
});
/**
* f should be a function of 2 arguments. If val is not supplied,
* returns the result of applying f to the first 2 items in coll, then
* applying f to that result and the 3rd item, etc. If coll contains no
* items, f must accept no arguments as well, and reduce returns the
* result of calling f with no arguments.  If coll has only 1 item, it
* is returned and f is not called.  If val is supplied, returns the
* result of applying f to val and the first item in coll, then
* applying f to that result and the 2nd item, etc. If coll contains no
* items, returns val and f is not called.
*/
cljs.core.reduce = (function() {
var reduce = null;
var reduce__2 = (function (f,coll){
if((function (){var G__27104 = coll;
if(G__27104){
var bit__24948__auto__ = (G__27104.cljs$lang$protocol_mask$partition0$ & (524288));
if((bit__24948__auto__) || (G__27104.cljs$core$IReduce$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$IReduce$_reduce$arity$2(null,f);
} else {
if(coll instanceof Array){
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$2(coll,f);
} else {
if(typeof coll === 'string'){
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$2(coll,f);
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.IReduce,coll)){
return cljs.core._reduce.cljs$core$IFn$_invoke$arity$2(coll,f);
} else {
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll);

}
}
}
}
});
var reduce__3 = (function (f,val,coll){
if((function (){var G__27105 = coll;
if(G__27105){
var bit__24948__auto__ = (G__27105.cljs$lang$protocol_mask$partition0$ & (524288));
if((bit__24948__auto__) || (G__27105.cljs$core$IReduce$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$IReduce$_reduce$arity$3(null,f,val);
} else {
if(coll instanceof Array){
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$3(coll,f,val);
} else {
if(typeof coll === 'string'){
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$3(coll,f,val);
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.IReduce,coll)){
return cljs.core._reduce.cljs$core$IFn$_invoke$arity$3(coll,f,val);
} else {
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,val,coll);

}
}
}
}
});
reduce = function(f,val,coll){
switch(arguments.length){
case 2:
return reduce__2.call(this,f,val);
case 3:
return reduce__3.call(this,f,val,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
reduce.cljs$core$IFn$_invoke$arity$2 = reduce__2;
reduce.cljs$core$IFn$_invoke$arity$3 = reduce__3;
return reduce;
})()
;
/**
* Reduces an associative collection. f should be a function of 3
* arguments. Returns the result of applying f to init, the first key
* and the first value in coll, then applying f to that result and the
* 2nd key and value, etc. If coll contains no entries, returns init
* and f is not called. Note that reduce-kv is supported on vectors,
* where the keys will be the ordinals.
*/
cljs.core.reduce_kv = (function reduce_kv(f,init,coll){
if(!((coll == null))){
return cljs.core._kv_reduce(coll,f,init);
} else {
return init;
}
});
cljs.core.identity = (function identity(x){
return x;
});
cljs.core.completing = (function() {
var completing = null;
var completing__1 = (function (f){
return completing.cljs$core$IFn$_invoke$arity$2(f,cljs.core.identity);
});
var completing__2 = (function (f,cf){
return (function() {
var G__27114 = null;
var G__27114__0 = (function (){
return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
});
var G__27114__1 = (function (x){
var G__27111 = x;
return (cf.cljs$core$IFn$_invoke$arity$1 ? cf.cljs$core$IFn$_invoke$arity$1(G__27111) : cf.call(null,G__27111));
});
var G__27114__2 = (function (x,y){
var G__27112 = x;
var G__27113 = y;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__27112,G__27113) : f.call(null,G__27112,G__27113));
});
G__27114 = function(x,y){
switch(arguments.length){
case 0:
return G__27114__0.call(this);
case 1:
return G__27114__1.call(this,x);
case 2:
return G__27114__2.call(this,x,y);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__27114.cljs$core$IFn$_invoke$arity$0 = G__27114__0;
G__27114.cljs$core$IFn$_invoke$arity$1 = G__27114__1;
G__27114.cljs$core$IFn$_invoke$arity$2 = G__27114__2;
return G__27114;
})()
});
completing = function(f,cf){
switch(arguments.length){
case 1:
return completing__1.call(this,f);
case 2:
return completing__2.call(this,f,cf);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
completing.cljs$core$IFn$_invoke$arity$1 = completing__1;
completing.cljs$core$IFn$_invoke$arity$2 = completing__2;
return completing;
})()
;
/**
* reduce with a transformation of f (xf). If init is not
* supplied, (f) will be called to produce it. f should be a reducing
* step function that accepts both 1 and 2 arguments, if it accepts
* only 2 you can add the arity-1 with 'completing'. Returns the result
* of applying (the transformed) xf to init and the first item in coll,
* then applying xf to that result and the 2nd item, etc. If coll
* contains no items, returns init and f is not called. Note that
* certain transforms may inject or skip items.
*/
cljs.core.transduce = (function() {
var transduce = null;
var transduce__3 = (function (xform,f,coll){
return transduce.cljs$core$IFn$_invoke$arity$4(xform,f,(function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})(),coll);
});
var transduce__4 = (function (xform,f,init,coll){
var f__$1 = (function (){var G__27121 = f;
return (xform.cljs$core$IFn$_invoke$arity$1 ? xform.cljs$core$IFn$_invoke$arity$1(G__27121) : xform.call(null,G__27121));
})();
var ret = cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(f__$1,init,coll);
var G__27122 = ret;
return (f__$1.cljs$core$IFn$_invoke$arity$1 ? f__$1.cljs$core$IFn$_invoke$arity$1(G__27122) : f__$1.call(null,G__27122));
});
transduce = function(xform,f,init,coll){
switch(arguments.length){
case 3:
return transduce__3.call(this,xform,f,init);
case 4:
return transduce__4.call(this,xform,f,init,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
transduce.cljs$core$IFn$_invoke$arity$3 = transduce__3;
transduce.cljs$core$IFn$_invoke$arity$4 = transduce__4;
return transduce;
})()
;
/**
* Returns the sum of nums. (+) returns 0.
* @param {...*} var_args
*/
cljs.core._PLUS_ = (function() {
var _PLUS_ = null;
var _PLUS___0 = (function (){
return (0);
});
var _PLUS___1 = (function (x){
return x;
});
var _PLUS___2 = (function (x,y){
return (x + y);
});
var _PLUS___3 = (function() { 
var G__27123__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(_PLUS_,(x + y),more);
};
var G__27123 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__27124__i = 0, G__27124__a = new Array(arguments.length -  2);
while (G__27124__i < G__27124__a.length) {G__27124__a[G__27124__i] = arguments[G__27124__i + 2]; ++G__27124__i;}
  more = new cljs.core.IndexedSeq(G__27124__a,0);
} 
return G__27123__delegate.call(this,x,y,more);};
G__27123.cljs$lang$maxFixedArity = 2;
G__27123.cljs$lang$applyTo = (function (arglist__27125){
var x = cljs.core.first(arglist__27125);
arglist__27125 = cljs.core.next(arglist__27125);
var y = cljs.core.first(arglist__27125);
var more = cljs.core.rest(arglist__27125);
return G__27123__delegate(x,y,more);
});
G__27123.cljs$core$IFn$_invoke$arity$variadic = G__27123__delegate;
return G__27123;
})()
;
_PLUS_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 0:
return _PLUS___0.call(this);
case 1:
return _PLUS___1.call(this,x);
case 2:
return _PLUS___2.call(this,x,y);
default:
var G__27126 = null;
if (arguments.length > 2) {
var G__27127__i = 0, G__27127__a = new Array(arguments.length -  2);
while (G__27127__i < G__27127__a.length) {G__27127__a[G__27127__i] = arguments[G__27127__i + 2]; ++G__27127__i;}
G__27126 = new cljs.core.IndexedSeq(G__27127__a,0);
}
return _PLUS___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__27126);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_PLUS_.cljs$lang$maxFixedArity = 2;
_PLUS_.cljs$lang$applyTo = _PLUS___3.cljs$lang$applyTo;
_PLUS_.cljs$core$IFn$_invoke$arity$0 = _PLUS___0;
_PLUS_.cljs$core$IFn$_invoke$arity$1 = _PLUS___1;
_PLUS_.cljs$core$IFn$_invoke$arity$2 = _PLUS___2;
_PLUS_.cljs$core$IFn$_invoke$arity$variadic = _PLUS___3.cljs$core$IFn$_invoke$arity$variadic;
return _PLUS_;
})()
;
/**
* If no ys are supplied, returns the negation of x, else subtracts
* the ys from x and returns the result.
* @param {...*} var_args
*/
cljs.core._ = (function() {
var _ = null;
var ___1 = (function (x){
return (- x);
});
var ___2 = (function (x,y){
return (x - y);
});
var ___3 = (function() { 
var G__27128__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(_,(x - y),more);
};
var G__27128 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__27129__i = 0, G__27129__a = new Array(arguments.length -  2);
while (G__27129__i < G__27129__a.length) {G__27129__a[G__27129__i] = arguments[G__27129__i + 2]; ++G__27129__i;}
  more = new cljs.core.IndexedSeq(G__27129__a,0);
} 
return G__27128__delegate.call(this,x,y,more);};
G__27128.cljs$lang$maxFixedArity = 2;
G__27128.cljs$lang$applyTo = (function (arglist__27130){
var x = cljs.core.first(arglist__27130);
arglist__27130 = cljs.core.next(arglist__27130);
var y = cljs.core.first(arglist__27130);
var more = cljs.core.rest(arglist__27130);
return G__27128__delegate(x,y,more);
});
G__27128.cljs$core$IFn$_invoke$arity$variadic = G__27128__delegate;
return G__27128;
})()
;
_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return ___1.call(this,x);
case 2:
return ___2.call(this,x,y);
default:
var G__27131 = null;
if (arguments.length > 2) {
var G__27132__i = 0, G__27132__a = new Array(arguments.length -  2);
while (G__27132__i < G__27132__a.length) {G__27132__a[G__27132__i] = arguments[G__27132__i + 2]; ++G__27132__i;}
G__27131 = new cljs.core.IndexedSeq(G__27132__a,0);
}
return ___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__27131);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_.cljs$lang$maxFixedArity = 2;
_.cljs$lang$applyTo = ___3.cljs$lang$applyTo;
_.cljs$core$IFn$_invoke$arity$1 = ___1;
_.cljs$core$IFn$_invoke$arity$2 = ___2;
_.cljs$core$IFn$_invoke$arity$variadic = ___3.cljs$core$IFn$_invoke$arity$variadic;
return _;
})()
;
/**
* Returns the product of nums. (*) returns 1.
* @param {...*} var_args
*/
cljs.core._STAR_ = (function() {
var _STAR_ = null;
var _STAR___0 = (function (){
return (1);
});
var _STAR___1 = (function (x){
return x;
});
var _STAR___2 = (function (x,y){
return (x * y);
});
var _STAR___3 = (function() { 
var G__27133__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(_STAR_,(x * y),more);
};
var G__27133 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__27134__i = 0, G__27134__a = new Array(arguments.length -  2);
while (G__27134__i < G__27134__a.length) {G__27134__a[G__27134__i] = arguments[G__27134__i + 2]; ++G__27134__i;}
  more = new cljs.core.IndexedSeq(G__27134__a,0);
} 
return G__27133__delegate.call(this,x,y,more);};
G__27133.cljs$lang$maxFixedArity = 2;
G__27133.cljs$lang$applyTo = (function (arglist__27135){
var x = cljs.core.first(arglist__27135);
arglist__27135 = cljs.core.next(arglist__27135);
var y = cljs.core.first(arglist__27135);
var more = cljs.core.rest(arglist__27135);
return G__27133__delegate(x,y,more);
});
G__27133.cljs$core$IFn$_invoke$arity$variadic = G__27133__delegate;
return G__27133;
})()
;
_STAR_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 0:
return _STAR___0.call(this);
case 1:
return _STAR___1.call(this,x);
case 2:
return _STAR___2.call(this,x,y);
default:
var G__27136 = null;
if (arguments.length > 2) {
var G__27137__i = 0, G__27137__a = new Array(arguments.length -  2);
while (G__27137__i < G__27137__a.length) {G__27137__a[G__27137__i] = arguments[G__27137__i + 2]; ++G__27137__i;}
G__27136 = new cljs.core.IndexedSeq(G__27137__a,0);
}
return _STAR___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__27136);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_STAR_.cljs$lang$maxFixedArity = 2;
_STAR_.cljs$lang$applyTo = _STAR___3.cljs$lang$applyTo;
_STAR_.cljs$core$IFn$_invoke$arity$0 = _STAR___0;
_STAR_.cljs$core$IFn$_invoke$arity$1 = _STAR___1;
_STAR_.cljs$core$IFn$_invoke$arity$2 = _STAR___2;
_STAR_.cljs$core$IFn$_invoke$arity$variadic = _STAR___3.cljs$core$IFn$_invoke$arity$variadic;
return _STAR_;
})()
;
/**
* If no denominators are supplied, returns 1/numerator,
* else returns numerator divided by all of the denominators.
* @param {...*} var_args
*/
cljs.core._SLASH_ = (function() {
var _SLASH_ = null;
var _SLASH___1 = (function (x){
return _SLASH_.cljs$core$IFn$_invoke$arity$2((1),x);
});
var _SLASH___2 = (function (x,y){
return (x / y);
});
var _SLASH___3 = (function() { 
var G__27142__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(_SLASH_,_SLASH_.cljs$core$IFn$_invoke$arity$2(x,y),more);
};
var G__27142 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__27143__i = 0, G__27143__a = new Array(arguments.length -  2);
while (G__27143__i < G__27143__a.length) {G__27143__a[G__27143__i] = arguments[G__27143__i + 2]; ++G__27143__i;}
  more = new cljs.core.IndexedSeq(G__27143__a,0);
} 
return G__27142__delegate.call(this,x,y,more);};
G__27142.cljs$lang$maxFixedArity = 2;
G__27142.cljs$lang$applyTo = (function (arglist__27144){
var x = cljs.core.first(arglist__27144);
arglist__27144 = cljs.core.next(arglist__27144);
var y = cljs.core.first(arglist__27144);
var more = cljs.core.rest(arglist__27144);
return G__27142__delegate(x,y,more);
});
G__27142.cljs$core$IFn$_invoke$arity$variadic = G__27142__delegate;
return G__27142;
})()
;
_SLASH_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return _SLASH___1.call(this,x);
case 2:
return _SLASH___2.call(this,x,y);
default:
var G__27145 = null;
if (arguments.length > 2) {
var G__27146__i = 0, G__27146__a = new Array(arguments.length -  2);
while (G__27146__i < G__27146__a.length) {G__27146__a[G__27146__i] = arguments[G__27146__i + 2]; ++G__27146__i;}
G__27145 = new cljs.core.IndexedSeq(G__27146__a,0);
}
return _SLASH___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__27145);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_SLASH_.cljs$lang$maxFixedArity = 2;
_SLASH_.cljs$lang$applyTo = _SLASH___3.cljs$lang$applyTo;
_SLASH_.cljs$core$IFn$_invoke$arity$1 = _SLASH___1;
_SLASH_.cljs$core$IFn$_invoke$arity$2 = _SLASH___2;
_SLASH_.cljs$core$IFn$_invoke$arity$variadic = _SLASH___3.cljs$core$IFn$_invoke$arity$variadic;
return _SLASH_;
})()
;
/**
* Returns non-nil if nums are in monotonically increasing order,
* otherwise false.
* @param {...*} var_args
*/
cljs.core._LT_ = (function() {
var _LT_ = null;
var _LT___1 = (function (x){
return true;
});
var _LT___2 = (function (x,y){
return (x < y);
});
var _LT___3 = (function() { 
var G__27147__delegate = function (x,y,more){
while(true){
if((x < y)){
if(cljs.core.next(more)){
var G__27148 = y;
var G__27149 = cljs.core.first(more);
var G__27150 = cljs.core.next(more);
x = G__27148;
y = G__27149;
more = G__27150;
continue;
} else {
return (y < cljs.core.first(more));
}
} else {
return false;
}
break;
}
};
var G__27147 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__27151__i = 0, G__27151__a = new Array(arguments.length -  2);
while (G__27151__i < G__27151__a.length) {G__27151__a[G__27151__i] = arguments[G__27151__i + 2]; ++G__27151__i;}
  more = new cljs.core.IndexedSeq(G__27151__a,0);
} 
return G__27147__delegate.call(this,x,y,more);};
G__27147.cljs$lang$maxFixedArity = 2;
G__27147.cljs$lang$applyTo = (function (arglist__27152){
var x = cljs.core.first(arglist__27152);
arglist__27152 = cljs.core.next(arglist__27152);
var y = cljs.core.first(arglist__27152);
var more = cljs.core.rest(arglist__27152);
return G__27147__delegate(x,y,more);
});
G__27147.cljs$core$IFn$_invoke$arity$variadic = G__27147__delegate;
return G__27147;
})()
;
_LT_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return _LT___1.call(this,x);
case 2:
return _LT___2.call(this,x,y);
default:
var G__27153 = null;
if (arguments.length > 2) {
var G__27154__i = 0, G__27154__a = new Array(arguments.length -  2);
while (G__27154__i < G__27154__a.length) {G__27154__a[G__27154__i] = arguments[G__27154__i + 2]; ++G__27154__i;}
G__27153 = new cljs.core.IndexedSeq(G__27154__a,0);
}
return _LT___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__27153);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_LT_.cljs$lang$maxFixedArity = 2;
_LT_.cljs$lang$applyTo = _LT___3.cljs$lang$applyTo;
_LT_.cljs$core$IFn$_invoke$arity$1 = _LT___1;
_LT_.cljs$core$IFn$_invoke$arity$2 = _LT___2;
_LT_.cljs$core$IFn$_invoke$arity$variadic = _LT___3.cljs$core$IFn$_invoke$arity$variadic;
return _LT_;
})()
;
/**
* Returns non-nil if nums are in monotonically non-decreasing order,
* otherwise false.
* @param {...*} var_args
*/
cljs.core._LT__EQ_ = (function() {
var _LT__EQ_ = null;
var _LT__EQ___1 = (function (x){
return true;
});
var _LT__EQ___2 = (function (x,y){
return (x <= y);
});
var _LT__EQ___3 = (function() { 
var G__27155__delegate = function (x,y,more){
while(true){
if((x <= y)){
if(cljs.core.next(more)){
var G__27156 = y;
var G__27157 = cljs.core.first(more);
var G__27158 = cljs.core.next(more);
x = G__27156;
y = G__27157;
more = G__27158;
continue;
} else {
return (y <= cljs.core.first(more));
}
} else {
return false;
}
break;
}
};
var G__27155 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__27159__i = 0, G__27159__a = new Array(arguments.length -  2);
while (G__27159__i < G__27159__a.length) {G__27159__a[G__27159__i] = arguments[G__27159__i + 2]; ++G__27159__i;}
  more = new cljs.core.IndexedSeq(G__27159__a,0);
} 
return G__27155__delegate.call(this,x,y,more);};
G__27155.cljs$lang$maxFixedArity = 2;
G__27155.cljs$lang$applyTo = (function (arglist__27160){
var x = cljs.core.first(arglist__27160);
arglist__27160 = cljs.core.next(arglist__27160);
var y = cljs.core.first(arglist__27160);
var more = cljs.core.rest(arglist__27160);
return G__27155__delegate(x,y,more);
});
G__27155.cljs$core$IFn$_invoke$arity$variadic = G__27155__delegate;
return G__27155;
})()
;
_LT__EQ_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return _LT__EQ___1.call(this,x);
case 2:
return _LT__EQ___2.call(this,x,y);
default:
var G__27161 = null;
if (arguments.length > 2) {
var G__27162__i = 0, G__27162__a = new Array(arguments.length -  2);
while (G__27162__i < G__27162__a.length) {G__27162__a[G__27162__i] = arguments[G__27162__i + 2]; ++G__27162__i;}
G__27161 = new cljs.core.IndexedSeq(G__27162__a,0);
}
return _LT__EQ___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__27161);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_LT__EQ_.cljs$lang$maxFixedArity = 2;
_LT__EQ_.cljs$lang$applyTo = _LT__EQ___3.cljs$lang$applyTo;
_LT__EQ_.cljs$core$IFn$_invoke$arity$1 = _LT__EQ___1;
_LT__EQ_.cljs$core$IFn$_invoke$arity$2 = _LT__EQ___2;
_LT__EQ_.cljs$core$IFn$_invoke$arity$variadic = _LT__EQ___3.cljs$core$IFn$_invoke$arity$variadic;
return _LT__EQ_;
})()
;
/**
* Returns non-nil if nums are in monotonically decreasing order,
* otherwise false.
* @param {...*} var_args
*/
cljs.core._GT_ = (function() {
var _GT_ = null;
var _GT___1 = (function (x){
return true;
});
var _GT___2 = (function (x,y){
return (x > y);
});
var _GT___3 = (function() { 
var G__27163__delegate = function (x,y,more){
while(true){
if((x > y)){
if(cljs.core.next(more)){
var G__27164 = y;
var G__27165 = cljs.core.first(more);
var G__27166 = cljs.core.next(more);
x = G__27164;
y = G__27165;
more = G__27166;
continue;
} else {
return (y > cljs.core.first(more));
}
} else {
return false;
}
break;
}
};
var G__27163 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__27167__i = 0, G__27167__a = new Array(arguments.length -  2);
while (G__27167__i < G__27167__a.length) {G__27167__a[G__27167__i] = arguments[G__27167__i + 2]; ++G__27167__i;}
  more = new cljs.core.IndexedSeq(G__27167__a,0);
} 
return G__27163__delegate.call(this,x,y,more);};
G__27163.cljs$lang$maxFixedArity = 2;
G__27163.cljs$lang$applyTo = (function (arglist__27168){
var x = cljs.core.first(arglist__27168);
arglist__27168 = cljs.core.next(arglist__27168);
var y = cljs.core.first(arglist__27168);
var more = cljs.core.rest(arglist__27168);
return G__27163__delegate(x,y,more);
});
G__27163.cljs$core$IFn$_invoke$arity$variadic = G__27163__delegate;
return G__27163;
})()
;
_GT_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return _GT___1.call(this,x);
case 2:
return _GT___2.call(this,x,y);
default:
var G__27169 = null;
if (arguments.length > 2) {
var G__27170__i = 0, G__27170__a = new Array(arguments.length -  2);
while (G__27170__i < G__27170__a.length) {G__27170__a[G__27170__i] = arguments[G__27170__i + 2]; ++G__27170__i;}
G__27169 = new cljs.core.IndexedSeq(G__27170__a,0);
}
return _GT___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__27169);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_GT_.cljs$lang$maxFixedArity = 2;
_GT_.cljs$lang$applyTo = _GT___3.cljs$lang$applyTo;
_GT_.cljs$core$IFn$_invoke$arity$1 = _GT___1;
_GT_.cljs$core$IFn$_invoke$arity$2 = _GT___2;
_GT_.cljs$core$IFn$_invoke$arity$variadic = _GT___3.cljs$core$IFn$_invoke$arity$variadic;
return _GT_;
})()
;
/**
* Returns non-nil if nums are in monotonically non-increasing order,
* otherwise false.
* @param {...*} var_args
*/
cljs.core._GT__EQ_ = (function() {
var _GT__EQ_ = null;
var _GT__EQ___1 = (function (x){
return true;
});
var _GT__EQ___2 = (function (x,y){
return (x >= y);
});
var _GT__EQ___3 = (function() { 
var G__27171__delegate = function (x,y,more){
while(true){
if((x >= y)){
if(cljs.core.next(more)){
var G__27172 = y;
var G__27173 = cljs.core.first(more);
var G__27174 = cljs.core.next(more);
x = G__27172;
y = G__27173;
more = G__27174;
continue;
} else {
return (y >= cljs.core.first(more));
}
} else {
return false;
}
break;
}
};
var G__27171 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__27175__i = 0, G__27175__a = new Array(arguments.length -  2);
while (G__27175__i < G__27175__a.length) {G__27175__a[G__27175__i] = arguments[G__27175__i + 2]; ++G__27175__i;}
  more = new cljs.core.IndexedSeq(G__27175__a,0);
} 
return G__27171__delegate.call(this,x,y,more);};
G__27171.cljs$lang$maxFixedArity = 2;
G__27171.cljs$lang$applyTo = (function (arglist__27176){
var x = cljs.core.first(arglist__27176);
arglist__27176 = cljs.core.next(arglist__27176);
var y = cljs.core.first(arglist__27176);
var more = cljs.core.rest(arglist__27176);
return G__27171__delegate(x,y,more);
});
G__27171.cljs$core$IFn$_invoke$arity$variadic = G__27171__delegate;
return G__27171;
})()
;
_GT__EQ_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return _GT__EQ___1.call(this,x);
case 2:
return _GT__EQ___2.call(this,x,y);
default:
var G__27177 = null;
if (arguments.length > 2) {
var G__27178__i = 0, G__27178__a = new Array(arguments.length -  2);
while (G__27178__i < G__27178__a.length) {G__27178__a[G__27178__i] = arguments[G__27178__i + 2]; ++G__27178__i;}
G__27177 = new cljs.core.IndexedSeq(G__27178__a,0);
}
return _GT__EQ___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__27177);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_GT__EQ_.cljs$lang$maxFixedArity = 2;
_GT__EQ_.cljs$lang$applyTo = _GT__EQ___3.cljs$lang$applyTo;
_GT__EQ_.cljs$core$IFn$_invoke$arity$1 = _GT__EQ___1;
_GT__EQ_.cljs$core$IFn$_invoke$arity$2 = _GT__EQ___2;
_GT__EQ_.cljs$core$IFn$_invoke$arity$variadic = _GT__EQ___3.cljs$core$IFn$_invoke$arity$variadic;
return _GT__EQ_;
})()
;
/**
* Returns a number one less than num.
*/
cljs.core.dec = (function dec(x){
return (x - (1));
});
/**
* Returns the greatest of the nums.
* @param {...*} var_args
*/
cljs.core.max = (function() {
var max = null;
var max__1 = (function (x){
return x;
});
var max__2 = (function (x,y){
var x__24591__auto__ = x;
var y__24592__auto__ = y;
return ((x__24591__auto__ > y__24592__auto__) ? x__24591__auto__ : y__24592__auto__);
});
var max__3 = (function() { 
var G__27179__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(max,(function (){var x__24591__auto__ = x;
var y__24592__auto__ = y;
return ((x__24591__auto__ > y__24592__auto__) ? x__24591__auto__ : y__24592__auto__);
})(),more);
};
var G__27179 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__27180__i = 0, G__27180__a = new Array(arguments.length -  2);
while (G__27180__i < G__27180__a.length) {G__27180__a[G__27180__i] = arguments[G__27180__i + 2]; ++G__27180__i;}
  more = new cljs.core.IndexedSeq(G__27180__a,0);
} 
return G__27179__delegate.call(this,x,y,more);};
G__27179.cljs$lang$maxFixedArity = 2;
G__27179.cljs$lang$applyTo = (function (arglist__27181){
var x = cljs.core.first(arglist__27181);
arglist__27181 = cljs.core.next(arglist__27181);
var y = cljs.core.first(arglist__27181);
var more = cljs.core.rest(arglist__27181);
return G__27179__delegate(x,y,more);
});
G__27179.cljs$core$IFn$_invoke$arity$variadic = G__27179__delegate;
return G__27179;
})()
;
max = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return max__1.call(this,x);
case 2:
return max__2.call(this,x,y);
default:
var G__27182 = null;
if (arguments.length > 2) {
var G__27183__i = 0, G__27183__a = new Array(arguments.length -  2);
while (G__27183__i < G__27183__a.length) {G__27183__a[G__27183__i] = arguments[G__27183__i + 2]; ++G__27183__i;}
G__27182 = new cljs.core.IndexedSeq(G__27183__a,0);
}
return max__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__27182);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
max.cljs$lang$maxFixedArity = 2;
max.cljs$lang$applyTo = max__3.cljs$lang$applyTo;
max.cljs$core$IFn$_invoke$arity$1 = max__1;
max.cljs$core$IFn$_invoke$arity$2 = max__2;
max.cljs$core$IFn$_invoke$arity$variadic = max__3.cljs$core$IFn$_invoke$arity$variadic;
return max;
})()
;
/**
* Returns the least of the nums.
* @param {...*} var_args
*/
cljs.core.min = (function() {
var min = null;
var min__1 = (function (x){
return x;
});
var min__2 = (function (x,y){
var x__24598__auto__ = x;
var y__24599__auto__ = y;
return ((x__24598__auto__ < y__24599__auto__) ? x__24598__auto__ : y__24599__auto__);
});
var min__3 = (function() { 
var G__27184__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(min,(function (){var x__24598__auto__ = x;
var y__24599__auto__ = y;
return ((x__24598__auto__ < y__24599__auto__) ? x__24598__auto__ : y__24599__auto__);
})(),more);
};
var G__27184 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__27185__i = 0, G__27185__a = new Array(arguments.length -  2);
while (G__27185__i < G__27185__a.length) {G__27185__a[G__27185__i] = arguments[G__27185__i + 2]; ++G__27185__i;}
  more = new cljs.core.IndexedSeq(G__27185__a,0);
} 
return G__27184__delegate.call(this,x,y,more);};
G__27184.cljs$lang$maxFixedArity = 2;
G__27184.cljs$lang$applyTo = (function (arglist__27186){
var x = cljs.core.first(arglist__27186);
arglist__27186 = cljs.core.next(arglist__27186);
var y = cljs.core.first(arglist__27186);
var more = cljs.core.rest(arglist__27186);
return G__27184__delegate(x,y,more);
});
G__27184.cljs$core$IFn$_invoke$arity$variadic = G__27184__delegate;
return G__27184;
})()
;
min = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return min__1.call(this,x);
case 2:
return min__2.call(this,x,y);
default:
var G__27187 = null;
if (arguments.length > 2) {
var G__27188__i = 0, G__27188__a = new Array(arguments.length -  2);
while (G__27188__i < G__27188__a.length) {G__27188__a[G__27188__i] = arguments[G__27188__i + 2]; ++G__27188__i;}
G__27187 = new cljs.core.IndexedSeq(G__27188__a,0);
}
return min__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__27187);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
min.cljs$lang$maxFixedArity = 2;
min.cljs$lang$applyTo = min__3.cljs$lang$applyTo;
min.cljs$core$IFn$_invoke$arity$1 = min__1;
min.cljs$core$IFn$_invoke$arity$2 = min__2;
min.cljs$core$IFn$_invoke$arity$variadic = min__3.cljs$core$IFn$_invoke$arity$variadic;
return min;
})()
;
cljs.core.byte$ = (function byte$(x){
return x;
});
/**
* Coerce to char
*/
cljs.core.char$ = (function char$(x){
if(typeof x === 'number'){
return String.fromCharCode(x);
} else {
if((typeof x === 'string') && ((x.length === (1)))){
return x;
} else {
throw (new Error("Argument to char must be a character or number"));

}
}
});
cljs.core.short$ = (function short$(x){
return x;
});
cljs.core.float$ = (function float$(x){
return x;
});
cljs.core.double$ = (function double$(x){
return x;
});
cljs.core.unchecked_byte = (function unchecked_byte(x){
return x;
});
cljs.core.unchecked_char = (function unchecked_char(x){
return x;
});
cljs.core.unchecked_short = (function unchecked_short(x){
return x;
});
cljs.core.unchecked_float = (function unchecked_float(x){
return x;
});
cljs.core.unchecked_double = (function unchecked_double(x){
return x;
});
/**
* Returns the sum of nums. (+) returns 0.
* @param {...*} var_args
*/
cljs.core.unchecked_add = (function() {
var unchecked_add = null;
var unchecked_add__0 = (function (){
return (0);
});
var unchecked_add__1 = (function (x){
return x;
});
var unchecked_add__2 = (function (x,y){
return (x + y);
});
var unchecked_add__3 = (function() { 
var G__27189__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_add,(x + y),more);
};
var G__27189 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__27190__i = 0, G__27190__a = new Array(arguments.length -  2);
while (G__27190__i < G__27190__a.length) {G__27190__a[G__27190__i] = arguments[G__27190__i + 2]; ++G__27190__i;}
  more = new cljs.core.IndexedSeq(G__27190__a,0);
} 
return G__27189__delegate.call(this,x,y,more);};
G__27189.cljs$lang$maxFixedArity = 2;
G__27189.cljs$lang$applyTo = (function (arglist__27191){
var x = cljs.core.first(arglist__27191);
arglist__27191 = cljs.core.next(arglist__27191);
var y = cljs.core.first(arglist__27191);
var more = cljs.core.rest(arglist__27191);
return G__27189__delegate(x,y,more);
});
G__27189.cljs$core$IFn$_invoke$arity$variadic = G__27189__delegate;
return G__27189;
})()
;
unchecked_add = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 0:
return unchecked_add__0.call(this);
case 1:
return unchecked_add__1.call(this,x);
case 2:
return unchecked_add__2.call(this,x,y);
default:
var G__27192 = null;
if (arguments.length > 2) {
var G__27193__i = 0, G__27193__a = new Array(arguments.length -  2);
while (G__27193__i < G__27193__a.length) {G__27193__a[G__27193__i] = arguments[G__27193__i + 2]; ++G__27193__i;}
G__27192 = new cljs.core.IndexedSeq(G__27193__a,0);
}
return unchecked_add__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__27192);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
unchecked_add.cljs$lang$maxFixedArity = 2;
unchecked_add.cljs$lang$applyTo = unchecked_add__3.cljs$lang$applyTo;
unchecked_add.cljs$core$IFn$_invoke$arity$0 = unchecked_add__0;
unchecked_add.cljs$core$IFn$_invoke$arity$1 = unchecked_add__1;
unchecked_add.cljs$core$IFn$_invoke$arity$2 = unchecked_add__2;
unchecked_add.cljs$core$IFn$_invoke$arity$variadic = unchecked_add__3.cljs$core$IFn$_invoke$arity$variadic;
return unchecked_add;
})()
;
/**
* Returns the sum of nums. (+) returns 0.
* @param {...*} var_args
*/
cljs.core.unchecked_add_int = (function() {
var unchecked_add_int = null;
var unchecked_add_int__0 = (function (){
return (0);
});
var unchecked_add_int__1 = (function (x){
return x;
});
var unchecked_add_int__2 = (function (x,y){
return (x + y);
});
var unchecked_add_int__3 = (function() { 
var G__27194__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_add_int,(x + y),more);
};
var G__27194 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__27195__i = 0, G__27195__a = new Array(arguments.length -  2);
while (G__27195__i < G__27195__a.length) {G__27195__a[G__27195__i] = arguments[G__27195__i + 2]; ++G__27195__i;}
  more = new cljs.core.IndexedSeq(G__27195__a,0);
} 
return G__27194__delegate.call(this,x,y,more);};
G__27194.cljs$lang$maxFixedArity = 2;
G__27194.cljs$lang$applyTo = (function (arglist__27196){
var x = cljs.core.first(arglist__27196);
arglist__27196 = cljs.core.next(arglist__27196);
var y = cljs.core.first(arglist__27196);
var more = cljs.core.rest(arglist__27196);
return G__27194__delegate(x,y,more);
});
G__27194.cljs$core$IFn$_invoke$arity$variadic = G__27194__delegate;
return G__27194;
})()
;
unchecked_add_int = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 0:
return unchecked_add_int__0.call(this);
case 1:
return unchecked_add_int__1.call(this,x);
case 2:
return unchecked_add_int__2.call(this,x,y);
default:
var G__27197 = null;
if (arguments.length > 2) {
var G__27198__i = 0, G__27198__a = new Array(arguments.length -  2);
while (G__27198__i < G__27198__a.length) {G__27198__a[G__27198__i] = arguments[G__27198__i + 2]; ++G__27198__i;}
G__27197 = new cljs.core.IndexedSeq(G__27198__a,0);
}
return unchecked_add_int__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__27197);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
unchecked_add_int.cljs$lang$maxFixedArity = 2;
unchecked_add_int.cljs$lang$applyTo = unchecked_add_int__3.cljs$lang$applyTo;
unchecked_add_int.cljs$core$IFn$_invoke$arity$0 = unchecked_add_int__0;
unchecked_add_int.cljs$core$IFn$_invoke$arity$1 = unchecked_add_int__1;
unchecked_add_int.cljs$core$IFn$_invoke$arity$2 = unchecked_add_int__2;
unchecked_add_int.cljs$core$IFn$_invoke$arity$variadic = unchecked_add_int__3.cljs$core$IFn$_invoke$arity$variadic;
return unchecked_add_int;
})()
;
cljs.core.unchecked_dec = (function unchecked_dec(x){
return (x - (1));
});
cljs.core.unchecked_dec_int = (function unchecked_dec_int(x){
return (x - (1));
});
/**
* If no denominators are supplied, returns 1/numerator,
* else returns numerator divided by all of the denominators.
* @param {...*} var_args
*/
cljs.core.unchecked_divide_int = (function() {
var unchecked_divide_int = null;
var unchecked_divide_int__1 = (function (x){
return unchecked_divide_int.cljs$core$IFn$_invoke$arity$2((1),x);
});
var unchecked_divide_int__2 = (function (x,y){
return (x / y);
});
var unchecked_divide_int__3 = (function() { 
var G__27203__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_divide_int,unchecked_divide_int.cljs$core$IFn$_invoke$arity$2(x,y),more);
};
var G__27203 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__27204__i = 0, G__27204__a = new Array(arguments.length -  2);
while (G__27204__i < G__27204__a.length) {G__27204__a[G__27204__i] = arguments[G__27204__i + 2]; ++G__27204__i;}
  more = new cljs.core.IndexedSeq(G__27204__a,0);
} 
return G__27203__delegate.call(this,x,y,more);};
G__27203.cljs$lang$maxFixedArity = 2;
G__27203.cljs$lang$applyTo = (function (arglist__27205){
var x = cljs.core.first(arglist__27205);
arglist__27205 = cljs.core.next(arglist__27205);
var y = cljs.core.first(arglist__27205);
var more = cljs.core.rest(arglist__27205);
return G__27203__delegate(x,y,more);
});
G__27203.cljs$core$IFn$_invoke$arity$variadic = G__27203__delegate;
return G__27203;
})()
;
unchecked_divide_int = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return unchecked_divide_int__1.call(this,x);
case 2:
return unchecked_divide_int__2.call(this,x,y);
default:
var G__27206 = null;
if (arguments.length > 2) {
var G__27207__i = 0, G__27207__a = new Array(arguments.length -  2);
while (G__27207__i < G__27207__a.length) {G__27207__a[G__27207__i] = arguments[G__27207__i + 2]; ++G__27207__i;}
G__27206 = new cljs.core.IndexedSeq(G__27207__a,0);
}
return unchecked_divide_int__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__27206);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
unchecked_divide_int.cljs$lang$maxFixedArity = 2;
unchecked_divide_int.cljs$lang$applyTo = unchecked_divide_int__3.cljs$lang$applyTo;
unchecked_divide_int.cljs$core$IFn$_invoke$arity$1 = unchecked_divide_int__1;
unchecked_divide_int.cljs$core$IFn$_invoke$arity$2 = unchecked_divide_int__2;
unchecked_divide_int.cljs$core$IFn$_invoke$arity$variadic = unchecked_divide_int__3.cljs$core$IFn$_invoke$arity$variadic;
return unchecked_divide_int;
})()
;
cljs.core.unchecked_inc = (function unchecked_inc(x){
return (x + (1));
});
cljs.core.unchecked_inc_int = (function unchecked_inc_int(x){
return (x + (1));
});
/**
* Returns the product of nums. (*) returns 1.
* @param {...*} var_args
*/
cljs.core.unchecked_multiply = (function() {
var unchecked_multiply = null;
var unchecked_multiply__0 = (function (){
return (1);
});
var unchecked_multiply__1 = (function (x){
return x;
});
var unchecked_multiply__2 = (function (x,y){
return (x * y);
});
var unchecked_multiply__3 = (function() { 
var G__27208__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_multiply,(x * y),more);
};
var G__27208 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__27209__i = 0, G__27209__a = new Array(arguments.length -  2);
while (G__27209__i < G__27209__a.length) {G__27209__a[G__27209__i] = arguments[G__27209__i + 2]; ++G__27209__i;}
  more = new cljs.core.IndexedSeq(G__27209__a,0);
} 
return G__27208__delegate.call(this,x,y,more);};
G__27208.cljs$lang$maxFixedArity = 2;
G__27208.cljs$lang$applyTo = (function (arglist__27210){
var x = cljs.core.first(arglist__27210);
arglist__27210 = cljs.core.next(arglist__27210);
var y = cljs.core.first(arglist__27210);
var more = cljs.core.rest(arglist__27210);
return G__27208__delegate(x,y,more);
});
G__27208.cljs$core$IFn$_invoke$arity$variadic = G__27208__delegate;
return G__27208;
})()
;
unchecked_multiply = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 0:
return unchecked_multiply__0.call(this);
case 1:
return unchecked_multiply__1.call(this,x);
case 2:
return unchecked_multiply__2.call(this,x,y);
default:
var G__27211 = null;
if (arguments.length > 2) {
var G__27212__i = 0, G__27212__a = new Array(arguments.length -  2);
while (G__27212__i < G__27212__a.length) {G__27212__a[G__27212__i] = arguments[G__27212__i + 2]; ++G__27212__i;}
G__27211 = new cljs.core.IndexedSeq(G__27212__a,0);
}
return unchecked_multiply__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__27211);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
unchecked_multiply.cljs$lang$maxFixedArity = 2;
unchecked_multiply.cljs$lang$applyTo = unchecked_multiply__3.cljs$lang$applyTo;
unchecked_multiply.cljs$core$IFn$_invoke$arity$0 = unchecked_multiply__0;
unchecked_multiply.cljs$core$IFn$_invoke$arity$1 = unchecked_multiply__1;
unchecked_multiply.cljs$core$IFn$_invoke$arity$2 = unchecked_multiply__2;
unchecked_multiply.cljs$core$IFn$_invoke$arity$variadic = unchecked_multiply__3.cljs$core$IFn$_invoke$arity$variadic;
return unchecked_multiply;
})()
;
/**
* Returns the product of nums. (*) returns 1.
* @param {...*} var_args
*/
cljs.core.unchecked_multiply_int = (function() {
var unchecked_multiply_int = null;
var unchecked_multiply_int__0 = (function (){
return (1);
});
var unchecked_multiply_int__1 = (function (x){
return x;
});
var unchecked_multiply_int__2 = (function (x,y){
return (x * y);
});
var unchecked_multiply_int__3 = (function() { 
var G__27213__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_multiply_int,(x * y),more);
};
var G__27213 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__27214__i = 0, G__27214__a = new Array(arguments.length -  2);
while (G__27214__i < G__27214__a.length) {G__27214__a[G__27214__i] = arguments[G__27214__i + 2]; ++G__27214__i;}
  more = new cljs.core.IndexedSeq(G__27214__a,0);
} 
return G__27213__delegate.call(this,x,y,more);};
G__27213.cljs$lang$maxFixedArity = 2;
G__27213.cljs$lang$applyTo = (function (arglist__27215){
var x = cljs.core.first(arglist__27215);
arglist__27215 = cljs.core.next(arglist__27215);
var y = cljs.core.first(arglist__27215);
var more = cljs.core.rest(arglist__27215);
return G__27213__delegate(x,y,more);
});
G__27213.cljs$core$IFn$_invoke$arity$variadic = G__27213__delegate;
return G__27213;
})()
;
unchecked_multiply_int = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 0:
return unchecked_multiply_int__0.call(this);
case 1:
return unchecked_multiply_int__1.call(this,x);
case 2:
return unchecked_multiply_int__2.call(this,x,y);
default:
var G__27216 = null;
if (arguments.length > 2) {
var G__27217__i = 0, G__27217__a = new Array(arguments.length -  2);
while (G__27217__i < G__27217__a.length) {G__27217__a[G__27217__i] = arguments[G__27217__i + 2]; ++G__27217__i;}
G__27216 = new cljs.core.IndexedSeq(G__27217__a,0);
}
return unchecked_multiply_int__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__27216);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
unchecked_multiply_int.cljs$lang$maxFixedArity = 2;
unchecked_multiply_int.cljs$lang$applyTo = unchecked_multiply_int__3.cljs$lang$applyTo;
unchecked_multiply_int.cljs$core$IFn$_invoke$arity$0 = unchecked_multiply_int__0;
unchecked_multiply_int.cljs$core$IFn$_invoke$arity$1 = unchecked_multiply_int__1;
unchecked_multiply_int.cljs$core$IFn$_invoke$arity$2 = unchecked_multiply_int__2;
unchecked_multiply_int.cljs$core$IFn$_invoke$arity$variadic = unchecked_multiply_int__3.cljs$core$IFn$_invoke$arity$variadic;
return unchecked_multiply_int;
})()
;
cljs.core.unchecked_negate = (function unchecked_negate(x){
return (- x);
});
cljs.core.unchecked_negate_int = (function unchecked_negate_int(x){
return (- x);
});
cljs.core.unchecked_remainder_int = (function unchecked_remainder_int(x,n){
var G__27220 = x;
var G__27221 = n;
return (cljs.core.mod.cljs$core$IFn$_invoke$arity$2 ? cljs.core.mod.cljs$core$IFn$_invoke$arity$2(G__27220,G__27221) : cljs.core.mod.call(null,G__27220,G__27221));
});
/**
* If no ys are supplied, returns the negation of x, else subtracts
* the ys from x and returns the result.
* @param {...*} var_args
*/
cljs.core.unchecked_subtract = (function() {
var unchecked_subtract = null;
var unchecked_subtract__1 = (function (x){
return (- x);
});
var unchecked_subtract__2 = (function (x,y){
return (x - y);
});
var unchecked_subtract__3 = (function() { 
var G__27222__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_subtract,(x - y),more);
};
var G__27222 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__27223__i = 0, G__27223__a = new Array(arguments.length -  2);
while (G__27223__i < G__27223__a.length) {G__27223__a[G__27223__i] = arguments[G__27223__i + 2]; ++G__27223__i;}
  more = new cljs.core.IndexedSeq(G__27223__a,0);
} 
return G__27222__delegate.call(this,x,y,more);};
G__27222.cljs$lang$maxFixedArity = 2;
G__27222.cljs$lang$applyTo = (function (arglist__27224){
var x = cljs.core.first(arglist__27224);
arglist__27224 = cljs.core.next(arglist__27224);
var y = cljs.core.first(arglist__27224);
var more = cljs.core.rest(arglist__27224);
return G__27222__delegate(x,y,more);
});
G__27222.cljs$core$IFn$_invoke$arity$variadic = G__27222__delegate;
return G__27222;
})()
;
unchecked_subtract = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return unchecked_subtract__1.call(this,x);
case 2:
return unchecked_subtract__2.call(this,x,y);
default:
var G__27225 = null;
if (arguments.length > 2) {
var G__27226__i = 0, G__27226__a = new Array(arguments.length -  2);
while (G__27226__i < G__27226__a.length) {G__27226__a[G__27226__i] = arguments[G__27226__i + 2]; ++G__27226__i;}
G__27225 = new cljs.core.IndexedSeq(G__27226__a,0);
}
return unchecked_subtract__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__27225);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
unchecked_subtract.cljs$lang$maxFixedArity = 2;
unchecked_subtract.cljs$lang$applyTo = unchecked_subtract__3.cljs$lang$applyTo;
unchecked_subtract.cljs$core$IFn$_invoke$arity$1 = unchecked_subtract__1;
unchecked_subtract.cljs$core$IFn$_invoke$arity$2 = unchecked_subtract__2;
unchecked_subtract.cljs$core$IFn$_invoke$arity$variadic = unchecked_subtract__3.cljs$core$IFn$_invoke$arity$variadic;
return unchecked_subtract;
})()
;
/**
* If no ys are supplied, returns the negation of x, else subtracts
* the ys from x and returns the result.
* @param {...*} var_args
*/
cljs.core.unchecked_subtract_int = (function() {
var unchecked_subtract_int = null;
var unchecked_subtract_int__1 = (function (x){
return (- x);
});
var unchecked_subtract_int__2 = (function (x,y){
return (x - y);
});
var unchecked_subtract_int__3 = (function() { 
var G__27227__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_subtract_int,(x - y),more);
};
var G__27227 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__27228__i = 0, G__27228__a = new Array(arguments.length -  2);
while (G__27228__i < G__27228__a.length) {G__27228__a[G__27228__i] = arguments[G__27228__i + 2]; ++G__27228__i;}
  more = new cljs.core.IndexedSeq(G__27228__a,0);
} 
return G__27227__delegate.call(this,x,y,more);};
G__27227.cljs$lang$maxFixedArity = 2;
G__27227.cljs$lang$applyTo = (function (arglist__27229){
var x = cljs.core.first(arglist__27229);
arglist__27229 = cljs.core.next(arglist__27229);
var y = cljs.core.first(arglist__27229);
var more = cljs.core.rest(arglist__27229);
return G__27227__delegate(x,y,more);
});
G__27227.cljs$core$IFn$_invoke$arity$variadic = G__27227__delegate;
return G__27227;
})()
;
unchecked_subtract_int = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return unchecked_subtract_int__1.call(this,x);
case 2:
return unchecked_subtract_int__2.call(this,x,y);
default:
var G__27230 = null;
if (arguments.length > 2) {
var G__27231__i = 0, G__27231__a = new Array(arguments.length -  2);
while (G__27231__i < G__27231__a.length) {G__27231__a[G__27231__i] = arguments[G__27231__i + 2]; ++G__27231__i;}
G__27230 = new cljs.core.IndexedSeq(G__27231__a,0);
}
return unchecked_subtract_int__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__27230);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
unchecked_subtract_int.cljs$lang$maxFixedArity = 2;
unchecked_subtract_int.cljs$lang$applyTo = unchecked_subtract_int__3.cljs$lang$applyTo;
unchecked_subtract_int.cljs$core$IFn$_invoke$arity$1 = unchecked_subtract_int__1;
unchecked_subtract_int.cljs$core$IFn$_invoke$arity$2 = unchecked_subtract_int__2;
unchecked_subtract_int.cljs$core$IFn$_invoke$arity$variadic = unchecked_subtract_int__3.cljs$core$IFn$_invoke$arity$variadic;
return unchecked_subtract_int;
})()
;
cljs.core.fix = (function fix(q){
if((q >= (0))){
var G__27234 = q;
return (Math.floor.cljs$core$IFn$_invoke$arity$1 ? Math.floor.cljs$core$IFn$_invoke$arity$1(G__27234) : Math.floor.call(null,G__27234));
} else {
var G__27235 = q;
return (Math.ceil.cljs$core$IFn$_invoke$arity$1 ? Math.ceil.cljs$core$IFn$_invoke$arity$1(G__27235) : Math.ceil.call(null,G__27235));
}
});
/**
* Coerce to int by stripping decimal places.
*/
cljs.core.int$ = (function int$(x){
return (x | (0));
});
/**
* Coerce to int by stripping decimal places.
*/
cljs.core.unchecked_int = (function unchecked_int(x){
return cljs.core.fix(x);
});
/**
* Coerce to long by stripping decimal places. Identical to `int'.
*/
cljs.core.long$ = (function long$(x){
return cljs.core.fix(x);
});
/**
* Coerce to long by stripping decimal places. Identical to `int'.
*/
cljs.core.unchecked_long = (function unchecked_long(x){
return cljs.core.fix(x);
});
cljs.core.booleans = (function booleans(x){
return x;
});
cljs.core.bytes = (function bytes(x){
return x;
});
cljs.core.chars = (function chars(x){
return x;
});
cljs.core.shorts = (function shorts(x){
return x;
});
cljs.core.ints = (function ints(x){
return x;
});
cljs.core.floats = (function floats(x){
return x;
});
cljs.core.doubles = (function doubles(x){
return x;
});
cljs.core.longs = (function longs(x){
return x;
});
/**
* Modulus of num and div with original javascript behavior. i.e. bug for negative numbers
*/
cljs.core.js_mod = (function js_mod(n,d){
return (n % d);
});
/**
* Modulus of num and div. Truncates toward negative infinity.
*/
cljs.core.mod = (function mod(n,d){
return (((n % d) + d) % d);
});
/**
* quot[ient] of dividing numerator by denominator.
*/
cljs.core.quot = (function quot(n,d){
var rem = (n % d);
return cljs.core.fix(((n - rem) / d));
});
/**
* remainder of dividing numerator by denominator.
*/
cljs.core.rem = (function rem(n,d){
var q = cljs.core.quot(n,d);
return (n - (d * q));
});
/**
* Bitwise exclusive or
*/
cljs.core.bit_xor = (function bit_xor(x,y){
return (x ^ y);
});
/**
* Bitwise and
*/
cljs.core.bit_and = (function bit_and(x,y){
return (x & y);
});
/**
* Bitwise or
*/
cljs.core.bit_or = (function bit_or(x,y){
return (x | y);
});
/**
* Bitwise and
*/
cljs.core.bit_and_not = (function bit_and_not(x,y){
return (x & ~y);
});
/**
* Clear bit at index n
*/
cljs.core.bit_clear = (function bit_clear(x,n){
return (x & ~(1 << n));
});
/**
* Flip bit at index n
*/
cljs.core.bit_flip = (function bit_flip(x,n){
return (x ^ (1 << n));
});
/**
* Bitwise complement
*/
cljs.core.bit_not = (function bit_not(x){
return (~ x);
});
/**
* Set bit at index n
*/
cljs.core.bit_set = (function bit_set(x,n){
return (x | (1 << n));
});
/**
* Test bit at index n
*/
cljs.core.bit_test = (function bit_test(x,n){
return ((x & (1 << n)) != 0);
});
/**
* Bitwise shift left
*/
cljs.core.bit_shift_left = (function bit_shift_left(x,n){
return (x << n);
});
/**
* Bitwise shift right
*/
cljs.core.bit_shift_right = (function bit_shift_right(x,n){
return (x >> n);
});
/**
* DEPRECATED: Bitwise shift right with zero fill
*/
cljs.core.bit_shift_right_zero_fill = (function bit_shift_right_zero_fill(x,n){
return (x >>> n);
});
/**
* Bitwise shift right with zero fill
*/
cljs.core.unsigned_bit_shift_right = (function unsigned_bit_shift_right(x,n){
return (x >>> n);
});
/**
* Counts the number of bits set in n
*/
cljs.core.bit_count = (function bit_count(v){
var v__$1 = (v - ((v >> (1)) & (1431655765)));
var v__$2 = ((v__$1 & (858993459)) + ((v__$1 >> (2)) & (858993459)));
return ((((v__$2 + (v__$2 >> (4))) & (252645135)) * (16843009)) >> (24));
});
/**
* Returns non-nil if nums all have the equivalent
* value, otherwise false. Behavior on non nums is
* undefined.
* @param {...*} var_args
*/
cljs.core._EQ__EQ_ = (function() {
var _EQ__EQ_ = null;
var _EQ__EQ___1 = (function (x){
return true;
});
var _EQ__EQ___2 = (function (x,y){
return cljs.core._equiv(x,y);
});
var _EQ__EQ___3 = (function() { 
var G__27240__delegate = function (x,y,more){
while(true){
if(_EQ__EQ_.cljs$core$IFn$_invoke$arity$2(x,y)){
if(cljs.core.next(more)){
var G__27241 = y;
var G__27242 = cljs.core.first(more);
var G__27243 = cljs.core.next(more);
x = G__27241;
y = G__27242;
more = G__27243;
continue;
} else {
return _EQ__EQ_.cljs$core$IFn$_invoke$arity$2(y,cljs.core.first(more));
}
} else {
return false;
}
break;
}
};
var G__27240 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__27244__i = 0, G__27244__a = new Array(arguments.length -  2);
while (G__27244__i < G__27244__a.length) {G__27244__a[G__27244__i] = arguments[G__27244__i + 2]; ++G__27244__i;}
  more = new cljs.core.IndexedSeq(G__27244__a,0);
} 
return G__27240__delegate.call(this,x,y,more);};
G__27240.cljs$lang$maxFixedArity = 2;
G__27240.cljs$lang$applyTo = (function (arglist__27245){
var x = cljs.core.first(arglist__27245);
arglist__27245 = cljs.core.next(arglist__27245);
var y = cljs.core.first(arglist__27245);
var more = cljs.core.rest(arglist__27245);
return G__27240__delegate(x,y,more);
});
G__27240.cljs$core$IFn$_invoke$arity$variadic = G__27240__delegate;
return G__27240;
})()
;
_EQ__EQ_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return _EQ__EQ___1.call(this,x);
case 2:
return _EQ__EQ___2.call(this,x,y);
default:
var G__27246 = null;
if (arguments.length > 2) {
var G__27247__i = 0, G__27247__a = new Array(arguments.length -  2);
while (G__27247__i < G__27247__a.length) {G__27247__a[G__27247__i] = arguments[G__27247__i + 2]; ++G__27247__i;}
G__27246 = new cljs.core.IndexedSeq(G__27247__a,0);
}
return _EQ__EQ___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__27246);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_EQ__EQ_.cljs$lang$maxFixedArity = 2;
_EQ__EQ_.cljs$lang$applyTo = _EQ__EQ___3.cljs$lang$applyTo;
_EQ__EQ_.cljs$core$IFn$_invoke$arity$1 = _EQ__EQ___1;
_EQ__EQ_.cljs$core$IFn$_invoke$arity$2 = _EQ__EQ___2;
_EQ__EQ_.cljs$core$IFn$_invoke$arity$variadic = _EQ__EQ___3.cljs$core$IFn$_invoke$arity$variadic;
return _EQ__EQ_;
})()
;
/**
* Returns true if num is greater than zero, else false
*/
cljs.core.pos_QMARK_ = (function pos_QMARK_(n){
return (n > (0));
});
cljs.core.zero_QMARK_ = (function zero_QMARK_(n){
return (n === (0));
});
/**
* Returns true if num is less than zero, else false
*/
cljs.core.neg_QMARK_ = (function neg_QMARK_(x){
return (x < (0));
});
/**
* Returns the nth next of coll, (seq coll) when n is 0.
*/
cljs.core.nthnext = (function nthnext(coll,n){
var n__$1 = n;
var xs = cljs.core.seq(coll);
while(true){
if((xs) && ((n__$1 > (0)))){
var G__27248 = (n__$1 - (1));
var G__27249 = cljs.core.next(xs);
n__$1 = G__27248;
xs = G__27249;
continue;
} else {
return xs;
}
break;
}
});
/**
* With no args, returns the empty string. With one arg x, returns
* x.toString().  (str nil) returns the empty string. With more than
* one arg, returns the concatenation of the str values of the args.
* @param {...*} var_args
*/
cljs.core.str = (function() {
var str = null;
var str__0 = (function (){
return "";
});
var str__1 = (function (x){
if((x == null)){
return "";
} else {
var G__27253 = x;
return goog.string.buildString(G__27253);
}
});
var str__2 = (function() { 
var G__27254__delegate = function (x,ys){
var sb = (new goog.string.StringBuffer(str.cljs$core$IFn$_invoke$arity$1(x)));
var more = ys;
while(true){
if(cljs.core.truth_(more)){
var G__27255 = sb.append(str.cljs$core$IFn$_invoke$arity$1(cljs.core.first(more)));
var G__27256 = cljs.core.next(more);
sb = G__27255;
more = G__27256;
continue;
} else {
return sb.toString();
}
break;
}
};
var G__27254 = function (x,var_args){
var ys = null;
if (arguments.length > 1) {
var G__27257__i = 0, G__27257__a = new Array(arguments.length -  1);
while (G__27257__i < G__27257__a.length) {G__27257__a[G__27257__i] = arguments[G__27257__i + 1]; ++G__27257__i;}
  ys = new cljs.core.IndexedSeq(G__27257__a,0);
} 
return G__27254__delegate.call(this,x,ys);};
G__27254.cljs$lang$maxFixedArity = 1;
G__27254.cljs$lang$applyTo = (function (arglist__27258){
var x = cljs.core.first(arglist__27258);
var ys = cljs.core.rest(arglist__27258);
return G__27254__delegate(x,ys);
});
G__27254.cljs$core$IFn$_invoke$arity$variadic = G__27254__delegate;
return G__27254;
})()
;
str = function(x,var_args){
var ys = var_args;
switch(arguments.length){
case 0:
return str__0.call(this);
case 1:
return str__1.call(this,x);
default:
var G__27259 = null;
if (arguments.length > 1) {
var G__27260__i = 0, G__27260__a = new Array(arguments.length -  1);
while (G__27260__i < G__27260__a.length) {G__27260__a[G__27260__i] = arguments[G__27260__i + 1]; ++G__27260__i;}
G__27259 = new cljs.core.IndexedSeq(G__27260__a,0);
}
return str__2.cljs$core$IFn$_invoke$arity$variadic(x, G__27259);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
str.cljs$lang$maxFixedArity = 1;
str.cljs$lang$applyTo = str__2.cljs$lang$applyTo;
str.cljs$core$IFn$_invoke$arity$0 = str__0;
str.cljs$core$IFn$_invoke$arity$1 = str__1;
str.cljs$core$IFn$_invoke$arity$variadic = str__2.cljs$core$IFn$_invoke$arity$variadic;
return str;
})()
;
/**
* Returns the substring of s beginning at start inclusive, and ending
* at end (defaults to length of string), exclusive.
*/
cljs.core.subs = (function() {
var subs = null;
var subs__2 = (function (s,start){
return s.substring(start);
});
var subs__3 = (function (s,start,end){
return s.substring(start,end);
});
subs = function(s,start,end){
switch(arguments.length){
case 2:
return subs__2.call(this,s,start);
case 3:
return subs__3.call(this,s,start,end);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
subs.cljs$core$IFn$_invoke$arity$2 = subs__2;
subs.cljs$core$IFn$_invoke$arity$3 = subs__3;
return subs;
})()
;

/**
* Assumes x is sequential. Returns true if x equals y, otherwise
* returns false.
*/
cljs.core.equiv_sequential = (function equiv_sequential(x,y){
return cljs.core.boolean$(((cljs.core.sequential_QMARK_(y))?(((cljs.core.counted_QMARK_(x)) && (cljs.core.counted_QMARK_(y)) && (!((cljs.core.count(x) === cljs.core.count(y)))))?false:(function (){var xs = cljs.core.seq(x);
var ys = cljs.core.seq(y);
while(true){
if((xs == null)){
return (ys == null);
} else {
if((ys == null)){
return false;
} else {
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.first(xs),cljs.core.first(ys))){
var G__27261 = cljs.core.next(xs);
var G__27262 = cljs.core.next(ys);
xs = G__27261;
ys = G__27262;
continue;
} else {
return false;

}
}
}
break;
}
})()):null));
});
cljs.core.hash_coll = (function hash_coll(coll){
if(cljs.core.seq(coll)){
var res = cljs.core.hash(cljs.core.first(coll));
var s = cljs.core.next(coll);
while(true){
if((s == null)){
return res;
} else {
var G__27263 = cljs.core.hash_combine(res,cljs.core.hash(cljs.core.first(s)));
var G__27264 = cljs.core.next(s);
res = G__27263;
s = G__27264;
continue;
}
break;
}
} else {
return (0);
}
});

cljs.core.hash_imap = (function hash_imap(m){
var h = (0);
var s = cljs.core.seq(m);
while(true){
if(s){
var e = cljs.core.first(s);
var G__27269 = ((h + (cljs.core.hash((function (){var G__27267 = e;
return (cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__27267) : cljs.core.key.call(null,G__27267));
})()) ^ cljs.core.hash((function (){var G__27268 = e;
return (cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(G__27268) : cljs.core.val.call(null,G__27268));
})()))) % (4503599627370496));
var G__27270 = cljs.core.next(s);
h = G__27269;
s = G__27270;
continue;
} else {
return h;
}
break;
}
});
cljs.core.hash_iset = (function hash_iset(s){
var h = (0);
var s__$1 = cljs.core.seq(s);
while(true){
if(s__$1){
var e = cljs.core.first(s__$1);
var G__27271 = ((h + cljs.core.hash(e)) % (4503599627370496));
var G__27272 = cljs.core.next(s__$1);
h = G__27271;
s__$1 = G__27272;
continue;
} else {
return h;
}
break;
}
});


/**
* Takes a JavaScript object and a map of names to functions and
* attaches said functions as methods on the object.  Any references to
* JavaScript's implicit this (via the this-as macro) will resolve to the
* object that the function is attached.
*/
cljs.core.extend_object_BANG_ = (function extend_object_BANG_(obj,fn_map){
var seq__27283_27293 = cljs.core.seq(fn_map);
var chunk__27284_27294 = null;
var count__27285_27295 = (0);
var i__27286_27296 = (0);
while(true){
if((i__27286_27296 < count__27285_27295)){
var vec__27287_27297 = chunk__27284_27294.cljs$core$IIndexed$_nth$arity$2(null,i__27286_27296);
var key_name_27298 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__27287_27297,(0),null);
var f_27299 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__27287_27297,(1),null);
var str_name_27300 = (function (){var G__27288 = key_name_27298;
return (cljs.core.name.cljs$core$IFn$_invoke$arity$1 ? cljs.core.name.cljs$core$IFn$_invoke$arity$1(G__27288) : cljs.core.name.call(null,G__27288));
})();
(obj[str_name_27300] = f_27299);

var G__27301 = seq__27283_27293;
var G__27302 = chunk__27284_27294;
var G__27303 = count__27285_27295;
var G__27304 = (i__27286_27296 + (1));
seq__27283_27293 = G__27301;
chunk__27284_27294 = G__27302;
count__27285_27295 = G__27303;
i__27286_27296 = G__27304;
continue;
} else {
var temp__4126__auto___27305 = cljs.core.seq(seq__27283_27293);
if(temp__4126__auto___27305){
var seq__27283_27306__$1 = temp__4126__auto___27305;
if(cljs.core.chunked_seq_QMARK_(seq__27283_27306__$1)){
var c__25061__auto___27307 = (function (){var G__27289 = seq__27283_27306__$1;
return (cljs.core.chunk_first.cljs$core$IFn$_invoke$arity$1 ? cljs.core.chunk_first.cljs$core$IFn$_invoke$arity$1(G__27289) : cljs.core.chunk_first.call(null,G__27289));
})();
var G__27308 = (function (){var G__27290 = seq__27283_27306__$1;
return (cljs.core.chunk_rest.cljs$core$IFn$_invoke$arity$1 ? cljs.core.chunk_rest.cljs$core$IFn$_invoke$arity$1(G__27290) : cljs.core.chunk_rest.call(null,G__27290));
})();
var G__27309 = c__25061__auto___27307;
var G__27310 = cljs.core.count(c__25061__auto___27307);
var G__27311 = (0);
seq__27283_27293 = G__27308;
chunk__27284_27294 = G__27309;
count__27285_27295 = G__27310;
i__27286_27296 = G__27311;
continue;
} else {
var vec__27291_27312 = cljs.core.first(seq__27283_27306__$1);
var key_name_27313 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__27291_27312,(0),null);
var f_27314 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__27291_27312,(1),null);
var str_name_27315 = (function (){var G__27292 = key_name_27313;
return (cljs.core.name.cljs$core$IFn$_invoke$arity$1 ? cljs.core.name.cljs$core$IFn$_invoke$arity$1(G__27292) : cljs.core.name.call(null,G__27292));
})();
(obj[str_name_27315] = f_27314);

var G__27316 = cljs.core.next(seq__27283_27306__$1);
var G__27317 = null;
var G__27318 = (0);
var G__27319 = (0);
seq__27283_27293 = G__27316;
chunk__27284_27294 = G__27317;
count__27285_27295 = G__27318;
i__27286_27296 = G__27319;
continue;
}
} else {
}
}
break;
}

return obj;
});

/**
* @constructor
*/
cljs.core.List = (function (meta,first,rest,count,__hash){
this.meta = meta;
this.first = first;
this.rest = rest;
this.count = count;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 65937646;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.List.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.List.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.List.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.List.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.List(self__.meta,self__.first,self__.rest,self__.count,self__.__hash));
});

cljs.core.List.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.count === (1))){
return null;
} else {
return self__.rest;
}
});

cljs.core.List.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.count;
});

cljs.core.List.prototype.cljs$core$IStack$_peek$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.first;
});

cljs.core.List.prototype.cljs$core$IStack$_pop$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._rest(coll__$1);
});

cljs.core.List.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__24695__auto__ = self__.__hash;
if(!((h__24695__auto__ == null))){
return h__24695__auto__;
} else {
var h__24695__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__24695__auto____$1;

return h__24695__auto____$1;
}
});

cljs.core.List.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.List.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.List.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.List.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.List.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.first;
});

cljs.core.List.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.count === (1))){
return cljs.core.List.EMPTY;
} else {
return self__.rest;
}
});

cljs.core.List.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.List.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.List(meta__$1,self__.first,self__.rest,self__.count,self__.__hash));
});

cljs.core.List.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.List(self__.meta,o,coll__$1,(self__.count + (1)),null));
});

cljs.core.List.cljs$lang$type = true;

cljs.core.List.cljs$lang$ctorStr = "cljs.core/List";

cljs.core.List.cljs$lang$ctorPrWriter = (function (this__24861__auto__,writer__24862__auto__,opt__24863__auto__){
return cljs.core._write(writer__24862__auto__,"cljs.core/List");
});

cljs.core.__GT_List = (function __GT_List(meta,first,rest,count,__hash){
return (new cljs.core.List(meta,first,rest,count,__hash));
});

(cljs.core.List.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__25252__auto__ = this;
return cljs.core.es6_iterator(this__25252__auto__);
}));

/**
* @constructor
*/
cljs.core.EmptyList = (function (meta){
this.meta = meta;
this.cljs$lang$protocol_mask$partition0$ = 65937614;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.EmptyList.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.EmptyList.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.EmptyList.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.EmptyList.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.EmptyList(self__.meta));
});

cljs.core.EmptyList.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return null;
});

cljs.core.EmptyList.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (0);
});

cljs.core.EmptyList.prototype.cljs$core$IStack$_peek$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return null;
});

cljs.core.EmptyList.prototype.cljs$core$IStack$_pop$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
throw (new Error("Can't pop empty list"));
});

cljs.core.EmptyList.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (0);
});

cljs.core.EmptyList.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.EmptyList.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.EmptyList.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.EmptyList.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.EmptyList.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return null;
});

cljs.core.EmptyList.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.List.EMPTY;
});

cljs.core.EmptyList.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return null;
});

cljs.core.EmptyList.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.EmptyList(meta__$1));
});

cljs.core.EmptyList.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.List(self__.meta,o,null,(1),null));
});

cljs.core.EmptyList.cljs$lang$type = true;

cljs.core.EmptyList.cljs$lang$ctorStr = "cljs.core/EmptyList";

cljs.core.EmptyList.cljs$lang$ctorPrWriter = (function (this__24861__auto__,writer__24862__auto__,opt__24863__auto__){
return cljs.core._write(writer__24862__auto__,"cljs.core/EmptyList");
});

cljs.core.__GT_EmptyList = (function __GT_EmptyList(meta){
return (new cljs.core.EmptyList(meta));
});

cljs.core.List.EMPTY = (new cljs.core.EmptyList(null));
(cljs.core.EmptyList.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__25252__auto__ = this;
return cljs.core.es6_iterator(this__25252__auto__);
}));
cljs.core.reversible_QMARK_ = (function reversible_QMARK_(coll){
var G__27321 = coll;
if(G__27321){
var bit__24955__auto__ = (G__27321.cljs$lang$protocol_mask$partition0$ & (134217728));
if((bit__24955__auto__) || (G__27321.cljs$core$IReversible$)){
return true;
} else {
if((!G__27321.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IReversible,G__27321);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IReversible,G__27321);
}
});
cljs.core.rseq = (function rseq(coll){
return cljs.core._rseq(coll);
});
/**
* Returns a seq of the items in coll in reverse order. Not lazy.
*/
cljs.core.reverse = (function reverse(coll){
if(cljs.core.reversible_QMARK_(coll)){
return cljs.core.rseq(coll);
} else {
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.conj,cljs.core.List.EMPTY,coll);
}
});
/**
* @param {...*} var_args
*/
cljs.core.list = (function() { 
var list__delegate = function (xs){
var arr = ((((xs instanceof cljs.core.IndexedSeq)) && ((xs.i === (0))))?xs.arr:(function (){var arr = [];
var xs__$1 = xs;
while(true){
if(!((xs__$1 == null))){
arr.push(xs__$1.cljs$core$ISeq$_first$arity$1(null));

var G__27322 = xs__$1.cljs$core$INext$_next$arity$1(null);
xs__$1 = G__27322;
continue;
} else {
return arr;
}
break;
}
})());
var i = arr.length;
var r = cljs.core.List.EMPTY;
while(true){
if((i > (0))){
var G__27323 = (i - (1));
var G__27324 = r.cljs$core$ICollection$_conj$arity$2(null,(arr[(i - (1))]));
i = G__27323;
r = G__27324;
continue;
} else {
return r;
}
break;
}
};
var list = function (var_args){
var xs = null;
if (arguments.length > 0) {
var G__27325__i = 0, G__27325__a = new Array(arguments.length -  0);
while (G__27325__i < G__27325__a.length) {G__27325__a[G__27325__i] = arguments[G__27325__i + 0]; ++G__27325__i;}
  xs = new cljs.core.IndexedSeq(G__27325__a,0);
} 
return list__delegate.call(this,xs);};
list.cljs$lang$maxFixedArity = 0;
list.cljs$lang$applyTo = (function (arglist__27326){
var xs = cljs.core.seq(arglist__27326);
return list__delegate(xs);
});
list.cljs$core$IFn$_invoke$arity$variadic = list__delegate;
return list;
})()
;

/**
* @constructor
*/
cljs.core.Cons = (function (meta,first,rest,__hash){
this.meta = meta;
this.first = first;
this.rest = rest;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 65929452;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.Cons.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.Cons.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.Cons.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.Cons.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.Cons(self__.meta,self__.first,self__.rest,self__.__hash));
});

cljs.core.Cons.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.rest == null)){
return null;
} else {
return cljs.core.seq(self__.rest);
}
});

cljs.core.Cons.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__24695__auto__ = self__.__hash;
if(!((h__24695__auto__ == null))){
return h__24695__auto__;
} else {
var h__24695__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__24695__auto____$1;

return h__24695__auto____$1;
}
});

cljs.core.Cons.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.Cons.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.Cons.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.Cons.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.Cons.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.first;
});

cljs.core.Cons.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.rest == null)){
return cljs.core.List.EMPTY;
} else {
return self__.rest;
}
});

cljs.core.Cons.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.Cons.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.Cons(meta__$1,self__.first,self__.rest,self__.__hash));
});

cljs.core.Cons.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.Cons(null,o,coll__$1,self__.__hash));
});

cljs.core.Cons.cljs$lang$type = true;

cljs.core.Cons.cljs$lang$ctorStr = "cljs.core/Cons";

cljs.core.Cons.cljs$lang$ctorPrWriter = (function (this__24861__auto__,writer__24862__auto__,opt__24863__auto__){
return cljs.core._write(writer__24862__auto__,"cljs.core/Cons");
});

cljs.core.__GT_Cons = (function __GT_Cons(meta,first,rest,__hash){
return (new cljs.core.Cons(meta,first,rest,__hash));
});

(cljs.core.Cons.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__25252__auto__ = this;
return cljs.core.es6_iterator(this__25252__auto__);
}));
/**
* Returns a new seq where x is the first element and seq is the rest.
*/
cljs.core.cons = (function cons(x,coll){
if((function (){var or__24274__auto__ = (coll == null);
if(or__24274__auto__){
return or__24274__auto__;
} else {
var G__27330 = coll;
if(G__27330){
var bit__24948__auto__ = (G__27330.cljs$lang$protocol_mask$partition0$ & (64));
if((bit__24948__auto__) || (G__27330.cljs$core$ISeq$)){
return true;
} else {
return false;
}
} else {
return false;
}
}
})()){
return (new cljs.core.Cons(null,x,coll,null));
} else {
return (new cljs.core.Cons(null,x,cljs.core.seq(coll),null));
}
});
cljs.core.list_QMARK_ = (function list_QMARK_(x){
var G__27332 = x;
if(G__27332){
var bit__24955__auto__ = (G__27332.cljs$lang$protocol_mask$partition0$ & (33554432));
if((bit__24955__auto__) || (G__27332.cljs$core$IList$)){
return true;
} else {
if((!G__27332.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IList,G__27332);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IList,G__27332);
}
});
cljs.core.hash_keyword = (function hash_keyword(k){
return ((cljs.core.hash_symbol(k) + (2654435769)) | (0));
});
cljs.core.compare_keywords = (function compare_keywords(a,b){
if((a.fqn === b.fqn)){
return (0);
} else {
if(cljs.core.truth_((function (){var and__24262__auto__ = cljs.core.not(a.ns);
if(and__24262__auto__){
return b.ns;
} else {
return and__24262__auto__;
}
})())){
return (-1);
} else {
if(cljs.core.truth_(a.ns)){
if(cljs.core.not(b.ns)){
return (1);
} else {
var nsc = (function (){var G__27339 = a.ns;
var G__27340 = b.ns;
return goog.array.defaultCompare(G__27339,G__27340);
})();
if(((0) === nsc)){
var G__27341 = a.name;
var G__27342 = b.name;
return goog.array.defaultCompare(G__27341,G__27342);
} else {
return nsc;
}
}
} else {
var G__27343 = a.name;
var G__27344 = b.name;
return goog.array.defaultCompare(G__27343,G__27344);

}
}
}
});

/**
* @constructor
*/
cljs.core.Keyword = (function (ns,name,fqn,_hash){
this.ns = ns;
this.name = name;
this.fqn = fqn;
this._hash = _hash;
this.cljs$lang$protocol_mask$partition0$ = 2153775105;
this.cljs$lang$protocol_mask$partition1$ = 4096;
})
cljs.core.Keyword.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (o,writer,_){
var self__ = this;
var o__$1 = this;
return cljs.core._write(writer,[cljs.core.str(":"),cljs.core.str(self__.fqn)].join(''));
});

cljs.core.Keyword.prototype.cljs$core$INamed$_name$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.name;
});

cljs.core.Keyword.prototype.cljs$core$INamed$_namespace$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.ns;
});

cljs.core.Keyword.prototype.cljs$core$IHash$_hash$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
var h__24695__auto__ = self__._hash;
if(!((h__24695__auto__ == null))){
return h__24695__auto__;
} else {
var h__24695__auto____$1 = cljs.core.hash_keyword(this$__$1);
self__._hash = h__24695__auto____$1;

return h__24695__auto____$1;
}
});

cljs.core.Keyword.prototype.call = (function() {
var G__27346 = null;
var G__27346__2 = (function (self__,coll){
var self__ = this;
var self____$1 = this;
var kw = self____$1;
return cljs.core.get.cljs$core$IFn$_invoke$arity$2(coll,kw);
});
var G__27346__3 = (function (self__,coll,not_found){
var self__ = this;
var self____$1 = this;
var kw = self____$1;
return cljs.core.get.cljs$core$IFn$_invoke$arity$3(coll,kw,not_found);
});
G__27346 = function(self__,coll,not_found){
switch(arguments.length){
case 2:
return G__27346__2.call(this,self__,coll);
case 3:
return G__27346__3.call(this,self__,coll,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__27346.cljs$core$IFn$_invoke$arity$2 = G__27346__2;
G__27346.cljs$core$IFn$_invoke$arity$3 = G__27346__3;
return G__27346;
})()
;

cljs.core.Keyword.prototype.apply = (function (self__,args27345){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args27345)));
});

cljs.core.Keyword.prototype.cljs$core$IFn$_invoke$arity$1 = (function (coll){
var self__ = this;
var kw = this;
return cljs.core.get.cljs$core$IFn$_invoke$arity$2(coll,kw);
});

cljs.core.Keyword.prototype.cljs$core$IFn$_invoke$arity$2 = (function (coll,not_found){
var self__ = this;
var kw = this;
return cljs.core.get.cljs$core$IFn$_invoke$arity$3(coll,kw,not_found);
});

cljs.core.Keyword.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (_,other){
var self__ = this;
var ___$1 = this;
if((other instanceof cljs.core.Keyword)){
return (self__.fqn === other.fqn);
} else {
return false;
}
});

cljs.core.Keyword.prototype.toString = (function (){
var self__ = this;
var _ = this;
return [cljs.core.str(":"),cljs.core.str(self__.fqn)].join('');
});

cljs.core.Keyword.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.Keyword.cljs$lang$type = true;

cljs.core.Keyword.cljs$lang$ctorStr = "cljs.core/Keyword";

cljs.core.Keyword.cljs$lang$ctorPrWriter = (function (this__24861__auto__,writer__24862__auto__,opt__24863__auto__){
return cljs.core._write(writer__24862__auto__,"cljs.core/Keyword");
});

cljs.core.__GT_Keyword = (function __GT_Keyword(ns,name,fqn,_hash){
return (new cljs.core.Keyword(ns,name,fqn,_hash));
});

cljs.core.keyword_QMARK_ = (function keyword_QMARK_(x){
return (x instanceof cljs.core.Keyword);
});
cljs.core.keyword_identical_QMARK_ = (function keyword_identical_QMARK_(x,y){
if((x === y)){
return true;
} else {
if(((x instanceof cljs.core.Keyword)) && ((y instanceof cljs.core.Keyword))){
return (x.fqn === y.fqn);
} else {
return false;
}
}
});
/**
* Returns the namespace String of a symbol or keyword, or nil if not present.
*/
cljs.core.namespace = (function namespace(x){
if((function (){var G__27348 = x;
if(G__27348){
var bit__24948__auto__ = (G__27348.cljs$lang$protocol_mask$partition1$ & (4096));
if((bit__24948__auto__) || (G__27348.cljs$core$INamed$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return x.cljs$core$INamed$_namespace$arity$1(null);
} else {
throw (new Error([cljs.core.str("Doesn't support namespace: "),cljs.core.str(x)].join('')));
}
});
/**
* Returns a Keyword with the given namespace and name.  Do not use :
* in the keyword strings, it will be added automatically.
*/
cljs.core.keyword = (function() {
var keyword = null;
var keyword__1 = (function (name){
if((name instanceof cljs.core.Keyword)){
return name;
} else {
if((name instanceof cljs.core.Symbol)){
return (new cljs.core.Keyword(cljs.core.namespace(name),(function (){var G__27350 = name;
return (cljs.core.name.cljs$core$IFn$_invoke$arity$1 ? cljs.core.name.cljs$core$IFn$_invoke$arity$1(G__27350) : cljs.core.name.call(null,G__27350));
})(),name.str,null));
} else {
if(typeof name === 'string'){
var parts = name.split("/");
if((parts.length === (2))){
return (new cljs.core.Keyword((parts[(0)]),(parts[(1)]),name,null));
} else {
return (new cljs.core.Keyword(null,(parts[(0)]),name,null));
}
} else {
return null;
}
}
}
});
var keyword__2 = (function (ns,name){
return (new cljs.core.Keyword(ns,name,[cljs.core.str((cljs.core.truth_(ns)?[cljs.core.str(ns),cljs.core.str("/")].join(''):null)),cljs.core.str(name)].join(''),null));
});
keyword = function(ns,name){
switch(arguments.length){
case 1:
return keyword__1.call(this,ns);
case 2:
return keyword__2.call(this,ns,name);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
keyword.cljs$core$IFn$_invoke$arity$1 = keyword__1;
keyword.cljs$core$IFn$_invoke$arity$2 = keyword__2;
return keyword;
})()
;

/**
* @constructor
*/
cljs.core.LazySeq = (function (meta,fn,s,__hash){
this.meta = meta;
this.fn = fn;
this.s = s;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32374988;
})
cljs.core.LazySeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.LazySeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.LazySeq.prototype.sval = (function (){
var self__ = this;
var coll = this;
if((self__.fn == null)){
return self__.s;
} else {
self__.s = (function (){return (self__.fn.cljs$core$IFn$_invoke$arity$0 ? self__.fn.cljs$core$IFn$_invoke$arity$0() : self__.fn.call(null));
})();

self__.fn = null;

return self__.s;
}
});

cljs.core.LazySeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.LazySeq.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
cljs.core._seq(coll__$1);

if((self__.s == null)){
return null;
} else {
return cljs.core.next(self__.s);
}
});

cljs.core.LazySeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__24695__auto__ = self__.__hash;
if(!((h__24695__auto__ == null))){
return h__24695__auto__;
} else {
var h__24695__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__24695__auto____$1;

return h__24695__auto____$1;
}
});

cljs.core.LazySeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.LazySeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.LazySeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.LazySeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.LazySeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
cljs.core._seq(coll__$1);

if((self__.s == null)){
return null;
} else {
return cljs.core.first(self__.s);
}
});

cljs.core.LazySeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
cljs.core._seq(coll__$1);

if(!((self__.s == null))){
return cljs.core.rest(self__.s);
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.LazySeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
coll__$1.sval();

if((self__.s == null)){
return null;
} else {
var ls = self__.s;
while(true){
if((ls instanceof cljs.core.LazySeq)){
var G__27351 = ls.sval();
ls = G__27351;
continue;
} else {
self__.s = ls;

return cljs.core.seq(self__.s);
}
break;
}
}
});

cljs.core.LazySeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.LazySeq(meta__$1,self__.fn,self__.s,self__.__hash));
});

cljs.core.LazySeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.LazySeq.cljs$lang$type = true;

cljs.core.LazySeq.cljs$lang$ctorStr = "cljs.core/LazySeq";

cljs.core.LazySeq.cljs$lang$ctorPrWriter = (function (this__24861__auto__,writer__24862__auto__,opt__24863__auto__){
return cljs.core._write(writer__24862__auto__,"cljs.core/LazySeq");
});

cljs.core.__GT_LazySeq = (function __GT_LazySeq(meta,fn,s,__hash){
return (new cljs.core.LazySeq(meta,fn,s,__hash));
});

(cljs.core.LazySeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__25252__auto__ = this;
return cljs.core.es6_iterator(this__25252__auto__);
}));

/**
* @constructor
*/
cljs.core.ChunkBuffer = (function (buf,end){
this.buf = buf;
this.end = end;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 2;
})
cljs.core.ChunkBuffer.prototype.cljs$core$ICounted$_count$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.end;
});

cljs.core.ChunkBuffer.prototype.add = (function (o){
var self__ = this;
var _ = this;
(self__.buf[self__.end] = o);

return self__.end = (self__.end + (1));
});

cljs.core.ChunkBuffer.prototype.chunk = (function (o){
var self__ = this;
var _ = this;
var ret = (new cljs.core.ArrayChunk(self__.buf,(0),self__.end));
self__.buf = null;

return ret;
});

cljs.core.ChunkBuffer.cljs$lang$type = true;

cljs.core.ChunkBuffer.cljs$lang$ctorStr = "cljs.core/ChunkBuffer";

cljs.core.ChunkBuffer.cljs$lang$ctorPrWriter = (function (this__24861__auto__,writer__24862__auto__,opt__24863__auto__){
return cljs.core._write(writer__24862__auto__,"cljs.core/ChunkBuffer");
});

cljs.core.__GT_ChunkBuffer = (function __GT_ChunkBuffer(buf,end){
return (new cljs.core.ChunkBuffer(buf,end));
});

cljs.core.chunk_buffer = (function chunk_buffer(capacity){
return (new cljs.core.ChunkBuffer((new Array(capacity)),(0)));
});

/**
* @constructor
*/
cljs.core.ArrayChunk = (function (arr,off,end){
this.arr = arr;
this.off = off;
this.end = end;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 524306;
})
cljs.core.ArrayChunk.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4(self__.arr,f,(self__.arr[self__.off]),(self__.off + (1)));
});

cljs.core.ArrayChunk.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4(self__.arr,f,start,self__.off);
});

cljs.core.ArrayChunk.prototype.cljs$core$IChunk$ = true;

cljs.core.ArrayChunk.prototype.cljs$core$IChunk$_drop_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.off === self__.end)){
throw (new Error("-drop-first of empty chunk"));
} else {
return (new cljs.core.ArrayChunk(self__.arr,(self__.off + (1)),self__.end));
}
});

cljs.core.ArrayChunk.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (coll,i){
var self__ = this;
var coll__$1 = this;
return (self__.arr[(self__.off + i)]);
});

cljs.core.ArrayChunk.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (coll,i,not_found){
var self__ = this;
var coll__$1 = this;
if(((i >= (0))) && ((i < (self__.end - self__.off)))){
return (self__.arr[(self__.off + i)]);
} else {
return not_found;
}
});

cljs.core.ArrayChunk.prototype.cljs$core$ICounted$_count$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (self__.end - self__.off);
});

cljs.core.ArrayChunk.cljs$lang$type = true;

cljs.core.ArrayChunk.cljs$lang$ctorStr = "cljs.core/ArrayChunk";

cljs.core.ArrayChunk.cljs$lang$ctorPrWriter = (function (this__24861__auto__,writer__24862__auto__,opt__24863__auto__){
return cljs.core._write(writer__24862__auto__,"cljs.core/ArrayChunk");
});

cljs.core.__GT_ArrayChunk = (function __GT_ArrayChunk(arr,off,end){
return (new cljs.core.ArrayChunk(arr,off,end));
});

cljs.core.array_chunk = (function() {
var array_chunk = null;
var array_chunk__1 = (function (arr){
return (new cljs.core.ArrayChunk(arr,(0),arr.length));
});
var array_chunk__2 = (function (arr,off){
return (new cljs.core.ArrayChunk(arr,off,arr.length));
});
var array_chunk__3 = (function (arr,off,end){
return (new cljs.core.ArrayChunk(arr,off,end));
});
array_chunk = function(arr,off,end){
switch(arguments.length){
case 1:
return array_chunk__1.call(this,arr);
case 2:
return array_chunk__2.call(this,arr,off);
case 3:
return array_chunk__3.call(this,arr,off,end);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
array_chunk.cljs$core$IFn$_invoke$arity$1 = array_chunk__1;
array_chunk.cljs$core$IFn$_invoke$arity$2 = array_chunk__2;
array_chunk.cljs$core$IFn$_invoke$arity$3 = array_chunk__3;
return array_chunk;
})()
;

/**
* @constructor
*/
cljs.core.ChunkedCons = (function (chunk,more,meta,__hash){
this.chunk = chunk;
this.more = more;
this.meta = meta;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 31850732;
this.cljs$lang$protocol_mask$partition1$ = 1536;
})
cljs.core.ChunkedCons.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.ChunkedCons.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.ChunkedCons.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.ChunkedCons.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((cljs.core._count(self__.chunk) > (1))){
return (new cljs.core.ChunkedCons(cljs.core._drop_first(self__.chunk),self__.more,self__.meta,null));
} else {
var more__$1 = cljs.core._seq(self__.more);
if((more__$1 == null)){
return null;
} else {
return more__$1;
}
}
});

cljs.core.ChunkedCons.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__24695__auto__ = self__.__hash;
if(!((h__24695__auto__ == null))){
return h__24695__auto__;
} else {
var h__24695__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__24695__auto____$1;

return h__24695__auto____$1;
}
});

cljs.core.ChunkedCons.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.ChunkedCons.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.ChunkedCons.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.chunk,(0));
});

cljs.core.ChunkedCons.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((cljs.core._count(self__.chunk) > (1))){
return (new cljs.core.ChunkedCons(cljs.core._drop_first(self__.chunk),self__.more,self__.meta,null));
} else {
if((self__.more == null)){
return cljs.core.List.EMPTY;
} else {
return self__.more;
}
}
});

cljs.core.ChunkedCons.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.ChunkedCons.prototype.cljs$core$IChunkedSeq$_chunked_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.chunk;
});

cljs.core.ChunkedCons.prototype.cljs$core$IChunkedSeq$_chunked_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.more == null)){
return cljs.core.List.EMPTY;
} else {
return self__.more;
}
});

cljs.core.ChunkedCons.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,m){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.ChunkedCons(self__.chunk,self__.more,m,self__.__hash));
});

cljs.core.ChunkedCons.prototype.cljs$core$ICollection$_conj$arity$2 = (function (this$,o){
var self__ = this;
var this$__$1 = this;
return cljs.core.cons(o,this$__$1);
});

cljs.core.ChunkedCons.prototype.cljs$core$IChunkedNext$_chunked_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.more == null)){
return null;
} else {
return self__.more;
}
});

cljs.core.ChunkedCons.cljs$lang$type = true;

cljs.core.ChunkedCons.cljs$lang$ctorStr = "cljs.core/ChunkedCons";

cljs.core.ChunkedCons.cljs$lang$ctorPrWriter = (function (this__24861__auto__,writer__24862__auto__,opt__24863__auto__){
return cljs.core._write(writer__24862__auto__,"cljs.core/ChunkedCons");
});

cljs.core.__GT_ChunkedCons = (function __GT_ChunkedCons(chunk,more,meta,__hash){
return (new cljs.core.ChunkedCons(chunk,more,meta,__hash));
});

(cljs.core.ChunkedCons.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__25252__auto__ = this;
return cljs.core.es6_iterator(this__25252__auto__);
}));
cljs.core.chunk_cons = (function chunk_cons(chunk,rest){
if((cljs.core._count(chunk) === (0))){
return rest;
} else {
return (new cljs.core.ChunkedCons(chunk,rest,null,null));
}
});
cljs.core.chunk_append = (function chunk_append(b,x){
return b.add(x);
});
cljs.core.chunk = (function chunk(b){
return b.chunk();
});
cljs.core.chunk_first = (function chunk_first(s){
return cljs.core._chunked_first(s);
});
cljs.core.chunk_rest = (function chunk_rest(s){
return cljs.core._chunked_rest(s);
});
cljs.core.chunk_next = (function chunk_next(s){
if((function (){var G__27353 = s;
if(G__27353){
var bit__24948__auto__ = (G__27353.cljs$lang$protocol_mask$partition1$ & (1024));
if((bit__24948__auto__) || (G__27353.cljs$core$IChunkedNext$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return cljs.core._chunked_next(s);
} else {
return cljs.core.seq(cljs.core._chunked_rest(s));
}
});
/**
* Naive impl of to-array as a start.
*/
cljs.core.to_array = (function to_array(s){
var ary = [];
var s__$1 = s;
while(true){
if(cljs.core.seq(s__$1)){
ary.push(cljs.core.first(s__$1));

var G__27354 = cljs.core.next(s__$1);
s__$1 = G__27354;
continue;
} else {
return ary;
}
break;
}
});
/**
* Returns a (potentially-ragged) 2-dimensional array
* containing the contents of coll.
*/
cljs.core.to_array_2d = (function to_array_2d(coll){
var ret = (new Array(cljs.core.count(coll)));
var i_27355 = (0);
var xs_27356 = cljs.core.seq(coll);
while(true){
if(xs_27356){
(ret[i_27355] = cljs.core.to_array(cljs.core.first(xs_27356)));

var G__27357 = (i_27355 + (1));
var G__27358 = cljs.core.next(xs_27356);
i_27355 = G__27357;
xs_27356 = G__27358;
continue;
} else {
}
break;
}

return ret;
});
cljs.core.int_array = (function() {
var int_array = null;
var int_array__1 = (function (size_or_seq){
if(typeof size_or_seq === 'number'){
return int_array.cljs$core$IFn$_invoke$arity$2(size_or_seq,null);
} else {
return cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(size_or_seq);
}
});
var int_array__2 = (function (size,init_val_or_seq){
var a = (new Array(size));
if(cljs.core.seq_QMARK_(init_val_or_seq)){
var s = cljs.core.seq(init_val_or_seq);
var i = (0);
var s__$1 = s;
while(true){
if((s__$1) && ((i < size))){
(a[i] = cljs.core.first(s__$1));

var G__27361 = (i + (1));
var G__27362 = cljs.core.next(s__$1);
i = G__27361;
s__$1 = G__27362;
continue;
} else {
return a;
}
break;
}
} else {
var n__25161__auto___27363 = size;
var i_27364 = (0);
while(true){
if((i_27364 < n__25161__auto___27363)){
(a[i_27364] = init_val_or_seq);

var G__27365 = (i_27364 + (1));
i_27364 = G__27365;
continue;
} else {
}
break;
}

return a;
}
});
int_array = function(size,init_val_or_seq){
switch(arguments.length){
case 1:
return int_array__1.call(this,size);
case 2:
return int_array__2.call(this,size,init_val_or_seq);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
int_array.cljs$core$IFn$_invoke$arity$1 = int_array__1;
int_array.cljs$core$IFn$_invoke$arity$2 = int_array__2;
return int_array;
})()
;
cljs.core.long_array = (function() {
var long_array = null;
var long_array__1 = (function (size_or_seq){
if(typeof size_or_seq === 'number'){
return long_array.cljs$core$IFn$_invoke$arity$2(size_or_seq,null);
} else {
return cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(size_or_seq);
}
});
var long_array__2 = (function (size,init_val_or_seq){
var a = (new Array(size));
if(cljs.core.seq_QMARK_(init_val_or_seq)){
var s = cljs.core.seq(init_val_or_seq);
var i = (0);
var s__$1 = s;
while(true){
if((s__$1) && ((i < size))){
(a[i] = cljs.core.first(s__$1));

var G__27368 = (i + (1));
var G__27369 = cljs.core.next(s__$1);
i = G__27368;
s__$1 = G__27369;
continue;
} else {
return a;
}
break;
}
} else {
var n__25161__auto___27370 = size;
var i_27371 = (0);
while(true){
if((i_27371 < n__25161__auto___27370)){
(a[i_27371] = init_val_or_seq);

var G__27372 = (i_27371 + (1));
i_27371 = G__27372;
continue;
} else {
}
break;
}

return a;
}
});
long_array = function(size,init_val_or_seq){
switch(arguments.length){
case 1:
return long_array__1.call(this,size);
case 2:
return long_array__2.call(this,size,init_val_or_seq);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
long_array.cljs$core$IFn$_invoke$arity$1 = long_array__1;
long_array.cljs$core$IFn$_invoke$arity$2 = long_array__2;
return long_array;
})()
;
cljs.core.double_array = (function() {
var double_array = null;
var double_array__1 = (function (size_or_seq){
if(typeof size_or_seq === 'number'){
return double_array.cljs$core$IFn$_invoke$arity$2(size_or_seq,null);
} else {
return cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(size_or_seq);
}
});
var double_array__2 = (function (size,init_val_or_seq){
var a = (new Array(size));
if(cljs.core.seq_QMARK_(init_val_or_seq)){
var s = cljs.core.seq(init_val_or_seq);
var i = (0);
var s__$1 = s;
while(true){
if((s__$1) && ((i < size))){
(a[i] = cljs.core.first(s__$1));

var G__27375 = (i + (1));
var G__27376 = cljs.core.next(s__$1);
i = G__27375;
s__$1 = G__27376;
continue;
} else {
return a;
}
break;
}
} else {
var n__25161__auto___27377 = size;
var i_27378 = (0);
while(true){
if((i_27378 < n__25161__auto___27377)){
(a[i_27378] = init_val_or_seq);

var G__27379 = (i_27378 + (1));
i_27378 = G__27379;
continue;
} else {
}
break;
}

return a;
}
});
double_array = function(size,init_val_or_seq){
switch(arguments.length){
case 1:
return double_array__1.call(this,size);
case 2:
return double_array__2.call(this,size,init_val_or_seq);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
double_array.cljs$core$IFn$_invoke$arity$1 = double_array__1;
double_array.cljs$core$IFn$_invoke$arity$2 = double_array__2;
return double_array;
})()
;
cljs.core.object_array = (function() {
var object_array = null;
var object_array__1 = (function (size_or_seq){
if(typeof size_or_seq === 'number'){
return object_array.cljs$core$IFn$_invoke$arity$2(size_or_seq,null);
} else {
return cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(size_or_seq);
}
});
var object_array__2 = (function (size,init_val_or_seq){
var a = (new Array(size));
if(cljs.core.seq_QMARK_(init_val_or_seq)){
var s = cljs.core.seq(init_val_or_seq);
var i = (0);
var s__$1 = s;
while(true){
if((s__$1) && ((i < size))){
(a[i] = cljs.core.first(s__$1));

var G__27382 = (i + (1));
var G__27383 = cljs.core.next(s__$1);
i = G__27382;
s__$1 = G__27383;
continue;
} else {
return a;
}
break;
}
} else {
var n__25161__auto___27384 = size;
var i_27385 = (0);
while(true){
if((i_27385 < n__25161__auto___27384)){
(a[i_27385] = init_val_or_seq);

var G__27386 = (i_27385 + (1));
i_27385 = G__27386;
continue;
} else {
}
break;
}

return a;
}
});
object_array = function(size,init_val_or_seq){
switch(arguments.length){
case 1:
return object_array__1.call(this,size);
case 2:
return object_array__2.call(this,size,init_val_or_seq);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
object_array.cljs$core$IFn$_invoke$arity$1 = object_array__1;
object_array.cljs$core$IFn$_invoke$arity$2 = object_array__2;
return object_array;
})()
;
cljs.core.bounded_count = (function bounded_count(s,n){
if(cljs.core.counted_QMARK_(s)){
return cljs.core.count(s);
} else {
var s__$1 = s;
var i = n;
var sum = (0);
while(true){
if(((i > (0))) && (cljs.core.seq(s__$1))){
var G__27387 = cljs.core.next(s__$1);
var G__27388 = (i - (1));
var G__27389 = (sum + (1));
s__$1 = G__27387;
i = G__27388;
sum = G__27389;
continue;
} else {
return sum;
}
break;
}
}
});
cljs.core.spread = (function spread(arglist){
if((arglist == null)){
return null;
} else {
if((cljs.core.next(arglist) == null)){
return cljs.core.seq(cljs.core.first(arglist));
} else {
return cljs.core.cons(cljs.core.first(arglist),spread(cljs.core.next(arglist)));

}
}
});
/**
* Returns a lazy seq representing the concatenation of the elements in the supplied colls.
* @param {...*} var_args
*/
cljs.core.concat = (function() {
var concat = null;
var concat__0 = (function (){
return (new cljs.core.LazySeq(null,(function (){
return null;
}),null,null));
});
var concat__1 = (function (x){
return (new cljs.core.LazySeq(null,(function (){
return x;
}),null,null));
});
var concat__2 = (function (x,y){
return (new cljs.core.LazySeq(null,(function (){
var s = cljs.core.seq(x);
if(s){
if(cljs.core.chunked_seq_QMARK_(s)){
return cljs.core.chunk_cons(cljs.core.chunk_first(s),concat.cljs$core$IFn$_invoke$arity$2(cljs.core.chunk_rest(s),y));
} else {
return cljs.core.cons(cljs.core.first(s),concat.cljs$core$IFn$_invoke$arity$2(cljs.core.rest(s),y));
}
} else {
return y;
}
}),null,null));
});
var concat__3 = (function() { 
var G__27409__delegate = function (x,y,zs){
var cat = (function cat(xys,zs__$1){
return (new cljs.core.LazySeq(null,(function (){
var xys__$1 = cljs.core.seq(xys);
if(xys__$1){
if(cljs.core.chunked_seq_QMARK_(xys__$1)){
return cljs.core.chunk_cons(cljs.core.chunk_first(xys__$1),cat(cljs.core.chunk_rest(xys__$1),zs__$1));
} else {
return cljs.core.cons(cljs.core.first(xys__$1),cat(cljs.core.rest(xys__$1),zs__$1));
}
} else {
if(cljs.core.truth_(zs__$1)){
return cat(cljs.core.first(zs__$1),cljs.core.next(zs__$1));
} else {
return null;
}
}
}),null,null));
});
return cat(concat.cljs$core$IFn$_invoke$arity$2(x,y),zs);
};
var G__27409 = function (x,y,var_args){
var zs = null;
if (arguments.length > 2) {
var G__27410__i = 0, G__27410__a = new Array(arguments.length -  2);
while (G__27410__i < G__27410__a.length) {G__27410__a[G__27410__i] = arguments[G__27410__i + 2]; ++G__27410__i;}
  zs = new cljs.core.IndexedSeq(G__27410__a,0);
} 
return G__27409__delegate.call(this,x,y,zs);};
G__27409.cljs$lang$maxFixedArity = 2;
G__27409.cljs$lang$applyTo = (function (arglist__27411){
var x = cljs.core.first(arglist__27411);
arglist__27411 = cljs.core.next(arglist__27411);
var y = cljs.core.first(arglist__27411);
var zs = cljs.core.rest(arglist__27411);
return G__27409__delegate(x,y,zs);
});
G__27409.cljs$core$IFn$_invoke$arity$variadic = G__27409__delegate;
return G__27409;
})()
;
concat = function(x,y,var_args){
var zs = var_args;
switch(arguments.length){
case 0:
return concat__0.call(this);
case 1:
return concat__1.call(this,x);
case 2:
return concat__2.call(this,x,y);
default:
var G__27412 = null;
if (arguments.length > 2) {
var G__27413__i = 0, G__27413__a = new Array(arguments.length -  2);
while (G__27413__i < G__27413__a.length) {G__27413__a[G__27413__i] = arguments[G__27413__i + 2]; ++G__27413__i;}
G__27412 = new cljs.core.IndexedSeq(G__27413__a,0);
}
return concat__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__27412);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
concat.cljs$lang$maxFixedArity = 2;
concat.cljs$lang$applyTo = concat__3.cljs$lang$applyTo;
concat.cljs$core$IFn$_invoke$arity$0 = concat__0;
concat.cljs$core$IFn$_invoke$arity$1 = concat__1;
concat.cljs$core$IFn$_invoke$arity$2 = concat__2;
concat.cljs$core$IFn$_invoke$arity$variadic = concat__3.cljs$core$IFn$_invoke$arity$variadic;
return concat;
})()
;
/**
* Creates a new list containing the items prepended to the rest, the
* last of which will be treated as a sequence.
* @param {...*} var_args
*/
cljs.core.list_STAR_ = (function() {
var list_STAR_ = null;
var list_STAR___1 = (function (args){
return cljs.core.seq(args);
});
var list_STAR___2 = (function (a,args){
return cljs.core.cons(a,args);
});
var list_STAR___3 = (function (a,b,args){
return cljs.core.cons(a,cljs.core.cons(b,args));
});
var list_STAR___4 = (function (a,b,c,args){
return cljs.core.cons(a,cljs.core.cons(b,cljs.core.cons(c,args)));
});
var list_STAR___5 = (function() { 
var G__27414__delegate = function (a,b,c,d,more){
return cljs.core.cons(a,cljs.core.cons(b,cljs.core.cons(c,cljs.core.cons(d,cljs.core.spread(more)))));
};
var G__27414 = function (a,b,c,d,var_args){
var more = null;
if (arguments.length > 4) {
var G__27415__i = 0, G__27415__a = new Array(arguments.length -  4);
while (G__27415__i < G__27415__a.length) {G__27415__a[G__27415__i] = arguments[G__27415__i + 4]; ++G__27415__i;}
  more = new cljs.core.IndexedSeq(G__27415__a,0);
} 
return G__27414__delegate.call(this,a,b,c,d,more);};
G__27414.cljs$lang$maxFixedArity = 4;
G__27414.cljs$lang$applyTo = (function (arglist__27416){
var a = cljs.core.first(arglist__27416);
arglist__27416 = cljs.core.next(arglist__27416);
var b = cljs.core.first(arglist__27416);
arglist__27416 = cljs.core.next(arglist__27416);
var c = cljs.core.first(arglist__27416);
arglist__27416 = cljs.core.next(arglist__27416);
var d = cljs.core.first(arglist__27416);
var more = cljs.core.rest(arglist__27416);
return G__27414__delegate(a,b,c,d,more);
});
G__27414.cljs$core$IFn$_invoke$arity$variadic = G__27414__delegate;
return G__27414;
})()
;
list_STAR_ = function(a,b,c,d,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return list_STAR___1.call(this,a);
case 2:
return list_STAR___2.call(this,a,b);
case 3:
return list_STAR___3.call(this,a,b,c);
case 4:
return list_STAR___4.call(this,a,b,c,d);
default:
var G__27417 = null;
if (arguments.length > 4) {
var G__27418__i = 0, G__27418__a = new Array(arguments.length -  4);
while (G__27418__i < G__27418__a.length) {G__27418__a[G__27418__i] = arguments[G__27418__i + 4]; ++G__27418__i;}
G__27417 = new cljs.core.IndexedSeq(G__27418__a,0);
}
return list_STAR___5.cljs$core$IFn$_invoke$arity$variadic(a,b,c,d, G__27417);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
list_STAR_.cljs$lang$maxFixedArity = 4;
list_STAR_.cljs$lang$applyTo = list_STAR___5.cljs$lang$applyTo;
list_STAR_.cljs$core$IFn$_invoke$arity$1 = list_STAR___1;
list_STAR_.cljs$core$IFn$_invoke$arity$2 = list_STAR___2;
list_STAR_.cljs$core$IFn$_invoke$arity$3 = list_STAR___3;
list_STAR_.cljs$core$IFn$_invoke$arity$4 = list_STAR___4;
list_STAR_.cljs$core$IFn$_invoke$arity$variadic = list_STAR___5.cljs$core$IFn$_invoke$arity$variadic;
return list_STAR_;
})()
;
/**
* Returns a new, transient version of the collection, in constant time.
*/
cljs.core.transient$ = (function transient$(coll){
return cljs.core._as_transient(coll);
});
/**
* Returns a new, persistent version of the transient collection, in
* constant time. The transient collection cannot be used after this
* call, any such use will throw an exception.
*/
cljs.core.persistent_BANG_ = (function persistent_BANG_(tcoll){
return cljs.core._persistent_BANG_(tcoll);
});
/**
* Adds x to the transient collection, and return coll. The 'addition'
* may happen at different 'places' depending on the concrete type.
* @param {...*} var_args
*/
cljs.core.conj_BANG_ = (function() {
var conj_BANG_ = null;
var conj_BANG___0 = (function (){
return cljs.core.transient$(cljs.core.PersistentVector.EMPTY);
});
var conj_BANG___1 = (function (coll){
return coll;
});
var conj_BANG___2 = (function (tcoll,val){
return cljs.core._conj_BANG_(tcoll,val);
});
var conj_BANG___3 = (function() { 
var G__27419__delegate = function (tcoll,val,vals){
while(true){
var ntcoll = cljs.core._conj_BANG_(tcoll,val);
if(cljs.core.truth_(vals)){
var G__27420 = ntcoll;
var G__27421 = cljs.core.first(vals);
var G__27422 = cljs.core.next(vals);
tcoll = G__27420;
val = G__27421;
vals = G__27422;
continue;
} else {
return ntcoll;
}
break;
}
};
var G__27419 = function (tcoll,val,var_args){
var vals = null;
if (arguments.length > 2) {
var G__27423__i = 0, G__27423__a = new Array(arguments.length -  2);
while (G__27423__i < G__27423__a.length) {G__27423__a[G__27423__i] = arguments[G__27423__i + 2]; ++G__27423__i;}
  vals = new cljs.core.IndexedSeq(G__27423__a,0);
} 
return G__27419__delegate.call(this,tcoll,val,vals);};
G__27419.cljs$lang$maxFixedArity = 2;
G__27419.cljs$lang$applyTo = (function (arglist__27424){
var tcoll = cljs.core.first(arglist__27424);
arglist__27424 = cljs.core.next(arglist__27424);
var val = cljs.core.first(arglist__27424);
var vals = cljs.core.rest(arglist__27424);
return G__27419__delegate(tcoll,val,vals);
});
G__27419.cljs$core$IFn$_invoke$arity$variadic = G__27419__delegate;
return G__27419;
})()
;
conj_BANG_ = function(tcoll,val,var_args){
var vals = var_args;
switch(arguments.length){
case 0:
return conj_BANG___0.call(this);
case 1:
return conj_BANG___1.call(this,tcoll);
case 2:
return conj_BANG___2.call(this,tcoll,val);
default:
var G__27425 = null;
if (arguments.length > 2) {
var G__27426__i = 0, G__27426__a = new Array(arguments.length -  2);
while (G__27426__i < G__27426__a.length) {G__27426__a[G__27426__i] = arguments[G__27426__i + 2]; ++G__27426__i;}
G__27425 = new cljs.core.IndexedSeq(G__27426__a,0);
}
return conj_BANG___3.cljs$core$IFn$_invoke$arity$variadic(tcoll,val, G__27425);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
conj_BANG_.cljs$lang$maxFixedArity = 2;
conj_BANG_.cljs$lang$applyTo = conj_BANG___3.cljs$lang$applyTo;
conj_BANG_.cljs$core$IFn$_invoke$arity$0 = conj_BANG___0;
conj_BANG_.cljs$core$IFn$_invoke$arity$1 = conj_BANG___1;
conj_BANG_.cljs$core$IFn$_invoke$arity$2 = conj_BANG___2;
conj_BANG_.cljs$core$IFn$_invoke$arity$variadic = conj_BANG___3.cljs$core$IFn$_invoke$arity$variadic;
return conj_BANG_;
})()
;
/**
* When applied to a transient map, adds mapping of key(s) to
* val(s). When applied to a transient vector, sets the val at index.
* Note - index must be <= (count vector). Returns coll.
* @param {...*} var_args
*/
cljs.core.assoc_BANG_ = (function() {
var assoc_BANG_ = null;
var assoc_BANG___3 = (function (tcoll,key,val){
return cljs.core._assoc_BANG_(tcoll,key,val);
});
var assoc_BANG___4 = (function() { 
var G__27427__delegate = function (tcoll,key,val,kvs){
while(true){
var ntcoll = cljs.core._assoc_BANG_(tcoll,key,val);
if(cljs.core.truth_(kvs)){
var G__27428 = ntcoll;
var G__27429 = cljs.core.first(kvs);
var G__27430 = cljs.core.second(kvs);
var G__27431 = cljs.core.nnext(kvs);
tcoll = G__27428;
key = G__27429;
val = G__27430;
kvs = G__27431;
continue;
} else {
return ntcoll;
}
break;
}
};
var G__27427 = function (tcoll,key,val,var_args){
var kvs = null;
if (arguments.length > 3) {
var G__27432__i = 0, G__27432__a = new Array(arguments.length -  3);
while (G__27432__i < G__27432__a.length) {G__27432__a[G__27432__i] = arguments[G__27432__i + 3]; ++G__27432__i;}
  kvs = new cljs.core.IndexedSeq(G__27432__a,0);
} 
return G__27427__delegate.call(this,tcoll,key,val,kvs);};
G__27427.cljs$lang$maxFixedArity = 3;
G__27427.cljs$lang$applyTo = (function (arglist__27433){
var tcoll = cljs.core.first(arglist__27433);
arglist__27433 = cljs.core.next(arglist__27433);
var key = cljs.core.first(arglist__27433);
arglist__27433 = cljs.core.next(arglist__27433);
var val = cljs.core.first(arglist__27433);
var kvs = cljs.core.rest(arglist__27433);
return G__27427__delegate(tcoll,key,val,kvs);
});
G__27427.cljs$core$IFn$_invoke$arity$variadic = G__27427__delegate;
return G__27427;
})()
;
assoc_BANG_ = function(tcoll,key,val,var_args){
var kvs = var_args;
switch(arguments.length){
case 3:
return assoc_BANG___3.call(this,tcoll,key,val);
default:
var G__27434 = null;
if (arguments.length > 3) {
var G__27435__i = 0, G__27435__a = new Array(arguments.length -  3);
while (G__27435__i < G__27435__a.length) {G__27435__a[G__27435__i] = arguments[G__27435__i + 3]; ++G__27435__i;}
G__27434 = new cljs.core.IndexedSeq(G__27435__a,0);
}
return assoc_BANG___4.cljs$core$IFn$_invoke$arity$variadic(tcoll,key,val, G__27434);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
assoc_BANG_.cljs$lang$maxFixedArity = 3;
assoc_BANG_.cljs$lang$applyTo = assoc_BANG___4.cljs$lang$applyTo;
assoc_BANG_.cljs$core$IFn$_invoke$arity$3 = assoc_BANG___3;
assoc_BANG_.cljs$core$IFn$_invoke$arity$variadic = assoc_BANG___4.cljs$core$IFn$_invoke$arity$variadic;
return assoc_BANG_;
})()
;
/**
* Returns a transient map that doesn't contain a mapping for key(s).
* @param {...*} var_args
*/
cljs.core.dissoc_BANG_ = (function() {
var dissoc_BANG_ = null;
var dissoc_BANG___2 = (function (tcoll,key){
return cljs.core._dissoc_BANG_(tcoll,key);
});
var dissoc_BANG___3 = (function() { 
var G__27436__delegate = function (tcoll,key,ks){
while(true){
var ntcoll = cljs.core._dissoc_BANG_(tcoll,key);
if(cljs.core.truth_(ks)){
var G__27437 = ntcoll;
var G__27438 = cljs.core.first(ks);
var G__27439 = cljs.core.next(ks);
tcoll = G__27437;
key = G__27438;
ks = G__27439;
continue;
} else {
return ntcoll;
}
break;
}
};
var G__27436 = function (tcoll,key,var_args){
var ks = null;
if (arguments.length > 2) {
var G__27440__i = 0, G__27440__a = new Array(arguments.length -  2);
while (G__27440__i < G__27440__a.length) {G__27440__a[G__27440__i] = arguments[G__27440__i + 2]; ++G__27440__i;}
  ks = new cljs.core.IndexedSeq(G__27440__a,0);
} 
return G__27436__delegate.call(this,tcoll,key,ks);};
G__27436.cljs$lang$maxFixedArity = 2;
G__27436.cljs$lang$applyTo = (function (arglist__27441){
var tcoll = cljs.core.first(arglist__27441);
arglist__27441 = cljs.core.next(arglist__27441);
var key = cljs.core.first(arglist__27441);
var ks = cljs.core.rest(arglist__27441);
return G__27436__delegate(tcoll,key,ks);
});
G__27436.cljs$core$IFn$_invoke$arity$variadic = G__27436__delegate;
return G__27436;
})()
;
dissoc_BANG_ = function(tcoll,key,var_args){
var ks = var_args;
switch(arguments.length){
case 2:
return dissoc_BANG___2.call(this,tcoll,key);
default:
var G__27442 = null;
if (arguments.length > 2) {
var G__27443__i = 0, G__27443__a = new Array(arguments.length -  2);
while (G__27443__i < G__27443__a.length) {G__27443__a[G__27443__i] = arguments[G__27443__i + 2]; ++G__27443__i;}
G__27442 = new cljs.core.IndexedSeq(G__27443__a,0);
}
return dissoc_BANG___3.cljs$core$IFn$_invoke$arity$variadic(tcoll,key, G__27442);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
dissoc_BANG_.cljs$lang$maxFixedArity = 2;
dissoc_BANG_.cljs$lang$applyTo = dissoc_BANG___3.cljs$lang$applyTo;
dissoc_BANG_.cljs$core$IFn$_invoke$arity$2 = dissoc_BANG___2;
dissoc_BANG_.cljs$core$IFn$_invoke$arity$variadic = dissoc_BANG___3.cljs$core$IFn$_invoke$arity$variadic;
return dissoc_BANG_;
})()
;
/**
* Removes the last item from a transient vector. If
* the collection is empty, throws an exception. Returns coll
*/
cljs.core.pop_BANG_ = (function pop_BANG_(tcoll){
return cljs.core._pop_BANG_(tcoll);
});
/**
* disj[oin]. Returns a transient set of the same (hashed/sorted) type, that
* does not contain key(s).
* @param {...*} var_args
*/
cljs.core.disj_BANG_ = (function() {
var disj_BANG_ = null;
var disj_BANG___2 = (function (tcoll,val){
return cljs.core._disjoin_BANG_(tcoll,val);
});
var disj_BANG___3 = (function() { 
var G__27444__delegate = function (tcoll,val,vals){
while(true){
var ntcoll = cljs.core._disjoin_BANG_(tcoll,val);
if(cljs.core.truth_(vals)){
var G__27445 = ntcoll;
var G__27446 = cljs.core.first(vals);
var G__27447 = cljs.core.next(vals);
tcoll = G__27445;
val = G__27446;
vals = G__27447;
continue;
} else {
return ntcoll;
}
break;
}
};
var G__27444 = function (tcoll,val,var_args){
var vals = null;
if (arguments.length > 2) {
var G__27448__i = 0, G__27448__a = new Array(arguments.length -  2);
while (G__27448__i < G__27448__a.length) {G__27448__a[G__27448__i] = arguments[G__27448__i + 2]; ++G__27448__i;}
  vals = new cljs.core.IndexedSeq(G__27448__a,0);
} 
return G__27444__delegate.call(this,tcoll,val,vals);};
G__27444.cljs$lang$maxFixedArity = 2;
G__27444.cljs$lang$applyTo = (function (arglist__27449){
var tcoll = cljs.core.first(arglist__27449);
arglist__27449 = cljs.core.next(arglist__27449);
var val = cljs.core.first(arglist__27449);
var vals = cljs.core.rest(arglist__27449);
return G__27444__delegate(tcoll,val,vals);
});
G__27444.cljs$core$IFn$_invoke$arity$variadic = G__27444__delegate;
return G__27444;
})()
;
disj_BANG_ = function(tcoll,val,var_args){
var vals = var_args;
switch(arguments.length){
case 2:
return disj_BANG___2.call(this,tcoll,val);
default:
var G__27450 = null;
if (arguments.length > 2) {
var G__27451__i = 0, G__27451__a = new Array(arguments.length -  2);
while (G__27451__i < G__27451__a.length) {G__27451__a[G__27451__i] = arguments[G__27451__i + 2]; ++G__27451__i;}
G__27450 = new cljs.core.IndexedSeq(G__27451__a,0);
}
return disj_BANG___3.cljs$core$IFn$_invoke$arity$variadic(tcoll,val, G__27450);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
disj_BANG_.cljs$lang$maxFixedArity = 2;
disj_BANG_.cljs$lang$applyTo = disj_BANG___3.cljs$lang$applyTo;
disj_BANG_.cljs$core$IFn$_invoke$arity$2 = disj_BANG___2;
disj_BANG_.cljs$core$IFn$_invoke$arity$variadic = disj_BANG___3.cljs$core$IFn$_invoke$arity$variadic;
return disj_BANG_;
})()
;

cljs.core.apply_to = (function apply_to(f,argc,args){
var args__$1 = cljs.core.seq(args);
if((argc === (0))){
return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
} else {
var a25205 = cljs.core._first(args__$1);
var args__$2 = cljs.core._rest(args__$1);
if((argc === (1))){
if(f.cljs$core$IFn$_invoke$arity$1){
return f.cljs$core$IFn$_invoke$arity$1(a25205);
} else {
var G__27662 = a25205;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__27662) : f.call(null,G__27662));
}
} else {
var b25206 = cljs.core._first(args__$2);
var args__$3 = cljs.core._rest(args__$2);
if((argc === (2))){
if(f.cljs$core$IFn$_invoke$arity$2){
return f.cljs$core$IFn$_invoke$arity$2(a25205,b25206);
} else {
var G__27663 = a25205;
var G__27664 = b25206;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__27663,G__27664) : f.call(null,G__27663,G__27664));
}
} else {
var c25207 = cljs.core._first(args__$3);
var args__$4 = cljs.core._rest(args__$3);
if((argc === (3))){
if(f.cljs$core$IFn$_invoke$arity$3){
return f.cljs$core$IFn$_invoke$arity$3(a25205,b25206,c25207);
} else {
var G__27665 = a25205;
var G__27666 = b25206;
var G__27667 = c25207;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__27665,G__27666,G__27667) : f.call(null,G__27665,G__27666,G__27667));
}
} else {
var d25208 = cljs.core._first(args__$4);
var args__$5 = cljs.core._rest(args__$4);
if((argc === (4))){
if(f.cljs$core$IFn$_invoke$arity$4){
return f.cljs$core$IFn$_invoke$arity$4(a25205,b25206,c25207,d25208);
} else {
var G__27668 = a25205;
var G__27669 = b25206;
var G__27670 = c25207;
var G__27671 = d25208;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__27668,G__27669,G__27670,G__27671) : f.call(null,G__27668,G__27669,G__27670,G__27671));
}
} else {
var e25209 = cljs.core._first(args__$5);
var args__$6 = cljs.core._rest(args__$5);
if((argc === (5))){
if(f.cljs$core$IFn$_invoke$arity$5){
return f.cljs$core$IFn$_invoke$arity$5(a25205,b25206,c25207,d25208,e25209);
} else {
var G__27672 = a25205;
var G__27673 = b25206;
var G__27674 = c25207;
var G__27675 = d25208;
var G__27676 = e25209;
return (f.cljs$core$IFn$_invoke$arity$5 ? f.cljs$core$IFn$_invoke$arity$5(G__27672,G__27673,G__27674,G__27675,G__27676) : f.call(null,G__27672,G__27673,G__27674,G__27675,G__27676));
}
} else {
var f25210 = cljs.core._first(args__$6);
var args__$7 = cljs.core._rest(args__$6);
if((argc === (6))){
if(f.cljs$core$IFn$_invoke$arity$6){
return f.cljs$core$IFn$_invoke$arity$6(a25205,b25206,c25207,d25208,e25209,f25210);
} else {
var G__27677 = a25205;
var G__27678 = b25206;
var G__27679 = c25207;
var G__27680 = d25208;
var G__27681 = e25209;
var G__27682 = f25210;
return (f.cljs$core$IFn$_invoke$arity$6 ? f.cljs$core$IFn$_invoke$arity$6(G__27677,G__27678,G__27679,G__27680,G__27681,G__27682) : f.call(null,G__27677,G__27678,G__27679,G__27680,G__27681,G__27682));
}
} else {
var g25211 = cljs.core._first(args__$7);
var args__$8 = cljs.core._rest(args__$7);
if((argc === (7))){
if(f.cljs$core$IFn$_invoke$arity$7){
return f.cljs$core$IFn$_invoke$arity$7(a25205,b25206,c25207,d25208,e25209,f25210,g25211);
} else {
var G__27683 = a25205;
var G__27684 = b25206;
var G__27685 = c25207;
var G__27686 = d25208;
var G__27687 = e25209;
var G__27688 = f25210;
var G__27689 = g25211;
return (f.cljs$core$IFn$_invoke$arity$7 ? f.cljs$core$IFn$_invoke$arity$7(G__27683,G__27684,G__27685,G__27686,G__27687,G__27688,G__27689) : f.call(null,G__27683,G__27684,G__27685,G__27686,G__27687,G__27688,G__27689));
}
} else {
var h25212 = cljs.core._first(args__$8);
var args__$9 = cljs.core._rest(args__$8);
if((argc === (8))){
if(f.cljs$core$IFn$_invoke$arity$8){
return f.cljs$core$IFn$_invoke$arity$8(a25205,b25206,c25207,d25208,e25209,f25210,g25211,h25212);
} else {
var G__27690 = a25205;
var G__27691 = b25206;
var G__27692 = c25207;
var G__27693 = d25208;
var G__27694 = e25209;
var G__27695 = f25210;
var G__27696 = g25211;
var G__27697 = h25212;
return (f.cljs$core$IFn$_invoke$arity$8 ? f.cljs$core$IFn$_invoke$arity$8(G__27690,G__27691,G__27692,G__27693,G__27694,G__27695,G__27696,G__27697) : f.call(null,G__27690,G__27691,G__27692,G__27693,G__27694,G__27695,G__27696,G__27697));
}
} else {
var i25213 = cljs.core._first(args__$9);
var args__$10 = cljs.core._rest(args__$9);
if((argc === (9))){
if(f.cljs$core$IFn$_invoke$arity$9){
return f.cljs$core$IFn$_invoke$arity$9(a25205,b25206,c25207,d25208,e25209,f25210,g25211,h25212,i25213);
} else {
var G__27698 = a25205;
var G__27699 = b25206;
var G__27700 = c25207;
var G__27701 = d25208;
var G__27702 = e25209;
var G__27703 = f25210;
var G__27704 = g25211;
var G__27705 = h25212;
var G__27706 = i25213;
return (f.cljs$core$IFn$_invoke$arity$9 ? f.cljs$core$IFn$_invoke$arity$9(G__27698,G__27699,G__27700,G__27701,G__27702,G__27703,G__27704,G__27705,G__27706) : f.call(null,G__27698,G__27699,G__27700,G__27701,G__27702,G__27703,G__27704,G__27705,G__27706));
}
} else {
var j25214 = cljs.core._first(args__$10);
var args__$11 = cljs.core._rest(args__$10);
if((argc === (10))){
if(f.cljs$core$IFn$_invoke$arity$10){
return f.cljs$core$IFn$_invoke$arity$10(a25205,b25206,c25207,d25208,e25209,f25210,g25211,h25212,i25213,j25214);
} else {
var G__27707 = a25205;
var G__27708 = b25206;
var G__27709 = c25207;
var G__27710 = d25208;
var G__27711 = e25209;
var G__27712 = f25210;
var G__27713 = g25211;
var G__27714 = h25212;
var G__27715 = i25213;
var G__27716 = j25214;
return (f.cljs$core$IFn$_invoke$arity$10 ? f.cljs$core$IFn$_invoke$arity$10(G__27707,G__27708,G__27709,G__27710,G__27711,G__27712,G__27713,G__27714,G__27715,G__27716) : f.call(null,G__27707,G__27708,G__27709,G__27710,G__27711,G__27712,G__27713,G__27714,G__27715,G__27716));
}
} else {
var k25215 = cljs.core._first(args__$11);
var args__$12 = cljs.core._rest(args__$11);
if((argc === (11))){
if(f.cljs$core$IFn$_invoke$arity$11){
return f.cljs$core$IFn$_invoke$arity$11(a25205,b25206,c25207,d25208,e25209,f25210,g25211,h25212,i25213,j25214,k25215);
} else {
var G__27717 = a25205;
var G__27718 = b25206;
var G__27719 = c25207;
var G__27720 = d25208;
var G__27721 = e25209;
var G__27722 = f25210;
var G__27723 = g25211;
var G__27724 = h25212;
var G__27725 = i25213;
var G__27726 = j25214;
var G__27727 = k25215;
return (f.cljs$core$IFn$_invoke$arity$11 ? f.cljs$core$IFn$_invoke$arity$11(G__27717,G__27718,G__27719,G__27720,G__27721,G__27722,G__27723,G__27724,G__27725,G__27726,G__27727) : f.call(null,G__27717,G__27718,G__27719,G__27720,G__27721,G__27722,G__27723,G__27724,G__27725,G__27726,G__27727));
}
} else {
var l25216 = cljs.core._first(args__$12);
var args__$13 = cljs.core._rest(args__$12);
if((argc === (12))){
if(f.cljs$core$IFn$_invoke$arity$12){
return f.cljs$core$IFn$_invoke$arity$12(a25205,b25206,c25207,d25208,e25209,f25210,g25211,h25212,i25213,j25214,k25215,l25216);
} else {
var G__27728 = a25205;
var G__27729 = b25206;
var G__27730 = c25207;
var G__27731 = d25208;
var G__27732 = e25209;
var G__27733 = f25210;
var G__27734 = g25211;
var G__27735 = h25212;
var G__27736 = i25213;
var G__27737 = j25214;
var G__27738 = k25215;
var G__27739 = l25216;
return (f.cljs$core$IFn$_invoke$arity$12 ? f.cljs$core$IFn$_invoke$arity$12(G__27728,G__27729,G__27730,G__27731,G__27732,G__27733,G__27734,G__27735,G__27736,G__27737,G__27738,G__27739) : f.call(null,G__27728,G__27729,G__27730,G__27731,G__27732,G__27733,G__27734,G__27735,G__27736,G__27737,G__27738,G__27739));
}
} else {
var m25217 = cljs.core._first(args__$13);
var args__$14 = cljs.core._rest(args__$13);
if((argc === (13))){
if(f.cljs$core$IFn$_invoke$arity$13){
return f.cljs$core$IFn$_invoke$arity$13(a25205,b25206,c25207,d25208,e25209,f25210,g25211,h25212,i25213,j25214,k25215,l25216,m25217);
} else {
var G__27740 = a25205;
var G__27741 = b25206;
var G__27742 = c25207;
var G__27743 = d25208;
var G__27744 = e25209;
var G__27745 = f25210;
var G__27746 = g25211;
var G__27747 = h25212;
var G__27748 = i25213;
var G__27749 = j25214;
var G__27750 = k25215;
var G__27751 = l25216;
var G__27752 = m25217;
return (f.cljs$core$IFn$_invoke$arity$13 ? f.cljs$core$IFn$_invoke$arity$13(G__27740,G__27741,G__27742,G__27743,G__27744,G__27745,G__27746,G__27747,G__27748,G__27749,G__27750,G__27751,G__27752) : f.call(null,G__27740,G__27741,G__27742,G__27743,G__27744,G__27745,G__27746,G__27747,G__27748,G__27749,G__27750,G__27751,G__27752));
}
} else {
var n25218 = cljs.core._first(args__$14);
var args__$15 = cljs.core._rest(args__$14);
if((argc === (14))){
if(f.cljs$core$IFn$_invoke$arity$14){
return f.cljs$core$IFn$_invoke$arity$14(a25205,b25206,c25207,d25208,e25209,f25210,g25211,h25212,i25213,j25214,k25215,l25216,m25217,n25218);
} else {
var G__27753 = a25205;
var G__27754 = b25206;
var G__27755 = c25207;
var G__27756 = d25208;
var G__27757 = e25209;
var G__27758 = f25210;
var G__27759 = g25211;
var G__27760 = h25212;
var G__27761 = i25213;
var G__27762 = j25214;
var G__27763 = k25215;
var G__27764 = l25216;
var G__27765 = m25217;
var G__27766 = n25218;
return (f.cljs$core$IFn$_invoke$arity$14 ? f.cljs$core$IFn$_invoke$arity$14(G__27753,G__27754,G__27755,G__27756,G__27757,G__27758,G__27759,G__27760,G__27761,G__27762,G__27763,G__27764,G__27765,G__27766) : f.call(null,G__27753,G__27754,G__27755,G__27756,G__27757,G__27758,G__27759,G__27760,G__27761,G__27762,G__27763,G__27764,G__27765,G__27766));
}
} else {
var o25219 = cljs.core._first(args__$15);
var args__$16 = cljs.core._rest(args__$15);
if((argc === (15))){
if(f.cljs$core$IFn$_invoke$arity$15){
return f.cljs$core$IFn$_invoke$arity$15(a25205,b25206,c25207,d25208,e25209,f25210,g25211,h25212,i25213,j25214,k25215,l25216,m25217,n25218,o25219);
} else {
var G__27767 = a25205;
var G__27768 = b25206;
var G__27769 = c25207;
var G__27770 = d25208;
var G__27771 = e25209;
var G__27772 = f25210;
var G__27773 = g25211;
var G__27774 = h25212;
var G__27775 = i25213;
var G__27776 = j25214;
var G__27777 = k25215;
var G__27778 = l25216;
var G__27779 = m25217;
var G__27780 = n25218;
var G__27781 = o25219;
return (f.cljs$core$IFn$_invoke$arity$15 ? f.cljs$core$IFn$_invoke$arity$15(G__27767,G__27768,G__27769,G__27770,G__27771,G__27772,G__27773,G__27774,G__27775,G__27776,G__27777,G__27778,G__27779,G__27780,G__27781) : f.call(null,G__27767,G__27768,G__27769,G__27770,G__27771,G__27772,G__27773,G__27774,G__27775,G__27776,G__27777,G__27778,G__27779,G__27780,G__27781));
}
} else {
var p25220 = cljs.core._first(args__$16);
var args__$17 = cljs.core._rest(args__$16);
if((argc === (16))){
if(f.cljs$core$IFn$_invoke$arity$16){
return f.cljs$core$IFn$_invoke$arity$16(a25205,b25206,c25207,d25208,e25209,f25210,g25211,h25212,i25213,j25214,k25215,l25216,m25217,n25218,o25219,p25220);
} else {
var G__27782 = a25205;
var G__27783 = b25206;
var G__27784 = c25207;
var G__27785 = d25208;
var G__27786 = e25209;
var G__27787 = f25210;
var G__27788 = g25211;
var G__27789 = h25212;
var G__27790 = i25213;
var G__27791 = j25214;
var G__27792 = k25215;
var G__27793 = l25216;
var G__27794 = m25217;
var G__27795 = n25218;
var G__27796 = o25219;
var G__27797 = p25220;
return (f.cljs$core$IFn$_invoke$arity$16 ? f.cljs$core$IFn$_invoke$arity$16(G__27782,G__27783,G__27784,G__27785,G__27786,G__27787,G__27788,G__27789,G__27790,G__27791,G__27792,G__27793,G__27794,G__27795,G__27796,G__27797) : f.call(null,G__27782,G__27783,G__27784,G__27785,G__27786,G__27787,G__27788,G__27789,G__27790,G__27791,G__27792,G__27793,G__27794,G__27795,G__27796,G__27797));
}
} else {
var q25221 = cljs.core._first(args__$17);
var args__$18 = cljs.core._rest(args__$17);
if((argc === (17))){
if(f.cljs$core$IFn$_invoke$arity$17){
return f.cljs$core$IFn$_invoke$arity$17(a25205,b25206,c25207,d25208,e25209,f25210,g25211,h25212,i25213,j25214,k25215,l25216,m25217,n25218,o25219,p25220,q25221);
} else {
var G__27798 = a25205;
var G__27799 = b25206;
var G__27800 = c25207;
var G__27801 = d25208;
var G__27802 = e25209;
var G__27803 = f25210;
var G__27804 = g25211;
var G__27805 = h25212;
var G__27806 = i25213;
var G__27807 = j25214;
var G__27808 = k25215;
var G__27809 = l25216;
var G__27810 = m25217;
var G__27811 = n25218;
var G__27812 = o25219;
var G__27813 = p25220;
var G__27814 = q25221;
return (f.cljs$core$IFn$_invoke$arity$17 ? f.cljs$core$IFn$_invoke$arity$17(G__27798,G__27799,G__27800,G__27801,G__27802,G__27803,G__27804,G__27805,G__27806,G__27807,G__27808,G__27809,G__27810,G__27811,G__27812,G__27813,G__27814) : f.call(null,G__27798,G__27799,G__27800,G__27801,G__27802,G__27803,G__27804,G__27805,G__27806,G__27807,G__27808,G__27809,G__27810,G__27811,G__27812,G__27813,G__27814));
}
} else {
var r25222 = cljs.core._first(args__$18);
var args__$19 = cljs.core._rest(args__$18);
if((argc === (18))){
if(f.cljs$core$IFn$_invoke$arity$18){
return f.cljs$core$IFn$_invoke$arity$18(a25205,b25206,c25207,d25208,e25209,f25210,g25211,h25212,i25213,j25214,k25215,l25216,m25217,n25218,o25219,p25220,q25221,r25222);
} else {
var G__27815 = a25205;
var G__27816 = b25206;
var G__27817 = c25207;
var G__27818 = d25208;
var G__27819 = e25209;
var G__27820 = f25210;
var G__27821 = g25211;
var G__27822 = h25212;
var G__27823 = i25213;
var G__27824 = j25214;
var G__27825 = k25215;
var G__27826 = l25216;
var G__27827 = m25217;
var G__27828 = n25218;
var G__27829 = o25219;
var G__27830 = p25220;
var G__27831 = q25221;
var G__27832 = r25222;
return (f.cljs$core$IFn$_invoke$arity$18 ? f.cljs$core$IFn$_invoke$arity$18(G__27815,G__27816,G__27817,G__27818,G__27819,G__27820,G__27821,G__27822,G__27823,G__27824,G__27825,G__27826,G__27827,G__27828,G__27829,G__27830,G__27831,G__27832) : f.call(null,G__27815,G__27816,G__27817,G__27818,G__27819,G__27820,G__27821,G__27822,G__27823,G__27824,G__27825,G__27826,G__27827,G__27828,G__27829,G__27830,G__27831,G__27832));
}
} else {
var s25223 = cljs.core._first(args__$19);
var args__$20 = cljs.core._rest(args__$19);
if((argc === (19))){
if(f.cljs$core$IFn$_invoke$arity$19){
return f.cljs$core$IFn$_invoke$arity$19(a25205,b25206,c25207,d25208,e25209,f25210,g25211,h25212,i25213,j25214,k25215,l25216,m25217,n25218,o25219,p25220,q25221,r25222,s25223);
} else {
var G__27833 = a25205;
var G__27834 = b25206;
var G__27835 = c25207;
var G__27836 = d25208;
var G__27837 = e25209;
var G__27838 = f25210;
var G__27839 = g25211;
var G__27840 = h25212;
var G__27841 = i25213;
var G__27842 = j25214;
var G__27843 = k25215;
var G__27844 = l25216;
var G__27845 = m25217;
var G__27846 = n25218;
var G__27847 = o25219;
var G__27848 = p25220;
var G__27849 = q25221;
var G__27850 = r25222;
var G__27851 = s25223;
return (f.cljs$core$IFn$_invoke$arity$19 ? f.cljs$core$IFn$_invoke$arity$19(G__27833,G__27834,G__27835,G__27836,G__27837,G__27838,G__27839,G__27840,G__27841,G__27842,G__27843,G__27844,G__27845,G__27846,G__27847,G__27848,G__27849,G__27850,G__27851) : f.call(null,G__27833,G__27834,G__27835,G__27836,G__27837,G__27838,G__27839,G__27840,G__27841,G__27842,G__27843,G__27844,G__27845,G__27846,G__27847,G__27848,G__27849,G__27850,G__27851));
}
} else {
var t25224 = cljs.core._first(args__$20);
var args__$21 = cljs.core._rest(args__$20);
if((argc === (20))){
if(f.cljs$core$IFn$_invoke$arity$20){
return f.cljs$core$IFn$_invoke$arity$20(a25205,b25206,c25207,d25208,e25209,f25210,g25211,h25212,i25213,j25214,k25215,l25216,m25217,n25218,o25219,p25220,q25221,r25222,s25223,t25224);
} else {
var G__27852 = a25205;
var G__27853 = b25206;
var G__27854 = c25207;
var G__27855 = d25208;
var G__27856 = e25209;
var G__27857 = f25210;
var G__27858 = g25211;
var G__27859 = h25212;
var G__27860 = i25213;
var G__27861 = j25214;
var G__27862 = k25215;
var G__27863 = l25216;
var G__27864 = m25217;
var G__27865 = n25218;
var G__27866 = o25219;
var G__27867 = p25220;
var G__27868 = q25221;
var G__27869 = r25222;
var G__27870 = s25223;
var G__27871 = t25224;
return (f.cljs$core$IFn$_invoke$arity$20 ? f.cljs$core$IFn$_invoke$arity$20(G__27852,G__27853,G__27854,G__27855,G__27856,G__27857,G__27858,G__27859,G__27860,G__27861,G__27862,G__27863,G__27864,G__27865,G__27866,G__27867,G__27868,G__27869,G__27870,G__27871) : f.call(null,G__27852,G__27853,G__27854,G__27855,G__27856,G__27857,G__27858,G__27859,G__27860,G__27861,G__27862,G__27863,G__27864,G__27865,G__27866,G__27867,G__27868,G__27869,G__27870,G__27871));
}
} else {
throw (new Error("Only up to 20 arguments supported on functions"));
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
});

/**
* Applies fn f to the argument list formed by prepending intervening arguments to args.
* First cut.  Not lazy.  Needs to use emitted toApply.
* @param {...*} var_args
*/
cljs.core.apply = (function() {
var apply = null;
var apply__2 = (function (f,args){
var fixed_arity = f.cljs$lang$maxFixedArity;
if(f.cljs$lang$applyTo){
var bc = cljs.core.bounded_count(args,(fixed_arity + (1)));
if((bc <= fixed_arity)){
return cljs.core.apply_to(f,bc,args);
} else {
return f.cljs$lang$applyTo(args);
}
} else {
return f.apply(f,cljs.core.to_array(args));
}
});
var apply__3 = (function (f,x,args){
var arglist = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$2(x,args);
var fixed_arity = f.cljs$lang$maxFixedArity;
if(f.cljs$lang$applyTo){
var bc = cljs.core.bounded_count(arglist,(fixed_arity + (1)));
if((bc <= fixed_arity)){
return cljs.core.apply_to(f,bc,arglist);
} else {
return f.cljs$lang$applyTo(arglist);
}
} else {
return f.apply(f,cljs.core.to_array(arglist));
}
});
var apply__4 = (function (f,x,y,args){
var arglist = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$3(x,y,args);
var fixed_arity = f.cljs$lang$maxFixedArity;
if(f.cljs$lang$applyTo){
var bc = cljs.core.bounded_count(arglist,(fixed_arity + (1)));
if((bc <= fixed_arity)){
return cljs.core.apply_to(f,bc,arglist);
} else {
return f.cljs$lang$applyTo(arglist);
}
} else {
return f.apply(f,cljs.core.to_array(arglist));
}
});
var apply__5 = (function (f,x,y,z,args){
var arglist = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(x,y,z,args);
var fixed_arity = f.cljs$lang$maxFixedArity;
if(f.cljs$lang$applyTo){
var bc = cljs.core.bounded_count(arglist,(fixed_arity + (1)));
if((bc <= fixed_arity)){
return cljs.core.apply_to(f,bc,arglist);
} else {
return f.cljs$lang$applyTo(arglist);
}
} else {
return f.apply(f,cljs.core.to_array(arglist));
}
});
var apply__6 = (function() { 
var G__27872__delegate = function (f,a,b,c,d,args){
var arglist = cljs.core.cons(a,cljs.core.cons(b,cljs.core.cons(c,cljs.core.cons(d,cljs.core.spread(args)))));
var fixed_arity = f.cljs$lang$maxFixedArity;
if(f.cljs$lang$applyTo){
var bc = cljs.core.bounded_count(arglist,(fixed_arity + (1)));
if((bc <= fixed_arity)){
return cljs.core.apply_to(f,bc,arglist);
} else {
return f.cljs$lang$applyTo(arglist);
}
} else {
return f.apply(f,cljs.core.to_array(arglist));
}
};
var G__27872 = function (f,a,b,c,d,var_args){
var args = null;
if (arguments.length > 5) {
var G__27873__i = 0, G__27873__a = new Array(arguments.length -  5);
while (G__27873__i < G__27873__a.length) {G__27873__a[G__27873__i] = arguments[G__27873__i + 5]; ++G__27873__i;}
  args = new cljs.core.IndexedSeq(G__27873__a,0);
} 
return G__27872__delegate.call(this,f,a,b,c,d,args);};
G__27872.cljs$lang$maxFixedArity = 5;
G__27872.cljs$lang$applyTo = (function (arglist__27874){
var f = cljs.core.first(arglist__27874);
arglist__27874 = cljs.core.next(arglist__27874);
var a = cljs.core.first(arglist__27874);
arglist__27874 = cljs.core.next(arglist__27874);
var b = cljs.core.first(arglist__27874);
arglist__27874 = cljs.core.next(arglist__27874);
var c = cljs.core.first(arglist__27874);
arglist__27874 = cljs.core.next(arglist__27874);
var d = cljs.core.first(arglist__27874);
var args = cljs.core.rest(arglist__27874);
return G__27872__delegate(f,a,b,c,d,args);
});
G__27872.cljs$core$IFn$_invoke$arity$variadic = G__27872__delegate;
return G__27872;
})()
;
apply = function(f,a,b,c,d,var_args){
var args = var_args;
switch(arguments.length){
case 2:
return apply__2.call(this,f,a);
case 3:
return apply__3.call(this,f,a,b);
case 4:
return apply__4.call(this,f,a,b,c);
case 5:
return apply__5.call(this,f,a,b,c,d);
default:
var G__27875 = null;
if (arguments.length > 5) {
var G__27876__i = 0, G__27876__a = new Array(arguments.length -  5);
while (G__27876__i < G__27876__a.length) {G__27876__a[G__27876__i] = arguments[G__27876__i + 5]; ++G__27876__i;}
G__27875 = new cljs.core.IndexedSeq(G__27876__a,0);
}
return apply__6.cljs$core$IFn$_invoke$arity$variadic(f,a,b,c,d, G__27875);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
apply.cljs$lang$maxFixedArity = 5;
apply.cljs$lang$applyTo = apply__6.cljs$lang$applyTo;
apply.cljs$core$IFn$_invoke$arity$2 = apply__2;
apply.cljs$core$IFn$_invoke$arity$3 = apply__3;
apply.cljs$core$IFn$_invoke$arity$4 = apply__4;
apply.cljs$core$IFn$_invoke$arity$5 = apply__5;
apply.cljs$core$IFn$_invoke$arity$variadic = apply__6.cljs$core$IFn$_invoke$arity$variadic;
return apply;
})()
;
/**
* Returns an object of the same type and value as obj, with
* (apply f (meta obj) args) as its metadata.
* @param {...*} var_args
*/
cljs.core.vary_meta = (function() {
var vary_meta = null;
var vary_meta__2 = (function (obj,f){
return cljs.core.with_meta(obj,(function (){var G__27892 = cljs.core.meta(obj);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__27892) : f.call(null,G__27892));
})());
});
var vary_meta__3 = (function (obj,f,a){
return cljs.core.with_meta(obj,(function (){var G__27893 = cljs.core.meta(obj);
var G__27894 = a;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__27893,G__27894) : f.call(null,G__27893,G__27894));
})());
});
var vary_meta__4 = (function (obj,f,a,b){
return cljs.core.with_meta(obj,(function (){var G__27895 = cljs.core.meta(obj);
var G__27896 = a;
var G__27897 = b;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__27895,G__27896,G__27897) : f.call(null,G__27895,G__27896,G__27897));
})());
});
var vary_meta__5 = (function (obj,f,a,b,c){
return cljs.core.with_meta(obj,(function (){var G__27898 = cljs.core.meta(obj);
var G__27899 = a;
var G__27900 = b;
var G__27901 = c;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__27898,G__27899,G__27900,G__27901) : f.call(null,G__27898,G__27899,G__27900,G__27901));
})());
});
var vary_meta__6 = (function (obj,f,a,b,c,d){
return cljs.core.with_meta(obj,(function (){var G__27902 = cljs.core.meta(obj);
var G__27903 = a;
var G__27904 = b;
var G__27905 = c;
var G__27906 = d;
return (f.cljs$core$IFn$_invoke$arity$5 ? f.cljs$core$IFn$_invoke$arity$5(G__27902,G__27903,G__27904,G__27905,G__27906) : f.call(null,G__27902,G__27903,G__27904,G__27905,G__27906));
})());
});
var vary_meta__7 = (function() { 
var G__27907__delegate = function (obj,f,a,b,c,d,args){
return cljs.core.with_meta(obj,cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f,cljs.core.meta(obj),a,b,c,cljs.core.array_seq([d,args], 0)));
};
var G__27907 = function (obj,f,a,b,c,d,var_args){
var args = null;
if (arguments.length > 6) {
var G__27908__i = 0, G__27908__a = new Array(arguments.length -  6);
while (G__27908__i < G__27908__a.length) {G__27908__a[G__27908__i] = arguments[G__27908__i + 6]; ++G__27908__i;}
  args = new cljs.core.IndexedSeq(G__27908__a,0);
} 
return G__27907__delegate.call(this,obj,f,a,b,c,d,args);};
G__27907.cljs$lang$maxFixedArity = 6;
G__27907.cljs$lang$applyTo = (function (arglist__27909){
var obj = cljs.core.first(arglist__27909);
arglist__27909 = cljs.core.next(arglist__27909);
var f = cljs.core.first(arglist__27909);
arglist__27909 = cljs.core.next(arglist__27909);
var a = cljs.core.first(arglist__27909);
arglist__27909 = cljs.core.next(arglist__27909);
var b = cljs.core.first(arglist__27909);
arglist__27909 = cljs.core.next(arglist__27909);
var c = cljs.core.first(arglist__27909);
arglist__27909 = cljs.core.next(arglist__27909);
var d = cljs.core.first(arglist__27909);
var args = cljs.core.rest(arglist__27909);
return G__27907__delegate(obj,f,a,b,c,d,args);
});
G__27907.cljs$core$IFn$_invoke$arity$variadic = G__27907__delegate;
return G__27907;
})()
;
vary_meta = function(obj,f,a,b,c,d,var_args){
var args = var_args;
switch(arguments.length){
case 2:
return vary_meta__2.call(this,obj,f);
case 3:
return vary_meta__3.call(this,obj,f,a);
case 4:
return vary_meta__4.call(this,obj,f,a,b);
case 5:
return vary_meta__5.call(this,obj,f,a,b,c);
case 6:
return vary_meta__6.call(this,obj,f,a,b,c,d);
default:
var G__27910 = null;
if (arguments.length > 6) {
var G__27911__i = 0, G__27911__a = new Array(arguments.length -  6);
while (G__27911__i < G__27911__a.length) {G__27911__a[G__27911__i] = arguments[G__27911__i + 6]; ++G__27911__i;}
G__27910 = new cljs.core.IndexedSeq(G__27911__a,0);
}
return vary_meta__7.cljs$core$IFn$_invoke$arity$variadic(obj,f,a,b,c,d, G__27910);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
vary_meta.cljs$lang$maxFixedArity = 6;
vary_meta.cljs$lang$applyTo = vary_meta__7.cljs$lang$applyTo;
vary_meta.cljs$core$IFn$_invoke$arity$2 = vary_meta__2;
vary_meta.cljs$core$IFn$_invoke$arity$3 = vary_meta__3;
vary_meta.cljs$core$IFn$_invoke$arity$4 = vary_meta__4;
vary_meta.cljs$core$IFn$_invoke$arity$5 = vary_meta__5;
vary_meta.cljs$core$IFn$_invoke$arity$6 = vary_meta__6;
vary_meta.cljs$core$IFn$_invoke$arity$variadic = vary_meta__7.cljs$core$IFn$_invoke$arity$variadic;
return vary_meta;
})()
;
/**
* Same as (not (= obj1 obj2))
* @param {...*} var_args
*/
cljs.core.not_EQ_ = (function() {
var not_EQ_ = null;
var not_EQ___1 = (function (x){
return false;
});
var not_EQ___2 = (function (x,y){
return !(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x,y));
});
var not_EQ___3 = (function() { 
var G__27912__delegate = function (x,y,more){
return cljs.core.not(cljs.core.apply.cljs$core$IFn$_invoke$arity$4(cljs.core._EQ_,x,y,more));
};
var G__27912 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__27913__i = 0, G__27913__a = new Array(arguments.length -  2);
while (G__27913__i < G__27913__a.length) {G__27913__a[G__27913__i] = arguments[G__27913__i + 2]; ++G__27913__i;}
  more = new cljs.core.IndexedSeq(G__27913__a,0);
} 
return G__27912__delegate.call(this,x,y,more);};
G__27912.cljs$lang$maxFixedArity = 2;
G__27912.cljs$lang$applyTo = (function (arglist__27914){
var x = cljs.core.first(arglist__27914);
arglist__27914 = cljs.core.next(arglist__27914);
var y = cljs.core.first(arglist__27914);
var more = cljs.core.rest(arglist__27914);
return G__27912__delegate(x,y,more);
});
G__27912.cljs$core$IFn$_invoke$arity$variadic = G__27912__delegate;
return G__27912;
})()
;
not_EQ_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return not_EQ___1.call(this,x);
case 2:
return not_EQ___2.call(this,x,y);
default:
var G__27915 = null;
if (arguments.length > 2) {
var G__27916__i = 0, G__27916__a = new Array(arguments.length -  2);
while (G__27916__i < G__27916__a.length) {G__27916__a[G__27916__i] = arguments[G__27916__i + 2]; ++G__27916__i;}
G__27915 = new cljs.core.IndexedSeq(G__27916__a,0);
}
return not_EQ___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__27915);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
not_EQ_.cljs$lang$maxFixedArity = 2;
not_EQ_.cljs$lang$applyTo = not_EQ___3.cljs$lang$applyTo;
not_EQ_.cljs$core$IFn$_invoke$arity$1 = not_EQ___1;
not_EQ_.cljs$core$IFn$_invoke$arity$2 = not_EQ___2;
not_EQ_.cljs$core$IFn$_invoke$arity$variadic = not_EQ___3.cljs$core$IFn$_invoke$arity$variadic;
return not_EQ_;
})()
;
/**
* If coll is empty, returns nil, else coll
*/
cljs.core.not_empty = (function not_empty(coll){
if(cljs.core.seq(coll)){
return coll;
} else {
return null;
}
});
cljs.core.nil_iter = (function nil_iter(){
if(typeof cljs.core.t27920 !== 'undefined'){
} else {

/**
* @constructor
*/
cljs.core.t27920 = (function (nil_iter,meta27921){
this.nil_iter = nil_iter;
this.meta27921 = meta27921;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 393216;
})
cljs.core.t27920.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
return false;
});

cljs.core.t27920.prototype.next = (function (){
var self__ = this;
var _ = this;
return (new Error("No such element"));
});

cljs.core.t27920.prototype.remove = (function (){
var self__ = this;
var _ = this;
return (new Error("Unsupported operation"));
});

cljs.core.t27920.prototype.cljs$core$IMeta$_meta$arity$1 = (function (_27922){
var self__ = this;
var _27922__$1 = this;
return self__.meta27921;
});

cljs.core.t27920.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (_27922,meta27921__$1){
var self__ = this;
var _27922__$1 = this;
return (new cljs.core.t27920(self__.nil_iter,meta27921__$1));
});

cljs.core.t27920.cljs$lang$type = true;

cljs.core.t27920.cljs$lang$ctorStr = "cljs.core/t27920";

cljs.core.t27920.cljs$lang$ctorPrWriter = (function (this__24861__auto__,writer__24862__auto__,opt__24863__auto__){
return cljs.core._write(writer__24862__auto__,"cljs.core/t27920");
});

cljs.core.__GT_t27920 = (function __GT_t27920(nil_iter__$1,meta27921){
return (new cljs.core.t27920(nil_iter__$1,meta27921));
});

}

return (new cljs.core.t27920(nil_iter,new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null,"end-column","end-column",1425389514),54,new cljs.core.Keyword(null,"end-line","end-line",1837326455),2998,new cljs.core.Keyword(null,"column","column",2078222095),3,new cljs.core.Keyword(null,"line","line",212345235),2994,new cljs.core.Keyword(null,"file","file",-1269645878),"/home/callum/projects/closso/.repl/252/cljs/core.cljs"], null)));
});

/**
* @constructor
*/
cljs.core.StringIter = (function (s,i){
this.s = s;
this.i = i;
})
cljs.core.StringIter.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
return (self__.i < self__.s.length);
});

cljs.core.StringIter.prototype.next = (function (){
var self__ = this;
var _ = this;
var ret = self__.s.charAt(self__.i);
self__.i = (self__.i + (1));

return ret;
});

cljs.core.StringIter.prototype.remove = (function (){
var self__ = this;
var _ = this;
return (new Error("Unsupported operation"));
});

cljs.core.StringIter.cljs$lang$type = true;

cljs.core.StringIter.cljs$lang$ctorStr = "cljs.core/StringIter";

cljs.core.StringIter.cljs$lang$ctorPrWriter = (function (this__24861__auto__,writer__24862__auto__,opt__24863__auto__){
return cljs.core._write(writer__24862__auto__,"cljs.core/StringIter");
});

cljs.core.__GT_StringIter = (function __GT_StringIter(s,i){
return (new cljs.core.StringIter(s,i));
});

cljs.core.string_iter = (function string_iter(x){
return (new cljs.core.StringIter(x,(0)));
});

/**
* @constructor
*/
cljs.core.ArrayIter = (function (arr,i){
this.arr = arr;
this.i = i;
})
cljs.core.ArrayIter.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
return (self__.i < self__.arr.length);
});

cljs.core.ArrayIter.prototype.next = (function (){
var self__ = this;
var _ = this;
var ret = (self__.arr[self__.i]);
self__.i = (self__.i + (1));

return ret;
});

cljs.core.ArrayIter.prototype.remove = (function (){
var self__ = this;
var _ = this;
return (new Error("Unsupported operation"));
});

cljs.core.ArrayIter.cljs$lang$type = true;

cljs.core.ArrayIter.cljs$lang$ctorStr = "cljs.core/ArrayIter";

cljs.core.ArrayIter.cljs$lang$ctorPrWriter = (function (this__24861__auto__,writer__24862__auto__,opt__24863__auto__){
return cljs.core._write(writer__24862__auto__,"cljs.core/ArrayIter");
});

cljs.core.__GT_ArrayIter = (function __GT_ArrayIter(arr,i){
return (new cljs.core.ArrayIter(arr,i));
});

cljs.core.array_iter = (function array_iter(x){
return (new cljs.core.ArrayIter(x,(0)));
});
cljs.core.INIT = {};
cljs.core.START = {};

/**
* @constructor
*/
cljs.core.SeqIter = (function (_seq,_next){
this._seq = _seq;
this._next = _next;
})
cljs.core.SeqIter.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
if((self__._seq === cljs.core.INIT)){
self__._seq = cljs.core.START;

self__._next = cljs.core.seq(self__._next);
} else {
if((self__._seq === self__._next)){
self__._next = cljs.core.next(self__._seq);
} else {
}
}

return !((self__._next == null));
});

cljs.core.SeqIter.prototype.next = (function (){
var self__ = this;
var this$ = this;
if(cljs.core.not(this$.hasNext())){
throw (new Error("No such element"));
} else {
self__._seq = self__._next;

return cljs.core.first(self__._next);
}
});

cljs.core.SeqIter.prototype.remove = (function (){
var self__ = this;
var _ = this;
return (new Error("Unsupported operation"));
});

cljs.core.SeqIter.cljs$lang$type = true;

cljs.core.SeqIter.cljs$lang$ctorStr = "cljs.core/SeqIter";

cljs.core.SeqIter.cljs$lang$ctorPrWriter = (function (this__24861__auto__,writer__24862__auto__,opt__24863__auto__){
return cljs.core._write(writer__24862__auto__,"cljs.core/SeqIter");
});

cljs.core.__GT_SeqIter = (function __GT_SeqIter(_seq,_next){
return (new cljs.core.SeqIter(_seq,_next));
});

cljs.core.seq_iter = (function seq_iter(coll){
return (new cljs.core.SeqIter(cljs.core.INIT,coll));
});
cljs.core.iter = (function iter(coll){
if((coll == null)){
return cljs.core.nil_iter();
} else {
if(typeof coll === 'string'){
return cljs.core.string_iter(coll);
} else {
if(coll instanceof Array){
return cljs.core.array_iter(coll);
} else {
if(cljs.core.iterable_QMARK_(coll)){
return cljs.core._iterator(coll);
} else {
if(cljs.core.seqable_QMARK_(coll)){
return cljs.core.seq_iter(coll);
} else {
throw (new Error([cljs.core.str("Cannot create iterator from "),cljs.core.str(coll)].join('')));

}
}
}
}
}
});
cljs.core.lazy_transformer = (function lazy_transformer(stepper){
return (new cljs.core.LazyTransformer(stepper,null,null,null));
});

/**
* @constructor
*/
cljs.core.Stepper = (function (xform,iter){
this.xform = xform;
this.iter = iter;
})
cljs.core.Stepper.prototype.step = (function (lt){
var self__ = this;
var this$ = this;
while(true){
if(cljs.core.truth_((function (){var and__24262__auto__ = !((lt.stepper == null));
if(and__24262__auto__){
return self__.iter.hasNext();
} else {
return and__24262__auto__;
}
})())){
if(cljs.core.reduced_QMARK_((function (){var G__27923 = lt;
var G__27924 = self__.iter.next();
return (self__.xform.cljs$core$IFn$_invoke$arity$2 ? self__.xform.cljs$core$IFn$_invoke$arity$2(G__27923,G__27924) : self__.xform.call(null,G__27923,G__27924));
})())){
if((lt.rest == null)){
} else {
lt.rest.stepper = null;
}
} else {
continue;
}
} else {
}
break;
}

if((lt.stepper == null)){
return null;
} else {
var G__27925 = lt;
return (self__.xform.cljs$core$IFn$_invoke$arity$1 ? self__.xform.cljs$core$IFn$_invoke$arity$1(G__27925) : self__.xform.call(null,G__27925));
}
});

cljs.core.Stepper.cljs$lang$type = true;

cljs.core.Stepper.cljs$lang$ctorStr = "cljs.core/Stepper";

cljs.core.Stepper.cljs$lang$ctorPrWriter = (function (this__24861__auto__,writer__24862__auto__,opt__24863__auto__){
return cljs.core._write(writer__24862__auto__,"cljs.core/Stepper");
});

cljs.core.__GT_Stepper = (function __GT_Stepper(xform,iter){
return (new cljs.core.Stepper(xform,iter));
});

cljs.core.stepper = (function stepper(xform,iter){
var stepfn = (function() {
var stepfn = null;
var stepfn__1 = (function (result){
var lt = ((cljs.core.reduced_QMARK_(result))?cljs.core.deref(result):result);
lt.stepper = null;

return result;
});
var stepfn__2 = (function (result,input){
var lt = result;
lt.first = input;

lt.rest = cljs.core.lazy_transformer(lt.stepper);

lt.stepper = null;

return lt.rest;
});
stepfn = function(result,input){
switch(arguments.length){
case 1:
return stepfn__1.call(this,result);
case 2:
return stepfn__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
stepfn.cljs$core$IFn$_invoke$arity$1 = stepfn__1;
stepfn.cljs$core$IFn$_invoke$arity$2 = stepfn__2;
return stepfn;
})()
;
return (new cljs.core.Stepper((function (){var G__27927 = stepfn;
return (xform.cljs$core$IFn$_invoke$arity$1 ? xform.cljs$core$IFn$_invoke$arity$1(G__27927) : xform.call(null,G__27927));
})(),iter));
});

/**
* @constructor
*/
cljs.core.MultiStepper = (function (xform,iters,nexts){
this.xform = xform;
this.iters = iters;
this.nexts = nexts;
})
cljs.core.MultiStepper.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
var iters__$1 = cljs.core.seq(self__.iters);
while(true){
if(!((iters__$1 == null))){
var iter = cljs.core.first(iters__$1);
if(cljs.core.not(iter.hasNext())){
return false;
} else {
var G__27929 = cljs.core.next(iters__$1);
iters__$1 = G__27929;
continue;
}
} else {
return true;
}
break;
}
});

cljs.core.MultiStepper.prototype.next = (function (){
var self__ = this;
var _ = this;
var n__25161__auto___27930 = self__.iters.length;
var i_27931 = (0);
while(true){
if((i_27931 < n__25161__auto___27930)){
(self__.nexts[i_27931] = (self__.iters[i_27931]).next());

var G__27932 = (i_27931 + (1));
i_27931 = G__27932;
continue;
} else {
}
break;
}

return cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(self__.nexts,(0));
});

cljs.core.MultiStepper.prototype.step = (function (lt){
var self__ = this;
var this$ = this;
while(true){
if(cljs.core.truth_((function (){var and__24262__auto__ = !((lt.stepper == null));
if(and__24262__auto__){
return this$.hasNext();
} else {
return and__24262__auto__;
}
})())){
if(cljs.core.reduced_QMARK_(cljs.core.apply.cljs$core$IFn$_invoke$arity$2(self__.xform,cljs.core.cons(lt,this$.next())))){
if((lt.rest == null)){
} else {
lt.rest.stepper = null;
}
} else {
continue;
}
} else {
}
break;
}

if((lt.stepper == null)){
return null;
} else {
var G__27928 = lt;
return (self__.xform.cljs$core$IFn$_invoke$arity$1 ? self__.xform.cljs$core$IFn$_invoke$arity$1(G__27928) : self__.xform.call(null,G__27928));
}
});

cljs.core.MultiStepper.cljs$lang$type = true;

cljs.core.MultiStepper.cljs$lang$ctorStr = "cljs.core/MultiStepper";

cljs.core.MultiStepper.cljs$lang$ctorPrWriter = (function (this__24861__auto__,writer__24862__auto__,opt__24863__auto__){
return cljs.core._write(writer__24862__auto__,"cljs.core/MultiStepper");
});

cljs.core.__GT_MultiStepper = (function __GT_MultiStepper(xform,iters,nexts){
return (new cljs.core.MultiStepper(xform,iters,nexts));
});

cljs.core.multi_stepper = (function() {
var multi_stepper = null;
var multi_stepper__2 = (function (xform,iters){
return multi_stepper.cljs$core$IFn$_invoke$arity$3(xform,iters,(new Array(iters.length)));
});
var multi_stepper__3 = (function (xform,iters,nexts){
var stepfn = (function() {
var stepfn = null;
var stepfn__1 = (function (result){
var lt = ((cljs.core.reduced_QMARK_(result))?cljs.core.deref(result):result);
lt.stepper = null;

return lt;
});
var stepfn__2 = (function (result,input){
var lt = result;
lt.first = input;

lt.rest = cljs.core.lazy_transformer(lt.stepper);

lt.stepper = null;

return lt.rest;
});
stepfn = function(result,input){
switch(arguments.length){
case 1:
return stepfn__1.call(this,result);
case 2:
return stepfn__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
stepfn.cljs$core$IFn$_invoke$arity$1 = stepfn__1;
stepfn.cljs$core$IFn$_invoke$arity$2 = stepfn__2;
return stepfn;
})()
;
return (new cljs.core.MultiStepper((function (){var G__27937 = stepfn;
return (xform.cljs$core$IFn$_invoke$arity$1 ? xform.cljs$core$IFn$_invoke$arity$1(G__27937) : xform.call(null,G__27937));
})(),iters,nexts));
});
multi_stepper = function(xform,iters,nexts){
switch(arguments.length){
case 2:
return multi_stepper__2.call(this,xform,iters);
case 3:
return multi_stepper__3.call(this,xform,iters,nexts);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
multi_stepper.cljs$core$IFn$_invoke$arity$2 = multi_stepper__2;
multi_stepper.cljs$core$IFn$_invoke$arity$3 = multi_stepper__3;
return multi_stepper;
})()
;

/**
* @constructor
*/
cljs.core.LazyTransformer = (function (stepper,first,rest,meta){
this.stepper = stepper;
this.first = first;
this.rest = rest;
this.meta = meta;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 31719628;
})
cljs.core.LazyTransformer.prototype.cljs$core$INext$_next$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
if((self__.stepper == null)){
} else {
cljs.core._seq(this$__$1);
}

if((self__.rest == null)){
return null;
} else {
return cljs.core._seq(self__.rest);
}
});

cljs.core.LazyTransformer.prototype.cljs$core$ISeq$_first$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
if((self__.stepper == null)){
} else {
cljs.core._seq(this$__$1);
}

if((self__.rest == null)){
return null;
} else {
return self__.first;
}
});

cljs.core.LazyTransformer.prototype.cljs$core$ISeq$_rest$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
if((self__.stepper == null)){
} else {
cljs.core._seq(this$__$1);
}

if((self__.rest == null)){
return cljs.core.List.EMPTY;
} else {
return self__.rest;
}
});

cljs.core.LazyTransformer.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
if((self__.stepper == null)){
} else {
self__.stepper.step(this$__$1);
}

if((self__.rest == null)){
return null;
} else {
return this$__$1;
}
});

cljs.core.LazyTransformer.prototype.cljs$core$IHash$_hash$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return cljs.core.hash_ordered_coll(this$__$1);
});

cljs.core.LazyTransformer.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (this$,other){
var self__ = this;
var this$__$1 = this;
var s = cljs.core._seq(this$__$1);
if(!((s == null))){
return cljs.core.equiv_sequential(this$__$1,other);
} else {
return (cljs.core.sequential_QMARK_(other)) && ((cljs.core.seq(other) == null));
}
});

cljs.core.LazyTransformer.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return cljs.core.List.EMPTY;
});

cljs.core.LazyTransformer.prototype.cljs$core$ICollection$_conj$arity$2 = (function (this$,o){
var self__ = this;
var this$__$1 = this;
return cljs.core.cons(o,cljs.core._seq(this$__$1));
});

cljs.core.LazyTransformer.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (this$,new_meta){
var self__ = this;
var this$__$1 = this;
return (new cljs.core.LazyTransformer(self__.stepper,self__.first,self__.rest,new_meta));
});

cljs.core.LazyTransformer.cljs$lang$type = true;

cljs.core.LazyTransformer.cljs$lang$ctorStr = "cljs.core/LazyTransformer";

cljs.core.LazyTransformer.cljs$lang$ctorPrWriter = (function (this__24861__auto__,writer__24862__auto__,opt__24863__auto__){
return cljs.core._write(writer__24862__auto__,"cljs.core/LazyTransformer");
});

cljs.core.__GT_LazyTransformer = (function __GT_LazyTransformer(stepper,first,rest,meta){
return (new cljs.core.LazyTransformer(stepper,first,rest,meta));
});

(cljs.core.LazyTransformer.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__25252__auto__ = this;
return cljs.core.es6_iterator(this__25252__auto__);
}));
cljs.core.LazyTransformer.create = (function (xform,coll){
return (new cljs.core.LazyTransformer(cljs.core.stepper(xform,cljs.core.iter(coll)),null,null,null));
});
cljs.core.LazyTransformer.createMulti = (function (xform,colls){
var iters = [];
var seq__27938_27942 = cljs.core.seq(colls);
var chunk__27939_27943 = null;
var count__27940_27944 = (0);
var i__27941_27945 = (0);
while(true){
if((i__27941_27945 < count__27940_27944)){
var coll_27946 = chunk__27939_27943.cljs$core$IIndexed$_nth$arity$2(null,i__27941_27945);
iters.push(cljs.core.iter(coll_27946));

var G__27947 = seq__27938_27942;
var G__27948 = chunk__27939_27943;
var G__27949 = count__27940_27944;
var G__27950 = (i__27941_27945 + (1));
seq__27938_27942 = G__27947;
chunk__27939_27943 = G__27948;
count__27940_27944 = G__27949;
i__27941_27945 = G__27950;
continue;
} else {
var temp__4126__auto___27951 = cljs.core.seq(seq__27938_27942);
if(temp__4126__auto___27951){
var seq__27938_27952__$1 = temp__4126__auto___27951;
if(cljs.core.chunked_seq_QMARK_(seq__27938_27952__$1)){
var c__25061__auto___27953 = cljs.core.chunk_first(seq__27938_27952__$1);
var G__27954 = cljs.core.chunk_rest(seq__27938_27952__$1);
var G__27955 = c__25061__auto___27953;
var G__27956 = cljs.core.count(c__25061__auto___27953);
var G__27957 = (0);
seq__27938_27942 = G__27954;
chunk__27939_27943 = G__27955;
count__27940_27944 = G__27956;
i__27941_27945 = G__27957;
continue;
} else {
var coll_27958 = cljs.core.first(seq__27938_27952__$1);
iters.push(cljs.core.iter(coll_27958));

var G__27959 = cljs.core.next(seq__27938_27952__$1);
var G__27960 = null;
var G__27961 = (0);
var G__27962 = (0);
seq__27938_27942 = G__27959;
chunk__27939_27943 = G__27960;
count__27940_27944 = G__27961;
i__27941_27945 = G__27962;
continue;
}
} else {
}
}
break;
}

return (new cljs.core.LazyTransformer(cljs.core.multi_stepper.cljs$core$IFn$_invoke$arity$3(xform,iters,(new Array(iters.length))),null,null,null));
});
/**
* Coerces coll to a (possibly empty) sequence, if it is not already
* one. Will not force a lazy seq. (sequence nil) yields (), When a
* transducer is supplied, returns a lazy sequence of applications of
* the transform to the items in coll(s), i.e. to the set of first
* items of each coll, followed by the set of second
* items in each coll, until any one of the colls is exhausted.  Any
* remaining items in other colls are ignored. The transform should accept
* number-of-colls arguments
* @param {...*} var_args
*/
cljs.core.sequence = (function() {
var sequence = null;
var sequence__1 = (function (coll){
if(cljs.core.seq_QMARK_(coll)){
return coll;
} else {
var or__24274__auto__ = cljs.core.seq(coll);
if(or__24274__auto__){
return or__24274__auto__;
} else {
return cljs.core.List.EMPTY;
}
}
});
var sequence__2 = (function (xform,coll){
return cljs.core.LazyTransformer.create(xform,coll);
});
var sequence__3 = (function() { 
var G__27963__delegate = function (xform,coll,colls){
return cljs.core.LazyTransformer.createMulti(xform,cljs.core.to_array(cljs.core.cons(coll,colls)));
};
var G__27963 = function (xform,coll,var_args){
var colls = null;
if (arguments.length > 2) {
var G__27964__i = 0, G__27964__a = new Array(arguments.length -  2);
while (G__27964__i < G__27964__a.length) {G__27964__a[G__27964__i] = arguments[G__27964__i + 2]; ++G__27964__i;}
  colls = new cljs.core.IndexedSeq(G__27964__a,0);
} 
return G__27963__delegate.call(this,xform,coll,colls);};
G__27963.cljs$lang$maxFixedArity = 2;
G__27963.cljs$lang$applyTo = (function (arglist__27965){
var xform = cljs.core.first(arglist__27965);
arglist__27965 = cljs.core.next(arglist__27965);
var coll = cljs.core.first(arglist__27965);
var colls = cljs.core.rest(arglist__27965);
return G__27963__delegate(xform,coll,colls);
});
G__27963.cljs$core$IFn$_invoke$arity$variadic = G__27963__delegate;
return G__27963;
})()
;
sequence = function(xform,coll,var_args){
var colls = var_args;
switch(arguments.length){
case 1:
return sequence__1.call(this,xform);
case 2:
return sequence__2.call(this,xform,coll);
default:
var G__27966 = null;
if (arguments.length > 2) {
var G__27967__i = 0, G__27967__a = new Array(arguments.length -  2);
while (G__27967__i < G__27967__a.length) {G__27967__a[G__27967__i] = arguments[G__27967__i + 2]; ++G__27967__i;}
G__27966 = new cljs.core.IndexedSeq(G__27967__a,0);
}
return sequence__3.cljs$core$IFn$_invoke$arity$variadic(xform,coll, G__27966);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
sequence.cljs$lang$maxFixedArity = 2;
sequence.cljs$lang$applyTo = sequence__3.cljs$lang$applyTo;
sequence.cljs$core$IFn$_invoke$arity$1 = sequence__1;
sequence.cljs$core$IFn$_invoke$arity$2 = sequence__2;
sequence.cljs$core$IFn$_invoke$arity$variadic = sequence__3.cljs$core$IFn$_invoke$arity$variadic;
return sequence;
})()
;
/**
* Returns true if (pred x) is logical true for every x in coll, else
* false.
*/
cljs.core.every_QMARK_ = (function every_QMARK_(pred,coll){
while(true){
if((cljs.core.seq(coll) == null)){
return true;
} else {
if(cljs.core.truth_((function (){var G__27969 = cljs.core.first(coll);
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__27969) : pred.call(null,G__27969));
})())){
var G__27970 = pred;
var G__27971 = cljs.core.next(coll);
pred = G__27970;
coll = G__27971;
continue;
} else {
return false;

}
}
break;
}
});
/**
* Returns false if (pred x) is logical true for every x in
* coll, else true.
*/
cljs.core.not_every_QMARK_ = (function not_every_QMARK_(pred,coll){
return !(cljs.core.every_QMARK_(pred,coll));
});
/**
* Returns the first logical true value of (pred x) for any x in coll,
* else nil.  One common idiom is to use a set as pred, for example
* this will return :fred if :fred is in the sequence, otherwise nil:
* (some #{:fred} coll)
*/
cljs.core.some = (function some(pred,coll){
while(true){
if(cljs.core.seq(coll)){
var or__24274__auto__ = (function (){var G__27975 = cljs.core.first(coll);
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__27975) : pred.call(null,G__27975));
})();
if(cljs.core.truth_(or__24274__auto__)){
return or__24274__auto__;
} else {
var G__27976 = pred;
var G__27977 = cljs.core.next(coll);
pred = G__27976;
coll = G__27977;
continue;
}
} else {
return null;
}
break;
}
});
/**
* Returns false if (pred x) is logical true for any x in coll,
* else true.
*/
cljs.core.not_any_QMARK_ = (function not_any_QMARK_(pred,coll){
return cljs.core.not(cljs.core.some(pred,coll));
});
/**
* Returns true if n is even, throws an exception if n is not an integer
*/
cljs.core.even_QMARK_ = (function even_QMARK_(n){
if(cljs.core.integer_QMARK_(n)){
return ((n & (1)) === (0));
} else {
throw (new Error([cljs.core.str("Argument must be an integer: "),cljs.core.str(n)].join('')));
}
});
/**
* Returns true if n is odd, throws an exception if n is not an integer
*/
cljs.core.odd_QMARK_ = (function odd_QMARK_(n){
return !(cljs.core.even_QMARK_(n));
});
/**
* Takes a fn f and returns a fn that takes the same arguments as f,
* has the same effects, if any, and returns the opposite truth value.
*/
cljs.core.complement = (function complement(f){
return (function() {
var G__27984 = null;
var G__27984__0 = (function (){
return cljs.core.not((function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})());
});
var G__27984__1 = (function (x){
return cljs.core.not((function (){var G__27981 = x;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__27981) : f.call(null,G__27981));
})());
});
var G__27984__2 = (function (x,y){
return cljs.core.not((function (){var G__27982 = x;
var G__27983 = y;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__27982,G__27983) : f.call(null,G__27982,G__27983));
})());
});
var G__27984__3 = (function() { 
var G__27985__delegate = function (x,y,zs){
return cljs.core.not(cljs.core.apply.cljs$core$IFn$_invoke$arity$4(f,x,y,zs));
};
var G__27985 = function (x,y,var_args){
var zs = null;
if (arguments.length > 2) {
var G__27986__i = 0, G__27986__a = new Array(arguments.length -  2);
while (G__27986__i < G__27986__a.length) {G__27986__a[G__27986__i] = arguments[G__27986__i + 2]; ++G__27986__i;}
  zs = new cljs.core.IndexedSeq(G__27986__a,0);
} 
return G__27985__delegate.call(this,x,y,zs);};
G__27985.cljs$lang$maxFixedArity = 2;
G__27985.cljs$lang$applyTo = (function (arglist__27987){
var x = cljs.core.first(arglist__27987);
arglist__27987 = cljs.core.next(arglist__27987);
var y = cljs.core.first(arglist__27987);
var zs = cljs.core.rest(arglist__27987);
return G__27985__delegate(x,y,zs);
});
G__27985.cljs$core$IFn$_invoke$arity$variadic = G__27985__delegate;
return G__27985;
})()
;
G__27984 = function(x,y,var_args){
var zs = var_args;
switch(arguments.length){
case 0:
return G__27984__0.call(this);
case 1:
return G__27984__1.call(this,x);
case 2:
return G__27984__2.call(this,x,y);
default:
var G__27988 = null;
if (arguments.length > 2) {
var G__27989__i = 0, G__27989__a = new Array(arguments.length -  2);
while (G__27989__i < G__27989__a.length) {G__27989__a[G__27989__i] = arguments[G__27989__i + 2]; ++G__27989__i;}
G__27988 = new cljs.core.IndexedSeq(G__27989__a,0);
}
return G__27984__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__27988);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__27984.cljs$lang$maxFixedArity = 2;
G__27984.cljs$lang$applyTo = G__27984__3.cljs$lang$applyTo;
G__27984.cljs$core$IFn$_invoke$arity$0 = G__27984__0;
G__27984.cljs$core$IFn$_invoke$arity$1 = G__27984__1;
G__27984.cljs$core$IFn$_invoke$arity$2 = G__27984__2;
G__27984.cljs$core$IFn$_invoke$arity$variadic = G__27984__3.cljs$core$IFn$_invoke$arity$variadic;
return G__27984;
})()
});
/**
* Returns a function that takes any number of arguments and returns x.
*/
cljs.core.constantly = (function constantly(x){
return (function() { 
var G__27990__delegate = function (args){
return x;
};
var G__27990 = function (var_args){
var args = null;
if (arguments.length > 0) {
var G__27991__i = 0, G__27991__a = new Array(arguments.length -  0);
while (G__27991__i < G__27991__a.length) {G__27991__a[G__27991__i] = arguments[G__27991__i + 0]; ++G__27991__i;}
  args = new cljs.core.IndexedSeq(G__27991__a,0);
} 
return G__27990__delegate.call(this,args);};
G__27990.cljs$lang$maxFixedArity = 0;
G__27990.cljs$lang$applyTo = (function (arglist__27992){
var args = cljs.core.seq(arglist__27992);
return G__27990__delegate(args);
});
G__27990.cljs$core$IFn$_invoke$arity$variadic = G__27990__delegate;
return G__27990;
})()
;
});
/**
* Takes a set of functions and returns a fn that is the composition
* of those fns.  The returned fn takes a variable number of args,
* applies the rightmost of fns to the args, the next
* fn (right-to-left) to the result, etc.
* @param {...*} var_args
*/
cljs.core.comp = (function() {
var comp = null;
var comp__0 = (function (){
return cljs.core.identity;
});
var comp__1 = (function (f){
return f;
});
var comp__2 = (function (f,g){
return (function() {
var G__28047 = null;
var G__28047__0 = (function (){
var G__28020 = (function (){return (g.cljs$core$IFn$_invoke$arity$0 ? g.cljs$core$IFn$_invoke$arity$0() : g.call(null));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__28020) : f.call(null,G__28020));
});
var G__28047__1 = (function (x){
var G__28021 = (function (){var G__28022 = x;
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__28022) : g.call(null,G__28022));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__28021) : f.call(null,G__28021));
});
var G__28047__2 = (function (x,y){
var G__28023 = (function (){var G__28024 = x;
var G__28025 = y;
return (g.cljs$core$IFn$_invoke$arity$2 ? g.cljs$core$IFn$_invoke$arity$2(G__28024,G__28025) : g.call(null,G__28024,G__28025));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__28023) : f.call(null,G__28023));
});
var G__28047__3 = (function (x,y,z){
var G__28026 = (function (){var G__28027 = x;
var G__28028 = y;
var G__28029 = z;
return (g.cljs$core$IFn$_invoke$arity$3 ? g.cljs$core$IFn$_invoke$arity$3(G__28027,G__28028,G__28029) : g.call(null,G__28027,G__28028,G__28029));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__28026) : f.call(null,G__28026));
});
var G__28047__4 = (function() { 
var G__28048__delegate = function (x,y,z,args){
var G__28030 = cljs.core.apply.cljs$core$IFn$_invoke$arity$5(g,x,y,z,args);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__28030) : f.call(null,G__28030));
};
var G__28048 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__28049__i = 0, G__28049__a = new Array(arguments.length -  3);
while (G__28049__i < G__28049__a.length) {G__28049__a[G__28049__i] = arguments[G__28049__i + 3]; ++G__28049__i;}
  args = new cljs.core.IndexedSeq(G__28049__a,0);
} 
return G__28048__delegate.call(this,x,y,z,args);};
G__28048.cljs$lang$maxFixedArity = 3;
G__28048.cljs$lang$applyTo = (function (arglist__28050){
var x = cljs.core.first(arglist__28050);
arglist__28050 = cljs.core.next(arglist__28050);
var y = cljs.core.first(arglist__28050);
arglist__28050 = cljs.core.next(arglist__28050);
var z = cljs.core.first(arglist__28050);
var args = cljs.core.rest(arglist__28050);
return G__28048__delegate(x,y,z,args);
});
G__28048.cljs$core$IFn$_invoke$arity$variadic = G__28048__delegate;
return G__28048;
})()
;
G__28047 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__28047__0.call(this);
case 1:
return G__28047__1.call(this,x);
case 2:
return G__28047__2.call(this,x,y);
case 3:
return G__28047__3.call(this,x,y,z);
default:
var G__28051 = null;
if (arguments.length > 3) {
var G__28052__i = 0, G__28052__a = new Array(arguments.length -  3);
while (G__28052__i < G__28052__a.length) {G__28052__a[G__28052__i] = arguments[G__28052__i + 3]; ++G__28052__i;}
G__28051 = new cljs.core.IndexedSeq(G__28052__a,0);
}
return G__28047__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__28051);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__28047.cljs$lang$maxFixedArity = 3;
G__28047.cljs$lang$applyTo = G__28047__4.cljs$lang$applyTo;
G__28047.cljs$core$IFn$_invoke$arity$0 = G__28047__0;
G__28047.cljs$core$IFn$_invoke$arity$1 = G__28047__1;
G__28047.cljs$core$IFn$_invoke$arity$2 = G__28047__2;
G__28047.cljs$core$IFn$_invoke$arity$3 = G__28047__3;
G__28047.cljs$core$IFn$_invoke$arity$variadic = G__28047__4.cljs$core$IFn$_invoke$arity$variadic;
return G__28047;
})()
});
var comp__3 = (function (f,g,h){
return (function() {
var G__28053 = null;
var G__28053__0 = (function (){
var G__28031 = (function (){var G__28032 = (function (){return (h.cljs$core$IFn$_invoke$arity$0 ? h.cljs$core$IFn$_invoke$arity$0() : h.call(null));
})();
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__28032) : g.call(null,G__28032));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__28031) : f.call(null,G__28031));
});
var G__28053__1 = (function (x){
var G__28033 = (function (){var G__28034 = (function (){var G__28035 = x;
return (h.cljs$core$IFn$_invoke$arity$1 ? h.cljs$core$IFn$_invoke$arity$1(G__28035) : h.call(null,G__28035));
})();
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__28034) : g.call(null,G__28034));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__28033) : f.call(null,G__28033));
});
var G__28053__2 = (function (x,y){
var G__28036 = (function (){var G__28037 = (function (){var G__28038 = x;
var G__28039 = y;
return (h.cljs$core$IFn$_invoke$arity$2 ? h.cljs$core$IFn$_invoke$arity$2(G__28038,G__28039) : h.call(null,G__28038,G__28039));
})();
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__28037) : g.call(null,G__28037));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__28036) : f.call(null,G__28036));
});
var G__28053__3 = (function (x,y,z){
var G__28040 = (function (){var G__28041 = (function (){var G__28042 = x;
var G__28043 = y;
var G__28044 = z;
return (h.cljs$core$IFn$_invoke$arity$3 ? h.cljs$core$IFn$_invoke$arity$3(G__28042,G__28043,G__28044) : h.call(null,G__28042,G__28043,G__28044));
})();
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__28041) : g.call(null,G__28041));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__28040) : f.call(null,G__28040));
});
var G__28053__4 = (function() { 
var G__28054__delegate = function (x,y,z,args){
var G__28045 = (function (){var G__28046 = cljs.core.apply.cljs$core$IFn$_invoke$arity$5(h,x,y,z,args);
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__28046) : g.call(null,G__28046));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__28045) : f.call(null,G__28045));
};
var G__28054 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__28055__i = 0, G__28055__a = new Array(arguments.length -  3);
while (G__28055__i < G__28055__a.length) {G__28055__a[G__28055__i] = arguments[G__28055__i + 3]; ++G__28055__i;}
  args = new cljs.core.IndexedSeq(G__28055__a,0);
} 
return G__28054__delegate.call(this,x,y,z,args);};
G__28054.cljs$lang$maxFixedArity = 3;
G__28054.cljs$lang$applyTo = (function (arglist__28056){
var x = cljs.core.first(arglist__28056);
arglist__28056 = cljs.core.next(arglist__28056);
var y = cljs.core.first(arglist__28056);
arglist__28056 = cljs.core.next(arglist__28056);
var z = cljs.core.first(arglist__28056);
var args = cljs.core.rest(arglist__28056);
return G__28054__delegate(x,y,z,args);
});
G__28054.cljs$core$IFn$_invoke$arity$variadic = G__28054__delegate;
return G__28054;
})()
;
G__28053 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__28053__0.call(this);
case 1:
return G__28053__1.call(this,x);
case 2:
return G__28053__2.call(this,x,y);
case 3:
return G__28053__3.call(this,x,y,z);
default:
var G__28057 = null;
if (arguments.length > 3) {
var G__28058__i = 0, G__28058__a = new Array(arguments.length -  3);
while (G__28058__i < G__28058__a.length) {G__28058__a[G__28058__i] = arguments[G__28058__i + 3]; ++G__28058__i;}
G__28057 = new cljs.core.IndexedSeq(G__28058__a,0);
}
return G__28053__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__28057);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__28053.cljs$lang$maxFixedArity = 3;
G__28053.cljs$lang$applyTo = G__28053__4.cljs$lang$applyTo;
G__28053.cljs$core$IFn$_invoke$arity$0 = G__28053__0;
G__28053.cljs$core$IFn$_invoke$arity$1 = G__28053__1;
G__28053.cljs$core$IFn$_invoke$arity$2 = G__28053__2;
G__28053.cljs$core$IFn$_invoke$arity$3 = G__28053__3;
G__28053.cljs$core$IFn$_invoke$arity$variadic = G__28053__4.cljs$core$IFn$_invoke$arity$variadic;
return G__28053;
})()
});
var comp__4 = (function() { 
var G__28059__delegate = function (f1,f2,f3,fs){
var fs__$1 = cljs.core.reverse(cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(f1,f2,f3,fs));
return ((function (fs__$1){
return (function() { 
var G__28060__delegate = function (args){
var ret = cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.first(fs__$1),args);
var fs__$2 = cljs.core.next(fs__$1);
while(true){
if(fs__$2){
var G__28061 = cljs.core.first(fs__$2).call(null,ret);
var G__28062 = cljs.core.next(fs__$2);
ret = G__28061;
fs__$2 = G__28062;
continue;
} else {
return ret;
}
break;
}
};
var G__28060 = function (var_args){
var args = null;
if (arguments.length > 0) {
var G__28063__i = 0, G__28063__a = new Array(arguments.length -  0);
while (G__28063__i < G__28063__a.length) {G__28063__a[G__28063__i] = arguments[G__28063__i + 0]; ++G__28063__i;}
  args = new cljs.core.IndexedSeq(G__28063__a,0);
} 
return G__28060__delegate.call(this,args);};
G__28060.cljs$lang$maxFixedArity = 0;
G__28060.cljs$lang$applyTo = (function (arglist__28064){
var args = cljs.core.seq(arglist__28064);
return G__28060__delegate(args);
});
G__28060.cljs$core$IFn$_invoke$arity$variadic = G__28060__delegate;
return G__28060;
})()
;
;})(fs__$1))
};
var G__28059 = function (f1,f2,f3,var_args){
var fs = null;
if (arguments.length > 3) {
var G__28065__i = 0, G__28065__a = new Array(arguments.length -  3);
while (G__28065__i < G__28065__a.length) {G__28065__a[G__28065__i] = arguments[G__28065__i + 3]; ++G__28065__i;}
  fs = new cljs.core.IndexedSeq(G__28065__a,0);
} 
return G__28059__delegate.call(this,f1,f2,f3,fs);};
G__28059.cljs$lang$maxFixedArity = 3;
G__28059.cljs$lang$applyTo = (function (arglist__28066){
var f1 = cljs.core.first(arglist__28066);
arglist__28066 = cljs.core.next(arglist__28066);
var f2 = cljs.core.first(arglist__28066);
arglist__28066 = cljs.core.next(arglist__28066);
var f3 = cljs.core.first(arglist__28066);
var fs = cljs.core.rest(arglist__28066);
return G__28059__delegate(f1,f2,f3,fs);
});
G__28059.cljs$core$IFn$_invoke$arity$variadic = G__28059__delegate;
return G__28059;
})()
;
comp = function(f1,f2,f3,var_args){
var fs = var_args;
switch(arguments.length){
case 0:
return comp__0.call(this);
case 1:
return comp__1.call(this,f1);
case 2:
return comp__2.call(this,f1,f2);
case 3:
return comp__3.call(this,f1,f2,f3);
default:
var G__28067 = null;
if (arguments.length > 3) {
var G__28068__i = 0, G__28068__a = new Array(arguments.length -  3);
while (G__28068__i < G__28068__a.length) {G__28068__a[G__28068__i] = arguments[G__28068__i + 3]; ++G__28068__i;}
G__28067 = new cljs.core.IndexedSeq(G__28068__a,0);
}
return comp__4.cljs$core$IFn$_invoke$arity$variadic(f1,f2,f3, G__28067);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
comp.cljs$lang$maxFixedArity = 3;
comp.cljs$lang$applyTo = comp__4.cljs$lang$applyTo;
comp.cljs$core$IFn$_invoke$arity$0 = comp__0;
comp.cljs$core$IFn$_invoke$arity$1 = comp__1;
comp.cljs$core$IFn$_invoke$arity$2 = comp__2;
comp.cljs$core$IFn$_invoke$arity$3 = comp__3;
comp.cljs$core$IFn$_invoke$arity$variadic = comp__4.cljs$core$IFn$_invoke$arity$variadic;
return comp;
})()
;
/**
* Takes a function f and fewer than the normal arguments to f, and
* returns a fn that takes a variable number of additional args. When
* called, the returned function calls f with args + additional args.
* @param {...*} var_args
*/
cljs.core.partial = (function() {
var partial = null;
var partial__1 = (function (f){
return f;
});
var partial__2 = (function (f,arg1){
return (function() {
var G__28153 = null;
var G__28153__0 = (function (){
var G__28111 = arg1;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__28111) : f.call(null,G__28111));
});
var G__28153__1 = (function (x){
var G__28112 = arg1;
var G__28113 = x;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__28112,G__28113) : f.call(null,G__28112,G__28113));
});
var G__28153__2 = (function (x,y){
var G__28114 = arg1;
var G__28115 = x;
var G__28116 = y;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__28114,G__28115,G__28116) : f.call(null,G__28114,G__28115,G__28116));
});
var G__28153__3 = (function (x,y,z){
var G__28117 = arg1;
var G__28118 = x;
var G__28119 = y;
var G__28120 = z;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__28117,G__28118,G__28119,G__28120) : f.call(null,G__28117,G__28118,G__28119,G__28120));
});
var G__28153__4 = (function() { 
var G__28154__delegate = function (x,y,z,args){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f,arg1,x,y,z,cljs.core.array_seq([args], 0));
};
var G__28154 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__28155__i = 0, G__28155__a = new Array(arguments.length -  3);
while (G__28155__i < G__28155__a.length) {G__28155__a[G__28155__i] = arguments[G__28155__i + 3]; ++G__28155__i;}
  args = new cljs.core.IndexedSeq(G__28155__a,0);
} 
return G__28154__delegate.call(this,x,y,z,args);};
G__28154.cljs$lang$maxFixedArity = 3;
G__28154.cljs$lang$applyTo = (function (arglist__28156){
var x = cljs.core.first(arglist__28156);
arglist__28156 = cljs.core.next(arglist__28156);
var y = cljs.core.first(arglist__28156);
arglist__28156 = cljs.core.next(arglist__28156);
var z = cljs.core.first(arglist__28156);
var args = cljs.core.rest(arglist__28156);
return G__28154__delegate(x,y,z,args);
});
G__28154.cljs$core$IFn$_invoke$arity$variadic = G__28154__delegate;
return G__28154;
})()
;
G__28153 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__28153__0.call(this);
case 1:
return G__28153__1.call(this,x);
case 2:
return G__28153__2.call(this,x,y);
case 3:
return G__28153__3.call(this,x,y,z);
default:
var G__28157 = null;
if (arguments.length > 3) {
var G__28158__i = 0, G__28158__a = new Array(arguments.length -  3);
while (G__28158__i < G__28158__a.length) {G__28158__a[G__28158__i] = arguments[G__28158__i + 3]; ++G__28158__i;}
G__28157 = new cljs.core.IndexedSeq(G__28158__a,0);
}
return G__28153__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__28157);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__28153.cljs$lang$maxFixedArity = 3;
G__28153.cljs$lang$applyTo = G__28153__4.cljs$lang$applyTo;
G__28153.cljs$core$IFn$_invoke$arity$0 = G__28153__0;
G__28153.cljs$core$IFn$_invoke$arity$1 = G__28153__1;
G__28153.cljs$core$IFn$_invoke$arity$2 = G__28153__2;
G__28153.cljs$core$IFn$_invoke$arity$3 = G__28153__3;
G__28153.cljs$core$IFn$_invoke$arity$variadic = G__28153__4.cljs$core$IFn$_invoke$arity$variadic;
return G__28153;
})()
});
var partial__3 = (function (f,arg1,arg2){
return (function() {
var G__28159 = null;
var G__28159__0 = (function (){
var G__28121 = arg1;
var G__28122 = arg2;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__28121,G__28122) : f.call(null,G__28121,G__28122));
});
var G__28159__1 = (function (x){
var G__28123 = arg1;
var G__28124 = arg2;
var G__28125 = x;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__28123,G__28124,G__28125) : f.call(null,G__28123,G__28124,G__28125));
});
var G__28159__2 = (function (x,y){
var G__28126 = arg1;
var G__28127 = arg2;
var G__28128 = x;
var G__28129 = y;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__28126,G__28127,G__28128,G__28129) : f.call(null,G__28126,G__28127,G__28128,G__28129));
});
var G__28159__3 = (function (x,y,z){
var G__28130 = arg1;
var G__28131 = arg2;
var G__28132 = x;
var G__28133 = y;
var G__28134 = z;
return (f.cljs$core$IFn$_invoke$arity$5 ? f.cljs$core$IFn$_invoke$arity$5(G__28130,G__28131,G__28132,G__28133,G__28134) : f.call(null,G__28130,G__28131,G__28132,G__28133,G__28134));
});
var G__28159__4 = (function() { 
var G__28160__delegate = function (x,y,z,args){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f,arg1,arg2,x,y,cljs.core.array_seq([z,args], 0));
};
var G__28160 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__28161__i = 0, G__28161__a = new Array(arguments.length -  3);
while (G__28161__i < G__28161__a.length) {G__28161__a[G__28161__i] = arguments[G__28161__i + 3]; ++G__28161__i;}
  args = new cljs.core.IndexedSeq(G__28161__a,0);
} 
return G__28160__delegate.call(this,x,y,z,args);};
G__28160.cljs$lang$maxFixedArity = 3;
G__28160.cljs$lang$applyTo = (function (arglist__28162){
var x = cljs.core.first(arglist__28162);
arglist__28162 = cljs.core.next(arglist__28162);
var y = cljs.core.first(arglist__28162);
arglist__28162 = cljs.core.next(arglist__28162);
var z = cljs.core.first(arglist__28162);
var args = cljs.core.rest(arglist__28162);
return G__28160__delegate(x,y,z,args);
});
G__28160.cljs$core$IFn$_invoke$arity$variadic = G__28160__delegate;
return G__28160;
})()
;
G__28159 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__28159__0.call(this);
case 1:
return G__28159__1.call(this,x);
case 2:
return G__28159__2.call(this,x,y);
case 3:
return G__28159__3.call(this,x,y,z);
default:
var G__28163 = null;
if (arguments.length > 3) {
var G__28164__i = 0, G__28164__a = new Array(arguments.length -  3);
while (G__28164__i < G__28164__a.length) {G__28164__a[G__28164__i] = arguments[G__28164__i + 3]; ++G__28164__i;}
G__28163 = new cljs.core.IndexedSeq(G__28164__a,0);
}
return G__28159__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__28163);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__28159.cljs$lang$maxFixedArity = 3;
G__28159.cljs$lang$applyTo = G__28159__4.cljs$lang$applyTo;
G__28159.cljs$core$IFn$_invoke$arity$0 = G__28159__0;
G__28159.cljs$core$IFn$_invoke$arity$1 = G__28159__1;
G__28159.cljs$core$IFn$_invoke$arity$2 = G__28159__2;
G__28159.cljs$core$IFn$_invoke$arity$3 = G__28159__3;
G__28159.cljs$core$IFn$_invoke$arity$variadic = G__28159__4.cljs$core$IFn$_invoke$arity$variadic;
return G__28159;
})()
});
var partial__4 = (function (f,arg1,arg2,arg3){
return (function() {
var G__28165 = null;
var G__28165__0 = (function (){
var G__28135 = arg1;
var G__28136 = arg2;
var G__28137 = arg3;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__28135,G__28136,G__28137) : f.call(null,G__28135,G__28136,G__28137));
});
var G__28165__1 = (function (x){
var G__28138 = arg1;
var G__28139 = arg2;
var G__28140 = arg3;
var G__28141 = x;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__28138,G__28139,G__28140,G__28141) : f.call(null,G__28138,G__28139,G__28140,G__28141));
});
var G__28165__2 = (function (x,y){
var G__28142 = arg1;
var G__28143 = arg2;
var G__28144 = arg3;
var G__28145 = x;
var G__28146 = y;
return (f.cljs$core$IFn$_invoke$arity$5 ? f.cljs$core$IFn$_invoke$arity$5(G__28142,G__28143,G__28144,G__28145,G__28146) : f.call(null,G__28142,G__28143,G__28144,G__28145,G__28146));
});
var G__28165__3 = (function (x,y,z){
var G__28147 = arg1;
var G__28148 = arg2;
var G__28149 = arg3;
var G__28150 = x;
var G__28151 = y;
var G__28152 = z;
return (f.cljs$core$IFn$_invoke$arity$6 ? f.cljs$core$IFn$_invoke$arity$6(G__28147,G__28148,G__28149,G__28150,G__28151,G__28152) : f.call(null,G__28147,G__28148,G__28149,G__28150,G__28151,G__28152));
});
var G__28165__4 = (function() { 
var G__28166__delegate = function (x,y,z,args){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f,arg1,arg2,arg3,x,cljs.core.array_seq([y,z,args], 0));
};
var G__28166 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__28167__i = 0, G__28167__a = new Array(arguments.length -  3);
while (G__28167__i < G__28167__a.length) {G__28167__a[G__28167__i] = arguments[G__28167__i + 3]; ++G__28167__i;}
  args = new cljs.core.IndexedSeq(G__28167__a,0);
} 
return G__28166__delegate.call(this,x,y,z,args);};
G__28166.cljs$lang$maxFixedArity = 3;
G__28166.cljs$lang$applyTo = (function (arglist__28168){
var x = cljs.core.first(arglist__28168);
arglist__28168 = cljs.core.next(arglist__28168);
var y = cljs.core.first(arglist__28168);
arglist__28168 = cljs.core.next(arglist__28168);
var z = cljs.core.first(arglist__28168);
var args = cljs.core.rest(arglist__28168);
return G__28166__delegate(x,y,z,args);
});
G__28166.cljs$core$IFn$_invoke$arity$variadic = G__28166__delegate;
return G__28166;
})()
;
G__28165 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__28165__0.call(this);
case 1:
return G__28165__1.call(this,x);
case 2:
return G__28165__2.call(this,x,y);
case 3:
return G__28165__3.call(this,x,y,z);
default:
var G__28169 = null;
if (arguments.length > 3) {
var G__28170__i = 0, G__28170__a = new Array(arguments.length -  3);
while (G__28170__i < G__28170__a.length) {G__28170__a[G__28170__i] = arguments[G__28170__i + 3]; ++G__28170__i;}
G__28169 = new cljs.core.IndexedSeq(G__28170__a,0);
}
return G__28165__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__28169);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__28165.cljs$lang$maxFixedArity = 3;
G__28165.cljs$lang$applyTo = G__28165__4.cljs$lang$applyTo;
G__28165.cljs$core$IFn$_invoke$arity$0 = G__28165__0;
G__28165.cljs$core$IFn$_invoke$arity$1 = G__28165__1;
G__28165.cljs$core$IFn$_invoke$arity$2 = G__28165__2;
G__28165.cljs$core$IFn$_invoke$arity$3 = G__28165__3;
G__28165.cljs$core$IFn$_invoke$arity$variadic = G__28165__4.cljs$core$IFn$_invoke$arity$variadic;
return G__28165;
})()
});
var partial__5 = (function() { 
var G__28171__delegate = function (f,arg1,arg2,arg3,more){
return (function() { 
var G__28172__delegate = function (args){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,arg1,arg2,arg3,cljs.core.concat.cljs$core$IFn$_invoke$arity$2(more,args));
};
var G__28172 = function (var_args){
var args = null;
if (arguments.length > 0) {
var G__28173__i = 0, G__28173__a = new Array(arguments.length -  0);
while (G__28173__i < G__28173__a.length) {G__28173__a[G__28173__i] = arguments[G__28173__i + 0]; ++G__28173__i;}
  args = new cljs.core.IndexedSeq(G__28173__a,0);
} 
return G__28172__delegate.call(this,args);};
G__28172.cljs$lang$maxFixedArity = 0;
G__28172.cljs$lang$applyTo = (function (arglist__28174){
var args = cljs.core.seq(arglist__28174);
return G__28172__delegate(args);
});
G__28172.cljs$core$IFn$_invoke$arity$variadic = G__28172__delegate;
return G__28172;
})()
;
};
var G__28171 = function (f,arg1,arg2,arg3,var_args){
var more = null;
if (arguments.length > 4) {
var G__28175__i = 0, G__28175__a = new Array(arguments.length -  4);
while (G__28175__i < G__28175__a.length) {G__28175__a[G__28175__i] = arguments[G__28175__i + 4]; ++G__28175__i;}
  more = new cljs.core.IndexedSeq(G__28175__a,0);
} 
return G__28171__delegate.call(this,f,arg1,arg2,arg3,more);};
G__28171.cljs$lang$maxFixedArity = 4;
G__28171.cljs$lang$applyTo = (function (arglist__28176){
var f = cljs.core.first(arglist__28176);
arglist__28176 = cljs.core.next(arglist__28176);
var arg1 = cljs.core.first(arglist__28176);
arglist__28176 = cljs.core.next(arglist__28176);
var arg2 = cljs.core.first(arglist__28176);
arglist__28176 = cljs.core.next(arglist__28176);
var arg3 = cljs.core.first(arglist__28176);
var more = cljs.core.rest(arglist__28176);
return G__28171__delegate(f,arg1,arg2,arg3,more);
});
G__28171.cljs$core$IFn$_invoke$arity$variadic = G__28171__delegate;
return G__28171;
})()
;
partial = function(f,arg1,arg2,arg3,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return partial__1.call(this,f);
case 2:
return partial__2.call(this,f,arg1);
case 3:
return partial__3.call(this,f,arg1,arg2);
case 4:
return partial__4.call(this,f,arg1,arg2,arg3);
default:
var G__28177 = null;
if (arguments.length > 4) {
var G__28178__i = 0, G__28178__a = new Array(arguments.length -  4);
while (G__28178__i < G__28178__a.length) {G__28178__a[G__28178__i] = arguments[G__28178__i + 4]; ++G__28178__i;}
G__28177 = new cljs.core.IndexedSeq(G__28178__a,0);
}
return partial__5.cljs$core$IFn$_invoke$arity$variadic(f,arg1,arg2,arg3, G__28177);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
partial.cljs$lang$maxFixedArity = 4;
partial.cljs$lang$applyTo = partial__5.cljs$lang$applyTo;
partial.cljs$core$IFn$_invoke$arity$1 = partial__1;
partial.cljs$core$IFn$_invoke$arity$2 = partial__2;
partial.cljs$core$IFn$_invoke$arity$3 = partial__3;
partial.cljs$core$IFn$_invoke$arity$4 = partial__4;
partial.cljs$core$IFn$_invoke$arity$variadic = partial__5.cljs$core$IFn$_invoke$arity$variadic;
return partial;
})()
;
/**
* Takes a function f, and returns a function that calls f, replacing
* a nil first argument to f with the supplied value x. Higher arity
* versions can replace arguments in the second and third
* positions (y, z). Note that the function f can take any number of
* arguments, not just the one(s) being nil-patched.
*/
cljs.core.fnil = (function() {
var fnil = null;
var fnil__2 = (function (f,x){
return (function() {
var G__28211 = null;
var G__28211__1 = (function (a){
var G__28195 = (((a == null))?x:a);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__28195) : f.call(null,G__28195));
});
var G__28211__2 = (function (a,b){
var G__28196 = (((a == null))?x:a);
var G__28197 = b;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__28196,G__28197) : f.call(null,G__28196,G__28197));
});
var G__28211__3 = (function (a,b,c){
var G__28198 = (((a == null))?x:a);
var G__28199 = b;
var G__28200 = c;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__28198,G__28199,G__28200) : f.call(null,G__28198,G__28199,G__28200));
});
var G__28211__4 = (function() { 
var G__28212__delegate = function (a,b,c,ds){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,(((a == null))?x:a),b,c,ds);
};
var G__28212 = function (a,b,c,var_args){
var ds = null;
if (arguments.length > 3) {
var G__28213__i = 0, G__28213__a = new Array(arguments.length -  3);
while (G__28213__i < G__28213__a.length) {G__28213__a[G__28213__i] = arguments[G__28213__i + 3]; ++G__28213__i;}
  ds = new cljs.core.IndexedSeq(G__28213__a,0);
} 
return G__28212__delegate.call(this,a,b,c,ds);};
G__28212.cljs$lang$maxFixedArity = 3;
G__28212.cljs$lang$applyTo = (function (arglist__28214){
var a = cljs.core.first(arglist__28214);
arglist__28214 = cljs.core.next(arglist__28214);
var b = cljs.core.first(arglist__28214);
arglist__28214 = cljs.core.next(arglist__28214);
var c = cljs.core.first(arglist__28214);
var ds = cljs.core.rest(arglist__28214);
return G__28212__delegate(a,b,c,ds);
});
G__28212.cljs$core$IFn$_invoke$arity$variadic = G__28212__delegate;
return G__28212;
})()
;
G__28211 = function(a,b,c,var_args){
var ds = var_args;
switch(arguments.length){
case 1:
return G__28211__1.call(this,a);
case 2:
return G__28211__2.call(this,a,b);
case 3:
return G__28211__3.call(this,a,b,c);
default:
var G__28215 = null;
if (arguments.length > 3) {
var G__28216__i = 0, G__28216__a = new Array(arguments.length -  3);
while (G__28216__i < G__28216__a.length) {G__28216__a[G__28216__i] = arguments[G__28216__i + 3]; ++G__28216__i;}
G__28215 = new cljs.core.IndexedSeq(G__28216__a,0);
}
return G__28211__4.cljs$core$IFn$_invoke$arity$variadic(a,b,c, G__28215);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__28211.cljs$lang$maxFixedArity = 3;
G__28211.cljs$lang$applyTo = G__28211__4.cljs$lang$applyTo;
G__28211.cljs$core$IFn$_invoke$arity$1 = G__28211__1;
G__28211.cljs$core$IFn$_invoke$arity$2 = G__28211__2;
G__28211.cljs$core$IFn$_invoke$arity$3 = G__28211__3;
G__28211.cljs$core$IFn$_invoke$arity$variadic = G__28211__4.cljs$core$IFn$_invoke$arity$variadic;
return G__28211;
})()
});
var fnil__3 = (function (f,x,y){
return (function() {
var G__28217 = null;
var G__28217__2 = (function (a,b){
var G__28201 = (((a == null))?x:a);
var G__28202 = (((b == null))?y:b);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__28201,G__28202) : f.call(null,G__28201,G__28202));
});
var G__28217__3 = (function (a,b,c){
var G__28203 = (((a == null))?x:a);
var G__28204 = (((b == null))?y:b);
var G__28205 = c;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__28203,G__28204,G__28205) : f.call(null,G__28203,G__28204,G__28205));
});
var G__28217__4 = (function() { 
var G__28218__delegate = function (a,b,c,ds){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,(((a == null))?x:a),(((b == null))?y:b),c,ds);
};
var G__28218 = function (a,b,c,var_args){
var ds = null;
if (arguments.length > 3) {
var G__28219__i = 0, G__28219__a = new Array(arguments.length -  3);
while (G__28219__i < G__28219__a.length) {G__28219__a[G__28219__i] = arguments[G__28219__i + 3]; ++G__28219__i;}
  ds = new cljs.core.IndexedSeq(G__28219__a,0);
} 
return G__28218__delegate.call(this,a,b,c,ds);};
G__28218.cljs$lang$maxFixedArity = 3;
G__28218.cljs$lang$applyTo = (function (arglist__28220){
var a = cljs.core.first(arglist__28220);
arglist__28220 = cljs.core.next(arglist__28220);
var b = cljs.core.first(arglist__28220);
arglist__28220 = cljs.core.next(arglist__28220);
var c = cljs.core.first(arglist__28220);
var ds = cljs.core.rest(arglist__28220);
return G__28218__delegate(a,b,c,ds);
});
G__28218.cljs$core$IFn$_invoke$arity$variadic = G__28218__delegate;
return G__28218;
})()
;
G__28217 = function(a,b,c,var_args){
var ds = var_args;
switch(arguments.length){
case 2:
return G__28217__2.call(this,a,b);
case 3:
return G__28217__3.call(this,a,b,c);
default:
var G__28221 = null;
if (arguments.length > 3) {
var G__28222__i = 0, G__28222__a = new Array(arguments.length -  3);
while (G__28222__i < G__28222__a.length) {G__28222__a[G__28222__i] = arguments[G__28222__i + 3]; ++G__28222__i;}
G__28221 = new cljs.core.IndexedSeq(G__28222__a,0);
}
return G__28217__4.cljs$core$IFn$_invoke$arity$variadic(a,b,c, G__28221);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__28217.cljs$lang$maxFixedArity = 3;
G__28217.cljs$lang$applyTo = G__28217__4.cljs$lang$applyTo;
G__28217.cljs$core$IFn$_invoke$arity$2 = G__28217__2;
G__28217.cljs$core$IFn$_invoke$arity$3 = G__28217__3;
G__28217.cljs$core$IFn$_invoke$arity$variadic = G__28217__4.cljs$core$IFn$_invoke$arity$variadic;
return G__28217;
})()
});
var fnil__4 = (function (f,x,y,z){
return (function() {
var G__28223 = null;
var G__28223__2 = (function (a,b){
var G__28206 = (((a == null))?x:a);
var G__28207 = (((b == null))?y:b);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__28206,G__28207) : f.call(null,G__28206,G__28207));
});
var G__28223__3 = (function (a,b,c){
var G__28208 = (((a == null))?x:a);
var G__28209 = (((b == null))?y:b);
var G__28210 = (((c == null))?z:c);
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__28208,G__28209,G__28210) : f.call(null,G__28208,G__28209,G__28210));
});
var G__28223__4 = (function() { 
var G__28224__delegate = function (a,b,c,ds){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,(((a == null))?x:a),(((b == null))?y:b),(((c == null))?z:c),ds);
};
var G__28224 = function (a,b,c,var_args){
var ds = null;
if (arguments.length > 3) {
var G__28225__i = 0, G__28225__a = new Array(arguments.length -  3);
while (G__28225__i < G__28225__a.length) {G__28225__a[G__28225__i] = arguments[G__28225__i + 3]; ++G__28225__i;}
  ds = new cljs.core.IndexedSeq(G__28225__a,0);
} 
return G__28224__delegate.call(this,a,b,c,ds);};
G__28224.cljs$lang$maxFixedArity = 3;
G__28224.cljs$lang$applyTo = (function (arglist__28226){
var a = cljs.core.first(arglist__28226);
arglist__28226 = cljs.core.next(arglist__28226);
var b = cljs.core.first(arglist__28226);
arglist__28226 = cljs.core.next(arglist__28226);
var c = cljs.core.first(arglist__28226);
var ds = cljs.core.rest(arglist__28226);
return G__28224__delegate(a,b,c,ds);
});
G__28224.cljs$core$IFn$_invoke$arity$variadic = G__28224__delegate;
return G__28224;
})()
;
G__28223 = function(a,b,c,var_args){
var ds = var_args;
switch(arguments.length){
case 2:
return G__28223__2.call(this,a,b);
case 3:
return G__28223__3.call(this,a,b,c);
default:
var G__28227 = null;
if (arguments.length > 3) {
var G__28228__i = 0, G__28228__a = new Array(arguments.length -  3);
while (G__28228__i < G__28228__a.length) {G__28228__a[G__28228__i] = arguments[G__28228__i + 3]; ++G__28228__i;}
G__28227 = new cljs.core.IndexedSeq(G__28228__a,0);
}
return G__28223__4.cljs$core$IFn$_invoke$arity$variadic(a,b,c, G__28227);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__28223.cljs$lang$maxFixedArity = 3;
G__28223.cljs$lang$applyTo = G__28223__4.cljs$lang$applyTo;
G__28223.cljs$core$IFn$_invoke$arity$2 = G__28223__2;
G__28223.cljs$core$IFn$_invoke$arity$3 = G__28223__3;
G__28223.cljs$core$IFn$_invoke$arity$variadic = G__28223__4.cljs$core$IFn$_invoke$arity$variadic;
return G__28223;
})()
});
fnil = function(f,x,y,z){
switch(arguments.length){
case 2:
return fnil__2.call(this,f,x);
case 3:
return fnil__3.call(this,f,x,y);
case 4:
return fnil__4.call(this,f,x,y,z);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
fnil.cljs$core$IFn$_invoke$arity$2 = fnil__2;
fnil.cljs$core$IFn$_invoke$arity$3 = fnil__3;
fnil.cljs$core$IFn$_invoke$arity$4 = fnil__4;
return fnil;
})()
;
/**
* Returns a lazy sequence consisting of the result of applying f to 0
* and the first item of coll, followed by applying f to 1 and the second
* item in coll, etc, until coll is exhausted. Thus function f should
* accept 2 arguments, index and item.
*/
cljs.core.map_indexed = (function map_indexed(f,coll){
var mapi = (function mapi(idx,coll__$1){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll__$1);
if(temp__4126__auto__){
var s = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(s)){
var c = cljs.core.chunk_first(s);
var size = cljs.core.count(c);
var b = cljs.core.chunk_buffer(size);
var n__25161__auto___28277 = size;
var i_28278 = (0);
while(true){
if((i_28278 < n__25161__auto___28277)){
cljs.core.chunk_append(b,(function (){var G__28273 = (idx + i_28278);
var G__28274 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c,i_28278);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__28273,G__28274) : f.call(null,G__28273,G__28274));
})());

var G__28279 = (i_28278 + (1));
i_28278 = G__28279;
continue;
} else {
}
break;
}

return cljs.core.chunk_cons(cljs.core.chunk(b),mapi((idx + size),cljs.core.chunk_rest(s)));
} else {
return cljs.core.cons((function (){var G__28275 = idx;
var G__28276 = cljs.core.first(s);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__28275,G__28276) : f.call(null,G__28275,G__28276));
})(),mapi((idx + (1)),cljs.core.rest(s)));
}
} else {
return null;
}
}),null,null));
});
return mapi((0),coll);
});
/**
* Returns a lazy sequence of the non-nil results of (f item). Note,
* this means false return values will be included.  f must be free of
* side-effects.  Returns a transducer when no collection is provided.
*/
cljs.core.keep = (function() {
var keep = null;
var keep__1 = (function (f){
return (function (rf){
return (function() {
var G__28298 = null;
var G__28298__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__28298__1 = (function (result){
var G__28292 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__28292) : rf.call(null,G__28292));
});
var G__28298__2 = (function (result,input){
var v = (function (){var G__28293 = input;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__28293) : f.call(null,G__28293));
})();
if((v == null)){
return result;
} else {
var G__28294 = result;
var G__28295 = v;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__28294,G__28295) : rf.call(null,G__28294,G__28295));
}
});
G__28298 = function(result,input){
switch(arguments.length){
case 0:
return G__28298__0.call(this);
case 1:
return G__28298__1.call(this,result);
case 2:
return G__28298__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__28298.cljs$core$IFn$_invoke$arity$0 = G__28298__0;
G__28298.cljs$core$IFn$_invoke$arity$1 = G__28298__1;
G__28298.cljs$core$IFn$_invoke$arity$2 = G__28298__2;
return G__28298;
})()
});
});
var keep__2 = (function (f,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(s)){
var c = cljs.core.chunk_first(s);
var size = cljs.core.count(c);
var b = cljs.core.chunk_buffer(size);
var n__25161__auto___28299 = size;
var i_28300 = (0);
while(true){
if((i_28300 < n__25161__auto___28299)){
var x_28301 = (function (){var G__28296 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c,i_28300);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__28296) : f.call(null,G__28296));
})();
if((x_28301 == null)){
} else {
cljs.core.chunk_append(b,x_28301);
}

var G__28302 = (i_28300 + (1));
i_28300 = G__28302;
continue;
} else {
}
break;
}

return cljs.core.chunk_cons(cljs.core.chunk(b),keep.cljs$core$IFn$_invoke$arity$2(f,cljs.core.chunk_rest(s)));
} else {
var x = (function (){var G__28297 = cljs.core.first(s);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__28297) : f.call(null,G__28297));
})();
if((x == null)){
return keep.cljs$core$IFn$_invoke$arity$2(f,cljs.core.rest(s));
} else {
return cljs.core.cons(x,keep.cljs$core$IFn$_invoke$arity$2(f,cljs.core.rest(s)));
}
}
} else {
return null;
}
}),null,null));
});
keep = function(f,coll){
switch(arguments.length){
case 1:
return keep__1.call(this,f);
case 2:
return keep__2.call(this,f,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
keep.cljs$core$IFn$_invoke$arity$1 = keep__1;
keep.cljs$core$IFn$_invoke$arity$2 = keep__2;
return keep;
})()
;

/**
* @constructor
*/
cljs.core.Atom = (function (state,meta,validator,watches){
this.state = state;
this.meta = meta;
this.validator = validator;
this.watches = watches;
this.cljs$lang$protocol_mask$partition0$ = 6455296;
this.cljs$lang$protocol_mask$partition1$ = 16386;
})
cljs.core.Atom.prototype.cljs$core$IHash$_hash$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
var G__28303 = this$__$1;
return goog.getUid(G__28303);
});

cljs.core.Atom.prototype.cljs$core$IWatchable$_notify_watches$arity$3 = (function (this$,oldval,newval){
var self__ = this;
var this$__$1 = this;
var seq__28304 = cljs.core.seq(self__.watches);
var chunk__28305 = null;
var count__28306 = (0);
var i__28307 = (0);
while(true){
if((i__28307 < count__28306)){
var vec__28308 = chunk__28305.cljs$core$IIndexed$_nth$arity$2(null,i__28307);
var key = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__28308,(0),null);
var f = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__28308,(1),null);
var G__28309_28318 = key;
var G__28310_28319 = this$__$1;
var G__28311_28320 = oldval;
var G__28312_28321 = newval;
(f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__28309_28318,G__28310_28319,G__28311_28320,G__28312_28321) : f.call(null,G__28309_28318,G__28310_28319,G__28311_28320,G__28312_28321));

var G__28322 = seq__28304;
var G__28323 = chunk__28305;
var G__28324 = count__28306;
var G__28325 = (i__28307 + (1));
seq__28304 = G__28322;
chunk__28305 = G__28323;
count__28306 = G__28324;
i__28307 = G__28325;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__28304);
if(temp__4126__auto__){
var seq__28304__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__28304__$1)){
var c__25061__auto__ = cljs.core.chunk_first(seq__28304__$1);
var G__28326 = cljs.core.chunk_rest(seq__28304__$1);
var G__28327 = c__25061__auto__;
var G__28328 = cljs.core.count(c__25061__auto__);
var G__28329 = (0);
seq__28304 = G__28326;
chunk__28305 = G__28327;
count__28306 = G__28328;
i__28307 = G__28329;
continue;
} else {
var vec__28313 = cljs.core.first(seq__28304__$1);
var key = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__28313,(0),null);
var f = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__28313,(1),null);
var G__28314_28330 = key;
var G__28315_28331 = this$__$1;
var G__28316_28332 = oldval;
var G__28317_28333 = newval;
(f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__28314_28330,G__28315_28331,G__28316_28332,G__28317_28333) : f.call(null,G__28314_28330,G__28315_28331,G__28316_28332,G__28317_28333));

var G__28334 = cljs.core.next(seq__28304__$1);
var G__28335 = null;
var G__28336 = (0);
var G__28337 = (0);
seq__28304 = G__28334;
chunk__28305 = G__28335;
count__28306 = G__28336;
i__28307 = G__28337;
continue;
}
} else {
return null;
}
}
break;
}
});

cljs.core.Atom.prototype.cljs$core$IWatchable$_add_watch$arity$3 = (function (this$,key,f){
var self__ = this;
var this$__$1 = this;
this$__$1.watches = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.watches,key,f);

return this$__$1;
});

cljs.core.Atom.prototype.cljs$core$IWatchable$_remove_watch$arity$2 = (function (this$,key){
var self__ = this;
var this$__$1 = this;
return this$__$1.watches = cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(self__.watches,key);
});

cljs.core.Atom.prototype.cljs$core$IMeta$_meta$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.meta;
});

cljs.core.Atom.prototype.cljs$core$IDeref$_deref$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.state;
});

cljs.core.Atom.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (o,other){
var self__ = this;
var o__$1 = this;
return (o__$1 === other);
});

cljs.core.Atom.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.Atom.cljs$lang$type = true;

cljs.core.Atom.cljs$lang$ctorStr = "cljs.core/Atom";

cljs.core.Atom.cljs$lang$ctorPrWriter = (function (this__24861__auto__,writer__24862__auto__,opt__24863__auto__){
return cljs.core._write(writer__24862__auto__,"cljs.core/Atom");
});

cljs.core.__GT_Atom = (function __GT_Atom(state,meta,validator,watches){
return (new cljs.core.Atom(state,meta,validator,watches));
});

/**
* Creates and returns an Atom with an initial value of x and zero or
* more options (in any order):
* 
* :meta metadata-map
* 
* :validator validate-fn
* 
* If metadata-map is supplied, it will be come the metadata on the
* atom. validate-fn must be nil or a side-effect-free fn of one
* argument, which will be passed the intended new state on any state
* change. If the new state is unacceptable, the validate-fn should
* return false or throw an Error.  If either of these error conditions
* occur, then the value of the atom will not change.
* @param {...*} var_args
*/
cljs.core.atom = (function() {
var atom = null;
var atom__1 = (function (x){
return (new cljs.core.Atom(x,null,null,null));
});
var atom__2 = (function() { 
var G__28341__delegate = function (x,p__28338){
var map__28340 = p__28338;
var map__28340__$1 = ((cljs.core.seq_QMARK_(map__28340))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__28340):map__28340);
var validator = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__28340__$1,new cljs.core.Keyword(null,"validator","validator",-1966190681));
var meta = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__28340__$1,new cljs.core.Keyword(null,"meta","meta",1499536964));
return (new cljs.core.Atom(x,meta,validator,null));
};
var G__28341 = function (x,var_args){
var p__28338 = null;
if (arguments.length > 1) {
var G__28342__i = 0, G__28342__a = new Array(arguments.length -  1);
while (G__28342__i < G__28342__a.length) {G__28342__a[G__28342__i] = arguments[G__28342__i + 1]; ++G__28342__i;}
  p__28338 = new cljs.core.IndexedSeq(G__28342__a,0);
} 
return G__28341__delegate.call(this,x,p__28338);};
G__28341.cljs$lang$maxFixedArity = 1;
G__28341.cljs$lang$applyTo = (function (arglist__28343){
var x = cljs.core.first(arglist__28343);
var p__28338 = cljs.core.rest(arglist__28343);
return G__28341__delegate(x,p__28338);
});
G__28341.cljs$core$IFn$_invoke$arity$variadic = G__28341__delegate;
return G__28341;
})()
;
atom = function(x,var_args){
var p__28338 = var_args;
switch(arguments.length){
case 1:
return atom__1.call(this,x);
default:
var G__28344 = null;
if (arguments.length > 1) {
var G__28345__i = 0, G__28345__a = new Array(arguments.length -  1);
while (G__28345__i < G__28345__a.length) {G__28345__a[G__28345__i] = arguments[G__28345__i + 1]; ++G__28345__i;}
G__28344 = new cljs.core.IndexedSeq(G__28345__a,0);
}
return atom__2.cljs$core$IFn$_invoke$arity$variadic(x, G__28344);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
atom.cljs$lang$maxFixedArity = 1;
atom.cljs$lang$applyTo = atom__2.cljs$lang$applyTo;
atom.cljs$core$IFn$_invoke$arity$1 = atom__1;
atom.cljs$core$IFn$_invoke$arity$variadic = atom__2.cljs$core$IFn$_invoke$arity$variadic;
return atom;
})()
;
/**
* Sets the value of atom to newval without regard for the
* current value. Returns newval.
*/
cljs.core.reset_BANG_ = (function reset_BANG_(a,new_value){
if((a instanceof cljs.core.Atom)){
var validate = a.validator;
if((validate == null)){
} else {
if(cljs.core.truth_((function (){var G__28348 = new_value;
return (validate.cljs$core$IFn$_invoke$arity$1 ? validate.cljs$core$IFn$_invoke$arity$1(G__28348) : validate.call(null,G__28348));
})())){
} else {
throw (new Error([cljs.core.str("Assert failed: "),cljs.core.str("Validator rejected reference state"),cljs.core.str("\n"),cljs.core.str((function (){var G__28349 = cljs.core.list(new cljs.core.Symbol(null,"validate","validate",1439230700,null),new cljs.core.Symbol(null,"new-value","new-value",-1567397401,null));
return (cljs.core.pr_str.cljs$core$IFn$_invoke$arity$1 ? cljs.core.pr_str.cljs$core$IFn$_invoke$arity$1(G__28349) : cljs.core.pr_str.call(null,G__28349));
})())].join('')));
}
}

var old_value = a.state;
a.state = new_value;

if((a.watches == null)){
} else {
cljs.core._notify_watches(a,old_value,new_value);
}

return new_value;
} else {
return cljs.core._reset_BANG_(a,new_value);
}
});
/**
* Atomically swaps the value of atom to be:
* (apply f current-value-of-atom args). Note that f may be called
* multiple times, and thus should be free of side effects.  Returns
* the value that was swapped in.
* @param {...*} var_args
*/
cljs.core.swap_BANG_ = (function() {
var swap_BANG_ = null;
var swap_BANG___2 = (function (a,f){
if((a instanceof cljs.core.Atom)){
return cljs.core.reset_BANG_(a,(function (){var G__28356 = a.state;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__28356) : f.call(null,G__28356));
})());
} else {
return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$2(a,f);
}
});
var swap_BANG___3 = (function (a,f,x){
if((a instanceof cljs.core.Atom)){
return cljs.core.reset_BANG_(a,(function (){var G__28357 = a.state;
var G__28358 = x;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__28357,G__28358) : f.call(null,G__28357,G__28358));
})());
} else {
return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$3(a,f,x);
}
});
var swap_BANG___4 = (function (a,f,x,y){
if((a instanceof cljs.core.Atom)){
return cljs.core.reset_BANG_(a,(function (){var G__28359 = a.state;
var G__28360 = x;
var G__28361 = y;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__28359,G__28360,G__28361) : f.call(null,G__28359,G__28360,G__28361));
})());
} else {
return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$4(a,f,x,y);
}
});
var swap_BANG___5 = (function() { 
var G__28362__delegate = function (a,f,x,y,more){
if((a instanceof cljs.core.Atom)){
return cljs.core.reset_BANG_(a,cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,a.state,x,y,more));
} else {
return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$5(a,f,x,y,more);
}
};
var G__28362 = function (a,f,x,y,var_args){
var more = null;
if (arguments.length > 4) {
var G__28363__i = 0, G__28363__a = new Array(arguments.length -  4);
while (G__28363__i < G__28363__a.length) {G__28363__a[G__28363__i] = arguments[G__28363__i + 4]; ++G__28363__i;}
  more = new cljs.core.IndexedSeq(G__28363__a,0);
} 
return G__28362__delegate.call(this,a,f,x,y,more);};
G__28362.cljs$lang$maxFixedArity = 4;
G__28362.cljs$lang$applyTo = (function (arglist__28364){
var a = cljs.core.first(arglist__28364);
arglist__28364 = cljs.core.next(arglist__28364);
var f = cljs.core.first(arglist__28364);
arglist__28364 = cljs.core.next(arglist__28364);
var x = cljs.core.first(arglist__28364);
arglist__28364 = cljs.core.next(arglist__28364);
var y = cljs.core.first(arglist__28364);
var more = cljs.core.rest(arglist__28364);
return G__28362__delegate(a,f,x,y,more);
});
G__28362.cljs$core$IFn$_invoke$arity$variadic = G__28362__delegate;
return G__28362;
})()
;
swap_BANG_ = function(a,f,x,y,var_args){
var more = var_args;
switch(arguments.length){
case 2:
return swap_BANG___2.call(this,a,f);
case 3:
return swap_BANG___3.call(this,a,f,x);
case 4:
return swap_BANG___4.call(this,a,f,x,y);
default:
var G__28365 = null;
if (arguments.length > 4) {
var G__28366__i = 0, G__28366__a = new Array(arguments.length -  4);
while (G__28366__i < G__28366__a.length) {G__28366__a[G__28366__i] = arguments[G__28366__i + 4]; ++G__28366__i;}
G__28365 = new cljs.core.IndexedSeq(G__28366__a,0);
}
return swap_BANG___5.cljs$core$IFn$_invoke$arity$variadic(a,f,x,y, G__28365);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
swap_BANG_.cljs$lang$maxFixedArity = 4;
swap_BANG_.cljs$lang$applyTo = swap_BANG___5.cljs$lang$applyTo;
swap_BANG_.cljs$core$IFn$_invoke$arity$2 = swap_BANG___2;
swap_BANG_.cljs$core$IFn$_invoke$arity$3 = swap_BANG___3;
swap_BANG_.cljs$core$IFn$_invoke$arity$4 = swap_BANG___4;
swap_BANG_.cljs$core$IFn$_invoke$arity$variadic = swap_BANG___5.cljs$core$IFn$_invoke$arity$variadic;
return swap_BANG_;
})()
;
/**
* Atomically sets the value of atom to newval if and only if the
* current value of the atom is equal to oldval. Returns true if
* set happened, else false.
*/
cljs.core.compare_and_set_BANG_ = (function compare_and_set_BANG_(a,oldval,newval){
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(a.cljs$core$IDeref$_deref$arity$1(null),oldval)){
cljs.core.reset_BANG_(a,newval);

return true;
} else {
return false;
}
});
/**
* Sets the validator-fn for an atom. validator-fn must be nil or a
* side-effect-free fn of one argument, which will be passed the intended
* new state on any state change. If the new state is unacceptable, the
* validator-fn should return false or throw an Error. If the current state
* is not acceptable to the new validator, an Error will be thrown and the
* validator will not be changed.
*/
cljs.core.set_validator_BANG_ = (function set_validator_BANG_(iref,val){
return iref.validator = val;
});
/**
* Gets the validator-fn for a var/ref/agent/atom.
*/
cljs.core.get_validator = (function get_validator(iref){
return iref.validator;
});

/**
* @constructor
*/
cljs.core.Volatile = (function (state){
this.state = state;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32768;
})
cljs.core.Volatile.prototype.cljs$core$IDeref$_deref$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.state;
});

cljs.core.Volatile.prototype.cljs$core$IVolatile$ = true;

cljs.core.Volatile.prototype.cljs$core$IVolatile$_vreset_BANG_$arity$2 = (function (_,new_state){
var self__ = this;
var ___$1 = this;
return self__.state = new_state;
});

cljs.core.Volatile.cljs$lang$type = true;

cljs.core.Volatile.cljs$lang$ctorStr = "cljs.core/Volatile";

cljs.core.Volatile.cljs$lang$ctorPrWriter = (function (this__24861__auto__,writer__24862__auto__,opt__24863__auto__){
return cljs.core._write(writer__24862__auto__,"cljs.core/Volatile");
});

cljs.core.__GT_Volatile = (function __GT_Volatile(state){
return (new cljs.core.Volatile(state));
});

/**
* Creates and returns a Volatile with an initial value of val.
*/
cljs.core.volatile_BANG_ = (function volatile_BANG_(val){
return (new cljs.core.Volatile(val));
});
/**
* Returns true if x is a volatile.
*/
cljs.core.volatile_QMARK_ = (function volatile_QMARK_(x){
return (x instanceof cljs.core.Volatile);
});
/**
* Sets the value of volatile to newval without regard for the
* current value. Returns newval.
*/
cljs.core.vreset_BANG_ = (function vreset_BANG_(vol,newval){
return cljs.core._vreset_BANG_(vol,newval);
});
/**
* Returns a lazy sequence of the non-nil results of (f index item). Note,
* this means false return values will be included.  f must be free of
* side-effects.  Returns a stateful transducer when no collection is
* provided.
*/
cljs.core.keep_indexed = (function() {
var keep_indexed = null;
var keep_indexed__1 = (function (f){
return (function (rf){
var ia = cljs.core.volatile_BANG_((-1));
return ((function (ia){
return (function() {
var G__28433 = null;
var G__28433__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__28433__1 = (function (result){
var G__28400 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__28400) : rf.call(null,G__28400));
});
var G__28433__2 = (function (result,input){
var i = ia.cljs$core$IVolatile$_vreset_BANG_$arity$2(null,(ia.cljs$core$IDeref$_deref$arity$1(null) + (1)));
var v = (function (){var G__28401 = i;
var G__28402 = input;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__28401,G__28402) : f.call(null,G__28401,G__28402));
})();
if((v == null)){
return result;
} else {
var G__28403 = result;
var G__28404 = v;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__28403,G__28404) : rf.call(null,G__28403,G__28404));
}
});
G__28433 = function(result,input){
switch(arguments.length){
case 0:
return G__28433__0.call(this);
case 1:
return G__28433__1.call(this,result);
case 2:
return G__28433__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__28433.cljs$core$IFn$_invoke$arity$0 = G__28433__0;
G__28433.cljs$core$IFn$_invoke$arity$1 = G__28433__1;
G__28433.cljs$core$IFn$_invoke$arity$2 = G__28433__2;
return G__28433;
})()
;})(ia))
});
});
var keep_indexed__2 = (function (f,coll){
var keepi = (function keepi(idx,coll__$1){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll__$1);
if(temp__4126__auto__){
var s = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(s)){
var c = cljs.core.chunk_first(s);
var size = cljs.core.count(c);
var b = cljs.core.chunk_buffer(size);
var n__25161__auto___28434 = size;
var i_28435 = (0);
while(true){
if((i_28435 < n__25161__auto___28434)){
var x_28436 = (function (){var G__28429 = (idx + i_28435);
var G__28430 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c,i_28435);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__28429,G__28430) : f.call(null,G__28429,G__28430));
})();
if((x_28436 == null)){
} else {
cljs.core.chunk_append(b,x_28436);
}

var G__28437 = (i_28435 + (1));
i_28435 = G__28437;
continue;
} else {
}
break;
}

return cljs.core.chunk_cons(cljs.core.chunk(b),keepi((idx + size),cljs.core.chunk_rest(s)));
} else {
var x = (function (){var G__28431 = idx;
var G__28432 = cljs.core.first(s);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__28431,G__28432) : f.call(null,G__28431,G__28432));
})();
if((x == null)){
return keepi((idx + (1)),cljs.core.rest(s));
} else {
return cljs.core.cons(x,keepi((idx + (1)),cljs.core.rest(s)));
}
}
} else {
return null;
}
}),null,null));
});
return keepi((0),coll);
});
keep_indexed = function(f,coll){
switch(arguments.length){
case 1:
return keep_indexed__1.call(this,f);
case 2:
return keep_indexed__2.call(this,f,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
keep_indexed.cljs$core$IFn$_invoke$arity$1 = keep_indexed__1;
keep_indexed.cljs$core$IFn$_invoke$arity$2 = keep_indexed__2;
return keep_indexed;
})()
;
/**
* Takes a set of predicates and returns a function f that returns true if all of its
* composing predicates return a logical true value against all of its arguments, else it returns
* false. Note that f is short-circuiting in that it will stop execution on the first
* argument that triggers a logical false result against the original predicates.
* @param {...*} var_args
*/
cljs.core.every_pred = (function() {
var every_pred = null;
var every_pred__1 = (function (p){
return (function() {
var ep1 = null;
var ep1__0 = (function (){
return true;
});
var ep1__1 = (function (x){
return cljs.core.boolean$((function (){var G__28651 = x;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__28651) : p.call(null,G__28651));
})());
});
var ep1__2 = (function (x,y){
return cljs.core.boolean$((function (){var and__24262__auto__ = (function (){var G__28653 = x;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__28653) : p.call(null,G__28653));
})();
if(cljs.core.truth_(and__24262__auto__)){
var G__28654 = y;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__28654) : p.call(null,G__28654));
} else {
return and__24262__auto__;
}
})());
});
var ep1__3 = (function (x,y,z){
return cljs.core.boolean$((function (){var and__24262__auto__ = (function (){var G__28656 = x;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__28656) : p.call(null,G__28656));
})();
if(cljs.core.truth_(and__24262__auto__)){
var and__24262__auto____$1 = (function (){var G__28658 = y;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__28658) : p.call(null,G__28658));
})();
if(cljs.core.truth_(and__24262__auto____$1)){
var G__28659 = z;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__28659) : p.call(null,G__28659));
} else {
return and__24262__auto____$1;
}
} else {
return and__24262__auto__;
}
})());
});
var ep1__4 = (function() { 
var G__28828__delegate = function (x,y,z,args){
return cljs.core.boolean$((ep1.cljs$core$IFn$_invoke$arity$3(x,y,z)) && (cljs.core.every_QMARK_(p,args)));
};
var G__28828 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__28829__i = 0, G__28829__a = new Array(arguments.length -  3);
while (G__28829__i < G__28829__a.length) {G__28829__a[G__28829__i] = arguments[G__28829__i + 3]; ++G__28829__i;}
  args = new cljs.core.IndexedSeq(G__28829__a,0);
} 
return G__28828__delegate.call(this,x,y,z,args);};
G__28828.cljs$lang$maxFixedArity = 3;
G__28828.cljs$lang$applyTo = (function (arglist__28830){
var x = cljs.core.first(arglist__28830);
arglist__28830 = cljs.core.next(arglist__28830);
var y = cljs.core.first(arglist__28830);
arglist__28830 = cljs.core.next(arglist__28830);
var z = cljs.core.first(arglist__28830);
var args = cljs.core.rest(arglist__28830);
return G__28828__delegate(x,y,z,args);
});
G__28828.cljs$core$IFn$_invoke$arity$variadic = G__28828__delegate;
return G__28828;
})()
;
ep1 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return ep1__0.call(this);
case 1:
return ep1__1.call(this,x);
case 2:
return ep1__2.call(this,x,y);
case 3:
return ep1__3.call(this,x,y,z);
default:
var G__28831 = null;
if (arguments.length > 3) {
var G__28832__i = 0, G__28832__a = new Array(arguments.length -  3);
while (G__28832__i < G__28832__a.length) {G__28832__a[G__28832__i] = arguments[G__28832__i + 3]; ++G__28832__i;}
G__28831 = new cljs.core.IndexedSeq(G__28832__a,0);
}
return ep1__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__28831);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
ep1.cljs$lang$maxFixedArity = 3;
ep1.cljs$lang$applyTo = ep1__4.cljs$lang$applyTo;
ep1.cljs$core$IFn$_invoke$arity$0 = ep1__0;
ep1.cljs$core$IFn$_invoke$arity$1 = ep1__1;
ep1.cljs$core$IFn$_invoke$arity$2 = ep1__2;
ep1.cljs$core$IFn$_invoke$arity$3 = ep1__3;
ep1.cljs$core$IFn$_invoke$arity$variadic = ep1__4.cljs$core$IFn$_invoke$arity$variadic;
return ep1;
})()
});
var every_pred__2 = (function (p1,p2){
return (function() {
var ep2 = null;
var ep2__0 = (function (){
return true;
});
var ep2__1 = (function (x){
return cljs.core.boolean$((function (){var and__24262__auto__ = (function (){var G__28691 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__28691) : p1.call(null,G__28691));
})();
if(cljs.core.truth_(and__24262__auto__)){
var G__28692 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__28692) : p2.call(null,G__28692));
} else {
return and__24262__auto__;
}
})());
});
var ep2__2 = (function (x,y){
return cljs.core.boolean$((function (){var and__24262__auto__ = (function (){var G__28694 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__28694) : p1.call(null,G__28694));
})();
if(cljs.core.truth_(and__24262__auto__)){
var and__24262__auto____$1 = (function (){var G__28696 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__28696) : p1.call(null,G__28696));
})();
if(cljs.core.truth_(and__24262__auto____$1)){
var and__24262__auto____$2 = (function (){var G__28698 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__28698) : p2.call(null,G__28698));
})();
if(cljs.core.truth_(and__24262__auto____$2)){
var G__28699 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__28699) : p2.call(null,G__28699));
} else {
return and__24262__auto____$2;
}
} else {
return and__24262__auto____$1;
}
} else {
return and__24262__auto__;
}
})());
});
var ep2__3 = (function (x,y,z){
return cljs.core.boolean$((function (){var and__24262__auto__ = (function (){var G__28701 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__28701) : p1.call(null,G__28701));
})();
if(cljs.core.truth_(and__24262__auto__)){
var and__24262__auto____$1 = (function (){var G__28703 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__28703) : p1.call(null,G__28703));
})();
if(cljs.core.truth_(and__24262__auto____$1)){
var and__24262__auto____$2 = (function (){var G__28705 = z;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__28705) : p1.call(null,G__28705));
})();
if(cljs.core.truth_(and__24262__auto____$2)){
var and__24262__auto____$3 = (function (){var G__28707 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__28707) : p2.call(null,G__28707));
})();
if(cljs.core.truth_(and__24262__auto____$3)){
var and__24262__auto____$4 = (function (){var G__28709 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__28709) : p2.call(null,G__28709));
})();
if(cljs.core.truth_(and__24262__auto____$4)){
var G__28710 = z;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__28710) : p2.call(null,G__28710));
} else {
return and__24262__auto____$4;
}
} else {
return and__24262__auto____$3;
}
} else {
return and__24262__auto____$2;
}
} else {
return and__24262__auto____$1;
}
} else {
return and__24262__auto__;
}
})());
});
var ep2__4 = (function() { 
var G__28833__delegate = function (x,y,z,args){
return cljs.core.boolean$((ep2.cljs$core$IFn$_invoke$arity$3(x,y,z)) && (cljs.core.every_QMARK_((function (p1__28438_SHARP_){
var and__24262__auto__ = (function (){var G__28715 = p1__28438_SHARP_;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__28715) : p1.call(null,G__28715));
})();
if(cljs.core.truth_(and__24262__auto__)){
var G__28716 = p1__28438_SHARP_;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__28716) : p2.call(null,G__28716));
} else {
return and__24262__auto__;
}
}),args)));
};
var G__28833 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__28834__i = 0, G__28834__a = new Array(arguments.length -  3);
while (G__28834__i < G__28834__a.length) {G__28834__a[G__28834__i] = arguments[G__28834__i + 3]; ++G__28834__i;}
  args = new cljs.core.IndexedSeq(G__28834__a,0);
} 
return G__28833__delegate.call(this,x,y,z,args);};
G__28833.cljs$lang$maxFixedArity = 3;
G__28833.cljs$lang$applyTo = (function (arglist__28835){
var x = cljs.core.first(arglist__28835);
arglist__28835 = cljs.core.next(arglist__28835);
var y = cljs.core.first(arglist__28835);
arglist__28835 = cljs.core.next(arglist__28835);
var z = cljs.core.first(arglist__28835);
var args = cljs.core.rest(arglist__28835);
return G__28833__delegate(x,y,z,args);
});
G__28833.cljs$core$IFn$_invoke$arity$variadic = G__28833__delegate;
return G__28833;
})()
;
ep2 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return ep2__0.call(this);
case 1:
return ep2__1.call(this,x);
case 2:
return ep2__2.call(this,x,y);
case 3:
return ep2__3.call(this,x,y,z);
default:
var G__28836 = null;
if (arguments.length > 3) {
var G__28837__i = 0, G__28837__a = new Array(arguments.length -  3);
while (G__28837__i < G__28837__a.length) {G__28837__a[G__28837__i] = arguments[G__28837__i + 3]; ++G__28837__i;}
G__28836 = new cljs.core.IndexedSeq(G__28837__a,0);
}
return ep2__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__28836);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
ep2.cljs$lang$maxFixedArity = 3;
ep2.cljs$lang$applyTo = ep2__4.cljs$lang$applyTo;
ep2.cljs$core$IFn$_invoke$arity$0 = ep2__0;
ep2.cljs$core$IFn$_invoke$arity$1 = ep2__1;
ep2.cljs$core$IFn$_invoke$arity$2 = ep2__2;
ep2.cljs$core$IFn$_invoke$arity$3 = ep2__3;
ep2.cljs$core$IFn$_invoke$arity$variadic = ep2__4.cljs$core$IFn$_invoke$arity$variadic;
return ep2;
})()
});
var every_pred__3 = (function (p1,p2,p3){
return (function() {
var ep3 = null;
var ep3__0 = (function (){
return true;
});
var ep3__1 = (function (x){
return cljs.core.boolean$((function (){var and__24262__auto__ = (function (){var G__28762 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__28762) : p1.call(null,G__28762));
})();
if(cljs.core.truth_(and__24262__auto__)){
var and__24262__auto____$1 = (function (){var G__28764 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__28764) : p2.call(null,G__28764));
})();
if(cljs.core.truth_(and__24262__auto____$1)){
var G__28765 = x;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__28765) : p3.call(null,G__28765));
} else {
return and__24262__auto____$1;
}
} else {
return and__24262__auto__;
}
})());
});
var ep3__2 = (function (x,y){
return cljs.core.boolean$((function (){var and__24262__auto__ = (function (){var G__28767 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__28767) : p1.call(null,G__28767));
})();
if(cljs.core.truth_(and__24262__auto__)){
var and__24262__auto____$1 = (function (){var G__28769 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__28769) : p2.call(null,G__28769));
})();
if(cljs.core.truth_(and__24262__auto____$1)){
var and__24262__auto____$2 = (function (){var G__28771 = x;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__28771) : p3.call(null,G__28771));
})();
if(cljs.core.truth_(and__24262__auto____$2)){
var and__24262__auto____$3 = (function (){var G__28773 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__28773) : p1.call(null,G__28773));
})();
if(cljs.core.truth_(and__24262__auto____$3)){
var and__24262__auto____$4 = (function (){var G__28775 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__28775) : p2.call(null,G__28775));
})();
if(cljs.core.truth_(and__24262__auto____$4)){
var G__28776 = y;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__28776) : p3.call(null,G__28776));
} else {
return and__24262__auto____$4;
}
} else {
return and__24262__auto____$3;
}
} else {
return and__24262__auto____$2;
}
} else {
return and__24262__auto____$1;
}
} else {
return and__24262__auto__;
}
})());
});
var ep3__3 = (function (x,y,z){
return cljs.core.boolean$((function (){var and__24262__auto__ = (function (){var G__28778 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__28778) : p1.call(null,G__28778));
})();
if(cljs.core.truth_(and__24262__auto__)){
var and__24262__auto____$1 = (function (){var G__28780 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__28780) : p2.call(null,G__28780));
})();
if(cljs.core.truth_(and__24262__auto____$1)){
var and__24262__auto____$2 = (function (){var G__28782 = x;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__28782) : p3.call(null,G__28782));
})();
if(cljs.core.truth_(and__24262__auto____$2)){
var and__24262__auto____$3 = (function (){var G__28784 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__28784) : p1.call(null,G__28784));
})();
if(cljs.core.truth_(and__24262__auto____$3)){
var and__24262__auto____$4 = (function (){var G__28786 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__28786) : p2.call(null,G__28786));
})();
if(cljs.core.truth_(and__24262__auto____$4)){
var and__24262__auto____$5 = (function (){var G__28788 = y;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__28788) : p3.call(null,G__28788));
})();
if(cljs.core.truth_(and__24262__auto____$5)){
var and__24262__auto____$6 = (function (){var G__28790 = z;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__28790) : p1.call(null,G__28790));
})();
if(cljs.core.truth_(and__24262__auto____$6)){
var and__24262__auto____$7 = (function (){var G__28792 = z;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__28792) : p2.call(null,G__28792));
})();
if(cljs.core.truth_(and__24262__auto____$7)){
var G__28793 = z;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__28793) : p3.call(null,G__28793));
} else {
return and__24262__auto____$7;
}
} else {
return and__24262__auto____$6;
}
} else {
return and__24262__auto____$5;
}
} else {
return and__24262__auto____$4;
}
} else {
return and__24262__auto____$3;
}
} else {
return and__24262__auto____$2;
}
} else {
return and__24262__auto____$1;
}
} else {
return and__24262__auto__;
}
})());
});
var ep3__4 = (function() { 
var G__28838__delegate = function (x,y,z,args){
return cljs.core.boolean$((ep3.cljs$core$IFn$_invoke$arity$3(x,y,z)) && (cljs.core.every_QMARK_((function (p1__28439_SHARP_){
var and__24262__auto__ = (function (){var G__28800 = p1__28439_SHARP_;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__28800) : p1.call(null,G__28800));
})();
if(cljs.core.truth_(and__24262__auto__)){
var and__24262__auto____$1 = (function (){var G__28802 = p1__28439_SHARP_;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__28802) : p2.call(null,G__28802));
})();
if(cljs.core.truth_(and__24262__auto____$1)){
var G__28803 = p1__28439_SHARP_;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__28803) : p3.call(null,G__28803));
} else {
return and__24262__auto____$1;
}
} else {
return and__24262__auto__;
}
}),args)));
};
var G__28838 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__28839__i = 0, G__28839__a = new Array(arguments.length -  3);
while (G__28839__i < G__28839__a.length) {G__28839__a[G__28839__i] = arguments[G__28839__i + 3]; ++G__28839__i;}
  args = new cljs.core.IndexedSeq(G__28839__a,0);
} 
return G__28838__delegate.call(this,x,y,z,args);};
G__28838.cljs$lang$maxFixedArity = 3;
G__28838.cljs$lang$applyTo = (function (arglist__28840){
var x = cljs.core.first(arglist__28840);
arglist__28840 = cljs.core.next(arglist__28840);
var y = cljs.core.first(arglist__28840);
arglist__28840 = cljs.core.next(arglist__28840);
var z = cljs.core.first(arglist__28840);
var args = cljs.core.rest(arglist__28840);
return G__28838__delegate(x,y,z,args);
});
G__28838.cljs$core$IFn$_invoke$arity$variadic = G__28838__delegate;
return G__28838;
})()
;
ep3 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return ep3__0.call(this);
case 1:
return ep3__1.call(this,x);
case 2:
return ep3__2.call(this,x,y);
case 3:
return ep3__3.call(this,x,y,z);
default:
var G__28841 = null;
if (arguments.length > 3) {
var G__28842__i = 0, G__28842__a = new Array(arguments.length -  3);
while (G__28842__i < G__28842__a.length) {G__28842__a[G__28842__i] = arguments[G__28842__i + 3]; ++G__28842__i;}
G__28841 = new cljs.core.IndexedSeq(G__28842__a,0);
}
return ep3__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__28841);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
ep3.cljs$lang$maxFixedArity = 3;
ep3.cljs$lang$applyTo = ep3__4.cljs$lang$applyTo;
ep3.cljs$core$IFn$_invoke$arity$0 = ep3__0;
ep3.cljs$core$IFn$_invoke$arity$1 = ep3__1;
ep3.cljs$core$IFn$_invoke$arity$2 = ep3__2;
ep3.cljs$core$IFn$_invoke$arity$3 = ep3__3;
ep3.cljs$core$IFn$_invoke$arity$variadic = ep3__4.cljs$core$IFn$_invoke$arity$variadic;
return ep3;
})()
});
var every_pred__4 = (function() { 
var G__28843__delegate = function (p1,p2,p3,ps){
var ps__$1 = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(p1,p2,p3,ps);
return ((function (ps__$1){
return (function() {
var epn = null;
var epn__0 = (function (){
return true;
});
var epn__1 = (function (x){
return cljs.core.every_QMARK_(((function (ps__$1){
return (function (p1__28440_SHARP_){
var G__28819 = x;
return (p1__28440_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__28440_SHARP_.cljs$core$IFn$_invoke$arity$1(G__28819) : p1__28440_SHARP_.call(null,G__28819));
});})(ps__$1))
,ps__$1);
});
var epn__2 = (function (x,y){
return cljs.core.every_QMARK_(((function (ps__$1){
return (function (p1__28441_SHARP_){
var and__24262__auto__ = (function (){var G__28821 = x;
return (p1__28441_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__28441_SHARP_.cljs$core$IFn$_invoke$arity$1(G__28821) : p1__28441_SHARP_.call(null,G__28821));
})();
if(cljs.core.truth_(and__24262__auto__)){
var G__28822 = y;
return (p1__28441_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__28441_SHARP_.cljs$core$IFn$_invoke$arity$1(G__28822) : p1__28441_SHARP_.call(null,G__28822));
} else {
return and__24262__auto__;
}
});})(ps__$1))
,ps__$1);
});
var epn__3 = (function (x,y,z){
return cljs.core.every_QMARK_(((function (ps__$1){
return (function (p1__28442_SHARP_){
var and__24262__auto__ = (function (){var G__28824 = x;
return (p1__28442_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__28442_SHARP_.cljs$core$IFn$_invoke$arity$1(G__28824) : p1__28442_SHARP_.call(null,G__28824));
})();
if(cljs.core.truth_(and__24262__auto__)){
var and__24262__auto____$1 = (function (){var G__28826 = y;
return (p1__28442_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__28442_SHARP_.cljs$core$IFn$_invoke$arity$1(G__28826) : p1__28442_SHARP_.call(null,G__28826));
})();
if(cljs.core.truth_(and__24262__auto____$1)){
var G__28827 = z;
return (p1__28442_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__28442_SHARP_.cljs$core$IFn$_invoke$arity$1(G__28827) : p1__28442_SHARP_.call(null,G__28827));
} else {
return and__24262__auto____$1;
}
} else {
return and__24262__auto__;
}
});})(ps__$1))
,ps__$1);
});
var epn__4 = (function() { 
var G__28844__delegate = function (x,y,z,args){
return cljs.core.boolean$((epn.cljs$core$IFn$_invoke$arity$3(x,y,z)) && (cljs.core.every_QMARK_(((function (ps__$1){
return (function (p1__28443_SHARP_){
return cljs.core.every_QMARK_(p1__28443_SHARP_,args);
});})(ps__$1))
,ps__$1)));
};
var G__28844 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__28845__i = 0, G__28845__a = new Array(arguments.length -  3);
while (G__28845__i < G__28845__a.length) {G__28845__a[G__28845__i] = arguments[G__28845__i + 3]; ++G__28845__i;}
  args = new cljs.core.IndexedSeq(G__28845__a,0);
} 
return G__28844__delegate.call(this,x,y,z,args);};
G__28844.cljs$lang$maxFixedArity = 3;
G__28844.cljs$lang$applyTo = (function (arglist__28846){
var x = cljs.core.first(arglist__28846);
arglist__28846 = cljs.core.next(arglist__28846);
var y = cljs.core.first(arglist__28846);
arglist__28846 = cljs.core.next(arglist__28846);
var z = cljs.core.first(arglist__28846);
var args = cljs.core.rest(arglist__28846);
return G__28844__delegate(x,y,z,args);
});
G__28844.cljs$core$IFn$_invoke$arity$variadic = G__28844__delegate;
return G__28844;
})()
;
epn = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return epn__0.call(this);
case 1:
return epn__1.call(this,x);
case 2:
return epn__2.call(this,x,y);
case 3:
return epn__3.call(this,x,y,z);
default:
var G__28847 = null;
if (arguments.length > 3) {
var G__28848__i = 0, G__28848__a = new Array(arguments.length -  3);
while (G__28848__i < G__28848__a.length) {G__28848__a[G__28848__i] = arguments[G__28848__i + 3]; ++G__28848__i;}
G__28847 = new cljs.core.IndexedSeq(G__28848__a,0);
}
return epn__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__28847);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
epn.cljs$lang$maxFixedArity = 3;
epn.cljs$lang$applyTo = epn__4.cljs$lang$applyTo;
epn.cljs$core$IFn$_invoke$arity$0 = epn__0;
epn.cljs$core$IFn$_invoke$arity$1 = epn__1;
epn.cljs$core$IFn$_invoke$arity$2 = epn__2;
epn.cljs$core$IFn$_invoke$arity$3 = epn__3;
epn.cljs$core$IFn$_invoke$arity$variadic = epn__4.cljs$core$IFn$_invoke$arity$variadic;
return epn;
})()
;})(ps__$1))
};
var G__28843 = function (p1,p2,p3,var_args){
var ps = null;
if (arguments.length > 3) {
var G__28849__i = 0, G__28849__a = new Array(arguments.length -  3);
while (G__28849__i < G__28849__a.length) {G__28849__a[G__28849__i] = arguments[G__28849__i + 3]; ++G__28849__i;}
  ps = new cljs.core.IndexedSeq(G__28849__a,0);
} 
return G__28843__delegate.call(this,p1,p2,p3,ps);};
G__28843.cljs$lang$maxFixedArity = 3;
G__28843.cljs$lang$applyTo = (function (arglist__28850){
var p1 = cljs.core.first(arglist__28850);
arglist__28850 = cljs.core.next(arglist__28850);
var p2 = cljs.core.first(arglist__28850);
arglist__28850 = cljs.core.next(arglist__28850);
var p3 = cljs.core.first(arglist__28850);
var ps = cljs.core.rest(arglist__28850);
return G__28843__delegate(p1,p2,p3,ps);
});
G__28843.cljs$core$IFn$_invoke$arity$variadic = G__28843__delegate;
return G__28843;
})()
;
every_pred = function(p1,p2,p3,var_args){
var ps = var_args;
switch(arguments.length){
case 1:
return every_pred__1.call(this,p1);
case 2:
return every_pred__2.call(this,p1,p2);
case 3:
return every_pred__3.call(this,p1,p2,p3);
default:
var G__28851 = null;
if (arguments.length > 3) {
var G__28852__i = 0, G__28852__a = new Array(arguments.length -  3);
while (G__28852__i < G__28852__a.length) {G__28852__a[G__28852__i] = arguments[G__28852__i + 3]; ++G__28852__i;}
G__28851 = new cljs.core.IndexedSeq(G__28852__a,0);
}
return every_pred__4.cljs$core$IFn$_invoke$arity$variadic(p1,p2,p3, G__28851);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
every_pred.cljs$lang$maxFixedArity = 3;
every_pred.cljs$lang$applyTo = every_pred__4.cljs$lang$applyTo;
every_pred.cljs$core$IFn$_invoke$arity$1 = every_pred__1;
every_pred.cljs$core$IFn$_invoke$arity$2 = every_pred__2;
every_pred.cljs$core$IFn$_invoke$arity$3 = every_pred__3;
every_pred.cljs$core$IFn$_invoke$arity$variadic = every_pred__4.cljs$core$IFn$_invoke$arity$variadic;
return every_pred;
})()
;
/**
* Takes a set of predicates and returns a function f that returns the first logical true value
* returned by one of its composing predicates against any of its arguments, else it returns
* logical false. Note that f is short-circuiting in that it will stop execution on the first
* argument that triggers a logical true result against the original predicates.
* @param {...*} var_args
*/
cljs.core.some_fn = (function() {
var some_fn = null;
var some_fn__1 = (function (p){
return (function() {
var sp1 = null;
var sp1__0 = (function (){
return null;
});
var sp1__1 = (function (x){
var G__29058 = x;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__29058) : p.call(null,G__29058));
});
var sp1__2 = (function (x,y){
var or__24274__auto__ = (function (){var G__29060 = x;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__29060) : p.call(null,G__29060));
})();
if(cljs.core.truth_(or__24274__auto__)){
return or__24274__auto__;
} else {
var G__29061 = y;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__29061) : p.call(null,G__29061));
}
});
var sp1__3 = (function (x,y,z){
var or__24274__auto__ = (function (){var G__29063 = x;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__29063) : p.call(null,G__29063));
})();
if(cljs.core.truth_(or__24274__auto__)){
return or__24274__auto__;
} else {
var or__24274__auto____$1 = (function (){var G__29065 = y;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__29065) : p.call(null,G__29065));
})();
if(cljs.core.truth_(or__24274__auto____$1)){
return or__24274__auto____$1;
} else {
var G__29066 = z;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__29066) : p.call(null,G__29066));
}
}
});
var sp1__4 = (function() { 
var G__29227__delegate = function (x,y,z,args){
var or__24274__auto__ = sp1.cljs$core$IFn$_invoke$arity$3(x,y,z);
if(cljs.core.truth_(or__24274__auto__)){
return or__24274__auto__;
} else {
return cljs.core.some(p,args);
}
};
var G__29227 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__29228__i = 0, G__29228__a = new Array(arguments.length -  3);
while (G__29228__i < G__29228__a.length) {G__29228__a[G__29228__i] = arguments[G__29228__i + 3]; ++G__29228__i;}
  args = new cljs.core.IndexedSeq(G__29228__a,0);
} 
return G__29227__delegate.call(this,x,y,z,args);};
G__29227.cljs$lang$maxFixedArity = 3;
G__29227.cljs$lang$applyTo = (function (arglist__29229){
var x = cljs.core.first(arglist__29229);
arglist__29229 = cljs.core.next(arglist__29229);
var y = cljs.core.first(arglist__29229);
arglist__29229 = cljs.core.next(arglist__29229);
var z = cljs.core.first(arglist__29229);
var args = cljs.core.rest(arglist__29229);
return G__29227__delegate(x,y,z,args);
});
G__29227.cljs$core$IFn$_invoke$arity$variadic = G__29227__delegate;
return G__29227;
})()
;
sp1 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return sp1__0.call(this);
case 1:
return sp1__1.call(this,x);
case 2:
return sp1__2.call(this,x,y);
case 3:
return sp1__3.call(this,x,y,z);
default:
var G__29230 = null;
if (arguments.length > 3) {
var G__29231__i = 0, G__29231__a = new Array(arguments.length -  3);
while (G__29231__i < G__29231__a.length) {G__29231__a[G__29231__i] = arguments[G__29231__i + 3]; ++G__29231__i;}
G__29230 = new cljs.core.IndexedSeq(G__29231__a,0);
}
return sp1__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__29230);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
sp1.cljs$lang$maxFixedArity = 3;
sp1.cljs$lang$applyTo = sp1__4.cljs$lang$applyTo;
sp1.cljs$core$IFn$_invoke$arity$0 = sp1__0;
sp1.cljs$core$IFn$_invoke$arity$1 = sp1__1;
sp1.cljs$core$IFn$_invoke$arity$2 = sp1__2;
sp1.cljs$core$IFn$_invoke$arity$3 = sp1__3;
sp1.cljs$core$IFn$_invoke$arity$variadic = sp1__4.cljs$core$IFn$_invoke$arity$variadic;
return sp1;
})()
});
var some_fn__2 = (function (p1,p2){
return (function() {
var sp2 = null;
var sp2__0 = (function (){
return null;
});
var sp2__1 = (function (x){
var or__24274__auto__ = (function (){var G__29098 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__29098) : p1.call(null,G__29098));
})();
if(cljs.core.truth_(or__24274__auto__)){
return or__24274__auto__;
} else {
var G__29099 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__29099) : p2.call(null,G__29099));
}
});
var sp2__2 = (function (x,y){
var or__24274__auto__ = (function (){var G__29101 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__29101) : p1.call(null,G__29101));
})();
if(cljs.core.truth_(or__24274__auto__)){
return or__24274__auto__;
} else {
var or__24274__auto____$1 = (function (){var G__29103 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__29103) : p1.call(null,G__29103));
})();
if(cljs.core.truth_(or__24274__auto____$1)){
return or__24274__auto____$1;
} else {
var or__24274__auto____$2 = (function (){var G__29105 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__29105) : p2.call(null,G__29105));
})();
if(cljs.core.truth_(or__24274__auto____$2)){
return or__24274__auto____$2;
} else {
var G__29106 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__29106) : p2.call(null,G__29106));
}
}
}
});
var sp2__3 = (function (x,y,z){
var or__24274__auto__ = (function (){var G__29108 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__29108) : p1.call(null,G__29108));
})();
if(cljs.core.truth_(or__24274__auto__)){
return or__24274__auto__;
} else {
var or__24274__auto____$1 = (function (){var G__29110 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__29110) : p1.call(null,G__29110));
})();
if(cljs.core.truth_(or__24274__auto____$1)){
return or__24274__auto____$1;
} else {
var or__24274__auto____$2 = (function (){var G__29112 = z;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__29112) : p1.call(null,G__29112));
})();
if(cljs.core.truth_(or__24274__auto____$2)){
return or__24274__auto____$2;
} else {
var or__24274__auto____$3 = (function (){var G__29114 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__29114) : p2.call(null,G__29114));
})();
if(cljs.core.truth_(or__24274__auto____$3)){
return or__24274__auto____$3;
} else {
var or__24274__auto____$4 = (function (){var G__29116 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__29116) : p2.call(null,G__29116));
})();
if(cljs.core.truth_(or__24274__auto____$4)){
return or__24274__auto____$4;
} else {
var G__29117 = z;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__29117) : p2.call(null,G__29117));
}
}
}
}
}
});
var sp2__4 = (function() { 
var G__29232__delegate = function (x,y,z,args){
var or__24274__auto__ = sp2.cljs$core$IFn$_invoke$arity$3(x,y,z);
if(cljs.core.truth_(or__24274__auto__)){
return or__24274__auto__;
} else {
return cljs.core.some(((function (or__24274__auto__){
return (function (p1__28853_SHARP_){
var or__24274__auto____$1 = (function (){var G__29119 = p1__28853_SHARP_;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__29119) : p1.call(null,G__29119));
})();
if(cljs.core.truth_(or__24274__auto____$1)){
return or__24274__auto____$1;
} else {
var G__29120 = p1__28853_SHARP_;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__29120) : p2.call(null,G__29120));
}
});})(or__24274__auto__))
,args);
}
};
var G__29232 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__29233__i = 0, G__29233__a = new Array(arguments.length -  3);
while (G__29233__i < G__29233__a.length) {G__29233__a[G__29233__i] = arguments[G__29233__i + 3]; ++G__29233__i;}
  args = new cljs.core.IndexedSeq(G__29233__a,0);
} 
return G__29232__delegate.call(this,x,y,z,args);};
G__29232.cljs$lang$maxFixedArity = 3;
G__29232.cljs$lang$applyTo = (function (arglist__29234){
var x = cljs.core.first(arglist__29234);
arglist__29234 = cljs.core.next(arglist__29234);
var y = cljs.core.first(arglist__29234);
arglist__29234 = cljs.core.next(arglist__29234);
var z = cljs.core.first(arglist__29234);
var args = cljs.core.rest(arglist__29234);
return G__29232__delegate(x,y,z,args);
});
G__29232.cljs$core$IFn$_invoke$arity$variadic = G__29232__delegate;
return G__29232;
})()
;
sp2 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return sp2__0.call(this);
case 1:
return sp2__1.call(this,x);
case 2:
return sp2__2.call(this,x,y);
case 3:
return sp2__3.call(this,x,y,z);
default:
var G__29235 = null;
if (arguments.length > 3) {
var G__29236__i = 0, G__29236__a = new Array(arguments.length -  3);
while (G__29236__i < G__29236__a.length) {G__29236__a[G__29236__i] = arguments[G__29236__i + 3]; ++G__29236__i;}
G__29235 = new cljs.core.IndexedSeq(G__29236__a,0);
}
return sp2__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__29235);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
sp2.cljs$lang$maxFixedArity = 3;
sp2.cljs$lang$applyTo = sp2__4.cljs$lang$applyTo;
sp2.cljs$core$IFn$_invoke$arity$0 = sp2__0;
sp2.cljs$core$IFn$_invoke$arity$1 = sp2__1;
sp2.cljs$core$IFn$_invoke$arity$2 = sp2__2;
sp2.cljs$core$IFn$_invoke$arity$3 = sp2__3;
sp2.cljs$core$IFn$_invoke$arity$variadic = sp2__4.cljs$core$IFn$_invoke$arity$variadic;
return sp2;
})()
});
var some_fn__3 = (function (p1,p2,p3){
return (function() {
var sp3 = null;
var sp3__0 = (function (){
return null;
});
var sp3__1 = (function (x){
var or__24274__auto__ = (function (){var G__29166 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__29166) : p1.call(null,G__29166));
})();
if(cljs.core.truth_(or__24274__auto__)){
return or__24274__auto__;
} else {
var or__24274__auto____$1 = (function (){var G__29168 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__29168) : p2.call(null,G__29168));
})();
if(cljs.core.truth_(or__24274__auto____$1)){
return or__24274__auto____$1;
} else {
var G__29169 = x;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__29169) : p3.call(null,G__29169));
}
}
});
var sp3__2 = (function (x,y){
var or__24274__auto__ = (function (){var G__29171 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__29171) : p1.call(null,G__29171));
})();
if(cljs.core.truth_(or__24274__auto__)){
return or__24274__auto__;
} else {
var or__24274__auto____$1 = (function (){var G__29173 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__29173) : p2.call(null,G__29173));
})();
if(cljs.core.truth_(or__24274__auto____$1)){
return or__24274__auto____$1;
} else {
var or__24274__auto____$2 = (function (){var G__29175 = x;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__29175) : p3.call(null,G__29175));
})();
if(cljs.core.truth_(or__24274__auto____$2)){
return or__24274__auto____$2;
} else {
var or__24274__auto____$3 = (function (){var G__29177 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__29177) : p1.call(null,G__29177));
})();
if(cljs.core.truth_(or__24274__auto____$3)){
return or__24274__auto____$3;
} else {
var or__24274__auto____$4 = (function (){var G__29179 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__29179) : p2.call(null,G__29179));
})();
if(cljs.core.truth_(or__24274__auto____$4)){
return or__24274__auto____$4;
} else {
var G__29180 = y;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__29180) : p3.call(null,G__29180));
}
}
}
}
}
});
var sp3__3 = (function (x,y,z){
var or__24274__auto__ = (function (){var G__29182 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__29182) : p1.call(null,G__29182));
})();
if(cljs.core.truth_(or__24274__auto__)){
return or__24274__auto__;
} else {
var or__24274__auto____$1 = (function (){var G__29184 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__29184) : p2.call(null,G__29184));
})();
if(cljs.core.truth_(or__24274__auto____$1)){
return or__24274__auto____$1;
} else {
var or__24274__auto____$2 = (function (){var G__29186 = x;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__29186) : p3.call(null,G__29186));
})();
if(cljs.core.truth_(or__24274__auto____$2)){
return or__24274__auto____$2;
} else {
var or__24274__auto____$3 = (function (){var G__29188 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__29188) : p1.call(null,G__29188));
})();
if(cljs.core.truth_(or__24274__auto____$3)){
return or__24274__auto____$3;
} else {
var or__24274__auto____$4 = (function (){var G__29190 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__29190) : p2.call(null,G__29190));
})();
if(cljs.core.truth_(or__24274__auto____$4)){
return or__24274__auto____$4;
} else {
var or__24274__auto____$5 = (function (){var G__29192 = y;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__29192) : p3.call(null,G__29192));
})();
if(cljs.core.truth_(or__24274__auto____$5)){
return or__24274__auto____$5;
} else {
var or__24274__auto____$6 = (function (){var G__29194 = z;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__29194) : p1.call(null,G__29194));
})();
if(cljs.core.truth_(or__24274__auto____$6)){
return or__24274__auto____$6;
} else {
var or__24274__auto____$7 = (function (){var G__29196 = z;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__29196) : p2.call(null,G__29196));
})();
if(cljs.core.truth_(or__24274__auto____$7)){
return or__24274__auto____$7;
} else {
var G__29197 = z;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__29197) : p3.call(null,G__29197));
}
}
}
}
}
}
}
}
});
var sp3__4 = (function() { 
var G__29237__delegate = function (x,y,z,args){
var or__24274__auto__ = sp3.cljs$core$IFn$_invoke$arity$3(x,y,z);
if(cljs.core.truth_(or__24274__auto__)){
return or__24274__auto__;
} else {
return cljs.core.some(((function (or__24274__auto__){
return (function (p1__28854_SHARP_){
var or__24274__auto____$1 = (function (){var G__29199 = p1__28854_SHARP_;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__29199) : p1.call(null,G__29199));
})();
if(cljs.core.truth_(or__24274__auto____$1)){
return or__24274__auto____$1;
} else {
var or__24274__auto____$2 = (function (){var G__29201 = p1__28854_SHARP_;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__29201) : p2.call(null,G__29201));
})();
if(cljs.core.truth_(or__24274__auto____$2)){
return or__24274__auto____$2;
} else {
var G__29202 = p1__28854_SHARP_;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__29202) : p3.call(null,G__29202));
}
}
});})(or__24274__auto__))
,args);
}
};
var G__29237 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__29238__i = 0, G__29238__a = new Array(arguments.length -  3);
while (G__29238__i < G__29238__a.length) {G__29238__a[G__29238__i] = arguments[G__29238__i + 3]; ++G__29238__i;}
  args = new cljs.core.IndexedSeq(G__29238__a,0);
} 
return G__29237__delegate.call(this,x,y,z,args);};
G__29237.cljs$lang$maxFixedArity = 3;
G__29237.cljs$lang$applyTo = (function (arglist__29239){
var x = cljs.core.first(arglist__29239);
arglist__29239 = cljs.core.next(arglist__29239);
var y = cljs.core.first(arglist__29239);
arglist__29239 = cljs.core.next(arglist__29239);
var z = cljs.core.first(arglist__29239);
var args = cljs.core.rest(arglist__29239);
return G__29237__delegate(x,y,z,args);
});
G__29237.cljs$core$IFn$_invoke$arity$variadic = G__29237__delegate;
return G__29237;
})()
;
sp3 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return sp3__0.call(this);
case 1:
return sp3__1.call(this,x);
case 2:
return sp3__2.call(this,x,y);
case 3:
return sp3__3.call(this,x,y,z);
default:
var G__29240 = null;
if (arguments.length > 3) {
var G__29241__i = 0, G__29241__a = new Array(arguments.length -  3);
while (G__29241__i < G__29241__a.length) {G__29241__a[G__29241__i] = arguments[G__29241__i + 3]; ++G__29241__i;}
G__29240 = new cljs.core.IndexedSeq(G__29241__a,0);
}
return sp3__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__29240);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
sp3.cljs$lang$maxFixedArity = 3;
sp3.cljs$lang$applyTo = sp3__4.cljs$lang$applyTo;
sp3.cljs$core$IFn$_invoke$arity$0 = sp3__0;
sp3.cljs$core$IFn$_invoke$arity$1 = sp3__1;
sp3.cljs$core$IFn$_invoke$arity$2 = sp3__2;
sp3.cljs$core$IFn$_invoke$arity$3 = sp3__3;
sp3.cljs$core$IFn$_invoke$arity$variadic = sp3__4.cljs$core$IFn$_invoke$arity$variadic;
return sp3;
})()
});
var some_fn__4 = (function() { 
var G__29242__delegate = function (p1,p2,p3,ps){
var ps__$1 = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(p1,p2,p3,ps);
return ((function (ps__$1){
return (function() {
var spn = null;
var spn__0 = (function (){
return null;
});
var spn__1 = (function (x){
return cljs.core.some(((function (ps__$1){
return (function (p1__28855_SHARP_){
var G__29218 = x;
return (p1__28855_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__28855_SHARP_.cljs$core$IFn$_invoke$arity$1(G__29218) : p1__28855_SHARP_.call(null,G__29218));
});})(ps__$1))
,ps__$1);
});
var spn__2 = (function (x,y){
return cljs.core.some(((function (ps__$1){
return (function (p1__28856_SHARP_){
var or__24274__auto__ = (function (){var G__29220 = x;
return (p1__28856_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__28856_SHARP_.cljs$core$IFn$_invoke$arity$1(G__29220) : p1__28856_SHARP_.call(null,G__29220));
})();
if(cljs.core.truth_(or__24274__auto__)){
return or__24274__auto__;
} else {
var G__29221 = y;
return (p1__28856_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__28856_SHARP_.cljs$core$IFn$_invoke$arity$1(G__29221) : p1__28856_SHARP_.call(null,G__29221));
}
});})(ps__$1))
,ps__$1);
});
var spn__3 = (function (x,y,z){
return cljs.core.some(((function (ps__$1){
return (function (p1__28857_SHARP_){
var or__24274__auto__ = (function (){var G__29223 = x;
return (p1__28857_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__28857_SHARP_.cljs$core$IFn$_invoke$arity$1(G__29223) : p1__28857_SHARP_.call(null,G__29223));
})();
if(cljs.core.truth_(or__24274__auto__)){
return or__24274__auto__;
} else {
var or__24274__auto____$1 = (function (){var G__29225 = y;
return (p1__28857_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__28857_SHARP_.cljs$core$IFn$_invoke$arity$1(G__29225) : p1__28857_SHARP_.call(null,G__29225));
})();
if(cljs.core.truth_(or__24274__auto____$1)){
return or__24274__auto____$1;
} else {
var G__29226 = z;
return (p1__28857_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__28857_SHARP_.cljs$core$IFn$_invoke$arity$1(G__29226) : p1__28857_SHARP_.call(null,G__29226));
}
}
});})(ps__$1))
,ps__$1);
});
var spn__4 = (function() { 
var G__29243__delegate = function (x,y,z,args){
var or__24274__auto__ = spn.cljs$core$IFn$_invoke$arity$3(x,y,z);
if(cljs.core.truth_(or__24274__auto__)){
return or__24274__auto__;
} else {
return cljs.core.some(((function (or__24274__auto__,ps__$1){
return (function (p1__28858_SHARP_){
return cljs.core.some(p1__28858_SHARP_,args);
});})(or__24274__auto__,ps__$1))
,ps__$1);
}
};
var G__29243 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__29244__i = 0, G__29244__a = new Array(arguments.length -  3);
while (G__29244__i < G__29244__a.length) {G__29244__a[G__29244__i] = arguments[G__29244__i + 3]; ++G__29244__i;}
  args = new cljs.core.IndexedSeq(G__29244__a,0);
} 
return G__29243__delegate.call(this,x,y,z,args);};
G__29243.cljs$lang$maxFixedArity = 3;
G__29243.cljs$lang$applyTo = (function (arglist__29245){
var x = cljs.core.first(arglist__29245);
arglist__29245 = cljs.core.next(arglist__29245);
var y = cljs.core.first(arglist__29245);
arglist__29245 = cljs.core.next(arglist__29245);
var z = cljs.core.first(arglist__29245);
var args = cljs.core.rest(arglist__29245);
return G__29243__delegate(x,y,z,args);
});
G__29243.cljs$core$IFn$_invoke$arity$variadic = G__29243__delegate;
return G__29243;
})()
;
spn = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return spn__0.call(this);
case 1:
return spn__1.call(this,x);
case 2:
return spn__2.call(this,x,y);
case 3:
return spn__3.call(this,x,y,z);
default:
var G__29246 = null;
if (arguments.length > 3) {
var G__29247__i = 0, G__29247__a = new Array(arguments.length -  3);
while (G__29247__i < G__29247__a.length) {G__29247__a[G__29247__i] = arguments[G__29247__i + 3]; ++G__29247__i;}
G__29246 = new cljs.core.IndexedSeq(G__29247__a,0);
}
return spn__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__29246);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
spn.cljs$lang$maxFixedArity = 3;
spn.cljs$lang$applyTo = spn__4.cljs$lang$applyTo;
spn.cljs$core$IFn$_invoke$arity$0 = spn__0;
spn.cljs$core$IFn$_invoke$arity$1 = spn__1;
spn.cljs$core$IFn$_invoke$arity$2 = spn__2;
spn.cljs$core$IFn$_invoke$arity$3 = spn__3;
spn.cljs$core$IFn$_invoke$arity$variadic = spn__4.cljs$core$IFn$_invoke$arity$variadic;
return spn;
})()
;})(ps__$1))
};
var G__29242 = function (p1,p2,p3,var_args){
var ps = null;
if (arguments.length > 3) {
var G__29248__i = 0, G__29248__a = new Array(arguments.length -  3);
while (G__29248__i < G__29248__a.length) {G__29248__a[G__29248__i] = arguments[G__29248__i + 3]; ++G__29248__i;}
  ps = new cljs.core.IndexedSeq(G__29248__a,0);
} 
return G__29242__delegate.call(this,p1,p2,p3,ps);};
G__29242.cljs$lang$maxFixedArity = 3;
G__29242.cljs$lang$applyTo = (function (arglist__29249){
var p1 = cljs.core.first(arglist__29249);
arglist__29249 = cljs.core.next(arglist__29249);
var p2 = cljs.core.first(arglist__29249);
arglist__29249 = cljs.core.next(arglist__29249);
var p3 = cljs.core.first(arglist__29249);
var ps = cljs.core.rest(arglist__29249);
return G__29242__delegate(p1,p2,p3,ps);
});
G__29242.cljs$core$IFn$_invoke$arity$variadic = G__29242__delegate;
return G__29242;
})()
;
some_fn = function(p1,p2,p3,var_args){
var ps = var_args;
switch(arguments.length){
case 1:
return some_fn__1.call(this,p1);
case 2:
return some_fn__2.call(this,p1,p2);
case 3:
return some_fn__3.call(this,p1,p2,p3);
default:
var G__29250 = null;
if (arguments.length > 3) {
var G__29251__i = 0, G__29251__a = new Array(arguments.length -  3);
while (G__29251__i < G__29251__a.length) {G__29251__a[G__29251__i] = arguments[G__29251__i + 3]; ++G__29251__i;}
G__29250 = new cljs.core.IndexedSeq(G__29251__a,0);
}
return some_fn__4.cljs$core$IFn$_invoke$arity$variadic(p1,p2,p3, G__29250);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
some_fn.cljs$lang$maxFixedArity = 3;
some_fn.cljs$lang$applyTo = some_fn__4.cljs$lang$applyTo;
some_fn.cljs$core$IFn$_invoke$arity$1 = some_fn__1;
some_fn.cljs$core$IFn$_invoke$arity$2 = some_fn__2;
some_fn.cljs$core$IFn$_invoke$arity$3 = some_fn__3;
some_fn.cljs$core$IFn$_invoke$arity$variadic = some_fn__4.cljs$core$IFn$_invoke$arity$variadic;
return some_fn;
})()
;
/**
* Returns a lazy sequence consisting of the result of applying f to
* the set of first items of each coll, followed by applying f to the
* set of second items in each coll, until any one of the colls is
* exhausted.  Any remaining items in other colls are ignored. Function
* f should accept number-of-colls arguments. Returns a transducer when
* no collection is provided.
* @param {...*} var_args
*/
cljs.core.map = (function() {
var map = null;
var map__1 = (function (f){
return (function (rf){
return (function() {
var G__29306 = null;
var G__29306__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__29306__1 = (function (result){
var G__29292 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__29292) : rf.call(null,G__29292));
});
var G__29306__2 = (function (result,input){
var G__29293 = result;
var G__29294 = (function (){var G__29295 = input;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__29295) : f.call(null,G__29295));
})();
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__29293,G__29294) : rf.call(null,G__29293,G__29294));
});
var G__29306__3 = (function() { 
var G__29307__delegate = function (result,input,inputs){
var G__29296 = result;
var G__29297 = cljs.core.apply.cljs$core$IFn$_invoke$arity$3(f,input,inputs);
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__29296,G__29297) : rf.call(null,G__29296,G__29297));
};
var G__29307 = function (result,input,var_args){
var inputs = null;
if (arguments.length > 2) {
var G__29308__i = 0, G__29308__a = new Array(arguments.length -  2);
while (G__29308__i < G__29308__a.length) {G__29308__a[G__29308__i] = arguments[G__29308__i + 2]; ++G__29308__i;}
  inputs = new cljs.core.IndexedSeq(G__29308__a,0);
} 
return G__29307__delegate.call(this,result,input,inputs);};
G__29307.cljs$lang$maxFixedArity = 2;
G__29307.cljs$lang$applyTo = (function (arglist__29309){
var result = cljs.core.first(arglist__29309);
arglist__29309 = cljs.core.next(arglist__29309);
var input = cljs.core.first(arglist__29309);
var inputs = cljs.core.rest(arglist__29309);
return G__29307__delegate(result,input,inputs);
});
G__29307.cljs$core$IFn$_invoke$arity$variadic = G__29307__delegate;
return G__29307;
})()
;
G__29306 = function(result,input,var_args){
var inputs = var_args;
switch(arguments.length){
case 0:
return G__29306__0.call(this);
case 1:
return G__29306__1.call(this,result);
case 2:
return G__29306__2.call(this,result,input);
default:
var G__29310 = null;
if (arguments.length > 2) {
var G__29311__i = 0, G__29311__a = new Array(arguments.length -  2);
while (G__29311__i < G__29311__a.length) {G__29311__a[G__29311__i] = arguments[G__29311__i + 2]; ++G__29311__i;}
G__29310 = new cljs.core.IndexedSeq(G__29311__a,0);
}
return G__29306__3.cljs$core$IFn$_invoke$arity$variadic(result,input, G__29310);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__29306.cljs$lang$maxFixedArity = 2;
G__29306.cljs$lang$applyTo = G__29306__3.cljs$lang$applyTo;
G__29306.cljs$core$IFn$_invoke$arity$0 = G__29306__0;
G__29306.cljs$core$IFn$_invoke$arity$1 = G__29306__1;
G__29306.cljs$core$IFn$_invoke$arity$2 = G__29306__2;
G__29306.cljs$core$IFn$_invoke$arity$variadic = G__29306__3.cljs$core$IFn$_invoke$arity$variadic;
return G__29306;
})()
});
});
var map__2 = (function (f,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(s)){
var c = cljs.core.chunk_first(s);
var size = cljs.core.count(c);
var b = cljs.core.chunk_buffer(size);
var n__25161__auto___29312 = size;
var i_29313 = (0);
while(true){
if((i_29313 < n__25161__auto___29312)){
cljs.core.chunk_append(b,(function (){var G__29298 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c,i_29313);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__29298) : f.call(null,G__29298));
})());

var G__29314 = (i_29313 + (1));
i_29313 = G__29314;
continue;
} else {
}
break;
}

return cljs.core.chunk_cons(cljs.core.chunk(b),map.cljs$core$IFn$_invoke$arity$2(f,cljs.core.chunk_rest(s)));
} else {
return cljs.core.cons((function (){var G__29299 = cljs.core.first(s);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__29299) : f.call(null,G__29299));
})(),map.cljs$core$IFn$_invoke$arity$2(f,cljs.core.rest(s)));
}
} else {
return null;
}
}),null,null));
});
var map__3 = (function (f,c1,c2){
return (new cljs.core.LazySeq(null,(function (){
var s1 = cljs.core.seq(c1);
var s2 = cljs.core.seq(c2);
if((s1) && (s2)){
return cljs.core.cons((function (){var G__29300 = cljs.core.first(s1);
var G__29301 = cljs.core.first(s2);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__29300,G__29301) : f.call(null,G__29300,G__29301));
})(),map.cljs$core$IFn$_invoke$arity$3(f,cljs.core.rest(s1),cljs.core.rest(s2)));
} else {
return null;
}
}),null,null));
});
var map__4 = (function (f,c1,c2,c3){
return (new cljs.core.LazySeq(null,(function (){
var s1 = cljs.core.seq(c1);
var s2 = cljs.core.seq(c2);
var s3 = cljs.core.seq(c3);
if((s1) && (s2) && (s3)){
return cljs.core.cons((function (){var G__29302 = cljs.core.first(s1);
var G__29303 = cljs.core.first(s2);
var G__29304 = cljs.core.first(s3);
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__29302,G__29303,G__29304) : f.call(null,G__29302,G__29303,G__29304));
})(),map.cljs$core$IFn$_invoke$arity$4(f,cljs.core.rest(s1),cljs.core.rest(s2),cljs.core.rest(s3)));
} else {
return null;
}
}),null,null));
});
var map__5 = (function() { 
var G__29315__delegate = function (f,c1,c2,c3,colls){
var step = (function step(cs){
return (new cljs.core.LazySeq(null,(function (){
var ss = map.cljs$core$IFn$_invoke$arity$2(cljs.core.seq,cs);
if(cljs.core.every_QMARK_(cljs.core.identity,ss)){
return cljs.core.cons(map.cljs$core$IFn$_invoke$arity$2(cljs.core.first,ss),step(map.cljs$core$IFn$_invoke$arity$2(cljs.core.rest,ss)));
} else {
return null;
}
}),null,null));
});
return map.cljs$core$IFn$_invoke$arity$2(((function (step){
return (function (p1__29252_SHARP_){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$2(f,p1__29252_SHARP_);
});})(step))
,step(cljs.core.conj.cljs$core$IFn$_invoke$arity$variadic(colls,c3,cljs.core.array_seq([c2,c1], 0))));
};
var G__29315 = function (f,c1,c2,c3,var_args){
var colls = null;
if (arguments.length > 4) {
var G__29316__i = 0, G__29316__a = new Array(arguments.length -  4);
while (G__29316__i < G__29316__a.length) {G__29316__a[G__29316__i] = arguments[G__29316__i + 4]; ++G__29316__i;}
  colls = new cljs.core.IndexedSeq(G__29316__a,0);
} 
return G__29315__delegate.call(this,f,c1,c2,c3,colls);};
G__29315.cljs$lang$maxFixedArity = 4;
G__29315.cljs$lang$applyTo = (function (arglist__29317){
var f = cljs.core.first(arglist__29317);
arglist__29317 = cljs.core.next(arglist__29317);
var c1 = cljs.core.first(arglist__29317);
arglist__29317 = cljs.core.next(arglist__29317);
var c2 = cljs.core.first(arglist__29317);
arglist__29317 = cljs.core.next(arglist__29317);
var c3 = cljs.core.first(arglist__29317);
var colls = cljs.core.rest(arglist__29317);
return G__29315__delegate(f,c1,c2,c3,colls);
});
G__29315.cljs$core$IFn$_invoke$arity$variadic = G__29315__delegate;
return G__29315;
})()
;
map = function(f,c1,c2,c3,var_args){
var colls = var_args;
switch(arguments.length){
case 1:
return map__1.call(this,f);
case 2:
return map__2.call(this,f,c1);
case 3:
return map__3.call(this,f,c1,c2);
case 4:
return map__4.call(this,f,c1,c2,c3);
default:
var G__29318 = null;
if (arguments.length > 4) {
var G__29319__i = 0, G__29319__a = new Array(arguments.length -  4);
while (G__29319__i < G__29319__a.length) {G__29319__a[G__29319__i] = arguments[G__29319__i + 4]; ++G__29319__i;}
G__29318 = new cljs.core.IndexedSeq(G__29319__a,0);
}
return map__5.cljs$core$IFn$_invoke$arity$variadic(f,c1,c2,c3, G__29318);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
map.cljs$lang$maxFixedArity = 4;
map.cljs$lang$applyTo = map__5.cljs$lang$applyTo;
map.cljs$core$IFn$_invoke$arity$1 = map__1;
map.cljs$core$IFn$_invoke$arity$2 = map__2;
map.cljs$core$IFn$_invoke$arity$3 = map__3;
map.cljs$core$IFn$_invoke$arity$4 = map__4;
map.cljs$core$IFn$_invoke$arity$variadic = map__5.cljs$core$IFn$_invoke$arity$variadic;
return map;
})()
;
/**
* Returns a lazy sequence of the first n items in coll, or all items if
* there are fewer than n.  Returns a stateful transducer when
* no collection is provided.
*/
cljs.core.take = (function() {
var take = null;
var take__1 = (function (n){
return (function (rf){
var na = cljs.core.volatile_BANG_(n);
return ((function (na){
return (function() {
var G__29328 = null;
var G__29328__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__29328__1 = (function (result){
var G__29325 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__29325) : rf.call(null,G__29325));
});
var G__29328__2 = (function (result,input){
var n__$1 = cljs.core.deref(na);
var nn = na.cljs$core$IVolatile$_vreset_BANG_$arity$2(null,(na.cljs$core$IDeref$_deref$arity$1(null) - (1)));
var result__$1 = (((n__$1 > (0)))?(function (){var G__29326 = result;
var G__29327 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__29326,G__29327) : rf.call(null,G__29326,G__29327));
})():result);
if(!((nn > (0)))){
return cljs.core.ensure_reduced(result__$1);
} else {
return result__$1;
}
});
G__29328 = function(result,input){
switch(arguments.length){
case 0:
return G__29328__0.call(this);
case 1:
return G__29328__1.call(this,result);
case 2:
return G__29328__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__29328.cljs$core$IFn$_invoke$arity$0 = G__29328__0;
G__29328.cljs$core$IFn$_invoke$arity$1 = G__29328__1;
G__29328.cljs$core$IFn$_invoke$arity$2 = G__29328__2;
return G__29328;
})()
;})(na))
});
});
var take__2 = (function (n,coll){
return (new cljs.core.LazySeq(null,(function (){
if((n > (0))){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
return cljs.core.cons(cljs.core.first(s),take.cljs$core$IFn$_invoke$arity$2((n - (1)),cljs.core.rest(s)));
} else {
return null;
}
} else {
return null;
}
}),null,null));
});
take = function(n,coll){
switch(arguments.length){
case 1:
return take__1.call(this,n);
case 2:
return take__2.call(this,n,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
take.cljs$core$IFn$_invoke$arity$1 = take__1;
take.cljs$core$IFn$_invoke$arity$2 = take__2;
return take;
})()
;
/**
* Returns a lazy sequence of all but the first n items in coll.
* Returns a stateful transducer when no collection is provided.
*/
cljs.core.drop = (function() {
var drop = null;
var drop__1 = (function (n){
return (function (rf){
var na = cljs.core.volatile_BANG_(n);
return ((function (na){
return (function() {
var G__29335 = null;
var G__29335__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__29335__1 = (function (result){
var G__29332 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__29332) : rf.call(null,G__29332));
});
var G__29335__2 = (function (result,input){
var n__$1 = cljs.core.deref(na);
na.cljs$core$IVolatile$_vreset_BANG_$arity$2(null,(na.cljs$core$IDeref$_deref$arity$1(null) - (1)));

if((n__$1 > (0))){
return result;
} else {
var G__29333 = result;
var G__29334 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__29333,G__29334) : rf.call(null,G__29333,G__29334));
}
});
G__29335 = function(result,input){
switch(arguments.length){
case 0:
return G__29335__0.call(this);
case 1:
return G__29335__1.call(this,result);
case 2:
return G__29335__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__29335.cljs$core$IFn$_invoke$arity$0 = G__29335__0;
G__29335.cljs$core$IFn$_invoke$arity$1 = G__29335__1;
G__29335.cljs$core$IFn$_invoke$arity$2 = G__29335__2;
return G__29335;
})()
;})(na))
});
});
var drop__2 = (function (n,coll){
var step = (function (n__$1,coll__$1){
while(true){
var s = cljs.core.seq(coll__$1);
if(((n__$1 > (0))) && (s)){
var G__29336 = (n__$1 - (1));
var G__29337 = cljs.core.rest(s);
n__$1 = G__29336;
coll__$1 = G__29337;
continue;
} else {
return s;
}
break;
}
});
return (new cljs.core.LazySeq(null,((function (step){
return (function (){
return step(n,coll);
});})(step))
,null,null));
});
drop = function(n,coll){
switch(arguments.length){
case 1:
return drop__1.call(this,n);
case 2:
return drop__2.call(this,n,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
drop.cljs$core$IFn$_invoke$arity$1 = drop__1;
drop.cljs$core$IFn$_invoke$arity$2 = drop__2;
return drop;
})()
;
/**
* Return a lazy sequence of all but the last n (default 1) items in coll
*/
cljs.core.drop_last = (function() {
var drop_last = null;
var drop_last__1 = (function (s){
return drop_last.cljs$core$IFn$_invoke$arity$2((1),s);
});
var drop_last__2 = (function (n,s){
return cljs.core.map.cljs$core$IFn$_invoke$arity$3((function (x,_){
return x;
}),s,cljs.core.drop.cljs$core$IFn$_invoke$arity$2(n,s));
});
drop_last = function(n,s){
switch(arguments.length){
case 1:
return drop_last__1.call(this,n);
case 2:
return drop_last__2.call(this,n,s);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
drop_last.cljs$core$IFn$_invoke$arity$1 = drop_last__1;
drop_last.cljs$core$IFn$_invoke$arity$2 = drop_last__2;
return drop_last;
})()
;
/**
* Returns a seq of the last n items in coll.  Depending on the type
* of coll may be no better than linear time.  For vectors, see also subvec.
*/
cljs.core.take_last = (function take_last(n,coll){
var s = cljs.core.seq(coll);
var lead = cljs.core.seq(cljs.core.drop.cljs$core$IFn$_invoke$arity$2(n,coll));
while(true){
if(lead){
var G__29340 = cljs.core.next(s);
var G__29341 = cljs.core.next(lead);
s = G__29340;
lead = G__29341;
continue;
} else {
return s;
}
break;
}
});
/**
* Returns a lazy sequence of the items in coll starting from the
* first item for which (pred item) returns logical false.  Returns a
* stateful transducer when no collection is provided.
*/
cljs.core.drop_while = (function() {
var drop_while = null;
var drop_while__1 = (function (pred){
return (function (rf){
var da = cljs.core.volatile_BANG_(true);
return ((function (da){
return (function() {
var G__29354 = null;
var G__29354__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__29354__1 = (function (result){
var G__29348 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__29348) : rf.call(null,G__29348));
});
var G__29354__2 = (function (result,input){
var drop_QMARK_ = cljs.core.deref(da);
if(cljs.core.truth_((function (){var and__24262__auto__ = drop_QMARK_;
if(cljs.core.truth_(and__24262__auto__)){
var G__29349 = input;
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__29349) : pred.call(null,G__29349));
} else {
return and__24262__auto__;
}
})())){
return result;
} else {
cljs.core.vreset_BANG_(da,null);

var G__29350 = result;
var G__29351 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__29350,G__29351) : rf.call(null,G__29350,G__29351));
}
});
G__29354 = function(result,input){
switch(arguments.length){
case 0:
return G__29354__0.call(this);
case 1:
return G__29354__1.call(this,result);
case 2:
return G__29354__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__29354.cljs$core$IFn$_invoke$arity$0 = G__29354__0;
G__29354.cljs$core$IFn$_invoke$arity$1 = G__29354__1;
G__29354.cljs$core$IFn$_invoke$arity$2 = G__29354__2;
return G__29354;
})()
;})(da))
});
});
var drop_while__2 = (function (pred,coll){
var step = (function (pred__$1,coll__$1){
while(true){
var s = cljs.core.seq(coll__$1);
if(cljs.core.truth_((function (){var and__24262__auto__ = s;
if(and__24262__auto__){
var G__29353 = cljs.core.first(s);
return (pred__$1.cljs$core$IFn$_invoke$arity$1 ? pred__$1.cljs$core$IFn$_invoke$arity$1(G__29353) : pred__$1.call(null,G__29353));
} else {
return and__24262__auto__;
}
})())){
var G__29355 = pred__$1;
var G__29356 = cljs.core.rest(s);
pred__$1 = G__29355;
coll__$1 = G__29356;
continue;
} else {
return s;
}
break;
}
});
return (new cljs.core.LazySeq(null,((function (step){
return (function (){
return step(pred,coll);
});})(step))
,null,null));
});
drop_while = function(pred,coll){
switch(arguments.length){
case 1:
return drop_while__1.call(this,pred);
case 2:
return drop_while__2.call(this,pred,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
drop_while.cljs$core$IFn$_invoke$arity$1 = drop_while__1;
drop_while.cljs$core$IFn$_invoke$arity$2 = drop_while__2;
return drop_while;
})()
;
/**
* Returns a lazy (infinite!) sequence of repetitions of the items in coll.
*/
cljs.core.cycle = (function cycle(coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
return cljs.core.concat.cljs$core$IFn$_invoke$arity$2(s,cycle(s));
} else {
return null;
}
}),null,null));
});
/**
* Returns a vector of [(take n coll) (drop n coll)]
*/
cljs.core.split_at = (function split_at(n,coll){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,coll),cljs.core.drop.cljs$core$IFn$_invoke$arity$2(n,coll)], null);
});
/**
* Returns a lazy (infinite!, or length n if supplied) sequence of xs.
*/
cljs.core.repeat = (function() {
var repeat = null;
var repeat__1 = (function (x){
return (new cljs.core.LazySeq(null,(function (){
return cljs.core.cons(x,repeat.cljs$core$IFn$_invoke$arity$1(x));
}),null,null));
});
var repeat__2 = (function (n,x){
return cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,repeat.cljs$core$IFn$_invoke$arity$1(x));
});
repeat = function(n,x){
switch(arguments.length){
case 1:
return repeat__1.call(this,n);
case 2:
return repeat__2.call(this,n,x);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
repeat.cljs$core$IFn$_invoke$arity$1 = repeat__1;
repeat.cljs$core$IFn$_invoke$arity$2 = repeat__2;
return repeat;
})()
;
/**
* Returns a lazy seq of n xs.
*/
cljs.core.replicate = (function replicate(n,x){
return cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,cljs.core.repeat.cljs$core$IFn$_invoke$arity$1(x));
});
/**
* Takes a function of no args, presumably with side effects, and
* returns an infinite (or length n if supplied) lazy sequence of calls
* to it
*/
cljs.core.repeatedly = (function() {
var repeatedly = null;
var repeatedly__1 = (function (f){
return (new cljs.core.LazySeq(null,(function (){
return cljs.core.cons((function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})(),repeatedly.cljs$core$IFn$_invoke$arity$1(f));
}),null,null));
});
var repeatedly__2 = (function (n,f){
return cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,repeatedly.cljs$core$IFn$_invoke$arity$1(f));
});
repeatedly = function(n,f){
switch(arguments.length){
case 1:
return repeatedly__1.call(this,n);
case 2:
return repeatedly__2.call(this,n,f);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
repeatedly.cljs$core$IFn$_invoke$arity$1 = repeatedly__1;
repeatedly.cljs$core$IFn$_invoke$arity$2 = repeatedly__2;
return repeatedly;
})()
;
/**
* Returns a lazy sequence of x, (f x), (f (f x)) etc. f must be free of side-effects
*/
cljs.core.iterate = (function iterate(f,x){
return cljs.core.cons(x,(new cljs.core.LazySeq(null,(function (){
return iterate(f,(function (){var G__29365 = x;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__29365) : f.call(null,G__29365));
})());
}),null,null)));
});
/**
* Returns a lazy seq of the first item in each coll, then the second etc.
* @param {...*} var_args
*/
cljs.core.interleave = (function() {
var interleave = null;
var interleave__2 = (function (c1,c2){
return (new cljs.core.LazySeq(null,(function (){
var s1 = cljs.core.seq(c1);
var s2 = cljs.core.seq(c2);
if((s1) && (s2)){
return cljs.core.cons(cljs.core.first(s1),cljs.core.cons(cljs.core.first(s2),interleave.cljs$core$IFn$_invoke$arity$2(cljs.core.rest(s1),cljs.core.rest(s2))));
} else {
return null;
}
}),null,null));
});
var interleave__3 = (function() { 
var G__29368__delegate = function (c1,c2,colls){
return (new cljs.core.LazySeq(null,(function (){
var ss = cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.seq,cljs.core.conj.cljs$core$IFn$_invoke$arity$variadic(colls,c2,cljs.core.array_seq([c1], 0)));
if(cljs.core.every_QMARK_(cljs.core.identity,ss)){
return cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.first,ss),cljs.core.apply.cljs$core$IFn$_invoke$arity$2(interleave,cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.rest,ss)));
} else {
return null;
}
}),null,null));
};
var G__29368 = function (c1,c2,var_args){
var colls = null;
if (arguments.length > 2) {
var G__29369__i = 0, G__29369__a = new Array(arguments.length -  2);
while (G__29369__i < G__29369__a.length) {G__29369__a[G__29369__i] = arguments[G__29369__i + 2]; ++G__29369__i;}
  colls = new cljs.core.IndexedSeq(G__29369__a,0);
} 
return G__29368__delegate.call(this,c1,c2,colls);};
G__29368.cljs$lang$maxFixedArity = 2;
G__29368.cljs$lang$applyTo = (function (arglist__29370){
var c1 = cljs.core.first(arglist__29370);
arglist__29370 = cljs.core.next(arglist__29370);
var c2 = cljs.core.first(arglist__29370);
var colls = cljs.core.rest(arglist__29370);
return G__29368__delegate(c1,c2,colls);
});
G__29368.cljs$core$IFn$_invoke$arity$variadic = G__29368__delegate;
return G__29368;
})()
;
interleave = function(c1,c2,var_args){
var colls = var_args;
switch(arguments.length){
case 2:
return interleave__2.call(this,c1,c2);
default:
var G__29371 = null;
if (arguments.length > 2) {
var G__29372__i = 0, G__29372__a = new Array(arguments.length -  2);
while (G__29372__i < G__29372__a.length) {G__29372__a[G__29372__i] = arguments[G__29372__i + 2]; ++G__29372__i;}
G__29371 = new cljs.core.IndexedSeq(G__29372__a,0);
}
return interleave__3.cljs$core$IFn$_invoke$arity$variadic(c1,c2, G__29371);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
interleave.cljs$lang$maxFixedArity = 2;
interleave.cljs$lang$applyTo = interleave__3.cljs$lang$applyTo;
interleave.cljs$core$IFn$_invoke$arity$2 = interleave__2;
interleave.cljs$core$IFn$_invoke$arity$variadic = interleave__3.cljs$core$IFn$_invoke$arity$variadic;
return interleave;
})()
;
/**
* Returns a lazy seq of the elements of coll separated by sep
*/
cljs.core.interpose = (function interpose(sep,coll){
return cljs.core.drop.cljs$core$IFn$_invoke$arity$2((1),cljs.core.interleave.cljs$core$IFn$_invoke$arity$2(cljs.core.repeat.cljs$core$IFn$_invoke$arity$1(sep),coll));
});
/**
* Take a collection of collections, and return a lazy seq
* of items from the inner collection
*/
cljs.core.flatten1 = (function flatten1(colls){
var cat = (function cat(coll,colls__$1){
return (new cljs.core.LazySeq(null,(function (){
var temp__4124__auto__ = cljs.core.seq(coll);
if(temp__4124__auto__){
var coll__$1 = temp__4124__auto__;
return cljs.core.cons(cljs.core.first(coll__$1),cat(cljs.core.rest(coll__$1),colls__$1));
} else {
if(cljs.core.seq(colls__$1)){
return cat(cljs.core.first(colls__$1),cljs.core.rest(colls__$1));
} else {
return null;
}
}
}),null,null));
});
return cat(null,colls);
});
/**
* Returns the result of applying concat to the result of applying map
* to f and colls.  Thus function f should return a collection. Returns
* a transducer when no collections are provided
* @param {...*} var_args
*/
cljs.core.mapcat = (function() {
var mapcat = null;
var mapcat__1 = (function (f){
return cljs.core.comp.cljs$core$IFn$_invoke$arity$2(cljs.core.map.cljs$core$IFn$_invoke$arity$1(f),cljs.core.cat);
});
var mapcat__2 = (function() { 
var G__29381__delegate = function (f,colls){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.concat,cljs.core.apply.cljs$core$IFn$_invoke$arity$3(cljs.core.map,f,colls));
};
var G__29381 = function (f,var_args){
var colls = null;
if (arguments.length > 1) {
var G__29382__i = 0, G__29382__a = new Array(arguments.length -  1);
while (G__29382__i < G__29382__a.length) {G__29382__a[G__29382__i] = arguments[G__29382__i + 1]; ++G__29382__i;}
  colls = new cljs.core.IndexedSeq(G__29382__a,0);
} 
return G__29381__delegate.call(this,f,colls);};
G__29381.cljs$lang$maxFixedArity = 1;
G__29381.cljs$lang$applyTo = (function (arglist__29383){
var f = cljs.core.first(arglist__29383);
var colls = cljs.core.rest(arglist__29383);
return G__29381__delegate(f,colls);
});
G__29381.cljs$core$IFn$_invoke$arity$variadic = G__29381__delegate;
return G__29381;
})()
;
mapcat = function(f,var_args){
var colls = var_args;
switch(arguments.length){
case 1:
return mapcat__1.call(this,f);
default:
var G__29384 = null;
if (arguments.length > 1) {
var G__29385__i = 0, G__29385__a = new Array(arguments.length -  1);
while (G__29385__i < G__29385__a.length) {G__29385__a[G__29385__i] = arguments[G__29385__i + 1]; ++G__29385__i;}
G__29384 = new cljs.core.IndexedSeq(G__29385__a,0);
}
return mapcat__2.cljs$core$IFn$_invoke$arity$variadic(f, G__29384);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
mapcat.cljs$lang$maxFixedArity = 1;
mapcat.cljs$lang$applyTo = mapcat__2.cljs$lang$applyTo;
mapcat.cljs$core$IFn$_invoke$arity$1 = mapcat__1;
mapcat.cljs$core$IFn$_invoke$arity$variadic = mapcat__2.cljs$core$IFn$_invoke$arity$variadic;
return mapcat;
})()
;
/**
* Returns a lazy sequence of the items in coll for which
* (pred item) returns true. pred must be free of side-effects.
* Returns a transducer when no collection is provided.
*/
cljs.core.filter = (function() {
var filter = null;
var filter__1 = (function (pred){
return (function (rf){
return (function() {
var G__29404 = null;
var G__29404__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__29404__1 = (function (result){
var G__29398 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__29398) : rf.call(null,G__29398));
});
var G__29404__2 = (function (result,input){
if(cljs.core.truth_((function (){var G__29399 = input;
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__29399) : pred.call(null,G__29399));
})())){
var G__29400 = result;
var G__29401 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__29400,G__29401) : rf.call(null,G__29400,G__29401));
} else {
return result;
}
});
G__29404 = function(result,input){
switch(arguments.length){
case 0:
return G__29404__0.call(this);
case 1:
return G__29404__1.call(this,result);
case 2:
return G__29404__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__29404.cljs$core$IFn$_invoke$arity$0 = G__29404__0;
G__29404.cljs$core$IFn$_invoke$arity$1 = G__29404__1;
G__29404.cljs$core$IFn$_invoke$arity$2 = G__29404__2;
return G__29404;
})()
});
});
var filter__2 = (function (pred,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(s)){
var c = cljs.core.chunk_first(s);
var size = cljs.core.count(c);
var b = cljs.core.chunk_buffer(size);
var n__25161__auto___29405 = size;
var i_29406 = (0);
while(true){
if((i_29406 < n__25161__auto___29405)){
if(cljs.core.truth_((function (){var G__29402 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c,i_29406);
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__29402) : pred.call(null,G__29402));
})())){
cljs.core.chunk_append(b,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c,i_29406));
} else {
}

var G__29407 = (i_29406 + (1));
i_29406 = G__29407;
continue;
} else {
}
break;
}

return cljs.core.chunk_cons(cljs.core.chunk(b),filter.cljs$core$IFn$_invoke$arity$2(pred,cljs.core.chunk_rest(s)));
} else {
var f = cljs.core.first(s);
var r = cljs.core.rest(s);
if(cljs.core.truth_((function (){var G__29403 = f;
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__29403) : pred.call(null,G__29403));
})())){
return cljs.core.cons(f,filter.cljs$core$IFn$_invoke$arity$2(pred,r));
} else {
return filter.cljs$core$IFn$_invoke$arity$2(pred,r);
}
}
} else {
return null;
}
}),null,null));
});
filter = function(pred,coll){
switch(arguments.length){
case 1:
return filter__1.call(this,pred);
case 2:
return filter__2.call(this,pred,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
filter.cljs$core$IFn$_invoke$arity$1 = filter__1;
filter.cljs$core$IFn$_invoke$arity$2 = filter__2;
return filter;
})()
;
/**
* Returns a lazy sequence of the items in coll for which
* (pred item) returns false. pred must be free of side-effects.
* Returns a transducer when no collection is provided.
*/
cljs.core.remove = (function() {
var remove = null;
var remove__1 = (function (pred){
return cljs.core.filter.cljs$core$IFn$_invoke$arity$1(cljs.core.complement(pred));
});
var remove__2 = (function (pred,coll){
return cljs.core.filter.cljs$core$IFn$_invoke$arity$2(cljs.core.complement(pred),coll);
});
remove = function(pred,coll){
switch(arguments.length){
case 1:
return remove__1.call(this,pred);
case 2:
return remove__2.call(this,pred,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
remove.cljs$core$IFn$_invoke$arity$1 = remove__1;
remove.cljs$core$IFn$_invoke$arity$2 = remove__2;
return remove;
})()
;
/**
* Returns a lazy sequence of the nodes in a tree, via a depth-first walk.
* branch? must be a fn of one arg that returns true if passed a node
* that can have children (but may not).  children must be a fn of one
* arg that returns a sequence of the children. Will only be called on
* nodes for which branch? returns true. Root is the root node of the
* tree.
*/
cljs.core.tree_seq = (function tree_seq(branch_QMARK_,children,root){
var walk = (function walk(node){
return (new cljs.core.LazySeq(null,(function (){
return cljs.core.cons(node,(cljs.core.truth_((function (){var G__29414 = node;
return (branch_QMARK_.cljs$core$IFn$_invoke$arity$1 ? branch_QMARK_.cljs$core$IFn$_invoke$arity$1(G__29414) : branch_QMARK_.call(null,G__29414));
})())?cljs.core.mapcat.cljs$core$IFn$_invoke$arity$variadic(walk,cljs.core.array_seq([(function (){var G__29415 = node;
return (children.cljs$core$IFn$_invoke$arity$1 ? children.cljs$core$IFn$_invoke$arity$1(G__29415) : children.call(null,G__29415));
})()], 0)):null));
}),null,null));
});
return walk(root);
});
/**
* Takes any nested combination of sequential things (lists, vectors,
* etc.) and returns their contents as a single, flat sequence.
* (flatten nil) returns nil.
*/
cljs.core.flatten = (function flatten(x){
return cljs.core.filter.cljs$core$IFn$_invoke$arity$2((function (p1__29416_SHARP_){
return !(cljs.core.sequential_QMARK_(p1__29416_SHARP_));
}),cljs.core.rest(cljs.core.tree_seq(cljs.core.sequential_QMARK_,cljs.core.seq,x)));
});
/**
* Returns a new coll consisting of to-coll with all of the items of
* from-coll conjoined. A transducer may be supplied.
*/
cljs.core.into = (function() {
var into = null;
var into__2 = (function (to,from){
if(!((to == null))){
if((function (){var G__29419 = to;
if(G__29419){
var bit__24948__auto__ = (G__29419.cljs$lang$protocol_mask$partition1$ & (4));
if((bit__24948__auto__) || (G__29419.cljs$core$IEditableCollection$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return cljs.core.with_meta(cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj_BANG_,cljs.core.transient$(to),from)),cljs.core.meta(to));
} else {
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj,to,from);
}
} else {
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.conj,cljs.core.List.EMPTY,from);
}
});
var into__3 = (function (to,xform,from){
if((function (){var G__29420 = to;
if(G__29420){
var bit__24948__auto__ = (G__29420.cljs$lang$protocol_mask$partition1$ & (4));
if((bit__24948__auto__) || (G__29420.cljs$core$IEditableCollection$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return cljs.core.with_meta(cljs.core.persistent_BANG_(cljs.core.transduce.cljs$core$IFn$_invoke$arity$4(xform,cljs.core.conj_BANG_,cljs.core.transient$(to),from)),cljs.core.meta(to));
} else {
return cljs.core.transduce.cljs$core$IFn$_invoke$arity$4(xform,cljs.core.conj,to,from);
}
});
into = function(to,xform,from){
switch(arguments.length){
case 2:
return into__2.call(this,to,xform);
case 3:
return into__3.call(this,to,xform,from);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
into.cljs$core$IFn$_invoke$arity$2 = into__2;
into.cljs$core$IFn$_invoke$arity$3 = into__3;
return into;
})()
;
/**
* Returns a vector consisting of the result of applying f to the
* set of first items of each coll, followed by applying f to the set
* of second items in each coll, until any one of the colls is
* exhausted.  Any remaining items in other colls are ignored. Function
* f should accept number-of-colls arguments.
* @param {...*} var_args
*/
cljs.core.mapv = (function() {
var mapv = null;
var mapv__2 = (function (f,coll){
return cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (v,o){
return cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$2(v,(function (){var G__29422 = o;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__29422) : f.call(null,G__29422));
})());
}),cljs.core.transient$(cljs.core.PersistentVector.EMPTY),coll));
});
var mapv__3 = (function (f,c1,c2){
return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentVector.EMPTY,cljs.core.map.cljs$core$IFn$_invoke$arity$3(f,c1,c2));
});
var mapv__4 = (function (f,c1,c2,c3){
return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentVector.EMPTY,cljs.core.map.cljs$core$IFn$_invoke$arity$4(f,c1,c2,c3));
});
var mapv__5 = (function() { 
var G__29423__delegate = function (f,c1,c2,c3,colls){
return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentVector.EMPTY,cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(cljs.core.map,f,c1,c2,c3,cljs.core.array_seq([colls], 0)));
};
var G__29423 = function (f,c1,c2,c3,var_args){
var colls = null;
if (arguments.length > 4) {
var G__29424__i = 0, G__29424__a = new Array(arguments.length -  4);
while (G__29424__i < G__29424__a.length) {G__29424__a[G__29424__i] = arguments[G__29424__i + 4]; ++G__29424__i;}
  colls = new cljs.core.IndexedSeq(G__29424__a,0);
} 
return G__29423__delegate.call(this,f,c1,c2,c3,colls);};
G__29423.cljs$lang$maxFixedArity = 4;
G__29423.cljs$lang$applyTo = (function (arglist__29425){
var f = cljs.core.first(arglist__29425);
arglist__29425 = cljs.core.next(arglist__29425);
var c1 = cljs.core.first(arglist__29425);
arglist__29425 = cljs.core.next(arglist__29425);
var c2 = cljs.core.first(arglist__29425);
arglist__29425 = cljs.core.next(arglist__29425);
var c3 = cljs.core.first(arglist__29425);
var colls = cljs.core.rest(arglist__29425);
return G__29423__delegate(f,c1,c2,c3,colls);
});
G__29423.cljs$core$IFn$_invoke$arity$variadic = G__29423__delegate;
return G__29423;
})()
;
mapv = function(f,c1,c2,c3,var_args){
var colls = var_args;
switch(arguments.length){
case 2:
return mapv__2.call(this,f,c1);
case 3:
return mapv__3.call(this,f,c1,c2);
case 4:
return mapv__4.call(this,f,c1,c2,c3);
default:
var G__29426 = null;
if (arguments.length > 4) {
var G__29427__i = 0, G__29427__a = new Array(arguments.length -  4);
while (G__29427__i < G__29427__a.length) {G__29427__a[G__29427__i] = arguments[G__29427__i + 4]; ++G__29427__i;}
G__29426 = new cljs.core.IndexedSeq(G__29427__a,0);
}
return mapv__5.cljs$core$IFn$_invoke$arity$variadic(f,c1,c2,c3, G__29426);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
mapv.cljs$lang$maxFixedArity = 4;
mapv.cljs$lang$applyTo = mapv__5.cljs$lang$applyTo;
mapv.cljs$core$IFn$_invoke$arity$2 = mapv__2;
mapv.cljs$core$IFn$_invoke$arity$3 = mapv__3;
mapv.cljs$core$IFn$_invoke$arity$4 = mapv__4;
mapv.cljs$core$IFn$_invoke$arity$variadic = mapv__5.cljs$core$IFn$_invoke$arity$variadic;
return mapv;
})()
;
/**
* Returns a vector of the items in coll for which
* (pred item) returns true. pred must be free of side-effects.
*/
cljs.core.filterv = (function filterv(pred,coll){
return cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (v,o){
if(cljs.core.truth_((function (){var G__29429 = o;
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__29429) : pred.call(null,G__29429));
})())){
return cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$2(v,o);
} else {
return v;
}
}),cljs.core.transient$(cljs.core.PersistentVector.EMPTY),coll));
});
/**
* Returns a lazy sequence of lists of n items each, at offsets step
* apart. If step is not supplied, defaults to n, i.e. the partitions
* do not overlap. If a pad collection is supplied, use its elements as
* necessary to complete last partition up to n items. In case there are
* not enough padding elements, return a partition with less than n items.
*/
cljs.core.partition = (function() {
var partition = null;
var partition__2 = (function (n,coll){
return partition.cljs$core$IFn$_invoke$arity$3(n,n,coll);
});
var partition__3 = (function (n,step,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
var p = cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,s);
if((n === cljs.core.count(p))){
return cljs.core.cons(p,partition.cljs$core$IFn$_invoke$arity$3(n,step,cljs.core.drop.cljs$core$IFn$_invoke$arity$2(step,s)));
} else {
return null;
}
} else {
return null;
}
}),null,null));
});
var partition__4 = (function (n,step,pad,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
var p = cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,s);
if((n === cljs.core.count(p))){
return cljs.core.cons(p,partition.cljs$core$IFn$_invoke$arity$4(n,step,pad,cljs.core.drop.cljs$core$IFn$_invoke$arity$2(step,s)));
} else {
return cljs.core._conj(cljs.core.List.EMPTY,cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,cljs.core.concat.cljs$core$IFn$_invoke$arity$2(p,pad)));
}
} else {
return null;
}
}),null,null));
});
partition = function(n,step,pad,coll){
switch(arguments.length){
case 2:
return partition__2.call(this,n,step);
case 3:
return partition__3.call(this,n,step,pad);
case 4:
return partition__4.call(this,n,step,pad,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
partition.cljs$core$IFn$_invoke$arity$2 = partition__2;
partition.cljs$core$IFn$_invoke$arity$3 = partition__3;
partition.cljs$core$IFn$_invoke$arity$4 = partition__4;
return partition;
})()
;
/**
* Returns the value in a nested associative structure,
* where ks is a sequence of keys. Returns nil if the key is not present,
* or the not-found value if supplied.
*/
cljs.core.get_in = (function() {
var get_in = null;
var get_in__2 = (function (m,ks){
return get_in.cljs$core$IFn$_invoke$arity$3(m,ks,null);
});
var get_in__3 = (function (m,ks,not_found){
var sentinel = cljs.core.lookup_sentinel;
var m__$1 = m;
var ks__$1 = cljs.core.seq(ks);
while(true){
if(ks__$1){
if(!((function (){var G__29444 = m__$1;
if(G__29444){
var bit__24955__auto__ = (G__29444.cljs$lang$protocol_mask$partition0$ & (256));
if((bit__24955__auto__) || (G__29444.cljs$core$ILookup$)){
return true;
} else {
if((!G__29444.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ILookup,G__29444);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ILookup,G__29444);
}
})())){
return not_found;
} else {
var m__$2 = cljs.core.get.cljs$core$IFn$_invoke$arity$3(m__$1,cljs.core.first(ks__$1),sentinel);
if((sentinel === m__$2)){
return not_found;
} else {
var G__29445 = sentinel;
var G__29446 = m__$2;
var G__29447 = cljs.core.next(ks__$1);
sentinel = G__29445;
m__$1 = G__29446;
ks__$1 = G__29447;
continue;
}
}
} else {
return m__$1;
}
break;
}
});
get_in = function(m,ks,not_found){
switch(arguments.length){
case 2:
return get_in__2.call(this,m,ks);
case 3:
return get_in__3.call(this,m,ks,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
get_in.cljs$core$IFn$_invoke$arity$2 = get_in__2;
get_in.cljs$core$IFn$_invoke$arity$3 = get_in__3;
return get_in;
})()
;
/**
* Associates a value in a nested associative structure, where ks is a
* sequence of keys and v is the new value and returns a new nested structure.
* If any levels do not exist, hash-maps will be created.
*/
cljs.core.assoc_in = (function assoc_in(m,p__29448,v){
var vec__29453 = p__29448;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__29453,(0),null);
var ks = cljs.core.nthnext(vec__29453,(1));
if(ks){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,assoc_in(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),ks,v));
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,v);
}
});
/**
* 'Updates' a value in a nested associative structure, where ks is a
* sequence of keys and f is a function that will take the old value
* and any supplied args and return the new value, and returns a new
* nested structure.  If any levels do not exist, hash-maps will be
* created.
* @param {...*} var_args
*/
cljs.core.update_in = (function() {
var update_in = null;
var update_in__3 = (function (m,p__29454,f){
var vec__29492 = p__29454;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__29492,(0),null);
var ks = cljs.core.nthnext(vec__29492,(1));
if(ks){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,update_in.cljs$core$IFn$_invoke$arity$3(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),ks,f));
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__29493 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__29493) : f.call(null,G__29493));
})());
}
});
var update_in__4 = (function (m,p__29455,f,a){
var vec__29494 = p__29455;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__29494,(0),null);
var ks = cljs.core.nthnext(vec__29494,(1));
if(ks){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,update_in.cljs$core$IFn$_invoke$arity$4(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),ks,f,a));
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__29495 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__29496 = a;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__29495,G__29496) : f.call(null,G__29495,G__29496));
})());
}
});
var update_in__5 = (function (m,p__29456,f,a,b){
var vec__29497 = p__29456;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__29497,(0),null);
var ks = cljs.core.nthnext(vec__29497,(1));
if(ks){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,update_in.cljs$core$IFn$_invoke$arity$5(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),ks,f,a,b));
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__29498 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__29499 = a;
var G__29500 = b;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__29498,G__29499,G__29500) : f.call(null,G__29498,G__29499,G__29500));
})());
}
});
var update_in__6 = (function (m,p__29457,f,a,b,c){
var vec__29501 = p__29457;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__29501,(0),null);
var ks = cljs.core.nthnext(vec__29501,(1));
if(ks){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,update_in.cljs$core$IFn$_invoke$arity$6(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),ks,f,a,b,c));
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__29502 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__29503 = a;
var G__29504 = b;
var G__29505 = c;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__29502,G__29503,G__29504,G__29505) : f.call(null,G__29502,G__29503,G__29504,G__29505));
})());
}
});
var update_in__7 = (function() { 
var G__29507__delegate = function (m,p__29458,f,a,b,c,args){
var vec__29506 = p__29458;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__29506,(0),null);
var ks = cljs.core.nthnext(vec__29506,(1));
if(ks){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(update_in,cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),ks,f,a,cljs.core.array_seq([b,c,args], 0)));
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f,cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),a,b,c,cljs.core.array_seq([args], 0)));
}
};
var G__29507 = function (m,p__29458,f,a,b,c,var_args){
var args = null;
if (arguments.length > 6) {
var G__29508__i = 0, G__29508__a = new Array(arguments.length -  6);
while (G__29508__i < G__29508__a.length) {G__29508__a[G__29508__i] = arguments[G__29508__i + 6]; ++G__29508__i;}
  args = new cljs.core.IndexedSeq(G__29508__a,0);
} 
return G__29507__delegate.call(this,m,p__29458,f,a,b,c,args);};
G__29507.cljs$lang$maxFixedArity = 6;
G__29507.cljs$lang$applyTo = (function (arglist__29509){
var m = cljs.core.first(arglist__29509);
arglist__29509 = cljs.core.next(arglist__29509);
var p__29458 = cljs.core.first(arglist__29509);
arglist__29509 = cljs.core.next(arglist__29509);
var f = cljs.core.first(arglist__29509);
arglist__29509 = cljs.core.next(arglist__29509);
var a = cljs.core.first(arglist__29509);
arglist__29509 = cljs.core.next(arglist__29509);
var b = cljs.core.first(arglist__29509);
arglist__29509 = cljs.core.next(arglist__29509);
var c = cljs.core.first(arglist__29509);
var args = cljs.core.rest(arglist__29509);
return G__29507__delegate(m,p__29458,f,a,b,c,args);
});
G__29507.cljs$core$IFn$_invoke$arity$variadic = G__29507__delegate;
return G__29507;
})()
;
update_in = function(m,p__29458,f,a,b,c,var_args){
var args = var_args;
switch(arguments.length){
case 3:
return update_in__3.call(this,m,p__29458,f);
case 4:
return update_in__4.call(this,m,p__29458,f,a);
case 5:
return update_in__5.call(this,m,p__29458,f,a,b);
case 6:
return update_in__6.call(this,m,p__29458,f,a,b,c);
default:
var G__29510 = null;
if (arguments.length > 6) {
var G__29511__i = 0, G__29511__a = new Array(arguments.length -  6);
while (G__29511__i < G__29511__a.length) {G__29511__a[G__29511__i] = arguments[G__29511__i + 6]; ++G__29511__i;}
G__29510 = new cljs.core.IndexedSeq(G__29511__a,0);
}
return update_in__7.cljs$core$IFn$_invoke$arity$variadic(m,p__29458,f,a,b,c, G__29510);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
update_in.cljs$lang$maxFixedArity = 6;
update_in.cljs$lang$applyTo = update_in__7.cljs$lang$applyTo;
update_in.cljs$core$IFn$_invoke$arity$3 = update_in__3;
update_in.cljs$core$IFn$_invoke$arity$4 = update_in__4;
update_in.cljs$core$IFn$_invoke$arity$5 = update_in__5;
update_in.cljs$core$IFn$_invoke$arity$6 = update_in__6;
update_in.cljs$core$IFn$_invoke$arity$variadic = update_in__7.cljs$core$IFn$_invoke$arity$variadic;
return update_in;
})()
;
/**
* 'Updates' a value in an associative structure, where k is a
* key and f is a function that will take the old value
* and any supplied args and return the new value, and returns a new
* structure.  If the key does not exist, nil is passed as the old value.
* @param {...*} var_args
*/
cljs.core.update = (function() {
var update = null;
var update__3 = (function (m,k,f){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__29522 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__29522) : f.call(null,G__29522));
})());
});
var update__4 = (function (m,k,f,x){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__29523 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__29524 = x;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__29523,G__29524) : f.call(null,G__29523,G__29524));
})());
});
var update__5 = (function (m,k,f,x,y){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__29525 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__29526 = x;
var G__29527 = y;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__29525,G__29526,G__29527) : f.call(null,G__29525,G__29526,G__29527));
})());
});
var update__6 = (function (m,k,f,x,y,z){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__29528 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__29529 = x;
var G__29530 = y;
var G__29531 = z;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__29528,G__29529,G__29530,G__29531) : f.call(null,G__29528,G__29529,G__29530,G__29531));
})());
});
var update__7 = (function() { 
var G__29532__delegate = function (m,k,f,x,y,z,more){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f,cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),x,y,z,cljs.core.array_seq([more], 0)));
};
var G__29532 = function (m,k,f,x,y,z,var_args){
var more = null;
if (arguments.length > 6) {
var G__29533__i = 0, G__29533__a = new Array(arguments.length -  6);
while (G__29533__i < G__29533__a.length) {G__29533__a[G__29533__i] = arguments[G__29533__i + 6]; ++G__29533__i;}
  more = new cljs.core.IndexedSeq(G__29533__a,0);
} 
return G__29532__delegate.call(this,m,k,f,x,y,z,more);};
G__29532.cljs$lang$maxFixedArity = 6;
G__29532.cljs$lang$applyTo = (function (arglist__29534){
var m = cljs.core.first(arglist__29534);
arglist__29534 = cljs.core.next(arglist__29534);
var k = cljs.core.first(arglist__29534);
arglist__29534 = cljs.core.next(arglist__29534);
var f = cljs.core.first(arglist__29534);
arglist__29534 = cljs.core.next(arglist__29534);
var x = cljs.core.first(arglist__29534);
arglist__29534 = cljs.core.next(arglist__29534);
var y = cljs.core.first(arglist__29534);
arglist__29534 = cljs.core.next(arglist__29534);
var z = cljs.core.first(arglist__29534);
var more = cljs.core.rest(arglist__29534);
return G__29532__delegate(m,k,f,x,y,z,more);
});
G__29532.cljs$core$IFn$_invoke$arity$variadic = G__29532__delegate;
return G__29532;
})()
;
update = function(m,k,f,x,y,z,var_args){
var more = var_args;
switch(arguments.length){
case 3:
return update__3.call(this,m,k,f);
case 4:
return update__4.call(this,m,k,f,x);
case 5:
return update__5.call(this,m,k,f,x,y);
case 6:
return update__6.call(this,m,k,f,x,y,z);
default:
var G__29535 = null;
if (arguments.length > 6) {
var G__29536__i = 0, G__29536__a = new Array(arguments.length -  6);
while (G__29536__i < G__29536__a.length) {G__29536__a[G__29536__i] = arguments[G__29536__i + 6]; ++G__29536__i;}
G__29535 = new cljs.core.IndexedSeq(G__29536__a,0);
}
return update__7.cljs$core$IFn$_invoke$arity$variadic(m,k,f,x,y,z, G__29535);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
update.cljs$lang$maxFixedArity = 6;
update.cljs$lang$applyTo = update__7.cljs$lang$applyTo;
update.cljs$core$IFn$_invoke$arity$3 = update__3;
update.cljs$core$IFn$_invoke$arity$4 = update__4;
update.cljs$core$IFn$_invoke$arity$5 = update__5;
update.cljs$core$IFn$_invoke$arity$6 = update__6;
update.cljs$core$IFn$_invoke$arity$variadic = update__7.cljs$core$IFn$_invoke$arity$variadic;
return update;
})()
;

/**
* @constructor
*/
cljs.core.VectorNode = (function (edit,arr){
this.edit = edit;
this.arr = arr;
})

cljs.core.VectorNode.cljs$lang$type = true;

cljs.core.VectorNode.cljs$lang$ctorStr = "cljs.core/VectorNode";

cljs.core.VectorNode.cljs$lang$ctorPrWriter = (function (this__24861__auto__,writer__24862__auto__,opt__24863__auto__){
return cljs.core._write(writer__24862__auto__,"cljs.core/VectorNode");
});

cljs.core.__GT_VectorNode = (function __GT_VectorNode(edit,arr){
return (new cljs.core.VectorNode(edit,arr));
});

cljs.core.pv_fresh_node = (function pv_fresh_node(edit){
return (new cljs.core.VectorNode(edit,[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null]));
});
cljs.core.pv_aget = (function pv_aget(node,idx){
return (node.arr[idx]);
});
cljs.core.pv_aset = (function pv_aset(node,idx,val){
return (node.arr[idx] = val);
});
cljs.core.pv_clone_node = (function pv_clone_node(node){
return (new cljs.core.VectorNode(node.edit,cljs.core.aclone(node.arr)));
});
cljs.core.tail_off = (function tail_off(pv){
var cnt = pv.cnt;
if((cnt < (32))){
return (0);
} else {
return (((cnt - (1)) >>> (5)) << (5));
}
});
cljs.core.new_path = (function new_path(edit,level,node){
var ll = level;
var ret = node;
while(true){
if((ll === (0))){
return ret;
} else {
var embed = ret;
var r = cljs.core.pv_fresh_node(edit);
var _ = cljs.core.pv_aset(r,(0),embed);
var G__29537 = (ll - (5));
var G__29538 = r;
ll = G__29537;
ret = G__29538;
continue;
}
break;
}
});
cljs.core.push_tail = (function push_tail(pv,level,parent,tailnode){
var ret = cljs.core.pv_clone_node(parent);
var subidx = (((pv.cnt - (1)) >>> level) & (31));
if(((5) === level)){
cljs.core.pv_aset(ret,subidx,tailnode);

return ret;
} else {
var child = cljs.core.pv_aget(parent,subidx);
if(!((child == null))){
var node_to_insert = push_tail(pv,(level - (5)),child,tailnode);
cljs.core.pv_aset(ret,subidx,node_to_insert);

return ret;
} else {
var node_to_insert = cljs.core.new_path(null,(level - (5)),tailnode);
cljs.core.pv_aset(ret,subidx,node_to_insert);

return ret;
}
}
});
cljs.core.vector_index_out_of_bounds = (function vector_index_out_of_bounds(i,cnt){
throw (new Error([cljs.core.str("No item "),cljs.core.str(i),cljs.core.str(" in vector of length "),cljs.core.str(cnt)].join('')));
});
cljs.core.first_array_for_longvec = (function first_array_for_longvec(pv){
var node = pv.root;
var level = pv.shift;
while(true){
if((level > (0))){
var G__29543 = cljs.core.pv_aget(node,(0));
var G__29544 = (level - (5));
node = G__29543;
level = G__29544;
continue;
} else {
return node.arr;
}
break;
}
});
cljs.core.unchecked_array_for = (function unchecked_array_for(pv,i){
if((i >= cljs.core.tail_off(pv))){
return pv.tail;
} else {
var node = pv.root;
var level = pv.shift;
while(true){
if((level > (0))){
var G__29545 = cljs.core.pv_aget(node,((i >>> level) & (31)));
var G__29546 = (level - (5));
node = G__29545;
level = G__29546;
continue;
} else {
return node.arr;
}
break;
}
}
});
cljs.core.array_for = (function array_for(pv,i){
if((((0) <= i)) && ((i < pv.cnt))){
return cljs.core.unchecked_array_for(pv,i);
} else {
return cljs.core.vector_index_out_of_bounds(i,pv.cnt);
}
});
cljs.core.do_assoc = (function do_assoc(pv,level,node,i,val){
var ret = cljs.core.pv_clone_node(node);
if((level === (0))){
cljs.core.pv_aset(ret,(i & (31)),val);

return ret;
} else {
var subidx = ((i >>> level) & (31));
cljs.core.pv_aset(ret,subidx,do_assoc(pv,(level - (5)),cljs.core.pv_aget(node,subidx),i,val));

return ret;
}
});
cljs.core.pop_tail = (function pop_tail(pv,level,node){
var subidx = (((pv.cnt - (2)) >>> level) & (31));
if((level > (5))){
var new_child = pop_tail(pv,(level - (5)),cljs.core.pv_aget(node,subidx));
if(((new_child == null)) && ((subidx === (0)))){
return null;
} else {
var ret = cljs.core.pv_clone_node(node);
cljs.core.pv_aset(ret,subidx,new_child);

return ret;
}
} else {
if((subidx === (0))){
return null;
} else {
var ret = cljs.core.pv_clone_node(node);
cljs.core.pv_aset(ret,subidx,null);

return ret;

}
}
});

/**
* @constructor
*/
cljs.core.RangedIterator = (function (i,base,arr,v,start,end){
this.i = i;
this.base = base;
this.arr = arr;
this.v = v;
this.start = start;
this.end = end;
})
cljs.core.RangedIterator.prototype.hasNext = (function (){
var self__ = this;
var this$ = this;
return (self__.i < self__.end);
});

cljs.core.RangedIterator.prototype.next = (function (){
var self__ = this;
var this$ = this;
if(((self__.i - self__.base) === (32))){
self__.arr = cljs.core.unchecked_array_for(self__.v,self__.i);

self__.base = (self__.base + (32));
} else {
}

var ret = (self__.arr[(self__.i & (31))]);
self__.i = (self__.i + (1));

return ret;
});

cljs.core.RangedIterator.cljs$lang$type = true;

cljs.core.RangedIterator.cljs$lang$ctorStr = "cljs.core/RangedIterator";

cljs.core.RangedIterator.cljs$lang$ctorPrWriter = (function (this__24861__auto__,writer__24862__auto__,opt__24863__auto__){
return cljs.core._write(writer__24862__auto__,"cljs.core/RangedIterator");
});

cljs.core.__GT_RangedIterator = (function __GT_RangedIterator(i,base,arr,v,start,end){
return (new cljs.core.RangedIterator(i,base,arr,v,start,end));
});

cljs.core.ranged_iterator = (function ranged_iterator(v,start,end){
var i = start;
return (new cljs.core.RangedIterator(i,(i - (i % (32))),(((start < cljs.core.count(v)))?cljs.core.unchecked_array_for(v,i):null),v,start,end));
});







/**
* @constructor
*/
cljs.core.PersistentVector = (function (meta,cnt,shift,root,tail,__hash){
this.meta = meta;
this.cnt = cnt;
this.shift = shift;
this.root = root;
this.tail = tail;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 167668511;
this.cljs$lang$protocol_mask$partition1$ = 8196;
})
cljs.core.PersistentVector.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentVector.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentVector.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.PersistentVector.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
if(typeof k === 'number'){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(coll__$1,k,not_found);
} else {
return not_found;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = (function (v,f,init){
var self__ = this;
var v__$1 = this;
var i = (0);
var init__$1 = init;
while(true){
if((i < self__.cnt)){
var arr = cljs.core.unchecked_array_for(v__$1,i);
var len = arr.length;
var init__$2 = (function (){var j = (0);
var init__$2 = init__$1;
while(true){
if((j < len)){
var init__$3 = (function (){var G__29556 = init__$2;
var G__29557 = (j + i);
var G__29558 = (arr[j]);
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__29556,G__29557,G__29558) : f.call(null,G__29556,G__29557,G__29558));
})();
if(cljs.core.reduced_QMARK_(init__$3)){
return init__$3;
} else {
var G__29569 = (j + (1));
var G__29570 = init__$3;
j = G__29569;
init__$2 = G__29570;
continue;
}
} else {
return init__$2;
}
break;
}
})();
if(cljs.core.reduced_QMARK_(init__$2)){
var G__29559 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__29559) : cljs.core.deref.call(null,G__29559));
} else {
var G__29571 = (i + len);
var G__29572 = init__$2;
i = G__29571;
init__$1 = G__29572;
continue;
}
} else {
return init__$1;
}
break;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (coll,n){
var self__ = this;
var coll__$1 = this;
return (cljs.core.array_for(coll__$1,n)[(n & (31))]);
});

cljs.core.PersistentVector.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (coll,n,not_found){
var self__ = this;
var coll__$1 = this;
if((((0) <= n)) && ((n < self__.cnt))){
return (cljs.core.unchecked_array_for(coll__$1,n)[(n & (31))]);
} else {
return not_found;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IVector$_assoc_n$arity$3 = (function (coll,n,val){
var self__ = this;
var coll__$1 = this;
if((((0) <= n)) && ((n < self__.cnt))){
if((cljs.core.tail_off(coll__$1) <= n)){
var new_tail = cljs.core.aclone(self__.tail);
(new_tail[(n & (31))] = val);

return (new cljs.core.PersistentVector(self__.meta,self__.cnt,self__.shift,self__.root,new_tail,null));
} else {
return (new cljs.core.PersistentVector(self__.meta,self__.cnt,self__.shift,cljs.core.do_assoc(coll__$1,self__.shift,self__.root,n,val),self__.tail,null));
}
} else {
if((n === self__.cnt)){
return cljs.core._conj(coll__$1,val);
} else {
throw (new Error([cljs.core.str("Index "),cljs.core.str(n),cljs.core.str(" out of bounds  [0,"),cljs.core.str(self__.cnt),cljs.core.str("]")].join('')));

}
}
});

cljs.core.PersistentVector.prototype.cljs$core$IIterable$ = true;

cljs.core.PersistentVector.prototype.cljs$core$IIterable$_iterator$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return cljs.core.ranged_iterator(this$__$1,(0),self__.cnt);
});

cljs.core.PersistentVector.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentVector.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.PersistentVector(self__.meta,self__.cnt,self__.shift,self__.root,self__.tail,self__.__hash));
});

cljs.core.PersistentVector.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.cnt;
});

cljs.core.PersistentVector.prototype.cljs$core$IMapEntry$_key$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll__$1,(0));
});

cljs.core.PersistentVector.prototype.cljs$core$IMapEntry$_val$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll__$1,(1));
});

cljs.core.PersistentVector.prototype.cljs$core$IStack$_peek$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll__$1,(self__.cnt - (1)));
} else {
return null;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IStack$_pop$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt === (0))){
throw (new Error("Can't pop empty vector"));
} else {
if(((1) === self__.cnt)){
return cljs.core._with_meta(cljs.core.PersistentVector.EMPTY,self__.meta);
} else {
if(((1) < (self__.cnt - cljs.core.tail_off(coll__$1)))){
return (new cljs.core.PersistentVector(self__.meta,(self__.cnt - (1)),self__.shift,self__.root,self__.tail.slice((0),(-1)),null));
} else {
var new_tail = cljs.core.unchecked_array_for(coll__$1,(self__.cnt - (2)));
var nr = cljs.core.pop_tail(coll__$1,self__.shift,self__.root);
var new_root = (((nr == null))?cljs.core.PersistentVector.EMPTY_NODE:nr);
var cnt_1 = (self__.cnt - (1));
if((((5) < self__.shift)) && ((cljs.core.pv_aget(new_root,(1)) == null))){
return (new cljs.core.PersistentVector(self__.meta,cnt_1,(self__.shift - (5)),cljs.core.pv_aget(new_root,(0)),new_tail,null));
} else {
return (new cljs.core.PersistentVector(self__.meta,cnt_1,self__.shift,new_root,new_tail,null));
}

}
}
}
});

cljs.core.PersistentVector.prototype.cljs$core$IReversible$_rseq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
return (new cljs.core.RSeq(coll__$1,(self__.cnt - (1)),null));
} else {
return null;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__24695__auto__ = self__.__hash;
if(!((h__24695__auto__ == null))){
return h__24695__auto__;
} else {
var h__24695__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__24695__auto____$1;

return h__24695__auto____$1;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
if((other instanceof cljs.core.PersistentVector)){
if((self__.cnt === cljs.core.count(other))){
var me_iter = cljs.core._iterator(coll__$1);
var you_iter = cljs.core._iterator(other);
while(true){
if(cljs.core.truth_(me_iter.hasNext())){
var x = me_iter.next();
var y = you_iter.next();
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x,y)){
continue;
} else {
return false;
}
} else {
return true;
}
break;
}
} else {
return false;
}
} else {
return cljs.core.equiv_sequential(coll__$1,other);
}
});

cljs.core.PersistentVector.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.TransientVector(self__.cnt,self__.shift,(function (){var G__29560 = self__.root;
return (cljs.core.tv_editable_root.cljs$core$IFn$_invoke$arity$1 ? cljs.core.tv_editable_root.cljs$core$IFn$_invoke$arity$1(G__29560) : cljs.core.tv_editable_root.call(null,G__29560));
})(),(function (){var G__29561 = self__.tail;
return (cljs.core.tv_editable_tail.cljs$core$IFn$_invoke$arity$1 ? cljs.core.tv_editable_tail.cljs$core$IFn$_invoke$arity$1(G__29561) : cljs.core.tv_editable_tail.call(null,G__29561));
})()));
});

cljs.core.PersistentVector.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.PersistentVector.EMPTY,self__.meta);
});

cljs.core.PersistentVector.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (v,f){
var self__ = this;
var v__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(v__$1,f);
});

cljs.core.PersistentVector.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (v,f,init){
var self__ = this;
var v__$1 = this;
var i = (0);
var init__$1 = init;
while(true){
if((i < self__.cnt)){
var arr = cljs.core.unchecked_array_for(v__$1,i);
var len = arr.length;
var init__$2 = (function (){var j = (0);
var init__$2 = init__$1;
while(true){
if((j < len)){
var init__$3 = (function (){var G__29562 = init__$2;
var G__29563 = (arr[j]);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__29562,G__29563) : f.call(null,G__29562,G__29563));
})();
if(cljs.core.reduced_QMARK_(init__$3)){
return init__$3;
} else {
var G__29573 = (j + (1));
var G__29574 = init__$3;
j = G__29573;
init__$2 = G__29574;
continue;
}
} else {
return init__$2;
}
break;
}
})();
if(cljs.core.reduced_QMARK_(init__$2)){
var G__29564 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__29564) : cljs.core.deref.call(null,G__29564));
} else {
var G__29575 = (i + len);
var G__29576 = init__$2;
i = G__29575;
init__$1 = G__29576;
continue;
}
} else {
return init__$1;
}
break;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (coll,k,v){
var self__ = this;
var coll__$1 = this;
if(typeof k === 'number'){
return cljs.core._assoc_n(coll__$1,k,v);
} else {
throw (new Error("Vector's key for assoc must be a number."));
}
});

cljs.core.PersistentVector.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt === (0))){
return null;
} else {
if((self__.cnt <= (32))){
return (new cljs.core.IndexedSeq(self__.tail,(0)));
} else {
var G__29565 = coll__$1;
var G__29566 = cljs.core.first_array_for_longvec(coll__$1);
var G__29567 = (0);
var G__29568 = (0);
return (cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__29565,G__29566,G__29567,G__29568) : cljs.core.chunked_seq.call(null,G__29565,G__29566,G__29567,G__29568));

}
}
});

cljs.core.PersistentVector.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentVector(meta__$1,self__.cnt,self__.shift,self__.root,self__.tail,self__.__hash));
});

cljs.core.PersistentVector.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
if(((self__.cnt - cljs.core.tail_off(coll__$1)) < (32))){
var len = self__.tail.length;
var new_tail = (new Array((len + (1))));
var n__25161__auto___29577 = len;
var i_29578 = (0);
while(true){
if((i_29578 < n__25161__auto___29577)){
(new_tail[i_29578] = (self__.tail[i_29578]));

var G__29579 = (i_29578 + (1));
i_29578 = G__29579;
continue;
} else {
}
break;
}

(new_tail[len] = o);

return (new cljs.core.PersistentVector(self__.meta,(self__.cnt + (1)),self__.shift,self__.root,new_tail,null));
} else {
var root_overflow_QMARK_ = ((self__.cnt >>> (5)) > ((1) << self__.shift));
var new_shift = ((root_overflow_QMARK_)?(self__.shift + (5)):self__.shift);
var new_root = ((root_overflow_QMARK_)?(function (){var n_r = cljs.core.pv_fresh_node(null);
cljs.core.pv_aset(n_r,(0),self__.root);

cljs.core.pv_aset(n_r,(1),cljs.core.new_path(null,self__.shift,(new cljs.core.VectorNode(null,self__.tail))));

return n_r;
})():cljs.core.push_tail(coll__$1,self__.shift,self__.root,(new cljs.core.VectorNode(null,self__.tail))));
return (new cljs.core.PersistentVector(self__.meta,(self__.cnt + (1)),new_shift,new_root,[o],null));
}
});

cljs.core.PersistentVector.prototype.call = (function() {
var G__29580 = null;
var G__29580__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$IIndexed$_nth$arity$2(null,k);
});
var G__29580__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$IIndexed$_nth$arity$3(null,k,not_found);
});
G__29580 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__29580__2.call(this,self__,k);
case 3:
return G__29580__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__29580.cljs$core$IFn$_invoke$arity$2 = G__29580__2;
G__29580.cljs$core$IFn$_invoke$arity$3 = G__29580__3;
return G__29580;
})()
;

cljs.core.PersistentVector.prototype.apply = (function (self__,args29555){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args29555)));
});

cljs.core.PersistentVector.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$IIndexed$_nth$arity$2(null,k);
});

cljs.core.PersistentVector.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$IIndexed$_nth$arity$3(null,k,not_found);
});

cljs.core.PersistentVector.cljs$lang$type = true;

cljs.core.PersistentVector.cljs$lang$ctorStr = "cljs.core/PersistentVector";

cljs.core.PersistentVector.cljs$lang$ctorPrWriter = (function (this__24861__auto__,writer__24862__auto__,opt__24863__auto__){
return cljs.core._write(writer__24862__auto__,"cljs.core/PersistentVector");
});

cljs.core.__GT_PersistentVector = (function __GT_PersistentVector(meta,cnt,shift,root,tail,__hash){
return (new cljs.core.PersistentVector(meta,cnt,shift,root,tail,__hash));
});

cljs.core.PersistentVector.EMPTY_NODE = (new cljs.core.VectorNode(null,[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null]));
cljs.core.PersistentVector.EMPTY = (new cljs.core.PersistentVector(null,(0),(5),cljs.core.PersistentVector.EMPTY_NODE,[],(0)));
cljs.core.PersistentVector.fromArray = (function (xs,no_clone){
var l = xs.length;
var xs__$1 = ((no_clone)?xs:cljs.core.aclone(xs));
if((l < (32))){
return (new cljs.core.PersistentVector(null,l,(5),cljs.core.PersistentVector.EMPTY_NODE,xs__$1,null));
} else {
var node = xs__$1.slice((0),(32));
var v = (new cljs.core.PersistentVector(null,(32),(5),cljs.core.PersistentVector.EMPTY_NODE,node,null));
var i = (32);
var out = v.cljs$core$IEditableCollection$_as_transient$arity$1(null);
while(true){
if((i < l)){
var G__29581 = (i + (1));
var G__29582 = cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$2(out,(xs__$1[i]));
i = G__29581;
out = G__29582;
continue;
} else {
return cljs.core.persistent_BANG_(out);
}
break;
}
}
});
(cljs.core.PersistentVector.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__25252__auto__ = this;
return cljs.core.es6_iterator(this__25252__auto__);
}));
cljs.core.vec = (function vec(coll){
return cljs.core._persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj_BANG_,cljs.core._as_transient(cljs.core.PersistentVector.EMPTY),coll));
});
/**
* @param {...*} var_args
*/
cljs.core.vector = (function() { 
var vector__delegate = function (args){
if(((args instanceof cljs.core.IndexedSeq)) && ((args.i === (0)))){
return cljs.core.PersistentVector.fromArray(args.arr,true);
} else {
return cljs.core.vec(args);
}
};
var vector = function (var_args){
var args = null;
if (arguments.length > 0) {
var G__29583__i = 0, G__29583__a = new Array(arguments.length -  0);
while (G__29583__i < G__29583__a.length) {G__29583__a[G__29583__i] = arguments[G__29583__i + 0]; ++G__29583__i;}
  args = new cljs.core.IndexedSeq(G__29583__a,0);
} 
return vector__delegate.call(this,args);};
vector.cljs$lang$maxFixedArity = 0;
vector.cljs$lang$applyTo = (function (arglist__29584){
var args = cljs.core.seq(arglist__29584);
return vector__delegate(args);
});
vector.cljs$core$IFn$_invoke$arity$variadic = vector__delegate;
return vector;
})()
;

/**
* @constructor
*/
cljs.core.ChunkedSeq = (function (vec,node,i,off,meta,__hash){
this.vec = vec;
this.node = node;
this.i = i;
this.off = off;
this.meta = meta;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 32375020;
this.cljs$lang$protocol_mask$partition1$ = 1536;
})
cljs.core.ChunkedSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.ChunkedSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.ChunkedSeq.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if(((self__.off + (1)) < self__.node.length)){
var s = (function (){var G__29585 = self__.vec;
var G__29586 = self__.node;
var G__29587 = self__.i;
var G__29588 = (self__.off + (1));
return (cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__29585,G__29586,G__29587,G__29588) : cljs.core.chunked_seq.call(null,G__29585,G__29586,G__29587,G__29588));
})();
if((s == null)){
return null;
} else {
return s;
}
} else {
return cljs.core._chunked_next(coll__$1);
}
});

cljs.core.ChunkedSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__24695__auto__ = self__.__hash;
if(!((h__24695__auto__ == null))){
return h__24695__auto__;
} else {
var h__24695__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__24695__auto____$1;

return h__24695__auto____$1;
}
});

cljs.core.ChunkedSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.PersistentVector.EMPTY,self__.meta);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2((function (){var G__29589 = self__.vec;
var G__29590 = (self__.i + self__.off);
var G__29591 = cljs.core.count(self__.vec);
return (cljs.core.subvec.cljs$core$IFn$_invoke$arity$3 ? cljs.core.subvec.cljs$core$IFn$_invoke$arity$3(G__29589,G__29590,G__29591) : cljs.core.subvec.call(null,G__29589,G__29590,G__29591));
})(),f);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3((function (){var G__29592 = self__.vec;
var G__29593 = (self__.i + self__.off);
var G__29594 = cljs.core.count(self__.vec);
return (cljs.core.subvec.cljs$core$IFn$_invoke$arity$3 ? cljs.core.subvec.cljs$core$IFn$_invoke$arity$3(G__29592,G__29593,G__29594) : cljs.core.subvec.call(null,G__29592,G__29593,G__29594));
})(),f,start);
});

cljs.core.ChunkedSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (self__.node[self__.off]);
});

cljs.core.ChunkedSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if(((self__.off + (1)) < self__.node.length)){
var s = (function (){var G__29595 = self__.vec;
var G__29596 = self__.node;
var G__29597 = self__.i;
var G__29598 = (self__.off + (1));
return (cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__29595,G__29596,G__29597,G__29598) : cljs.core.chunked_seq.call(null,G__29595,G__29596,G__29597,G__29598));
})();
if((s == null)){
return cljs.core.List.EMPTY;
} else {
return s;
}
} else {
return cljs.core._chunked_rest(coll__$1);
}
});

cljs.core.ChunkedSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedSeq$_chunked_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.array_chunk.cljs$core$IFn$_invoke$arity$2(self__.node,self__.off);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedSeq$_chunked_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var end = (self__.i + self__.node.length);
if((end < cljs.core._count(self__.vec))){
var G__29599 = self__.vec;
var G__29600 = cljs.core.unchecked_array_for(self__.vec,end);
var G__29601 = end;
var G__29602 = (0);
return (cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__29599,G__29600,G__29601,G__29602) : cljs.core.chunked_seq.call(null,G__29599,G__29600,G__29601,G__29602));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.ChunkedSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,m){
var self__ = this;
var coll__$1 = this;
var G__29603 = self__.vec;
var G__29604 = self__.node;
var G__29605 = self__.i;
var G__29606 = self__.off;
var G__29607 = m;
return (cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$5 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$5(G__29603,G__29604,G__29605,G__29606,G__29607) : cljs.core.chunked_seq.call(null,G__29603,G__29604,G__29605,G__29606,G__29607));
});

cljs.core.ChunkedSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedNext$_chunked_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var end = (self__.i + self__.node.length);
if((end < cljs.core._count(self__.vec))){
var G__29608 = self__.vec;
var G__29609 = cljs.core.unchecked_array_for(self__.vec,end);
var G__29610 = end;
var G__29611 = (0);
return (cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__29608,G__29609,G__29610,G__29611) : cljs.core.chunked_seq.call(null,G__29608,G__29609,G__29610,G__29611));
} else {
return null;
}
});

cljs.core.ChunkedSeq.cljs$lang$type = true;

cljs.core.ChunkedSeq.cljs$lang$ctorStr = "cljs.core/ChunkedSeq";

cljs.core.ChunkedSeq.cljs$lang$ctorPrWriter = (function (this__24861__auto__,writer__24862__auto__,opt__24863__auto__){
return cljs.core._write(writer__24862__auto__,"cljs.core/ChunkedSeq");
});

cljs.core.__GT_ChunkedSeq = (function __GT_ChunkedSeq(vec,node,i,off,meta,__hash){
return (new cljs.core.ChunkedSeq(vec,node,i,off,meta,__hash));
});

(cljs.core.ChunkedSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__25252__auto__ = this;
return cljs.core.es6_iterator(this__25252__auto__);
}));
cljs.core.chunked_seq = (function() {
var chunked_seq = null;
var chunked_seq__3 = (function (vec,i,off){
return (new cljs.core.ChunkedSeq(vec,cljs.core.array_for(vec,i),i,off,null,null));
});
var chunked_seq__4 = (function (vec,node,i,off){
return (new cljs.core.ChunkedSeq(vec,node,i,off,null,null));
});
var chunked_seq__5 = (function (vec,node,i,off,meta){
return (new cljs.core.ChunkedSeq(vec,node,i,off,meta,null));
});
chunked_seq = function(vec,node,i,off,meta){
switch(arguments.length){
case 3:
return chunked_seq__3.call(this,vec,node,i);
case 4:
return chunked_seq__4.call(this,vec,node,i,off);
case 5:
return chunked_seq__5.call(this,vec,node,i,off,meta);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
chunked_seq.cljs$core$IFn$_invoke$arity$3 = chunked_seq__3;
chunked_seq.cljs$core$IFn$_invoke$arity$4 = chunked_seq__4;
chunked_seq.cljs$core$IFn$_invoke$arity$5 = chunked_seq__5;
return chunked_seq;
})()
;

/**
* @constructor
*/
cljs.core.Subvec = (function (meta,v,start,end,__hash){
this.meta = meta;
this.v = v;
this.start = start;
this.end = end;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 166617887;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.Subvec.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.Subvec.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.Subvec.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.Subvec.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
if(typeof k === 'number'){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(coll__$1,k,not_found);
} else {
return not_found;
}
});

cljs.core.Subvec.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (coll,n){
var self__ = this;
var coll__$1 = this;
if(((n < (0))) || ((self__.end <= (self__.start + n)))){
return cljs.core.vector_index_out_of_bounds(n,(self__.end - self__.start));
} else {
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.v,(self__.start + n));
}
});

cljs.core.Subvec.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (coll,n,not_found){
var self__ = this;
var coll__$1 = this;
if(((n < (0))) || ((self__.end <= (self__.start + n)))){
return not_found;
} else {
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(self__.v,(self__.start + n),not_found);
}
});

cljs.core.Subvec.prototype.cljs$core$IVector$_assoc_n$arity$3 = (function (coll,n,val){
var self__ = this;
var coll__$1 = this;
var v_pos = (self__.start + n);
var G__29613 = self__.meta;
var G__29614 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.v,v_pos,val);
var G__29615 = self__.start;
var G__29616 = (function (){var x__24591__auto__ = self__.end;
var y__24592__auto__ = (v_pos + (1));
return ((x__24591__auto__ > y__24592__auto__) ? x__24591__auto__ : y__24592__auto__);
})();
var G__29617 = null;
return (cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5 ? cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5(G__29613,G__29614,G__29615,G__29616,G__29617) : cljs.core.build_subvec.call(null,G__29613,G__29614,G__29615,G__29616,G__29617));
});

cljs.core.Subvec.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.Subvec.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.Subvec(self__.meta,self__.v,self__.start,self__.end,self__.__hash));
});

cljs.core.Subvec.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (self__.end - self__.start);
});

cljs.core.Subvec.prototype.cljs$core$IStack$_peek$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.v,(self__.end - (1)));
});

cljs.core.Subvec.prototype.cljs$core$IStack$_pop$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.start === self__.end)){
throw (new Error("Can't pop empty vector"));
} else {
var G__29618 = self__.meta;
var G__29619 = self__.v;
var G__29620 = self__.start;
var G__29621 = (self__.end - (1));
var G__29622 = null;
return (cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5 ? cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5(G__29618,G__29619,G__29620,G__29621,G__29622) : cljs.core.build_subvec.call(null,G__29618,G__29619,G__29620,G__29621,G__29622));
}
});

cljs.core.Subvec.prototype.cljs$core$IReversible$_rseq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if(!((self__.start === self__.end))){
return (new cljs.core.RSeq(coll__$1,((self__.end - self__.start) - (1)),null));
} else {
return null;
}
});

cljs.core.Subvec.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__24695__auto__ = self__.__hash;
if(!((h__24695__auto__ == null))){
return h__24695__auto__;
} else {
var h__24695__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__24695__auto____$1;

return h__24695__auto____$1;
}
});

cljs.core.Subvec.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.Subvec.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.PersistentVector.EMPTY,self__.meta);
});

cljs.core.Subvec.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(coll__$1,f);
});

cljs.core.Subvec.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start__$1){
var self__ = this;
var coll__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3(coll__$1,f,start__$1);
});

cljs.core.Subvec.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (coll,key,val){
var self__ = this;
var coll__$1 = this;
if(typeof key === 'number'){
return cljs.core._assoc_n(coll__$1,key,val);
} else {
throw (new Error("Subvec's key for assoc must be a number."));
}
});

cljs.core.Subvec.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var subvec_seq = ((function (coll__$1){
return (function subvec_seq(i){
if((i === self__.end)){
return null;
} else {
return cljs.core.cons(cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.v,i),(new cljs.core.LazySeq(null,((function (coll__$1){
return (function (){
return subvec_seq((i + (1)));
});})(coll__$1))
,null,null)));
}
});})(coll__$1))
;
return subvec_seq(self__.start);
});

cljs.core.Subvec.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
var G__29624 = meta__$1;
var G__29625 = self__.v;
var G__29626 = self__.start;
var G__29627 = self__.end;
var G__29628 = self__.__hash;
return (cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5 ? cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5(G__29624,G__29625,G__29626,G__29627,G__29628) : cljs.core.build_subvec.call(null,G__29624,G__29625,G__29626,G__29627,G__29628));
});

cljs.core.Subvec.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
var G__29629 = self__.meta;
var G__29630 = cljs.core._assoc_n(self__.v,self__.end,o);
var G__29631 = self__.start;
var G__29632 = (self__.end + (1));
var G__29633 = null;
return (cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5 ? cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5(G__29629,G__29630,G__29631,G__29632,G__29633) : cljs.core.build_subvec.call(null,G__29629,G__29630,G__29631,G__29632,G__29633));
});

cljs.core.Subvec.prototype.call = (function() {
var G__29634 = null;
var G__29634__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$IIndexed$_nth$arity$2(null,k);
});
var G__29634__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$IIndexed$_nth$arity$3(null,k,not_found);
});
G__29634 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__29634__2.call(this,self__,k);
case 3:
return G__29634__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__29634.cljs$core$IFn$_invoke$arity$2 = G__29634__2;
G__29634.cljs$core$IFn$_invoke$arity$3 = G__29634__3;
return G__29634;
})()
;

cljs.core.Subvec.prototype.apply = (function (self__,args29612){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args29612)));
});

cljs.core.Subvec.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$IIndexed$_nth$arity$2(null,k);
});

cljs.core.Subvec.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$IIndexed$_nth$arity$3(null,k,not_found);
});

cljs.core.Subvec.cljs$lang$type = true;

cljs.core.Subvec.cljs$lang$ctorStr = "cljs.core/Subvec";

cljs.core.Subvec.cljs$lang$ctorPrWriter = (function (this__24861__auto__,writer__24862__auto__,opt__24863__auto__){
return cljs.core._write(writer__24862__auto__,"cljs.core/Subvec");
});

cljs.core.__GT_Subvec = (function __GT_Subvec(meta,v,start,end,__hash){
return (new cljs.core.Subvec(meta,v,start,end,__hash));
});

(cljs.core.Subvec.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__25252__auto__ = this;
return cljs.core.es6_iterator(this__25252__auto__);
}));
cljs.core.build_subvec = (function build_subvec(meta,v,start,end,__hash){
while(true){
if((v instanceof cljs.core.Subvec)){
var G__29635 = meta;
var G__29636 = v.v;
var G__29637 = (v.start + start);
var G__29638 = (v.start + end);
var G__29639 = __hash;
meta = G__29635;
v = G__29636;
start = G__29637;
end = G__29638;
__hash = G__29639;
continue;
} else {
var c = cljs.core.count(v);
if(((start < (0))) || ((end < (0))) || ((start > c)) || ((end > c))){
throw (new Error("Index out of bounds"));
} else {
}

return (new cljs.core.Subvec(meta,v,start,end,__hash));
}
break;
}
});
/**
* Returns a persistent vector of the items in vector from
* start (inclusive) to end (exclusive).  If end is not supplied,
* defaults to (count vector). This operation is O(1) and very fast, as
* the resulting vector shares structure with the original and no
* trimming is done.
*/
cljs.core.subvec = (function() {
var subvec = null;
var subvec__2 = (function (v,start){
return subvec.cljs$core$IFn$_invoke$arity$3(v,start,cljs.core.count(v));
});
var subvec__3 = (function (v,start,end){
return cljs.core.build_subvec(null,v,start,end,null);
});
subvec = function(v,start,end){
switch(arguments.length){
case 2:
return subvec__2.call(this,v,start);
case 3:
return subvec__3.call(this,v,start,end);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
subvec.cljs$core$IFn$_invoke$arity$2 = subvec__2;
subvec.cljs$core$IFn$_invoke$arity$3 = subvec__3;
return subvec;
})()
;
cljs.core.tv_ensure_editable = (function tv_ensure_editable(edit,node){
if((edit === node.edit)){
return node;
} else {
return (new cljs.core.VectorNode(edit,cljs.core.aclone(node.arr)));
}
});
cljs.core.tv_editable_root = (function tv_editable_root(node){
return (new cljs.core.VectorNode((function (){var obj29646 = {};
return obj29646;
})(),cljs.core.aclone(node.arr)));
});
cljs.core.tv_editable_tail = (function tv_editable_tail(tl){
var ret = [null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null];
cljs.core.array_copy(tl,(0),ret,(0),tl.length);

return ret;
});
cljs.core.tv_push_tail = (function tv_push_tail(tv,level,parent,tail_node){
var ret = cljs.core.tv_ensure_editable(tv.root.edit,parent);
var subidx = (((tv.cnt - (1)) >>> level) & (31));
cljs.core.pv_aset(ret,subidx,(((level === (5)))?tail_node:(function (){var child = cljs.core.pv_aget(ret,subidx);
if(!((child == null))){
return tv_push_tail(tv,(level - (5)),child,tail_node);
} else {
return cljs.core.new_path(tv.root.edit,(level - (5)),tail_node);
}
})()));

return ret;
});
cljs.core.tv_pop_tail = (function tv_pop_tail(tv,level,node){
var node__$1 = cljs.core.tv_ensure_editable(tv.root.edit,node);
var subidx = (((tv.cnt - (2)) >>> level) & (31));
if((level > (5))){
var new_child = tv_pop_tail(tv,(level - (5)),cljs.core.pv_aget(node__$1,subidx));
if(((new_child == null)) && ((subidx === (0)))){
return null;
} else {
cljs.core.pv_aset(node__$1,subidx,new_child);

return node__$1;
}
} else {
if((subidx === (0))){
return null;
} else {
cljs.core.pv_aset(node__$1,subidx,null);

return node__$1;

}
}
});
cljs.core.unchecked_editable_array_for = (function unchecked_editable_array_for(tv,i){
if((i >= cljs.core.tail_off(tv))){
return tv.tail;
} else {
var root = tv.root;
var node = root;
var level = tv.shift;
while(true){
if((level > (0))){
var G__29654 = cljs.core.tv_ensure_editable(root.edit,cljs.core.pv_aget(node,((i >>> level) & (31))));
var G__29655 = (level - (5));
node = G__29654;
level = G__29655;
continue;
} else {
return node.arr;
}
break;
}
}
});

/**
* @constructor
*/
cljs.core.TransientVector = (function (cnt,shift,root,tail){
this.cnt = cnt;
this.shift = shift;
this.root = root;
this.tail = tail;
this.cljs$lang$protocol_mask$partition0$ = 275;
this.cljs$lang$protocol_mask$partition1$ = 88;
})
cljs.core.TransientVector.prototype.call = (function() {
var G__29659 = null;
var G__29659__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__29659__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__29659 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__29659__2.call(this,self__,k);
case 3:
return G__29659__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__29659.cljs$core$IFn$_invoke$arity$2 = G__29659__2;
G__29659.cljs$core$IFn$_invoke$arity$3 = G__29659__3;
return G__29659;
})()
;

cljs.core.TransientVector.prototype.apply = (function (self__,args29656){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args29656)));
});

cljs.core.TransientVector.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.TransientVector.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.TransientVector.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.TransientVector.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
if(typeof k === 'number'){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(coll__$1,k,not_found);
} else {
return not_found;
}
});

cljs.core.TransientVector.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (coll,n){
var self__ = this;
var coll__$1 = this;
if(self__.root.edit){
return (cljs.core.array_for(coll__$1,n)[(n & (31))]);
} else {
throw (new Error("nth after persistent!"));
}
});

cljs.core.TransientVector.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (coll,n,not_found){
var self__ = this;
var coll__$1 = this;
if((((0) <= n)) && ((n < self__.cnt))){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll__$1,n);
} else {
return not_found;
}
});

cljs.core.TransientVector.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if(self__.root.edit){
return self__.cnt;
} else {
throw (new Error("count after persistent!"));
}
});

cljs.core.TransientVector.prototype.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3 = (function (tcoll,n,val){
var self__ = this;
var tcoll__$1 = this;
if(self__.root.edit){
if((((0) <= n)) && ((n < self__.cnt))){
if((cljs.core.tail_off(tcoll__$1) <= n)){
(self__.tail[(n & (31))] = val);

return tcoll__$1;
} else {
var new_root = ((function (tcoll__$1){
return (function go(level,node){
var node__$1 = cljs.core.tv_ensure_editable(self__.root.edit,node);
if((level === (0))){
cljs.core.pv_aset(node__$1,(n & (31)),val);

return node__$1;
} else {
var subidx = ((n >>> level) & (31));
cljs.core.pv_aset(node__$1,subidx,go((level - (5)),cljs.core.pv_aget(node__$1,subidx)));

return node__$1;
}
});})(tcoll__$1))
.call(null,self__.shift,self__.root);
self__.root = new_root;

return tcoll__$1;
}
} else {
if((n === self__.cnt)){
return cljs.core._conj_BANG_(tcoll__$1,val);
} else {
throw (new Error([cljs.core.str("Index "),cljs.core.str(n),cljs.core.str(" out of bounds for TransientVector of length"),cljs.core.str(self__.cnt)].join('')));

}
}
} else {
throw (new Error("assoc! after persistent!"));
}
});

cljs.core.TransientVector.prototype.cljs$core$ITransientVector$_pop_BANG_$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
if(self__.root.edit){
if((self__.cnt === (0))){
throw (new Error("Can't pop empty vector"));
} else {
if(((1) === self__.cnt)){
self__.cnt = (0);

return tcoll__$1;
} else {
if((((self__.cnt - (1)) & (31)) > (0))){
self__.cnt = (self__.cnt - (1));

return tcoll__$1;
} else {
var new_tail = cljs.core.unchecked_editable_array_for(tcoll__$1,(self__.cnt - (2)));
var new_root = (function (){var nr = cljs.core.tv_pop_tail(tcoll__$1,self__.shift,self__.root);
if(!((nr == null))){
return nr;
} else {
return (new cljs.core.VectorNode(self__.root.edit,[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null]));
}
})();
if((((5) < self__.shift)) && ((cljs.core.pv_aget(new_root,(1)) == null))){
var new_root__$1 = cljs.core.tv_ensure_editable(self__.root.edit,cljs.core.pv_aget(new_root,(0)));
self__.root = new_root__$1;

self__.shift = (self__.shift - (5));

self__.cnt = (self__.cnt - (1));

self__.tail = new_tail;

return tcoll__$1;
} else {
self__.root = new_root;

self__.cnt = (self__.cnt - (1));

self__.tail = new_tail;

return tcoll__$1;
}

}
}
}
} else {
throw (new Error("pop! after persistent!"));
}
});

cljs.core.TransientVector.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = (function (tcoll,key,val){
var self__ = this;
var tcoll__$1 = this;
if(typeof key === 'number'){
return cljs.core._assoc_n_BANG_(tcoll__$1,key,val);
} else {
throw (new Error("TransientVector's key for assoc! must be a number."));
}
});

cljs.core.TransientVector.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = (function (tcoll,o){
var self__ = this;
var tcoll__$1 = this;
if(self__.root.edit){
if(((self__.cnt - cljs.core.tail_off(tcoll__$1)) < (32))){
(self__.tail[(self__.cnt & (31))] = o);

self__.cnt = (self__.cnt + (1));

return tcoll__$1;
} else {
var tail_node = (new cljs.core.VectorNode(self__.root.edit,self__.tail));
var new_tail = [null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null];
(new_tail[(0)] = o);

self__.tail = new_tail;

if(((self__.cnt >>> (5)) > ((1) << self__.shift))){
var new_root_array = [null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null];
var new_shift = (self__.shift + (5));
(new_root_array[(0)] = self__.root);

(new_root_array[(1)] = cljs.core.new_path(self__.root.edit,self__.shift,tail_node));

self__.root = (new cljs.core.VectorNode(self__.root.edit,new_root_array));

self__.shift = new_shift;

self__.cnt = (self__.cnt + (1));

return tcoll__$1;
} else {
var new_root = cljs.core.tv_push_tail(tcoll__$1,self__.shift,self__.root,tail_node);
self__.root = new_root;

self__.cnt = (self__.cnt + (1));

return tcoll__$1;
}
}
} else {
throw (new Error("conj! after persistent!"));
}
});

cljs.core.TransientVector.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
if(self__.root.edit){
self__.root.edit = null;

var len = (self__.cnt - cljs.core.tail_off(tcoll__$1));
var trimmed_tail = (new Array(len));
cljs.core.array_copy(self__.tail,(0),trimmed_tail,(0),len);

return (new cljs.core.PersistentVector(null,self__.cnt,self__.shift,self__.root,trimmed_tail,null));
} else {
throw (new Error("persistent! called twice"));
}
});

cljs.core.TransientVector.cljs$lang$type = true;

cljs.core.TransientVector.cljs$lang$ctorStr = "cljs.core/TransientVector";

cljs.core.TransientVector.cljs$lang$ctorPrWriter = (function (this__24861__auto__,writer__24862__auto__,opt__24863__auto__){
return cljs.core._write(writer__24862__auto__,"cljs.core/TransientVector");
});

cljs.core.__GT_TransientVector = (function __GT_TransientVector(cnt,shift,root,tail){
return (new cljs.core.TransientVector(cnt,shift,root,tail));
});


/**
* @constructor
*/
cljs.core.PersistentQueueSeq = (function (meta,front,rear,__hash){
this.meta = meta;
this.front = front;
this.rear = rear;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 31850572;
})
cljs.core.PersistentQueueSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentQueueSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__24695__auto__ = self__.__hash;
if(!((h__24695__auto__ == null))){
return h__24695__auto__;
} else {
var h__24695__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__24695__auto____$1;

return h__24695__auto____$1;
}
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.first(self__.front);
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var temp__4124__auto__ = cljs.core.next(self__.front);
if(temp__4124__auto__){
var f1 = temp__4124__auto__;
return (new cljs.core.PersistentQueueSeq(self__.meta,f1,self__.rear,null));
} else {
if((self__.rear == null)){
return cljs.core._empty(coll__$1);
} else {
return (new cljs.core.PersistentQueueSeq(self__.meta,self__.rear,null,null));
}
}
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentQueueSeq(meta__$1,self__.front,self__.rear,self__.__hash));
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.PersistentQueueSeq.cljs$lang$type = true;

cljs.core.PersistentQueueSeq.cljs$lang$ctorStr = "cljs.core/PersistentQueueSeq";

cljs.core.PersistentQueueSeq.cljs$lang$ctorPrWriter = (function (this__24861__auto__,writer__24862__auto__,opt__24863__auto__){
return cljs.core._write(writer__24862__auto__,"cljs.core/PersistentQueueSeq");
});

cljs.core.__GT_PersistentQueueSeq = (function __GT_PersistentQueueSeq(meta,front,rear,__hash){
return (new cljs.core.PersistentQueueSeq(meta,front,rear,__hash));
});

(cljs.core.PersistentQueueSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__25252__auto__ = this;
return cljs.core.es6_iterator(this__25252__auto__);
}));

/**
* @constructor
*/
cljs.core.PersistentQueue = (function (meta,count,front,rear,__hash){
this.meta = meta;
this.count = count;
this.front = front;
this.rear = rear;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 31858766;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.PersistentQueue.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentQueue.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentQueue.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentQueue.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentQueue(self__.meta,self__.count,self__.front,self__.rear,self__.__hash));
});

cljs.core.PersistentQueue.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.count;
});

cljs.core.PersistentQueue.prototype.cljs$core$IStack$_peek$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.first(self__.front);
});

cljs.core.PersistentQueue.prototype.cljs$core$IStack$_pop$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if(cljs.core.truth_(self__.front)){
var temp__4124__auto__ = cljs.core.next(self__.front);
if(temp__4124__auto__){
var f1 = temp__4124__auto__;
return (new cljs.core.PersistentQueue(self__.meta,(self__.count - (1)),f1,self__.rear,null));
} else {
return (new cljs.core.PersistentQueue(self__.meta,(self__.count - (1)),cljs.core.seq(self__.rear),cljs.core.PersistentVector.EMPTY,null));
}
} else {
return coll__$1;
}
});

cljs.core.PersistentQueue.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__24695__auto__ = self__.__hash;
if(!((h__24695__auto__ == null))){
return h__24695__auto__;
} else {
var h__24695__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__24695__auto____$1;

return h__24695__auto____$1;
}
});

cljs.core.PersistentQueue.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.PersistentQueue.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.PersistentQueue.EMPTY,self__.meta);
});

cljs.core.PersistentQueue.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.first(self__.front);
});

cljs.core.PersistentQueue.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.rest(cljs.core.seq(coll__$1));
});

cljs.core.PersistentQueue.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var rear__$1 = cljs.core.seq(self__.rear);
if(cljs.core.truth_((function (){var or__24274__auto__ = self__.front;
if(cljs.core.truth_(or__24274__auto__)){
return or__24274__auto__;
} else {
return rear__$1;
}
})())){
return (new cljs.core.PersistentQueueSeq(null,self__.front,cljs.core.seq(rear__$1),null));
} else {
return null;
}
});

cljs.core.PersistentQueue.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentQueue(meta__$1,self__.count,self__.front,self__.rear,self__.__hash));
});

cljs.core.PersistentQueue.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
if(cljs.core.truth_(self__.front)){
return (new cljs.core.PersistentQueue(self__.meta,(self__.count + (1)),self__.front,cljs.core.conj.cljs$core$IFn$_invoke$arity$2((function (){var or__24274__auto__ = self__.rear;
if(cljs.core.truth_(or__24274__auto__)){
return or__24274__auto__;
} else {
return cljs.core.PersistentVector.EMPTY;
}
})(),o),null));
} else {
return (new cljs.core.PersistentQueue(self__.meta,(self__.count + (1)),cljs.core.conj.cljs$core$IFn$_invoke$arity$2(self__.front,o),cljs.core.PersistentVector.EMPTY,null));
}
});

cljs.core.PersistentQueue.cljs$lang$type = true;

cljs.core.PersistentQueue.cljs$lang$ctorStr = "cljs.core/PersistentQueue";

cljs.core.PersistentQueue.cljs$lang$ctorPrWriter = (function (this__24861__auto__,writer__24862__auto__,opt__24863__auto__){
return cljs.core._write(writer__24862__auto__,"cljs.core/PersistentQueue");
});

cljs.core.__GT_PersistentQueue = (function __GT_PersistentQueue(meta,count,front,rear,__hash){
return (new cljs.core.PersistentQueue(meta,count,front,rear,__hash));
});

cljs.core.PersistentQueue.EMPTY = (new cljs.core.PersistentQueue(null,(0),null,cljs.core.PersistentVector.EMPTY,(0)));
(cljs.core.PersistentQueue.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__25252__auto__ = this;
return cljs.core.es6_iterator(this__25252__auto__);
}));

/**
* @constructor
*/
cljs.core.NeverEquiv = (function (){
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 2097152;
})
cljs.core.NeverEquiv.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (o,other){
var self__ = this;
var o__$1 = this;
return false;
});

cljs.core.NeverEquiv.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.NeverEquiv.cljs$lang$type = true;

cljs.core.NeverEquiv.cljs$lang$ctorStr = "cljs.core/NeverEquiv";

cljs.core.NeverEquiv.cljs$lang$ctorPrWriter = (function (this__24861__auto__,writer__24862__auto__,opt__24863__auto__){
return cljs.core._write(writer__24862__auto__,"cljs.core/NeverEquiv");
});

cljs.core.__GT_NeverEquiv = (function __GT_NeverEquiv(){
return (new cljs.core.NeverEquiv());
});

cljs.core.never_equiv = (new cljs.core.NeverEquiv());
/**
* Assumes y is a map. Returns true if x equals y, otherwise returns
* false.
*/
cljs.core.equiv_map = (function equiv_map(x,y){
return cljs.core.boolean$(((cljs.core.map_QMARK_(y))?(((cljs.core.count(x) === cljs.core.count(y)))?cljs.core.every_QMARK_(cljs.core.identity,cljs.core.map.cljs$core$IFn$_invoke$arity$2((function (xkv){
return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$3(y,cljs.core.first(xkv),cljs.core.never_equiv),cljs.core.second(xkv));
}),x)):null):null));
});
cljs.core.scan_array = (function scan_array(incr,k,array){
var len = array.length;
var i = (0);
while(true){
if((i < len)){
if((k === (array[i]))){
return i;
} else {
var G__29660 = (i + incr);
i = G__29660;
continue;
}
} else {
return null;
}
break;
}
});
cljs.core.obj_map_compare_keys = (function obj_map_compare_keys(a,b){
var a__$1 = cljs.core.hash(a);
var b__$1 = cljs.core.hash(b);
if((a__$1 < b__$1)){
return (-1);
} else {
if((a__$1 > b__$1)){
return (1);
} else {
return (0);

}
}
});
cljs.core.obj_map__GT_hash_map = (function obj_map__GT_hash_map(m,k,v){
var ks = m.keys;
var len = ks.length;
var so = m.strobj;
var mm = cljs.core.meta(m);
var i = (0);
var out = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
while(true){
if((i < len)){
var k__$1 = (ks[i]);
var G__29661 = (i + (1));
var G__29662 = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(out,k__$1,(so[k__$1]));
i = G__29661;
out = G__29662;
continue;
} else {
return cljs.core.with_meta(cljs.core.persistent_BANG_(cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(out,k,v)),mm);
}
break;
}
});
cljs.core.obj_clone = (function obj_clone(obj,ks){
var new_obj = (function (){var obj29666 = {};
return obj29666;
})();
var l = ks.length;
var i_29667 = (0);
while(true){
if((i_29667 < l)){
var k_29668 = (ks[i_29667]);
(new_obj[k_29668] = (obj[k_29668]));

var G__29669 = (i_29667 + (1));
i_29667 = G__29669;
continue;
} else {
}
break;
}

return new_obj;
});

/**
* @constructor
*/
cljs.core.ObjMap = (function (meta,keys,strobj,update_count,__hash){
this.meta = meta;
this.keys = keys;
this.strobj = strobj;
this.update_count = update_count;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 16123663;
this.cljs$lang$protocol_mask$partition1$ = 4;
})
cljs.core.ObjMap.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.ObjMap.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.ObjMap.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.ObjMap.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
if(cljs.core.truth_((function (){var and__24262__auto__ = (function (){var G__29673 = k;
return goog.isString(G__29673);
})();
if(cljs.core.truth_(and__24262__auto__)){
return !((cljs.core.scan_array((1),k,self__.keys) == null));
} else {
return and__24262__auto__;
}
})())){
return (self__.strobj[k]);
} else {
return not_found;
}
});

cljs.core.ObjMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = (function (coll,f,init){
var self__ = this;
var coll__$1 = this;
var len = self__.keys.length;
var keys__$1 = self__.keys.sort(cljs.core.obj_map_compare_keys);
var init__$1 = init;
while(true){
if(cljs.core.seq(keys__$1)){
var k = cljs.core.first(keys__$1);
var init__$2 = (function (){var G__29674 = init__$1;
var G__29675 = k;
var G__29676 = (self__.strobj[k]);
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__29674,G__29675,G__29676) : f.call(null,G__29674,G__29675,G__29676));
})();
if(cljs.core.reduced_QMARK_(init__$2)){
var G__29677 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__29677) : cljs.core.deref.call(null,G__29677));
} else {
var G__29683 = cljs.core.rest(keys__$1);
var G__29684 = init__$2;
keys__$1 = G__29683;
init__$1 = G__29684;
continue;
}
} else {
return init__$1;
}
break;
}
});

cljs.core.ObjMap.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.ObjMap.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.keys.length;
});

cljs.core.ObjMap.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__24695__auto__ = self__.__hash;
if(!((h__24695__auto__ == null))){
return h__24695__auto__;
} else {
var h__24695__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
self__.__hash = h__24695__auto____$1;

return h__24695__auto____$1;
}
});

cljs.core.ObjMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_map(coll__$1,other);
});

cljs.core.ObjMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.transient$(cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentHashMap.EMPTY,coll__$1));
});

cljs.core.ObjMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.ObjMap.EMPTY,self__.meta);
});

cljs.core.ObjMap.prototype.cljs$core$IMap$_dissoc$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
if(cljs.core.truth_((function (){var and__24262__auto__ = (function (){var G__29679 = k;
return goog.isString(G__29679);
})();
if(cljs.core.truth_(and__24262__auto__)){
return !((cljs.core.scan_array((1),k,self__.keys) == null));
} else {
return and__24262__auto__;
}
})())){
var new_keys = cljs.core.aclone(self__.keys);
var new_strobj = cljs.core.obj_clone(self__.strobj,self__.keys);
new_keys.splice(cljs.core.scan_array((1),k,new_keys),(1));

delete new_strobj[k];

return (new cljs.core.ObjMap(self__.meta,new_keys,new_strobj,(self__.update_count + (1)),null));
} else {
return coll__$1;
}
});

cljs.core.ObjMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (coll,k,v){
var self__ = this;
var coll__$1 = this;
if(cljs.core.truth_((function (){var G__29680 = k;
return goog.isString(G__29680);
})())){
if(((self__.update_count > cljs.core.ObjMap.HASHMAP_THRESHOLD)) || ((self__.keys.length >= cljs.core.ObjMap.HASHMAP_THRESHOLD))){
return cljs.core.obj_map__GT_hash_map(coll__$1,k,v);
} else {
if(!((cljs.core.scan_array((1),k,self__.keys) == null))){
var new_strobj = cljs.core.obj_clone(self__.strobj,self__.keys);
(new_strobj[k] = v);

return (new cljs.core.ObjMap(self__.meta,self__.keys,new_strobj,(self__.update_count + (1)),null));
} else {
var new_strobj = cljs.core.obj_clone(self__.strobj,self__.keys);
var new_keys = cljs.core.aclone(self__.keys);
(new_strobj[k] = v);

new_keys.push(k);

return (new cljs.core.ObjMap(self__.meta,new_keys,new_strobj,(self__.update_count + (1)),null));
}
}
} else {
return cljs.core.obj_map__GT_hash_map(coll__$1,k,v);
}
});

cljs.core.ObjMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
if(cljs.core.truth_((function (){var and__24262__auto__ = (function (){var G__29682 = k;
return goog.isString(G__29682);
})();
if(cljs.core.truth_(and__24262__auto__)){
return !((cljs.core.scan_array((1),k,self__.keys) == null));
} else {
return and__24262__auto__;
}
})())){
return true;
} else {
return false;
}
});

cljs.core.ObjMap.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.keys.length > (0))){
return cljs.core.map.cljs$core$IFn$_invoke$arity$2(((function (coll__$1){
return (function (p1__29670_SHARP_){
return (new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[p1__29670_SHARP_,(self__.strobj[p1__29670_SHARP_])],null));
});})(coll__$1))
,self__.keys.sort(cljs.core.obj_map_compare_keys));
} else {
return null;
}
});

cljs.core.ObjMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.ObjMap(meta__$1,self__.keys,self__.strobj,self__.update_count,self__.__hash));
});

cljs.core.ObjMap.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,entry){
var self__ = this;
var coll__$1 = this;
if(cljs.core.vector_QMARK_(entry)){
return cljs.core._assoc(coll__$1,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(1)));
} else {
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj,coll__$1,entry);
}
});

cljs.core.ObjMap.prototype.call = (function() {
var G__29685 = null;
var G__29685__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__29685__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__29685 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__29685__2.call(this,self__,k);
case 3:
return G__29685__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__29685.cljs$core$IFn$_invoke$arity$2 = G__29685__2;
G__29685.cljs$core$IFn$_invoke$arity$3 = G__29685__3;
return G__29685;
})()
;

cljs.core.ObjMap.prototype.apply = (function (self__,args29671){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args29671)));
});

cljs.core.ObjMap.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.ObjMap.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.ObjMap.cljs$lang$type = true;

cljs.core.ObjMap.cljs$lang$ctorStr = "cljs.core/ObjMap";

cljs.core.ObjMap.cljs$lang$ctorPrWriter = (function (this__24861__auto__,writer__24862__auto__,opt__24863__auto__){
return cljs.core._write(writer__24862__auto__,"cljs.core/ObjMap");
});

cljs.core.__GT_ObjMap = (function __GT_ObjMap(meta,keys,strobj,update_count,__hash){
return (new cljs.core.ObjMap(meta,keys,strobj,update_count,__hash));
});

cljs.core.ObjMap.EMPTY = (new cljs.core.ObjMap(null,[],(function (){var obj29687 = {};
return obj29687;
})(),(0),(0)));
cljs.core.ObjMap.HASHMAP_THRESHOLD = (8);
cljs.core.ObjMap.fromObject = (function (ks,obj){
return (new cljs.core.ObjMap(null,ks,obj,(0),null));
});

/**
* @constructor
*/
cljs.core.ES6EntriesIterator = (function (s){
this.s = s;
})
cljs.core.ES6EntriesIterator.prototype.next = (function (){
var self__ = this;
var _ = this;
if(!((self__.s == null))){
var vec__29688 = cljs.core.first(self__.s);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__29688,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__29688,(1),null);
self__.s = cljs.core.next(self__.s);

return {"done": false, "value": [k,v]};
} else {
return {"done": true, "value": null};
}
});

cljs.core.ES6EntriesIterator.cljs$lang$type = true;

cljs.core.ES6EntriesIterator.cljs$lang$ctorStr = "cljs.core/ES6EntriesIterator";

cljs.core.ES6EntriesIterator.cljs$lang$ctorPrWriter = (function (this__24861__auto__,writer__24862__auto__,opt__24863__auto__){
return cljs.core._write(writer__24862__auto__,"cljs.core/ES6EntriesIterator");
});

cljs.core.__GT_ES6EntriesIterator = (function __GT_ES6EntriesIterator(s){
return (new cljs.core.ES6EntriesIterator(s));
});

cljs.core.es6_entries_iterator = (function es6_entries_iterator(coll){
return (new cljs.core.ES6EntriesIterator(cljs.core.seq(coll)));
});

/**
* @constructor
*/
cljs.core.ES6SetEntriesIterator = (function (s){
this.s = s;
})
cljs.core.ES6SetEntriesIterator.prototype.next = (function (){
var self__ = this;
var _ = this;
if(!((self__.s == null))){
var x = cljs.core.first(self__.s);
self__.s = cljs.core.next(self__.s);

return {"done": false, "value": [x,x]};
} else {
return {"done": true, "value": null};
}
});

cljs.core.ES6SetEntriesIterator.cljs$lang$type = true;

cljs.core.ES6SetEntriesIterator.cljs$lang$ctorStr = "cljs.core/ES6SetEntriesIterator";

cljs.core.ES6SetEntriesIterator.cljs$lang$ctorPrWriter = (function (this__24861__auto__,writer__24862__auto__,opt__24863__auto__){
return cljs.core._write(writer__24862__auto__,"cljs.core/ES6SetEntriesIterator");
});

cljs.core.__GT_ES6SetEntriesIterator = (function __GT_ES6SetEntriesIterator(s){
return (new cljs.core.ES6SetEntriesIterator(s));
});

cljs.core.es6_set_entries_iterator = (function es6_set_entries_iterator(coll){
return (new cljs.core.ES6SetEntriesIterator(cljs.core.seq(coll)));
});
cljs.core.array_map_index_of_nil_QMARK_ = (function array_map_index_of_nil_QMARK_(arr,m,k){
var len = arr.length;
var i = (0);
while(true){
if((len <= i)){
return (-1);
} else {
if(((arr[i]) == null)){
return i;
} else {
var G__29689 = (i + (2));
i = G__29689;
continue;

}
}
break;
}
});
cljs.core.array_map_index_of_keyword_QMARK_ = (function array_map_index_of_keyword_QMARK_(arr,m,k){
var len = arr.length;
var kstr = k.fqn;
var i = (0);
while(true){
if((len <= i)){
return (-1);
} else {
if((function (){var k_SINGLEQUOTE_ = (arr[i]);
return ((k_SINGLEQUOTE_ instanceof cljs.core.Keyword)) && ((kstr === k_SINGLEQUOTE_.fqn));
})()){
return i;
} else {
var G__29690 = (i + (2));
i = G__29690;
continue;

}
}
break;
}
});
cljs.core.array_map_index_of_symbol_QMARK_ = (function array_map_index_of_symbol_QMARK_(arr,m,k){
var len = arr.length;
var kstr = k.str;
var i = (0);
while(true){
if((len <= i)){
return (-1);
} else {
if((function (){var k_SINGLEQUOTE_ = (arr[i]);
return ((k_SINGLEQUOTE_ instanceof cljs.core.Symbol)) && ((kstr === k_SINGLEQUOTE_.str));
})()){
return i;
} else {
var G__29691 = (i + (2));
i = G__29691;
continue;

}
}
break;
}
});
cljs.core.array_map_index_of_identical_QMARK_ = (function array_map_index_of_identical_QMARK_(arr,m,k){
var len = arr.length;
var i = (0);
while(true){
if((len <= i)){
return (-1);
} else {
if((k === (arr[i]))){
return i;
} else {
var G__29692 = (i + (2));
i = G__29692;
continue;

}
}
break;
}
});
cljs.core.array_map_index_of_equiv_QMARK_ = (function array_map_index_of_equiv_QMARK_(arr,m,k){
var len = arr.length;
var i = (0);
while(true){
if((len <= i)){
return (-1);
} else {
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(k,(arr[i]))){
return i;
} else {
var G__29693 = (i + (2));
i = G__29693;
continue;

}
}
break;
}
});
cljs.core.array_map_index_of = (function array_map_index_of(m,k){
var arr = m.arr;
if((k instanceof cljs.core.Keyword)){
return cljs.core.array_map_index_of_keyword_QMARK_(arr,m,k);
} else {
if(cljs.core.truth_((function (){var or__24274__auto__ = (function (){var G__29697 = k;
return goog.isString(G__29697);
})();
if(cljs.core.truth_(or__24274__auto__)){
return or__24274__auto__;
} else {
return typeof k === 'number';
}
})())){
return cljs.core.array_map_index_of_identical_QMARK_(arr,m,k);
} else {
if((k instanceof cljs.core.Symbol)){
return cljs.core.array_map_index_of_symbol_QMARK_(arr,m,k);
} else {
if((k == null)){
return cljs.core.array_map_index_of_nil_QMARK_(arr,m,k);
} else {
return cljs.core.array_map_index_of_equiv_QMARK_(arr,m,k);

}
}
}
}
});
cljs.core.array_map_extend_kv = (function array_map_extend_kv(m,k,v){
var arr = m.arr;
var l = arr.length;
var narr = (new Array((l + (2))));
var i_29698 = (0);
while(true){
if((i_29698 < l)){
(narr[i_29698] = (arr[i_29698]));

var G__29699 = (i_29698 + (1));
i_29698 = G__29699;
continue;
} else {
}
break;
}

(narr[l] = k);

(narr[(l + (1))] = v);

return narr;
});

/**
* @constructor
*/
cljs.core.PersistentArrayMapSeq = (function (arr,i,_meta){
this.arr = arr;
this.i = i;
this._meta = _meta;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32374990;
})
cljs.core.PersistentArrayMapSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentArrayMapSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__._meta;
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.i < (self__.arr.length - (2)))){
return (new cljs.core.PersistentArrayMapSeq(self__.arr,(self__.i + (2)),self__._meta));
} else {
return null;
}
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return ((self__.arr.length - self__.i) / (2));
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.hash_ordered_coll(coll__$1);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__._meta);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(self__.arr[self__.i]),(self__.arr[(self__.i + (1))])], null);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.i < (self__.arr.length - (2)))){
return (new cljs.core.PersistentArrayMapSeq(self__.arr,(self__.i + (2)),self__._meta));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,new_meta){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentArrayMapSeq(self__.arr,self__.i,new_meta));
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.PersistentArrayMapSeq.cljs$lang$type = true;

cljs.core.PersistentArrayMapSeq.cljs$lang$ctorStr = "cljs.core/PersistentArrayMapSeq";

cljs.core.PersistentArrayMapSeq.cljs$lang$ctorPrWriter = (function (this__24861__auto__,writer__24862__auto__,opt__24863__auto__){
return cljs.core._write(writer__24862__auto__,"cljs.core/PersistentArrayMapSeq");
});

cljs.core.__GT_PersistentArrayMapSeq = (function __GT_PersistentArrayMapSeq(arr,i,_meta){
return (new cljs.core.PersistentArrayMapSeq(arr,i,_meta));
});

(cljs.core.PersistentArrayMapSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__25252__auto__ = this;
return cljs.core.es6_iterator(this__25252__auto__);
}));
cljs.core.persistent_array_map_seq = (function persistent_array_map_seq(arr,i,_meta){
if((i <= (arr.length - (2)))){
return (new cljs.core.PersistentArrayMapSeq(arr,i,_meta));
} else {
return null;
}
});


/**
* @constructor
*/
cljs.core.PersistentArrayMapIterator = (function (arr,i,cnt){
this.arr = arr;
this.i = i;
this.cnt = cnt;
})
cljs.core.PersistentArrayMapIterator.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
return (self__.i < self__.cnt);
});

cljs.core.PersistentArrayMapIterator.prototype.next = (function (){
var self__ = this;
var _ = this;
var ret = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(self__.arr[self__.i]),(self__.arr[(self__.i + (1))])], null);
self__.i = (self__.i + (2));

return ret;
});

cljs.core.PersistentArrayMapIterator.cljs$lang$type = true;

cljs.core.PersistentArrayMapIterator.cljs$lang$ctorStr = "cljs.core/PersistentArrayMapIterator";

cljs.core.PersistentArrayMapIterator.cljs$lang$ctorPrWriter = (function (this__24861__auto__,writer__24862__auto__,opt__24863__auto__){
return cljs.core._write(writer__24862__auto__,"cljs.core/PersistentArrayMapIterator");
});

cljs.core.__GT_PersistentArrayMapIterator = (function __GT_PersistentArrayMapIterator(arr,i,cnt){
return (new cljs.core.PersistentArrayMapIterator(arr,i,cnt));
});


/**
* @constructor
*/
cljs.core.PersistentArrayMap = (function (meta,cnt,arr,__hash){
this.meta = meta;
this.cnt = cnt;
this.arr = arr;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 16647951;
this.cljs$lang$protocol_mask$partition1$ = 8196;
})
cljs.core.PersistentArrayMap.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentArrayMap.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentArrayMap.prototype.keys = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator((function (){var G__29701 = coll;
return (cljs.core.keys.cljs$core$IFn$_invoke$arity$1 ? cljs.core.keys.cljs$core$IFn$_invoke$arity$1(G__29701) : cljs.core.keys.call(null,G__29701));
})());
});

cljs.core.PersistentArrayMap.prototype.entries = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_entries_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentArrayMap.prototype.values = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator((function (){var G__29702 = coll;
return (cljs.core.vals.cljs$core$IFn$_invoke$arity$1 ? cljs.core.vals.cljs$core$IFn$_invoke$arity$1(G__29702) : cljs.core.vals.call(null,G__29702));
})());
});

cljs.core.PersistentArrayMap.prototype.has = (function (k){
var self__ = this;
var coll = this;
return cljs.core.contains_QMARK_(coll,k);
});

cljs.core.PersistentArrayMap.prototype.get = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentArrayMap.prototype.forEach = (function (f){
var self__ = this;
var coll = this;
var seq__29703 = cljs.core.seq(coll);
var chunk__29704 = null;
var count__29705 = (0);
var i__29706 = (0);
while(true){
if((i__29706 < count__29705)){
var vec__29707 = chunk__29704.cljs$core$IIndexed$_nth$arity$2(null,i__29706);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__29707,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__29707,(1),null);
var G__29708_29721 = v;
var G__29709_29722 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__29708_29721,G__29709_29722) : f.call(null,G__29708_29721,G__29709_29722));

var G__29723 = seq__29703;
var G__29724 = chunk__29704;
var G__29725 = count__29705;
var G__29726 = (i__29706 + (1));
seq__29703 = G__29723;
chunk__29704 = G__29724;
count__29705 = G__29725;
i__29706 = G__29726;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__29703);
if(temp__4126__auto__){
var seq__29703__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__29703__$1)){
var c__25061__auto__ = cljs.core.chunk_first(seq__29703__$1);
var G__29727 = cljs.core.chunk_rest(seq__29703__$1);
var G__29728 = c__25061__auto__;
var G__29729 = cljs.core.count(c__25061__auto__);
var G__29730 = (0);
seq__29703 = G__29727;
chunk__29704 = G__29728;
count__29705 = G__29729;
i__29706 = G__29730;
continue;
} else {
var vec__29710 = cljs.core.first(seq__29703__$1);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__29710,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__29710,(1),null);
var G__29711_29731 = v;
var G__29712_29732 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__29711_29731,G__29712_29732) : f.call(null,G__29711_29731,G__29712_29732));

var G__29733 = cljs.core.next(seq__29703__$1);
var G__29734 = null;
var G__29735 = (0);
var G__29736 = (0);
seq__29703 = G__29733;
chunk__29704 = G__29734;
count__29705 = G__29735;
i__29706 = G__29736;
continue;
}
} else {
return null;
}
}
break;
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.PersistentArrayMap.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
var idx = cljs.core.array_map_index_of(coll__$1,k);
if((idx === (-1))){
return not_found;
} else {
return (self__.arr[(idx + (1))]);
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = (function (coll,f,init){
var self__ = this;
var coll__$1 = this;
var len = self__.arr.length;
var i = (0);
var init__$1 = init;
while(true){
if((i < len)){
var init__$2 = (function (){var G__29713 = init__$1;
var G__29714 = (self__.arr[i]);
var G__29715 = (self__.arr[(i + (1))]);
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__29713,G__29714,G__29715) : f.call(null,G__29713,G__29714,G__29715));
})();
if(cljs.core.reduced_QMARK_(init__$2)){
var G__29716 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__29716) : cljs.core.deref.call(null,G__29716));
} else {
var G__29737 = (i + (2));
var G__29738 = init__$2;
i = G__29737;
init__$1 = G__29738;
continue;
}
} else {
return init__$1;
}
break;
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IIterable$ = true;

cljs.core.PersistentArrayMap.prototype.cljs$core$IIterable$_iterator$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return (new cljs.core.PersistentArrayMapIterator(self__.arr,(0),(self__.cnt * (2))));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentArrayMap.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.PersistentArrayMap(self__.meta,self__.cnt,self__.arr,self__.__hash));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.cnt;
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__24695__auto__ = self__.__hash;
if(!((h__24695__auto__ == null))){
return h__24695__auto__;
} else {
var h__24695__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
self__.__hash = h__24695__auto____$1;

return h__24695__auto____$1;
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
if((function (){var G__29717 = other;
if(G__29717){
var bit__24948__auto__ = (G__29717.cljs$lang$protocol_mask$partition0$ & (1024));
if((bit__24948__auto__) || (G__29717.cljs$core$IMap$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
var alen = self__.arr.length;
var other__$1 = other;
if((self__.cnt === other__$1.cljs$core$ICounted$_count$arity$1(null))){
var i = (0);
while(true){
if((i < alen)){
var v = other__$1.cljs$core$ILookup$_lookup$arity$3(null,(self__.arr[i]),cljs.core.lookup_sentinel);
if(!((v === cljs.core.lookup_sentinel))){
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2((self__.arr[(i + (1))]),v)){
var G__29739 = (i + (2));
i = G__29739;
continue;
} else {
return false;
}
} else {
return false;
}
} else {
return true;
}
break;
}
} else {
return false;
}
} else {
return cljs.core.equiv_map(coll__$1,other);
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.TransientArrayMap((function (){var obj29719 = {};
return obj29719;
})(),self__.arr.length,cljs.core.aclone(self__.arr)));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._with_meta(cljs.core.PersistentArrayMap.EMPTY,self__.meta);
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IMap$_dissoc$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
var idx = cljs.core.array_map_index_of(coll__$1,k);
if((idx >= (0))){
var len = self__.arr.length;
var new_len = (len - (2));
if((new_len === (0))){
return cljs.core._empty(coll__$1);
} else {
var new_arr = (new Array(new_len));
var s = (0);
var d = (0);
while(true){
if((s >= len)){
return (new cljs.core.PersistentArrayMap(self__.meta,(self__.cnt - (1)),new_arr,null));
} else {
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(k,(self__.arr[s]))){
var G__29740 = (s + (2));
var G__29741 = d;
s = G__29740;
d = G__29741;
continue;
} else {
(new_arr[d] = (self__.arr[s]));

(new_arr[(d + (1))] = (self__.arr[(s + (1))]));

var G__29742 = (s + (2));
var G__29743 = (d + (2));
s = G__29742;
d = G__29743;
continue;

}
}
break;
}
}
} else {
return coll__$1;
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (coll,k,v){
var self__ = this;
var coll__$1 = this;
var idx = cljs.core.array_map_index_of(coll__$1,k);
if((idx === (-1))){
if((self__.cnt < cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD)){
var arr__$1 = cljs.core.array_map_extend_kv(coll__$1,k,v);
return (new cljs.core.PersistentArrayMap(self__.meta,(self__.cnt + (1)),arr__$1,null));
} else {
return cljs.core._with_meta(cljs.core._assoc(cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentHashMap.EMPTY,coll__$1),k,v),self__.meta);
}
} else {
if((v === (self__.arr[(idx + (1))]))){
return coll__$1;
} else {
var arr__$1 = (function (){var G__29720 = cljs.core.aclone(self__.arr);
(G__29720[(idx + (1))] = v);

return G__29720;
})();
return (new cljs.core.PersistentArrayMap(self__.meta,self__.cnt,arr__$1,null));

}
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return !((cljs.core.array_map_index_of(coll__$1,k) === (-1)));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.persistent_array_map_seq(self__.arr,(0),null);
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentArrayMap(meta__$1,self__.cnt,self__.arr,self__.__hash));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,entry){
var self__ = this;
var coll__$1 = this;
if(cljs.core.vector_QMARK_(entry)){
return cljs.core._assoc(coll__$1,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(1)));
} else {
var ret = coll__$1;
var es = cljs.core.seq(entry);
while(true){
if((es == null)){
return ret;
} else {
var e = cljs.core.first(es);
if(cljs.core.vector_QMARK_(e)){
var G__29744 = cljs.core._assoc(ret,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e,(1)));
var G__29745 = cljs.core.next(es);
ret = G__29744;
es = G__29745;
continue;
} else {
throw (new Error("conj on a map takes map entries or seqables of map entries"));
}
}
break;
}
}
});

cljs.core.PersistentArrayMap.prototype.call = (function() {
var G__29746 = null;
var G__29746__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__29746__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__29746 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__29746__2.call(this,self__,k);
case 3:
return G__29746__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__29746.cljs$core$IFn$_invoke$arity$2 = G__29746__2;
G__29746.cljs$core$IFn$_invoke$arity$3 = G__29746__3;
return G__29746;
})()
;

cljs.core.PersistentArrayMap.prototype.apply = (function (self__,args29700){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args29700)));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.PersistentArrayMap.cljs$lang$type = true;

cljs.core.PersistentArrayMap.cljs$lang$ctorStr = "cljs.core/PersistentArrayMap";

cljs.core.PersistentArrayMap.cljs$lang$ctorPrWriter = (function (this__24861__auto__,writer__24862__auto__,opt__24863__auto__){
return cljs.core._write(writer__24862__auto__,"cljs.core/PersistentArrayMap");
});

cljs.core.__GT_PersistentArrayMap = (function __GT_PersistentArrayMap(meta,cnt,arr,__hash){
return (new cljs.core.PersistentArrayMap(meta,cnt,arr,__hash));
});

cljs.core.PersistentArrayMap.EMPTY = (new cljs.core.PersistentArrayMap(null,(0),[],null));
cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD = (8);
cljs.core.PersistentArrayMap.fromArray = (function (arr,no_clone,no_check){
var arr__$1 = ((no_clone)?arr:cljs.core.aclone(arr));
if(no_check){
var cnt = (arr__$1.length / (2));
return (new cljs.core.PersistentArrayMap(null,cnt,arr__$1,null));
} else {
var len = arr__$1.length;
var i = (0);
var ret = cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY);
while(true){
if((i < len)){
var G__29747 = (i + (2));
var G__29748 = cljs.core._assoc_BANG_(ret,(arr__$1[i]),(arr__$1[(i + (1))]));
i = G__29747;
ret = G__29748;
continue;
} else {
return cljs.core._persistent_BANG_(ret);
}
break;
}
}
});
(cljs.core.PersistentArrayMap.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__25252__auto__ = this;
return cljs.core.es6_iterator(this__25252__auto__);
}));

/**
* @constructor
*/
cljs.core.TransientArrayMap = (function (editable_QMARK_,len,arr){
this.editable_QMARK_ = editable_QMARK_;
this.len = len;
this.arr = arr;
this.cljs$lang$protocol_mask$partition1$ = 56;
this.cljs$lang$protocol_mask$partition0$ = 258;
})
cljs.core.TransientArrayMap.prototype.cljs$core$ITransientMap$_dissoc_BANG_$arity$2 = (function (tcoll,key){
var self__ = this;
var tcoll__$1 = this;
if(cljs.core.truth_(self__.editable_QMARK_)){
var idx = cljs.core.array_map_index_of(tcoll__$1,key);
if((idx >= (0))){
(self__.arr[idx] = (self__.arr[(self__.len - (2))]));

(self__.arr[(idx + (1))] = (self__.arr[(self__.len - (1))]));

var G__29749_29757 = self__.arr;
G__29749_29757.pop();

G__29749_29757.pop();


self__.len = (self__.len - (2));
} else {
}

return tcoll__$1;
} else {
throw (new Error("dissoc! after persistent!"));
}
});

cljs.core.TransientArrayMap.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = (function (tcoll,key,val){
var self__ = this;
var tcoll__$1 = this;
if(cljs.core.truth_(self__.editable_QMARK_)){
var idx = cljs.core.array_map_index_of(tcoll__$1,key);
if((idx === (-1))){
if(((self__.len + (2)) <= ((2) * cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD))){
self__.len = (self__.len + (2));

self__.arr.push(key);

self__.arr.push(val);

return tcoll__$1;
} else {
return cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3((function (){var G__29750 = self__.len;
var G__29751 = self__.arr;
return (cljs.core.array__GT_transient_hash_map.cljs$core$IFn$_invoke$arity$2 ? cljs.core.array__GT_transient_hash_map.cljs$core$IFn$_invoke$arity$2(G__29750,G__29751) : cljs.core.array__GT_transient_hash_map.call(null,G__29750,G__29751));
})(),key,val);
}
} else {
if((val === (self__.arr[(idx + (1))]))){
return tcoll__$1;
} else {
(self__.arr[(idx + (1))] = val);

return tcoll__$1;
}
}
} else {
throw (new Error("assoc! after persistent!"));
}
});

cljs.core.TransientArrayMap.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = (function (tcoll,o){
var self__ = this;
var tcoll__$1 = this;
if(cljs.core.truth_(self__.editable_QMARK_)){
if((function (){var G__29752 = o;
if(G__29752){
var bit__24955__auto__ = (G__29752.cljs$lang$protocol_mask$partition0$ & (2048));
if((bit__24955__auto__) || (G__29752.cljs$core$IMapEntry$)){
return true;
} else {
if((!G__29752.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IMapEntry,G__29752);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IMapEntry,G__29752);
}
})()){
return cljs.core._assoc_BANG_(tcoll__$1,(function (){var G__29753 = o;
return (cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__29753) : cljs.core.key.call(null,G__29753));
})(),(function (){var G__29754 = o;
return (cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(G__29754) : cljs.core.val.call(null,G__29754));
})());
} else {
var es = cljs.core.seq(o);
var tcoll__$2 = tcoll__$1;
while(true){
var temp__4124__auto__ = cljs.core.first(es);
if(cljs.core.truth_(temp__4124__auto__)){
var e = temp__4124__auto__;
var G__29758 = cljs.core.next(es);
var G__29759 = cljs.core._assoc_BANG_(tcoll__$2,(function (){var G__29755 = e;
return (cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__29755) : cljs.core.key.call(null,G__29755));
})(),(function (){var G__29756 = e;
return (cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(G__29756) : cljs.core.val.call(null,G__29756));
})());
es = G__29758;
tcoll__$2 = G__29759;
continue;
} else {
return tcoll__$2;
}
break;
}
}
} else {
throw (new Error("conj! after persistent!"));
}
});

cljs.core.TransientArrayMap.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
if(cljs.core.truth_(self__.editable_QMARK_)){
self__.editable_QMARK_ = false;

return (new cljs.core.PersistentArrayMap(null,cljs.core.quot(self__.len,(2)),self__.arr,null));
} else {
throw (new Error("persistent! called twice"));
}
});

cljs.core.TransientArrayMap.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (tcoll,k){
var self__ = this;
var tcoll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(tcoll__$1,k,null);
});

cljs.core.TransientArrayMap.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (tcoll,k,not_found){
var self__ = this;
var tcoll__$1 = this;
if(cljs.core.truth_(self__.editable_QMARK_)){
var idx = cljs.core.array_map_index_of(tcoll__$1,k);
if((idx === (-1))){
return not_found;
} else {
return (self__.arr[(idx + (1))]);
}
} else {
throw (new Error("lookup after persistent!"));
}
});

cljs.core.TransientArrayMap.prototype.cljs$core$ICounted$_count$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
if(cljs.core.truth_(self__.editable_QMARK_)){
return cljs.core.quot(self__.len,(2));
} else {
throw (new Error("count after persistent!"));
}
});

cljs.core.TransientArrayMap.cljs$lang$type = true;

cljs.core.TransientArrayMap.cljs$lang$ctorStr = "cljs.core/TransientArrayMap";

cljs.core.TransientArrayMap.cljs$lang$ctorPrWriter = (function (this__24861__auto__,writer__24862__auto__,opt__24863__auto__){
return cljs.core._write(writer__24862__auto__,"cljs.core/TransientArrayMap");
});

cljs.core.__GT_TransientArrayMap = (function __GT_TransientArrayMap(editable_QMARK_,len,arr){
return (new cljs.core.TransientArrayMap(editable_QMARK_,len,arr));
});


cljs.core.array__GT_transient_hash_map = (function array__GT_transient_hash_map(len,arr){
var out = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
var i = (0);
while(true){
if((i < len)){
var G__29760 = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(out,(arr[i]),(arr[(i + (1))]));
var G__29761 = (i + (2));
out = G__29760;
i = G__29761;
continue;
} else {
return out;
}
break;
}
});

/**
* @constructor
*/
cljs.core.Box = (function (val){
this.val = val;
})

cljs.core.Box.cljs$lang$type = true;

cljs.core.Box.cljs$lang$ctorStr = "cljs.core/Box";

cljs.core.Box.cljs$lang$ctorPrWriter = (function (this__24861__auto__,writer__24862__auto__,opt__24863__auto__){
return cljs.core._write(writer__24862__auto__,"cljs.core/Box");
});

cljs.core.__GT_Box = (function __GT_Box(val){
return (new cljs.core.Box(val));
});






cljs.core.key_test = (function key_test(key,other){
if((key === other)){
return true;
} else {
if(cljs.core.keyword_identical_QMARK_(key,other)){
return true;
} else {
return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(key,other);

}
}
});
cljs.core.mask = (function mask(hash,shift){
return ((hash >>> shift) & (31));
});
cljs.core.clone_and_set = (function() {
var clone_and_set = null;
var clone_and_set__3 = (function (arr,i,a){
var G__29764 = cljs.core.aclone(arr);
(G__29764[i] = a);

return G__29764;
});
var clone_and_set__5 = (function (arr,i,a,j,b){
var G__29765 = cljs.core.aclone(arr);
(G__29765[i] = a);

(G__29765[j] = b);

return G__29765;
});
clone_and_set = function(arr,i,a,j,b){
switch(arguments.length){
case 3:
return clone_and_set__3.call(this,arr,i,a);
case 5:
return clone_and_set__5.call(this,arr,i,a,j,b);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
clone_and_set.cljs$core$IFn$_invoke$arity$3 = clone_and_set__3;
clone_and_set.cljs$core$IFn$_invoke$arity$5 = clone_and_set__5;
return clone_and_set;
})()
;
cljs.core.remove_pair = (function remove_pair(arr,i){
var new_arr = (new Array((arr.length - (2))));
cljs.core.array_copy(arr,(0),new_arr,(0),((2) * i));

cljs.core.array_copy(arr,((2) * (i + (1))),new_arr,((2) * i),(new_arr.length - ((2) * i)));

return new_arr;
});
cljs.core.bitmap_indexed_node_index = (function bitmap_indexed_node_index(bitmap,bit){
return cljs.core.bit_count((bitmap & (bit - (1))));
});
cljs.core.bitpos = (function bitpos(hash,shift){
return ((1) << ((hash >>> shift) & 0x01f));
});
cljs.core.edit_and_set = (function() {
var edit_and_set = null;
var edit_and_set__4 = (function (inode,edit,i,a){
var editable = inode.ensure_editable(edit);
(editable.arr[i] = a);

return editable;
});
var edit_and_set__6 = (function (inode,edit,i,a,j,b){
var editable = inode.ensure_editable(edit);
(editable.arr[i] = a);

(editable.arr[j] = b);

return editable;
});
edit_and_set = function(inode,edit,i,a,j,b){
switch(arguments.length){
case 4:
return edit_and_set__4.call(this,inode,edit,i,a);
case 6:
return edit_and_set__6.call(this,inode,edit,i,a,j,b);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
edit_and_set.cljs$core$IFn$_invoke$arity$4 = edit_and_set__4;
edit_and_set.cljs$core$IFn$_invoke$arity$6 = edit_and_set__6;
return edit_and_set;
})()
;
cljs.core.inode_kv_reduce = (function inode_kv_reduce(arr,f,init){
var len = arr.length;
var i = (0);
var init__$1 = init;
while(true){
if((i < len)){
var init__$2 = (function (){var k = (arr[i]);
if(!((k == null))){
var G__29770 = init__$1;
var G__29771 = k;
var G__29772 = (arr[(i + (1))]);
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__29770,G__29771,G__29772) : f.call(null,G__29770,G__29771,G__29772));
} else {
var node = (arr[(i + (1))]);
if(!((node == null))){
return node.kv_reduce(f,init__$1);
} else {
return init__$1;
}
}
})();
if(cljs.core.reduced_QMARK_(init__$2)){
var G__29773 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__29773) : cljs.core.deref.call(null,G__29773));
} else {
var G__29774 = (i + (2));
var G__29775 = init__$2;
i = G__29774;
init__$1 = G__29775;
continue;
}
} else {
return init__$1;
}
break;
}
});

/**
* @constructor
*/
cljs.core.BitmapIndexedNode = (function (edit,bitmap,arr){
this.edit = edit;
this.bitmap = bitmap;
this.arr = arr;
})
cljs.core.BitmapIndexedNode.prototype.ensure_editable = (function (e){
var self__ = this;
var inode = this;
if((e === self__.edit)){
return inode;
} else {
var n = cljs.core.bit_count(self__.bitmap);
var new_arr = (new Array((((n < (0)))?(4):((2) * (n + (1))))));
cljs.core.array_copy(self__.arr,(0),new_arr,(0),((2) * n));

return (new cljs.core.BitmapIndexedNode(e,self__.bitmap,new_arr));
}
});

cljs.core.BitmapIndexedNode.prototype.inode_without_BANG_ = (function (edit__$1,shift,hash,key,removed_leaf_QMARK_){
var self__ = this;
var inode = this;
var bit = (1 << ((hash >>> shift) & 0x01f));
if(((self__.bitmap & bit) === (0))){
return inode;
} else {
var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap,bit);
var key_or_nil = (self__.arr[((2) * idx)]);
var val_or_node = (self__.arr[(((2) * idx) + (1))]);
if((key_or_nil == null)){
var n = val_or_node.inode_without_BANG_(edit__$1,(shift + (5)),hash,key,removed_leaf_QMARK_);
if((n === val_or_node)){
return inode;
} else {
if(!((n == null))){
return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,(((2) * idx) + (1)),n);
} else {
if((self__.bitmap === bit)){
return null;
} else {
return inode.edit_and_remove_pair(edit__$1,bit,idx);

}
}
}
} else {
if(cljs.core.key_test(key,key_or_nil)){
(removed_leaf_QMARK_[(0)] = true);

return inode.edit_and_remove_pair(edit__$1,bit,idx);
} else {
return inode;

}
}
}
});

cljs.core.BitmapIndexedNode.prototype.edit_and_remove_pair = (function (e,bit,i){
var self__ = this;
var inode = this;
if((self__.bitmap === bit)){
return null;
} else {
var editable = inode.ensure_editable(e);
var earr = editable.arr;
var len = earr.length;
editable.bitmap = (bit ^ editable.bitmap);

cljs.core.array_copy(earr,((2) * (i + (1))),earr,((2) * i),(len - ((2) * (i + (1)))));

(earr[(len - (2))] = null);

(earr[(len - (1))] = null);

return editable;
}
});

cljs.core.BitmapIndexedNode.prototype.inode_seq = (function (){
var self__ = this;
var inode = this;
var G__29776 = self__.arr;
return (cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1 ? cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1(G__29776) : cljs.core.create_inode_seq.call(null,G__29776));
});

cljs.core.BitmapIndexedNode.prototype.kv_reduce = (function (f,init){
var self__ = this;
var inode = this;
return cljs.core.inode_kv_reduce(self__.arr,f,init);
});

cljs.core.BitmapIndexedNode.prototype.inode_lookup = (function (shift,hash,key,not_found){
var self__ = this;
var inode = this;
var bit = (1 << ((hash >>> shift) & 0x01f));
if(((self__.bitmap & bit) === (0))){
return not_found;
} else {
var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap,bit);
var key_or_nil = (self__.arr[((2) * idx)]);
var val_or_node = (self__.arr[(((2) * idx) + (1))]);
if((key_or_nil == null)){
return val_or_node.inode_lookup((shift + (5)),hash,key,not_found);
} else {
if(cljs.core.key_test(key,key_or_nil)){
return val_or_node;
} else {
return not_found;

}
}
}
});

cljs.core.BitmapIndexedNode.prototype.inode_assoc_BANG_ = (function (edit__$1,shift,hash,key,val,added_leaf_QMARK_){
var self__ = this;
var inode = this;
var bit = (1 << ((hash >>> shift) & 0x01f));
var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap,bit);
if(((self__.bitmap & bit) === (0))){
var n = cljs.core.bit_count(self__.bitmap);
if((((2) * n) < self__.arr.length)){
var editable = inode.ensure_editable(edit__$1);
var earr = editable.arr;
added_leaf_QMARK_.val = true;

cljs.core.array_copy_downward(earr,((2) * idx),earr,((2) * (idx + (1))),((2) * (n - idx)));

(earr[((2) * idx)] = key);

(earr[(((2) * idx) + (1))] = val);

editable.bitmap = (editable.bitmap | bit);

return editable;
} else {
if((n >= (16))){
var nodes = [null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null];
var jdx = ((hash >>> shift) & 0x01f);
(nodes[jdx] = cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit__$1,(shift + (5)),hash,key,val,added_leaf_QMARK_));

var i_29790 = (0);
var j_29791 = (0);
while(true){
if((i_29790 < (32))){
if((((self__.bitmap >>> i_29790) & (1)) === (0))){
var G__29792 = (i_29790 + (1));
var G__29793 = j_29791;
i_29790 = G__29792;
j_29791 = G__29793;
continue;
} else {
(nodes[i_29790] = ((!(((self__.arr[j_29791]) == null)))?cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit__$1,(shift + (5)),cljs.core.hash((self__.arr[j_29791])),(self__.arr[j_29791]),(self__.arr[(j_29791 + (1))]),added_leaf_QMARK_):(self__.arr[(j_29791 + (1))])));

var G__29794 = (i_29790 + (1));
var G__29795 = (j_29791 + (2));
i_29790 = G__29794;
j_29791 = G__29795;
continue;
}
} else {
}
break;
}

return (new cljs.core.ArrayNode(edit__$1,(n + (1)),nodes));
} else {
var new_arr = (new Array(((2) * (n + (4)))));
cljs.core.array_copy(self__.arr,(0),new_arr,(0),((2) * idx));

(new_arr[((2) * idx)] = key);

(new_arr[(((2) * idx) + (1))] = val);

cljs.core.array_copy(self__.arr,((2) * idx),new_arr,((2) * (idx + (1))),((2) * (n - idx)));

added_leaf_QMARK_.val = true;

var editable = inode.ensure_editable(edit__$1);
editable.arr = new_arr;

editable.bitmap = (editable.bitmap | bit);

return editable;

}
}
} else {
var key_or_nil = (self__.arr[((2) * idx)]);
var val_or_node = (self__.arr[(((2) * idx) + (1))]);
if((key_or_nil == null)){
var n = val_or_node.inode_assoc_BANG_(edit__$1,(shift + (5)),hash,key,val,added_leaf_QMARK_);
if((n === val_or_node)){
return inode;
} else {
return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,(((2) * idx) + (1)),n);
}
} else {
if(cljs.core.key_test(key,key_or_nil)){
if((val === val_or_node)){
return inode;
} else {
return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,(((2) * idx) + (1)),val);
}
} else {
added_leaf_QMARK_.val = true;

return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$6(inode,edit__$1,((2) * idx),null,(((2) * idx) + (1)),(function (){var G__29777 = edit__$1;
var G__29778 = (shift + (5));
var G__29779 = key_or_nil;
var G__29780 = val_or_node;
var G__29781 = hash;
var G__29782 = key;
var G__29783 = val;
return (cljs.core.create_node.cljs$core$IFn$_invoke$arity$7 ? cljs.core.create_node.cljs$core$IFn$_invoke$arity$7(G__29777,G__29778,G__29779,G__29780,G__29781,G__29782,G__29783) : cljs.core.create_node.call(null,G__29777,G__29778,G__29779,G__29780,G__29781,G__29782,G__29783));
})());

}
}
}
});

cljs.core.BitmapIndexedNode.prototype.inode_assoc = (function (shift,hash,key,val,added_leaf_QMARK_){
var self__ = this;
var inode = this;
var bit = (1 << ((hash >>> shift) & 0x01f));
var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap,bit);
if(((self__.bitmap & bit) === (0))){
var n = cljs.core.bit_count(self__.bitmap);
if((n >= (16))){
var nodes = [null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null];
var jdx = ((hash >>> shift) & 0x01f);
(nodes[jdx] = cljs.core.BitmapIndexedNode.EMPTY.inode_assoc((shift + (5)),hash,key,val,added_leaf_QMARK_));

var i_29796 = (0);
var j_29797 = (0);
while(true){
if((i_29796 < (32))){
if((((self__.bitmap >>> i_29796) & (1)) === (0))){
var G__29798 = (i_29796 + (1));
var G__29799 = j_29797;
i_29796 = G__29798;
j_29797 = G__29799;
continue;
} else {
(nodes[i_29796] = ((!(((self__.arr[j_29797]) == null)))?cljs.core.BitmapIndexedNode.EMPTY.inode_assoc((shift + (5)),cljs.core.hash((self__.arr[j_29797])),(self__.arr[j_29797]),(self__.arr[(j_29797 + (1))]),added_leaf_QMARK_):(self__.arr[(j_29797 + (1))])));

var G__29800 = (i_29796 + (1));
var G__29801 = (j_29797 + (2));
i_29796 = G__29800;
j_29797 = G__29801;
continue;
}
} else {
}
break;
}

return (new cljs.core.ArrayNode(null,(n + (1)),nodes));
} else {
var new_arr = (new Array(((2) * (n + (1)))));
cljs.core.array_copy(self__.arr,(0),new_arr,(0),((2) * idx));

(new_arr[((2) * idx)] = key);

(new_arr[(((2) * idx) + (1))] = val);

cljs.core.array_copy(self__.arr,((2) * idx),new_arr,((2) * (idx + (1))),((2) * (n - idx)));

added_leaf_QMARK_.val = true;

return (new cljs.core.BitmapIndexedNode(null,(self__.bitmap | bit),new_arr));
}
} else {
var key_or_nil = (self__.arr[((2) * idx)]);
var val_or_node = (self__.arr[(((2) * idx) + (1))]);
if((key_or_nil == null)){
var n = val_or_node.inode_assoc((shift + (5)),hash,key,val,added_leaf_QMARK_);
if((n === val_or_node)){
return inode;
} else {
return (new cljs.core.BitmapIndexedNode(null,self__.bitmap,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,(((2) * idx) + (1)),n)));
}
} else {
if(cljs.core.key_test(key,key_or_nil)){
if((val === val_or_node)){
return inode;
} else {
return (new cljs.core.BitmapIndexedNode(null,self__.bitmap,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,(((2) * idx) + (1)),val)));
}
} else {
added_leaf_QMARK_.val = true;

return (new cljs.core.BitmapIndexedNode(null,self__.bitmap,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$5(self__.arr,((2) * idx),null,(((2) * idx) + (1)),(function (){var G__29784 = (shift + (5));
var G__29785 = key_or_nil;
var G__29786 = val_or_node;
var G__29787 = hash;
var G__29788 = key;
var G__29789 = val;
return (cljs.core.create_node.cljs$core$IFn$_invoke$arity$6 ? cljs.core.create_node.cljs$core$IFn$_invoke$arity$6(G__29784,G__29785,G__29786,G__29787,G__29788,G__29789) : cljs.core.create_node.call(null,G__29784,G__29785,G__29786,G__29787,G__29788,G__29789));
})())));

}
}
}
});

cljs.core.BitmapIndexedNode.prototype.inode_find = (function (shift,hash,key,not_found){
var self__ = this;
var inode = this;
var bit = (1 << ((hash >>> shift) & 0x01f));
if(((self__.bitmap & bit) === (0))){
return not_found;
} else {
var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap,bit);
var key_or_nil = (self__.arr[((2) * idx)]);
var val_or_node = (self__.arr[(((2) * idx) + (1))]);
if((key_or_nil == null)){
return val_or_node.inode_find((shift + (5)),hash,key,not_found);
} else {
if(cljs.core.key_test(key,key_or_nil)){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [key_or_nil,val_or_node], null);
} else {
return not_found;

}
}
}
});

cljs.core.BitmapIndexedNode.prototype.inode_without = (function (shift,hash,key){
var self__ = this;
var inode = this;
var bit = (1 << ((hash >>> shift) & 0x01f));
if(((self__.bitmap & bit) === (0))){
return inode;
} else {
var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap,bit);
var key_or_nil = (self__.arr[((2) * idx)]);
var val_or_node = (self__.arr[(((2) * idx) + (1))]);
if((key_or_nil == null)){
var n = val_or_node.inode_without((shift + (5)),hash,key);
if((n === val_or_node)){
return inode;
} else {
if(!((n == null))){
return (new cljs.core.BitmapIndexedNode(null,self__.bitmap,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,(((2) * idx) + (1)),n)));
} else {
if((self__.bitmap === bit)){
return null;
} else {
return (new cljs.core.BitmapIndexedNode(null,(self__.bitmap ^ bit),cljs.core.remove_pair(self__.arr,idx)));

}
}
}
} else {
if(cljs.core.key_test(key,key_or_nil)){
return (new cljs.core.BitmapIndexedNode(null,(self__.bitmap ^ bit),cljs.core.remove_pair(self__.arr,idx)));
} else {
return inode;

}
}
}
});

cljs.core.BitmapIndexedNode.cljs$lang$type = true;

cljs.core.BitmapIndexedNode.cljs$lang$ctorStr = "cljs.core/BitmapIndexedNode";

cljs.core.BitmapIndexedNode.cljs$lang$ctorPrWriter = (function (this__24861__auto__,writer__24862__auto__,opt__24863__auto__){
return cljs.core._write(writer__24862__auto__,"cljs.core/BitmapIndexedNode");
});

cljs.core.__GT_BitmapIndexedNode = (function __GT_BitmapIndexedNode(edit,bitmap,arr){
return (new cljs.core.BitmapIndexedNode(edit,bitmap,arr));
});

cljs.core.BitmapIndexedNode.EMPTY = (new cljs.core.BitmapIndexedNode(null,(0),[]));
cljs.core.pack_array_node = (function pack_array_node(array_node,edit,idx){
var arr = array_node.arr;
var len = arr.length;
var new_arr = (new Array(((2) * (array_node.cnt - (1)))));
var i = (0);
var j = (1);
var bitmap = (0);
while(true){
if((i < len)){
if((!((i === idx))) && (!(((arr[i]) == null)))){
(new_arr[j] = (arr[i]));

var G__29802 = (i + (1));
var G__29803 = (j + (2));
var G__29804 = (bitmap | ((1) << i));
i = G__29802;
j = G__29803;
bitmap = G__29804;
continue;
} else {
var G__29805 = (i + (1));
var G__29806 = j;
var G__29807 = bitmap;
i = G__29805;
j = G__29806;
bitmap = G__29807;
continue;
}
} else {
return (new cljs.core.BitmapIndexedNode(edit,bitmap,new_arr));
}
break;
}
});

/**
* @constructor
*/
cljs.core.ArrayNode = (function (edit,cnt,arr){
this.edit = edit;
this.cnt = cnt;
this.arr = arr;
})
cljs.core.ArrayNode.prototype.ensure_editable = (function (e){
var self__ = this;
var inode = this;
if((e === self__.edit)){
return inode;
} else {
return (new cljs.core.ArrayNode(e,self__.cnt,cljs.core.aclone(self__.arr)));
}
});

cljs.core.ArrayNode.prototype.inode_without_BANG_ = (function (edit__$1,shift,hash,key,removed_leaf_QMARK_){
var self__ = this;
var inode = this;
var idx = ((hash >>> shift) & 0x01f);
var node = (self__.arr[idx]);
if((node == null)){
return inode;
} else {
var n = node.inode_without_BANG_(edit__$1,(shift + (5)),hash,key,removed_leaf_QMARK_);
if((n === node)){
return inode;
} else {
if((n == null)){
if((self__.cnt <= (8))){
return cljs.core.pack_array_node(inode,edit__$1,idx);
} else {
var editable = cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,idx,n);
editable.cnt = (editable.cnt - (1));

return editable;
}
} else {
return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,idx,n);

}
}
}
});

cljs.core.ArrayNode.prototype.inode_seq = (function (){
var self__ = this;
var inode = this;
var G__29808 = self__.arr;
return (cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$1 ? cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$1(G__29808) : cljs.core.create_array_node_seq.call(null,G__29808));
});

cljs.core.ArrayNode.prototype.kv_reduce = (function (f,init){
var self__ = this;
var inode = this;
var len = self__.arr.length;
var i = (0);
var init__$1 = init;
while(true){
if((i < len)){
var node = (self__.arr[i]);
if(!((node == null))){
var init__$2 = node.kv_reduce(f,init__$1);
if(cljs.core.reduced_QMARK_(init__$2)){
var G__29809 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__29809) : cljs.core.deref.call(null,G__29809));
} else {
var G__29810 = (i + (1));
var G__29811 = init__$2;
i = G__29810;
init__$1 = G__29811;
continue;
}
} else {
var G__29812 = (i + (1));
var G__29813 = init__$1;
i = G__29812;
init__$1 = G__29813;
continue;
}
} else {
return init__$1;
}
break;
}
});

cljs.core.ArrayNode.prototype.inode_lookup = (function (shift,hash,key,not_found){
var self__ = this;
var inode = this;
var idx = ((hash >>> shift) & 0x01f);
var node = (self__.arr[idx]);
if(!((node == null))){
return node.inode_lookup((shift + (5)),hash,key,not_found);
} else {
return not_found;
}
});

cljs.core.ArrayNode.prototype.inode_assoc_BANG_ = (function (edit__$1,shift,hash,key,val,added_leaf_QMARK_){
var self__ = this;
var inode = this;
var idx = ((hash >>> shift) & 0x01f);
var node = (self__.arr[idx]);
if((node == null)){
var editable = cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,idx,cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit__$1,(shift + (5)),hash,key,val,added_leaf_QMARK_));
editable.cnt = (editable.cnt + (1));

return editable;
} else {
var n = node.inode_assoc_BANG_(edit__$1,(shift + (5)),hash,key,val,added_leaf_QMARK_);
if((n === node)){
return inode;
} else {
return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,idx,n);
}
}
});

cljs.core.ArrayNode.prototype.inode_assoc = (function (shift,hash,key,val,added_leaf_QMARK_){
var self__ = this;
var inode = this;
var idx = ((hash >>> shift) & 0x01f);
var node = (self__.arr[idx]);
if((node == null)){
return (new cljs.core.ArrayNode(null,(self__.cnt + (1)),cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,idx,cljs.core.BitmapIndexedNode.EMPTY.inode_assoc((shift + (5)),hash,key,val,added_leaf_QMARK_))));
} else {
var n = node.inode_assoc((shift + (5)),hash,key,val,added_leaf_QMARK_);
if((n === node)){
return inode;
} else {
return (new cljs.core.ArrayNode(null,self__.cnt,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,idx,n)));
}
}
});

cljs.core.ArrayNode.prototype.inode_find = (function (shift,hash,key,not_found){
var self__ = this;
var inode = this;
var idx = ((hash >>> shift) & 0x01f);
var node = (self__.arr[idx]);
if(!((node == null))){
return node.inode_find((shift + (5)),hash,key,not_found);
} else {
return not_found;
}
});

cljs.core.ArrayNode.prototype.inode_without = (function (shift,hash,key){
var self__ = this;
var inode = this;
var idx = ((hash >>> shift) & 0x01f);
var node = (self__.arr[idx]);
if(!((node == null))){
var n = node.inode_without((shift + (5)),hash,key);
if((n === node)){
return inode;
} else {
if((n == null)){
if((self__.cnt <= (8))){
return cljs.core.pack_array_node(inode,null,idx);
} else {
return (new cljs.core.ArrayNode(null,(self__.cnt - (1)),cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,idx,n)));
}
} else {
return (new cljs.core.ArrayNode(null,self__.cnt,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,idx,n)));

}
}
} else {
return inode;
}
});

cljs.core.ArrayNode.cljs$lang$type = true;

cljs.core.ArrayNode.cljs$lang$ctorStr = "cljs.core/ArrayNode";

cljs.core.ArrayNode.cljs$lang$ctorPrWriter = (function (this__24861__auto__,writer__24862__auto__,opt__24863__auto__){
return cljs.core._write(writer__24862__auto__,"cljs.core/ArrayNode");
});

cljs.core.__GT_ArrayNode = (function __GT_ArrayNode(edit,cnt,arr){
return (new cljs.core.ArrayNode(edit,cnt,arr));
});

cljs.core.hash_collision_node_find_index = (function hash_collision_node_find_index(arr,cnt,key){
var lim = ((2) * cnt);
var i = (0);
while(true){
if((i < lim)){
if(cljs.core.key_test(key,(arr[i]))){
return i;
} else {
var G__29814 = (i + (2));
i = G__29814;
continue;
}
} else {
return (-1);
}
break;
}
});

/**
* @constructor
*/
cljs.core.HashCollisionNode = (function (edit,collision_hash,cnt,arr){
this.edit = edit;
this.collision_hash = collision_hash;
this.cnt = cnt;
this.arr = arr;
})
cljs.core.HashCollisionNode.prototype.ensure_editable = (function (e){
var self__ = this;
var inode = this;
if((e === self__.edit)){
return inode;
} else {
var new_arr = (new Array(((2) * (self__.cnt + (1)))));
cljs.core.array_copy(self__.arr,(0),new_arr,(0),((2) * self__.cnt));

return (new cljs.core.HashCollisionNode(e,self__.collision_hash,self__.cnt,new_arr));
}
});

cljs.core.HashCollisionNode.prototype.inode_without_BANG_ = (function (edit__$1,shift,hash,key,removed_leaf_QMARK_){
var self__ = this;
var inode = this;
var idx = cljs.core.hash_collision_node_find_index(self__.arr,self__.cnt,key);
if((idx === (-1))){
return inode;
} else {
(removed_leaf_QMARK_[(0)] = true);

if((self__.cnt === (1))){
return null;
} else {
var editable = inode.ensure_editable(edit__$1);
var earr = editable.arr;
(earr[idx] = (earr[(((2) * self__.cnt) - (2))]));

(earr[(idx + (1))] = (earr[(((2) * self__.cnt) - (1))]));

(earr[(((2) * self__.cnt) - (1))] = null);

(earr[(((2) * self__.cnt) - (2))] = null);

editable.cnt = (editable.cnt - (1));

return editable;
}
}
});

cljs.core.HashCollisionNode.prototype.inode_seq = (function (){
var self__ = this;
var inode = this;
var G__29815 = self__.arr;
return (cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1 ? cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1(G__29815) : cljs.core.create_inode_seq.call(null,G__29815));
});

cljs.core.HashCollisionNode.prototype.kv_reduce = (function (f,init){
var self__ = this;
var inode = this;
return cljs.core.inode_kv_reduce(self__.arr,f,init);
});

cljs.core.HashCollisionNode.prototype.inode_lookup = (function (shift,hash,key,not_found){
var self__ = this;
var inode = this;
var idx = cljs.core.hash_collision_node_find_index(self__.arr,self__.cnt,key);
if((idx < (0))){
return not_found;
} else {
if(cljs.core.key_test(key,(self__.arr[idx]))){
return (self__.arr[(idx + (1))]);
} else {
return not_found;

}
}
});

cljs.core.HashCollisionNode.prototype.inode_assoc_BANG_ = (function (edit__$1,shift,hash,key,val,added_leaf_QMARK_){
var self__ = this;
var inode = this;
if((hash === self__.collision_hash)){
var idx = cljs.core.hash_collision_node_find_index(self__.arr,self__.cnt,key);
if((idx === (-1))){
if((self__.arr.length > ((2) * self__.cnt))){
var editable = cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$6(inode,edit__$1,((2) * self__.cnt),key,(((2) * self__.cnt) + (1)),val);
added_leaf_QMARK_.val = true;

editable.cnt = (editable.cnt + (1));

return editable;
} else {
var len = self__.arr.length;
var new_arr = (new Array((len + (2))));
cljs.core.array_copy(self__.arr,(0),new_arr,(0),len);

(new_arr[len] = key);

(new_arr[(len + (1))] = val);

added_leaf_QMARK_.val = true;

return inode.ensure_editable_array(edit__$1,(self__.cnt + (1)),new_arr);
}
} else {
if(((self__.arr[(idx + (1))]) === val)){
return inode;
} else {
return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,(idx + (1)),val);
}
}
} else {
return (new cljs.core.BitmapIndexedNode(edit__$1,(1 << ((self__.collision_hash >>> shift) & 0x01f)),[null,inode,null,null])).inode_assoc_BANG_(edit__$1,shift,hash,key,val,added_leaf_QMARK_);
}
});

cljs.core.HashCollisionNode.prototype.inode_assoc = (function (shift,hash,key,val,added_leaf_QMARK_){
var self__ = this;
var inode = this;
if((hash === self__.collision_hash)){
var idx = cljs.core.hash_collision_node_find_index(self__.arr,self__.cnt,key);
if((idx === (-1))){
var len = ((2) * self__.cnt);
var new_arr = (new Array((len + (2))));
cljs.core.array_copy(self__.arr,(0),new_arr,(0),len);

(new_arr[len] = key);

(new_arr[(len + (1))] = val);

added_leaf_QMARK_.val = true;

return (new cljs.core.HashCollisionNode(null,self__.collision_hash,(self__.cnt + (1)),new_arr));
} else {
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2((self__.arr[idx]),val)){
return inode;
} else {
return (new cljs.core.HashCollisionNode(null,self__.collision_hash,self__.cnt,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,(idx + (1)),val)));
}
}
} else {
return (new cljs.core.BitmapIndexedNode(null,(1 << ((self__.collision_hash >>> shift) & 0x01f)),[null,inode])).inode_assoc(shift,hash,key,val,added_leaf_QMARK_);
}
});

cljs.core.HashCollisionNode.prototype.ensure_editable_array = (function (e,count,array){
var self__ = this;
var inode = this;
if((e === self__.edit)){
self__.arr = array;

self__.cnt = count;

return inode;
} else {
return (new cljs.core.HashCollisionNode(self__.edit,self__.collision_hash,count,array));
}
});

cljs.core.HashCollisionNode.prototype.inode_find = (function (shift,hash,key,not_found){
var self__ = this;
var inode = this;
var idx = cljs.core.hash_collision_node_find_index(self__.arr,self__.cnt,key);
if((idx < (0))){
return not_found;
} else {
if(cljs.core.key_test(key,(self__.arr[idx]))){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(self__.arr[idx]),(self__.arr[(idx + (1))])], null);
} else {
return not_found;

}
}
});

cljs.core.HashCollisionNode.prototype.inode_without = (function (shift,hash,key){
var self__ = this;
var inode = this;
var idx = cljs.core.hash_collision_node_find_index(self__.arr,self__.cnt,key);
if((idx === (-1))){
return inode;
} else {
if((self__.cnt === (1))){
return null;
} else {
return (new cljs.core.HashCollisionNode(null,self__.collision_hash,(self__.cnt - (1)),cljs.core.remove_pair(self__.arr,cljs.core.quot(idx,(2)))));

}
}
});

cljs.core.HashCollisionNode.cljs$lang$type = true;

cljs.core.HashCollisionNode.cljs$lang$ctorStr = "cljs.core/HashCollisionNode";

cljs.core.HashCollisionNode.cljs$lang$ctorPrWriter = (function (this__24861__auto__,writer__24862__auto__,opt__24863__auto__){
return cljs.core._write(writer__24862__auto__,"cljs.core/HashCollisionNode");
});

cljs.core.__GT_HashCollisionNode = (function __GT_HashCollisionNode(edit,collision_hash,cnt,arr){
return (new cljs.core.HashCollisionNode(edit,collision_hash,cnt,arr));
});

cljs.core.create_node = (function() {
var create_node = null;
var create_node__6 = (function (shift,key1,val1,key2hash,key2,val2){
var key1hash = cljs.core.hash(key1);
if((key1hash === key2hash)){
return (new cljs.core.HashCollisionNode(null,key1hash,(2),[key1,val1,key2,val2]));
} else {
var added_leaf_QMARK_ = (new cljs.core.Box(false));
return cljs.core.BitmapIndexedNode.EMPTY.inode_assoc(shift,key1hash,key1,val1,added_leaf_QMARK_).inode_assoc(shift,key2hash,key2,val2,added_leaf_QMARK_);
}
});
var create_node__7 = (function (edit,shift,key1,val1,key2hash,key2,val2){
var key1hash = cljs.core.hash(key1);
if((key1hash === key2hash)){
return (new cljs.core.HashCollisionNode(null,key1hash,(2),[key1,val1,key2,val2]));
} else {
var added_leaf_QMARK_ = (new cljs.core.Box(false));
return cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit,shift,key1hash,key1,val1,added_leaf_QMARK_).inode_assoc_BANG_(edit,shift,key2hash,key2,val2,added_leaf_QMARK_);
}
});
create_node = function(edit,shift,key1,val1,key2hash,key2,val2){
switch(arguments.length){
case 6:
return create_node__6.call(this,edit,shift,key1,val1,key2hash,key2);
case 7:
return create_node__7.call(this,edit,shift,key1,val1,key2hash,key2,val2);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
create_node.cljs$core$IFn$_invoke$arity$6 = create_node__6;
create_node.cljs$core$IFn$_invoke$arity$7 = create_node__7;
return create_node;
})()
;

/**
* @constructor
*/
cljs.core.NodeSeq = (function (meta,nodes,i,s,__hash){
this.meta = meta;
this.nodes = nodes;
this.i = i;
this.s = s;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32374860;
})
cljs.core.NodeSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.NodeSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.NodeSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.NodeSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__24695__auto__ = self__.__hash;
if(!((h__24695__auto__ == null))){
return h__24695__auto__;
} else {
var h__24695__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__24695__auto____$1;

return h__24695__auto____$1;
}
});

cljs.core.NodeSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.NodeSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.NodeSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.NodeSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.NodeSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.s == null)){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(self__.nodes[self__.i]),(self__.nodes[(self__.i + (1))])], null);
} else {
return cljs.core.first(self__.s);
}
});

cljs.core.NodeSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.s == null)){
var G__29816 = self__.nodes;
var G__29817 = (self__.i + (2));
var G__29818 = null;
return (cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3 ? cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3(G__29816,G__29817,G__29818) : cljs.core.create_inode_seq.call(null,G__29816,G__29817,G__29818));
} else {
var G__29819 = self__.nodes;
var G__29820 = self__.i;
var G__29821 = cljs.core.next(self__.s);
return (cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3 ? cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3(G__29819,G__29820,G__29821) : cljs.core.create_inode_seq.call(null,G__29819,G__29820,G__29821));
}
});

cljs.core.NodeSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return this$__$1;
});

cljs.core.NodeSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.NodeSeq(meta__$1,self__.nodes,self__.i,self__.s,self__.__hash));
});

cljs.core.NodeSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.NodeSeq.cljs$lang$type = true;

cljs.core.NodeSeq.cljs$lang$ctorStr = "cljs.core/NodeSeq";

cljs.core.NodeSeq.cljs$lang$ctorPrWriter = (function (this__24861__auto__,writer__24862__auto__,opt__24863__auto__){
return cljs.core._write(writer__24862__auto__,"cljs.core/NodeSeq");
});

cljs.core.__GT_NodeSeq = (function __GT_NodeSeq(meta,nodes,i,s,__hash){
return (new cljs.core.NodeSeq(meta,nodes,i,s,__hash));
});

(cljs.core.NodeSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__25252__auto__ = this;
return cljs.core.es6_iterator(this__25252__auto__);
}));
cljs.core.create_inode_seq = (function() {
var create_inode_seq = null;
var create_inode_seq__1 = (function (nodes){
return create_inode_seq.cljs$core$IFn$_invoke$arity$3(nodes,(0),null);
});
var create_inode_seq__3 = (function (nodes,i,s){
if((s == null)){
var len = nodes.length;
var j = i;
while(true){
if((j < len)){
if(!(((nodes[j]) == null))){
return (new cljs.core.NodeSeq(null,nodes,j,null,null));
} else {
var temp__4124__auto__ = (nodes[(j + (1))]);
if(cljs.core.truth_(temp__4124__auto__)){
var node = temp__4124__auto__;
var temp__4124__auto____$1 = node.inode_seq();
if(cljs.core.truth_(temp__4124__auto____$1)){
var node_seq = temp__4124__auto____$1;
return (new cljs.core.NodeSeq(null,nodes,(j + (2)),node_seq,null));
} else {
var G__29825 = (j + (2));
j = G__29825;
continue;
}
} else {
var G__29826 = (j + (2));
j = G__29826;
continue;
}
}
} else {
return null;
}
break;
}
} else {
return (new cljs.core.NodeSeq(null,nodes,i,s,null));
}
});
create_inode_seq = function(nodes,i,s){
switch(arguments.length){
case 1:
return create_inode_seq__1.call(this,nodes);
case 3:
return create_inode_seq__3.call(this,nodes,i,s);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
create_inode_seq.cljs$core$IFn$_invoke$arity$1 = create_inode_seq__1;
create_inode_seq.cljs$core$IFn$_invoke$arity$3 = create_inode_seq__3;
return create_inode_seq;
})()
;

/**
* @constructor
*/
cljs.core.ArrayNodeSeq = (function (meta,nodes,i,s,__hash){
this.meta = meta;
this.nodes = nodes;
this.i = i;
this.s = s;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32374860;
})
cljs.core.ArrayNodeSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.ArrayNodeSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__24695__auto__ = self__.__hash;
if(!((h__24695__auto__ == null))){
return h__24695__auto__;
} else {
var h__24695__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__24695__auto____$1;

return h__24695__auto____$1;
}
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.first(self__.s);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var G__29827 = null;
var G__29828 = self__.nodes;
var G__29829 = self__.i;
var G__29830 = cljs.core.next(self__.s);
return (cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$4(G__29827,G__29828,G__29829,G__29830) : cljs.core.create_array_node_seq.call(null,G__29827,G__29828,G__29829,G__29830));
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return this$__$1;
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.ArrayNodeSeq(meta__$1,self__.nodes,self__.i,self__.s,self__.__hash));
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.ArrayNodeSeq.cljs$lang$type = true;

cljs.core.ArrayNodeSeq.cljs$lang$ctorStr = "cljs.core/ArrayNodeSeq";

cljs.core.ArrayNodeSeq.cljs$lang$ctorPrWriter = (function (this__24861__auto__,writer__24862__auto__,opt__24863__auto__){
return cljs.core._write(writer__24862__auto__,"cljs.core/ArrayNodeSeq");
});

cljs.core.__GT_ArrayNodeSeq = (function __GT_ArrayNodeSeq(meta,nodes,i,s,__hash){
return (new cljs.core.ArrayNodeSeq(meta,nodes,i,s,__hash));
});

(cljs.core.ArrayNodeSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__25252__auto__ = this;
return cljs.core.es6_iterator(this__25252__auto__);
}));
cljs.core.create_array_node_seq = (function() {
var create_array_node_seq = null;
var create_array_node_seq__1 = (function (nodes){
return create_array_node_seq.cljs$core$IFn$_invoke$arity$4(null,nodes,(0),null);
});
var create_array_node_seq__4 = (function (meta,nodes,i,s){
if((s == null)){
var len = nodes.length;
var j = i;
while(true){
if((j < len)){
var temp__4124__auto__ = (nodes[j]);
if(cljs.core.truth_(temp__4124__auto__)){
var nj = temp__4124__auto__;
var temp__4124__auto____$1 = nj.inode_seq();
if(cljs.core.truth_(temp__4124__auto____$1)){
var ns = temp__4124__auto____$1;
return (new cljs.core.ArrayNodeSeq(meta,nodes,(j + (1)),ns,null));
} else {
var G__29835 = (j + (1));
j = G__29835;
continue;
}
} else {
var G__29836 = (j + (1));
j = G__29836;
continue;
}
} else {
return null;
}
break;
}
} else {
return (new cljs.core.ArrayNodeSeq(meta,nodes,i,s,null));
}
});
create_array_node_seq = function(meta,nodes,i,s){
switch(arguments.length){
case 1:
return create_array_node_seq__1.call(this,meta);
case 4:
return create_array_node_seq__4.call(this,meta,nodes,i,s);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
create_array_node_seq.cljs$core$IFn$_invoke$arity$1 = create_array_node_seq__1;
create_array_node_seq.cljs$core$IFn$_invoke$arity$4 = create_array_node_seq__4;
return create_array_node_seq;
})()
;

/**
* @constructor
*/
cljs.core.PersistentHashMap = (function (meta,cnt,root,has_nil_QMARK_,nil_val,__hash){
this.meta = meta;
this.cnt = cnt;
this.root = root;
this.has_nil_QMARK_ = has_nil_QMARK_;
this.nil_val = nil_val;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 16123663;
this.cljs$lang$protocol_mask$partition1$ = 8196;
})
cljs.core.PersistentHashMap.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentHashMap.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentHashMap.prototype.keys = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator((function (){var G__29838 = coll;
return (cljs.core.keys.cljs$core$IFn$_invoke$arity$1 ? cljs.core.keys.cljs$core$IFn$_invoke$arity$1(G__29838) : cljs.core.keys.call(null,G__29838));
})());
});

cljs.core.PersistentHashMap.prototype.entries = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_entries_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentHashMap.prototype.values = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator((function (){var G__29839 = coll;
return (cljs.core.vals.cljs$core$IFn$_invoke$arity$1 ? cljs.core.vals.cljs$core$IFn$_invoke$arity$1(G__29839) : cljs.core.vals.call(null,G__29839));
})());
});

cljs.core.PersistentHashMap.prototype.has = (function (k){
var self__ = this;
var coll = this;
return cljs.core.contains_QMARK_(coll,k);
});

cljs.core.PersistentHashMap.prototype.get = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentHashMap.prototype.forEach = (function (f){
var self__ = this;
var coll = this;
var seq__29840 = cljs.core.seq(coll);
var chunk__29841 = null;
var count__29842 = (0);
var i__29843 = (0);
while(true){
if((i__29843 < count__29842)){
var vec__29844 = chunk__29841.cljs$core$IIndexed$_nth$arity$2(null,i__29843);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__29844,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__29844,(1),null);
var G__29845_29856 = v;
var G__29846_29857 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__29845_29856,G__29846_29857) : f.call(null,G__29845_29856,G__29846_29857));

var G__29858 = seq__29840;
var G__29859 = chunk__29841;
var G__29860 = count__29842;
var G__29861 = (i__29843 + (1));
seq__29840 = G__29858;
chunk__29841 = G__29859;
count__29842 = G__29860;
i__29843 = G__29861;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__29840);
if(temp__4126__auto__){
var seq__29840__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__29840__$1)){
var c__25061__auto__ = cljs.core.chunk_first(seq__29840__$1);
var G__29862 = cljs.core.chunk_rest(seq__29840__$1);
var G__29863 = c__25061__auto__;
var G__29864 = cljs.core.count(c__25061__auto__);
var G__29865 = (0);
seq__29840 = G__29862;
chunk__29841 = G__29863;
count__29842 = G__29864;
i__29843 = G__29865;
continue;
} else {
var vec__29847 = cljs.core.first(seq__29840__$1);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__29847,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__29847,(1),null);
var G__29848_29866 = v;
var G__29849_29867 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__29848_29866,G__29849_29867) : f.call(null,G__29848_29866,G__29849_29867));

var G__29868 = cljs.core.next(seq__29840__$1);
var G__29869 = null;
var G__29870 = (0);
var G__29871 = (0);
seq__29840 = G__29868;
chunk__29841 = G__29869;
count__29842 = G__29870;
i__29843 = G__29871;
continue;
}
} else {
return null;
}
}
break;
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.PersistentHashMap.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
if((k == null)){
if(self__.has_nil_QMARK_){
return self__.nil_val;
} else {
return not_found;
}
} else {
if((self__.root == null)){
return not_found;
} else {
return self__.root.inode_lookup((0),cljs.core.hash(k),k,not_found);

}
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = (function (coll,f,init){
var self__ = this;
var coll__$1 = this;
var init__$1 = ((self__.has_nil_QMARK_)?(function (){var G__29850 = init;
var G__29851 = null;
var G__29852 = self__.nil_val;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__29850,G__29851,G__29852) : f.call(null,G__29850,G__29851,G__29852));
})():init);
if(cljs.core.reduced_QMARK_(init__$1)){
var G__29853 = init__$1;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__29853) : cljs.core.deref.call(null,G__29853));
} else {
if(!((self__.root == null))){
return self__.root.kv_reduce(f,init__$1);
} else {
return init__$1;

}
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentHashMap.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.PersistentHashMap(self__.meta,self__.cnt,self__.root,self__.has_nil_QMARK_,self__.nil_val,self__.__hash));
});

cljs.core.PersistentHashMap.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.cnt;
});

cljs.core.PersistentHashMap.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__24695__auto__ = self__.__hash;
if(!((h__24695__auto__ == null))){
return h__24695__auto__;
} else {
var h__24695__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
self__.__hash = h__24695__auto____$1;

return h__24695__auto____$1;
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_map(coll__$1,other);
});

cljs.core.PersistentHashMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.TransientHashMap((function (){var obj29855 = {};
return obj29855;
})(),self__.root,self__.cnt,self__.has_nil_QMARK_,self__.nil_val));
});

cljs.core.PersistentHashMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._with_meta(cljs.core.PersistentHashMap.EMPTY,self__.meta);
});

cljs.core.PersistentHashMap.prototype.cljs$core$IMap$_dissoc$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
if((k == null)){
if(self__.has_nil_QMARK_){
return (new cljs.core.PersistentHashMap(self__.meta,(self__.cnt - (1)),self__.root,false,null,null));
} else {
return coll__$1;
}
} else {
if((self__.root == null)){
return coll__$1;
} else {
var new_root = self__.root.inode_without((0),cljs.core.hash(k),k);
if((new_root === self__.root)){
return coll__$1;
} else {
return (new cljs.core.PersistentHashMap(self__.meta,(self__.cnt - (1)),new_root,self__.has_nil_QMARK_,self__.nil_val,null));
}

}
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (coll,k,v){
var self__ = this;
var coll__$1 = this;
if((k == null)){
if((self__.has_nil_QMARK_) && ((v === self__.nil_val))){
return coll__$1;
} else {
return (new cljs.core.PersistentHashMap(self__.meta,((self__.has_nil_QMARK_)?self__.cnt:(self__.cnt + (1))),self__.root,true,v,null));
}
} else {
var added_leaf_QMARK_ = (new cljs.core.Box(false));
var new_root = (((self__.root == null))?cljs.core.BitmapIndexedNode.EMPTY:self__.root).inode_assoc((0),cljs.core.hash(k),k,v,added_leaf_QMARK_);
if((new_root === self__.root)){
return coll__$1;
} else {
return (new cljs.core.PersistentHashMap(self__.meta,((added_leaf_QMARK_.val)?(self__.cnt + (1)):self__.cnt),new_root,self__.has_nil_QMARK_,self__.nil_val,null));
}
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
if((k == null)){
return self__.has_nil_QMARK_;
} else {
if((self__.root == null)){
return false;
} else {
return !((self__.root.inode_lookup((0),cljs.core.hash(k),k,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel));

}
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
var s = ((!((self__.root == null)))?self__.root.inode_seq():null);
if(self__.has_nil_QMARK_){
return cljs.core.cons(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null,self__.nil_val], null),s);
} else {
return s;
}
} else {
return null;
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentHashMap(meta__$1,self__.cnt,self__.root,self__.has_nil_QMARK_,self__.nil_val,self__.__hash));
});

cljs.core.PersistentHashMap.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,entry){
var self__ = this;
var coll__$1 = this;
if(cljs.core.vector_QMARK_(entry)){
return cljs.core._assoc(coll__$1,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(1)));
} else {
var ret = coll__$1;
var es = cljs.core.seq(entry);
while(true){
if((es == null)){
return ret;
} else {
var e = cljs.core.first(es);
if(cljs.core.vector_QMARK_(e)){
var G__29872 = cljs.core._assoc(ret,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e,(1)));
var G__29873 = cljs.core.next(es);
ret = G__29872;
es = G__29873;
continue;
} else {
throw (new Error("conj on a map takes map entries or seqables of map entries"));
}
}
break;
}
}
});

cljs.core.PersistentHashMap.prototype.call = (function() {
var G__29874 = null;
var G__29874__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__29874__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__29874 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__29874__2.call(this,self__,k);
case 3:
return G__29874__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__29874.cljs$core$IFn$_invoke$arity$2 = G__29874__2;
G__29874.cljs$core$IFn$_invoke$arity$3 = G__29874__3;
return G__29874;
})()
;

cljs.core.PersistentHashMap.prototype.apply = (function (self__,args29837){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args29837)));
});

cljs.core.PersistentHashMap.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentHashMap.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.PersistentHashMap.cljs$lang$type = true;

cljs.core.PersistentHashMap.cljs$lang$ctorStr = "cljs.core/PersistentHashMap";

cljs.core.PersistentHashMap.cljs$lang$ctorPrWriter = (function (this__24861__auto__,writer__24862__auto__,opt__24863__auto__){
return cljs.core._write(writer__24862__auto__,"cljs.core/PersistentHashMap");
});

cljs.core.__GT_PersistentHashMap = (function __GT_PersistentHashMap(meta,cnt,root,has_nil_QMARK_,nil_val,__hash){
return (new cljs.core.PersistentHashMap(meta,cnt,root,has_nil_QMARK_,nil_val,__hash));
});

cljs.core.PersistentHashMap.EMPTY = (new cljs.core.PersistentHashMap(null,(0),null,false,null,(0)));
cljs.core.PersistentHashMap.fromArrays = (function (ks,vs){
var len = ks.length;
var i = (0);
var out = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
while(true){
if((i < len)){
var G__29875 = (i + (1));
var G__29876 = out.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3(null,(ks[i]),(vs[i]));
i = G__29875;
out = G__29876;
continue;
} else {
return cljs.core.persistent_BANG_(out);
}
break;
}
});
(cljs.core.PersistentHashMap.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__25252__auto__ = this;
return cljs.core.es6_iterator(this__25252__auto__);
}));

/**
* @constructor
*/
cljs.core.TransientHashMap = (function (edit,root,count,has_nil_QMARK_,nil_val){
this.edit = edit;
this.root = root;
this.count = count;
this.has_nil_QMARK_ = has_nil_QMARK_;
this.nil_val = nil_val;
this.cljs$lang$protocol_mask$partition1$ = 56;
this.cljs$lang$protocol_mask$partition0$ = 258;
})
cljs.core.TransientHashMap.prototype.cljs$core$ITransientMap$_dissoc_BANG_$arity$2 = (function (tcoll,key){
var self__ = this;
var tcoll__$1 = this;
return tcoll__$1.without_BANG_(key);
});

cljs.core.TransientHashMap.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = (function (tcoll,key,val){
var self__ = this;
var tcoll__$1 = this;
return tcoll__$1.assoc_BANG_(key,val);
});

cljs.core.TransientHashMap.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = (function (tcoll,val){
var self__ = this;
var tcoll__$1 = this;
return tcoll__$1.conj_BANG_(val);
});

cljs.core.TransientHashMap.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
return tcoll__$1.persistent_BANG_();
});

cljs.core.TransientHashMap.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (tcoll,k){
var self__ = this;
var tcoll__$1 = this;
if((k == null)){
if(self__.has_nil_QMARK_){
return self__.nil_val;
} else {
return null;
}
} else {
if((self__.root == null)){
return null;
} else {
return self__.root.inode_lookup((0),cljs.core.hash(k),k);
}
}
});

cljs.core.TransientHashMap.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (tcoll,k,not_found){
var self__ = this;
var tcoll__$1 = this;
if((k == null)){
if(self__.has_nil_QMARK_){
return self__.nil_val;
} else {
return not_found;
}
} else {
if((self__.root == null)){
return not_found;
} else {
return self__.root.inode_lookup((0),cljs.core.hash(k),k,not_found);
}
}
});

cljs.core.TransientHashMap.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if(self__.edit){
return self__.count;
} else {
throw (new Error("count after persistent!"));
}
});

cljs.core.TransientHashMap.prototype.conj_BANG_ = (function (o){
var self__ = this;
var tcoll = this;
if(self__.edit){
if((function (){var G__29877 = o;
if(G__29877){
var bit__24955__auto__ = (G__29877.cljs$lang$protocol_mask$partition0$ & (2048));
if((bit__24955__auto__) || (G__29877.cljs$core$IMapEntry$)){
return true;
} else {
if((!G__29877.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IMapEntry,G__29877);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IMapEntry,G__29877);
}
})()){
return tcoll.assoc_BANG_((function (){var G__29878 = o;
return (cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__29878) : cljs.core.key.call(null,G__29878));
})(),(function (){var G__29879 = o;
return (cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(G__29879) : cljs.core.val.call(null,G__29879));
})());
} else {
var es = cljs.core.seq(o);
var tcoll__$1 = tcoll;
while(true){
var temp__4124__auto__ = cljs.core.first(es);
if(cljs.core.truth_(temp__4124__auto__)){
var e = temp__4124__auto__;
var G__29882 = cljs.core.next(es);
var G__29883 = tcoll__$1.assoc_BANG_((function (){var G__29880 = e;
return (cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__29880) : cljs.core.key.call(null,G__29880));
})(),(function (){var G__29881 = e;
return (cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(G__29881) : cljs.core.val.call(null,G__29881));
})());
es = G__29882;
tcoll__$1 = G__29883;
continue;
} else {
return tcoll__$1;
}
break;
}
}
} else {
throw (new Error("conj! after persistent"));
}
});

cljs.core.TransientHashMap.prototype.assoc_BANG_ = (function (k,v){
var self__ = this;
var tcoll = this;
if(self__.edit){
if((k == null)){
if((self__.nil_val === v)){
} else {
self__.nil_val = v;
}

if(self__.has_nil_QMARK_){
} else {
self__.count = (self__.count + (1));

self__.has_nil_QMARK_ = true;
}

return tcoll;
} else {
var added_leaf_QMARK_ = (new cljs.core.Box(false));
var node = (((self__.root == null))?cljs.core.BitmapIndexedNode.EMPTY:self__.root).inode_assoc_BANG_(self__.edit,(0),cljs.core.hash(k),k,v,added_leaf_QMARK_);
if((node === self__.root)){
} else {
self__.root = node;
}

if(added_leaf_QMARK_.val){
self__.count = (self__.count + (1));
} else {
}

return tcoll;
}
} else {
throw (new Error("assoc! after persistent!"));
}
});

cljs.core.TransientHashMap.prototype.without_BANG_ = (function (k){
var self__ = this;
var tcoll = this;
if(self__.edit){
if((k == null)){
if(self__.has_nil_QMARK_){
self__.has_nil_QMARK_ = false;

self__.nil_val = null;

self__.count = (self__.count - (1));

return tcoll;
} else {
return tcoll;
}
} else {
if((self__.root == null)){
return tcoll;
} else {
var removed_leaf_QMARK_ = (new cljs.core.Box(false));
var node = self__.root.inode_without_BANG_(self__.edit,(0),cljs.core.hash(k),k,removed_leaf_QMARK_);
if((node === self__.root)){
} else {
self__.root = node;
}

if(cljs.core.truth_((removed_leaf_QMARK_[(0)]))){
self__.count = (self__.count - (1));
} else {
}

return tcoll;
}
}
} else {
throw (new Error("dissoc! after persistent!"));
}
});

cljs.core.TransientHashMap.prototype.persistent_BANG_ = (function (){
var self__ = this;
var tcoll = this;
if(self__.edit){
self__.edit = null;

return (new cljs.core.PersistentHashMap(null,self__.count,self__.root,self__.has_nil_QMARK_,self__.nil_val,null));
} else {
throw (new Error("persistent! called twice"));
}
});

cljs.core.TransientHashMap.cljs$lang$type = true;

cljs.core.TransientHashMap.cljs$lang$ctorStr = "cljs.core/TransientHashMap";

cljs.core.TransientHashMap.cljs$lang$ctorPrWriter = (function (this__24861__auto__,writer__24862__auto__,opt__24863__auto__){
return cljs.core._write(writer__24862__auto__,"cljs.core/TransientHashMap");
});

cljs.core.__GT_TransientHashMap = (function __GT_TransientHashMap(edit,root,count,has_nil_QMARK_,nil_val){
return (new cljs.core.TransientHashMap(edit,root,count,has_nil_QMARK_,nil_val));
});

cljs.core.tree_map_seq_push = (function tree_map_seq_push(node,stack,ascending_QMARK_){
var t = node;
var stack__$1 = stack;
while(true){
if(!((t == null))){
var G__29884 = ((ascending_QMARK_)?t.left:t.right);
var G__29885 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(stack__$1,t);
t = G__29884;
stack__$1 = G__29885;
continue;
} else {
return stack__$1;
}
break;
}
});

/**
* @constructor
*/
cljs.core.PersistentTreeMapSeq = (function (meta,stack,ascending_QMARK_,cnt,__hash){
this.meta = meta;
this.stack = stack;
this.ascending_QMARK_ = ascending_QMARK_;
this.cnt = cnt;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32374862;
})
cljs.core.PersistentTreeMapSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentTreeMapSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt < (0))){
return (cljs.core.count(cljs.core.next(coll__$1)) + (1));
} else {
return self__.cnt;
}
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__24695__auto__ = self__.__hash;
if(!((h__24695__auto__ == null))){
return h__24695__auto__;
} else {
var h__24695__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__24695__auto____$1;

return h__24695__auto____$1;
}
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return cljs.core.peek(self__.stack);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
var t = cljs.core.first(self__.stack);
var next_stack = cljs.core.tree_map_seq_push(((self__.ascending_QMARK_)?t.right:t.left),cljs.core.next(self__.stack),self__.ascending_QMARK_);
if(!((next_stack == null))){
return (new cljs.core.PersistentTreeMapSeq(null,next_stack,self__.ascending_QMARK_,(self__.cnt - (1)),null));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return this$__$1;
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeMapSeq(meta__$1,self__.stack,self__.ascending_QMARK_,self__.cnt,self__.__hash));
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.PersistentTreeMapSeq.cljs$lang$type = true;

cljs.core.PersistentTreeMapSeq.cljs$lang$ctorStr = "cljs.core/PersistentTreeMapSeq";

cljs.core.PersistentTreeMapSeq.cljs$lang$ctorPrWriter = (function (this__24861__auto__,writer__24862__auto__,opt__24863__auto__){
return cljs.core._write(writer__24862__auto__,"cljs.core/PersistentTreeMapSeq");
});

cljs.core.__GT_PersistentTreeMapSeq = (function __GT_PersistentTreeMapSeq(meta,stack,ascending_QMARK_,cnt,__hash){
return (new cljs.core.PersistentTreeMapSeq(meta,stack,ascending_QMARK_,cnt,__hash));
});

(cljs.core.PersistentTreeMapSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__25252__auto__ = this;
return cljs.core.es6_iterator(this__25252__auto__);
}));
cljs.core.create_tree_map_seq = (function create_tree_map_seq(tree,ascending_QMARK_,cnt){
return (new cljs.core.PersistentTreeMapSeq(null,cljs.core.tree_map_seq_push(tree,null,ascending_QMARK_),ascending_QMARK_,cnt,null));
});

cljs.core.balance_left = (function balance_left(key,val,ins,right){
if((ins instanceof cljs.core.RedNode)){
if((ins.left instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(ins.key,ins.val,ins.left.blacken(),(new cljs.core.BlackNode(key,val,ins.right,right,null)),null));
} else {
if((ins.right instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(ins.right.key,ins.right.val,(new cljs.core.BlackNode(ins.key,ins.val,ins.left,ins.right.left,null)),(new cljs.core.BlackNode(key,val,ins.right.right,right,null)),null));
} else {
return (new cljs.core.BlackNode(key,val,ins,right,null));

}
}
} else {
return (new cljs.core.BlackNode(key,val,ins,right,null));
}
});
cljs.core.balance_right = (function balance_right(key,val,left,ins){
if((ins instanceof cljs.core.RedNode)){
if((ins.right instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(ins.key,ins.val,(new cljs.core.BlackNode(key,val,left,ins.left,null)),ins.right.blacken(),null));
} else {
if((ins.left instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(ins.left.key,ins.left.val,(new cljs.core.BlackNode(key,val,left,ins.left.left,null)),(new cljs.core.BlackNode(ins.key,ins.val,ins.left.right,ins.right,null)),null));
} else {
return (new cljs.core.BlackNode(key,val,left,ins,null));

}
}
} else {
return (new cljs.core.BlackNode(key,val,left,ins,null));
}
});
cljs.core.balance_left_del = (function balance_left_del(key,val,del,right){
if((del instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(key,val,del.blacken(),right,null));
} else {
if((right instanceof cljs.core.BlackNode)){
return cljs.core.balance_right(key,val,del,right.redden());
} else {
if(((right instanceof cljs.core.RedNode)) && ((right.left instanceof cljs.core.BlackNode))){
return (new cljs.core.RedNode(right.left.key,right.left.val,(new cljs.core.BlackNode(key,val,del,right.left.left,null)),cljs.core.balance_right(right.key,right.val,right.left.right,right.right.redden()),null));
} else {
throw (new Error("red-black tree invariant violation"));

}
}
}
});
cljs.core.balance_right_del = (function balance_right_del(key,val,left,del){
if((del instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(key,val,left,del.blacken(),null));
} else {
if((left instanceof cljs.core.BlackNode)){
return cljs.core.balance_left(key,val,left.redden(),del);
} else {
if(((left instanceof cljs.core.RedNode)) && ((left.right instanceof cljs.core.BlackNode))){
return (new cljs.core.RedNode(left.right.key,left.right.val,cljs.core.balance_left(left.key,left.val,left.left.redden(),left.right.left),(new cljs.core.BlackNode(key,val,left.right.right,del,null)),null));
} else {
throw (new Error("red-black tree invariant violation"));

}
}
}
});
cljs.core.tree_map_kv_reduce = (function tree_map_kv_reduce(node,f,init){
var init__$1 = ((!((node.left == null)))?tree_map_kv_reduce(node.left,f,init):init);
if(cljs.core.reduced_QMARK_(init__$1)){
var G__29898 = init__$1;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__29898) : cljs.core.deref.call(null,G__29898));
} else {
var init__$2 = (function (){var G__29899 = init__$1;
var G__29900 = node.key;
var G__29901 = node.val;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__29899,G__29900,G__29901) : f.call(null,G__29899,G__29900,G__29901));
})();
if(cljs.core.reduced_QMARK_(init__$2)){
var G__29902 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__29902) : cljs.core.deref.call(null,G__29902));
} else {
var init__$3 = ((!((node.right == null)))?tree_map_kv_reduce(node.right,f,init__$2):init__$2);
if(cljs.core.reduced_QMARK_(init__$3)){
var G__29903 = init__$3;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__29903) : cljs.core.deref.call(null,G__29903));
} else {
return init__$3;
}
}
}
});

/**
* @constructor
*/
cljs.core.BlackNode = (function (key,val,left,right,__hash){
this.key = key;
this.val = val;
this.left = left;
this.right = right;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32402207;
})
cljs.core.BlackNode.prototype.add_right = (function (ins){
var self__ = this;
var node = this;
return ins.balance_right(node);
});

cljs.core.BlackNode.prototype.redden = (function (){
var self__ = this;
var node = this;
return (new cljs.core.RedNode(self__.key,self__.val,self__.left,self__.right,null));
});

cljs.core.BlackNode.prototype.blacken = (function (){
var self__ = this;
var node = this;
return node;
});

cljs.core.BlackNode.prototype.add_left = (function (ins){
var self__ = this;
var node = this;
return ins.balance_left(node);
});

cljs.core.BlackNode.prototype.replace = (function (key__$1,val__$1,left__$1,right__$1){
var self__ = this;
var node = this;
return (new cljs.core.BlackNode(key__$1,val__$1,left__$1,right__$1,null));
});

cljs.core.BlackNode.prototype.balance_left = (function (parent){
var self__ = this;
var node = this;
return (new cljs.core.BlackNode(parent.key,parent.val,node,parent.right,null));
});

cljs.core.BlackNode.prototype.balance_right = (function (parent){
var self__ = this;
var node = this;
return (new cljs.core.BlackNode(parent.key,parent.val,parent.left,node,null));
});

cljs.core.BlackNode.prototype.remove_left = (function (del){
var self__ = this;
var node = this;
return cljs.core.balance_left_del(self__.key,self__.val,del,self__.right);
});

cljs.core.BlackNode.prototype.kv_reduce = (function (f,init){
var self__ = this;
var node = this;
return cljs.core.tree_map_kv_reduce(node,f,init);
});

cljs.core.BlackNode.prototype.remove_right = (function (del){
var self__ = this;
var node = this;
return cljs.core.balance_right_del(self__.key,self__.val,self__.left,del);
});

cljs.core.BlackNode.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (node,k){
var self__ = this;
var node__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(node__$1,k,null);
});

cljs.core.BlackNode.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (node,k,not_found){
var self__ = this;
var node__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(node__$1,k,not_found);
});

cljs.core.BlackNode.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (node,n){
var self__ = this;
var node__$1 = this;
if((n === (0))){
return self__.key;
} else {
if((n === (1))){
return self__.val;
} else {
return null;

}
}
});

cljs.core.BlackNode.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (node,n,not_found){
var self__ = this;
var node__$1 = this;
if((n === (0))){
return self__.key;
} else {
if((n === (1))){
return self__.val;
} else {
return not_found;

}
}
});

cljs.core.BlackNode.prototype.cljs$core$IVector$_assoc_n$arity$3 = (function (node,n,v){
var self__ = this;
var node__$1 = this;
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val], null).cljs$core$IVector$_assoc_n$arity$3(null,n,v);
});

cljs.core.BlackNode.prototype.cljs$core$IMeta$_meta$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return null;
});

cljs.core.BlackNode.prototype.cljs$core$ICounted$_count$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return (2);
});

cljs.core.BlackNode.prototype.cljs$core$IMapEntry$_key$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return self__.key;
});

cljs.core.BlackNode.prototype.cljs$core$IMapEntry$_val$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return self__.val;
});

cljs.core.BlackNode.prototype.cljs$core$IStack$_peek$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return self__.val;
});

cljs.core.BlackNode.prototype.cljs$core$IStack$_pop$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key], null);
});

cljs.core.BlackNode.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__24695__auto__ = self__.__hash;
if(!((h__24695__auto__ == null))){
return h__24695__auto__;
} else {
var h__24695__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__24695__auto____$1;

return h__24695__auto____$1;
}
});

cljs.core.BlackNode.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.BlackNode.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return cljs.core.PersistentVector.EMPTY;
});

cljs.core.BlackNode.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (node,f){
var self__ = this;
var node__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(node__$1,f);
});

cljs.core.BlackNode.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (node,f,start){
var self__ = this;
var node__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3(node__$1,f,start);
});

cljs.core.BlackNode.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (node,k,v){
var self__ = this;
var node__$1 = this;
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val], null),k,v);
});

cljs.core.BlackNode.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return cljs.core._conj(cljs.core._conj(cljs.core.List.EMPTY,self__.val),self__.key);
});

cljs.core.BlackNode.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (node,meta){
var self__ = this;
var node__$1 = this;
return cljs.core.with_meta(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val], null),meta);
});

cljs.core.BlackNode.prototype.cljs$core$ICollection$_conj$arity$2 = (function (node,o){
var self__ = this;
var node__$1 = this;
return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val,o], null);
});

cljs.core.BlackNode.prototype.call = (function() {
var G__29905 = null;
var G__29905__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var node = self____$1;
return node.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__29905__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var node = self____$1;
return node.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__29905 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__29905__2.call(this,self__,k);
case 3:
return G__29905__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__29905.cljs$core$IFn$_invoke$arity$2 = G__29905__2;
G__29905.cljs$core$IFn$_invoke$arity$3 = G__29905__3;
return G__29905;
})()
;

cljs.core.BlackNode.prototype.apply = (function (self__,args29904){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args29904)));
});

cljs.core.BlackNode.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var node = this;
return node.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.BlackNode.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var node = this;
return node.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.BlackNode.cljs$lang$type = true;

cljs.core.BlackNode.cljs$lang$ctorStr = "cljs.core/BlackNode";

cljs.core.BlackNode.cljs$lang$ctorPrWriter = (function (this__24861__auto__,writer__24862__auto__,opt__24863__auto__){
return cljs.core._write(writer__24862__auto__,"cljs.core/BlackNode");
});

cljs.core.__GT_BlackNode = (function __GT_BlackNode(key,val,left,right,__hash){
return (new cljs.core.BlackNode(key,val,left,right,__hash));
});

(cljs.core.BlackNode.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__25252__auto__ = this;
return cljs.core.es6_iterator(this__25252__auto__);
}));

/**
* @constructor
*/
cljs.core.RedNode = (function (key,val,left,right,__hash){
this.key = key;
this.val = val;
this.left = left;
this.right = right;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32402207;
})
cljs.core.RedNode.prototype.add_right = (function (ins){
var self__ = this;
var node = this;
return (new cljs.core.RedNode(self__.key,self__.val,self__.left,ins,null));
});

cljs.core.RedNode.prototype.redden = (function (){
var self__ = this;
var node = this;
throw (new Error("red-black tree invariant violation"));
});

cljs.core.RedNode.prototype.blacken = (function (){
var self__ = this;
var node = this;
return (new cljs.core.BlackNode(self__.key,self__.val,self__.left,self__.right,null));
});

cljs.core.RedNode.prototype.add_left = (function (ins){
var self__ = this;
var node = this;
return (new cljs.core.RedNode(self__.key,self__.val,ins,self__.right,null));
});

cljs.core.RedNode.prototype.replace = (function (key__$1,val__$1,left__$1,right__$1){
var self__ = this;
var node = this;
return (new cljs.core.RedNode(key__$1,val__$1,left__$1,right__$1,null));
});

cljs.core.RedNode.prototype.balance_left = (function (parent){
var self__ = this;
var node = this;
if((self__.left instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(self__.key,self__.val,self__.left.blacken(),(new cljs.core.BlackNode(parent.key,parent.val,self__.right,parent.right,null)),null));
} else {
if((self__.right instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(self__.right.key,self__.right.val,(new cljs.core.BlackNode(self__.key,self__.val,self__.left,self__.right.left,null)),(new cljs.core.BlackNode(parent.key,parent.val,self__.right.right,parent.right,null)),null));
} else {
return (new cljs.core.BlackNode(parent.key,parent.val,node,parent.right,null));

}
}
});

cljs.core.RedNode.prototype.balance_right = (function (parent){
var self__ = this;
var node = this;
if((self__.right instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(self__.key,self__.val,(new cljs.core.BlackNode(parent.key,parent.val,parent.left,self__.left,null)),self__.right.blacken(),null));
} else {
if((self__.left instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(self__.left.key,self__.left.val,(new cljs.core.BlackNode(parent.key,parent.val,parent.left,self__.left.left,null)),(new cljs.core.BlackNode(self__.key,self__.val,self__.left.right,self__.right,null)),null));
} else {
return (new cljs.core.BlackNode(parent.key,parent.val,parent.left,node,null));

}
}
});

cljs.core.RedNode.prototype.remove_left = (function (del){
var self__ = this;
var node = this;
return (new cljs.core.RedNode(self__.key,self__.val,del,self__.right,null));
});

cljs.core.RedNode.prototype.kv_reduce = (function (f,init){
var self__ = this;
var node = this;
return cljs.core.tree_map_kv_reduce(node,f,init);
});

cljs.core.RedNode.prototype.remove_right = (function (del){
var self__ = this;
var node = this;
return (new cljs.core.RedNode(self__.key,self__.val,self__.left,del,null));
});

cljs.core.RedNode.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (node,k){
var self__ = this;
var node__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(node__$1,k,null);
});

cljs.core.RedNode.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (node,k,not_found){
var self__ = this;
var node__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(node__$1,k,not_found);
});

cljs.core.RedNode.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (node,n){
var self__ = this;
var node__$1 = this;
if((n === (0))){
return self__.key;
} else {
if((n === (1))){
return self__.val;
} else {
return null;

}
}
});

cljs.core.RedNode.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (node,n,not_found){
var self__ = this;
var node__$1 = this;
if((n === (0))){
return self__.key;
} else {
if((n === (1))){
return self__.val;
} else {
return not_found;

}
}
});

cljs.core.RedNode.prototype.cljs$core$IVector$_assoc_n$arity$3 = (function (node,n,v){
var self__ = this;
var node__$1 = this;
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val], null).cljs$core$IVector$_assoc_n$arity$3(null,n,v);
});

cljs.core.RedNode.prototype.cljs$core$IMeta$_meta$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return null;
});

cljs.core.RedNode.prototype.cljs$core$ICounted$_count$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return (2);
});

cljs.core.RedNode.prototype.cljs$core$IMapEntry$_key$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return self__.key;
});

cljs.core.RedNode.prototype.cljs$core$IMapEntry$_val$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return self__.val;
});

cljs.core.RedNode.prototype.cljs$core$IStack$_peek$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return self__.val;
});

cljs.core.RedNode.prototype.cljs$core$IStack$_pop$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key], null);
});

cljs.core.RedNode.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__24695__auto__ = self__.__hash;
if(!((h__24695__auto__ == null))){
return h__24695__auto__;
} else {
var h__24695__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__24695__auto____$1;

return h__24695__auto____$1;
}
});

cljs.core.RedNode.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.RedNode.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return cljs.core.PersistentVector.EMPTY;
});

cljs.core.RedNode.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (node,f){
var self__ = this;
var node__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(node__$1,f);
});

cljs.core.RedNode.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (node,f,start){
var self__ = this;
var node__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3(node__$1,f,start);
});

cljs.core.RedNode.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (node,k,v){
var self__ = this;
var node__$1 = this;
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val], null),k,v);
});

cljs.core.RedNode.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return cljs.core._conj(cljs.core._conj(cljs.core.List.EMPTY,self__.val),self__.key);
});

cljs.core.RedNode.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (node,meta){
var self__ = this;
var node__$1 = this;
return cljs.core.with_meta(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val], null),meta);
});

cljs.core.RedNode.prototype.cljs$core$ICollection$_conj$arity$2 = (function (node,o){
var self__ = this;
var node__$1 = this;
return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val,o], null);
});

cljs.core.RedNode.prototype.call = (function() {
var G__29907 = null;
var G__29907__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var node = self____$1;
return node.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__29907__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var node = self____$1;
return node.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__29907 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__29907__2.call(this,self__,k);
case 3:
return G__29907__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__29907.cljs$core$IFn$_invoke$arity$2 = G__29907__2;
G__29907.cljs$core$IFn$_invoke$arity$3 = G__29907__3;
return G__29907;
})()
;

cljs.core.RedNode.prototype.apply = (function (self__,args29906){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args29906)));
});

cljs.core.RedNode.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var node = this;
return node.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.RedNode.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var node = this;
return node.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.RedNode.cljs$lang$type = true;

cljs.core.RedNode.cljs$lang$ctorStr = "cljs.core/RedNode";

cljs.core.RedNode.cljs$lang$ctorPrWriter = (function (this__24861__auto__,writer__24862__auto__,opt__24863__auto__){
return cljs.core._write(writer__24862__auto__,"cljs.core/RedNode");
});

cljs.core.__GT_RedNode = (function __GT_RedNode(key,val,left,right,__hash){
return (new cljs.core.RedNode(key,val,left,right,__hash));
});

(cljs.core.RedNode.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__25252__auto__ = this;
return cljs.core.es6_iterator(this__25252__auto__);
}));
cljs.core.tree_map_add = (function tree_map_add(comp,tree,k,v,found){
if((tree == null)){
return (new cljs.core.RedNode(k,v,null,null,null));
} else {
var c = (function (){var G__29920 = k;
var G__29921 = tree.key;
return (comp.cljs$core$IFn$_invoke$arity$2 ? comp.cljs$core$IFn$_invoke$arity$2(G__29920,G__29921) : comp.call(null,G__29920,G__29921));
})();
if((c === (0))){
(found[(0)] = tree);

return null;
} else {
if((c < (0))){
var ins = tree_map_add(comp,tree.left,k,v,found);
if(!((ins == null))){
return tree.add_left(ins);
} else {
return null;
}
} else {
var ins = tree_map_add(comp,tree.right,k,v,found);
if(!((ins == null))){
return tree.add_right(ins);
} else {
return null;
}

}
}
}
});
cljs.core.tree_map_append = (function tree_map_append(left,right){
if((left == null)){
return right;
} else {
if((right == null)){
return left;
} else {
if((left instanceof cljs.core.RedNode)){
if((right instanceof cljs.core.RedNode)){
var app = tree_map_append(left.right,right.left);
if((app instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(app.key,app.val,(new cljs.core.RedNode(left.key,left.val,left.left,app.left,null)),(new cljs.core.RedNode(right.key,right.val,app.right,right.right,null)),null));
} else {
return (new cljs.core.RedNode(left.key,left.val,left.left,(new cljs.core.RedNode(right.key,right.val,app,right.right,null)),null));
}
} else {
return (new cljs.core.RedNode(left.key,left.val,left.left,tree_map_append(left.right,right),null));
}
} else {
if((right instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(right.key,right.val,tree_map_append(left,right.left),right.right,null));
} else {
var app = tree_map_append(left.right,right.left);
if((app instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(app.key,app.val,(new cljs.core.BlackNode(left.key,left.val,left.left,app.left,null)),(new cljs.core.BlackNode(right.key,right.val,app.right,right.right,null)),null));
} else {
return cljs.core.balance_left_del(left.key,left.val,left.left,(new cljs.core.BlackNode(right.key,right.val,app,right.right,null)));
}

}
}
}
}
});
cljs.core.tree_map_remove = (function tree_map_remove(comp,tree,k,found){
if(!((tree == null))){
var c = (function (){var G__29940 = k;
var G__29941 = tree.key;
return (comp.cljs$core$IFn$_invoke$arity$2 ? comp.cljs$core$IFn$_invoke$arity$2(G__29940,G__29941) : comp.call(null,G__29940,G__29941));
})();
if((c === (0))){
(found[(0)] = tree);

return cljs.core.tree_map_append(tree.left,tree.right);
} else {
if((c < (0))){
var del = tree_map_remove(comp,tree.left,k,found);
if((!((del == null))) || (!(((found[(0)]) == null)))){
if((tree.left instanceof cljs.core.BlackNode)){
return cljs.core.balance_left_del(tree.key,tree.val,del,tree.right);
} else {
return (new cljs.core.RedNode(tree.key,tree.val,del,tree.right,null));
}
} else {
return null;
}
} else {
var del = tree_map_remove(comp,tree.right,k,found);
if((!((del == null))) || (!(((found[(0)]) == null)))){
if((tree.right instanceof cljs.core.BlackNode)){
return cljs.core.balance_right_del(tree.key,tree.val,tree.left,del);
} else {
return (new cljs.core.RedNode(tree.key,tree.val,tree.left,del,null));
}
} else {
return null;
}

}
}
} else {
return null;
}
});
cljs.core.tree_map_replace = (function tree_map_replace(comp,tree,k,v){
var tk = tree.key;
var c = (function (){var G__29952 = k;
var G__29953 = tk;
return (comp.cljs$core$IFn$_invoke$arity$2 ? comp.cljs$core$IFn$_invoke$arity$2(G__29952,G__29953) : comp.call(null,G__29952,G__29953));
})();
if((c === (0))){
return tree.replace(tk,v,tree.left,tree.right);
} else {
if((c < (0))){
return tree.replace(tk,tree.val,tree_map_replace(comp,tree.left,k,v),tree.right);
} else {
return tree.replace(tk,tree.val,tree.left,tree_map_replace(comp,tree.right,k,v));

}
}
});

/**
* @constructor
*/
cljs.core.PersistentTreeMap = (function (comp,tree,cnt,meta,__hash){
this.comp = comp;
this.tree = tree;
this.cnt = cnt;
this.meta = meta;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 418776847;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.PersistentTreeMap.prototype.forEach = (function (f){
var self__ = this;
var coll = this;
var seq__29955 = cljs.core.seq(coll);
var chunk__29956 = null;
var count__29957 = (0);
var i__29958 = (0);
while(true){
if((i__29958 < count__29957)){
var vec__29959 = chunk__29956.cljs$core$IIndexed$_nth$arity$2(null,i__29958);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__29959,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__29959,(1),null);
var G__29960_29972 = v;
var G__29961_29973 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__29960_29972,G__29961_29973) : f.call(null,G__29960_29972,G__29961_29973));

var G__29974 = seq__29955;
var G__29975 = chunk__29956;
var G__29976 = count__29957;
var G__29977 = (i__29958 + (1));
seq__29955 = G__29974;
chunk__29956 = G__29975;
count__29957 = G__29976;
i__29958 = G__29977;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__29955);
if(temp__4126__auto__){
var seq__29955__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__29955__$1)){
var c__25061__auto__ = cljs.core.chunk_first(seq__29955__$1);
var G__29978 = cljs.core.chunk_rest(seq__29955__$1);
var G__29979 = c__25061__auto__;
var G__29980 = cljs.core.count(c__25061__auto__);
var G__29981 = (0);
seq__29955 = G__29978;
chunk__29956 = G__29979;
count__29957 = G__29980;
i__29958 = G__29981;
continue;
} else {
var vec__29962 = cljs.core.first(seq__29955__$1);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__29962,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__29962,(1),null);
var G__29963_29982 = v;
var G__29964_29983 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__29963_29982,G__29964_29983) : f.call(null,G__29963_29982,G__29964_29983));

var G__29984 = cljs.core.next(seq__29955__$1);
var G__29985 = null;
var G__29986 = (0);
var G__29987 = (0);
seq__29955 = G__29984;
chunk__29956 = G__29985;
count__29957 = G__29986;
i__29958 = G__29987;
continue;
}
} else {
return null;
}
}
break;
}
});

cljs.core.PersistentTreeMap.prototype.get = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentTreeMap.prototype.entries = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_entries_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentTreeMap.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentTreeMap.prototype.keys = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator((function (){var G__29965 = coll;
return (cljs.core.keys.cljs$core$IFn$_invoke$arity$1 ? cljs.core.keys.cljs$core$IFn$_invoke$arity$1(G__29965) : cljs.core.keys.call(null,G__29965));
})());
});

cljs.core.PersistentTreeMap.prototype.values = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator((function (){var G__29966 = coll;
return (cljs.core.vals.cljs$core$IFn$_invoke$arity$1 ? cljs.core.vals.cljs$core$IFn$_invoke$arity$1(G__29966) : cljs.core.vals.call(null,G__29966));
})());
});

cljs.core.PersistentTreeMap.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentTreeMap.prototype.entry_at = (function (k){
var self__ = this;
var coll = this;
var t = self__.tree;
while(true){
if(!((t == null))){
var c = (function (){var G__29967 = k;
var G__29968 = t.key;
return (self__.comp.cljs$core$IFn$_invoke$arity$2 ? self__.comp.cljs$core$IFn$_invoke$arity$2(G__29967,G__29968) : self__.comp.call(null,G__29967,G__29968));
})();
if((c === (0))){
return t;
} else {
if((c < (0))){
var G__29988 = t.left;
t = G__29988;
continue;
} else {
var G__29989 = t.right;
t = G__29989;
continue;

}
}
} else {
return null;
}
break;
}
});

cljs.core.PersistentTreeMap.prototype.has = (function (k){
var self__ = this;
var coll = this;
return cljs.core.contains_QMARK_(coll,k);
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
var n = coll__$1.entry_at(k);
if(!((n == null))){
return n.val;
} else {
return not_found;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = (function (coll,f,init){
var self__ = this;
var coll__$1 = this;
if(!((self__.tree == null))){
return cljs.core.tree_map_kv_reduce(self__.tree,f,init);
} else {
return init;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.PersistentTreeMap(self__.comp,self__.tree,self__.cnt,self__.meta,self__.__hash));
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.cnt;
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IReversible$_rseq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
return cljs.core.create_tree_map_seq(self__.tree,false,self__.cnt);
} else {
return null;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__24695__auto__ = self__.__hash;
if(!((h__24695__auto__ == null))){
return h__24695__auto__;
} else {
var h__24695__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
self__.__hash = h__24695__auto____$1;

return h__24695__auto____$1;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_map(coll__$1,other);
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeMap(self__.comp,null,(0),self__.meta,(0)));
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IMap$_dissoc$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
var found = [null];
var t = cljs.core.tree_map_remove(self__.comp,self__.tree,k,found);
if((t == null)){
if((cljs.core.nth.cljs$core$IFn$_invoke$arity$2(found,(0)) == null)){
return coll__$1;
} else {
return (new cljs.core.PersistentTreeMap(self__.comp,null,(0),self__.meta,null));
}
} else {
return (new cljs.core.PersistentTreeMap(self__.comp,t.blacken(),(self__.cnt - (1)),self__.meta,null));
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (coll,k,v){
var self__ = this;
var coll__$1 = this;
var found = [null];
var t = cljs.core.tree_map_add(self__.comp,self__.tree,k,v,found);
if((t == null)){
var found_node = cljs.core.nth.cljs$core$IFn$_invoke$arity$2(found,(0));
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(v,found_node.val)){
return coll__$1;
} else {
return (new cljs.core.PersistentTreeMap(self__.comp,cljs.core.tree_map_replace(self__.comp,self__.tree,k,v),self__.cnt,self__.meta,null));
}
} else {
return (new cljs.core.PersistentTreeMap(self__.comp,t.blacken(),(self__.cnt + (1)),self__.meta,null));
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return !((coll__$1.entry_at(k) == null));
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
return cljs.core.create_tree_map_seq(self__.tree,true,self__.cnt);
} else {
return null;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeMap(self__.comp,self__.tree,self__.cnt,meta__$1,self__.__hash));
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,entry){
var self__ = this;
var coll__$1 = this;
if(cljs.core.vector_QMARK_(entry)){
return cljs.core._assoc(coll__$1,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(1)));
} else {
var ret = coll__$1;
var es = cljs.core.seq(entry);
while(true){
if((es == null)){
return ret;
} else {
var e = cljs.core.first(es);
if(cljs.core.vector_QMARK_(e)){
var G__29990 = cljs.core._assoc(ret,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e,(1)));
var G__29991 = cljs.core.next(es);
ret = G__29990;
es = G__29991;
continue;
} else {
throw (new Error("conj on a map takes map entries or seqables of map entries"));
}
}
break;
}
}
});

cljs.core.PersistentTreeMap.prototype.call = (function() {
var G__29992 = null;
var G__29992__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__29992__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__29992 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__29992__2.call(this,self__,k);
case 3:
return G__29992__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__29992.cljs$core$IFn$_invoke$arity$2 = G__29992__2;
G__29992.cljs$core$IFn$_invoke$arity$3 = G__29992__3;
return G__29992;
})()
;

cljs.core.PersistentTreeMap.prototype.apply = (function (self__,args29954){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args29954)));
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_sorted_seq$arity$2 = (function (coll,ascending_QMARK_){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
return cljs.core.create_tree_map_seq(self__.tree,ascending_QMARK_,self__.cnt);
} else {
return null;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_sorted_seq_from$arity$3 = (function (coll,k,ascending_QMARK_){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
var stack = null;
var t = self__.tree;
while(true){
if(!((t == null))){
var c = (function (){var G__29969 = k;
var G__29970 = t.key;
return (self__.comp.cljs$core$IFn$_invoke$arity$2 ? self__.comp.cljs$core$IFn$_invoke$arity$2(G__29969,G__29970) : self__.comp.call(null,G__29969,G__29970));
})();
if((c === (0))){
return (new cljs.core.PersistentTreeMapSeq(null,cljs.core.conj.cljs$core$IFn$_invoke$arity$2(stack,t),ascending_QMARK_,(-1),null));
} else {
if(cljs.core.truth_(ascending_QMARK_)){
if((c < (0))){
var G__29993 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(stack,t);
var G__29994 = t.left;
stack = G__29993;
t = G__29994;
continue;
} else {
var G__29995 = stack;
var G__29996 = t.right;
stack = G__29995;
t = G__29996;
continue;
}
} else {
if((c > (0))){
var G__29997 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(stack,t);
var G__29998 = t.right;
stack = G__29997;
t = G__29998;
continue;
} else {
var G__29999 = stack;
var G__30000 = t.left;
stack = G__29999;
t = G__30000;
continue;
}

}
}
} else {
if((stack == null)){
return null;
} else {
return (new cljs.core.PersistentTreeMapSeq(null,stack,ascending_QMARK_,(-1),null));
}
}
break;
}
} else {
return null;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_entry_key$arity$2 = (function (coll,entry){
var self__ = this;
var coll__$1 = this;
var G__29971 = entry;
return (cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__29971) : cljs.core.key.call(null,G__29971));
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_comparator$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.comp;
});

cljs.core.PersistentTreeMap.cljs$lang$type = true;

cljs.core.PersistentTreeMap.cljs$lang$ctorStr = "cljs.core/PersistentTreeMap";

cljs.core.PersistentTreeMap.cljs$lang$ctorPrWriter = (function (this__24861__auto__,writer__24862__auto__,opt__24863__auto__){
return cljs.core._write(writer__24862__auto__,"cljs.core/PersistentTreeMap");
});

cljs.core.__GT_PersistentTreeMap = (function __GT_PersistentTreeMap(comp,tree,cnt,meta,__hash){
return (new cljs.core.PersistentTreeMap(comp,tree,cnt,meta,__hash));
});

cljs.core.PersistentTreeMap.EMPTY = (new cljs.core.PersistentTreeMap(cljs.core.compare,null,(0),null,(0)));
(cljs.core.PersistentTreeMap.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__25252__auto__ = this;
return cljs.core.es6_iterator(this__25252__auto__);
}));
/**
* keyval => key val
* Returns a new hash map with supplied mappings.
* @param {...*} var_args
*/
cljs.core.hash_map = (function() { 
var hash_map__delegate = function (keyvals){
var in$ = cljs.core.seq(keyvals);
var out = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
while(true){
if(in$){
var G__30001 = cljs.core.nnext(in$);
var G__30002 = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(out,cljs.core.first(in$),cljs.core.second(in$));
in$ = G__30001;
out = G__30002;
continue;
} else {
return cljs.core.persistent_BANG_(out);
}
break;
}
};
var hash_map = function (var_args){
var keyvals = null;
if (arguments.length > 0) {
var G__30003__i = 0, G__30003__a = new Array(arguments.length -  0);
while (G__30003__i < G__30003__a.length) {G__30003__a[G__30003__i] = arguments[G__30003__i + 0]; ++G__30003__i;}
  keyvals = new cljs.core.IndexedSeq(G__30003__a,0);
} 
return hash_map__delegate.call(this,keyvals);};
hash_map.cljs$lang$maxFixedArity = 0;
hash_map.cljs$lang$applyTo = (function (arglist__30004){
var keyvals = cljs.core.seq(arglist__30004);
return hash_map__delegate(keyvals);
});
hash_map.cljs$core$IFn$_invoke$arity$variadic = hash_map__delegate;
return hash_map;
})()
;
/**
* keyval => key val
* Returns a new array map with supplied mappings.
* @param {...*} var_args
*/
cljs.core.array_map = (function() { 
var array_map__delegate = function (keyvals){
return cljs.core.PersistentArrayMap.fromArray(cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.array,keyvals),true,false);
};
var array_map = function (var_args){
var keyvals = null;
if (arguments.length > 0) {
var G__30005__i = 0, G__30005__a = new Array(arguments.length -  0);
while (G__30005__i < G__30005__a.length) {G__30005__a[G__30005__i] = arguments[G__30005__i + 0]; ++G__30005__i;}
  keyvals = new cljs.core.IndexedSeq(G__30005__a,0);
} 
return array_map__delegate.call(this,keyvals);};
array_map.cljs$lang$maxFixedArity = 0;
array_map.cljs$lang$applyTo = (function (arglist__30006){
var keyvals = cljs.core.seq(arglist__30006);
return array_map__delegate(keyvals);
});
array_map.cljs$core$IFn$_invoke$arity$variadic = array_map__delegate;
return array_map;
})()
;
/**
* keyval => key val
* Returns a new object map with supplied mappings.
* @param {...*} var_args
*/
cljs.core.obj_map = (function() { 
var obj_map__delegate = function (keyvals){
var ks = [];
var obj = (function (){var obj30010 = {};
return obj30010;
})();
var kvs = cljs.core.seq(keyvals);
while(true){
if(kvs){
ks.push(cljs.core.first(kvs));

(obj[cljs.core.first(kvs)] = cljs.core.second(kvs));

var G__30011 = cljs.core.nnext(kvs);
kvs = G__30011;
continue;
} else {
return cljs.core.ObjMap.fromObject(ks,obj);
}
break;
}
};
var obj_map = function (var_args){
var keyvals = null;
if (arguments.length > 0) {
var G__30012__i = 0, G__30012__a = new Array(arguments.length -  0);
while (G__30012__i < G__30012__a.length) {G__30012__a[G__30012__i] = arguments[G__30012__i + 0]; ++G__30012__i;}
  keyvals = new cljs.core.IndexedSeq(G__30012__a,0);
} 
return obj_map__delegate.call(this,keyvals);};
obj_map.cljs$lang$maxFixedArity = 0;
obj_map.cljs$lang$applyTo = (function (arglist__30013){
var keyvals = cljs.core.seq(arglist__30013);
return obj_map__delegate(keyvals);
});
obj_map.cljs$core$IFn$_invoke$arity$variadic = obj_map__delegate;
return obj_map;
})()
;
/**
* keyval => key val
* Returns a new sorted map with supplied mappings.
* @param {...*} var_args
*/
cljs.core.sorted_map = (function() { 
var sorted_map__delegate = function (keyvals){
var in$ = cljs.core.seq(keyvals);
var out = cljs.core.PersistentTreeMap.EMPTY;
while(true){
if(in$){
var G__30014 = cljs.core.nnext(in$);
var G__30015 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(out,cljs.core.first(in$),cljs.core.second(in$));
in$ = G__30014;
out = G__30015;
continue;
} else {
return out;
}
break;
}
};
var sorted_map = function (var_args){
var keyvals = null;
if (arguments.length > 0) {
var G__30016__i = 0, G__30016__a = new Array(arguments.length -  0);
while (G__30016__i < G__30016__a.length) {G__30016__a[G__30016__i] = arguments[G__30016__i + 0]; ++G__30016__i;}
  keyvals = new cljs.core.IndexedSeq(G__30016__a,0);
} 
return sorted_map__delegate.call(this,keyvals);};
sorted_map.cljs$lang$maxFixedArity = 0;
sorted_map.cljs$lang$applyTo = (function (arglist__30017){
var keyvals = cljs.core.seq(arglist__30017);
return sorted_map__delegate(keyvals);
});
sorted_map.cljs$core$IFn$_invoke$arity$variadic = sorted_map__delegate;
return sorted_map;
})()
;
/**
* keyval => key val
* Returns a new sorted map with supplied mappings, using the supplied comparator.
* @param {...*} var_args
*/
cljs.core.sorted_map_by = (function() { 
var sorted_map_by__delegate = function (comparator,keyvals){
var in$ = cljs.core.seq(keyvals);
var out = (new cljs.core.PersistentTreeMap(cljs.core.fn__GT_comparator(comparator),null,(0),null,(0)));
while(true){
if(in$){
var G__30018 = cljs.core.nnext(in$);
var G__30019 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(out,cljs.core.first(in$),cljs.core.second(in$));
in$ = G__30018;
out = G__30019;
continue;
} else {
return out;
}
break;
}
};
var sorted_map_by = function (comparator,var_args){
var keyvals = null;
if (arguments.length > 1) {
var G__30020__i = 0, G__30020__a = new Array(arguments.length -  1);
while (G__30020__i < G__30020__a.length) {G__30020__a[G__30020__i] = arguments[G__30020__i + 1]; ++G__30020__i;}
  keyvals = new cljs.core.IndexedSeq(G__30020__a,0);
} 
return sorted_map_by__delegate.call(this,comparator,keyvals);};
sorted_map_by.cljs$lang$maxFixedArity = 1;
sorted_map_by.cljs$lang$applyTo = (function (arglist__30021){
var comparator = cljs.core.first(arglist__30021);
var keyvals = cljs.core.rest(arglist__30021);
return sorted_map_by__delegate(comparator,keyvals);
});
sorted_map_by.cljs$core$IFn$_invoke$arity$variadic = sorted_map_by__delegate;
return sorted_map_by;
})()
;

/**
* @constructor
*/
cljs.core.KeySeq = (function (mseq,_meta){
this.mseq = mseq;
this._meta = _meta;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32374988;
})
cljs.core.KeySeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.KeySeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.KeySeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__._meta;
});

cljs.core.KeySeq.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var nseq = (((function (){var G__30022 = self__.mseq;
if(G__30022){
var bit__24955__auto__ = (G__30022.cljs$lang$protocol_mask$partition0$ & (128));
if((bit__24955__auto__) || (G__30022.cljs$core$INext$)){
return true;
} else {
if((!G__30022.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__30022);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__30022);
}
})())?self__.mseq.cljs$core$INext$_next$arity$1(null):cljs.core.next(self__.mseq));
if((nseq == null)){
return null;
} else {
return (new cljs.core.KeySeq(nseq,self__._meta));
}
});

cljs.core.KeySeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.hash_ordered_coll(coll__$1);
});

cljs.core.KeySeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.KeySeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__._meta);
});

cljs.core.KeySeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.KeySeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.KeySeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var me = self__.mseq.cljs$core$ISeq$_first$arity$1(null);
return me.cljs$core$IMapEntry$_key$arity$1(null);
});

cljs.core.KeySeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var nseq = (((function (){var G__30023 = self__.mseq;
if(G__30023){
var bit__24955__auto__ = (G__30023.cljs$lang$protocol_mask$partition0$ & (128));
if((bit__24955__auto__) || (G__30023.cljs$core$INext$)){
return true;
} else {
if((!G__30023.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__30023);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__30023);
}
})())?self__.mseq.cljs$core$INext$_next$arity$1(null):cljs.core.next(self__.mseq));
if(!((nseq == null))){
return (new cljs.core.KeySeq(nseq,self__._meta));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.KeySeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.KeySeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,new_meta){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.KeySeq(self__.mseq,new_meta));
});

cljs.core.KeySeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.KeySeq.cljs$lang$type = true;

cljs.core.KeySeq.cljs$lang$ctorStr = "cljs.core/KeySeq";

cljs.core.KeySeq.cljs$lang$ctorPrWriter = (function (this__24861__auto__,writer__24862__auto__,opt__24863__auto__){
return cljs.core._write(writer__24862__auto__,"cljs.core/KeySeq");
});

cljs.core.__GT_KeySeq = (function __GT_KeySeq(mseq,_meta){
return (new cljs.core.KeySeq(mseq,_meta));
});

(cljs.core.KeySeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__25252__auto__ = this;
return cljs.core.es6_iterator(this__25252__auto__);
}));
/**
* Returns a sequence of the map's keys.
*/
cljs.core.keys = (function keys(hash_map){
var temp__4126__auto__ = cljs.core.seq(hash_map);
if(temp__4126__auto__){
var mseq = temp__4126__auto__;
return (new cljs.core.KeySeq(mseq,null));
} else {
return null;
}
});
/**
* Returns the key of the map entry.
*/
cljs.core.key = (function key(map_entry){
return cljs.core._key(map_entry);
});

/**
* @constructor
*/
cljs.core.ValSeq = (function (mseq,_meta){
this.mseq = mseq;
this._meta = _meta;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32374988;
})
cljs.core.ValSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.ValSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.ValSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__._meta;
});

cljs.core.ValSeq.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var nseq = (((function (){var G__30024 = self__.mseq;
if(G__30024){
var bit__24955__auto__ = (G__30024.cljs$lang$protocol_mask$partition0$ & (128));
if((bit__24955__auto__) || (G__30024.cljs$core$INext$)){
return true;
} else {
if((!G__30024.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__30024);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__30024);
}
})())?self__.mseq.cljs$core$INext$_next$arity$1(null):cljs.core.next(self__.mseq));
if((nseq == null)){
return null;
} else {
return (new cljs.core.ValSeq(nseq,self__._meta));
}
});

cljs.core.ValSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.hash_ordered_coll(coll__$1);
});

cljs.core.ValSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.ValSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__._meta);
});

cljs.core.ValSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.ValSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.ValSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var me = self__.mseq.cljs$core$ISeq$_first$arity$1(null);
return me.cljs$core$IMapEntry$_val$arity$1(null);
});

cljs.core.ValSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var nseq = (((function (){var G__30025 = self__.mseq;
if(G__30025){
var bit__24955__auto__ = (G__30025.cljs$lang$protocol_mask$partition0$ & (128));
if((bit__24955__auto__) || (G__30025.cljs$core$INext$)){
return true;
} else {
if((!G__30025.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__30025);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__30025);
}
})())?self__.mseq.cljs$core$INext$_next$arity$1(null):cljs.core.next(self__.mseq));
if(!((nseq == null))){
return (new cljs.core.ValSeq(nseq,self__._meta));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.ValSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.ValSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,new_meta){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.ValSeq(self__.mseq,new_meta));
});

cljs.core.ValSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.ValSeq.cljs$lang$type = true;

cljs.core.ValSeq.cljs$lang$ctorStr = "cljs.core/ValSeq";

cljs.core.ValSeq.cljs$lang$ctorPrWriter = (function (this__24861__auto__,writer__24862__auto__,opt__24863__auto__){
return cljs.core._write(writer__24862__auto__,"cljs.core/ValSeq");
});

cljs.core.__GT_ValSeq = (function __GT_ValSeq(mseq,_meta){
return (new cljs.core.ValSeq(mseq,_meta));
});

(cljs.core.ValSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__25252__auto__ = this;
return cljs.core.es6_iterator(this__25252__auto__);
}));
/**
* Returns a sequence of the map's values.
*/
cljs.core.vals = (function vals(hash_map){
var temp__4126__auto__ = cljs.core.seq(hash_map);
if(temp__4126__auto__){
var mseq = temp__4126__auto__;
return (new cljs.core.ValSeq(mseq,null));
} else {
return null;
}
});
/**
* Returns the value in the map entry.
*/
cljs.core.val = (function val(map_entry){
return cljs.core._val(map_entry);
});
/**
* Returns a map that consists of the rest of the maps conj-ed onto
* the first.  If a key occurs in more than one map, the mapping from
* the latter (left-to-right) will be the mapping in the result.
* @param {...*} var_args
*/
cljs.core.merge = (function() { 
var merge__delegate = function (maps){
if(cljs.core.truth_(cljs.core.some(cljs.core.identity,maps))){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$2((function (p1__30026_SHARP_,p2__30027_SHARP_){
return cljs.core.conj.cljs$core$IFn$_invoke$arity$2((function (){var or__24274__auto__ = p1__30026_SHARP_;
if(cljs.core.truth_(or__24274__auto__)){
return or__24274__auto__;
} else {
return cljs.core.PersistentArrayMap.EMPTY;
}
})(),p2__30027_SHARP_);
}),maps);
} else {
return null;
}
};
var merge = function (var_args){
var maps = null;
if (arguments.length > 0) {
var G__30028__i = 0, G__30028__a = new Array(arguments.length -  0);
while (G__30028__i < G__30028__a.length) {G__30028__a[G__30028__i] = arguments[G__30028__i + 0]; ++G__30028__i;}
  maps = new cljs.core.IndexedSeq(G__30028__a,0);
} 
return merge__delegate.call(this,maps);};
merge.cljs$lang$maxFixedArity = 0;
merge.cljs$lang$applyTo = (function (arglist__30029){
var maps = cljs.core.seq(arglist__30029);
return merge__delegate(maps);
});
merge.cljs$core$IFn$_invoke$arity$variadic = merge__delegate;
return merge;
})()
;
/**
* Returns a map that consists of the rest of the maps conj-ed onto
* the first.  If a key occurs in more than one map, the mapping(s)
* from the latter (left-to-right) will be combined with the mapping in
* the result by calling (f val-in-result val-in-latter).
* @param {...*} var_args
*/
cljs.core.merge_with = (function() { 
var merge_with__delegate = function (f,maps){
if(cljs.core.truth_(cljs.core.some(cljs.core.identity,maps))){
var merge_entry = (function (m,e){
var k = cljs.core.first(e);
var v = cljs.core.second(e);
if(cljs.core.contains_QMARK_(m,k)){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__30032 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__30033 = v;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__30032,G__30033) : f.call(null,G__30032,G__30033));
})());
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,v);
}
});
var merge2 = ((function (merge_entry){
return (function (m1,m2){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(merge_entry,(function (){var or__24274__auto__ = m1;
if(cljs.core.truth_(or__24274__auto__)){
return or__24274__auto__;
} else {
return cljs.core.PersistentArrayMap.EMPTY;
}
})(),cljs.core.seq(m2));
});})(merge_entry))
;
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$2(merge2,maps);
} else {
return null;
}
};
var merge_with = function (f,var_args){
var maps = null;
if (arguments.length > 1) {
var G__30034__i = 0, G__30034__a = new Array(arguments.length -  1);
while (G__30034__i < G__30034__a.length) {G__30034__a[G__30034__i] = arguments[G__30034__i + 1]; ++G__30034__i;}
  maps = new cljs.core.IndexedSeq(G__30034__a,0);
} 
return merge_with__delegate.call(this,f,maps);};
merge_with.cljs$lang$maxFixedArity = 1;
merge_with.cljs$lang$applyTo = (function (arglist__30035){
var f = cljs.core.first(arglist__30035);
var maps = cljs.core.rest(arglist__30035);
return merge_with__delegate(f,maps);
});
merge_with.cljs$core$IFn$_invoke$arity$variadic = merge_with__delegate;
return merge_with;
})()
;
/**
* Returns a map containing only those entries in map whose key is in keys
*/
cljs.core.select_keys = (function select_keys(map,keyseq){
var ret = cljs.core.PersistentArrayMap.EMPTY;
var keys = cljs.core.seq(keyseq);
while(true){
if(keys){
var key = cljs.core.first(keys);
var entry = cljs.core.get.cljs$core$IFn$_invoke$arity$3(map,key,new cljs.core.Keyword("cljs.core","not-found","cljs.core/not-found",-1572889185));
var G__30036 = ((cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2(entry,new cljs.core.Keyword("cljs.core","not-found","cljs.core/not-found",-1572889185)))?cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(ret,key,entry):ret);
var G__30037 = cljs.core.next(keys);
ret = G__30036;
keys = G__30037;
continue;
} else {
return cljs.core.with_meta(ret,cljs.core.meta(map));
}
break;
}
});

/**
* @constructor
*/
cljs.core.PersistentHashSet = (function (meta,hash_map,__hash){
this.meta = meta;
this.hash_map = hash_map;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 15077647;
this.cljs$lang$protocol_mask$partition1$ = 8196;
})
cljs.core.PersistentHashSet.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentHashSet.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentHashSet.prototype.keys = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentHashSet.prototype.entries = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_set_entries_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentHashSet.prototype.values = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentHashSet.prototype.has = (function (k){
var self__ = this;
var coll = this;
return cljs.core.contains_QMARK_(coll,k);
});

cljs.core.PersistentHashSet.prototype.forEach = (function (f){
var self__ = this;
var coll = this;
var seq__30040 = cljs.core.seq(coll);
var chunk__30041 = null;
var count__30042 = (0);
var i__30043 = (0);
while(true){
if((i__30043 < count__30042)){
var vec__30044 = chunk__30041.cljs$core$IIndexed$_nth$arity$2(null,i__30043);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__30044,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__30044,(1),null);
var G__30045_30050 = v;
var G__30046_30051 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__30045_30050,G__30046_30051) : f.call(null,G__30045_30050,G__30046_30051));

var G__30052 = seq__30040;
var G__30053 = chunk__30041;
var G__30054 = count__30042;
var G__30055 = (i__30043 + (1));
seq__30040 = G__30052;
chunk__30041 = G__30053;
count__30042 = G__30054;
i__30043 = G__30055;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__30040);
if(temp__4126__auto__){
var seq__30040__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__30040__$1)){
var c__25061__auto__ = cljs.core.chunk_first(seq__30040__$1);
var G__30056 = cljs.core.chunk_rest(seq__30040__$1);
var G__30057 = c__25061__auto__;
var G__30058 = cljs.core.count(c__25061__auto__);
var G__30059 = (0);
seq__30040 = G__30056;
chunk__30041 = G__30057;
count__30042 = G__30058;
i__30043 = G__30059;
continue;
} else {
var vec__30047 = cljs.core.first(seq__30040__$1);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__30047,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__30047,(1),null);
var G__30048_30060 = v;
var G__30049_30061 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__30048_30060,G__30049_30061) : f.call(null,G__30048_30060,G__30049_30061));

var G__30062 = cljs.core.next(seq__30040__$1);
var G__30063 = null;
var G__30064 = (0);
var G__30065 = (0);
seq__30040 = G__30062;
chunk__30041 = G__30063;
count__30042 = G__30064;
i__30043 = G__30065;
continue;
}
} else {
return null;
}
}
break;
}
});

cljs.core.PersistentHashSet.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,v){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,v,null);
});

cljs.core.PersistentHashSet.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,v,not_found){
var self__ = this;
var coll__$1 = this;
if(cljs.core._contains_key_QMARK_(self__.hash_map,v)){
return v;
} else {
return not_found;
}
});

cljs.core.PersistentHashSet.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentHashSet.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.PersistentHashSet(self__.meta,self__.hash_map,self__.__hash));
});

cljs.core.PersistentHashSet.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._count(self__.hash_map);
});

cljs.core.PersistentHashSet.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__24695__auto__ = self__.__hash;
if(!((h__24695__auto__ == null))){
return h__24695__auto__;
} else {
var h__24695__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
self__.__hash = h__24695__auto____$1;

return h__24695__auto____$1;
}
});

cljs.core.PersistentHashSet.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return (cljs.core.set_QMARK_(other)) && ((cljs.core.count(coll__$1) === cljs.core.count(other))) && (cljs.core.every_QMARK_(((function (coll__$1){
return (function (p1__30038_SHARP_){
return cljs.core.contains_QMARK_(coll__$1,p1__30038_SHARP_);
});})(coll__$1))
,other));
});

cljs.core.PersistentHashSet.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.TransientHashSet(cljs.core._as_transient(self__.hash_map)));
});

cljs.core.PersistentHashSet.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.PersistentHashSet.EMPTY,self__.meta);
});

cljs.core.PersistentHashSet.prototype.cljs$core$ISet$_disjoin$arity$2 = (function (coll,v){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentHashSet(self__.meta,cljs.core._dissoc(self__.hash_map,v),null));
});

cljs.core.PersistentHashSet.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.keys(self__.hash_map);
});

cljs.core.PersistentHashSet.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentHashSet(meta__$1,self__.hash_map,self__.__hash));
});

cljs.core.PersistentHashSet.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentHashSet(self__.meta,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.hash_map,o,null),null));
});

cljs.core.PersistentHashSet.prototype.call = (function() {
var G__30066 = null;
var G__30066__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__30066__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__30066 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__30066__2.call(this,self__,k);
case 3:
return G__30066__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__30066.cljs$core$IFn$_invoke$arity$2 = G__30066__2;
G__30066.cljs$core$IFn$_invoke$arity$3 = G__30066__3;
return G__30066;
})()
;

cljs.core.PersistentHashSet.prototype.apply = (function (self__,args30039){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args30039)));
});

cljs.core.PersistentHashSet.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentHashSet.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.PersistentHashSet.cljs$lang$type = true;

cljs.core.PersistentHashSet.cljs$lang$ctorStr = "cljs.core/PersistentHashSet";

cljs.core.PersistentHashSet.cljs$lang$ctorPrWriter = (function (this__24861__auto__,writer__24862__auto__,opt__24863__auto__){
return cljs.core._write(writer__24862__auto__,"cljs.core/PersistentHashSet");
});

cljs.core.__GT_PersistentHashSet = (function __GT_PersistentHashSet(meta,hash_map,__hash){
return (new cljs.core.PersistentHashSet(meta,hash_map,__hash));
});

cljs.core.PersistentHashSet.EMPTY = (new cljs.core.PersistentHashSet(null,cljs.core.PersistentArrayMap.EMPTY,(0)));
cljs.core.PersistentHashSet.fromArray = (function (items,no_clone){
var len = items.length;
if((len <= cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD)){
var arr = ((no_clone)?items:cljs.core.aclone(items));
var i = (0);
var out = cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY);
while(true){
if((i < len)){
var G__30067 = (i + (1));
var G__30068 = cljs.core._assoc_BANG_(out,(items[i]),null);
i = G__30067;
out = G__30068;
continue;
} else {
return (new cljs.core.PersistentHashSet(null,cljs.core._persistent_BANG_(out),null));
}
break;
}
} else {
var i = (0);
var out = cljs.core.transient$(cljs.core.PersistentHashSet.EMPTY);
while(true){
if((i < len)){
var G__30069 = (i + (1));
var G__30070 = cljs.core._conj_BANG_(out,(items[i]));
i = G__30069;
out = G__30070;
continue;
} else {
return cljs.core._persistent_BANG_(out);
}
break;
}
}
});
(cljs.core.PersistentHashSet.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__25252__auto__ = this;
return cljs.core.es6_iterator(this__25252__auto__);
}));

/**
* @constructor
*/
cljs.core.TransientHashSet = (function (transient_map){
this.transient_map = transient_map;
this.cljs$lang$protocol_mask$partition0$ = 259;
this.cljs$lang$protocol_mask$partition1$ = 136;
})
cljs.core.TransientHashSet.prototype.call = (function() {
var G__30072 = null;
var G__30072__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var tcoll = self____$1;
if((cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map,k,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel)){
return null;
} else {
return k;
}
});
var G__30072__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var tcoll = self____$1;
if((cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map,k,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel)){
return not_found;
} else {
return k;
}
});
G__30072 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__30072__2.call(this,self__,k);
case 3:
return G__30072__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__30072.cljs$core$IFn$_invoke$arity$2 = G__30072__2;
G__30072.cljs$core$IFn$_invoke$arity$3 = G__30072__3;
return G__30072;
})()
;

cljs.core.TransientHashSet.prototype.apply = (function (self__,args30071){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args30071)));
});

cljs.core.TransientHashSet.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var tcoll = this;
if((cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map,k,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel)){
return null;
} else {
return k;
}
});

cljs.core.TransientHashSet.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var tcoll = this;
if((cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map,k,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel)){
return not_found;
} else {
return k;
}
});

cljs.core.TransientHashSet.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (tcoll,v){
var self__ = this;
var tcoll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(tcoll__$1,v,null);
});

cljs.core.TransientHashSet.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (tcoll,v,not_found){
var self__ = this;
var tcoll__$1 = this;
if((cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map,v,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel)){
return not_found;
} else {
return v;
}
});

cljs.core.TransientHashSet.prototype.cljs$core$ICounted$_count$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
return cljs.core.count(self__.transient_map);
});

cljs.core.TransientHashSet.prototype.cljs$core$ITransientSet$_disjoin_BANG_$arity$2 = (function (tcoll,v){
var self__ = this;
var tcoll__$1 = this;
self__.transient_map = cljs.core.dissoc_BANG_.cljs$core$IFn$_invoke$arity$2(self__.transient_map,v);

return tcoll__$1;
});

cljs.core.TransientHashSet.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = (function (tcoll,o){
var self__ = this;
var tcoll__$1 = this;
self__.transient_map = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(self__.transient_map,o,null);

return tcoll__$1;
});

cljs.core.TransientHashSet.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
return (new cljs.core.PersistentHashSet(null,cljs.core.persistent_BANG_(self__.transient_map),null));
});

cljs.core.TransientHashSet.cljs$lang$type = true;

cljs.core.TransientHashSet.cljs$lang$ctorStr = "cljs.core/TransientHashSet";

cljs.core.TransientHashSet.cljs$lang$ctorPrWriter = (function (this__24861__auto__,writer__24862__auto__,opt__24863__auto__){
return cljs.core._write(writer__24862__auto__,"cljs.core/TransientHashSet");
});

cljs.core.__GT_TransientHashSet = (function __GT_TransientHashSet(transient_map){
return (new cljs.core.TransientHashSet(transient_map));
});


/**
* @constructor
*/
cljs.core.PersistentTreeSet = (function (meta,tree_map,__hash){
this.meta = meta;
this.tree_map = tree_map;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 417730831;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.PersistentTreeSet.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentTreeSet.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentTreeSet.prototype.keys = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentTreeSet.prototype.entries = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_set_entries_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentTreeSet.prototype.values = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentTreeSet.prototype.has = (function (k){
var self__ = this;
var coll = this;
return cljs.core.contains_QMARK_(coll,k);
});

cljs.core.PersistentTreeSet.prototype.forEach = (function (f){
var self__ = this;
var coll = this;
var seq__30075 = cljs.core.seq(coll);
var chunk__30076 = null;
var count__30077 = (0);
var i__30078 = (0);
while(true){
if((i__30078 < count__30077)){
var vec__30079 = chunk__30076.cljs$core$IIndexed$_nth$arity$2(null,i__30078);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__30079,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__30079,(1),null);
var G__30080_30085 = v;
var G__30081_30086 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__30080_30085,G__30081_30086) : f.call(null,G__30080_30085,G__30081_30086));

var G__30087 = seq__30075;
var G__30088 = chunk__30076;
var G__30089 = count__30077;
var G__30090 = (i__30078 + (1));
seq__30075 = G__30087;
chunk__30076 = G__30088;
count__30077 = G__30089;
i__30078 = G__30090;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__30075);
if(temp__4126__auto__){
var seq__30075__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__30075__$1)){
var c__25061__auto__ = cljs.core.chunk_first(seq__30075__$1);
var G__30091 = cljs.core.chunk_rest(seq__30075__$1);
var G__30092 = c__25061__auto__;
var G__30093 = cljs.core.count(c__25061__auto__);
var G__30094 = (0);
seq__30075 = G__30091;
chunk__30076 = G__30092;
count__30077 = G__30093;
i__30078 = G__30094;
continue;
} else {
var vec__30082 = cljs.core.first(seq__30075__$1);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__30082,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__30082,(1),null);
var G__30083_30095 = v;
var G__30084_30096 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__30083_30095,G__30084_30096) : f.call(null,G__30083_30095,G__30084_30096));

var G__30097 = cljs.core.next(seq__30075__$1);
var G__30098 = null;
var G__30099 = (0);
var G__30100 = (0);
seq__30075 = G__30097;
chunk__30076 = G__30098;
count__30077 = G__30099;
i__30078 = G__30100;
continue;
}
} else {
return null;
}
}
break;
}
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,v){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,v,null);
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,v,not_found){
var self__ = this;
var coll__$1 = this;
var n = self__.tree_map.entry_at(v);
if(!((n == null))){
return n.key;
} else {
return not_found;
}
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.PersistentTreeSet(self__.meta,self__.tree_map,self__.__hash));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.count(self__.tree_map);
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IReversible$_rseq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((cljs.core.count(self__.tree_map) > (0))){
return cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.key,cljs.core.rseq(self__.tree_map));
} else {
return null;
}
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__24695__auto__ = self__.__hash;
if(!((h__24695__auto__ == null))){
return h__24695__auto__;
} else {
var h__24695__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
self__.__hash = h__24695__auto____$1;

return h__24695__auto____$1;
}
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return (cljs.core.set_QMARK_(other)) && ((cljs.core.count(coll__$1) === cljs.core.count(other))) && (cljs.core.every_QMARK_(((function (coll__$1){
return (function (p1__30073_SHARP_){
return cljs.core.contains_QMARK_(coll__$1,p1__30073_SHARP_);
});})(coll__$1))
,other));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeSet(self__.meta,cljs.core._empty(self__.tree_map),(0)));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ISet$_disjoin$arity$2 = (function (coll,v){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeSet(self__.meta,cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(self__.tree_map,v),null));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.keys(self__.tree_map);
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeSet(meta__$1,self__.tree_map,self__.__hash));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeSet(self__.meta,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.tree_map,o,null),null));
});

cljs.core.PersistentTreeSet.prototype.call = (function() {
var G__30101 = null;
var G__30101__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__30101__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__30101 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__30101__2.call(this,self__,k);
case 3:
return G__30101__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__30101.cljs$core$IFn$_invoke$arity$2 = G__30101__2;
G__30101.cljs$core$IFn$_invoke$arity$3 = G__30101__3;
return G__30101;
})()
;

cljs.core.PersistentTreeSet.prototype.apply = (function (self__,args30074){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args30074)));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_sorted_seq$arity$2 = (function (coll,ascending_QMARK_){
var self__ = this;
var coll__$1 = this;
return cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.key,cljs.core._sorted_seq(self__.tree_map,ascending_QMARK_));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_sorted_seq_from$arity$3 = (function (coll,k,ascending_QMARK_){
var self__ = this;
var coll__$1 = this;
return cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.key,cljs.core._sorted_seq_from(self__.tree_map,k,ascending_QMARK_));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_entry_key$arity$2 = (function (coll,entry){
var self__ = this;
var coll__$1 = this;
return entry;
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_comparator$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._comparator(self__.tree_map);
});

cljs.core.PersistentTreeSet.cljs$lang$type = true;

cljs.core.PersistentTreeSet.cljs$lang$ctorStr = "cljs.core/PersistentTreeSet";

cljs.core.PersistentTreeSet.cljs$lang$ctorPrWriter = (function (this__24861__auto__,writer__24862__auto__,opt__24863__auto__){
return cljs.core._write(writer__24862__auto__,"cljs.core/PersistentTreeSet");
});

cljs.core.__GT_PersistentTreeSet = (function __GT_PersistentTreeSet(meta,tree_map,__hash){
return (new cljs.core.PersistentTreeSet(meta,tree_map,__hash));
});

cljs.core.PersistentTreeSet.EMPTY = (new cljs.core.PersistentTreeSet(null,cljs.core.PersistentTreeMap.EMPTY,(0)));
(cljs.core.PersistentTreeSet.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__25252__auto__ = this;
return cljs.core.es6_iterator(this__25252__auto__);
}));
cljs.core.set_from_indexed_seq = (function set_from_indexed_seq(iseq){
var arr = iseq.arr;
var ret = (function (){var a__25155__auto__ = arr;
var i = (0);
var res = cljs.core._as_transient(cljs.core.PersistentHashSet.EMPTY);
while(true){
if((i < a__25155__auto__.length)){
var G__30102 = (i + (1));
var G__30103 = res.cljs$core$ITransientCollection$_conj_BANG_$arity$2(null,(arr[i]));
i = G__30102;
res = G__30103;
continue;
} else {
return res;
}
break;
}
})();
return ret.cljs$core$ITransientCollection$_persistent_BANG_$arity$1(null);
});
/**
* Returns a set of the distinct elements of coll.
*/
cljs.core.set = (function set(coll){
var in$ = cljs.core.seq(coll);
if((in$ == null)){
return cljs.core.PersistentHashSet.EMPTY;
} else {
if(((in$ instanceof cljs.core.IndexedSeq)) && ((in$.i === (0)))){
return cljs.core.set_from_indexed_seq(in$);
} else {
var in$__$1 = in$;
var out = cljs.core._as_transient(cljs.core.PersistentHashSet.EMPTY);
while(true){
if(!((in$__$1 == null))){
var G__30104 = in$__$1.cljs$core$INext$_next$arity$1(null);
var G__30105 = out.cljs$core$ITransientCollection$_conj_BANG_$arity$2(null,in$__$1.cljs$core$ISeq$_first$arity$1(null));
in$__$1 = G__30104;
out = G__30105;
continue;
} else {
return out.cljs$core$ITransientCollection$_persistent_BANG_$arity$1(null);
}
break;
}

}
}
});
/**
* @param {...*} var_args
*/
cljs.core.hash_set = (function() {
var hash_set = null;
var hash_set__0 = (function (){
return cljs.core.PersistentHashSet.EMPTY;
});
var hash_set__1 = (function() { 
var G__30106__delegate = function (keys){
return cljs.core.set(keys);
};
var G__30106 = function (var_args){
var keys = null;
if (arguments.length > 0) {
var G__30107__i = 0, G__30107__a = new Array(arguments.length -  0);
while (G__30107__i < G__30107__a.length) {G__30107__a[G__30107__i] = arguments[G__30107__i + 0]; ++G__30107__i;}
  keys = new cljs.core.IndexedSeq(G__30107__a,0);
} 
return G__30106__delegate.call(this,keys);};
G__30106.cljs$lang$maxFixedArity = 0;
G__30106.cljs$lang$applyTo = (function (arglist__30108){
var keys = cljs.core.seq(arglist__30108);
return G__30106__delegate(keys);
});
G__30106.cljs$core$IFn$_invoke$arity$variadic = G__30106__delegate;
return G__30106;
})()
;
hash_set = function(var_args){
var keys = var_args;
switch(arguments.length){
case 0:
return hash_set__0.call(this);
default:
var G__30109 = null;
if (arguments.length > 0) {
var G__30110__i = 0, G__30110__a = new Array(arguments.length -  0);
while (G__30110__i < G__30110__a.length) {G__30110__a[G__30110__i] = arguments[G__30110__i + 0]; ++G__30110__i;}
G__30109 = new cljs.core.IndexedSeq(G__30110__a,0);
}
return hash_set__1.cljs$core$IFn$_invoke$arity$variadic(G__30109);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
hash_set.cljs$lang$maxFixedArity = 0;
hash_set.cljs$lang$applyTo = hash_set__1.cljs$lang$applyTo;
hash_set.cljs$core$IFn$_invoke$arity$0 = hash_set__0;
hash_set.cljs$core$IFn$_invoke$arity$variadic = hash_set__1.cljs$core$IFn$_invoke$arity$variadic;
return hash_set;
})()
;
/**
* Returns a new sorted set with supplied keys.
* @param {...*} var_args
*/
cljs.core.sorted_set = (function() { 
var sorted_set__delegate = function (keys){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj,cljs.core.PersistentTreeSet.EMPTY,keys);
};
var sorted_set = function (var_args){
var keys = null;
if (arguments.length > 0) {
var G__30111__i = 0, G__30111__a = new Array(arguments.length -  0);
while (G__30111__i < G__30111__a.length) {G__30111__a[G__30111__i] = arguments[G__30111__i + 0]; ++G__30111__i;}
  keys = new cljs.core.IndexedSeq(G__30111__a,0);
} 
return sorted_set__delegate.call(this,keys);};
sorted_set.cljs$lang$maxFixedArity = 0;
sorted_set.cljs$lang$applyTo = (function (arglist__30112){
var keys = cljs.core.seq(arglist__30112);
return sorted_set__delegate(keys);
});
sorted_set.cljs$core$IFn$_invoke$arity$variadic = sorted_set__delegate;
return sorted_set;
})()
;
/**
* Returns a new sorted set with supplied keys, using the supplied comparator.
* @param {...*} var_args
*/
cljs.core.sorted_set_by = (function() { 
var sorted_set_by__delegate = function (comparator,keys){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj,(new cljs.core.PersistentTreeSet(null,cljs.core.sorted_map_by(comparator),(0))),keys);
};
var sorted_set_by = function (comparator,var_args){
var keys = null;
if (arguments.length > 1) {
var G__30113__i = 0, G__30113__a = new Array(arguments.length -  1);
while (G__30113__i < G__30113__a.length) {G__30113__a[G__30113__i] = arguments[G__30113__i + 1]; ++G__30113__i;}
  keys = new cljs.core.IndexedSeq(G__30113__a,0);
} 
return sorted_set_by__delegate.call(this,comparator,keys);};
sorted_set_by.cljs$lang$maxFixedArity = 1;
sorted_set_by.cljs$lang$applyTo = (function (arglist__30114){
var comparator = cljs.core.first(arglist__30114);
var keys = cljs.core.rest(arglist__30114);
return sorted_set_by__delegate(comparator,keys);
});
sorted_set_by.cljs$core$IFn$_invoke$arity$variadic = sorted_set_by__delegate;
return sorted_set_by;
})()
;
/**
* Given a map of replacement pairs and a vector/collection, returns a
* vector/seq with any elements = a key in smap replaced with the
* corresponding val in smap.  Returns a transducer when no collection
* is provided.
*/
cljs.core.replace = (function() {
var replace = null;
var replace__1 = (function (smap){
return cljs.core.map.cljs$core$IFn$_invoke$arity$1((function (p1__30115_SHARP_){
var temp__4124__auto__ = cljs.core.find(smap,p1__30115_SHARP_);
if(cljs.core.truth_(temp__4124__auto__)){
var e = temp__4124__auto__;
return cljs.core.val(e);
} else {
return p1__30115_SHARP_;
}
}));
});
var replace__2 = (function (smap,coll){
if(cljs.core.vector_QMARK_(coll)){
var n = cljs.core.count(coll);
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (n){
return (function (v,i){
var temp__4124__auto__ = cljs.core.find(smap,cljs.core.nth.cljs$core$IFn$_invoke$arity$2(v,i));
if(cljs.core.truth_(temp__4124__auto__)){
var e = temp__4124__auto__;
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(v,i,cljs.core.second(e));
} else {
return v;
}
});})(n))
,coll,cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,cljs.core.iterate(cljs.core.inc,(0))));
} else {
return cljs.core.map.cljs$core$IFn$_invoke$arity$2((function (p1__30116_SHARP_){
var temp__4124__auto__ = cljs.core.find(smap,p1__30116_SHARP_);
if(cljs.core.truth_(temp__4124__auto__)){
var e = temp__4124__auto__;
return cljs.core.second(e);
} else {
return p1__30116_SHARP_;
}
}),coll);
}
});
replace = function(smap,coll){
switch(arguments.length){
case 1:
return replace__1.call(this,smap);
case 2:
return replace__2.call(this,smap,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
replace.cljs$core$IFn$_invoke$arity$1 = replace__1;
replace.cljs$core$IFn$_invoke$arity$2 = replace__2;
return replace;
})()
;
/**
* Returns a lazy sequence of the elements of coll with duplicates removed
*/
cljs.core.distinct = (function distinct(coll){
var step = (function step(xs,seen){
return (new cljs.core.LazySeq(null,(function (){
return (function (p__30127,seen__$1){
while(true){
var vec__30128 = p__30127;
var f = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__30128,(0),null);
var xs__$1 = vec__30128;
var temp__4126__auto__ = cljs.core.seq(xs__$1);
if(temp__4126__auto__){
var s = temp__4126__auto__;
if(cljs.core.contains_QMARK_(seen__$1,f)){
var G__30129 = cljs.core.rest(s);
var G__30130 = seen__$1;
p__30127 = G__30129;
seen__$1 = G__30130;
continue;
} else {
return cljs.core.cons(f,step(cljs.core.rest(s),cljs.core.conj.cljs$core$IFn$_invoke$arity$2(seen__$1,f)));
}
} else {
return null;
}
break;
}
}).call(null,xs,seen);
}),null,null));
});
return step(coll,cljs.core.PersistentHashSet.EMPTY);
});
cljs.core.butlast = (function butlast(s){
var ret = cljs.core.PersistentVector.EMPTY;
var s__$1 = s;
while(true){
if(cljs.core.next(s__$1)){
var G__30131 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(ret,cljs.core.first(s__$1));
var G__30132 = cljs.core.next(s__$1);
ret = G__30131;
s__$1 = G__30132;
continue;
} else {
return cljs.core.seq(ret);
}
break;
}
});
/**
* Returns the name String of a string, symbol or keyword.
*/
cljs.core.name = (function name(x){
if((function (){var G__30134 = x;
if(G__30134){
var bit__24948__auto__ = (G__30134.cljs$lang$protocol_mask$partition1$ & (4096));
if((bit__24948__auto__) || (G__30134.cljs$core$INamed$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return x.cljs$core$INamed$_name$arity$1(null);
} else {
if(typeof x === 'string'){
return x;
} else {
throw (new Error([cljs.core.str("Doesn't support name: "),cljs.core.str(x)].join('')));
}
}
});
/**
* Returns a map with the keys mapped to the corresponding vals.
*/
cljs.core.zipmap = (function zipmap(keys,vals){
var map = cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY);
var ks = cljs.core.seq(keys);
var vs = cljs.core.seq(vals);
while(true){
if((ks) && (vs)){
var G__30135 = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(map,cljs.core.first(ks),cljs.core.first(vs));
var G__30136 = cljs.core.next(ks);
var G__30137 = cljs.core.next(vs);
map = G__30135;
ks = G__30136;
vs = G__30137;
continue;
} else {
return cljs.core.persistent_BANG_(map);
}
break;
}
});
/**
* Returns the x for which (k x), a number, is greatest.
* @param {...*} var_args
*/
cljs.core.max_key = (function() {
var max_key = null;
var max_key__2 = (function (k,x){
return x;
});
var max_key__3 = (function (k,x,y){
if(((function (){var G__30148 = x;
return (k.cljs$core$IFn$_invoke$arity$1 ? k.cljs$core$IFn$_invoke$arity$1(G__30148) : k.call(null,G__30148));
})() > (function (){var G__30149 = y;
return (k.cljs$core$IFn$_invoke$arity$1 ? k.cljs$core$IFn$_invoke$arity$1(G__30149) : k.call(null,G__30149));
})())){
return x;
} else {
return y;
}
});
var max_key__4 = (function() { 
var G__30150__delegate = function (k,x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (p1__30138_SHARP_,p2__30139_SHARP_){
return max_key.cljs$core$IFn$_invoke$arity$3(k,p1__30138_SHARP_,p2__30139_SHARP_);
}),max_key.cljs$core$IFn$_invoke$arity$3(k,x,y),more);
};
var G__30150 = function (k,x,y,var_args){
var more = null;
if (arguments.length > 3) {
var G__30151__i = 0, G__30151__a = new Array(arguments.length -  3);
while (G__30151__i < G__30151__a.length) {G__30151__a[G__30151__i] = arguments[G__30151__i + 3]; ++G__30151__i;}
  more = new cljs.core.IndexedSeq(G__30151__a,0);
} 
return G__30150__delegate.call(this,k,x,y,more);};
G__30150.cljs$lang$maxFixedArity = 3;
G__30150.cljs$lang$applyTo = (function (arglist__30152){
var k = cljs.core.first(arglist__30152);
arglist__30152 = cljs.core.next(arglist__30152);
var x = cljs.core.first(arglist__30152);
arglist__30152 = cljs.core.next(arglist__30152);
var y = cljs.core.first(arglist__30152);
var more = cljs.core.rest(arglist__30152);
return G__30150__delegate(k,x,y,more);
});
G__30150.cljs$core$IFn$_invoke$arity$variadic = G__30150__delegate;
return G__30150;
})()
;
max_key = function(k,x,y,var_args){
var more = var_args;
switch(arguments.length){
case 2:
return max_key__2.call(this,k,x);
case 3:
return max_key__3.call(this,k,x,y);
default:
var G__30153 = null;
if (arguments.length > 3) {
var G__30154__i = 0, G__30154__a = new Array(arguments.length -  3);
while (G__30154__i < G__30154__a.length) {G__30154__a[G__30154__i] = arguments[G__30154__i + 3]; ++G__30154__i;}
G__30153 = new cljs.core.IndexedSeq(G__30154__a,0);
}
return max_key__4.cljs$core$IFn$_invoke$arity$variadic(k,x,y, G__30153);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
max_key.cljs$lang$maxFixedArity = 3;
max_key.cljs$lang$applyTo = max_key__4.cljs$lang$applyTo;
max_key.cljs$core$IFn$_invoke$arity$2 = max_key__2;
max_key.cljs$core$IFn$_invoke$arity$3 = max_key__3;
max_key.cljs$core$IFn$_invoke$arity$variadic = max_key__4.cljs$core$IFn$_invoke$arity$variadic;
return max_key;
})()
;
/**
* Returns the x for which (k x), a number, is least.
* @param {...*} var_args
*/
cljs.core.min_key = (function() {
var min_key = null;
var min_key__2 = (function (k,x){
return x;
});
var min_key__3 = (function (k,x,y){
if(((function (){var G__30165 = x;
return (k.cljs$core$IFn$_invoke$arity$1 ? k.cljs$core$IFn$_invoke$arity$1(G__30165) : k.call(null,G__30165));
})() < (function (){var G__30166 = y;
return (k.cljs$core$IFn$_invoke$arity$1 ? k.cljs$core$IFn$_invoke$arity$1(G__30166) : k.call(null,G__30166));
})())){
return x;
} else {
return y;
}
});
var min_key__4 = (function() { 
var G__30167__delegate = function (k,x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (p1__30155_SHARP_,p2__30156_SHARP_){
return min_key.cljs$core$IFn$_invoke$arity$3(k,p1__30155_SHARP_,p2__30156_SHARP_);
}),min_key.cljs$core$IFn$_invoke$arity$3(k,x,y),more);
};
var G__30167 = function (k,x,y,var_args){
var more = null;
if (arguments.length > 3) {
var G__30168__i = 0, G__30168__a = new Array(arguments.length -  3);
while (G__30168__i < G__30168__a.length) {G__30168__a[G__30168__i] = arguments[G__30168__i + 3]; ++G__30168__i;}
  more = new cljs.core.IndexedSeq(G__30168__a,0);
} 
return G__30167__delegate.call(this,k,x,y,more);};
G__30167.cljs$lang$maxFixedArity = 3;
G__30167.cljs$lang$applyTo = (function (arglist__30169){
var k = cljs.core.first(arglist__30169);
arglist__30169 = cljs.core.next(arglist__30169);
var x = cljs.core.first(arglist__30169);
arglist__30169 = cljs.core.next(arglist__30169);
var y = cljs.core.first(arglist__30169);
var more = cljs.core.rest(arglist__30169);
return G__30167__delegate(k,x,y,more);
});
G__30167.cljs$core$IFn$_invoke$arity$variadic = G__30167__delegate;
return G__30167;
})()
;
min_key = function(k,x,y,var_args){
var more = var_args;
switch(arguments.length){
case 2:
return min_key__2.call(this,k,x);
case 3:
return min_key__3.call(this,k,x,y);
default:
var G__30170 = null;
if (arguments.length > 3) {
var G__30171__i = 0, G__30171__a = new Array(arguments.length -  3);
while (G__30171__i < G__30171__a.length) {G__30171__a[G__30171__i] = arguments[G__30171__i + 3]; ++G__30171__i;}
G__30170 = new cljs.core.IndexedSeq(G__30171__a,0);
}
return min_key__4.cljs$core$IFn$_invoke$arity$variadic(k,x,y, G__30170);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
min_key.cljs$lang$maxFixedArity = 3;
min_key.cljs$lang$applyTo = min_key__4.cljs$lang$applyTo;
min_key.cljs$core$IFn$_invoke$arity$2 = min_key__2;
min_key.cljs$core$IFn$_invoke$arity$3 = min_key__3;
min_key.cljs$core$IFn$_invoke$arity$variadic = min_key__4.cljs$core$IFn$_invoke$arity$variadic;
return min_key;
})()
;

/**
* @constructor
*/
cljs.core.ArrayList = (function (arr){
this.arr = arr;
})
cljs.core.ArrayList.prototype.add = (function (x){
var self__ = this;
var _ = this;
return self__.arr.push(x);
});

cljs.core.ArrayList.prototype.size = (function (){
var self__ = this;
var _ = this;
return self__.arr.length;
});

cljs.core.ArrayList.prototype.clear = (function (){
var self__ = this;
var _ = this;
return self__.arr = [];
});

cljs.core.ArrayList.prototype.isEmpty = (function (){
var self__ = this;
var _ = this;
return (self__.arr.length === (0));
});

cljs.core.ArrayList.prototype.toArray = (function (){
var self__ = this;
var _ = this;
return self__.arr;
});

cljs.core.ArrayList.cljs$lang$type = true;

cljs.core.ArrayList.cljs$lang$ctorStr = "cljs.core/ArrayList";

cljs.core.ArrayList.cljs$lang$ctorPrWriter = (function (this__24861__auto__,writer__24862__auto__,opt__24863__auto__){
return cljs.core._write(writer__24862__auto__,"cljs.core/ArrayList");
});

cljs.core.__GT_ArrayList = (function __GT_ArrayList(arr){
return (new cljs.core.ArrayList(arr));
});

cljs.core.array_list = (function array_list(){
return (new cljs.core.ArrayList([]));
});
/**
* Returns a lazy sequence of lists like partition, but may include
* partitions with fewer than n items at the end.  Returns a stateful
* transducer when no collection is provided.
*/
cljs.core.partition_all = (function() {
var partition_all = null;
var partition_all__1 = (function (n){
return (function (rf){
var a = cljs.core.array_list();
return ((function (a){
return (function() {
var G__30188 = null;
var G__30188__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__30188__1 = (function (result){
var result__$1 = (cljs.core.truth_(a.isEmpty())?result:(function (){var v = cljs.core.vec(a.toArray());
a.clear();

return cljs.core.unreduced((function (){var G__30183 = result;
var G__30184 = v;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__30183,G__30184) : rf.call(null,G__30183,G__30184));
})());
})());
var G__30185 = result__$1;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__30185) : rf.call(null,G__30185));
});
var G__30188__2 = (function (result,input){
a.add(input);

if((n === a.size())){
var v = cljs.core.vec(a.toArray());
a.clear();

var G__30186 = result;
var G__30187 = v;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__30186,G__30187) : rf.call(null,G__30186,G__30187));
} else {
return result;
}
});
G__30188 = function(result,input){
switch(arguments.length){
case 0:
return G__30188__0.call(this);
case 1:
return G__30188__1.call(this,result);
case 2:
return G__30188__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__30188.cljs$core$IFn$_invoke$arity$0 = G__30188__0;
G__30188.cljs$core$IFn$_invoke$arity$1 = G__30188__1;
G__30188.cljs$core$IFn$_invoke$arity$2 = G__30188__2;
return G__30188;
})()
;})(a))
});
});
var partition_all__2 = (function (n,coll){
return partition_all.cljs$core$IFn$_invoke$arity$3(n,n,coll);
});
var partition_all__3 = (function (n,step,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
return cljs.core.cons(cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,s),partition_all.cljs$core$IFn$_invoke$arity$3(n,step,cljs.core.drop.cljs$core$IFn$_invoke$arity$2(step,s)));
} else {
return null;
}
}),null,null));
});
partition_all = function(n,step,coll){
switch(arguments.length){
case 1:
return partition_all__1.call(this,n);
case 2:
return partition_all__2.call(this,n,step);
case 3:
return partition_all__3.call(this,n,step,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
partition_all.cljs$core$IFn$_invoke$arity$1 = partition_all__1;
partition_all.cljs$core$IFn$_invoke$arity$2 = partition_all__2;
partition_all.cljs$core$IFn$_invoke$arity$3 = partition_all__3;
return partition_all;
})()
;
/**
* Returns a lazy sequence of successive items from coll while
* (pred item) returns true. pred must be free of side-effects.
* Returns a transducer when no collection is provided.
*/
cljs.core.take_while = (function() {
var take_while = null;
var take_while__1 = (function (pred){
return (function (rf){
return (function() {
var G__30201 = null;
var G__30201__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__30201__1 = (function (result){
var G__30196 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__30196) : rf.call(null,G__30196));
});
var G__30201__2 = (function (result,input){
if(cljs.core.truth_((function (){var G__30197 = input;
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__30197) : pred.call(null,G__30197));
})())){
var G__30198 = result;
var G__30199 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__30198,G__30199) : rf.call(null,G__30198,G__30199));
} else {
return cljs.core.reduced(result);
}
});
G__30201 = function(result,input){
switch(arguments.length){
case 0:
return G__30201__0.call(this);
case 1:
return G__30201__1.call(this,result);
case 2:
return G__30201__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__30201.cljs$core$IFn$_invoke$arity$0 = G__30201__0;
G__30201.cljs$core$IFn$_invoke$arity$1 = G__30201__1;
G__30201.cljs$core$IFn$_invoke$arity$2 = G__30201__2;
return G__30201;
})()
});
});
var take_while__2 = (function (pred,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
if(cljs.core.truth_((function (){var G__30200 = cljs.core.first(s);
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__30200) : pred.call(null,G__30200));
})())){
return cljs.core.cons(cljs.core.first(s),take_while.cljs$core$IFn$_invoke$arity$2(pred,cljs.core.rest(s)));
} else {
return null;
}
} else {
return null;
}
}),null,null));
});
take_while = function(pred,coll){
switch(arguments.length){
case 1:
return take_while__1.call(this,pred);
case 2:
return take_while__2.call(this,pred,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
take_while.cljs$core$IFn$_invoke$arity$1 = take_while__1;
take_while.cljs$core$IFn$_invoke$arity$2 = take_while__2;
return take_while;
})()
;
cljs.core.mk_bound_fn = (function mk_bound_fn(sc,test,key){
return (function (e){
var comp = cljs.core._comparator(sc);
var G__30206 = (function (){var G__30208 = cljs.core._entry_key(sc,e);
var G__30209 = key;
return (comp.cljs$core$IFn$_invoke$arity$2 ? comp.cljs$core$IFn$_invoke$arity$2(G__30208,G__30209) : comp.call(null,G__30208,G__30209));
})();
var G__30207 = (0);
return (test.cljs$core$IFn$_invoke$arity$2 ? test.cljs$core$IFn$_invoke$arity$2(G__30206,G__30207) : test.call(null,G__30206,G__30207));
});
});
/**
* sc must be a sorted collection, test(s) one of <, <=, > or
* >=. Returns a seq of those entries with keys ek for
* which (test (.. sc comparator (compare ek key)) 0) is true
*/
cljs.core.subseq = (function() {
var subseq = null;
var subseq__3 = (function (sc,test,key){
var include = cljs.core.mk_bound_fn(sc,test,key);
if(cljs.core.truth_(cljs.core.PersistentHashSet.fromArray([cljs.core._GT_,cljs.core._GT__EQ_], true).call(null,test))){
var temp__4126__auto__ = cljs.core._sorted_seq_from(sc,key,true);
if(cljs.core.truth_(temp__4126__auto__)){
var vec__30213 = temp__4126__auto__;
var e = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__30213,(0),null);
var s = vec__30213;
if(cljs.core.truth_((function (){var G__30214 = e;
return (include.cljs$core$IFn$_invoke$arity$1 ? include.cljs$core$IFn$_invoke$arity$1(G__30214) : include.call(null,G__30214));
})())){
return s;
} else {
return cljs.core.next(s);
}
} else {
return null;
}
} else {
return cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(include,cljs.core._sorted_seq(sc,true));
}
});
var subseq__5 = (function (sc,start_test,start_key,end_test,end_key){
var temp__4126__auto__ = cljs.core._sorted_seq_from(sc,start_key,true);
if(cljs.core.truth_(temp__4126__auto__)){
var vec__30215 = temp__4126__auto__;
var e = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__30215,(0),null);
var s = vec__30215;
return cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(cljs.core.mk_bound_fn(sc,end_test,end_key),(cljs.core.truth_(cljs.core.mk_bound_fn(sc,start_test,start_key).call(null,e))?s:cljs.core.next(s)));
} else {
return null;
}
});
subseq = function(sc,start_test,start_key,end_test,end_key){
switch(arguments.length){
case 3:
return subseq__3.call(this,sc,start_test,start_key);
case 5:
return subseq__5.call(this,sc,start_test,start_key,end_test,end_key);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
subseq.cljs$core$IFn$_invoke$arity$3 = subseq__3;
subseq.cljs$core$IFn$_invoke$arity$5 = subseq__5;
return subseq;
})()
;
/**
* sc must be a sorted collection, test(s) one of <, <=, > or
* >=. Returns a reverse seq of those entries with keys ek for
* which (test (.. sc comparator (compare ek key)) 0) is true
*/
cljs.core.rsubseq = (function() {
var rsubseq = null;
var rsubseq__3 = (function (sc,test,key){
var include = cljs.core.mk_bound_fn(sc,test,key);
if(cljs.core.truth_(cljs.core.PersistentHashSet.fromArray([cljs.core._LT_,cljs.core._LT__EQ_], true).call(null,test))){
var temp__4126__auto__ = cljs.core._sorted_seq_from(sc,key,false);
if(cljs.core.truth_(temp__4126__auto__)){
var vec__30219 = temp__4126__auto__;
var e = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__30219,(0),null);
var s = vec__30219;
if(cljs.core.truth_((function (){var G__30220 = e;
return (include.cljs$core$IFn$_invoke$arity$1 ? include.cljs$core$IFn$_invoke$arity$1(G__30220) : include.call(null,G__30220));
})())){
return s;
} else {
return cljs.core.next(s);
}
} else {
return null;
}
} else {
return cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(include,cljs.core._sorted_seq(sc,false));
}
});
var rsubseq__5 = (function (sc,start_test,start_key,end_test,end_key){
var temp__4126__auto__ = cljs.core._sorted_seq_from(sc,end_key,false);
if(cljs.core.truth_(temp__4126__auto__)){
var vec__30221 = temp__4126__auto__;
var e = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__30221,(0),null);
var s = vec__30221;
return cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(cljs.core.mk_bound_fn(sc,start_test,start_key),(cljs.core.truth_(cljs.core.mk_bound_fn(sc,end_test,end_key).call(null,e))?s:cljs.core.next(s)));
} else {
return null;
}
});
rsubseq = function(sc,start_test,start_key,end_test,end_key){
switch(arguments.length){
case 3:
return rsubseq__3.call(this,sc,start_test,start_key);
case 5:
return rsubseq__5.call(this,sc,start_test,start_key,end_test,end_key);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
rsubseq.cljs$core$IFn$_invoke$arity$3 = rsubseq__3;
rsubseq.cljs$core$IFn$_invoke$arity$5 = rsubseq__5;
return rsubseq;
})()
;

/**
* @constructor
*/
cljs.core.RangeIterator = (function (i,end,step){
this.i = i;
this.end = end;
this.step = step;
})
cljs.core.RangeIterator.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
if((self__.step > (0))){
return (self__.i < self__.end);
} else {
return (self__.i > self__.end);
}
});

cljs.core.RangeIterator.prototype.next = (function (){
var self__ = this;
var _ = this;
var ret = self__.i;
self__.i = (self__.i + self__.step);

return ret;
});

cljs.core.RangeIterator.cljs$lang$type = true;

cljs.core.RangeIterator.cljs$lang$ctorStr = "cljs.core/RangeIterator";

cljs.core.RangeIterator.cljs$lang$ctorPrWriter = (function (this__24861__auto__,writer__24862__auto__,opt__24863__auto__){
return cljs.core._write(writer__24862__auto__,"cljs.core/RangeIterator");
});

cljs.core.__GT_RangeIterator = (function __GT_RangeIterator(i,end,step){
return (new cljs.core.RangeIterator(i,end,step));
});


/**
* @constructor
*/
cljs.core.Range = (function (meta,start,end,step,__hash){
this.meta = meta;
this.start = start;
this.end = end;
this.step = step;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 32375006;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.Range.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.Range.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.Range.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (rng,n){
var self__ = this;
var rng__$1 = this;
if((n < cljs.core._count(rng__$1))){
return (self__.start + (n * self__.step));
} else {
if(((self__.start > self__.end)) && ((self__.step === (0)))){
return self__.start;
} else {
throw (new Error("Index out of bounds"));
}
}
});

cljs.core.Range.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (rng,n,not_found){
var self__ = this;
var rng__$1 = this;
if((n < cljs.core._count(rng__$1))){
return (self__.start + (n * self__.step));
} else {
if(((self__.start > self__.end)) && ((self__.step === (0)))){
return self__.start;
} else {
return not_found;
}
}
});

cljs.core.Range.prototype.cljs$core$IIterable$ = true;

cljs.core.Range.prototype.cljs$core$IIterable$_iterator$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.RangeIterator(self__.start,self__.end,self__.step));
});

cljs.core.Range.prototype.cljs$core$IMeta$_meta$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
return self__.meta;
});

cljs.core.Range.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.Range(self__.meta,self__.start,self__.end,self__.step,self__.__hash));
});

cljs.core.Range.prototype.cljs$core$INext$_next$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
if((self__.step > (0))){
if(((self__.start + self__.step) < self__.end)){
return (new cljs.core.Range(self__.meta,(self__.start + self__.step),self__.end,self__.step,null));
} else {
return null;
}
} else {
if(((self__.start + self__.step) > self__.end)){
return (new cljs.core.Range(self__.meta,(self__.start + self__.step),self__.end,self__.step,null));
} else {
return null;
}
}
});

cljs.core.Range.prototype.cljs$core$ICounted$_count$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
if(cljs.core.not(cljs.core._seq(rng__$1))){
return (0);
} else {
var G__30222 = ((self__.end - self__.start) / self__.step);
return (Math.ceil.cljs$core$IFn$_invoke$arity$1 ? Math.ceil.cljs$core$IFn$_invoke$arity$1(G__30222) : Math.ceil.call(null,G__30222));
}
});

cljs.core.Range.prototype.cljs$core$IHash$_hash$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
var h__24695__auto__ = self__.__hash;
if(!((h__24695__auto__ == null))){
return h__24695__auto__;
} else {
var h__24695__auto____$1 = cljs.core.hash_ordered_coll(rng__$1);
self__.__hash = h__24695__auto____$1;

return h__24695__auto____$1;
}
});

cljs.core.Range.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (rng,other){
var self__ = this;
var rng__$1 = this;
return cljs.core.equiv_sequential(rng__$1,other);
});

cljs.core.Range.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.Range.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (rng,f){
var self__ = this;
var rng__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(rng__$1,f);
});

cljs.core.Range.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (rng,f,init){
var self__ = this;
var rng__$1 = this;
var i = self__.start;
var ret = init;
while(true){
if((((self__.step > (0)))?(i < self__.end):(i > self__.end))){
var ret__$1 = (function (){var G__30223 = ret;
var G__30224 = i;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__30223,G__30224) : f.call(null,G__30223,G__30224));
})();
if(cljs.core.reduced_QMARK_(ret__$1)){
var G__30225 = ret__$1;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__30225) : cljs.core.deref.call(null,G__30225));
} else {
var G__30226 = (i + self__.step);
var G__30227 = ret__$1;
i = G__30226;
ret = G__30227;
continue;
}
} else {
return ret;
}
break;
}
});

cljs.core.Range.prototype.cljs$core$ISeq$_first$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
if((cljs.core._seq(rng__$1) == null)){
return null;
} else {
return self__.start;
}
});

cljs.core.Range.prototype.cljs$core$ISeq$_rest$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
if(!((cljs.core._seq(rng__$1) == null))){
return (new cljs.core.Range(self__.meta,(self__.start + self__.step),self__.end,self__.step,null));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.Range.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
if((self__.step > (0))){
if((self__.start < self__.end)){
return rng__$1;
} else {
return null;
}
} else {
if((self__.start > self__.end)){
return rng__$1;
} else {
return null;
}
}
});

cljs.core.Range.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (rng,meta__$1){
var self__ = this;
var rng__$1 = this;
return (new cljs.core.Range(meta__$1,self__.start,self__.end,self__.step,self__.__hash));
});

cljs.core.Range.prototype.cljs$core$ICollection$_conj$arity$2 = (function (rng,o){
var self__ = this;
var rng__$1 = this;
return cljs.core.cons(o,rng__$1);
});

cljs.core.Range.cljs$lang$type = true;

cljs.core.Range.cljs$lang$ctorStr = "cljs.core/Range";

cljs.core.Range.cljs$lang$ctorPrWriter = (function (this__24861__auto__,writer__24862__auto__,opt__24863__auto__){
return cljs.core._write(writer__24862__auto__,"cljs.core/Range");
});

cljs.core.__GT_Range = (function __GT_Range(meta,start,end,step,__hash){
return (new cljs.core.Range(meta,start,end,step,__hash));
});

(cljs.core.Range.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__25252__auto__ = this;
return cljs.core.es6_iterator(this__25252__auto__);
}));
/**
* Returns a lazy seq of nums from start (inclusive) to end
* (exclusive), by step, where start defaults to 0, step to 1,
* and end to infinity.
*/
cljs.core.range = (function() {
var range = null;
var range__0 = (function (){
return range.cljs$core$IFn$_invoke$arity$3((0),Number.MAX_VALUE,(1));
});
var range__1 = (function (end){
return range.cljs$core$IFn$_invoke$arity$3((0),end,(1));
});
var range__2 = (function (start,end){
return range.cljs$core$IFn$_invoke$arity$3(start,end,(1));
});
var range__3 = (function (start,end,step){
return (new cljs.core.Range(null,start,end,step,null));
});
range = function(start,end,step){
switch(arguments.length){
case 0:
return range__0.call(this);
case 1:
return range__1.call(this,start);
case 2:
return range__2.call(this,start,end);
case 3:
return range__3.call(this,start,end,step);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
range.cljs$core$IFn$_invoke$arity$0 = range__0;
range.cljs$core$IFn$_invoke$arity$1 = range__1;
range.cljs$core$IFn$_invoke$arity$2 = range__2;
range.cljs$core$IFn$_invoke$arity$3 = range__3;
return range;
})()
;
/**
* Returns a lazy seq of every nth item in coll.  Returns a stateful
* transducer when no collection is provided.
*/
cljs.core.take_nth = (function() {
var take_nth = null;
var take_nth__1 = (function (n){
return (function (rf){
var ia = cljs.core.volatile_BANG_((-1));
return ((function (ia){
return (function() {
var G__30245 = null;
var G__30245__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__30245__1 = (function (result){
var G__30242 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__30242) : rf.call(null,G__30242));
});
var G__30245__2 = (function (result,input){
var i = ia.cljs$core$IVolatile$_vreset_BANG_$arity$2(null,(ia.cljs$core$IDeref$_deref$arity$1(null) + (1)));
if((cljs.core.rem(i,n) === (0))){
var G__30243 = result;
var G__30244 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__30243,G__30244) : rf.call(null,G__30243,G__30244));
} else {
return result;
}
});
G__30245 = function(result,input){
switch(arguments.length){
case 0:
return G__30245__0.call(this);
case 1:
return G__30245__1.call(this,result);
case 2:
return G__30245__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__30245.cljs$core$IFn$_invoke$arity$0 = G__30245__0;
G__30245.cljs$core$IFn$_invoke$arity$1 = G__30245__1;
G__30245.cljs$core$IFn$_invoke$arity$2 = G__30245__2;
return G__30245;
})()
;})(ia))
});
});
var take_nth__2 = (function (n,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
return cljs.core.cons(cljs.core.first(s),take_nth.cljs$core$IFn$_invoke$arity$2(n,cljs.core.drop.cljs$core$IFn$_invoke$arity$2(n,s)));
} else {
return null;
}
}),null,null));
});
take_nth = function(n,coll){
switch(arguments.length){
case 1:
return take_nth__1.call(this,n);
case 2:
return take_nth__2.call(this,n,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
take_nth.cljs$core$IFn$_invoke$arity$1 = take_nth__1;
take_nth.cljs$core$IFn$_invoke$arity$2 = take_nth__2;
return take_nth;
})()
;
/**
* Returns a vector of [(take-while pred coll) (drop-while pred coll)]
*/
cljs.core.split_with = (function split_with(pred,coll){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(pred,coll),cljs.core.drop_while.cljs$core$IFn$_invoke$arity$2(pred,coll)], null);
});
/**
* Applies f to each value in coll, splitting it each time f returns a
* new value.  Returns a lazy seq of partitions.  Returns a stateful
* transducer when no collection is provided.
*/
cljs.core.partition_by = (function() {
var partition_by = null;
var partition_by__1 = (function (f){
return (function (rf){
var a = cljs.core.array_list();
var pa = cljs.core.volatile_BANG_(new cljs.core.Keyword("cljs.core","none","cljs.core/none",926646439));
return ((function (a,pa){
return (function() {
var G__30267 = null;
var G__30267__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__30267__1 = (function (result){
var result__$1 = (cljs.core.truth_(a.isEmpty())?result:(function (){var v = cljs.core.vec(a.toArray());
a.clear();

return cljs.core.unreduced((function (){var G__30258 = result;
var G__30259 = v;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__30258,G__30259) : rf.call(null,G__30258,G__30259));
})());
})());
var G__30260 = result__$1;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__30260) : rf.call(null,G__30260));
});
var G__30267__2 = (function (result,input){
var pval = (function (){var G__30261 = pa;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__30261) : cljs.core.deref.call(null,G__30261));
})();
var val = (function (){var G__30262 = input;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__30262) : f.call(null,G__30262));
})();
cljs.core.vreset_BANG_(pa,val);

if((cljs.core.keyword_identical_QMARK_(pval,new cljs.core.Keyword("cljs.core","none","cljs.core/none",926646439))) || (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(val,pval))){
a.add(input);

return result;
} else {
var v = cljs.core.vec(a.toArray());
a.clear();

var ret = (function (){var G__30263 = result;
var G__30264 = v;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__30263,G__30264) : rf.call(null,G__30263,G__30264));
})();
if(cljs.core.reduced_QMARK_(ret)){
} else {
a.add(input);
}

return ret;
}
});
G__30267 = function(result,input){
switch(arguments.length){
case 0:
return G__30267__0.call(this);
case 1:
return G__30267__1.call(this,result);
case 2:
return G__30267__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__30267.cljs$core$IFn$_invoke$arity$0 = G__30267__0;
G__30267.cljs$core$IFn$_invoke$arity$1 = G__30267__1;
G__30267.cljs$core$IFn$_invoke$arity$2 = G__30267__2;
return G__30267;
})()
;})(a,pa))
});
});
var partition_by__2 = (function (f,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
var fst = cljs.core.first(s);
var fv = (function (){var G__30265 = fst;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__30265) : f.call(null,G__30265));
})();
var run = cljs.core.cons(fst,cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(((function (fst,fv,s,temp__4126__auto__){
return (function (p1__30246_SHARP_){
return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(fv,(function (){var G__30266 = p1__30246_SHARP_;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__30266) : f.call(null,G__30266));
})());
});})(fst,fv,s,temp__4126__auto__))
,cljs.core.next(s)));
return cljs.core.cons(run,partition_by.cljs$core$IFn$_invoke$arity$2(f,cljs.core.seq(cljs.core.drop.cljs$core$IFn$_invoke$arity$2(cljs.core.count(run),s))));
} else {
return null;
}
}),null,null));
});
partition_by = function(f,coll){
switch(arguments.length){
case 1:
return partition_by__1.call(this,f);
case 2:
return partition_by__2.call(this,f,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
partition_by.cljs$core$IFn$_invoke$arity$1 = partition_by__1;
partition_by.cljs$core$IFn$_invoke$arity$2 = partition_by__2;
return partition_by;
})()
;
/**
* Returns a map from distinct items in coll to the number of times
* they appear.
*/
cljs.core.frequencies = (function frequencies(coll){
return cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (counts,x){
return cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(counts,x,(cljs.core.get.cljs$core$IFn$_invoke$arity$3(counts,x,(0)) + (1)));
}),cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY),coll));
});
/**
* Returns a lazy seq of the intermediate values of the reduction (as
* per reduce) of coll by f, starting with init.
*/
cljs.core.reductions = (function() {
var reductions = null;
var reductions__2 = (function (f,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4124__auto__ = cljs.core.seq(coll);
if(temp__4124__auto__){
var s = temp__4124__auto__;
return reductions.cljs$core$IFn$_invoke$arity$3(f,cljs.core.first(s),cljs.core.rest(s));
} else {
return cljs.core._conj(cljs.core.List.EMPTY,(function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})());
}
}),null,null));
});
var reductions__3 = (function (f,init,coll){
return cljs.core.cons(init,(new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
return reductions.cljs$core$IFn$_invoke$arity$3(f,(function (){var G__30276 = init;
var G__30277 = cljs.core.first(s);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__30276,G__30277) : f.call(null,G__30276,G__30277));
})(),cljs.core.rest(s));
} else {
return null;
}
}),null,null)));
});
reductions = function(f,init,coll){
switch(arguments.length){
case 2:
return reductions__2.call(this,f,init);
case 3:
return reductions__3.call(this,f,init,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
reductions.cljs$core$IFn$_invoke$arity$2 = reductions__2;
reductions.cljs$core$IFn$_invoke$arity$3 = reductions__3;
return reductions;
})()
;
/**
* Takes a set of functions and returns a fn that is the juxtaposition
* of those fns.  The returned fn takes a variable number of args, and
* returns a vector containing the result of applying each fn to the
* args (left-to-right).
* ((juxt a b c) x) => [(a x) (b x) (c x)]
* @param {...*} var_args
*/
cljs.core.juxt = (function() {
var juxt = null;
var juxt__1 = (function (f){
return (function() {
var G__30372 = null;
var G__30372__0 = (function (){
return (new cljs.core.PersistentVector(null,1,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})()],null));
});
var G__30372__1 = (function (x){
return (new cljs.core.PersistentVector(null,1,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__30330 = x;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__30330) : f.call(null,G__30330));
})()],null));
});
var G__30372__2 = (function (x,y){
return (new cljs.core.PersistentVector(null,1,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__30331 = x;
var G__30332 = y;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__30331,G__30332) : f.call(null,G__30331,G__30332));
})()],null));
});
var G__30372__3 = (function (x,y,z){
return (new cljs.core.PersistentVector(null,1,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__30333 = x;
var G__30334 = y;
var G__30335 = z;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__30333,G__30334,G__30335) : f.call(null,G__30333,G__30334,G__30335));
})()],null));
});
var G__30372__4 = (function() { 
var G__30373__delegate = function (x,y,z,args){
return (new cljs.core.PersistentVector(null,1,(5),cljs.core.PersistentVector.EMPTY_NODE,[cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,x,y,z,args)],null));
};
var G__30373 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__30374__i = 0, G__30374__a = new Array(arguments.length -  3);
while (G__30374__i < G__30374__a.length) {G__30374__a[G__30374__i] = arguments[G__30374__i + 3]; ++G__30374__i;}
  args = new cljs.core.IndexedSeq(G__30374__a,0);
} 
return G__30373__delegate.call(this,x,y,z,args);};
G__30373.cljs$lang$maxFixedArity = 3;
G__30373.cljs$lang$applyTo = (function (arglist__30375){
var x = cljs.core.first(arglist__30375);
arglist__30375 = cljs.core.next(arglist__30375);
var y = cljs.core.first(arglist__30375);
arglist__30375 = cljs.core.next(arglist__30375);
var z = cljs.core.first(arglist__30375);
var args = cljs.core.rest(arglist__30375);
return G__30373__delegate(x,y,z,args);
});
G__30373.cljs$core$IFn$_invoke$arity$variadic = G__30373__delegate;
return G__30373;
})()
;
G__30372 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__30372__0.call(this);
case 1:
return G__30372__1.call(this,x);
case 2:
return G__30372__2.call(this,x,y);
case 3:
return G__30372__3.call(this,x,y,z);
default:
var G__30376 = null;
if (arguments.length > 3) {
var G__30377__i = 0, G__30377__a = new Array(arguments.length -  3);
while (G__30377__i < G__30377__a.length) {G__30377__a[G__30377__i] = arguments[G__30377__i + 3]; ++G__30377__i;}
G__30376 = new cljs.core.IndexedSeq(G__30377__a,0);
}
return G__30372__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__30376);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__30372.cljs$lang$maxFixedArity = 3;
G__30372.cljs$lang$applyTo = G__30372__4.cljs$lang$applyTo;
G__30372.cljs$core$IFn$_invoke$arity$0 = G__30372__0;
G__30372.cljs$core$IFn$_invoke$arity$1 = G__30372__1;
G__30372.cljs$core$IFn$_invoke$arity$2 = G__30372__2;
G__30372.cljs$core$IFn$_invoke$arity$3 = G__30372__3;
G__30372.cljs$core$IFn$_invoke$arity$variadic = G__30372__4.cljs$core$IFn$_invoke$arity$variadic;
return G__30372;
})()
});
var juxt__2 = (function (f,g){
return (function() {
var G__30378 = null;
var G__30378__0 = (function (){
return (new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})(),(function (){return (g.cljs$core$IFn$_invoke$arity$0 ? g.cljs$core$IFn$_invoke$arity$0() : g.call(null));
})()],null));
});
var G__30378__1 = (function (x){
return (new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__30336 = x;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__30336) : f.call(null,G__30336));
})(),(function (){var G__30337 = x;
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__30337) : g.call(null,G__30337));
})()],null));
});
var G__30378__2 = (function (x,y){
return (new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__30338 = x;
var G__30339 = y;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__30338,G__30339) : f.call(null,G__30338,G__30339));
})(),(function (){var G__30340 = x;
var G__30341 = y;
return (g.cljs$core$IFn$_invoke$arity$2 ? g.cljs$core$IFn$_invoke$arity$2(G__30340,G__30341) : g.call(null,G__30340,G__30341));
})()],null));
});
var G__30378__3 = (function (x,y,z){
return (new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__30342 = x;
var G__30343 = y;
var G__30344 = z;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__30342,G__30343,G__30344) : f.call(null,G__30342,G__30343,G__30344));
})(),(function (){var G__30345 = x;
var G__30346 = y;
var G__30347 = z;
return (g.cljs$core$IFn$_invoke$arity$3 ? g.cljs$core$IFn$_invoke$arity$3(G__30345,G__30346,G__30347) : g.call(null,G__30345,G__30346,G__30347));
})()],null));
});
var G__30378__4 = (function() { 
var G__30379__delegate = function (x,y,z,args){
return (new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,x,y,z,args),cljs.core.apply.cljs$core$IFn$_invoke$arity$5(g,x,y,z,args)],null));
};
var G__30379 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__30380__i = 0, G__30380__a = new Array(arguments.length -  3);
while (G__30380__i < G__30380__a.length) {G__30380__a[G__30380__i] = arguments[G__30380__i + 3]; ++G__30380__i;}
  args = new cljs.core.IndexedSeq(G__30380__a,0);
} 
return G__30379__delegate.call(this,x,y,z,args);};
G__30379.cljs$lang$maxFixedArity = 3;
G__30379.cljs$lang$applyTo = (function (arglist__30381){
var x = cljs.core.first(arglist__30381);
arglist__30381 = cljs.core.next(arglist__30381);
var y = cljs.core.first(arglist__30381);
arglist__30381 = cljs.core.next(arglist__30381);
var z = cljs.core.first(arglist__30381);
var args = cljs.core.rest(arglist__30381);
return G__30379__delegate(x,y,z,args);
});
G__30379.cljs$core$IFn$_invoke$arity$variadic = G__30379__delegate;
return G__30379;
})()
;
G__30378 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__30378__0.call(this);
case 1:
return G__30378__1.call(this,x);
case 2:
return G__30378__2.call(this,x,y);
case 3:
return G__30378__3.call(this,x,y,z);
default:
var G__30382 = null;
if (arguments.length > 3) {
var G__30383__i = 0, G__30383__a = new Array(arguments.length -  3);
while (G__30383__i < G__30383__a.length) {G__30383__a[G__30383__i] = arguments[G__30383__i + 3]; ++G__30383__i;}
G__30382 = new cljs.core.IndexedSeq(G__30383__a,0);
}
return G__30378__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__30382);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__30378.cljs$lang$maxFixedArity = 3;
G__30378.cljs$lang$applyTo = G__30378__4.cljs$lang$applyTo;
G__30378.cljs$core$IFn$_invoke$arity$0 = G__30378__0;
G__30378.cljs$core$IFn$_invoke$arity$1 = G__30378__1;
G__30378.cljs$core$IFn$_invoke$arity$2 = G__30378__2;
G__30378.cljs$core$IFn$_invoke$arity$3 = G__30378__3;
G__30378.cljs$core$IFn$_invoke$arity$variadic = G__30378__4.cljs$core$IFn$_invoke$arity$variadic;
return G__30378;
})()
});
var juxt__3 = (function (f,g,h){
return (function() {
var G__30384 = null;
var G__30384__0 = (function (){
return (new cljs.core.PersistentVector(null,3,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})(),(function (){return (g.cljs$core$IFn$_invoke$arity$0 ? g.cljs$core$IFn$_invoke$arity$0() : g.call(null));
})(),(function (){return (h.cljs$core$IFn$_invoke$arity$0 ? h.cljs$core$IFn$_invoke$arity$0() : h.call(null));
})()],null));
});
var G__30384__1 = (function (x){
return (new cljs.core.PersistentVector(null,3,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__30348 = x;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__30348) : f.call(null,G__30348));
})(),(function (){var G__30349 = x;
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__30349) : g.call(null,G__30349));
})(),(function (){var G__30350 = x;
return (h.cljs$core$IFn$_invoke$arity$1 ? h.cljs$core$IFn$_invoke$arity$1(G__30350) : h.call(null,G__30350));
})()],null));
});
var G__30384__2 = (function (x,y){
return (new cljs.core.PersistentVector(null,3,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__30351 = x;
var G__30352 = y;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__30351,G__30352) : f.call(null,G__30351,G__30352));
})(),(function (){var G__30353 = x;
var G__30354 = y;
return (g.cljs$core$IFn$_invoke$arity$2 ? g.cljs$core$IFn$_invoke$arity$2(G__30353,G__30354) : g.call(null,G__30353,G__30354));
})(),(function (){var G__30355 = x;
var G__30356 = y;
return (h.cljs$core$IFn$_invoke$arity$2 ? h.cljs$core$IFn$_invoke$arity$2(G__30355,G__30356) : h.call(null,G__30355,G__30356));
})()],null));
});
var G__30384__3 = (function (x,y,z){
return (new cljs.core.PersistentVector(null,3,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__30357 = x;
var G__30358 = y;
var G__30359 = z;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__30357,G__30358,G__30359) : f.call(null,G__30357,G__30358,G__30359));
})(),(function (){var G__30360 = x;
var G__30361 = y;
var G__30362 = z;
return (g.cljs$core$IFn$_invoke$arity$3 ? g.cljs$core$IFn$_invoke$arity$3(G__30360,G__30361,G__30362) : g.call(null,G__30360,G__30361,G__30362));
})(),(function (){var G__30363 = x;
var G__30364 = y;
var G__30365 = z;
return (h.cljs$core$IFn$_invoke$arity$3 ? h.cljs$core$IFn$_invoke$arity$3(G__30363,G__30364,G__30365) : h.call(null,G__30363,G__30364,G__30365));
})()],null));
});
var G__30384__4 = (function() { 
var G__30385__delegate = function (x,y,z,args){
return (new cljs.core.PersistentVector(null,3,(5),cljs.core.PersistentVector.EMPTY_NODE,[cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,x,y,z,args),cljs.core.apply.cljs$core$IFn$_invoke$arity$5(g,x,y,z,args),cljs.core.apply.cljs$core$IFn$_invoke$arity$5(h,x,y,z,args)],null));
};
var G__30385 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__30386__i = 0, G__30386__a = new Array(arguments.length -  3);
while (G__30386__i < G__30386__a.length) {G__30386__a[G__30386__i] = arguments[G__30386__i + 3]; ++G__30386__i;}
  args = new cljs.core.IndexedSeq(G__30386__a,0);
} 
return G__30385__delegate.call(this,x,y,z,args);};
G__30385.cljs$lang$maxFixedArity = 3;
G__30385.cljs$lang$applyTo = (function (arglist__30387){
var x = cljs.core.first(arglist__30387);
arglist__30387 = cljs.core.next(arglist__30387);
var y = cljs.core.first(arglist__30387);
arglist__30387 = cljs.core.next(arglist__30387);
var z = cljs.core.first(arglist__30387);
var args = cljs.core.rest(arglist__30387);
return G__30385__delegate(x,y,z,args);
});
G__30385.cljs$core$IFn$_invoke$arity$variadic = G__30385__delegate;
return G__30385;
})()
;
G__30384 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__30384__0.call(this);
case 1:
return G__30384__1.call(this,x);
case 2:
return G__30384__2.call(this,x,y);
case 3:
return G__30384__3.call(this,x,y,z);
default:
var G__30388 = null;
if (arguments.length > 3) {
var G__30389__i = 0, G__30389__a = new Array(arguments.length -  3);
while (G__30389__i < G__30389__a.length) {G__30389__a[G__30389__i] = arguments[G__30389__i + 3]; ++G__30389__i;}
G__30388 = new cljs.core.IndexedSeq(G__30389__a,0);
}
return G__30384__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__30388);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__30384.cljs$lang$maxFixedArity = 3;
G__30384.cljs$lang$applyTo = G__30384__4.cljs$lang$applyTo;
G__30384.cljs$core$IFn$_invoke$arity$0 = G__30384__0;
G__30384.cljs$core$IFn$_invoke$arity$1 = G__30384__1;
G__30384.cljs$core$IFn$_invoke$arity$2 = G__30384__2;
G__30384.cljs$core$IFn$_invoke$arity$3 = G__30384__3;
G__30384.cljs$core$IFn$_invoke$arity$variadic = G__30384__4.cljs$core$IFn$_invoke$arity$variadic;
return G__30384;
})()
});
var juxt__4 = (function() { 
var G__30390__delegate = function (f,g,h,fs){
var fs__$1 = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(f,g,h,fs);
return ((function (fs__$1){
return (function() {
var G__30391 = null;
var G__30391__0 = (function (){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (fs__$1){
return (function (p1__30278_SHARP_,p2__30279_SHARP_){
return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__30278_SHARP_,(function (){return (p2__30279_SHARP_.cljs$core$IFn$_invoke$arity$0 ? p2__30279_SHARP_.cljs$core$IFn$_invoke$arity$0() : p2__30279_SHARP_.call(null));
})());
});})(fs__$1))
,cljs.core.PersistentVector.EMPTY,fs__$1);
});
var G__30391__1 = (function (x){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (fs__$1){
return (function (p1__30280_SHARP_,p2__30281_SHARP_){
return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__30280_SHARP_,(function (){var G__30366 = x;
return (p2__30281_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p2__30281_SHARP_.cljs$core$IFn$_invoke$arity$1(G__30366) : p2__30281_SHARP_.call(null,G__30366));
})());
});})(fs__$1))
,cljs.core.PersistentVector.EMPTY,fs__$1);
});
var G__30391__2 = (function (x,y){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (fs__$1){
return (function (p1__30282_SHARP_,p2__30283_SHARP_){
return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__30282_SHARP_,(function (){var G__30367 = x;
var G__30368 = y;
return (p2__30283_SHARP_.cljs$core$IFn$_invoke$arity$2 ? p2__30283_SHARP_.cljs$core$IFn$_invoke$arity$2(G__30367,G__30368) : p2__30283_SHARP_.call(null,G__30367,G__30368));
})());
});})(fs__$1))
,cljs.core.PersistentVector.EMPTY,fs__$1);
});
var G__30391__3 = (function (x,y,z){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (fs__$1){
return (function (p1__30284_SHARP_,p2__30285_SHARP_){
return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__30284_SHARP_,(function (){var G__30369 = x;
var G__30370 = y;
var G__30371 = z;
return (p2__30285_SHARP_.cljs$core$IFn$_invoke$arity$3 ? p2__30285_SHARP_.cljs$core$IFn$_invoke$arity$3(G__30369,G__30370,G__30371) : p2__30285_SHARP_.call(null,G__30369,G__30370,G__30371));
})());
});})(fs__$1))
,cljs.core.PersistentVector.EMPTY,fs__$1);
});
var G__30391__4 = (function() { 
var G__30392__delegate = function (x,y,z,args){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (fs__$1){
return (function (p1__30286_SHARP_,p2__30287_SHARP_){
return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__30286_SHARP_,cljs.core.apply.cljs$core$IFn$_invoke$arity$5(p2__30287_SHARP_,x,y,z,args));
});})(fs__$1))
,cljs.core.PersistentVector.EMPTY,fs__$1);
};
var G__30392 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__30393__i = 0, G__30393__a = new Array(arguments.length -  3);
while (G__30393__i < G__30393__a.length) {G__30393__a[G__30393__i] = arguments[G__30393__i + 3]; ++G__30393__i;}
  args = new cljs.core.IndexedSeq(G__30393__a,0);
} 
return G__30392__delegate.call(this,x,y,z,args);};
G__30392.cljs$lang$maxFixedArity = 3;
G__30392.cljs$lang$applyTo = (function (arglist__30394){
var x = cljs.core.first(arglist__30394);
arglist__30394 = cljs.core.next(arglist__30394);
var y = cljs.core.first(arglist__30394);
arglist__30394 = cljs.core.next(arglist__30394);
var z = cljs.core.first(arglist__30394);
var args = cljs.core.rest(arglist__30394);
return G__30392__delegate(x,y,z,args);
});
G__30392.cljs$core$IFn$_invoke$arity$variadic = G__30392__delegate;
return G__30392;
})()
;
G__30391 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__30391__0.call(this);
case 1:
return G__30391__1.call(this,x);
case 2:
return G__30391__2.call(this,x,y);
case 3:
return G__30391__3.call(this,x,y,z);
default:
var G__30395 = null;
if (arguments.length > 3) {
var G__30396__i = 0, G__30396__a = new Array(arguments.length -  3);
while (G__30396__i < G__30396__a.length) {G__30396__a[G__30396__i] = arguments[G__30396__i + 3]; ++G__30396__i;}
G__30395 = new cljs.core.IndexedSeq(G__30396__a,0);
}
return G__30391__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__30395);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__30391.cljs$lang$maxFixedArity = 3;
G__30391.cljs$lang$applyTo = G__30391__4.cljs$lang$applyTo;
G__30391.cljs$core$IFn$_invoke$arity$0 = G__30391__0;
G__30391.cljs$core$IFn$_invoke$arity$1 = G__30391__1;
G__30391.cljs$core$IFn$_invoke$arity$2 = G__30391__2;
G__30391.cljs$core$IFn$_invoke$arity$3 = G__30391__3;
G__30391.cljs$core$IFn$_invoke$arity$variadic = G__30391__4.cljs$core$IFn$_invoke$arity$variadic;
return G__30391;
})()
;})(fs__$1))
};
var G__30390 = function (f,g,h,var_args){
var fs = null;
if (arguments.length > 3) {
var G__30397__i = 0, G__30397__a = new Array(arguments.length -  3);
while (G__30397__i < G__30397__a.length) {G__30397__a[G__30397__i] = arguments[G__30397__i + 3]; ++G__30397__i;}
  fs = new cljs.core.IndexedSeq(G__30397__a,0);
} 
return G__30390__delegate.call(this,f,g,h,fs);};
G__30390.cljs$lang$maxFixedArity = 3;
G__30390.cljs$lang$applyTo = (function (arglist__30398){
var f = cljs.core.first(arglist__30398);
arglist__30398 = cljs.core.next(arglist__30398);
var g = cljs.core.first(arglist__30398);
arglist__30398 = cljs.core.next(arglist__30398);
var h = cljs.core.first(arglist__30398);
var fs = cljs.core.rest(arglist__30398);
return G__30390__delegate(f,g,h,fs);
});
G__30390.cljs$core$IFn$_invoke$arity$variadic = G__30390__delegate;
return G__30390;
})()
;
juxt = function(f,g,h,var_args){
var fs = var_args;
switch(arguments.length){
case 1:
return juxt__1.call(this,f);
case 2:
return juxt__2.call(this,f,g);
case 3:
return juxt__3.call(this,f,g,h);
default:
var G__30399 = null;
if (arguments.length > 3) {
var G__30400__i = 0, G__30400__a = new Array(arguments.length -  3);
while (G__30400__i < G__30400__a.length) {G__30400__a[G__30400__i] = arguments[G__30400__i + 3]; ++G__30400__i;}
G__30399 = new cljs.core.IndexedSeq(G__30400__a,0);
}
return juxt__4.cljs$core$IFn$_invoke$arity$variadic(f,g,h, G__30399);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
juxt.cljs$lang$maxFixedArity = 3;
juxt.cljs$lang$applyTo = juxt__4.cljs$lang$applyTo;
juxt.cljs$core$IFn$_invoke$arity$1 = juxt__1;
juxt.cljs$core$IFn$_invoke$arity$2 = juxt__2;
juxt.cljs$core$IFn$_invoke$arity$3 = juxt__3;
juxt.cljs$core$IFn$_invoke$arity$variadic = juxt__4.cljs$core$IFn$_invoke$arity$variadic;
return juxt;
})()
;
/**
* When lazy sequences are produced via functions that have side
* effects, any effects other than those needed to produce the first
* element in the seq do not occur until the seq is consumed. dorun can
* be used to force any effects. Walks through the successive nexts of
* the seq, does not retain the head and returns nil.
*/
cljs.core.dorun = (function() {
var dorun = null;
var dorun__1 = (function (coll){
while(true){
if(cljs.core.seq(coll)){
var G__30401 = cljs.core.next(coll);
coll = G__30401;
continue;
} else {
return null;
}
break;
}
});
var dorun__2 = (function (n,coll){
while(true){
if((cljs.core.seq(coll)) && ((n > (0)))){
var G__30402 = (n - (1));
var G__30403 = cljs.core.next(coll);
n = G__30402;
coll = G__30403;
continue;
} else {
return null;
}
break;
}
});
dorun = function(n,coll){
switch(arguments.length){
case 1:
return dorun__1.call(this,n);
case 2:
return dorun__2.call(this,n,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
dorun.cljs$core$IFn$_invoke$arity$1 = dorun__1;
dorun.cljs$core$IFn$_invoke$arity$2 = dorun__2;
return dorun;
})()
;
/**
* When lazy sequences are produced via functions that have side
* effects, any effects other than those needed to produce the first
* element in the seq do not occur until the seq is consumed. doall can
* be used to force any effects. Walks through the successive nexts of
* the seq, retains the head and returns it, thus causing the entire
* seq to reside in memory at one time.
*/
cljs.core.doall = (function() {
var doall = null;
var doall__1 = (function (coll){
cljs.core.dorun.cljs$core$IFn$_invoke$arity$1(coll);

return coll;
});
var doall__2 = (function (n,coll){
cljs.core.dorun.cljs$core$IFn$_invoke$arity$2(n,coll);

return coll;
});
doall = function(n,coll){
switch(arguments.length){
case 1:
return doall__1.call(this,n);
case 2:
return doall__2.call(this,n,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
doall.cljs$core$IFn$_invoke$arity$1 = doall__1;
doall.cljs$core$IFn$_invoke$arity$2 = doall__2;
return doall;
})()
;
cljs.core.regexp_QMARK_ = (function regexp_QMARK_(o){
return (o instanceof RegExp);
});
/**
* Returns the result of (re-find re s) if re fully matches s.
*/
cljs.core.re_matches = (function re_matches(re,s){
if(typeof s === 'string'){
var matches = re.exec(s);
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.first(matches),s)){
if((cljs.core.count(matches) === (1))){
return cljs.core.first(matches);
} else {
return cljs.core.vec(matches);
}
} else {
return null;
}
} else {
throw (new TypeError("re-matches must match against a string."));
}
});
/**
* Returns the first regex match, if any, of s to re, using
* re.exec(s). Returns a vector, containing first the matching
* substring, then any capturing groups if the regular expression contains
* capturing groups.
*/
cljs.core.re_find = (function re_find(re,s){
if(typeof s === 'string'){
var matches = re.exec(s);
if((matches == null)){
return null;
} else {
if((cljs.core.count(matches) === (1))){
return cljs.core.first(matches);
} else {
return cljs.core.vec(matches);
}
}
} else {
throw (new TypeError("re-find must match against a string."));
}
});
/**
* Returns a lazy sequence of successive matches of re in s.
*/
cljs.core.re_seq = (function re_seq(re,s){
var match_data = cljs.core.re_find(re,s);
var match_idx = s.search(re);
var match_str = ((cljs.core.coll_QMARK_(match_data))?cljs.core.first(match_data):match_data);
var post_match = cljs.core.subs.cljs$core$IFn$_invoke$arity$2(s,(match_idx + cljs.core.count(match_str)));
if(cljs.core.truth_(match_data)){
return (new cljs.core.LazySeq(null,((function (match_data,match_idx,match_str,post_match){
return (function (){
return cljs.core.cons(match_data,((cljs.core.seq(post_match))?re_seq(re,post_match):null));
});})(match_data,match_idx,match_str,post_match))
,null,null));
} else {
return null;
}
});
/**
* Returns an instance of RegExp which has compiled the provided string.
*/
cljs.core.re_pattern = (function re_pattern(s){
if((s instanceof RegExp)){
return s;
} else {
var vec__30407 = cljs.core.re_find(/^(?:\(\?([idmsux]*)\))?(.*)/,s);
var _ = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__30407,(0),null);
var flags = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__30407,(1),null);
var pattern = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__30407,(2),null);
return (new RegExp(pattern,flags));
}
});
cljs.core.pr_sequential_writer = (function pr_sequential_writer(writer,print_one,begin,sep,end,opts,coll){
var _STAR_print_level_STAR_30415 = cljs.core._STAR_print_level_STAR_;
try{cljs.core._STAR_print_level_STAR_ = (((cljs.core._STAR_print_level_STAR_ == null))?null:(cljs.core._STAR_print_level_STAR_ - (1)));

if((!((cljs.core._STAR_print_level_STAR_ == null))) && ((cljs.core._STAR_print_level_STAR_ < (0)))){
return cljs.core._write(writer,"#");
} else {
cljs.core._write(writer,begin);

if(cljs.core.seq(coll)){
var G__30416_30422 = cljs.core.first(coll);
var G__30417_30423 = writer;
var G__30418_30424 = opts;
(print_one.cljs$core$IFn$_invoke$arity$3 ? print_one.cljs$core$IFn$_invoke$arity$3(G__30416_30422,G__30417_30423,G__30418_30424) : print_one.call(null,G__30416_30422,G__30417_30423,G__30418_30424));
} else {
}

var coll_30425__$1 = cljs.core.next(coll);
var n_30426 = (new cljs.core.Keyword(null,"print-length","print-length",1931866356).cljs$core$IFn$_invoke$arity$1(opts) - (1));
while(true){
if((coll_30425__$1) && (((n_30426 == null)) || (!((n_30426 === (0)))))){
cljs.core._write(writer,sep);

var G__30419_30427 = cljs.core.first(coll_30425__$1);
var G__30420_30428 = writer;
var G__30421_30429 = opts;
(print_one.cljs$core$IFn$_invoke$arity$3 ? print_one.cljs$core$IFn$_invoke$arity$3(G__30419_30427,G__30420_30428,G__30421_30429) : print_one.call(null,G__30419_30427,G__30420_30428,G__30421_30429));

var G__30430 = cljs.core.next(coll_30425__$1);
var G__30431 = (n_30426 - (1));
coll_30425__$1 = G__30430;
n_30426 = G__30431;
continue;
} else {
if((cljs.core.seq(coll_30425__$1)) && ((n_30426 === (0)))){
cljs.core._write(writer,sep);

cljs.core._write(writer,"...");
} else {
}
}
break;
}

return cljs.core._write(writer,end);
}
}finally {cljs.core._STAR_print_level_STAR_ = _STAR_print_level_STAR_30415;
}});
/**
* @param {...*} var_args
*/
cljs.core.write_all = (function() { 
var write_all__delegate = function (writer,ss){
var seq__30436 = cljs.core.seq(ss);
var chunk__30437 = null;
var count__30438 = (0);
var i__30439 = (0);
while(true){
if((i__30439 < count__30438)){
var s = chunk__30437.cljs$core$IIndexed$_nth$arity$2(null,i__30439);
cljs.core._write(writer,s);

var G__30440 = seq__30436;
var G__30441 = chunk__30437;
var G__30442 = count__30438;
var G__30443 = (i__30439 + (1));
seq__30436 = G__30440;
chunk__30437 = G__30441;
count__30438 = G__30442;
i__30439 = G__30443;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__30436);
if(temp__4126__auto__){
var seq__30436__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__30436__$1)){
var c__25061__auto__ = cljs.core.chunk_first(seq__30436__$1);
var G__30444 = cljs.core.chunk_rest(seq__30436__$1);
var G__30445 = c__25061__auto__;
var G__30446 = cljs.core.count(c__25061__auto__);
var G__30447 = (0);
seq__30436 = G__30444;
chunk__30437 = G__30445;
count__30438 = G__30446;
i__30439 = G__30447;
continue;
} else {
var s = cljs.core.first(seq__30436__$1);
cljs.core._write(writer,s);

var G__30448 = cljs.core.next(seq__30436__$1);
var G__30449 = null;
var G__30450 = (0);
var G__30451 = (0);
seq__30436 = G__30448;
chunk__30437 = G__30449;
count__30438 = G__30450;
i__30439 = G__30451;
continue;
}
} else {
return null;
}
}
break;
}
};
var write_all = function (writer,var_args){
var ss = null;
if (arguments.length > 1) {
var G__30452__i = 0, G__30452__a = new Array(arguments.length -  1);
while (G__30452__i < G__30452__a.length) {G__30452__a[G__30452__i] = arguments[G__30452__i + 1]; ++G__30452__i;}
  ss = new cljs.core.IndexedSeq(G__30452__a,0);
} 
return write_all__delegate.call(this,writer,ss);};
write_all.cljs$lang$maxFixedArity = 1;
write_all.cljs$lang$applyTo = (function (arglist__30453){
var writer = cljs.core.first(arglist__30453);
var ss = cljs.core.rest(arglist__30453);
return write_all__delegate(writer,ss);
});
write_all.cljs$core$IFn$_invoke$arity$variadic = write_all__delegate;
return write_all;
})()
;
cljs.core.string_print = (function string_print(x){
(cljs.core._STAR_print_fn_STAR_.cljs$core$IFn$_invoke$arity$1 ? cljs.core._STAR_print_fn_STAR_.cljs$core$IFn$_invoke$arity$1(x) : cljs.core._STAR_print_fn_STAR_.call(null,x));

return null;
});
cljs.core.flush = (function flush(){
return null;
});
cljs.core.char_escapes = (function (){var obj30455 = {"\"":"\\\"","\\":"\\\\","\b":"\\b","\f":"\\f","\n":"\\n","\r":"\\r","\t":"\\t"};
return obj30455;
})();
cljs.core.quote_string = (function quote_string(s){
return [cljs.core.str("\""),cljs.core.str(s.replace((function (){var G__30458 = "[\\\\\"\b\f\n\r\t]";
var G__30459 = "g";
return RegExp(G__30458,G__30459);
})(),(function (match){
return (cljs.core.char_escapes[match]);
}))),cljs.core.str("\"")].join('');
});
/**
* Prefer this to pr-seq, because it makes the printing function
* configurable, allowing efficient implementations such as appending
* to a StringBuffer.
*/
cljs.core.pr_writer = (function pr_writer(obj,writer,opts){
if((obj == null)){
return cljs.core._write(writer,"nil");
} else {
if((void 0 === obj)){
return cljs.core._write(writer,"#<undefined>");
} else {
if(cljs.core.truth_((function (){var and__24262__auto__ = cljs.core.get.cljs$core$IFn$_invoke$arity$2(opts,new cljs.core.Keyword(null,"meta","meta",1499536964));
if(cljs.core.truth_(and__24262__auto__)){
var and__24262__auto____$1 = (function (){var G__30473 = obj;
if(G__30473){
var bit__24955__auto__ = (G__30473.cljs$lang$protocol_mask$partition0$ & (131072));
if((bit__24955__auto__) || (G__30473.cljs$core$IMeta$)){
return true;
} else {
if((!G__30473.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IMeta,G__30473);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IMeta,G__30473);
}
})();
if(and__24262__auto____$1){
return cljs.core.meta(obj);
} else {
return and__24262__auto____$1;
}
} else {
return and__24262__auto__;
}
})())){
cljs.core._write(writer,"^");

pr_writer(cljs.core.meta(obj),writer,opts);

cljs.core._write(writer," ");
} else {
}

if((obj == null)){
return cljs.core._write(writer,"nil");
} else {
if(obj.cljs$lang$type){
return obj.cljs$lang$ctorPrWriter(obj,writer,opts);
} else {
if((function (){var G__30474 = obj;
if(G__30474){
var bit__24948__auto__ = (G__30474.cljs$lang$protocol_mask$partition0$ & (2147483648));
if((bit__24948__auto__) || (G__30474.cljs$core$IPrintWithWriter$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return obj.cljs$core$IPrintWithWriter$_pr_writer$arity$3(null,writer,opts);
} else {
if(((cljs.core.type(obj) === Boolean)) || (typeof obj === 'number')){
return cljs.core._write(writer,[cljs.core.str(obj)].join(''));
} else {
if(cljs.core.object_QMARK_(obj)){
cljs.core._write(writer,"#js ");

var G__30475 = cljs.core.map.cljs$core$IFn$_invoke$arity$2((function (k){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.keyword.cljs$core$IFn$_invoke$arity$1(k),(obj[k])], null);
}),cljs.core.js_keys(obj));
var G__30476 = pr_writer;
var G__30477 = writer;
var G__30478 = opts;
return (cljs.core.print_map.cljs$core$IFn$_invoke$arity$4 ? cljs.core.print_map.cljs$core$IFn$_invoke$arity$4(G__30475,G__30476,G__30477,G__30478) : cljs.core.print_map.call(null,G__30475,G__30476,G__30477,G__30478));
} else {
if(obj instanceof Array){
return cljs.core.pr_sequential_writer(writer,pr_writer,"#js ["," ","]",opts,obj);
} else {
if(cljs.core.truth_((function (){var G__30479 = obj;
return goog.isString(G__30479);
})())){
if(cljs.core.truth_(new cljs.core.Keyword(null,"readably","readably",1129599760).cljs$core$IFn$_invoke$arity$1(opts))){
return cljs.core._write(writer,cljs.core.quote_string(obj));
} else {
return cljs.core._write(writer,obj);
}
} else {
if(cljs.core.fn_QMARK_(obj)){
return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(writer,cljs.core.array_seq(["#<",[cljs.core.str(obj)].join(''),">"], 0));
} else {
if((obj instanceof Date)){
var normalize = (function (n,len){
var ns = [cljs.core.str(n)].join('');
while(true){
if((cljs.core.count(ns) < len)){
var G__30481 = [cljs.core.str("0"),cljs.core.str(ns)].join('');
ns = G__30481;
continue;
} else {
return ns;
}
break;
}
});
return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(writer,cljs.core.array_seq(["#inst \"",[cljs.core.str(obj.getUTCFullYear())].join(''),"-",normalize((obj.getUTCMonth() + (1)),(2)),"-",normalize(obj.getUTCDate(),(2)),"T",normalize(obj.getUTCHours(),(2)),":",normalize(obj.getUTCMinutes(),(2)),":",normalize(obj.getUTCSeconds(),(2)),".",normalize(obj.getUTCMilliseconds(),(3)),"-","00:00\""], 0));
} else {
if(cljs.core.regexp_QMARK_(obj)){
return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(writer,cljs.core.array_seq(["#\"",obj.source,"\""], 0));
} else {
if((function (){var G__30480 = obj;
if(G__30480){
var bit__24955__auto__ = (G__30480.cljs$lang$protocol_mask$partition0$ & (2147483648));
if((bit__24955__auto__) || (G__30480.cljs$core$IPrintWithWriter$)){
return true;
} else {
if((!G__30480.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IPrintWithWriter,G__30480);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IPrintWithWriter,G__30480);
}
})()){
return cljs.core._pr_writer(obj,writer,opts);
} else {
return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(writer,cljs.core.array_seq(["#<",[cljs.core.str(obj)].join(''),">"], 0));

}
}
}
}
}
}
}
}
}
}
}

}
}
});
cljs.core.pr_seq_writer = (function pr_seq_writer(objs,writer,opts){
cljs.core.pr_writer(cljs.core.first(objs),writer,opts);

var seq__30486 = cljs.core.seq(cljs.core.next(objs));
var chunk__30487 = null;
var count__30488 = (0);
var i__30489 = (0);
while(true){
if((i__30489 < count__30488)){
var obj = chunk__30487.cljs$core$IIndexed$_nth$arity$2(null,i__30489);
cljs.core._write(writer," ");

cljs.core.pr_writer(obj,writer,opts);

var G__30490 = seq__30486;
var G__30491 = chunk__30487;
var G__30492 = count__30488;
var G__30493 = (i__30489 + (1));
seq__30486 = G__30490;
chunk__30487 = G__30491;
count__30488 = G__30492;
i__30489 = G__30493;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__30486);
if(temp__4126__auto__){
var seq__30486__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__30486__$1)){
var c__25061__auto__ = cljs.core.chunk_first(seq__30486__$1);
var G__30494 = cljs.core.chunk_rest(seq__30486__$1);
var G__30495 = c__25061__auto__;
var G__30496 = cljs.core.count(c__25061__auto__);
var G__30497 = (0);
seq__30486 = G__30494;
chunk__30487 = G__30495;
count__30488 = G__30496;
i__30489 = G__30497;
continue;
} else {
var obj = cljs.core.first(seq__30486__$1);
cljs.core._write(writer," ");

cljs.core.pr_writer(obj,writer,opts);

var G__30498 = cljs.core.next(seq__30486__$1);
var G__30499 = null;
var G__30500 = (0);
var G__30501 = (0);
seq__30486 = G__30498;
chunk__30487 = G__30499;
count__30488 = G__30500;
i__30489 = G__30501;
continue;
}
} else {
return null;
}
}
break;
}
});
cljs.core.pr_sb_with_opts = (function pr_sb_with_opts(objs,opts){
var sb = (new goog.string.StringBuffer());
var writer = (new cljs.core.StringBufferWriter(sb));
cljs.core.pr_seq_writer(objs,writer,opts);

writer.cljs$core$IWriter$_flush$arity$1(null);

return sb;
});
/**
* Prints a sequence of objects to a string, observing all the
* options given in opts
*/
cljs.core.pr_str_with_opts = (function pr_str_with_opts(objs,opts){
if(cljs.core.empty_QMARK_(objs)){
return "";
} else {
return [cljs.core.str(cljs.core.pr_sb_with_opts(objs,opts))].join('');
}
});
/**
* Same as pr-str-with-opts followed by (newline)
*/
cljs.core.prn_str_with_opts = (function prn_str_with_opts(objs,opts){
if(cljs.core.empty_QMARK_(objs)){
return "\n";
} else {
var sb = cljs.core.pr_sb_with_opts(objs,opts);
sb.append("\n");

return [cljs.core.str(sb)].join('');
}
});
/**
* Prints a sequence of objects using string-print, observing all
* the options given in opts
*/
cljs.core.pr_with_opts = (function pr_with_opts(objs,opts){
return cljs.core.string_print(cljs.core.pr_str_with_opts(objs,opts));
});
cljs.core.newline = (function newline(opts){
cljs.core.string_print("\n");

if(cljs.core.truth_(cljs.core.get.cljs$core$IFn$_invoke$arity$2(opts,new cljs.core.Keyword(null,"flush-on-newline","flush-on-newline",-151457939)))){
return cljs.core.flush();
} else {
return null;
}
});
/**
* pr to a string, returning it. Fundamental entrypoint to IPrintWithWriter.
* @param {...*} var_args
*/
cljs.core.pr_str = (function() { 
var pr_str__delegate = function (objs){
return cljs.core.pr_str_with_opts(objs,cljs.core.pr_opts());
};
var pr_str = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__30502__i = 0, G__30502__a = new Array(arguments.length -  0);
while (G__30502__i < G__30502__a.length) {G__30502__a[G__30502__i] = arguments[G__30502__i + 0]; ++G__30502__i;}
  objs = new cljs.core.IndexedSeq(G__30502__a,0);
} 
return pr_str__delegate.call(this,objs);};
pr_str.cljs$lang$maxFixedArity = 0;
pr_str.cljs$lang$applyTo = (function (arglist__30503){
var objs = cljs.core.seq(arglist__30503);
return pr_str__delegate(objs);
});
pr_str.cljs$core$IFn$_invoke$arity$variadic = pr_str__delegate;
return pr_str;
})()
;
/**
* Same as pr-str followed by (newline)
* @param {...*} var_args
*/
cljs.core.prn_str = (function() { 
var prn_str__delegate = function (objs){
return cljs.core.prn_str_with_opts(objs,cljs.core.pr_opts());
};
var prn_str = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__30504__i = 0, G__30504__a = new Array(arguments.length -  0);
while (G__30504__i < G__30504__a.length) {G__30504__a[G__30504__i] = arguments[G__30504__i + 0]; ++G__30504__i;}
  objs = new cljs.core.IndexedSeq(G__30504__a,0);
} 
return prn_str__delegate.call(this,objs);};
prn_str.cljs$lang$maxFixedArity = 0;
prn_str.cljs$lang$applyTo = (function (arglist__30505){
var objs = cljs.core.seq(arglist__30505);
return prn_str__delegate(objs);
});
prn_str.cljs$core$IFn$_invoke$arity$variadic = prn_str__delegate;
return prn_str;
})()
;
/**
* Prints the object(s) using string-print.  Prints the
* object(s), separated by spaces if there is more than one.
* By default, pr and prn print in a way that objects can be
* read by the reader
* @param {...*} var_args
*/
cljs.core.pr = (function() { 
var pr__delegate = function (objs){
return cljs.core.pr_with_opts(objs,cljs.core.pr_opts());
};
var pr = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__30506__i = 0, G__30506__a = new Array(arguments.length -  0);
while (G__30506__i < G__30506__a.length) {G__30506__a[G__30506__i] = arguments[G__30506__i + 0]; ++G__30506__i;}
  objs = new cljs.core.IndexedSeq(G__30506__a,0);
} 
return pr__delegate.call(this,objs);};
pr.cljs$lang$maxFixedArity = 0;
pr.cljs$lang$applyTo = (function (arglist__30507){
var objs = cljs.core.seq(arglist__30507);
return pr__delegate(objs);
});
pr.cljs$core$IFn$_invoke$arity$variadic = pr__delegate;
return pr;
})()
;
/**
* Prints the object(s) using string-print.
* print and println produce output for human consumption.
* @param {...*} var_args
*/
cljs.core.print = (function() { 
var cljs_core_print__delegate = function (objs){
return cljs.core.pr_with_opts(objs,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.pr_opts(),new cljs.core.Keyword(null,"readably","readably",1129599760),false));
};
var cljs_core_print = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__30508__i = 0, G__30508__a = new Array(arguments.length -  0);
while (G__30508__i < G__30508__a.length) {G__30508__a[G__30508__i] = arguments[G__30508__i + 0]; ++G__30508__i;}
  objs = new cljs.core.IndexedSeq(G__30508__a,0);
} 
return cljs_core_print__delegate.call(this,objs);};
cljs_core_print.cljs$lang$maxFixedArity = 0;
cljs_core_print.cljs$lang$applyTo = (function (arglist__30509){
var objs = cljs.core.seq(arglist__30509);
return cljs_core_print__delegate(objs);
});
cljs_core_print.cljs$core$IFn$_invoke$arity$variadic = cljs_core_print__delegate;
return cljs_core_print;
})()
;
/**
* print to a string, returning it
* @param {...*} var_args
*/
cljs.core.print_str = (function() { 
var print_str__delegate = function (objs){
return cljs.core.pr_str_with_opts(objs,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.pr_opts(),new cljs.core.Keyword(null,"readably","readably",1129599760),false));
};
var print_str = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__30510__i = 0, G__30510__a = new Array(arguments.length -  0);
while (G__30510__i < G__30510__a.length) {G__30510__a[G__30510__i] = arguments[G__30510__i + 0]; ++G__30510__i;}
  objs = new cljs.core.IndexedSeq(G__30510__a,0);
} 
return print_str__delegate.call(this,objs);};
print_str.cljs$lang$maxFixedArity = 0;
print_str.cljs$lang$applyTo = (function (arglist__30511){
var objs = cljs.core.seq(arglist__30511);
return print_str__delegate(objs);
});
print_str.cljs$core$IFn$_invoke$arity$variadic = print_str__delegate;
return print_str;
})()
;
/**
* Same as print followed by (newline)
* @param {...*} var_args
*/
cljs.core.println = (function() { 
var println__delegate = function (objs){
cljs.core.pr_with_opts(objs,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.pr_opts(),new cljs.core.Keyword(null,"readably","readably",1129599760),false));

if(cljs.core.truth_(cljs.core._STAR_print_newline_STAR_)){
return cljs.core.newline(cljs.core.pr_opts());
} else {
return null;
}
};
var println = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__30512__i = 0, G__30512__a = new Array(arguments.length -  0);
while (G__30512__i < G__30512__a.length) {G__30512__a[G__30512__i] = arguments[G__30512__i + 0]; ++G__30512__i;}
  objs = new cljs.core.IndexedSeq(G__30512__a,0);
} 
return println__delegate.call(this,objs);};
println.cljs$lang$maxFixedArity = 0;
println.cljs$lang$applyTo = (function (arglist__30513){
var objs = cljs.core.seq(arglist__30513);
return println__delegate(objs);
});
println.cljs$core$IFn$_invoke$arity$variadic = println__delegate;
return println;
})()
;
/**
* println to a string, returning it
* @param {...*} var_args
*/
cljs.core.println_str = (function() { 
var println_str__delegate = function (objs){
return cljs.core.prn_str_with_opts(objs,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.pr_opts(),new cljs.core.Keyword(null,"readably","readably",1129599760),false));
};
var println_str = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__30514__i = 0, G__30514__a = new Array(arguments.length -  0);
while (G__30514__i < G__30514__a.length) {G__30514__a[G__30514__i] = arguments[G__30514__i + 0]; ++G__30514__i;}
  objs = new cljs.core.IndexedSeq(G__30514__a,0);
} 
return println_str__delegate.call(this,objs);};
println_str.cljs$lang$maxFixedArity = 0;
println_str.cljs$lang$applyTo = (function (arglist__30515){
var objs = cljs.core.seq(arglist__30515);
return println_str__delegate(objs);
});
println_str.cljs$core$IFn$_invoke$arity$variadic = println_str__delegate;
return println_str;
})()
;
/**
* Same as pr followed by (newline).
* @param {...*} var_args
*/
cljs.core.prn = (function() { 
var prn__delegate = function (objs){
cljs.core.pr_with_opts(objs,cljs.core.pr_opts());

if(cljs.core.truth_(cljs.core._STAR_print_newline_STAR_)){
return cljs.core.newline(cljs.core.pr_opts());
} else {
return null;
}
};
var prn = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__30516__i = 0, G__30516__a = new Array(arguments.length -  0);
while (G__30516__i < G__30516__a.length) {G__30516__a[G__30516__i] = arguments[G__30516__i + 0]; ++G__30516__i;}
  objs = new cljs.core.IndexedSeq(G__30516__a,0);
} 
return prn__delegate.call(this,objs);};
prn.cljs$lang$maxFixedArity = 0;
prn.cljs$lang$applyTo = (function (arglist__30517){
var objs = cljs.core.seq(arglist__30517);
return prn__delegate(objs);
});
prn.cljs$core$IFn$_invoke$arity$variadic = prn__delegate;
return prn;
})()
;
cljs.core.print_map = (function print_map(m,print_one,writer,opts){
return cljs.core.pr_sequential_writer(writer,(function (e,w,opts__$1){
var G__30524_30530 = cljs.core.key(e);
var G__30525_30531 = w;
var G__30526_30532 = opts__$1;
(print_one.cljs$core$IFn$_invoke$arity$3 ? print_one.cljs$core$IFn$_invoke$arity$3(G__30524_30530,G__30525_30531,G__30526_30532) : print_one.call(null,G__30524_30530,G__30525_30531,G__30526_30532));

cljs.core._write(w," ");

var G__30527 = cljs.core.val(e);
var G__30528 = w;
var G__30529 = opts__$1;
return (print_one.cljs$core$IFn$_invoke$arity$3 ? print_one.cljs$core$IFn$_invoke$arity$3(G__30527,G__30528,G__30529) : print_one.call(null,G__30527,G__30528,G__30529));
}),"{",", ","}",opts,cljs.core.seq(m));
});
cljs.core.Volatile.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.Volatile.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (a,writer,opts){
var a__$1 = this;
cljs.core._write(writer,"#<Volatile: ");

cljs.core.pr_writer(a__$1.state,writer,opts);

return cljs.core._write(writer,">");
});

cljs.core.Var.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.Var.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (a,writer,opts){
var a__$1 = this;
cljs.core._write(writer,"#'");

return cljs.core.pr_writer(a__$1.sym,writer,opts);
});

cljs.core.IndexedSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.IndexedSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.LazySeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.LazySeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.NodeSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.NodeSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.BlackNode.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.BlackNode.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"["," ","]",opts,coll__$1);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.ES6IteratorSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ES6IteratorSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentTreeSet.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"#{"," ","}",opts,coll__$1);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ChunkedSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.ObjMap.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ObjMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.print_map(coll__$1,cljs.core.pr_writer,writer,opts);
});

cljs.core.Cons.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.Cons.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.RSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.RSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.PersistentHashMap.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentHashMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.print_map(coll__$1,cljs.core.pr_writer,writer,opts);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ArrayNodeSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.Subvec.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.Subvec.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"["," ","]",opts,coll__$1);
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentTreeMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.print_map(coll__$1,cljs.core.pr_writer,writer,opts);
});

cljs.core.PersistentHashSet.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentHashSet.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"#{"," ","}",opts,coll__$1);
});

cljs.core.ChunkedCons.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ChunkedCons.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.Atom.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.Atom.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (a,writer,opts){
var a__$1 = this;
cljs.core._write(writer,"#<Atom: ");

cljs.core.pr_writer(a__$1.state,writer,opts);

return cljs.core._write(writer,">");
});

cljs.core.ValSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ValSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.RedNode.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.RedNode.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"["," ","]",opts,coll__$1);
});

cljs.core.PersistentVector.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentVector.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"["," ","]",opts,coll__$1);
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentQueueSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.EmptyList.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.EmptyList.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core._write(writer,"()");
});

cljs.core.LazyTransformer.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.LazyTransformer.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.PersistentQueue.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentQueue.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"#queue ["," ","]",opts,cljs.core.seq(coll__$1));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentArrayMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.print_map(coll__$1,cljs.core.pr_writer,writer,opts);
});

cljs.core.Range.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.Range.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.KeySeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.KeySeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.List.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.List.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});
cljs.core.PersistentVector.prototype.cljs$core$IComparable$ = true;

cljs.core.PersistentVector.prototype.cljs$core$IComparable$_compare$arity$2 = (function (x,y){
var x__$1 = this;
return cljs.core.compare_indexed.cljs$core$IFn$_invoke$arity$2(x__$1,y);
});

cljs.core.Subvec.prototype.cljs$core$IComparable$ = true;

cljs.core.Subvec.prototype.cljs$core$IComparable$_compare$arity$2 = (function (x,y){
var x__$1 = this;
return cljs.core.compare_indexed.cljs$core$IFn$_invoke$arity$2(x__$1,y);
});

cljs.core.Keyword.prototype.cljs$core$IComparable$ = true;

cljs.core.Keyword.prototype.cljs$core$IComparable$_compare$arity$2 = (function (x,y){
var x__$1 = this;
return cljs.core.compare_keywords(x__$1,y);
});

cljs.core.Symbol.prototype.cljs$core$IComparable$ = true;

cljs.core.Symbol.prototype.cljs$core$IComparable$_compare$arity$2 = (function (x,y){
var x__$1 = this;
return cljs.core.compare_symbols(x__$1,y);
});
/**
* Atomically sets the metadata for a namespace/var/ref/agent/atom to be:
* 
* (apply f its-current-meta args)
* 
* f must be free of side-effects
* @param {...*} var_args
*/
cljs.core.alter_meta_BANG_ = (function() { 
var alter_meta_BANG___delegate = function (iref,f,args){
return iref.meta = cljs.core.apply.cljs$core$IFn$_invoke$arity$3(f,iref.meta,args);
};
var alter_meta_BANG_ = function (iref,f,var_args){
var args = null;
if (arguments.length > 2) {
var G__30533__i = 0, G__30533__a = new Array(arguments.length -  2);
while (G__30533__i < G__30533__a.length) {G__30533__a[G__30533__i] = arguments[G__30533__i + 2]; ++G__30533__i;}
  args = new cljs.core.IndexedSeq(G__30533__a,0);
} 
return alter_meta_BANG___delegate.call(this,iref,f,args);};
alter_meta_BANG_.cljs$lang$maxFixedArity = 2;
alter_meta_BANG_.cljs$lang$applyTo = (function (arglist__30534){
var iref = cljs.core.first(arglist__30534);
arglist__30534 = cljs.core.next(arglist__30534);
var f = cljs.core.first(arglist__30534);
var args = cljs.core.rest(arglist__30534);
return alter_meta_BANG___delegate(iref,f,args);
});
alter_meta_BANG_.cljs$core$IFn$_invoke$arity$variadic = alter_meta_BANG___delegate;
return alter_meta_BANG_;
})()
;
/**
* Atomically resets the metadata for an atom
*/
cljs.core.reset_meta_BANG_ = (function reset_meta_BANG_(iref,m){
return iref.meta = m;
});
/**
* Alpha - subject to change.
* 
* Adds a watch function to an atom reference. The watch fn must be a
* fn of 4 args: a key, the reference, its old-state, its
* new-state. Whenever the reference's state might have been changed,
* any registered watches will have their functions called. The watch
* fn will be called synchronously. Note that an atom's state
* may have changed again prior to the fn call, so use old/new-state
* rather than derefing the reference. Keys must be unique per
* reference, and can be used to remove the watch with remove-watch,
* but are otherwise considered opaque by the watch mechanism.  Bear in
* mind that regardless of the result or action of the watch fns the
* atom's value will change.  Example:
* 
* (def a (atom 0))
* (add-watch a :inc (fn [k r o n] (assert (== 0 n))))
* (swap! a inc)
* ;; Assertion Error
* (deref a)
* ;=> 1
*/
cljs.core.add_watch = (function add_watch(iref,key,f){
cljs.core._add_watch(iref,key,f);

return iref;
});
/**
* Alpha - subject to change.
* 
* Removes a watch (set by add-watch) from a reference
*/
cljs.core.remove_watch = (function remove_watch(iref,key){
cljs.core._remove_watch(iref,key);

return iref;
});
cljs.core.gensym_counter = null;
/**
* Returns a new symbol with a unique name. If a prefix string is
* supplied, the name is prefix# where # is some unique number. If
* prefix is not supplied, the prefix is 'G__'.
*/
cljs.core.gensym = (function() {
var gensym = null;
var gensym__0 = (function (){
return gensym.cljs$core$IFn$_invoke$arity$1("G__");
});
var gensym__1 = (function (prefix_string){
if((cljs.core.gensym_counter == null)){
cljs.core.gensym_counter = (function (){var G__30537 = (0);
return (cljs.core.atom.cljs$core$IFn$_invoke$arity$1 ? cljs.core.atom.cljs$core$IFn$_invoke$arity$1(G__30537) : cljs.core.atom.call(null,G__30537));
})();
} else {
}

return cljs.core.symbol.cljs$core$IFn$_invoke$arity$1([cljs.core.str(prefix_string),cljs.core.str(cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(cljs.core.gensym_counter,cljs.core.inc))].join(''));
});
gensym = function(prefix_string){
switch(arguments.length){
case 0:
return gensym__0.call(this);
case 1:
return gensym__1.call(this,prefix_string);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
gensym.cljs$core$IFn$_invoke$arity$0 = gensym__0;
gensym.cljs$core$IFn$_invoke$arity$1 = gensym__1;
return gensym;
})()
;
cljs.core.fixture1 = (1);
cljs.core.fixture2 = (2);

/**
* @constructor
*/
cljs.core.Delay = (function (f,value){
this.f = f;
this.value = value;
this.cljs$lang$protocol_mask$partition1$ = 1;
this.cljs$lang$protocol_mask$partition0$ = 32768;
})
cljs.core.Delay.prototype.cljs$core$IPending$_realized_QMARK_$arity$1 = (function (d){
var self__ = this;
var d__$1 = this;
return cljs.core.not(self__.f);
});

cljs.core.Delay.prototype.cljs$core$IDeref$_deref$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
if(cljs.core.truth_(self__.f)){
self__.value = (function (){return (self__.f.cljs$core$IFn$_invoke$arity$0 ? self__.f.cljs$core$IFn$_invoke$arity$0() : self__.f.call(null));
})();

self__.f = null;
} else {
}

return self__.value;
});

cljs.core.Delay.cljs$lang$type = true;

cljs.core.Delay.cljs$lang$ctorStr = "cljs.core/Delay";

cljs.core.Delay.cljs$lang$ctorPrWriter = (function (this__24861__auto__,writer__24862__auto__,opt__24863__auto__){
return cljs.core._write(writer__24862__auto__,"cljs.core/Delay");
});

cljs.core.__GT_Delay = (function __GT_Delay(f,value){
return (new cljs.core.Delay(f,value));
});

/**
* returns true if x is a Delay created with delay
*/
cljs.core.delay_QMARK_ = (function delay_QMARK_(x){
return (x instanceof cljs.core.Delay);
});
/**
* If x is a Delay, returns the (possibly cached) value of its expression, else returns x
*/
cljs.core.force = (function force(x){
if(cljs.core.delay_QMARK_(x)){
var G__30539 = x;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__30539) : cljs.core.deref.call(null,G__30539));
} else {
return x;
}
});
/**
* Returns true if a value has been produced for a promise, delay, future or lazy sequence.
*/
cljs.core.realized_QMARK_ = (function realized_QMARK_(d){
return cljs.core._realized_QMARK_(d);
});
cljs.core.preserving_reduced = (function preserving_reduced(rf){
return (function (p1__30540_SHARP_,p2__30541_SHARP_){
var ret = (function (){var G__30544 = p1__30540_SHARP_;
var G__30545 = p2__30541_SHARP_;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__30544,G__30545) : rf.call(null,G__30544,G__30545));
})();
if(cljs.core.reduced_QMARK_(ret)){
return cljs.core.reduced(ret);
} else {
return ret;
}
});
});
/**
* A transducer which concatenates the contents of each input, which must be a
* collection, into the reduction.
*/
cljs.core.cat = (function cat(rf){
var rf1 = cljs.core.preserving_reduced(rf);
return ((function (rf1){
return (function() {
var G__30548 = null;
var G__30548__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__30548__1 = (function (result){
var G__30547 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__30547) : rf.call(null,G__30547));
});
var G__30548__2 = (function (result,input){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(rf1,result,input);
});
G__30548 = function(result,input){
switch(arguments.length){
case 0:
return G__30548__0.call(this);
case 1:
return G__30548__1.call(this,result);
case 2:
return G__30548__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__30548.cljs$core$IFn$_invoke$arity$0 = G__30548__0;
G__30548.cljs$core$IFn$_invoke$arity$1 = G__30548__1;
G__30548.cljs$core$IFn$_invoke$arity$2 = G__30548__2;
return G__30548;
})()
;})(rf1))
});
/**
* Returns a lazy sequence removing consecutive duplicates in coll.
* Returns a transducer when no collection is provided.
*/
cljs.core.dedupe = (function() {
var dedupe = null;
var dedupe__0 = (function (){
return (function (rf){
var pa = cljs.core.volatile_BANG_(new cljs.core.Keyword("cljs.core","none","cljs.core/none",926646439));
return ((function (pa){
return (function() {
var G__30557 = null;
var G__30557__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__30557__1 = (function (result){
var G__30553 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__30553) : rf.call(null,G__30553));
});
var G__30557__2 = (function (result,input){
var prior = (function (){var G__30554 = pa;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__30554) : cljs.core.deref.call(null,G__30554));
})();
cljs.core.vreset_BANG_(pa,input);

if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(prior,input)){
return result;
} else {
var G__30555 = result;
var G__30556 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__30555,G__30556) : rf.call(null,G__30555,G__30556));
}
});
G__30557 = function(result,input){
switch(arguments.length){
case 0:
return G__30557__0.call(this);
case 1:
return G__30557__1.call(this,result);
case 2:
return G__30557__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__30557.cljs$core$IFn$_invoke$arity$0 = G__30557__0;
G__30557.cljs$core$IFn$_invoke$arity$1 = G__30557__1;
G__30557.cljs$core$IFn$_invoke$arity$2 = G__30557__2;
return G__30557;
})()
;})(pa))
});
});
var dedupe__1 = (function (coll){
return cljs.core.sequence.cljs$core$IFn$_invoke$arity$2(dedupe.cljs$core$IFn$_invoke$arity$0(),coll);
});
dedupe = function(coll){
switch(arguments.length){
case 0:
return dedupe__0.call(this);
case 1:
return dedupe__1.call(this,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
dedupe.cljs$core$IFn$_invoke$arity$0 = dedupe__0;
dedupe.cljs$core$IFn$_invoke$arity$1 = dedupe__1;
return dedupe;
})()
;
/**
* Returns items from coll with random probability of prob (0.0 -
* 1.0).  Returns a transducer when no collection is provided.
*/
cljs.core.random_sample = (function() {
var random_sample = null;
var random_sample__1 = (function (prob){
return cljs.core.filter.cljs$core$IFn$_invoke$arity$1((function (_){
return ((function (){return (cljs.core.rand.cljs$core$IFn$_invoke$arity$0 ? cljs.core.rand.cljs$core$IFn$_invoke$arity$0() : cljs.core.rand.call(null));
})() < prob);
}));
});
var random_sample__2 = (function (prob,coll){
return cljs.core.filter.cljs$core$IFn$_invoke$arity$2((function (_){
return ((function (){return (cljs.core.rand.cljs$core$IFn$_invoke$arity$0 ? cljs.core.rand.cljs$core$IFn$_invoke$arity$0() : cljs.core.rand.call(null));
})() < prob);
}),coll);
});
random_sample = function(prob,coll){
switch(arguments.length){
case 1:
return random_sample__1.call(this,prob);
case 2:
return random_sample__2.call(this,prob,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
random_sample.cljs$core$IFn$_invoke$arity$1 = random_sample__1;
random_sample.cljs$core$IFn$_invoke$arity$2 = random_sample__2;
return random_sample;
})()
;

/**
* @constructor
*/
cljs.core.Eduction = (function (xform,coll){
this.xform = xform;
this.coll = coll;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 2173173760;
})
cljs.core.Eduction.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll__$1,writer,opts){
var self__ = this;
var coll__$2 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$2);
});

cljs.core.Eduction.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (_,f,init){
var self__ = this;
var ___$1 = this;
return cljs.core.transduce.cljs$core$IFn$_invoke$arity$4(self__.xform,f,init,self__.coll);
});

cljs.core.Eduction.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return cljs.core.seq(cljs.core.sequence.cljs$core$IFn$_invoke$arity$2(self__.xform,self__.coll));
});

cljs.core.Eduction.cljs$lang$type = true;

cljs.core.Eduction.cljs$lang$ctorStr = "cljs.core/Eduction";

cljs.core.Eduction.cljs$lang$ctorPrWriter = (function (this__24861__auto__,writer__24862__auto__,opt__24863__auto__){
return cljs.core._write(writer__24862__auto__,"cljs.core/Eduction");
});

cljs.core.__GT_Eduction = (function __GT_Eduction(xform,coll){
return (new cljs.core.Eduction(xform,coll));
});

(cljs.core.Eduction.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__25252__auto__ = this;
return cljs.core.es6_iterator(this__25252__auto__);
}));
/**
* Returns a reducible/iterable/seqable application of
* the transducer to the items in coll. Note that these applications
* will be performed every time iterator/seq/reduce is called.
*/
cljs.core.eduction = (function eduction(xform,coll){
return (new cljs.core.Eduction(xform,coll));
});
/**
* Runs the supplied procedure (via reduce), for purposes of side
* effects, on successive items in the collection. Returns nil
*/
cljs.core.run_BANG_ = (function run_BANG_(proc,coll){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (p1__30559_SHARP_,p2__30558_SHARP_){
var G__30561 = p2__30558_SHARP_;
return (proc.cljs$core$IFn$_invoke$arity$1 ? proc.cljs$core$IFn$_invoke$arity$1(G__30561) : proc.call(null,G__30561));
}),null,coll);
});

cljs.core.IEncodeJS = (function (){var obj30563 = {};
return obj30563;
})();

cljs.core._clj__GT_js = (function _clj__GT_js(x){
if((function (){var and__24262__auto__ = x;
if(and__24262__auto__){
return x.cljs$core$IEncodeJS$_clj__GT_js$arity$1;
} else {
return and__24262__auto__;
}
})()){
return x.cljs$core$IEncodeJS$_clj__GT_js$arity$1(x);
} else {
var x__24918__auto__ = (((x == null))?null:x);
return (function (){var or__24274__auto__ = (cljs.core._clj__GT_js[(function (){var G__30567 = x__24918__auto__;
return goog.typeOf(G__30567);
})()]);
if(or__24274__auto__){
return or__24274__auto__;
} else {
var or__24274__auto____$1 = (cljs.core._clj__GT_js["_"]);
if(or__24274__auto____$1){
return or__24274__auto____$1;
} else {
throw cljs.core.missing_protocol("IEncodeJS.-clj->js",x);
}
}
})().call(null,x);
}
});

cljs.core._key__GT_js = (function _key__GT_js(x){
if((function (){var and__24262__auto__ = x;
if(and__24262__auto__){
return x.cljs$core$IEncodeJS$_key__GT_js$arity$1;
} else {
return and__24262__auto__;
}
})()){
return x.cljs$core$IEncodeJS$_key__GT_js$arity$1(x);
} else {
var x__24918__auto__ = (((x == null))?null:x);
return (function (){var or__24274__auto__ = (cljs.core._key__GT_js[(function (){var G__30571 = x__24918__auto__;
return goog.typeOf(G__30571);
})()]);
if(or__24274__auto__){
return or__24274__auto__;
} else {
var or__24274__auto____$1 = (cljs.core._key__GT_js["_"]);
if(or__24274__auto____$1){
return or__24274__auto____$1;
} else {
throw cljs.core.missing_protocol("IEncodeJS.-key->js",x);
}
}
})().call(null,x);
}
});

cljs.core.key__GT_js = (function key__GT_js(k){
if((function (){var G__30574 = k;
if(G__30574){
var bit__24955__auto__ = null;
if(cljs.core.truth_((function (){var or__24274__auto__ = bit__24955__auto__;
if(cljs.core.truth_(or__24274__auto__)){
return or__24274__auto__;
} else {
return G__30574.cljs$core$IEncodeJS$;
}
})())){
return true;
} else {
if((!G__30574.cljs$lang$protocol_mask$partition$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeJS,G__30574);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeJS,G__30574);
}
})()){
return cljs.core._clj__GT_js(k);
} else {
if((typeof k === 'string') || (typeof k === 'number') || ((k instanceof cljs.core.Keyword)) || ((k instanceof cljs.core.Symbol))){
var G__30575 = k;
return (cljs.core.clj__GT_js.cljs$core$IFn$_invoke$arity$1 ? cljs.core.clj__GT_js.cljs$core$IFn$_invoke$arity$1(G__30575) : cljs.core.clj__GT_js.call(null,G__30575));
} else {
return cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([k], 0));
}
}
});
/**
* Recursively transforms ClojureScript values to JavaScript.
* sets/vectors/lists become Arrays, Keywords and Symbol become Strings,
* Maps become Objects. Arbitrary keys are encoded to by key->js.
*/
cljs.core.clj__GT_js = (function clj__GT_js(x){
if((x == null)){
return null;
} else {
if((function (){var G__30591 = x;
if(G__30591){
var bit__24955__auto__ = null;
if(cljs.core.truth_((function (){var or__24274__auto__ = bit__24955__auto__;
if(cljs.core.truth_(or__24274__auto__)){
return or__24274__auto__;
} else {
return G__30591.cljs$core$IEncodeJS$;
}
})())){
return true;
} else {
if((!G__30591.cljs$lang$protocol_mask$partition$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeJS,G__30591);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeJS,G__30591);
}
})()){
return cljs.core._clj__GT_js(x);
} else {
if((x instanceof cljs.core.Keyword)){
return cljs.core.name(x);
} else {
if((x instanceof cljs.core.Symbol)){
return [cljs.core.str(x)].join('');
} else {
if(cljs.core.map_QMARK_(x)){
var m = (function (){var obj30593 = {};
return obj30593;
})();
var seq__30594_30604 = cljs.core.seq(x);
var chunk__30595_30605 = null;
var count__30596_30606 = (0);
var i__30597_30607 = (0);
while(true){
if((i__30597_30607 < count__30596_30606)){
var vec__30598_30608 = chunk__30595_30605.cljs$core$IIndexed$_nth$arity$2(null,i__30597_30607);
var k_30609 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__30598_30608,(0),null);
var v_30610 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__30598_30608,(1),null);
(m[cljs.core.key__GT_js(k_30609)] = clj__GT_js(v_30610));

var G__30611 = seq__30594_30604;
var G__30612 = chunk__30595_30605;
var G__30613 = count__30596_30606;
var G__30614 = (i__30597_30607 + (1));
seq__30594_30604 = G__30611;
chunk__30595_30605 = G__30612;
count__30596_30606 = G__30613;
i__30597_30607 = G__30614;
continue;
} else {
var temp__4126__auto___30615 = cljs.core.seq(seq__30594_30604);
if(temp__4126__auto___30615){
var seq__30594_30616__$1 = temp__4126__auto___30615;
if(cljs.core.chunked_seq_QMARK_(seq__30594_30616__$1)){
var c__25061__auto___30617 = cljs.core.chunk_first(seq__30594_30616__$1);
var G__30618 = cljs.core.chunk_rest(seq__30594_30616__$1);
var G__30619 = c__25061__auto___30617;
var G__30620 = cljs.core.count(c__25061__auto___30617);
var G__30621 = (0);
seq__30594_30604 = G__30618;
chunk__30595_30605 = G__30619;
count__30596_30606 = G__30620;
i__30597_30607 = G__30621;
continue;
} else {
var vec__30599_30622 = cljs.core.first(seq__30594_30616__$1);
var k_30623 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__30599_30622,(0),null);
var v_30624 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__30599_30622,(1),null);
(m[cljs.core.key__GT_js(k_30623)] = clj__GT_js(v_30624));

var G__30625 = cljs.core.next(seq__30594_30616__$1);
var G__30626 = null;
var G__30627 = (0);
var G__30628 = (0);
seq__30594_30604 = G__30625;
chunk__30595_30605 = G__30626;
count__30596_30606 = G__30627;
i__30597_30607 = G__30628;
continue;
}
} else {
}
}
break;
}

return m;
} else {
if(cljs.core.coll_QMARK_(x)){
var arr = [];
var seq__30600_30629 = cljs.core.seq(cljs.core.map.cljs$core$IFn$_invoke$arity$2(clj__GT_js,x));
var chunk__30601_30630 = null;
var count__30602_30631 = (0);
var i__30603_30632 = (0);
while(true){
if((i__30603_30632 < count__30602_30631)){
var x_30633__$1 = chunk__30601_30630.cljs$core$IIndexed$_nth$arity$2(null,i__30603_30632);
arr.push(x_30633__$1);

var G__30634 = seq__30600_30629;
var G__30635 = chunk__30601_30630;
var G__30636 = count__30602_30631;
var G__30637 = (i__30603_30632 + (1));
seq__30600_30629 = G__30634;
chunk__30601_30630 = G__30635;
count__30602_30631 = G__30636;
i__30603_30632 = G__30637;
continue;
} else {
var temp__4126__auto___30638 = cljs.core.seq(seq__30600_30629);
if(temp__4126__auto___30638){
var seq__30600_30639__$1 = temp__4126__auto___30638;
if(cljs.core.chunked_seq_QMARK_(seq__30600_30639__$1)){
var c__25061__auto___30640 = cljs.core.chunk_first(seq__30600_30639__$1);
var G__30641 = cljs.core.chunk_rest(seq__30600_30639__$1);
var G__30642 = c__25061__auto___30640;
var G__30643 = cljs.core.count(c__25061__auto___30640);
var G__30644 = (0);
seq__30600_30629 = G__30641;
chunk__30601_30630 = G__30642;
count__30602_30631 = G__30643;
i__30603_30632 = G__30644;
continue;
} else {
var x_30645__$1 = cljs.core.first(seq__30600_30639__$1);
arr.push(x_30645__$1);

var G__30646 = cljs.core.next(seq__30600_30639__$1);
var G__30647 = null;
var G__30648 = (0);
var G__30649 = (0);
seq__30600_30629 = G__30646;
chunk__30601_30630 = G__30647;
count__30602_30631 = G__30648;
i__30603_30632 = G__30649;
continue;
}
} else {
}
}
break;
}

return arr;
} else {
return x;

}
}
}
}
}
}
});

cljs.core.IEncodeClojure = (function (){var obj30651 = {};
return obj30651;
})();

cljs.core._js__GT_clj = (function _js__GT_clj(x,options){
if((function (){var and__24262__auto__ = x;
if(and__24262__auto__){
return x.cljs$core$IEncodeClojure$_js__GT_clj$arity$2;
} else {
return and__24262__auto__;
}
})()){
return x.cljs$core$IEncodeClojure$_js__GT_clj$arity$2(x,options);
} else {
var x__24918__auto__ = (((x == null))?null:x);
return (function (){var or__24274__auto__ = (cljs.core._js__GT_clj[(function (){var G__30655 = x__24918__auto__;
return goog.typeOf(G__30655);
})()]);
if(or__24274__auto__){
return or__24274__auto__;
} else {
var or__24274__auto____$1 = (cljs.core._js__GT_clj["_"]);
if(or__24274__auto____$1){
return or__24274__auto____$1;
} else {
throw cljs.core.missing_protocol("IEncodeClojure.-js->clj",x);
}
}
})().call(null,x,options);
}
});

/**
* Recursively transforms JavaScript arrays into ClojureScript
* vectors, and JavaScript objects into ClojureScript maps.  With
* option ':keywordize-keys true' will convert object fields from
* strings to keywords.
* @param {...*} var_args
*/
cljs.core.js__GT_clj = (function() {
var js__GT_clj = null;
var js__GT_clj__1 = (function (x){
return js__GT_clj.cljs$core$IFn$_invoke$arity$variadic(x,cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,"keywordize-keys","keywordize-keys",1310784252),false], null)], 0));
});
var js__GT_clj__2 = (function() { 
var G__30712__delegate = function (x,opts){
var map__30685 = opts;
var map__30685__$1 = ((cljs.core.seq_QMARK_(map__30685))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__30685):map__30685);
var keywordize_keys = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__30685__$1,new cljs.core.Keyword(null,"keywordize-keys","keywordize-keys",1310784252));
var keyfn = (cljs.core.truth_(keywordize_keys)?cljs.core.keyword:cljs.core.str);
var f = ((function (map__30685,map__30685__$1,keywordize_keys,keyfn){
return (function thisfn(x__$1){
if((function (){var G__30701 = x__$1;
if(G__30701){
var bit__24955__auto__ = null;
if(cljs.core.truth_((function (){var or__24274__auto__ = bit__24955__auto__;
if(cljs.core.truth_(or__24274__auto__)){
return or__24274__auto__;
} else {
return G__30701.cljs$core$IEncodeClojure$;
}
})())){
return true;
} else {
if((!G__30701.cljs$lang$protocol_mask$partition$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeClojure,G__30701);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeClojure,G__30701);
}
})()){
return cljs.core._js__GT_clj(x__$1,cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.array_map,opts));
} else {
if(cljs.core.seq_QMARK_(x__$1)){
return cljs.core.doall.cljs$core$IFn$_invoke$arity$1(cljs.core.map.cljs$core$IFn$_invoke$arity$2(thisfn,x__$1));
} else {
if(cljs.core.coll_QMARK_(x__$1)){
return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.empty(x__$1),cljs.core.map.cljs$core$IFn$_invoke$arity$2(thisfn,x__$1));
} else {
if(x__$1 instanceof Array){
return cljs.core.vec(cljs.core.map.cljs$core$IFn$_invoke$arity$2(thisfn,x__$1));
} else {
if((cljs.core.type(x__$1) === Object)){
return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentArrayMap.EMPTY,(function (){var iter__25030__auto__ = ((function (map__30685,map__30685__$1,keywordize_keys,keyfn){
return (function iter__30702(s__30703){
return (new cljs.core.LazySeq(null,((function (map__30685,map__30685__$1,keywordize_keys,keyfn){
return (function (){
var s__30703__$1 = s__30703;
while(true){
var temp__4126__auto__ = cljs.core.seq(s__30703__$1);
if(temp__4126__auto__){
var s__30703__$2 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(s__30703__$2)){
var c__25028__auto__ = cljs.core.chunk_first(s__30703__$2);
var size__25029__auto__ = cljs.core.count(c__25028__auto__);
var b__30705 = cljs.core.chunk_buffer(size__25029__auto__);
if((function (){var i__30704 = (0);
while(true){
if((i__30704 < size__25029__auto__)){
var k = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c__25028__auto__,i__30704);
cljs.core.chunk_append(b__30705,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__30710 = k;
return (keyfn.cljs$core$IFn$_invoke$arity$1 ? keyfn.cljs$core$IFn$_invoke$arity$1(G__30710) : keyfn.call(null,G__30710));
})(),thisfn((x__$1[k]))], null));

var G__30713 = (i__30704 + (1));
i__30704 = G__30713;
continue;
} else {
return true;
}
break;
}
})()){
return cljs.core.chunk_cons(cljs.core.chunk(b__30705),iter__30702(cljs.core.chunk_rest(s__30703__$2)));
} else {
return cljs.core.chunk_cons(cljs.core.chunk(b__30705),null);
}
} else {
var k = cljs.core.first(s__30703__$2);
return cljs.core.cons(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__30711 = k;
return (keyfn.cljs$core$IFn$_invoke$arity$1 ? keyfn.cljs$core$IFn$_invoke$arity$1(G__30711) : keyfn.call(null,G__30711));
})(),thisfn((x__$1[k]))], null),iter__30702(cljs.core.rest(s__30703__$2)));
}
} else {
return null;
}
break;
}
});})(map__30685,map__30685__$1,keywordize_keys,keyfn))
,null,null));
});})(map__30685,map__30685__$1,keywordize_keys,keyfn))
;
return iter__25030__auto__(cljs.core.js_keys(x__$1));
})());
} else {
return x__$1;

}
}
}
}
}
});})(map__30685,map__30685__$1,keywordize_keys,keyfn))
;
return f(x);
};
var G__30712 = function (x,var_args){
var opts = null;
if (arguments.length > 1) {
var G__30714__i = 0, G__30714__a = new Array(arguments.length -  1);
while (G__30714__i < G__30714__a.length) {G__30714__a[G__30714__i] = arguments[G__30714__i + 1]; ++G__30714__i;}
  opts = new cljs.core.IndexedSeq(G__30714__a,0);
} 
return G__30712__delegate.call(this,x,opts);};
G__30712.cljs$lang$maxFixedArity = 1;
G__30712.cljs$lang$applyTo = (function (arglist__30715){
var x = cljs.core.first(arglist__30715);
var opts = cljs.core.rest(arglist__30715);
return G__30712__delegate(x,opts);
});
G__30712.cljs$core$IFn$_invoke$arity$variadic = G__30712__delegate;
return G__30712;
})()
;
js__GT_clj = function(x,var_args){
var opts = var_args;
switch(arguments.length){
case 1:
return js__GT_clj__1.call(this,x);
default:
var G__30716 = null;
if (arguments.length > 1) {
var G__30717__i = 0, G__30717__a = new Array(arguments.length -  1);
while (G__30717__i < G__30717__a.length) {G__30717__a[G__30717__i] = arguments[G__30717__i + 1]; ++G__30717__i;}
G__30716 = new cljs.core.IndexedSeq(G__30717__a,0);
}
return js__GT_clj__2.cljs$core$IFn$_invoke$arity$variadic(x, G__30716);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
js__GT_clj.cljs$lang$maxFixedArity = 1;
js__GT_clj.cljs$lang$applyTo = js__GT_clj__2.cljs$lang$applyTo;
js__GT_clj.cljs$core$IFn$_invoke$arity$1 = js__GT_clj__1;
js__GT_clj.cljs$core$IFn$_invoke$arity$variadic = js__GT_clj__2.cljs$core$IFn$_invoke$arity$variadic;
return js__GT_clj;
})()
;
/**
* Returns a memoized version of a referentially transparent function. The
* memoized version of the function keeps a cache of the mapping from arguments
* to results and, when calls with the same arguments are repeated often, has
* higher performance at the expense of higher memory use.
*/
cljs.core.memoize = (function memoize(f){
var mem = (function (){var G__30720 = cljs.core.PersistentArrayMap.EMPTY;
return (cljs.core.atom.cljs$core$IFn$_invoke$arity$1 ? cljs.core.atom.cljs$core$IFn$_invoke$arity$1(G__30720) : cljs.core.atom.call(null,G__30720));
})();
return ((function (mem){
return (function() { 
var G__30722__delegate = function (args){
var v = cljs.core.get.cljs$core$IFn$_invoke$arity$3((function (){var G__30721 = mem;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__30721) : cljs.core.deref.call(null,G__30721));
})(),args,cljs.core.lookup_sentinel);
if((v === cljs.core.lookup_sentinel)){
var ret = cljs.core.apply.cljs$core$IFn$_invoke$arity$2(f,args);
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(mem,cljs.core.assoc,args,ret);

return ret;
} else {
return v;
}
};
var G__30722 = function (var_args){
var args = null;
if (arguments.length > 0) {
var G__30723__i = 0, G__30723__a = new Array(arguments.length -  0);
while (G__30723__i < G__30723__a.length) {G__30723__a[G__30723__i] = arguments[G__30723__i + 0]; ++G__30723__i;}
  args = new cljs.core.IndexedSeq(G__30723__a,0);
} 
return G__30722__delegate.call(this,args);};
G__30722.cljs$lang$maxFixedArity = 0;
G__30722.cljs$lang$applyTo = (function (arglist__30724){
var args = cljs.core.seq(arglist__30724);
return G__30722__delegate(args);
});
G__30722.cljs$core$IFn$_invoke$arity$variadic = G__30722__delegate;
return G__30722;
})()
;
;})(mem))
});
/**
* trampoline can be used to convert algorithms requiring mutual
* recursion without stack consumption. Calls f with supplied args, if
* any. If f returns a fn, calls that fn with no arguments, and
* continues to repeat, until the return value is not a fn, then
* returns that non-fn value. Note that if you want to return a fn as a
* final value, you must wrap it in some data structure and unpack it
* after trampoline returns.
* @param {...*} var_args
*/
cljs.core.trampoline = (function() {
var trampoline = null;
var trampoline__1 = (function (f){
while(true){
var ret = (function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})();
if(cljs.core.fn_QMARK_(ret)){
var G__30726 = ret;
f = G__30726;
continue;
} else {
return ret;
}
break;
}
});
var trampoline__2 = (function() { 
var G__30727__delegate = function (f,args){
return trampoline.cljs$core$IFn$_invoke$arity$1((function (){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$2(f,args);
}));
};
var G__30727 = function (f,var_args){
var args = null;
if (arguments.length > 1) {
var G__30728__i = 0, G__30728__a = new Array(arguments.length -  1);
while (G__30728__i < G__30728__a.length) {G__30728__a[G__30728__i] = arguments[G__30728__i + 1]; ++G__30728__i;}
  args = new cljs.core.IndexedSeq(G__30728__a,0);
} 
return G__30727__delegate.call(this,f,args);};
G__30727.cljs$lang$maxFixedArity = 1;
G__30727.cljs$lang$applyTo = (function (arglist__30729){
var f = cljs.core.first(arglist__30729);
var args = cljs.core.rest(arglist__30729);
return G__30727__delegate(f,args);
});
G__30727.cljs$core$IFn$_invoke$arity$variadic = G__30727__delegate;
return G__30727;
})()
;
trampoline = function(f,var_args){
var args = var_args;
switch(arguments.length){
case 1:
return trampoline__1.call(this,f);
default:
var G__30730 = null;
if (arguments.length > 1) {
var G__30731__i = 0, G__30731__a = new Array(arguments.length -  1);
while (G__30731__i < G__30731__a.length) {G__30731__a[G__30731__i] = arguments[G__30731__i + 1]; ++G__30731__i;}
G__30730 = new cljs.core.IndexedSeq(G__30731__a,0);
}
return trampoline__2.cljs$core$IFn$_invoke$arity$variadic(f, G__30730);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
trampoline.cljs$lang$maxFixedArity = 1;
trampoline.cljs$lang$applyTo = trampoline__2.cljs$lang$applyTo;
trampoline.cljs$core$IFn$_invoke$arity$1 = trampoline__1;
trampoline.cljs$core$IFn$_invoke$arity$variadic = trampoline__2.cljs$core$IFn$_invoke$arity$variadic;
return trampoline;
})()
;
/**
* Returns a random floating point number between 0 (inclusive) and
* n (default 1) (exclusive).
*/
cljs.core.rand = (function() {
var rand = null;
var rand__0 = (function (){
return rand.cljs$core$IFn$_invoke$arity$1((1));
});
var rand__1 = (function (n){
return ((function (){return (Math.random.cljs$core$IFn$_invoke$arity$0 ? Math.random.cljs$core$IFn$_invoke$arity$0() : Math.random.call(null));
})() * n);
});
rand = function(n){
switch(arguments.length){
case 0:
return rand__0.call(this);
case 1:
return rand__1.call(this,n);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
rand.cljs$core$IFn$_invoke$arity$0 = rand__0;
rand.cljs$core$IFn$_invoke$arity$1 = rand__1;
return rand;
})()
;
/**
* Returns a random integer between 0 (inclusive) and n (exclusive).
*/
cljs.core.rand_int = (function rand_int(n){
var G__30734 = ((function (){return (Math.random.cljs$core$IFn$_invoke$arity$0 ? Math.random.cljs$core$IFn$_invoke$arity$0() : Math.random.call(null));
})() * n);
return (Math.floor.cljs$core$IFn$_invoke$arity$1 ? Math.floor.cljs$core$IFn$_invoke$arity$1(G__30734) : Math.floor.call(null,G__30734));
});
/**
* Return a random element of the (sequential) collection. Will have
* the same performance characteristics as nth for the given
* collection.
*/
cljs.core.rand_nth = (function rand_nth(coll){
return cljs.core.nth.cljs$core$IFn$_invoke$arity$2(coll,cljs.core.rand_int(cljs.core.count(coll)));
});
/**
* Returns a map of the elements of coll keyed by the result of
* f on each element. The value at each key will be a vector of the
* corresponding elements, in the order they appeared in coll.
*/
cljs.core.group_by = (function group_by(f,coll){
return cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (ret,x){
var k = (function (){var G__30736 = x;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__30736) : f.call(null,G__30736));
})();
return cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(ret,k,cljs.core.conj.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$3(ret,k,cljs.core.PersistentVector.EMPTY),x));
}),cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY),coll));
});
/**
* Creates a hierarchy object for use with derive, isa? etc.
*/
cljs.core.make_hierarchy = (function make_hierarchy(){
return new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,"parents","parents",-2027538891),cljs.core.PersistentArrayMap.EMPTY,new cljs.core.Keyword(null,"descendants","descendants",1824886031),cljs.core.PersistentArrayMap.EMPTY,new cljs.core.Keyword(null,"ancestors","ancestors",-776045424),cljs.core.PersistentArrayMap.EMPTY], null);
});
cljs.core._global_hierarchy = null;
cljs.core.get_global_hierarchy = (function get_global_hierarchy(){
if((cljs.core._global_hierarchy == null)){
cljs.core._global_hierarchy = (function (){var G__30738 = cljs.core.make_hierarchy();
return (cljs.core.atom.cljs$core$IFn$_invoke$arity$1 ? cljs.core.atom.cljs$core$IFn$_invoke$arity$1(G__30738) : cljs.core.atom.call(null,G__30738));
})();
} else {
}

return cljs.core._global_hierarchy;
});
/**
* @param {...*} var_args
*/
cljs.core.swap_global_hierarchy_BANG_ = (function() { 
var swap_global_hierarchy_BANG___delegate = function (f,args){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$4(cljs.core.swap_BANG_,cljs.core.get_global_hierarchy(),f,args);
};
var swap_global_hierarchy_BANG_ = function (f,var_args){
var args = null;
if (arguments.length > 1) {
var G__30739__i = 0, G__30739__a = new Array(arguments.length -  1);
while (G__30739__i < G__30739__a.length) {G__30739__a[G__30739__i] = arguments[G__30739__i + 1]; ++G__30739__i;}
  args = new cljs.core.IndexedSeq(G__30739__a,0);
} 
return swap_global_hierarchy_BANG___delegate.call(this,f,args);};
swap_global_hierarchy_BANG_.cljs$lang$maxFixedArity = 1;
swap_global_hierarchy_BANG_.cljs$lang$applyTo = (function (arglist__30740){
var f = cljs.core.first(arglist__30740);
var args = cljs.core.rest(arglist__30740);
return swap_global_hierarchy_BANG___delegate(f,args);
});
swap_global_hierarchy_BANG_.cljs$core$IFn$_invoke$arity$variadic = swap_global_hierarchy_BANG___delegate;
return swap_global_hierarchy_BANG_;
})()
;
/**
* Returns true if (= child parent), or child is directly or indirectly derived from
* parent, either via a JavaScript type inheritance relationship or a
* relationship established via derive. h must be a hierarchy obtained
* from make-hierarchy, if not supplied defaults to the global
* hierarchy
*/
cljs.core.isa_QMARK_ = (function() {
var isa_QMARK_ = null;
var isa_QMARK___2 = (function (child,parent){
return isa_QMARK_.cljs$core$IFn$_invoke$arity$3((function (){var G__30805 = cljs.core.get_global_hierarchy();
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__30805) : cljs.core.deref.call(null,G__30805));
})(),child,parent);
});
var isa_QMARK___3 = (function (h,child,parent){
var or__24274__auto__ = cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(child,parent);
if(or__24274__auto__){
return or__24274__auto__;
} else {
var or__24274__auto____$1 = cljs.core.contains_QMARK_(new cljs.core.Keyword(null,"ancestors","ancestors",-776045424).cljs$core$IFn$_invoke$arity$1(h).call(null,child),parent);
if(or__24274__auto____$1){
return or__24274__auto____$1;
} else {
var and__24262__auto__ = cljs.core.vector_QMARK_(parent);
if(and__24262__auto__){
var and__24262__auto____$1 = cljs.core.vector_QMARK_(child);
if(and__24262__auto____$1){
var and__24262__auto____$2 = (cljs.core.count(parent) === cljs.core.count(child));
if(and__24262__auto____$2){
var ret = true;
var i = (0);
while(true){
if((!(ret)) || ((i === cljs.core.count(parent)))){
return ret;
} else {
var G__30830 = isa_QMARK_.cljs$core$IFn$_invoke$arity$3(h,(function (){var G__30828 = i;
return (child.cljs$core$IFn$_invoke$arity$1 ? child.cljs$core$IFn$_invoke$arity$1(G__30828) : child.call(null,G__30828));
})(),(function (){var G__30829 = i;
return (parent.cljs$core$IFn$_invoke$arity$1 ? parent.cljs$core$IFn$_invoke$arity$1(G__30829) : parent.call(null,G__30829));
})());
var G__30831 = (i + (1));
ret = G__30830;
i = G__30831;
continue;
}
break;
}
} else {
return and__24262__auto____$2;
}
} else {
return and__24262__auto____$1;
}
} else {
return and__24262__auto__;
}
}
}
});
isa_QMARK_ = function(h,child,parent){
switch(arguments.length){
case 2:
return isa_QMARK___2.call(this,h,child);
case 3:
return isa_QMARK___3.call(this,h,child,parent);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
isa_QMARK_.cljs$core$IFn$_invoke$arity$2 = isa_QMARK___2;
isa_QMARK_.cljs$core$IFn$_invoke$arity$3 = isa_QMARK___3;
return isa_QMARK_;
})()
;
/**
* Returns the immediate parents of tag, either via a JavaScript type
* inheritance relationship or a relationship established via derive. h
* must be a hierarchy obtained from make-hierarchy, if not supplied
* defaults to the global hierarchy
*/
cljs.core.parents = (function() {
var parents = null;
var parents__1 = (function (tag){
return parents.cljs$core$IFn$_invoke$arity$2((function (){var G__30835 = cljs.core.get_global_hierarchy();
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__30835) : cljs.core.deref.call(null,G__30835));
})(),tag);
});
var parents__2 = (function (h,tag){
return cljs.core.not_empty(cljs.core.get.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,"parents","parents",-2027538891).cljs$core$IFn$_invoke$arity$1(h),tag));
});
parents = function(h,tag){
switch(arguments.length){
case 1:
return parents__1.call(this,h);
case 2:
return parents__2.call(this,h,tag);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
parents.cljs$core$IFn$_invoke$arity$1 = parents__1;
parents.cljs$core$IFn$_invoke$arity$2 = parents__2;
return parents;
})()
;
/**
* Returns the immediate and indirect parents of tag, either via a JavaScript type
* inheritance relationship or a relationship established via derive. h
* must be a hierarchy obtained from make-hierarchy, if not supplied
* defaults to the global hierarchy
*/
cljs.core.ancestors = (function() {
var ancestors = null;
var ancestors__1 = (function (tag){
return ancestors.cljs$core$IFn$_invoke$arity$2((function (){var G__30839 = cljs.core.get_global_hierarchy();
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__30839) : cljs.core.deref.call(null,G__30839));
})(),tag);
});
var ancestors__2 = (function (h,tag){
return cljs.core.not_empty(cljs.core.get.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,"ancestors","ancestors",-776045424).cljs$core$IFn$_invoke$arity$1(h),tag));
});
ancestors = function(h,tag){
switch(arguments.length){
case 1:
return ancestors__1.call(this,h);
case 2:
return ancestors__2.call(this,h,tag);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
ancestors.cljs$core$IFn$_invoke$arity$1 = ancestors__1;
ancestors.cljs$core$IFn$_invoke$arity$2 = ancestors__2;
return ancestors;
})()
;
/**
* Returns the immediate and indirect children of tag, through a
* relationship established via derive. h must be a hierarchy obtained
* from make-hierarchy, if not supplied defaults to the global
* hierarchy. Note: does not work on JavaScript type inheritance
* relationships.
*/
cljs.core.descendants = (function() {
var descendants = null;
var descendants__1 = (function (tag){
return descendants.cljs$core$IFn$_invoke$arity$2((function (){var G__30843 = cljs.core.get_global_hierarchy();
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__30843) : cljs.core.deref.call(null,G__30843));
})(),tag);
});
var descendants__2 = (function (h,tag){
return cljs.core.not_empty(cljs.core.get.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,"descendants","descendants",1824886031).cljs$core$IFn$_invoke$arity$1(h),tag));
});
descendants = function(h,tag){
switch(arguments.length){
case 1:
return descendants__1.call(this,h);
case 2:
return descendants__2.call(this,h,tag);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
descendants.cljs$core$IFn$_invoke$arity$1 = descendants__1;
descendants.cljs$core$IFn$_invoke$arity$2 = descendants__2;
return descendants;
})()
;
/**
* Establishes a parent/child relationship between parent and
* tag. Parent must be a namespace-qualified symbol or keyword and
* child can be either a namespace-qualified symbol or keyword or a
* class. h must be a hierarchy obtained from make-hierarchy, if not
* supplied defaults to, and modifies, the global hierarchy.
*/
cljs.core.derive = (function() {
var derive = null;
var derive__2 = (function (tag,parent){
if(cljs.core.truth_(cljs.core.namespace(parent))){
} else {
throw (new Error([cljs.core.str("Assert failed: "),cljs.core.str(cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.list(new cljs.core.Symbol(null,"namespace","namespace",1263021155,null),new cljs.core.Symbol(null,"parent","parent",761652748,null))], 0)))].join('')));
}

cljs.core.swap_global_hierarchy_BANG_.cljs$core$IFn$_invoke$arity$variadic(derive,cljs.core.array_seq([tag,parent], 0));

return null;
});
var derive__3 = (function (h,tag,parent){
if(cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2(tag,parent)){
} else {
throw (new Error([cljs.core.str("Assert failed: "),cljs.core.str(cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.list(new cljs.core.Symbol(null,"not=","not=",1466536204,null),new cljs.core.Symbol(null,"tag","tag",350170304,null),new cljs.core.Symbol(null,"parent","parent",761652748,null))], 0)))].join('')));
}

var tp = new cljs.core.Keyword(null,"parents","parents",-2027538891).cljs$core$IFn$_invoke$arity$1(h);
var td = new cljs.core.Keyword(null,"descendants","descendants",1824886031).cljs$core$IFn$_invoke$arity$1(h);
var ta = new cljs.core.Keyword(null,"ancestors","ancestors",-776045424).cljs$core$IFn$_invoke$arity$1(h);
var tf = ((function (tp,td,ta){
return (function (m,source,sources,target,targets){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (tp,td,ta){
return (function (ret,k){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(ret,k,cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.conj,cljs.core.get.cljs$core$IFn$_invoke$arity$3(targets,k,cljs.core.PersistentHashSet.EMPTY),cljs.core.cons(target,(function (){var G__30852 = target;
return (targets.cljs$core$IFn$_invoke$arity$1 ? targets.cljs$core$IFn$_invoke$arity$1(G__30852) : targets.call(null,G__30852));
})())));
});})(tp,td,ta))
,m,cljs.core.cons(source,(function (){var G__30853 = source;
return (sources.cljs$core$IFn$_invoke$arity$1 ? sources.cljs$core$IFn$_invoke$arity$1(G__30853) : sources.call(null,G__30853));
})()));
});})(tp,td,ta))
;
var or__24274__auto__ = ((cljs.core.contains_QMARK_((function (){var G__30857 = tag;
return (tp.cljs$core$IFn$_invoke$arity$1 ? tp.cljs$core$IFn$_invoke$arity$1(G__30857) : tp.call(null,G__30857));
})(),parent))?null:(function (){
if(cljs.core.contains_QMARK_((function (){var G__30858 = tag;
return (ta.cljs$core$IFn$_invoke$arity$1 ? ta.cljs$core$IFn$_invoke$arity$1(G__30858) : ta.call(null,G__30858));
})(),parent)){
throw (new Error([cljs.core.str(tag),cljs.core.str("already has"),cljs.core.str(parent),cljs.core.str("as ancestor")].join('')));
} else {
}

if(cljs.core.contains_QMARK_((function (){var G__30859 = parent;
return (ta.cljs$core$IFn$_invoke$arity$1 ? ta.cljs$core$IFn$_invoke$arity$1(G__30859) : ta.call(null,G__30859));
})(),tag)){
throw (new Error([cljs.core.str("Cyclic derivation:"),cljs.core.str(parent),cljs.core.str("has"),cljs.core.str(tag),cljs.core.str("as ancestor")].join('')));
} else {
}

return new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,"parents","parents",-2027538891),cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(new cljs.core.Keyword(null,"parents","parents",-2027538891).cljs$core$IFn$_invoke$arity$1(h),tag,cljs.core.conj.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$3(tp,tag,cljs.core.PersistentHashSet.EMPTY),parent)),new cljs.core.Keyword(null,"ancestors","ancestors",-776045424),tf(new cljs.core.Keyword(null,"ancestors","ancestors",-776045424).cljs$core$IFn$_invoke$arity$1(h),tag,td,parent,ta),new cljs.core.Keyword(null,"descendants","descendants",1824886031),tf(new cljs.core.Keyword(null,"descendants","descendants",1824886031).cljs$core$IFn$_invoke$arity$1(h),parent,ta,tag,td)], null);
})()
);
if(cljs.core.truth_(or__24274__auto__)){
return or__24274__auto__;
} else {
return h;
}
});
derive = function(h,tag,parent){
switch(arguments.length){
case 2:
return derive__2.call(this,h,tag);
case 3:
return derive__3.call(this,h,tag,parent);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
derive.cljs$core$IFn$_invoke$arity$2 = derive__2;
derive.cljs$core$IFn$_invoke$arity$3 = derive__3;
return derive;
})()
;
/**
* Removes a parent/child relationship between parent and
* tag. h must be a hierarchy obtained from make-hierarchy, if not
* supplied defaults to, and modifies, the global hierarchy.
*/
cljs.core.underive = (function() {
var underive = null;
var underive__2 = (function (tag,parent){
cljs.core.swap_global_hierarchy_BANG_.cljs$core$IFn$_invoke$arity$variadic(underive,cljs.core.array_seq([tag,parent], 0));

return null;
});
var underive__3 = (function (h,tag,parent){
var parentMap = new cljs.core.Keyword(null,"parents","parents",-2027538891).cljs$core$IFn$_invoke$arity$1(h);
var childsParents = (cljs.core.truth_((function (){var G__30866 = tag;
return (parentMap.cljs$core$IFn$_invoke$arity$1 ? parentMap.cljs$core$IFn$_invoke$arity$1(G__30866) : parentMap.call(null,G__30866));
})())?cljs.core.disj.cljs$core$IFn$_invoke$arity$2((function (){var G__30867 = tag;
return (parentMap.cljs$core$IFn$_invoke$arity$1 ? parentMap.cljs$core$IFn$_invoke$arity$1(G__30867) : parentMap.call(null,G__30867));
})(),parent):cljs.core.PersistentHashSet.EMPTY);
var newParents = (cljs.core.truth_(cljs.core.not_empty(childsParents))?cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(parentMap,tag,childsParents):cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(parentMap,tag));
var deriv_seq = cljs.core.flatten(cljs.core.map.cljs$core$IFn$_invoke$arity$2(((function (parentMap,childsParents,newParents){
return (function (p1__30860_SHARP_){
return cljs.core.cons(cljs.core.first(p1__30860_SHARP_),cljs.core.interpose(cljs.core.first(p1__30860_SHARP_),cljs.core.second(p1__30860_SHARP_)));
});})(parentMap,childsParents,newParents))
,cljs.core.seq(newParents)));
if(cljs.core.contains_QMARK_((function (){var G__30868 = tag;
return (parentMap.cljs$core$IFn$_invoke$arity$1 ? parentMap.cljs$core$IFn$_invoke$arity$1(G__30868) : parentMap.call(null,G__30868));
})(),parent)){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (parentMap,childsParents,newParents,deriv_seq){
return (function (p1__30861_SHARP_,p2__30862_SHARP_){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$3(cljs.core.derive,p1__30861_SHARP_,p2__30862_SHARP_);
});})(parentMap,childsParents,newParents,deriv_seq))
,cljs.core.make_hierarchy(),cljs.core.partition.cljs$core$IFn$_invoke$arity$2((2),deriv_seq));
} else {
return h;
}
});
underive = function(h,tag,parent){
switch(arguments.length){
case 2:
return underive__2.call(this,h,tag);
case 3:
return underive__3.call(this,h,tag,parent);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
underive.cljs$core$IFn$_invoke$arity$2 = underive__2;
underive.cljs$core$IFn$_invoke$arity$3 = underive__3;
return underive;
})()
;
cljs.core.reset_cache = (function reset_cache(method_cache,method_table,cached_hierarchy,hierarchy){
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(method_cache,(function (_){
var G__30871 = method_table;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__30871) : cljs.core.deref.call(null,G__30871));
}));

return cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(cached_hierarchy,(function (_){
var G__30872 = hierarchy;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__30872) : cljs.core.deref.call(null,G__30872));
}));
});
cljs.core.prefers_STAR_ = (function prefers_STAR_(x,y,prefer_table){
var xprefs = (function (){var G__30888 = prefer_table;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__30888) : cljs.core.deref.call(null,G__30888));
})().call(null,x);
var or__24274__auto__ = (cljs.core.truth_((function (){var and__24262__auto__ = xprefs;
if(cljs.core.truth_(and__24262__auto__)){
var G__30890 = y;
return (xprefs.cljs$core$IFn$_invoke$arity$1 ? xprefs.cljs$core$IFn$_invoke$arity$1(G__30890) : xprefs.call(null,G__30890));
} else {
return and__24262__auto__;
}
})())?true:null);
if(cljs.core.truth_(or__24274__auto__)){
return or__24274__auto__;
} else {
var or__24274__auto____$1 = (function (){var ps = cljs.core.parents.cljs$core$IFn$_invoke$arity$1(y);
while(true){
if((cljs.core.count(ps) > (0))){
if(cljs.core.truth_(prefers_STAR_(x,cljs.core.first(ps),prefer_table))){
} else {
}

var G__30891 = cljs.core.rest(ps);
ps = G__30891;
continue;
} else {
return null;
}
break;
}
})();
if(cljs.core.truth_(or__24274__auto____$1)){
return or__24274__auto____$1;
} else {
var or__24274__auto____$2 = (function (){var ps = cljs.core.parents.cljs$core$IFn$_invoke$arity$1(x);
while(true){
if((cljs.core.count(ps) > (0))){
if(cljs.core.truth_(prefers_STAR_(cljs.core.first(ps),y,prefer_table))){
} else {
}

var G__30892 = cljs.core.rest(ps);
ps = G__30892;
continue;
} else {
return null;
}
break;
}
})();
if(cljs.core.truth_(or__24274__auto____$2)){
return or__24274__auto____$2;
} else {
return false;
}
}
}
});
cljs.core.dominates = (function dominates(x,y,prefer_table){
var or__24274__auto__ = cljs.core.prefers_STAR_(x,y,prefer_table);
if(cljs.core.truth_(or__24274__auto__)){
return or__24274__auto__;
} else {
return cljs.core.isa_QMARK_.cljs$core$IFn$_invoke$arity$2(x,y);
}
});
cljs.core.find_and_cache_best_method = (function find_and_cache_best_method(name,dispatch_val,hierarchy,method_table,prefer_table,method_cache,cached_hierarchy){
var best_entry = cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (be,p__30906){
var vec__30907 = p__30906;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__30907,(0),null);
var _ = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__30907,(1),null);
var e = vec__30907;
if(cljs.core.isa_QMARK_.cljs$core$IFn$_invoke$arity$3((function (){var G__30908 = hierarchy;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__30908) : cljs.core.deref.call(null,G__30908));
})(),dispatch_val,k)){
var be2 = (cljs.core.truth_((function (){var or__24274__auto__ = (be == null);
if(or__24274__auto__){
return or__24274__auto__;
} else {
return cljs.core.dominates(k,cljs.core.first(be),prefer_table);
}
})())?e:be);
if(cljs.core.truth_(cljs.core.dominates(cljs.core.first(be2),k,prefer_table))){
} else {
throw (new Error([cljs.core.str("Multiple methods in multimethod '"),cljs.core.str(name),cljs.core.str("' match dispatch value: "),cljs.core.str(dispatch_val),cljs.core.str(" -> "),cljs.core.str(k),cljs.core.str(" and "),cljs.core.str(cljs.core.first(be2)),cljs.core.str(", and neither is preferred")].join('')));
}

return be2;
} else {
return be;
}
}),null,(function (){var G__30909 = method_table;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__30909) : cljs.core.deref.call(null,G__30909));
})());
if(cljs.core.truth_(best_entry)){
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2((function (){var G__30910 = cached_hierarchy;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__30910) : cljs.core.deref.call(null,G__30910));
})(),(function (){var G__30911 = hierarchy;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__30911) : cljs.core.deref.call(null,G__30911));
})())){
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(method_cache,cljs.core.assoc,dispatch_val,cljs.core.second(best_entry));

return cljs.core.second(best_entry);
} else {
cljs.core.reset_cache(method_cache,method_table,cached_hierarchy,hierarchy);

return find_and_cache_best_method(name,dispatch_val,hierarchy,method_table,prefer_table,method_cache,cached_hierarchy);
}
} else {
return null;
}
});

cljs.core.IMultiFn = (function (){var obj30913 = {};
return obj30913;
})();

cljs.core._reset = (function _reset(mf){
if((function (){var and__24262__auto__ = mf;
if(and__24262__auto__){
return mf.cljs$core$IMultiFn$_reset$arity$1;
} else {
return and__24262__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_reset$arity$1(mf);
} else {
var x__24918__auto__ = (((mf == null))?null:mf);
return (function (){var or__24274__auto__ = (cljs.core._reset[(function (){var G__30917 = x__24918__auto__;
return goog.typeOf(G__30917);
})()]);
if(or__24274__auto__){
return or__24274__auto__;
} else {
var or__24274__auto____$1 = (cljs.core._reset["_"]);
if(or__24274__auto____$1){
return or__24274__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-reset",mf);
}
}
})().call(null,mf);
}
});

cljs.core._add_method = (function _add_method(mf,dispatch_val,method){
if((function (){var and__24262__auto__ = mf;
if(and__24262__auto__){
return mf.cljs$core$IMultiFn$_add_method$arity$3;
} else {
return and__24262__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_add_method$arity$3(mf,dispatch_val,method);
} else {
var x__24918__auto__ = (((mf == null))?null:mf);
return (function (){var or__24274__auto__ = (cljs.core._add_method[(function (){var G__30921 = x__24918__auto__;
return goog.typeOf(G__30921);
})()]);
if(or__24274__auto__){
return or__24274__auto__;
} else {
var or__24274__auto____$1 = (cljs.core._add_method["_"]);
if(or__24274__auto____$1){
return or__24274__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-add-method",mf);
}
}
})().call(null,mf,dispatch_val,method);
}
});

cljs.core._remove_method = (function _remove_method(mf,dispatch_val){
if((function (){var and__24262__auto__ = mf;
if(and__24262__auto__){
return mf.cljs$core$IMultiFn$_remove_method$arity$2;
} else {
return and__24262__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_remove_method$arity$2(mf,dispatch_val);
} else {
var x__24918__auto__ = (((mf == null))?null:mf);
return (function (){var or__24274__auto__ = (cljs.core._remove_method[(function (){var G__30925 = x__24918__auto__;
return goog.typeOf(G__30925);
})()]);
if(or__24274__auto__){
return or__24274__auto__;
} else {
var or__24274__auto____$1 = (cljs.core._remove_method["_"]);
if(or__24274__auto____$1){
return or__24274__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-remove-method",mf);
}
}
})().call(null,mf,dispatch_val);
}
});

cljs.core._prefer_method = (function _prefer_method(mf,dispatch_val,dispatch_val_y){
if((function (){var and__24262__auto__ = mf;
if(and__24262__auto__){
return mf.cljs$core$IMultiFn$_prefer_method$arity$3;
} else {
return and__24262__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_prefer_method$arity$3(mf,dispatch_val,dispatch_val_y);
} else {
var x__24918__auto__ = (((mf == null))?null:mf);
return (function (){var or__24274__auto__ = (cljs.core._prefer_method[(function (){var G__30929 = x__24918__auto__;
return goog.typeOf(G__30929);
})()]);
if(or__24274__auto__){
return or__24274__auto__;
} else {
var or__24274__auto____$1 = (cljs.core._prefer_method["_"]);
if(or__24274__auto____$1){
return or__24274__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-prefer-method",mf);
}
}
})().call(null,mf,dispatch_val,dispatch_val_y);
}
});

cljs.core._get_method = (function _get_method(mf,dispatch_val){
if((function (){var and__24262__auto__ = mf;
if(and__24262__auto__){
return mf.cljs$core$IMultiFn$_get_method$arity$2;
} else {
return and__24262__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_get_method$arity$2(mf,dispatch_val);
} else {
var x__24918__auto__ = (((mf == null))?null:mf);
return (function (){var or__24274__auto__ = (cljs.core._get_method[(function (){var G__30933 = x__24918__auto__;
return goog.typeOf(G__30933);
})()]);
if(or__24274__auto__){
return or__24274__auto__;
} else {
var or__24274__auto____$1 = (cljs.core._get_method["_"]);
if(or__24274__auto____$1){
return or__24274__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-get-method",mf);
}
}
})().call(null,mf,dispatch_val);
}
});

cljs.core._methods = (function _methods(mf){
if((function (){var and__24262__auto__ = mf;
if(and__24262__auto__){
return mf.cljs$core$IMultiFn$_methods$arity$1;
} else {
return and__24262__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_methods$arity$1(mf);
} else {
var x__24918__auto__ = (((mf == null))?null:mf);
return (function (){var or__24274__auto__ = (cljs.core._methods[(function (){var G__30937 = x__24918__auto__;
return goog.typeOf(G__30937);
})()]);
if(or__24274__auto__){
return or__24274__auto__;
} else {
var or__24274__auto____$1 = (cljs.core._methods["_"]);
if(or__24274__auto____$1){
return or__24274__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-methods",mf);
}
}
})().call(null,mf);
}
});

cljs.core._prefers = (function _prefers(mf){
if((function (){var and__24262__auto__ = mf;
if(and__24262__auto__){
return mf.cljs$core$IMultiFn$_prefers$arity$1;
} else {
return and__24262__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_prefers$arity$1(mf);
} else {
var x__24918__auto__ = (((mf == null))?null:mf);
return (function (){var or__24274__auto__ = (cljs.core._prefers[(function (){var G__30941 = x__24918__auto__;
return goog.typeOf(G__30941);
})()]);
if(or__24274__auto__){
return or__24274__auto__;
} else {
var or__24274__auto____$1 = (cljs.core._prefers["_"]);
if(or__24274__auto____$1){
return or__24274__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-prefers",mf);
}
}
})().call(null,mf);
}
});

cljs.core.throw_no_method_error = (function throw_no_method_error(name,dispatch_val){
throw (new Error([cljs.core.str("No method in multimethod '"),cljs.core.str(name),cljs.core.str("' for dispatch value: "),cljs.core.str(dispatch_val)].join('')));
});

/**
* @constructor
*/
cljs.core.MultiFn = (function (name,dispatch_fn,default_dispatch_val,hierarchy,method_table,prefer_table,method_cache,cached_hierarchy){
this.name = name;
this.dispatch_fn = dispatch_fn;
this.default_dispatch_val = default_dispatch_val;
this.hierarchy = hierarchy;
this.method_table = method_table;
this.prefer_table = prefer_table;
this.method_cache = method_cache;
this.cached_hierarchy = cached_hierarchy;
this.cljs$lang$protocol_mask$partition0$ = 4194305;
this.cljs$lang$protocol_mask$partition1$ = 4352;
})
cljs.core.MultiFn.prototype.cljs$core$IHash$_hash$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
var G__30943 = this$__$1;
return goog.getUid(G__30943);
});

cljs.core.MultiFn.prototype.cljs$core$INamed$_name$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return cljs.core._name(self__.name);
});

cljs.core.MultiFn.prototype.cljs$core$INamed$_namespace$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return cljs.core._namespace(self__.name);
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_reset$arity$1 = (function (mf){
var self__ = this;
var mf__$1 = this;
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.method_table,((function (mf__$1){
return (function (mf__$2){
return cljs.core.PersistentArrayMap.EMPTY;
});})(mf__$1))
);

cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.method_cache,((function (mf__$1){
return (function (mf__$2){
return cljs.core.PersistentArrayMap.EMPTY;
});})(mf__$1))
);

cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.prefer_table,((function (mf__$1){
return (function (mf__$2){
return cljs.core.PersistentArrayMap.EMPTY;
});})(mf__$1))
);

cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.cached_hierarchy,((function (mf__$1){
return (function (mf__$2){
return null;
});})(mf__$1))
);

return mf__$1;
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_add_method$arity$3 = (function (mf,dispatch_val,method){
var self__ = this;
var mf__$1 = this;
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(self__.method_table,cljs.core.assoc,dispatch_val,method);

cljs.core.reset_cache(self__.method_cache,self__.method_table,self__.cached_hierarchy,self__.hierarchy);

return mf__$1;
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_remove_method$arity$2 = (function (mf,dispatch_val){
var self__ = this;
var mf__$1 = this;
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$3(self__.method_table,cljs.core.dissoc,dispatch_val);

cljs.core.reset_cache(self__.method_cache,self__.method_table,self__.cached_hierarchy,self__.hierarchy);

return mf__$1;
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_get_method$arity$2 = (function (mf,dispatch_val){
var self__ = this;
var mf__$1 = this;
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2((function (){var G__30944 = self__.cached_hierarchy;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__30944) : cljs.core.deref.call(null,G__30944));
})(),(function (){var G__30945 = self__.hierarchy;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__30945) : cljs.core.deref.call(null,G__30945));
})())){
} else {
cljs.core.reset_cache(self__.method_cache,self__.method_table,self__.cached_hierarchy,self__.hierarchy);
}

var temp__4124__auto__ = (function (){var G__30946 = self__.method_cache;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__30946) : cljs.core.deref.call(null,G__30946));
})().call(null,dispatch_val);
if(cljs.core.truth_(temp__4124__auto__)){
var target_fn = temp__4124__auto__;
return target_fn;
} else {
var temp__4124__auto____$1 = cljs.core.find_and_cache_best_method(self__.name,dispatch_val,self__.hierarchy,self__.method_table,self__.prefer_table,self__.method_cache,self__.cached_hierarchy);
if(cljs.core.truth_(temp__4124__auto____$1)){
var target_fn = temp__4124__auto____$1;
return target_fn;
} else {
return (function (){var G__30947 = self__.method_table;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__30947) : cljs.core.deref.call(null,G__30947));
})().call(null,self__.default_dispatch_val);
}
}
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_prefer_method$arity$3 = (function (mf,dispatch_val_x,dispatch_val_y){
var self__ = this;
var mf__$1 = this;
if(cljs.core.truth_(cljs.core.prefers_STAR_(dispatch_val_x,dispatch_val_y,self__.prefer_table))){
throw (new Error([cljs.core.str("Preference conflict in multimethod '"),cljs.core.str(self__.name),cljs.core.str("': "),cljs.core.str(dispatch_val_y),cljs.core.str(" is already preferred to "),cljs.core.str(dispatch_val_x)].join('')));
} else {
}

cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.prefer_table,((function (mf__$1){
return (function (old){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(old,dispatch_val_x,cljs.core.conj.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$3(old,dispatch_val_x,cljs.core.PersistentHashSet.EMPTY),dispatch_val_y));
});})(mf__$1))
);

return cljs.core.reset_cache(self__.method_cache,self__.method_table,self__.cached_hierarchy,self__.hierarchy);
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_methods$arity$1 = (function (mf){
var self__ = this;
var mf__$1 = this;
var G__30948 = self__.method_table;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__30948) : cljs.core.deref.call(null,G__30948));
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_prefers$arity$1 = (function (mf){
var self__ = this;
var mf__$1 = this;
var G__30949 = self__.prefer_table;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__30949) : cljs.core.deref.call(null,G__30949));
});

cljs.core.MultiFn.prototype.call = (function() {
var G__31790 = null;
var G__31790__1 = (function (self__){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$0 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$0() : self__.dispatch_fn.call(null));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

return (target_fn.cljs$core$IFn$_invoke$arity$0 ? target_fn.cljs$core$IFn$_invoke$arity$0() : target_fn.call(null));
});
var G__31790__2 = (function (self__,a){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__30950 = a;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$1 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$1(G__30950) : self__.dispatch_fn.call(null,G__30950));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__30951 = a;
return (target_fn.cljs$core$IFn$_invoke$arity$1 ? target_fn.cljs$core$IFn$_invoke$arity$1(G__30951) : target_fn.call(null,G__30951));
});
var G__31790__3 = (function (self__,a,b){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__30952 = a;
var G__30953 = b;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$2 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$2(G__30952,G__30953) : self__.dispatch_fn.call(null,G__30952,G__30953));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__30954 = a;
var G__30955 = b;
return (target_fn.cljs$core$IFn$_invoke$arity$2 ? target_fn.cljs$core$IFn$_invoke$arity$2(G__30954,G__30955) : target_fn.call(null,G__30954,G__30955));
});
var G__31790__4 = (function (self__,a,b,c){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__30956 = a;
var G__30957 = b;
var G__30958 = c;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$3 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$3(G__30956,G__30957,G__30958) : self__.dispatch_fn.call(null,G__30956,G__30957,G__30958));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__30959 = a;
var G__30960 = b;
var G__30961 = c;
return (target_fn.cljs$core$IFn$_invoke$arity$3 ? target_fn.cljs$core$IFn$_invoke$arity$3(G__30959,G__30960,G__30961) : target_fn.call(null,G__30959,G__30960,G__30961));
});
var G__31790__5 = (function (self__,a,b,c,d){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__30962 = a;
var G__30963 = b;
var G__30964 = c;
var G__30965 = d;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$4 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$4(G__30962,G__30963,G__30964,G__30965) : self__.dispatch_fn.call(null,G__30962,G__30963,G__30964,G__30965));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__30966 = a;
var G__30967 = b;
var G__30968 = c;
var G__30969 = d;
return (target_fn.cljs$core$IFn$_invoke$arity$4 ? target_fn.cljs$core$IFn$_invoke$arity$4(G__30966,G__30967,G__30968,G__30969) : target_fn.call(null,G__30966,G__30967,G__30968,G__30969));
});
var G__31790__6 = (function (self__,a,b,c,d,e){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__30970 = a;
var G__30971 = b;
var G__30972 = c;
var G__30973 = d;
var G__30974 = e;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$5 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$5(G__30970,G__30971,G__30972,G__30973,G__30974) : self__.dispatch_fn.call(null,G__30970,G__30971,G__30972,G__30973,G__30974));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__30975 = a;
var G__30976 = b;
var G__30977 = c;
var G__30978 = d;
var G__30979 = e;
return (target_fn.cljs$core$IFn$_invoke$arity$5 ? target_fn.cljs$core$IFn$_invoke$arity$5(G__30975,G__30976,G__30977,G__30978,G__30979) : target_fn.call(null,G__30975,G__30976,G__30977,G__30978,G__30979));
});
var G__31790__7 = (function (self__,a,b,c,d,e,f){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__30980 = a;
var G__30981 = b;
var G__30982 = c;
var G__30983 = d;
var G__30984 = e;
var G__30985 = f;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$6 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$6(G__30980,G__30981,G__30982,G__30983,G__30984,G__30985) : self__.dispatch_fn.call(null,G__30980,G__30981,G__30982,G__30983,G__30984,G__30985));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__30986 = a;
var G__30987 = b;
var G__30988 = c;
var G__30989 = d;
var G__30990 = e;
var G__30991 = f;
return (target_fn.cljs$core$IFn$_invoke$arity$6 ? target_fn.cljs$core$IFn$_invoke$arity$6(G__30986,G__30987,G__30988,G__30989,G__30990,G__30991) : target_fn.call(null,G__30986,G__30987,G__30988,G__30989,G__30990,G__30991));
});
var G__31790__8 = (function (self__,a,b,c,d,e,f,g){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__30992 = a;
var G__30993 = b;
var G__30994 = c;
var G__30995 = d;
var G__30996 = e;
var G__30997 = f;
var G__30998 = g;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$7 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$7(G__30992,G__30993,G__30994,G__30995,G__30996,G__30997,G__30998) : self__.dispatch_fn.call(null,G__30992,G__30993,G__30994,G__30995,G__30996,G__30997,G__30998));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__30999 = a;
var G__31000 = b;
var G__31001 = c;
var G__31002 = d;
var G__31003 = e;
var G__31004 = f;
var G__31005 = g;
return (target_fn.cljs$core$IFn$_invoke$arity$7 ? target_fn.cljs$core$IFn$_invoke$arity$7(G__30999,G__31000,G__31001,G__31002,G__31003,G__31004,G__31005) : target_fn.call(null,G__30999,G__31000,G__31001,G__31002,G__31003,G__31004,G__31005));
});
var G__31790__9 = (function (self__,a,b,c,d,e,f,g,h){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__31006 = a;
var G__31007 = b;
var G__31008 = c;
var G__31009 = d;
var G__31010 = e;
var G__31011 = f;
var G__31012 = g;
var G__31013 = h;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$8 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$8(G__31006,G__31007,G__31008,G__31009,G__31010,G__31011,G__31012,G__31013) : self__.dispatch_fn.call(null,G__31006,G__31007,G__31008,G__31009,G__31010,G__31011,G__31012,G__31013));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__31014 = a;
var G__31015 = b;
var G__31016 = c;
var G__31017 = d;
var G__31018 = e;
var G__31019 = f;
var G__31020 = g;
var G__31021 = h;
return (target_fn.cljs$core$IFn$_invoke$arity$8 ? target_fn.cljs$core$IFn$_invoke$arity$8(G__31014,G__31015,G__31016,G__31017,G__31018,G__31019,G__31020,G__31021) : target_fn.call(null,G__31014,G__31015,G__31016,G__31017,G__31018,G__31019,G__31020,G__31021));
});
var G__31790__10 = (function (self__,a,b,c,d,e,f,g,h,i){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__31022 = a;
var G__31023 = b;
var G__31024 = c;
var G__31025 = d;
var G__31026 = e;
var G__31027 = f;
var G__31028 = g;
var G__31029 = h;
var G__31030 = i;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$9 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$9(G__31022,G__31023,G__31024,G__31025,G__31026,G__31027,G__31028,G__31029,G__31030) : self__.dispatch_fn.call(null,G__31022,G__31023,G__31024,G__31025,G__31026,G__31027,G__31028,G__31029,G__31030));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__31031 = a;
var G__31032 = b;
var G__31033 = c;
var G__31034 = d;
var G__31035 = e;
var G__31036 = f;
var G__31037 = g;
var G__31038 = h;
var G__31039 = i;
return (target_fn.cljs$core$IFn$_invoke$arity$9 ? target_fn.cljs$core$IFn$_invoke$arity$9(G__31031,G__31032,G__31033,G__31034,G__31035,G__31036,G__31037,G__31038,G__31039) : target_fn.call(null,G__31031,G__31032,G__31033,G__31034,G__31035,G__31036,G__31037,G__31038,G__31039));
});
var G__31790__11 = (function (self__,a,b,c,d,e,f,g,h,i,j){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__31040 = a;
var G__31041 = b;
var G__31042 = c;
var G__31043 = d;
var G__31044 = e;
var G__31045 = f;
var G__31046 = g;
var G__31047 = h;
var G__31048 = i;
var G__31049 = j;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$10 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$10(G__31040,G__31041,G__31042,G__31043,G__31044,G__31045,G__31046,G__31047,G__31048,G__31049) : self__.dispatch_fn.call(null,G__31040,G__31041,G__31042,G__31043,G__31044,G__31045,G__31046,G__31047,G__31048,G__31049));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__31050 = a;
var G__31051 = b;
var G__31052 = c;
var G__31053 = d;
var G__31054 = e;
var G__31055 = f;
var G__31056 = g;
var G__31057 = h;
var G__31058 = i;
var G__31059 = j;
return (target_fn.cljs$core$IFn$_invoke$arity$10 ? target_fn.cljs$core$IFn$_invoke$arity$10(G__31050,G__31051,G__31052,G__31053,G__31054,G__31055,G__31056,G__31057,G__31058,G__31059) : target_fn.call(null,G__31050,G__31051,G__31052,G__31053,G__31054,G__31055,G__31056,G__31057,G__31058,G__31059));
});
var G__31790__12 = (function (self__,a,b,c,d,e,f,g,h,i,j,k){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__31060 = a;
var G__31061 = b;
var G__31062 = c;
var G__31063 = d;
var G__31064 = e;
var G__31065 = f;
var G__31066 = g;
var G__31067 = h;
var G__31068 = i;
var G__31069 = j;
var G__31070 = k;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$11 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$11(G__31060,G__31061,G__31062,G__31063,G__31064,G__31065,G__31066,G__31067,G__31068,G__31069,G__31070) : self__.dispatch_fn.call(null,G__31060,G__31061,G__31062,G__31063,G__31064,G__31065,G__31066,G__31067,G__31068,G__31069,G__31070));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__31071 = a;
var G__31072 = b;
var G__31073 = c;
var G__31074 = d;
var G__31075 = e;
var G__31076 = f;
var G__31077 = g;
var G__31078 = h;
var G__31079 = i;
var G__31080 = j;
var G__31081 = k;
return (target_fn.cljs$core$IFn$_invoke$arity$11 ? target_fn.cljs$core$IFn$_invoke$arity$11(G__31071,G__31072,G__31073,G__31074,G__31075,G__31076,G__31077,G__31078,G__31079,G__31080,G__31081) : target_fn.call(null,G__31071,G__31072,G__31073,G__31074,G__31075,G__31076,G__31077,G__31078,G__31079,G__31080,G__31081));
});
var G__31790__13 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__31082 = a;
var G__31083 = b;
var G__31084 = c;
var G__31085 = d;
var G__31086 = e;
var G__31087 = f;
var G__31088 = g;
var G__31089 = h;
var G__31090 = i;
var G__31091 = j;
var G__31092 = k;
var G__31093 = l;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$12 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$12(G__31082,G__31083,G__31084,G__31085,G__31086,G__31087,G__31088,G__31089,G__31090,G__31091,G__31092,G__31093) : self__.dispatch_fn.call(null,G__31082,G__31083,G__31084,G__31085,G__31086,G__31087,G__31088,G__31089,G__31090,G__31091,G__31092,G__31093));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__31094 = a;
var G__31095 = b;
var G__31096 = c;
var G__31097 = d;
var G__31098 = e;
var G__31099 = f;
var G__31100 = g;
var G__31101 = h;
var G__31102 = i;
var G__31103 = j;
var G__31104 = k;
var G__31105 = l;
return (target_fn.cljs$core$IFn$_invoke$arity$12 ? target_fn.cljs$core$IFn$_invoke$arity$12(G__31094,G__31095,G__31096,G__31097,G__31098,G__31099,G__31100,G__31101,G__31102,G__31103,G__31104,G__31105) : target_fn.call(null,G__31094,G__31095,G__31096,G__31097,G__31098,G__31099,G__31100,G__31101,G__31102,G__31103,G__31104,G__31105));
});
var G__31790__14 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__31106 = a;
var G__31107 = b;
var G__31108 = c;
var G__31109 = d;
var G__31110 = e;
var G__31111 = f;
var G__31112 = g;
var G__31113 = h;
var G__31114 = i;
var G__31115 = j;
var G__31116 = k;
var G__31117 = l;
var G__31118 = m;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$13 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$13(G__31106,G__31107,G__31108,G__31109,G__31110,G__31111,G__31112,G__31113,G__31114,G__31115,G__31116,G__31117,G__31118) : self__.dispatch_fn.call(null,G__31106,G__31107,G__31108,G__31109,G__31110,G__31111,G__31112,G__31113,G__31114,G__31115,G__31116,G__31117,G__31118));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__31119 = a;
var G__31120 = b;
var G__31121 = c;
var G__31122 = d;
var G__31123 = e;
var G__31124 = f;
var G__31125 = g;
var G__31126 = h;
var G__31127 = i;
var G__31128 = j;
var G__31129 = k;
var G__31130 = l;
var G__31131 = m;
return (target_fn.cljs$core$IFn$_invoke$arity$13 ? target_fn.cljs$core$IFn$_invoke$arity$13(G__31119,G__31120,G__31121,G__31122,G__31123,G__31124,G__31125,G__31126,G__31127,G__31128,G__31129,G__31130,G__31131) : target_fn.call(null,G__31119,G__31120,G__31121,G__31122,G__31123,G__31124,G__31125,G__31126,G__31127,G__31128,G__31129,G__31130,G__31131));
});
var G__31790__15 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__31132 = a;
var G__31133 = b;
var G__31134 = c;
var G__31135 = d;
var G__31136 = e;
var G__31137 = f;
var G__31138 = g;
var G__31139 = h;
var G__31140 = i;
var G__31141 = j;
var G__31142 = k;
var G__31143 = l;
var G__31144 = m;
var G__31145 = n;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$14 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$14(G__31132,G__31133,G__31134,G__31135,G__31136,G__31137,G__31138,G__31139,G__31140,G__31141,G__31142,G__31143,G__31144,G__31145) : self__.dispatch_fn.call(null,G__31132,G__31133,G__31134,G__31135,G__31136,G__31137,G__31138,G__31139,G__31140,G__31141,G__31142,G__31143,G__31144,G__31145));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__31146 = a;
var G__31147 = b;
var G__31148 = c;
var G__31149 = d;
var G__31150 = e;
var G__31151 = f;
var G__31152 = g;
var G__31153 = h;
var G__31154 = i;
var G__31155 = j;
var G__31156 = k;
var G__31157 = l;
var G__31158 = m;
var G__31159 = n;
return (target_fn.cljs$core$IFn$_invoke$arity$14 ? target_fn.cljs$core$IFn$_invoke$arity$14(G__31146,G__31147,G__31148,G__31149,G__31150,G__31151,G__31152,G__31153,G__31154,G__31155,G__31156,G__31157,G__31158,G__31159) : target_fn.call(null,G__31146,G__31147,G__31148,G__31149,G__31150,G__31151,G__31152,G__31153,G__31154,G__31155,G__31156,G__31157,G__31158,G__31159));
});
var G__31790__16 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__31160 = a;
var G__31161 = b;
var G__31162 = c;
var G__31163 = d;
var G__31164 = e;
var G__31165 = f;
var G__31166 = g;
var G__31167 = h;
var G__31168 = i;
var G__31169 = j;
var G__31170 = k;
var G__31171 = l;
var G__31172 = m;
var G__31173 = n;
var G__31174 = o;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$15 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$15(G__31160,G__31161,G__31162,G__31163,G__31164,G__31165,G__31166,G__31167,G__31168,G__31169,G__31170,G__31171,G__31172,G__31173,G__31174) : self__.dispatch_fn.call(null,G__31160,G__31161,G__31162,G__31163,G__31164,G__31165,G__31166,G__31167,G__31168,G__31169,G__31170,G__31171,G__31172,G__31173,G__31174));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__31175 = a;
var G__31176 = b;
var G__31177 = c;
var G__31178 = d;
var G__31179 = e;
var G__31180 = f;
var G__31181 = g;
var G__31182 = h;
var G__31183 = i;
var G__31184 = j;
var G__31185 = k;
var G__31186 = l;
var G__31187 = m;
var G__31188 = n;
var G__31189 = o;
return (target_fn.cljs$core$IFn$_invoke$arity$15 ? target_fn.cljs$core$IFn$_invoke$arity$15(G__31175,G__31176,G__31177,G__31178,G__31179,G__31180,G__31181,G__31182,G__31183,G__31184,G__31185,G__31186,G__31187,G__31188,G__31189) : target_fn.call(null,G__31175,G__31176,G__31177,G__31178,G__31179,G__31180,G__31181,G__31182,G__31183,G__31184,G__31185,G__31186,G__31187,G__31188,G__31189));
});
var G__31790__17 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__31190 = a;
var G__31191 = b;
var G__31192 = c;
var G__31193 = d;
var G__31194 = e;
var G__31195 = f;
var G__31196 = g;
var G__31197 = h;
var G__31198 = i;
var G__31199 = j;
var G__31200 = k;
var G__31201 = l;
var G__31202 = m;
var G__31203 = n;
var G__31204 = o;
var G__31205 = p;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$16 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$16(G__31190,G__31191,G__31192,G__31193,G__31194,G__31195,G__31196,G__31197,G__31198,G__31199,G__31200,G__31201,G__31202,G__31203,G__31204,G__31205) : self__.dispatch_fn.call(null,G__31190,G__31191,G__31192,G__31193,G__31194,G__31195,G__31196,G__31197,G__31198,G__31199,G__31200,G__31201,G__31202,G__31203,G__31204,G__31205));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__31206 = a;
var G__31207 = b;
var G__31208 = c;
var G__31209 = d;
var G__31210 = e;
var G__31211 = f;
var G__31212 = g;
var G__31213 = h;
var G__31214 = i;
var G__31215 = j;
var G__31216 = k;
var G__31217 = l;
var G__31218 = m;
var G__31219 = n;
var G__31220 = o;
var G__31221 = p;
return (target_fn.cljs$core$IFn$_invoke$arity$16 ? target_fn.cljs$core$IFn$_invoke$arity$16(G__31206,G__31207,G__31208,G__31209,G__31210,G__31211,G__31212,G__31213,G__31214,G__31215,G__31216,G__31217,G__31218,G__31219,G__31220,G__31221) : target_fn.call(null,G__31206,G__31207,G__31208,G__31209,G__31210,G__31211,G__31212,G__31213,G__31214,G__31215,G__31216,G__31217,G__31218,G__31219,G__31220,G__31221));
});
var G__31790__18 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__31222 = a;
var G__31223 = b;
var G__31224 = c;
var G__31225 = d;
var G__31226 = e;
var G__31227 = f;
var G__31228 = g;
var G__31229 = h;
var G__31230 = i;
var G__31231 = j;
var G__31232 = k;
var G__31233 = l;
var G__31234 = m;
var G__31235 = n;
var G__31236 = o;
var G__31237 = p;
var G__31238 = q;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$17 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$17(G__31222,G__31223,G__31224,G__31225,G__31226,G__31227,G__31228,G__31229,G__31230,G__31231,G__31232,G__31233,G__31234,G__31235,G__31236,G__31237,G__31238) : self__.dispatch_fn.call(null,G__31222,G__31223,G__31224,G__31225,G__31226,G__31227,G__31228,G__31229,G__31230,G__31231,G__31232,G__31233,G__31234,G__31235,G__31236,G__31237,G__31238));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__31239 = a;
var G__31240 = b;
var G__31241 = c;
var G__31242 = d;
var G__31243 = e;
var G__31244 = f;
var G__31245 = g;
var G__31246 = h;
var G__31247 = i;
var G__31248 = j;
var G__31249 = k;
var G__31250 = l;
var G__31251 = m;
var G__31252 = n;
var G__31253 = o;
var G__31254 = p;
var G__31255 = q;
return (target_fn.cljs$core$IFn$_invoke$arity$17 ? target_fn.cljs$core$IFn$_invoke$arity$17(G__31239,G__31240,G__31241,G__31242,G__31243,G__31244,G__31245,G__31246,G__31247,G__31248,G__31249,G__31250,G__31251,G__31252,G__31253,G__31254,G__31255) : target_fn.call(null,G__31239,G__31240,G__31241,G__31242,G__31243,G__31244,G__31245,G__31246,G__31247,G__31248,G__31249,G__31250,G__31251,G__31252,G__31253,G__31254,G__31255));
});
var G__31790__19 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__31256 = a;
var G__31257 = b;
var G__31258 = c;
var G__31259 = d;
var G__31260 = e;
var G__31261 = f;
var G__31262 = g;
var G__31263 = h;
var G__31264 = i;
var G__31265 = j;
var G__31266 = k;
var G__31267 = l;
var G__31268 = m;
var G__31269 = n;
var G__31270 = o;
var G__31271 = p;
var G__31272 = q;
var G__31273 = r;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$18 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$18(G__31256,G__31257,G__31258,G__31259,G__31260,G__31261,G__31262,G__31263,G__31264,G__31265,G__31266,G__31267,G__31268,G__31269,G__31270,G__31271,G__31272,G__31273) : self__.dispatch_fn.call(null,G__31256,G__31257,G__31258,G__31259,G__31260,G__31261,G__31262,G__31263,G__31264,G__31265,G__31266,G__31267,G__31268,G__31269,G__31270,G__31271,G__31272,G__31273));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__31274 = a;
var G__31275 = b;
var G__31276 = c;
var G__31277 = d;
var G__31278 = e;
var G__31279 = f;
var G__31280 = g;
var G__31281 = h;
var G__31282 = i;
var G__31283 = j;
var G__31284 = k;
var G__31285 = l;
var G__31286 = m;
var G__31287 = n;
var G__31288 = o;
var G__31289 = p;
var G__31290 = q;
var G__31291 = r;
return (target_fn.cljs$core$IFn$_invoke$arity$18 ? target_fn.cljs$core$IFn$_invoke$arity$18(G__31274,G__31275,G__31276,G__31277,G__31278,G__31279,G__31280,G__31281,G__31282,G__31283,G__31284,G__31285,G__31286,G__31287,G__31288,G__31289,G__31290,G__31291) : target_fn.call(null,G__31274,G__31275,G__31276,G__31277,G__31278,G__31279,G__31280,G__31281,G__31282,G__31283,G__31284,G__31285,G__31286,G__31287,G__31288,G__31289,G__31290,G__31291));
});
var G__31790__20 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__31292 = a;
var G__31293 = b;
var G__31294 = c;
var G__31295 = d;
var G__31296 = e;
var G__31297 = f;
var G__31298 = g;
var G__31299 = h;
var G__31300 = i;
var G__31301 = j;
var G__31302 = k;
var G__31303 = l;
var G__31304 = m;
var G__31305 = n;
var G__31306 = o;
var G__31307 = p;
var G__31308 = q;
var G__31309 = r;
var G__31310 = s;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$19 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$19(G__31292,G__31293,G__31294,G__31295,G__31296,G__31297,G__31298,G__31299,G__31300,G__31301,G__31302,G__31303,G__31304,G__31305,G__31306,G__31307,G__31308,G__31309,G__31310) : self__.dispatch_fn.call(null,G__31292,G__31293,G__31294,G__31295,G__31296,G__31297,G__31298,G__31299,G__31300,G__31301,G__31302,G__31303,G__31304,G__31305,G__31306,G__31307,G__31308,G__31309,G__31310));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__31311 = a;
var G__31312 = b;
var G__31313 = c;
var G__31314 = d;
var G__31315 = e;
var G__31316 = f;
var G__31317 = g;
var G__31318 = h;
var G__31319 = i;
var G__31320 = j;
var G__31321 = k;
var G__31322 = l;
var G__31323 = m;
var G__31324 = n;
var G__31325 = o;
var G__31326 = p;
var G__31327 = q;
var G__31328 = r;
var G__31329 = s;
return (target_fn.cljs$core$IFn$_invoke$arity$19 ? target_fn.cljs$core$IFn$_invoke$arity$19(G__31311,G__31312,G__31313,G__31314,G__31315,G__31316,G__31317,G__31318,G__31319,G__31320,G__31321,G__31322,G__31323,G__31324,G__31325,G__31326,G__31327,G__31328,G__31329) : target_fn.call(null,G__31311,G__31312,G__31313,G__31314,G__31315,G__31316,G__31317,G__31318,G__31319,G__31320,G__31321,G__31322,G__31323,G__31324,G__31325,G__31326,G__31327,G__31328,G__31329));
});
var G__31790__21 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__31330 = a;
var G__31331 = b;
var G__31332 = c;
var G__31333 = d;
var G__31334 = e;
var G__31335 = f;
var G__31336 = g;
var G__31337 = h;
var G__31338 = i;
var G__31339 = j;
var G__31340 = k;
var G__31341 = l;
var G__31342 = m;
var G__31343 = n;
var G__31344 = o;
var G__31345 = p;
var G__31346 = q;
var G__31347 = r;
var G__31348 = s;
var G__31349 = t;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$20 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$20(G__31330,G__31331,G__31332,G__31333,G__31334,G__31335,G__31336,G__31337,G__31338,G__31339,G__31340,G__31341,G__31342,G__31343,G__31344,G__31345,G__31346,G__31347,G__31348,G__31349) : self__.dispatch_fn.call(null,G__31330,G__31331,G__31332,G__31333,G__31334,G__31335,G__31336,G__31337,G__31338,G__31339,G__31340,G__31341,G__31342,G__31343,G__31344,G__31345,G__31346,G__31347,G__31348,G__31349));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__31350 = a;
var G__31351 = b;
var G__31352 = c;
var G__31353 = d;
var G__31354 = e;
var G__31355 = f;
var G__31356 = g;
var G__31357 = h;
var G__31358 = i;
var G__31359 = j;
var G__31360 = k;
var G__31361 = l;
var G__31362 = m;
var G__31363 = n;
var G__31364 = o;
var G__31365 = p;
var G__31366 = q;
var G__31367 = r;
var G__31368 = s;
var G__31369 = t;
return (target_fn.cljs$core$IFn$_invoke$arity$20 ? target_fn.cljs$core$IFn$_invoke$arity$20(G__31350,G__31351,G__31352,G__31353,G__31354,G__31355,G__31356,G__31357,G__31358,G__31359,G__31360,G__31361,G__31362,G__31363,G__31364,G__31365,G__31366,G__31367,G__31368,G__31369) : target_fn.call(null,G__31350,G__31351,G__31352,G__31353,G__31354,G__31355,G__31356,G__31357,G__31358,G__31359,G__31360,G__31361,G__31362,G__31363,G__31364,G__31365,G__31366,G__31367,G__31368,G__31369));
});
var G__31790__22 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(self__.dispatch_fn,a,b,c,d,cljs.core.array_seq([e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest], 0));
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(target_fn,a,b,c,d,cljs.core.array_seq([e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest], 0));
});
G__31790 = function(self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
switch(arguments.length){
case 1:
return G__31790__1.call(this,self__);
case 2:
return G__31790__2.call(this,self__,a);
case 3:
return G__31790__3.call(this,self__,a,b);
case 4:
return G__31790__4.call(this,self__,a,b,c);
case 5:
return G__31790__5.call(this,self__,a,b,c,d);
case 6:
return G__31790__6.call(this,self__,a,b,c,d,e);
case 7:
return G__31790__7.call(this,self__,a,b,c,d,e,f);
case 8:
return G__31790__8.call(this,self__,a,b,c,d,e,f,g);
case 9:
return G__31790__9.call(this,self__,a,b,c,d,e,f,g,h);
case 10:
return G__31790__10.call(this,self__,a,b,c,d,e,f,g,h,i);
case 11:
return G__31790__11.call(this,self__,a,b,c,d,e,f,g,h,i,j);
case 12:
return G__31790__12.call(this,self__,a,b,c,d,e,f,g,h,i,j,k);
case 13:
return G__31790__13.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l);
case 14:
return G__31790__14.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m);
case 15:
return G__31790__15.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
case 16:
return G__31790__16.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
case 17:
return G__31790__17.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
case 18:
return G__31790__18.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
case 19:
return G__31790__19.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
case 20:
return G__31790__20.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
case 21:
return G__31790__21.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
case 22:
return G__31790__22.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__31790.cljs$core$IFn$_invoke$arity$1 = G__31790__1;
G__31790.cljs$core$IFn$_invoke$arity$2 = G__31790__2;
G__31790.cljs$core$IFn$_invoke$arity$3 = G__31790__3;
G__31790.cljs$core$IFn$_invoke$arity$4 = G__31790__4;
G__31790.cljs$core$IFn$_invoke$arity$5 = G__31790__5;
G__31790.cljs$core$IFn$_invoke$arity$6 = G__31790__6;
G__31790.cljs$core$IFn$_invoke$arity$7 = G__31790__7;
G__31790.cljs$core$IFn$_invoke$arity$8 = G__31790__8;
G__31790.cljs$core$IFn$_invoke$arity$9 = G__31790__9;
G__31790.cljs$core$IFn$_invoke$arity$10 = G__31790__10;
G__31790.cljs$core$IFn$_invoke$arity$11 = G__31790__11;
G__31790.cljs$core$IFn$_invoke$arity$12 = G__31790__12;
G__31790.cljs$core$IFn$_invoke$arity$13 = G__31790__13;
G__31790.cljs$core$IFn$_invoke$arity$14 = G__31790__14;
G__31790.cljs$core$IFn$_invoke$arity$15 = G__31790__15;
G__31790.cljs$core$IFn$_invoke$arity$16 = G__31790__16;
G__31790.cljs$core$IFn$_invoke$arity$17 = G__31790__17;
G__31790.cljs$core$IFn$_invoke$arity$18 = G__31790__18;
G__31790.cljs$core$IFn$_invoke$arity$19 = G__31790__19;
G__31790.cljs$core$IFn$_invoke$arity$20 = G__31790__20;
G__31790.cljs$core$IFn$_invoke$arity$21 = G__31790__21;
G__31790.cljs$core$IFn$_invoke$arity$22 = G__31790__22;
return G__31790;
})()
;

cljs.core.MultiFn.prototype.apply = (function (self__,args30942){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args30942)));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$0 = (function (){
var self__ = this;
var mf = this;
var dispatch_val = (function (){return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$0 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$0() : self__.dispatch_fn.call(null));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

return (target_fn.cljs$core$IFn$_invoke$arity$0 ? target_fn.cljs$core$IFn$_invoke$arity$0() : target_fn.call(null));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$1 = (function (a){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__31370 = a;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$1 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$1(G__31370) : self__.dispatch_fn.call(null,G__31370));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__31371 = a;
return (target_fn.cljs$core$IFn$_invoke$arity$1 ? target_fn.cljs$core$IFn$_invoke$arity$1(G__31371) : target_fn.call(null,G__31371));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$2 = (function (a,b){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__31372 = a;
var G__31373 = b;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$2 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$2(G__31372,G__31373) : self__.dispatch_fn.call(null,G__31372,G__31373));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__31374 = a;
var G__31375 = b;
return (target_fn.cljs$core$IFn$_invoke$arity$2 ? target_fn.cljs$core$IFn$_invoke$arity$2(G__31374,G__31375) : target_fn.call(null,G__31374,G__31375));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$3 = (function (a,b,c){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__31376 = a;
var G__31377 = b;
var G__31378 = c;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$3 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$3(G__31376,G__31377,G__31378) : self__.dispatch_fn.call(null,G__31376,G__31377,G__31378));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__31379 = a;
var G__31380 = b;
var G__31381 = c;
return (target_fn.cljs$core$IFn$_invoke$arity$3 ? target_fn.cljs$core$IFn$_invoke$arity$3(G__31379,G__31380,G__31381) : target_fn.call(null,G__31379,G__31380,G__31381));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$4 = (function (a,b,c,d){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__31382 = a;
var G__31383 = b;
var G__31384 = c;
var G__31385 = d;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$4 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$4(G__31382,G__31383,G__31384,G__31385) : self__.dispatch_fn.call(null,G__31382,G__31383,G__31384,G__31385));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__31386 = a;
var G__31387 = b;
var G__31388 = c;
var G__31389 = d;
return (target_fn.cljs$core$IFn$_invoke$arity$4 ? target_fn.cljs$core$IFn$_invoke$arity$4(G__31386,G__31387,G__31388,G__31389) : target_fn.call(null,G__31386,G__31387,G__31388,G__31389));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$5 = (function (a,b,c,d,e){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__31390 = a;
var G__31391 = b;
var G__31392 = c;
var G__31393 = d;
var G__31394 = e;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$5 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$5(G__31390,G__31391,G__31392,G__31393,G__31394) : self__.dispatch_fn.call(null,G__31390,G__31391,G__31392,G__31393,G__31394));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__31395 = a;
var G__31396 = b;
var G__31397 = c;
var G__31398 = d;
var G__31399 = e;
return (target_fn.cljs$core$IFn$_invoke$arity$5 ? target_fn.cljs$core$IFn$_invoke$arity$5(G__31395,G__31396,G__31397,G__31398,G__31399) : target_fn.call(null,G__31395,G__31396,G__31397,G__31398,G__31399));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$6 = (function (a,b,c,d,e,f){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__31400 = a;
var G__31401 = b;
var G__31402 = c;
var G__31403 = d;
var G__31404 = e;
var G__31405 = f;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$6 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$6(G__31400,G__31401,G__31402,G__31403,G__31404,G__31405) : self__.dispatch_fn.call(null,G__31400,G__31401,G__31402,G__31403,G__31404,G__31405));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__31406 = a;
var G__31407 = b;
var G__31408 = c;
var G__31409 = d;
var G__31410 = e;
var G__31411 = f;
return (target_fn.cljs$core$IFn$_invoke$arity$6 ? target_fn.cljs$core$IFn$_invoke$arity$6(G__31406,G__31407,G__31408,G__31409,G__31410,G__31411) : target_fn.call(null,G__31406,G__31407,G__31408,G__31409,G__31410,G__31411));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$7 = (function (a,b,c,d,e,f,g){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__31412 = a;
var G__31413 = b;
var G__31414 = c;
var G__31415 = d;
var G__31416 = e;
var G__31417 = f;
var G__31418 = g;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$7 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$7(G__31412,G__31413,G__31414,G__31415,G__31416,G__31417,G__31418) : self__.dispatch_fn.call(null,G__31412,G__31413,G__31414,G__31415,G__31416,G__31417,G__31418));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__31419 = a;
var G__31420 = b;
var G__31421 = c;
var G__31422 = d;
var G__31423 = e;
var G__31424 = f;
var G__31425 = g;
return (target_fn.cljs$core$IFn$_invoke$arity$7 ? target_fn.cljs$core$IFn$_invoke$arity$7(G__31419,G__31420,G__31421,G__31422,G__31423,G__31424,G__31425) : target_fn.call(null,G__31419,G__31420,G__31421,G__31422,G__31423,G__31424,G__31425));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$8 = (function (a,b,c,d,e,f,g,h){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__31426 = a;
var G__31427 = b;
var G__31428 = c;
var G__31429 = d;
var G__31430 = e;
var G__31431 = f;
var G__31432 = g;
var G__31433 = h;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$8 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$8(G__31426,G__31427,G__31428,G__31429,G__31430,G__31431,G__31432,G__31433) : self__.dispatch_fn.call(null,G__31426,G__31427,G__31428,G__31429,G__31430,G__31431,G__31432,G__31433));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__31434 = a;
var G__31435 = b;
var G__31436 = c;
var G__31437 = d;
var G__31438 = e;
var G__31439 = f;
var G__31440 = g;
var G__31441 = h;
return (target_fn.cljs$core$IFn$_invoke$arity$8 ? target_fn.cljs$core$IFn$_invoke$arity$8(G__31434,G__31435,G__31436,G__31437,G__31438,G__31439,G__31440,G__31441) : target_fn.call(null,G__31434,G__31435,G__31436,G__31437,G__31438,G__31439,G__31440,G__31441));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$9 = (function (a,b,c,d,e,f,g,h,i){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__31442 = a;
var G__31443 = b;
var G__31444 = c;
var G__31445 = d;
var G__31446 = e;
var G__31447 = f;
var G__31448 = g;
var G__31449 = h;
var G__31450 = i;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$9 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$9(G__31442,G__31443,G__31444,G__31445,G__31446,G__31447,G__31448,G__31449,G__31450) : self__.dispatch_fn.call(null,G__31442,G__31443,G__31444,G__31445,G__31446,G__31447,G__31448,G__31449,G__31450));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__31451 = a;
var G__31452 = b;
var G__31453 = c;
var G__31454 = d;
var G__31455 = e;
var G__31456 = f;
var G__31457 = g;
var G__31458 = h;
var G__31459 = i;
return (target_fn.cljs$core$IFn$_invoke$arity$9 ? target_fn.cljs$core$IFn$_invoke$arity$9(G__31451,G__31452,G__31453,G__31454,G__31455,G__31456,G__31457,G__31458,G__31459) : target_fn.call(null,G__31451,G__31452,G__31453,G__31454,G__31455,G__31456,G__31457,G__31458,G__31459));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$10 = (function (a,b,c,d,e,f,g,h,i,j){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__31460 = a;
var G__31461 = b;
var G__31462 = c;
var G__31463 = d;
var G__31464 = e;
var G__31465 = f;
var G__31466 = g;
var G__31467 = h;
var G__31468 = i;
var G__31469 = j;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$10 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$10(G__31460,G__31461,G__31462,G__31463,G__31464,G__31465,G__31466,G__31467,G__31468,G__31469) : self__.dispatch_fn.call(null,G__31460,G__31461,G__31462,G__31463,G__31464,G__31465,G__31466,G__31467,G__31468,G__31469));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__31470 = a;
var G__31471 = b;
var G__31472 = c;
var G__31473 = d;
var G__31474 = e;
var G__31475 = f;
var G__31476 = g;
var G__31477 = h;
var G__31478 = i;
var G__31479 = j;
return (target_fn.cljs$core$IFn$_invoke$arity$10 ? target_fn.cljs$core$IFn$_invoke$arity$10(G__31470,G__31471,G__31472,G__31473,G__31474,G__31475,G__31476,G__31477,G__31478,G__31479) : target_fn.call(null,G__31470,G__31471,G__31472,G__31473,G__31474,G__31475,G__31476,G__31477,G__31478,G__31479));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$11 = (function (a,b,c,d,e,f,g,h,i,j,k){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__31480 = a;
var G__31481 = b;
var G__31482 = c;
var G__31483 = d;
var G__31484 = e;
var G__31485 = f;
var G__31486 = g;
var G__31487 = h;
var G__31488 = i;
var G__31489 = j;
var G__31490 = k;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$11 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$11(G__31480,G__31481,G__31482,G__31483,G__31484,G__31485,G__31486,G__31487,G__31488,G__31489,G__31490) : self__.dispatch_fn.call(null,G__31480,G__31481,G__31482,G__31483,G__31484,G__31485,G__31486,G__31487,G__31488,G__31489,G__31490));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__31491 = a;
var G__31492 = b;
var G__31493 = c;
var G__31494 = d;
var G__31495 = e;
var G__31496 = f;
var G__31497 = g;
var G__31498 = h;
var G__31499 = i;
var G__31500 = j;
var G__31501 = k;
return (target_fn.cljs$core$IFn$_invoke$arity$11 ? target_fn.cljs$core$IFn$_invoke$arity$11(G__31491,G__31492,G__31493,G__31494,G__31495,G__31496,G__31497,G__31498,G__31499,G__31500,G__31501) : target_fn.call(null,G__31491,G__31492,G__31493,G__31494,G__31495,G__31496,G__31497,G__31498,G__31499,G__31500,G__31501));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$12 = (function (a,b,c,d,e,f,g,h,i,j,k,l){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__31502 = a;
var G__31503 = b;
var G__31504 = c;
var G__31505 = d;
var G__31506 = e;
var G__31507 = f;
var G__31508 = g;
var G__31509 = h;
var G__31510 = i;
var G__31511 = j;
var G__31512 = k;
var G__31513 = l;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$12 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$12(G__31502,G__31503,G__31504,G__31505,G__31506,G__31507,G__31508,G__31509,G__31510,G__31511,G__31512,G__31513) : self__.dispatch_fn.call(null,G__31502,G__31503,G__31504,G__31505,G__31506,G__31507,G__31508,G__31509,G__31510,G__31511,G__31512,G__31513));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__31514 = a;
var G__31515 = b;
var G__31516 = c;
var G__31517 = d;
var G__31518 = e;
var G__31519 = f;
var G__31520 = g;
var G__31521 = h;
var G__31522 = i;
var G__31523 = j;
var G__31524 = k;
var G__31525 = l;
return (target_fn.cljs$core$IFn$_invoke$arity$12 ? target_fn.cljs$core$IFn$_invoke$arity$12(G__31514,G__31515,G__31516,G__31517,G__31518,G__31519,G__31520,G__31521,G__31522,G__31523,G__31524,G__31525) : target_fn.call(null,G__31514,G__31515,G__31516,G__31517,G__31518,G__31519,G__31520,G__31521,G__31522,G__31523,G__31524,G__31525));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$13 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__31526 = a;
var G__31527 = b;
var G__31528 = c;
var G__31529 = d;
var G__31530 = e;
var G__31531 = f;
var G__31532 = g;
var G__31533 = h;
var G__31534 = i;
var G__31535 = j;
var G__31536 = k;
var G__31537 = l;
var G__31538 = m;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$13 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$13(G__31526,G__31527,G__31528,G__31529,G__31530,G__31531,G__31532,G__31533,G__31534,G__31535,G__31536,G__31537,G__31538) : self__.dispatch_fn.call(null,G__31526,G__31527,G__31528,G__31529,G__31530,G__31531,G__31532,G__31533,G__31534,G__31535,G__31536,G__31537,G__31538));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__31539 = a;
var G__31540 = b;
var G__31541 = c;
var G__31542 = d;
var G__31543 = e;
var G__31544 = f;
var G__31545 = g;
var G__31546 = h;
var G__31547 = i;
var G__31548 = j;
var G__31549 = k;
var G__31550 = l;
var G__31551 = m;
return (target_fn.cljs$core$IFn$_invoke$arity$13 ? target_fn.cljs$core$IFn$_invoke$arity$13(G__31539,G__31540,G__31541,G__31542,G__31543,G__31544,G__31545,G__31546,G__31547,G__31548,G__31549,G__31550,G__31551) : target_fn.call(null,G__31539,G__31540,G__31541,G__31542,G__31543,G__31544,G__31545,G__31546,G__31547,G__31548,G__31549,G__31550,G__31551));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$14 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__31552 = a;
var G__31553 = b;
var G__31554 = c;
var G__31555 = d;
var G__31556 = e;
var G__31557 = f;
var G__31558 = g;
var G__31559 = h;
var G__31560 = i;
var G__31561 = j;
var G__31562 = k;
var G__31563 = l;
var G__31564 = m;
var G__31565 = n;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$14 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$14(G__31552,G__31553,G__31554,G__31555,G__31556,G__31557,G__31558,G__31559,G__31560,G__31561,G__31562,G__31563,G__31564,G__31565) : self__.dispatch_fn.call(null,G__31552,G__31553,G__31554,G__31555,G__31556,G__31557,G__31558,G__31559,G__31560,G__31561,G__31562,G__31563,G__31564,G__31565));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__31566 = a;
var G__31567 = b;
var G__31568 = c;
var G__31569 = d;
var G__31570 = e;
var G__31571 = f;
var G__31572 = g;
var G__31573 = h;
var G__31574 = i;
var G__31575 = j;
var G__31576 = k;
var G__31577 = l;
var G__31578 = m;
var G__31579 = n;
return (target_fn.cljs$core$IFn$_invoke$arity$14 ? target_fn.cljs$core$IFn$_invoke$arity$14(G__31566,G__31567,G__31568,G__31569,G__31570,G__31571,G__31572,G__31573,G__31574,G__31575,G__31576,G__31577,G__31578,G__31579) : target_fn.call(null,G__31566,G__31567,G__31568,G__31569,G__31570,G__31571,G__31572,G__31573,G__31574,G__31575,G__31576,G__31577,G__31578,G__31579));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$15 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__31580 = a;
var G__31581 = b;
var G__31582 = c;
var G__31583 = d;
var G__31584 = e;
var G__31585 = f;
var G__31586 = g;
var G__31587 = h;
var G__31588 = i;
var G__31589 = j;
var G__31590 = k;
var G__31591 = l;
var G__31592 = m;
var G__31593 = n;
var G__31594 = o;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$15 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$15(G__31580,G__31581,G__31582,G__31583,G__31584,G__31585,G__31586,G__31587,G__31588,G__31589,G__31590,G__31591,G__31592,G__31593,G__31594) : self__.dispatch_fn.call(null,G__31580,G__31581,G__31582,G__31583,G__31584,G__31585,G__31586,G__31587,G__31588,G__31589,G__31590,G__31591,G__31592,G__31593,G__31594));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__31595 = a;
var G__31596 = b;
var G__31597 = c;
var G__31598 = d;
var G__31599 = e;
var G__31600 = f;
var G__31601 = g;
var G__31602 = h;
var G__31603 = i;
var G__31604 = j;
var G__31605 = k;
var G__31606 = l;
var G__31607 = m;
var G__31608 = n;
var G__31609 = o;
return (target_fn.cljs$core$IFn$_invoke$arity$15 ? target_fn.cljs$core$IFn$_invoke$arity$15(G__31595,G__31596,G__31597,G__31598,G__31599,G__31600,G__31601,G__31602,G__31603,G__31604,G__31605,G__31606,G__31607,G__31608,G__31609) : target_fn.call(null,G__31595,G__31596,G__31597,G__31598,G__31599,G__31600,G__31601,G__31602,G__31603,G__31604,G__31605,G__31606,G__31607,G__31608,G__31609));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$16 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__31610 = a;
var G__31611 = b;
var G__31612 = c;
var G__31613 = d;
var G__31614 = e;
var G__31615 = f;
var G__31616 = g;
var G__31617 = h;
var G__31618 = i;
var G__31619 = j;
var G__31620 = k;
var G__31621 = l;
var G__31622 = m;
var G__31623 = n;
var G__31624 = o;
var G__31625 = p;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$16 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$16(G__31610,G__31611,G__31612,G__31613,G__31614,G__31615,G__31616,G__31617,G__31618,G__31619,G__31620,G__31621,G__31622,G__31623,G__31624,G__31625) : self__.dispatch_fn.call(null,G__31610,G__31611,G__31612,G__31613,G__31614,G__31615,G__31616,G__31617,G__31618,G__31619,G__31620,G__31621,G__31622,G__31623,G__31624,G__31625));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__31626 = a;
var G__31627 = b;
var G__31628 = c;
var G__31629 = d;
var G__31630 = e;
var G__31631 = f;
var G__31632 = g;
var G__31633 = h;
var G__31634 = i;
var G__31635 = j;
var G__31636 = k;
var G__31637 = l;
var G__31638 = m;
var G__31639 = n;
var G__31640 = o;
var G__31641 = p;
return (target_fn.cljs$core$IFn$_invoke$arity$16 ? target_fn.cljs$core$IFn$_invoke$arity$16(G__31626,G__31627,G__31628,G__31629,G__31630,G__31631,G__31632,G__31633,G__31634,G__31635,G__31636,G__31637,G__31638,G__31639,G__31640,G__31641) : target_fn.call(null,G__31626,G__31627,G__31628,G__31629,G__31630,G__31631,G__31632,G__31633,G__31634,G__31635,G__31636,G__31637,G__31638,G__31639,G__31640,G__31641));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$17 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__31642 = a;
var G__31643 = b;
var G__31644 = c;
var G__31645 = d;
var G__31646 = e;
var G__31647 = f;
var G__31648 = g;
var G__31649 = h;
var G__31650 = i;
var G__31651 = j;
var G__31652 = k;
var G__31653 = l;
var G__31654 = m;
var G__31655 = n;
var G__31656 = o;
var G__31657 = p;
var G__31658 = q;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$17 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$17(G__31642,G__31643,G__31644,G__31645,G__31646,G__31647,G__31648,G__31649,G__31650,G__31651,G__31652,G__31653,G__31654,G__31655,G__31656,G__31657,G__31658) : self__.dispatch_fn.call(null,G__31642,G__31643,G__31644,G__31645,G__31646,G__31647,G__31648,G__31649,G__31650,G__31651,G__31652,G__31653,G__31654,G__31655,G__31656,G__31657,G__31658));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__31659 = a;
var G__31660 = b;
var G__31661 = c;
var G__31662 = d;
var G__31663 = e;
var G__31664 = f;
var G__31665 = g;
var G__31666 = h;
var G__31667 = i;
var G__31668 = j;
var G__31669 = k;
var G__31670 = l;
var G__31671 = m;
var G__31672 = n;
var G__31673 = o;
var G__31674 = p;
var G__31675 = q;
return (target_fn.cljs$core$IFn$_invoke$arity$17 ? target_fn.cljs$core$IFn$_invoke$arity$17(G__31659,G__31660,G__31661,G__31662,G__31663,G__31664,G__31665,G__31666,G__31667,G__31668,G__31669,G__31670,G__31671,G__31672,G__31673,G__31674,G__31675) : target_fn.call(null,G__31659,G__31660,G__31661,G__31662,G__31663,G__31664,G__31665,G__31666,G__31667,G__31668,G__31669,G__31670,G__31671,G__31672,G__31673,G__31674,G__31675));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$18 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__31676 = a;
var G__31677 = b;
var G__31678 = c;
var G__31679 = d;
var G__31680 = e;
var G__31681 = f;
var G__31682 = g;
var G__31683 = h;
var G__31684 = i;
var G__31685 = j;
var G__31686 = k;
var G__31687 = l;
var G__31688 = m;
var G__31689 = n;
var G__31690 = o;
var G__31691 = p;
var G__31692 = q;
var G__31693 = r;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$18 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$18(G__31676,G__31677,G__31678,G__31679,G__31680,G__31681,G__31682,G__31683,G__31684,G__31685,G__31686,G__31687,G__31688,G__31689,G__31690,G__31691,G__31692,G__31693) : self__.dispatch_fn.call(null,G__31676,G__31677,G__31678,G__31679,G__31680,G__31681,G__31682,G__31683,G__31684,G__31685,G__31686,G__31687,G__31688,G__31689,G__31690,G__31691,G__31692,G__31693));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__31694 = a;
var G__31695 = b;
var G__31696 = c;
var G__31697 = d;
var G__31698 = e;
var G__31699 = f;
var G__31700 = g;
var G__31701 = h;
var G__31702 = i;
var G__31703 = j;
var G__31704 = k;
var G__31705 = l;
var G__31706 = m;
var G__31707 = n;
var G__31708 = o;
var G__31709 = p;
var G__31710 = q;
var G__31711 = r;
return (target_fn.cljs$core$IFn$_invoke$arity$18 ? target_fn.cljs$core$IFn$_invoke$arity$18(G__31694,G__31695,G__31696,G__31697,G__31698,G__31699,G__31700,G__31701,G__31702,G__31703,G__31704,G__31705,G__31706,G__31707,G__31708,G__31709,G__31710,G__31711) : target_fn.call(null,G__31694,G__31695,G__31696,G__31697,G__31698,G__31699,G__31700,G__31701,G__31702,G__31703,G__31704,G__31705,G__31706,G__31707,G__31708,G__31709,G__31710,G__31711));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$19 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__31712 = a;
var G__31713 = b;
var G__31714 = c;
var G__31715 = d;
var G__31716 = e;
var G__31717 = f;
var G__31718 = g;
var G__31719 = h;
var G__31720 = i;
var G__31721 = j;
var G__31722 = k;
var G__31723 = l;
var G__31724 = m;
var G__31725 = n;
var G__31726 = o;
var G__31727 = p;
var G__31728 = q;
var G__31729 = r;
var G__31730 = s;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$19 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$19(G__31712,G__31713,G__31714,G__31715,G__31716,G__31717,G__31718,G__31719,G__31720,G__31721,G__31722,G__31723,G__31724,G__31725,G__31726,G__31727,G__31728,G__31729,G__31730) : self__.dispatch_fn.call(null,G__31712,G__31713,G__31714,G__31715,G__31716,G__31717,G__31718,G__31719,G__31720,G__31721,G__31722,G__31723,G__31724,G__31725,G__31726,G__31727,G__31728,G__31729,G__31730));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__31731 = a;
var G__31732 = b;
var G__31733 = c;
var G__31734 = d;
var G__31735 = e;
var G__31736 = f;
var G__31737 = g;
var G__31738 = h;
var G__31739 = i;
var G__31740 = j;
var G__31741 = k;
var G__31742 = l;
var G__31743 = m;
var G__31744 = n;
var G__31745 = o;
var G__31746 = p;
var G__31747 = q;
var G__31748 = r;
var G__31749 = s;
return (target_fn.cljs$core$IFn$_invoke$arity$19 ? target_fn.cljs$core$IFn$_invoke$arity$19(G__31731,G__31732,G__31733,G__31734,G__31735,G__31736,G__31737,G__31738,G__31739,G__31740,G__31741,G__31742,G__31743,G__31744,G__31745,G__31746,G__31747,G__31748,G__31749) : target_fn.call(null,G__31731,G__31732,G__31733,G__31734,G__31735,G__31736,G__31737,G__31738,G__31739,G__31740,G__31741,G__31742,G__31743,G__31744,G__31745,G__31746,G__31747,G__31748,G__31749));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$20 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__31750 = a;
var G__31751 = b;
var G__31752 = c;
var G__31753 = d;
var G__31754 = e;
var G__31755 = f;
var G__31756 = g;
var G__31757 = h;
var G__31758 = i;
var G__31759 = j;
var G__31760 = k;
var G__31761 = l;
var G__31762 = m;
var G__31763 = n;
var G__31764 = o;
var G__31765 = p;
var G__31766 = q;
var G__31767 = r;
var G__31768 = s;
var G__31769 = t;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$20 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$20(G__31750,G__31751,G__31752,G__31753,G__31754,G__31755,G__31756,G__31757,G__31758,G__31759,G__31760,G__31761,G__31762,G__31763,G__31764,G__31765,G__31766,G__31767,G__31768,G__31769) : self__.dispatch_fn.call(null,G__31750,G__31751,G__31752,G__31753,G__31754,G__31755,G__31756,G__31757,G__31758,G__31759,G__31760,G__31761,G__31762,G__31763,G__31764,G__31765,G__31766,G__31767,G__31768,G__31769));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__31770 = a;
var G__31771 = b;
var G__31772 = c;
var G__31773 = d;
var G__31774 = e;
var G__31775 = f;
var G__31776 = g;
var G__31777 = h;
var G__31778 = i;
var G__31779 = j;
var G__31780 = k;
var G__31781 = l;
var G__31782 = m;
var G__31783 = n;
var G__31784 = o;
var G__31785 = p;
var G__31786 = q;
var G__31787 = r;
var G__31788 = s;
var G__31789 = t;
return (target_fn.cljs$core$IFn$_invoke$arity$20 ? target_fn.cljs$core$IFn$_invoke$arity$20(G__31770,G__31771,G__31772,G__31773,G__31774,G__31775,G__31776,G__31777,G__31778,G__31779,G__31780,G__31781,G__31782,G__31783,G__31784,G__31785,G__31786,G__31787,G__31788,G__31789) : target_fn.call(null,G__31770,G__31771,G__31772,G__31773,G__31774,G__31775,G__31776,G__31777,G__31778,G__31779,G__31780,G__31781,G__31782,G__31783,G__31784,G__31785,G__31786,G__31787,G__31788,G__31789));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$21 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
var self__ = this;
var mf = this;
var dispatch_val = cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(self__.dispatch_fn,a,b,c,d,cljs.core.array_seq([e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest], 0));
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(target_fn,a,b,c,d,cljs.core.array_seq([e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest], 0));
});

cljs.core.MultiFn.cljs$lang$type = true;

cljs.core.MultiFn.cljs$lang$ctorStr = "cljs.core/MultiFn";

cljs.core.MultiFn.cljs$lang$ctorPrWriter = (function (this__24861__auto__,writer__24862__auto__,opt__24863__auto__){
return cljs.core._write(writer__24862__auto__,"cljs.core/MultiFn");
});

cljs.core.__GT_MultiFn = (function __GT_MultiFn(name,dispatch_fn,default_dispatch_val,hierarchy,method_table,prefer_table,method_cache,cached_hierarchy){
return (new cljs.core.MultiFn(name,dispatch_fn,default_dispatch_val,hierarchy,method_table,prefer_table,method_cache,cached_hierarchy));
});

/**
* Removes all of the methods of multimethod.
*/
cljs.core.remove_all_methods = (function remove_all_methods(multifn){
return cljs.core._reset(multifn);
});
/**
* Removes the method of multimethod associated with dispatch-value.
*/
cljs.core.remove_method = (function remove_method(multifn,dispatch_val){
return cljs.core._remove_method(multifn,dispatch_val);
});
/**
* Causes the multimethod to prefer matches of dispatch-val-x over dispatch-val-y
* when there is a conflict
*/
cljs.core.prefer_method = (function prefer_method(multifn,dispatch_val_x,dispatch_val_y){
return cljs.core._prefer_method(multifn,dispatch_val_x,dispatch_val_y);
});
/**
* Given a multimethod, returns a map of dispatch values -> dispatch fns
*/
cljs.core.methods$ = (function methods$(multifn){
return cljs.core._methods(multifn);
});
/**
* Given a multimethod and a dispatch value, returns the dispatch fn
* that would apply to that value, or nil if none apply and no default
*/
cljs.core.get_method = (function get_method(multifn,dispatch_val){
return cljs.core._get_method(multifn,dispatch_val);
});
/**
* Given a multimethod, returns a map of preferred value -> set of other values
*/
cljs.core.prefers = (function prefers(multifn){
return cljs.core._prefers(multifn);
});

/**
* @constructor
*/
cljs.core.UUID = (function (uuid){
this.uuid = uuid;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 2153775104;
})
cljs.core.UUID.prototype.cljs$core$IHash$_hash$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
var G__31791 = cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([this$__$1], 0));
return goog.string.hashCode(G__31791);
});

cljs.core.UUID.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (_,writer,___$1){
var self__ = this;
var ___$2 = this;
return cljs.core._write(writer,[cljs.core.str("#uuid \""),cljs.core.str(self__.uuid),cljs.core.str("\"")].join(''));
});

cljs.core.UUID.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (_,other){
var self__ = this;
var ___$1 = this;
return ((other instanceof cljs.core.UUID)) && ((self__.uuid === other.uuid));
});

cljs.core.UUID.prototype.toString = (function (){
var self__ = this;
var _ = this;
return self__.uuid;
});

cljs.core.UUID.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.UUID.cljs$lang$type = true;

cljs.core.UUID.cljs$lang$ctorStr = "cljs.core/UUID";

cljs.core.UUID.cljs$lang$ctorPrWriter = (function (this__24861__auto__,writer__24862__auto__,opt__24863__auto__){
return cljs.core._write(writer__24862__auto__,"cljs.core/UUID");
});

cljs.core.__GT_UUID = (function __GT_UUID(uuid){
return (new cljs.core.UUID(uuid));
});


/**
* @constructor
*/
cljs.core.ExceptionInfo = (function (message,data,cause){
this.message = message;
this.data = data;
this.cause = cause;
})

cljs.core.ExceptionInfo.cljs$lang$type = true;

cljs.core.ExceptionInfo.cljs$lang$ctorStr = "cljs.core/ExceptionInfo";

cljs.core.ExceptionInfo.cljs$lang$ctorPrWriter = (function (this__24861__auto__,writer__24862__auto__,opt__24863__auto__){
return cljs.core._write(writer__24862__auto__,"cljs.core/ExceptionInfo");
});

cljs.core.__GT_ExceptionInfo = (function __GT_ExceptionInfo(message,data,cause){
return (new cljs.core.ExceptionInfo(message,data,cause));
});

cljs.core.ExceptionInfo.prototype = (new Error());
cljs.core.ExceptionInfo.prototype.constructor = cljs.core.ExceptionInfo;
/**
* Alpha - subject to change.
* Create an instance of ExceptionInfo, an Error type that carries a
* map of additional data.
*/
cljs.core.ex_info = (function() {
var ex_info = null;
var ex_info__2 = (function (msg,map){
return (new cljs.core.ExceptionInfo(msg,map,null));
});
var ex_info__3 = (function (msg,map,cause){
return (new cljs.core.ExceptionInfo(msg,map,cause));
});
ex_info = function(msg,map,cause){
switch(arguments.length){
case 2:
return ex_info__2.call(this,msg,map);
case 3:
return ex_info__3.call(this,msg,map,cause);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
ex_info.cljs$core$IFn$_invoke$arity$2 = ex_info__2;
ex_info.cljs$core$IFn$_invoke$arity$3 = ex_info__3;
return ex_info;
})()
;
/**
* Alpha - subject to change.
* Returns exception data (a map) if ex is an ExceptionInfo.
* Otherwise returns nil.
*/
cljs.core.ex_data = (function ex_data(ex){
if((ex instanceof cljs.core.ExceptionInfo)){
return ex.data;
} else {
return null;
}
});
/**
* Alpha - subject to change.
* Returns the message attached to the given Error / ExceptionInfo object.
* For non-Errors returns nil.
*/
cljs.core.ex_message = (function ex_message(ex){
if((ex instanceof Error)){
return ex.message;
} else {
return null;
}
});
/**
* Alpha - subject to change.
* Returns exception cause (an Error / ExceptionInfo) if ex is an
* ExceptionInfo.
* Otherwise returns nil.
*/
cljs.core.ex_cause = (function ex_cause(ex){
if((ex instanceof cljs.core.ExceptionInfo)){
return ex.cause;
} else {
return null;
}
});
/**
* Returns an JavaScript compatible comparator based upon pred.
*/
cljs.core.comparator = (function comparator(pred){
return (function (x,y){
if(cljs.core.truth_((function (){var G__31796 = x;
var G__31797 = y;
return (pred.cljs$core$IFn$_invoke$arity$2 ? pred.cljs$core$IFn$_invoke$arity$2(G__31796,G__31797) : pred.call(null,G__31796,G__31797));
})())){
return (-1);
} else {
if(cljs.core.truth_((function (){var G__31798 = y;
var G__31799 = x;
return (pred.cljs$core$IFn$_invoke$arity$2 ? pred.cljs$core$IFn$_invoke$arity$2(G__31798,G__31799) : pred.call(null,G__31798,G__31799));
})())){
return (1);
} else {
return (0);

}
}
});
});
cljs.core.special_symbol_QMARK_ = (function special_symbol_QMARK_(x){
return cljs.core.contains_QMARK_(new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 19, [new cljs.core.Symbol(null,"&","&",-2144855648,null),null,new cljs.core.Symbol(null,"defrecord*","defrecord*",-1936366207,null),null,new cljs.core.Symbol(null,"try","try",-1273693247,null),null,new cljs.core.Symbol(null,"loop*","loop*",615029416,null),null,new cljs.core.Symbol(null,"do","do",1686842252,null),null,new cljs.core.Symbol(null,"letfn*","letfn*",-110097810,null),null,new cljs.core.Symbol(null,"if","if",1181717262,null),null,new cljs.core.Symbol(null,"new","new",-444906321,null),null,new cljs.core.Symbol(null,"ns","ns",2082130287,null),null,new cljs.core.Symbol(null,"deftype*","deftype*",962659890,null),null,new cljs.core.Symbol(null,"let*","let*",1920721458,null),null,new cljs.core.Symbol(null,"js*","js*",-1134233646,null),null,new cljs.core.Symbol(null,"fn*","fn*",-752876845,null),null,new cljs.core.Symbol(null,"recur","recur",1202958259,null),null,new cljs.core.Symbol(null,"set!","set!",250714521,null),null,new cljs.core.Symbol(null,".",".",1975675962,null),null,new cljs.core.Symbol(null,"quote","quote",1377916282,null),null,new cljs.core.Symbol(null,"throw","throw",595905694,null),null,new cljs.core.Symbol(null,"def","def",597100991,null),null], null), null),x);
});
/**
* test [v] finds fn at key :test in var metadata and calls it,
* presuming failure will throw exception
*/
cljs.core.test = (function test(v){
var f = v.cljs$lang$test;
if(cljs.core.truth_(f)){
(f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));

return new cljs.core.Keyword(null,"ok","ok",967785236);
} else {
return new cljs.core.Keyword(null,"no-test","no-test",-1679482642);
}
});
