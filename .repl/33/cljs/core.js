// Compiled by ClojureScript 0.0-2665 {:static-fns true}
goog.provide('cljs.core');
goog.require('goog.string.StringBuffer');
goog.require('goog.array');
goog.require('goog.object');
goog.require('goog.string');
cljs.core._STAR_clojurescript_version_STAR_ = "0.0-2665";
cljs.core._STAR_unchecked_if_STAR_ = false;
if(typeof cljs.core._STAR_print_fn_STAR_ !== 'undefined'){
} else {
/**
* Each runtime environment provides a different way to print output.
* Whatever function *print-fn* is bound to will be passed any
* Strings which should be printed.
*/
cljs.core._STAR_print_fn_STAR_ = (function _STAR_print_fn_STAR_(_){
throw (new Error("No *print-fn* fn set for evaluation environment"));
});
}
/**
* Set *print-fn* to f.
*/
cljs.core.set_print_fn_BANG_ = (function set_print_fn_BANG_(f){
return cljs.core._STAR_print_fn_STAR_ = f;
});
cljs.core._STAR_flush_on_newline_STAR_ = true;
cljs.core._STAR_print_newline_STAR_ = true;
cljs.core._STAR_print_readably_STAR_ = true;
cljs.core._STAR_print_meta_STAR_ = false;
cljs.core._STAR_print_dup_STAR_ = false;
cljs.core._STAR_print_length_STAR_ = null;
cljs.core._STAR_print_level_STAR_ = null;
if(typeof cljs.core._STAR_loaded_libs_STAR_ !== 'undefined'){
} else {
cljs.core._STAR_loaded_libs_STAR_ = null;
}
cljs.core.pr_opts = (function pr_opts(){
return new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null,"flush-on-newline","flush-on-newline",-151457939),cljs.core._STAR_flush_on_newline_STAR_,new cljs.core.Keyword(null,"readably","readably",1129599760),cljs.core._STAR_print_readably_STAR_,new cljs.core.Keyword(null,"meta","meta",1499536964),cljs.core._STAR_print_meta_STAR_,new cljs.core.Keyword(null,"dup","dup",556298533),cljs.core._STAR_print_dup_STAR_,new cljs.core.Keyword(null,"print-length","print-length",1931866356),cljs.core._STAR_print_length_STAR_], null);
});
/**
* Set *print-fn* to console.log
*/
cljs.core.enable_console_print_BANG_ = (function enable_console_print_BANG_(){
cljs.core._STAR_print_newline_STAR_ = false;

return cljs.core._STAR_print_fn_STAR_ = (function() { 
var G__27876__delegate = function (args){
return console.log.apply(console,(function (){var G__27874 = args;
return (cljs.core.into_array.cljs$core$IFn$_invoke$arity$1 ? cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(G__27874) : cljs.core.into_array.call(null,G__27874));
})());
};
var G__27876 = function (var_args){
var args = null;
if (arguments.length > 0) {
var G__27878__i = 0, G__27878__a = new Array(arguments.length -  0);
while (G__27878__i < G__27878__a.length) {G__27878__a[G__27878__i] = arguments[G__27878__i + 0]; ++G__27878__i;}
  args = new cljs.core.IndexedSeq(G__27878__a,0);
} 
return G__27876__delegate.call(this,args);};
G__27876.cljs$lang$maxFixedArity = 0;
G__27876.cljs$lang$applyTo = (function (arglist__27880){
var args = cljs.core.seq(arglist__27880);
return G__27876__delegate(args);
});
G__27876.cljs$core$IFn$_invoke$arity$variadic = G__27876__delegate;
return G__27876;
})()
;
});
/**
* Internal - do not use!
*/
cljs.core.truth_ = (function truth_(x){
return (x != null && x !== false);
});
cljs.core.not_native = null;

/**
* Tests if 2 arguments are the same object
*/
cljs.core.identical_QMARK_ = (function identical_QMARK_(x,y){
return (x === y);
});
/**
* Returns true if x is nil, false otherwise.
*/
cljs.core.nil_QMARK_ = (function nil_QMARK_(x){
return (x == null);
});
cljs.core.array_QMARK_ = (function array_QMARK_(x){
return x instanceof Array;
});
cljs.core.number_QMARK_ = (function number_QMARK_(n){
return typeof n === 'number';
});
/**
* Returns true if x is logical false, false otherwise.
*/
cljs.core.not = (function not(x){
if(cljs.core.truth_(x)){
return false;
} else {
return true;
}
});
/**
* Returns true if x is not nil, false otherwise.
*/
cljs.core.some_QMARK_ = (function some_QMARK_(x){
return !((x == null));
});
cljs.core.object_QMARK_ = (function object_QMARK_(x){
if(!((x == null))){
return (x.constructor === Object);
} else {
return false;
}
});
cljs.core.string_QMARK_ = (function string_QMARK_(x){
var G__27902 = x;
return goog.isString(G__27902);
});
/**
* Internal - do not use!
*/
cljs.core.native_satisfies_QMARK_ = (function native_satisfies_QMARK_(p,x){
var x__$1 = (((x == null))?null:x);
if((p[(function (){var G__27909 = x__$1;
return goog.typeOf(G__27909);
})()])){
return true;
} else {
if((p["_"])){
return true;
} else {
return false;

}
}
});
cljs.core.is_proto_ = (function is_proto_(x){
return (x.constructor.prototype === x);
});
/**
* When compiled for a command-line target, whatever
* function *main-fn* is set to will be called with the command-line
* argv as arguments
*/
cljs.core._STAR_main_cli_fn_STAR_ = null;
cljs.core.type = (function type(x){
if((x == null)){
return null;
} else {
return x.constructor;
}
});
cljs.core.missing_protocol = (function missing_protocol(proto,obj){
var ty = cljs.core.type(obj);
var ty__$1 = (cljs.core.truth_((function (){var and__24262__auto__ = ty;
if(cljs.core.truth_(and__24262__auto__)){
return ty.cljs$lang$type;
} else {
return and__24262__auto__;
}
})())?ty.cljs$lang$ctorStr:(function (){var G__27929 = obj;
return goog.typeOf(G__27929);
})());
return (new Error(["No protocol method ",proto," defined for type ",ty__$1,": ",obj].join("")));
});
cljs.core.type__GT_str = (function type__GT_str(ty){
var temp__4124__auto__ = ty.cljs$lang$ctorStr;
if(cljs.core.truth_(temp__4124__auto__)){
var s = temp__4124__auto__;
return s;
} else {
return [cljs.core.str(ty)].join('');
}
});
if((typeof Symbol !== 'undefined') && (((function (){var G__27935 = Symbol;
return goog.typeOf(G__27935);
})() === "function"))){
cljs.core.ITER_SYMBOL = Symbol.iterator;
} else {
cljs.core.ITER_SYMBOL = "@@iterator";
}
cljs.core.make_array = (function() {
var make_array = null;
var make_array__1 = (function (size){
return (new Array(size));
});
var make_array__2 = (function (type,size){
return make_array.cljs$core$IFn$_invoke$arity$1(size);
});
make_array = function(type,size){
switch(arguments.length){
case 1:
return make_array__1.call(this,type);
case 2:
return make_array__2.call(this,type,size);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
make_array.cljs$core$IFn$_invoke$arity$1 = make_array__1;
make_array.cljs$core$IFn$_invoke$arity$2 = make_array__2;
return make_array;
})()
;
/**
* Returns a javascript array, cloned from the passed in array
*/
cljs.core.aclone = (function aclone(arr){
var len = arr.length;
var new_arr = (new Array(len));
var n__25161__auto___27943 = len;
var i_27944 = (0);
while(true){
if((i_27944 < n__25161__auto___27943)){
(new_arr[i_27944] = (arr[i_27944]));

var G__27945 = (i_27944 + (1));
i_27944 = G__27945;
continue;
} else {
}
break;
}

return new_arr;
});
/**
* Creates a new javascript array.
* @param {...*} var_args
*/
cljs.core.array = (function array(var_args){
var a = (new Array(arguments.length));
var i = (0);
while(true){
if((i < a.length)){
(a[i] = (arguments[i]));

var G__27946 = (i + (1));
i = G__27946;
continue;
} else {
return a;
}
break;
}
});
/**
* Returns the value at the index.
* @param {...*} var_args
*/
cljs.core.aget = (function() {
var aget = null;
var aget__2 = (function (array,i){
return (array[i]);
});
var aget__3 = (function() { 
var G__27955__delegate = function (array,i,idxs){
var G__27952 = aget;
var G__27953 = aget.cljs$core$IFn$_invoke$arity$2(array,i);
var G__27954 = idxs;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$3 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$3(G__27952,G__27953,G__27954) : cljs.core.apply.call(null,G__27952,G__27953,G__27954));
};
var G__27955 = function (array,i,var_args){
var idxs = null;
if (arguments.length > 2) {
var G__27956__i = 0, G__27956__a = new Array(arguments.length -  2);
while (G__27956__i < G__27956__a.length) {G__27956__a[G__27956__i] = arguments[G__27956__i + 2]; ++G__27956__i;}
  idxs = new cljs.core.IndexedSeq(G__27956__a,0);
} 
return G__27955__delegate.call(this,array,i,idxs);};
G__27955.cljs$lang$maxFixedArity = 2;
G__27955.cljs$lang$applyTo = (function (arglist__27957){
var array = cljs.core.first(arglist__27957);
arglist__27957 = cljs.core.next(arglist__27957);
var i = cljs.core.first(arglist__27957);
var idxs = cljs.core.rest(arglist__27957);
return G__27955__delegate(array,i,idxs);
});
G__27955.cljs$core$IFn$_invoke$arity$variadic = G__27955__delegate;
return G__27955;
})()
;
aget = function(array,i,var_args){
var idxs = var_args;
switch(arguments.length){
case 2:
return aget__2.call(this,array,i);
default:
var G__27958 = null;
if (arguments.length > 2) {
var G__27959__i = 0, G__27959__a = new Array(arguments.length -  2);
while (G__27959__i < G__27959__a.length) {G__27959__a[G__27959__i] = arguments[G__27959__i + 2]; ++G__27959__i;}
G__27958 = new cljs.core.IndexedSeq(G__27959__a,0);
}
return aget__3.cljs$core$IFn$_invoke$arity$variadic(array,i, G__27958);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
aget.cljs$lang$maxFixedArity = 2;
aget.cljs$lang$applyTo = aget__3.cljs$lang$applyTo;
aget.cljs$core$IFn$_invoke$arity$2 = aget__2;
aget.cljs$core$IFn$_invoke$arity$variadic = aget__3.cljs$core$IFn$_invoke$arity$variadic;
return aget;
})()
;
/**
* Sets the value at the index.
* @param {...*} var_args
*/
cljs.core.aset = (function() {
var aset = null;
var aset__3 = (function (array,i,val){
return (array[i] = val);
});
var aset__4 = (function() { 
var G__27968__delegate = function (array,idx,idx2,idxv){
var G__27964 = aset;
var G__27965 = (array[idx]);
var G__27966 = idx2;
var G__27967 = idxv;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$4 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$4(G__27964,G__27965,G__27966,G__27967) : cljs.core.apply.call(null,G__27964,G__27965,G__27966,G__27967));
};
var G__27968 = function (array,idx,idx2,var_args){
var idxv = null;
if (arguments.length > 3) {
var G__27969__i = 0, G__27969__a = new Array(arguments.length -  3);
while (G__27969__i < G__27969__a.length) {G__27969__a[G__27969__i] = arguments[G__27969__i + 3]; ++G__27969__i;}
  idxv = new cljs.core.IndexedSeq(G__27969__a,0);
} 
return G__27968__delegate.call(this,array,idx,idx2,idxv);};
G__27968.cljs$lang$maxFixedArity = 3;
G__27968.cljs$lang$applyTo = (function (arglist__27970){
var array = cljs.core.first(arglist__27970);
arglist__27970 = cljs.core.next(arglist__27970);
var idx = cljs.core.first(arglist__27970);
arglist__27970 = cljs.core.next(arglist__27970);
var idx2 = cljs.core.first(arglist__27970);
var idxv = cljs.core.rest(arglist__27970);
return G__27968__delegate(array,idx,idx2,idxv);
});
G__27968.cljs$core$IFn$_invoke$arity$variadic = G__27968__delegate;
return G__27968;
})()
;
aset = function(array,idx,idx2,var_args){
var idxv = var_args;
switch(arguments.length){
case 3:
return aset__3.call(this,array,idx,idx2);
default:
var G__27971 = null;
if (arguments.length > 3) {
var G__27972__i = 0, G__27972__a = new Array(arguments.length -  3);
while (G__27972__i < G__27972__a.length) {G__27972__a[G__27972__i] = arguments[G__27972__i + 3]; ++G__27972__i;}
G__27971 = new cljs.core.IndexedSeq(G__27972__a,0);
}
return aset__4.cljs$core$IFn$_invoke$arity$variadic(array,idx,idx2, G__27971);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
aset.cljs$lang$maxFixedArity = 3;
aset.cljs$lang$applyTo = aset__4.cljs$lang$applyTo;
aset.cljs$core$IFn$_invoke$arity$3 = aset__3;
aset.cljs$core$IFn$_invoke$arity$variadic = aset__4.cljs$core$IFn$_invoke$arity$variadic;
return aset;
})()
;
/**
* Returns the length of the array. Works on arrays of all types.
*/
cljs.core.alength = (function alength(array){
return array.length;
});
cljs.core.into_array = (function() {
var into_array = null;
var into_array__1 = (function (aseq){
return into_array.cljs$core$IFn$_invoke$arity$2(null,aseq);
});
var into_array__2 = (function (type,aseq){
var G__27978 = (function (a,x){
a.push(x);

return a;
});
var G__27979 = [];
var G__27980 = aseq;
return (cljs.core.reduce.cljs$core$IFn$_invoke$arity$3 ? cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(G__27978,G__27979,G__27980) : cljs.core.reduce.call(null,G__27978,G__27979,G__27980));
});
into_array = function(type,aseq){
switch(arguments.length){
case 1:
return into_array__1.call(this,type);
case 2:
return into_array__2.call(this,type,aseq);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
into_array.cljs$core$IFn$_invoke$arity$1 = into_array__1;
into_array.cljs$core$IFn$_invoke$arity$2 = into_array__2;
return into_array;
})()
;
/**
* Invoke JavaScript object method via string. Needed when the
* string is not a valid unquoted property name.
* @param {...*} var_args
*/
cljs.core.js_invoke = (function() { 
var js_invoke__delegate = function (obj,s,args){
return (obj[s]).apply(obj,cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(args));
};
var js_invoke = function (obj,s,var_args){
var args = null;
if (arguments.length > 2) {
var G__27981__i = 0, G__27981__a = new Array(arguments.length -  2);
while (G__27981__i < G__27981__a.length) {G__27981__a[G__27981__i] = arguments[G__27981__i + 2]; ++G__27981__i;}
  args = new cljs.core.IndexedSeq(G__27981__a,0);
} 
return js_invoke__delegate.call(this,obj,s,args);};
js_invoke.cljs$lang$maxFixedArity = 2;
js_invoke.cljs$lang$applyTo = (function (arglist__27982){
var obj = cljs.core.first(arglist__27982);
arglist__27982 = cljs.core.next(arglist__27982);
var s = cljs.core.first(arglist__27982);
var args = cljs.core.rest(arglist__27982);
return js_invoke__delegate(obj,s,args);
});
js_invoke.cljs$core$IFn$_invoke$arity$variadic = js_invoke__delegate;
return js_invoke;
})()
;

cljs.core.Fn = (function (){var obj27984 = {};
return obj27984;
})();


cljs.core.IFn = (function (){var obj27986 = {};
return obj27986;
})();

cljs.core._invoke = (function() {
var _invoke = null;
var _invoke__1 = (function (this$){
if((function (){var and__24262__auto__ = this$;
if(and__24262__auto__){
return this$.cljs$core$IFn$_invoke$arity$1;
} else {
return and__24262__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$1(this$);
} else {
var x__24918__auto__ = (((this$ == null))?null:this$);
return (function (){var or__24274__auto__ = (cljs.core._invoke[(function (){var G__28032 = x__24918__auto__;
return goog.typeOf(G__28032);
})()]);
if(or__24274__auto__){
return or__24274__auto__;
} else {
var or__24274__auto____$1 = (cljs.core._invoke["_"]);
if(or__24274__auto____$1){
return or__24274__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$);
}
});
var _invoke__2 = (function (this$,a){
if((function (){var and__24262__auto__ = this$;
if(and__24262__auto__){
return this$.cljs$core$IFn$_invoke$arity$2;
} else {
return and__24262__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$2(this$,a);
} else {
var x__24918__auto__ = (((this$ == null))?null:this$);
return (function (){var or__24274__auto__ = (cljs.core._invoke[(function (){var G__28034 = x__24918__auto__;
return goog.typeOf(G__28034);
})()]);
if(or__24274__auto__){
return or__24274__auto__;
} else {
var or__24274__auto____$1 = (cljs.core._invoke["_"]);
if(or__24274__auto____$1){
return or__24274__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a);
}
});
var _invoke__3 = (function (this$,a,b){
if((function (){var and__24262__auto__ = this$;
if(and__24262__auto__){
return this$.cljs$core$IFn$_invoke$arity$3;
} else {
return and__24262__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$3(this$,a,b);
} else {
var x__24918__auto__ = (((this$ == null))?null:this$);
return (function (){var or__24274__auto__ = (cljs.core._invoke[(function (){var G__28036 = x__24918__auto__;
return goog.typeOf(G__28036);
})()]);
if(or__24274__auto__){
return or__24274__auto__;
} else {
var or__24274__auto____$1 = (cljs.core._invoke["_"]);
if(or__24274__auto____$1){
return or__24274__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b);
}
});
var _invoke__4 = (function (this$,a,b,c){
if((function (){var and__24262__auto__ = this$;
if(and__24262__auto__){
return this$.cljs$core$IFn$_invoke$arity$4;
} else {
return and__24262__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$4(this$,a,b,c);
} else {
var x__24918__auto__ = (((this$ == null))?null:this$);
return (function (){var or__24274__auto__ = (cljs.core._invoke[(function (){var G__28038 = x__24918__auto__;
return goog.typeOf(G__28038);
})()]);
if(or__24274__auto__){
return or__24274__auto__;
} else {
var or__24274__auto____$1 = (cljs.core._invoke["_"]);
if(or__24274__auto____$1){
return or__24274__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c);
}
});
var _invoke__5 = (function (this$,a,b,c,d){
if((function (){var and__24262__auto__ = this$;
if(and__24262__auto__){
return this$.cljs$core$IFn$_invoke$arity$5;
} else {
return and__24262__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$5(this$,a,b,c,d);
} else {
var x__24918__auto__ = (((this$ == null))?null:this$);
return (function (){var or__24274__auto__ = (cljs.core._invoke[(function (){var G__28040 = x__24918__auto__;
return goog.typeOf(G__28040);
})()]);
if(or__24274__auto__){
return or__24274__auto__;
} else {
var or__24274__auto____$1 = (cljs.core._invoke["_"]);
if(or__24274__auto____$1){
return or__24274__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d);
}
});
var _invoke__6 = (function (this$,a,b,c,d,e){
if((function (){var and__24262__auto__ = this$;
if(and__24262__auto__){
return this$.cljs$core$IFn$_invoke$arity$6;
} else {
return and__24262__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$6(this$,a,b,c,d,e);
} else {
var x__24918__auto__ = (((this$ == null))?null:this$);
return (function (){var or__24274__auto__ = (cljs.core._invoke[(function (){var G__28042 = x__24918__auto__;
return goog.typeOf(G__28042);
})()]);
if(or__24274__auto__){
return or__24274__auto__;
} else {
var or__24274__auto____$1 = (cljs.core._invoke["_"]);
if(or__24274__auto____$1){
return or__24274__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e);
}
});
var _invoke__7 = (function (this$,a,b,c,d,e,f){
if((function (){var and__24262__auto__ = this$;
if(and__24262__auto__){
return this$.cljs$core$IFn$_invoke$arity$7;
} else {
return and__24262__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$7(this$,a,b,c,d,e,f);
} else {
var x__24918__auto__ = (((this$ == null))?null:this$);
return (function (){var or__24274__auto__ = (cljs.core._invoke[(function (){var G__28044 = x__24918__auto__;
return goog.typeOf(G__28044);
})()]);
if(or__24274__auto__){
return or__24274__auto__;
} else {
var or__24274__auto____$1 = (cljs.core._invoke["_"]);
if(or__24274__auto____$1){
return or__24274__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f);
}
});
var _invoke__8 = (function (this$,a,b,c,d,e,f,g){
if((function (){var and__24262__auto__ = this$;
if(and__24262__auto__){
return this$.cljs$core$IFn$_invoke$arity$8;
} else {
return and__24262__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$8(this$,a,b,c,d,e,f,g);
} else {
var x__24918__auto__ = (((this$ == null))?null:this$);
return (function (){var or__24274__auto__ = (cljs.core._invoke[(function (){var G__28046 = x__24918__auto__;
return goog.typeOf(G__28046);
})()]);
if(or__24274__auto__){
return or__24274__auto__;
} else {
var or__24274__auto____$1 = (cljs.core._invoke["_"]);
if(or__24274__auto____$1){
return or__24274__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g);
}
});
var _invoke__9 = (function (this$,a,b,c,d,e,f,g,h){
if((function (){var and__24262__auto__ = this$;
if(and__24262__auto__){
return this$.cljs$core$IFn$_invoke$arity$9;
} else {
return and__24262__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$9(this$,a,b,c,d,e,f,g,h);
} else {
var x__24918__auto__ = (((this$ == null))?null:this$);
return (function (){var or__24274__auto__ = (cljs.core._invoke[(function (){var G__28048 = x__24918__auto__;
return goog.typeOf(G__28048);
})()]);
if(or__24274__auto__){
return or__24274__auto__;
} else {
var or__24274__auto____$1 = (cljs.core._invoke["_"]);
if(or__24274__auto____$1){
return or__24274__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h);
}
});
var _invoke__10 = (function (this$,a,b,c,d,e,f,g,h,i){
if((function (){var and__24262__auto__ = this$;
if(and__24262__auto__){
return this$.cljs$core$IFn$_invoke$arity$10;
} else {
return and__24262__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$10(this$,a,b,c,d,e,f,g,h,i);
} else {
var x__24918__auto__ = (((this$ == null))?null:this$);
return (function (){var or__24274__auto__ = (cljs.core._invoke[(function (){var G__28050 = x__24918__auto__;
return goog.typeOf(G__28050);
})()]);
if(or__24274__auto__){
return or__24274__auto__;
} else {
var or__24274__auto____$1 = (cljs.core._invoke["_"]);
if(or__24274__auto____$1){
return or__24274__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i);
}
});
var _invoke__11 = (function (this$,a,b,c,d,e,f,g,h,i,j){
if((function (){var and__24262__auto__ = this$;
if(and__24262__auto__){
return this$.cljs$core$IFn$_invoke$arity$11;
} else {
return and__24262__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$11(this$,a,b,c,d,e,f,g,h,i,j);
} else {
var x__24918__auto__ = (((this$ == null))?null:this$);
return (function (){var or__24274__auto__ = (cljs.core._invoke[(function (){var G__28052 = x__24918__auto__;
return goog.typeOf(G__28052);
})()]);
if(or__24274__auto__){
return or__24274__auto__;
} else {
var or__24274__auto____$1 = (cljs.core._invoke["_"]);
if(or__24274__auto____$1){
return or__24274__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j);
}
});
var _invoke__12 = (function (this$,a,b,c,d,e,f,g,h,i,j,k){
if((function (){var and__24262__auto__ = this$;
if(and__24262__auto__){
return this$.cljs$core$IFn$_invoke$arity$12;
} else {
return and__24262__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$12(this$,a,b,c,d,e,f,g,h,i,j,k);
} else {
var x__24918__auto__ = (((this$ == null))?null:this$);
return (function (){var or__24274__auto__ = (cljs.core._invoke[(function (){var G__28054 = x__24918__auto__;
return goog.typeOf(G__28054);
})()]);
if(or__24274__auto__){
return or__24274__auto__;
} else {
var or__24274__auto____$1 = (cljs.core._invoke["_"]);
if(or__24274__auto____$1){
return or__24274__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k);
}
});
var _invoke__13 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l){
if((function (){var and__24262__auto__ = this$;
if(and__24262__auto__){
return this$.cljs$core$IFn$_invoke$arity$13;
} else {
return and__24262__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$13(this$,a,b,c,d,e,f,g,h,i,j,k,l);
} else {
var x__24918__auto__ = (((this$ == null))?null:this$);
return (function (){var or__24274__auto__ = (cljs.core._invoke[(function (){var G__28056 = x__24918__auto__;
return goog.typeOf(G__28056);
})()]);
if(or__24274__auto__){
return or__24274__auto__;
} else {
var or__24274__auto____$1 = (cljs.core._invoke["_"]);
if(or__24274__auto____$1){
return or__24274__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l);
}
});
var _invoke__14 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m){
if((function (){var and__24262__auto__ = this$;
if(and__24262__auto__){
return this$.cljs$core$IFn$_invoke$arity$14;
} else {
return and__24262__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$14(this$,a,b,c,d,e,f,g,h,i,j,k,l,m);
} else {
var x__24918__auto__ = (((this$ == null))?null:this$);
return (function (){var or__24274__auto__ = (cljs.core._invoke[(function (){var G__28058 = x__24918__auto__;
return goog.typeOf(G__28058);
})()]);
if(or__24274__auto__){
return or__24274__auto__;
} else {
var or__24274__auto____$1 = (cljs.core._invoke["_"]);
if(or__24274__auto____$1){
return or__24274__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m);
}
});
var _invoke__15 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n){
if((function (){var and__24262__auto__ = this$;
if(and__24262__auto__){
return this$.cljs$core$IFn$_invoke$arity$15;
} else {
return and__24262__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$15(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
} else {
var x__24918__auto__ = (((this$ == null))?null:this$);
return (function (){var or__24274__auto__ = (cljs.core._invoke[(function (){var G__28060 = x__24918__auto__;
return goog.typeOf(G__28060);
})()]);
if(or__24274__auto__){
return or__24274__auto__;
} else {
var or__24274__auto____$1 = (cljs.core._invoke["_"]);
if(or__24274__auto____$1){
return or__24274__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
}
});
var _invoke__16 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
if((function (){var and__24262__auto__ = this$;
if(and__24262__auto__){
return this$.cljs$core$IFn$_invoke$arity$16;
} else {
return and__24262__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$16(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
} else {
var x__24918__auto__ = (((this$ == null))?null:this$);
return (function (){var or__24274__auto__ = (cljs.core._invoke[(function (){var G__28062 = x__24918__auto__;
return goog.typeOf(G__28062);
})()]);
if(or__24274__auto__){
return or__24274__auto__;
} else {
var or__24274__auto____$1 = (cljs.core._invoke["_"]);
if(or__24274__auto____$1){
return or__24274__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
}
});
var _invoke__17 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
if((function (){var and__24262__auto__ = this$;
if(and__24262__auto__){
return this$.cljs$core$IFn$_invoke$arity$17;
} else {
return and__24262__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$17(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
} else {
var x__24918__auto__ = (((this$ == null))?null:this$);
return (function (){var or__24274__auto__ = (cljs.core._invoke[(function (){var G__28064 = x__24918__auto__;
return goog.typeOf(G__28064);
})()]);
if(or__24274__auto__){
return or__24274__auto__;
} else {
var or__24274__auto____$1 = (cljs.core._invoke["_"]);
if(or__24274__auto____$1){
return or__24274__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
}
});
var _invoke__18 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
if((function (){var and__24262__auto__ = this$;
if(and__24262__auto__){
return this$.cljs$core$IFn$_invoke$arity$18;
} else {
return and__24262__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$18(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
} else {
var x__24918__auto__ = (((this$ == null))?null:this$);
return (function (){var or__24274__auto__ = (cljs.core._invoke[(function (){var G__28066 = x__24918__auto__;
return goog.typeOf(G__28066);
})()]);
if(or__24274__auto__){
return or__24274__auto__;
} else {
var or__24274__auto____$1 = (cljs.core._invoke["_"]);
if(or__24274__auto____$1){
return or__24274__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
}
});
var _invoke__19 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
if((function (){var and__24262__auto__ = this$;
if(and__24262__auto__){
return this$.cljs$core$IFn$_invoke$arity$19;
} else {
return and__24262__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$19(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
} else {
var x__24918__auto__ = (((this$ == null))?null:this$);
return (function (){var or__24274__auto__ = (cljs.core._invoke[(function (){var G__28068 = x__24918__auto__;
return goog.typeOf(G__28068);
})()]);
if(or__24274__auto__){
return or__24274__auto__;
} else {
var or__24274__auto____$1 = (cljs.core._invoke["_"]);
if(or__24274__auto____$1){
return or__24274__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
}
});
var _invoke__20 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
if((function (){var and__24262__auto__ = this$;
if(and__24262__auto__){
return this$.cljs$core$IFn$_invoke$arity$20;
} else {
return and__24262__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$20(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
} else {
var x__24918__auto__ = (((this$ == null))?null:this$);
return (function (){var or__24274__auto__ = (cljs.core._invoke[(function (){var G__28070 = x__24918__auto__;
return goog.typeOf(G__28070);
})()]);
if(or__24274__auto__){
return or__24274__auto__;
} else {
var or__24274__auto____$1 = (cljs.core._invoke["_"]);
if(or__24274__auto____$1){
return or__24274__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
}
});
var _invoke__21 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
if((function (){var and__24262__auto__ = this$;
if(and__24262__auto__){
return this$.cljs$core$IFn$_invoke$arity$21;
} else {
return and__24262__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$21(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
} else {
var x__24918__auto__ = (((this$ == null))?null:this$);
return (function (){var or__24274__auto__ = (cljs.core._invoke[(function (){var G__28072 = x__24918__auto__;
return goog.typeOf(G__28072);
})()]);
if(or__24274__auto__){
return or__24274__auto__;
} else {
var or__24274__auto____$1 = (cljs.core._invoke["_"]);
if(or__24274__auto____$1){
return or__24274__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
}
});
var _invoke__22 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
if((function (){var and__24262__auto__ = this$;
if(and__24262__auto__){
return this$.cljs$core$IFn$_invoke$arity$22;
} else {
return and__24262__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$22(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest);
} else {
var x__24918__auto__ = (((this$ == null))?null:this$);
return (function (){var or__24274__auto__ = (cljs.core._invoke[(function (){var G__28074 = x__24918__auto__;
return goog.typeOf(G__28074);
})()]);
if(or__24274__auto__){
return or__24274__auto__;
} else {
var or__24274__auto____$1 = (cljs.core._invoke["_"]);
if(or__24274__auto____$1){
return or__24274__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest);
}
});
_invoke = function(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
switch(arguments.length){
case 1:
return _invoke__1.call(this,this$);
case 2:
return _invoke__2.call(this,this$,a);
case 3:
return _invoke__3.call(this,this$,a,b);
case 4:
return _invoke__4.call(this,this$,a,b,c);
case 5:
return _invoke__5.call(this,this$,a,b,c,d);
case 6:
return _invoke__6.call(this,this$,a,b,c,d,e);
case 7:
return _invoke__7.call(this,this$,a,b,c,d,e,f);
case 8:
return _invoke__8.call(this,this$,a,b,c,d,e,f,g);
case 9:
return _invoke__9.call(this,this$,a,b,c,d,e,f,g,h);
case 10:
return _invoke__10.call(this,this$,a,b,c,d,e,f,g,h,i);
case 11:
return _invoke__11.call(this,this$,a,b,c,d,e,f,g,h,i,j);
case 12:
return _invoke__12.call(this,this$,a,b,c,d,e,f,g,h,i,j,k);
case 13:
return _invoke__13.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l);
case 14:
return _invoke__14.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m);
case 15:
return _invoke__15.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
case 16:
return _invoke__16.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
case 17:
return _invoke__17.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
case 18:
return _invoke__18.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
case 19:
return _invoke__19.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
case 20:
return _invoke__20.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
case 21:
return _invoke__21.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
case 22:
return _invoke__22.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_invoke.cljs$core$IFn$_invoke$arity$1 = _invoke__1;
_invoke.cljs$core$IFn$_invoke$arity$2 = _invoke__2;
_invoke.cljs$core$IFn$_invoke$arity$3 = _invoke__3;
_invoke.cljs$core$IFn$_invoke$arity$4 = _invoke__4;
_invoke.cljs$core$IFn$_invoke$arity$5 = _invoke__5;
_invoke.cljs$core$IFn$_invoke$arity$6 = _invoke__6;
_invoke.cljs$core$IFn$_invoke$arity$7 = _invoke__7;
_invoke.cljs$core$IFn$_invoke$arity$8 = _invoke__8;
_invoke.cljs$core$IFn$_invoke$arity$9 = _invoke__9;
_invoke.cljs$core$IFn$_invoke$arity$10 = _invoke__10;
_invoke.cljs$core$IFn$_invoke$arity$11 = _invoke__11;
_invoke.cljs$core$IFn$_invoke$arity$12 = _invoke__12;
_invoke.cljs$core$IFn$_invoke$arity$13 = _invoke__13;
_invoke.cljs$core$IFn$_invoke$arity$14 = _invoke__14;
_invoke.cljs$core$IFn$_invoke$arity$15 = _invoke__15;
_invoke.cljs$core$IFn$_invoke$arity$16 = _invoke__16;
_invoke.cljs$core$IFn$_invoke$arity$17 = _invoke__17;
_invoke.cljs$core$IFn$_invoke$arity$18 = _invoke__18;
_invoke.cljs$core$IFn$_invoke$arity$19 = _invoke__19;
_invoke.cljs$core$IFn$_invoke$arity$20 = _invoke__20;
_invoke.cljs$core$IFn$_invoke$arity$21 = _invoke__21;
_invoke.cljs$core$IFn$_invoke$arity$22 = _invoke__22;
return _invoke;
})()
;


cljs.core.ICloneable = (function (){var obj28076 = {};
return obj28076;
})();

cljs.core._clone = (function _clone(value){
if((function (){var and__24262__auto__ = value;
if(and__24262__auto__){
return value.cljs$core$ICloneable$_clone$arity$1;
} else {
return and__24262__auto__;
}
})()){
return value.cljs$core$ICloneable$_clone$arity$1(value);
} else {
var x__24918__auto__ = (((value == null))?null:value);
return (function (){var or__24274__auto__ = (cljs.core._clone[(function (){var G__28080 = x__24918__auto__;
return goog.typeOf(G__28080);
})()]);
if(or__24274__auto__){
return or__24274__auto__;
} else {
var or__24274__auto____$1 = (cljs.core._clone["_"]);
if(or__24274__auto____$1){
return or__24274__auto____$1;
} else {
throw cljs.core.missing_protocol("ICloneable.-clone",value);
}
}
})().call(null,value);
}
});


cljs.core.ICounted = (function (){var obj28082 = {};
return obj28082;
})();

cljs.core._count = (function _count(coll){
if((function (){var and__24262__auto__ = coll;
if(and__24262__auto__){
return coll.cljs$core$ICounted$_count$arity$1;
} else {
return and__24262__auto__;
}
})()){
return coll.cljs$core$ICounted$_count$arity$1(coll);
} else {
var x__24918__auto__ = (((coll == null))?null:coll);
return (function (){var or__24274__auto__ = (cljs.core._count[(function (){var G__28086 = x__24918__auto__;
return goog.typeOf(G__28086);
})()]);
if(or__24274__auto__){
return or__24274__auto__;
} else {
var or__24274__auto____$1 = (cljs.core._count["_"]);
if(or__24274__auto____$1){
return or__24274__auto____$1;
} else {
throw cljs.core.missing_protocol("ICounted.-count",coll);
}
}
})().call(null,coll);
}
});


cljs.core.IEmptyableCollection = (function (){var obj28088 = {};
return obj28088;
})();

cljs.core._empty = (function _empty(coll){
if((function (){var and__24262__auto__ = coll;
if(and__24262__auto__){
return coll.cljs$core$IEmptyableCollection$_empty$arity$1;
} else {
return and__24262__auto__;
}
})()){
return coll.cljs$core$IEmptyableCollection$_empty$arity$1(coll);
} else {
var x__24918__auto__ = (((coll == null))?null:coll);
return (function (){var or__24274__auto__ = (cljs.core._empty[(function (){var G__28092 = x__24918__auto__;
return goog.typeOf(G__28092);
})()]);
if(or__24274__auto__){
return or__24274__auto__;
} else {
var or__24274__auto____$1 = (cljs.core._empty["_"]);
if(or__24274__auto____$1){
return or__24274__auto____$1;
} else {
throw cljs.core.missing_protocol("IEmptyableCollection.-empty",coll);
}
}
})().call(null,coll);
}
});


cljs.core.ICollection = (function (){var obj28094 = {};
return obj28094;
})();

cljs.core._conj = (function _conj(coll,o){
if((function (){var and__24262__auto__ = coll;
if(and__24262__auto__){
return coll.cljs$core$ICollection$_conj$arity$2;
} else {
return and__24262__auto__;
}
})()){
return coll.cljs$core$ICollection$_conj$arity$2(coll,o);
} else {
var x__24918__auto__ = (((coll == null))?null:coll);
return (function (){var or__24274__auto__ = (cljs.core._conj[(function (){var G__28098 = x__24918__auto__;
return goog.typeOf(G__28098);
})()]);
if(or__24274__auto__){
return or__24274__auto__;
} else {
var or__24274__auto____$1 = (cljs.core._conj["_"]);
if(or__24274__auto____$1){
return or__24274__auto____$1;
} else {
throw cljs.core.missing_protocol("ICollection.-conj",coll);
}
}
})().call(null,coll,o);
}
});


cljs.core.IIndexed = (function (){var obj28100 = {};
return obj28100;
})();

cljs.core._nth = (function() {
var _nth = null;
var _nth__2 = (function (coll,n){
if((function (){var and__24262__auto__ = coll;
if(and__24262__auto__){
return coll.cljs$core$IIndexed$_nth$arity$2;
} else {
return and__24262__auto__;
}
})()){
return coll.cljs$core$IIndexed$_nth$arity$2(coll,n);
} else {
var x__24918__auto__ = (((coll == null))?null:coll);
return (function (){var or__24274__auto__ = (cljs.core._nth[(function (){var G__28106 = x__24918__auto__;
return goog.typeOf(G__28106);
})()]);
if(or__24274__auto__){
return or__24274__auto__;
} else {
var or__24274__auto____$1 = (cljs.core._nth["_"]);
if(or__24274__auto____$1){
return or__24274__auto____$1;
} else {
throw cljs.core.missing_protocol("IIndexed.-nth",coll);
}
}
})().call(null,coll,n);
}
});
var _nth__3 = (function (coll,n,not_found){
if((function (){var and__24262__auto__ = coll;
if(and__24262__auto__){
return coll.cljs$core$IIndexed$_nth$arity$3;
} else {
return and__24262__auto__;
}
})()){
return coll.cljs$core$IIndexed$_nth$arity$3(coll,n,not_found);
} else {
var x__24918__auto__ = (((coll == null))?null:coll);
return (function (){var or__24274__auto__ = (cljs.core._nth[(function (){var G__28108 = x__24918__auto__;
return goog.typeOf(G__28108);
})()]);
if(or__24274__auto__){
return or__24274__auto__;
} else {
var or__24274__auto____$1 = (cljs.core._nth["_"]);
if(or__24274__auto____$1){
return or__24274__auto____$1;
} else {
throw cljs.core.missing_protocol("IIndexed.-nth",coll);
}
}
})().call(null,coll,n,not_found);
}
});
_nth = function(coll,n,not_found){
switch(arguments.length){
case 2:
return _nth__2.call(this,coll,n);
case 3:
return _nth__3.call(this,coll,n,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_nth.cljs$core$IFn$_invoke$arity$2 = _nth__2;
_nth.cljs$core$IFn$_invoke$arity$3 = _nth__3;
return _nth;
})()
;


cljs.core.ASeq = (function (){var obj28110 = {};
return obj28110;
})();


cljs.core.ISeq = (function (){var obj28112 = {};
return obj28112;
})();

cljs.core._first = (function _first(coll){
if((function (){var and__24262__auto__ = coll;
if(and__24262__auto__){
return coll.cljs$core$ISeq$_first$arity$1;
} else {
return and__24262__auto__;
}
})()){
return coll.cljs$core$ISeq$_first$arity$1(coll);
} else {
var x__24918__auto__ = (((coll == null))?null:coll);
return (function (){var or__24274__auto__ = (cljs.core._first[(function (){var G__28116 = x__24918__auto__;
return goog.typeOf(G__28116);
})()]);
if(or__24274__auto__){
return or__24274__auto__;
} else {
var or__24274__auto____$1 = (cljs.core._first["_"]);
if(or__24274__auto____$1){
return or__24274__auto____$1;
} else {
throw cljs.core.missing_protocol("ISeq.-first",coll);
}
}
})().call(null,coll);
}
});

cljs.core._rest = (function _rest(coll){
if((function (){var and__24262__auto__ = coll;
if(and__24262__auto__){
return coll.cljs$core$ISeq$_rest$arity$1;
} else {
return and__24262__auto__;
}
})()){
return coll.cljs$core$ISeq$_rest$arity$1(coll);
} else {
var x__24918__auto__ = (((coll == null))?null:coll);
return (function (){var or__24274__auto__ = (cljs.core._rest[(function (){var G__28120 = x__24918__auto__;
return goog.typeOf(G__28120);
})()]);
if(or__24274__auto__){
return or__24274__auto__;
} else {
var or__24274__auto____$1 = (cljs.core._rest["_"]);
if(or__24274__auto____$1){
return or__24274__auto____$1;
} else {
throw cljs.core.missing_protocol("ISeq.-rest",coll);
}
}
})().call(null,coll);
}
});


cljs.core.INext = (function (){var obj28122 = {};
return obj28122;
})();

cljs.core._next = (function _next(coll){
if((function (){var and__24262__auto__ = coll;
if(and__24262__auto__){
return coll.cljs$core$INext$_next$arity$1;
} else {
return and__24262__auto__;
}
})()){
return coll.cljs$core$INext$_next$arity$1(coll);
} else {
var x__24918__auto__ = (((coll == null))?null:coll);
return (function (){var or__24274__auto__ = (cljs.core._next[(function (){var G__28126 = x__24918__auto__;
return goog.typeOf(G__28126);
})()]);
if(or__24274__auto__){
return or__24274__auto__;
} else {
var or__24274__auto____$1 = (cljs.core._next["_"]);
if(or__24274__auto____$1){
return or__24274__auto____$1;
} else {
throw cljs.core.missing_protocol("INext.-next",coll);
}
}
})().call(null,coll);
}
});


cljs.core.ILookup = (function (){var obj28128 = {};
return obj28128;
})();

cljs.core._lookup = (function() {
var _lookup = null;
var _lookup__2 = (function (o,k){
if((function (){var and__24262__auto__ = o;
if(and__24262__auto__){
return o.cljs$core$ILookup$_lookup$arity$2;
} else {
return and__24262__auto__;
}
})()){
return o.cljs$core$ILookup$_lookup$arity$2(o,k);
} else {
var x__24918__auto__ = (((o == null))?null:o);
return (function (){var or__24274__auto__ = (cljs.core._lookup[(function (){var G__28134 = x__24918__auto__;
return goog.typeOf(G__28134);
})()]);
if(or__24274__auto__){
return or__24274__auto__;
} else {
var or__24274__auto____$1 = (cljs.core._lookup["_"]);
if(or__24274__auto____$1){
return or__24274__auto____$1;
} else {
throw cljs.core.missing_protocol("ILookup.-lookup",o);
}
}
})().call(null,o,k);
}
});
var _lookup__3 = (function (o,k,not_found){
if((function (){var and__24262__auto__ = o;
if(and__24262__auto__){
return o.cljs$core$ILookup$_lookup$arity$3;
} else {
return and__24262__auto__;
}
})()){
return o.cljs$core$ILookup$_lookup$arity$3(o,k,not_found);
} else {
var x__24918__auto__ = (((o == null))?null:o);
return (function (){var or__24274__auto__ = (cljs.core._lookup[(function (){var G__28136 = x__24918__auto__;
return goog.typeOf(G__28136);
})()]);
if(or__24274__auto__){
return or__24274__auto__;
} else {
var or__24274__auto____$1 = (cljs.core._lookup["_"]);
if(or__24274__auto____$1){
return or__24274__auto____$1;
} else {
throw cljs.core.missing_protocol("ILookup.-lookup",o);
}
}
})().call(null,o,k,not_found);
}
});
_lookup = function(o,k,not_found){
switch(arguments.length){
case 2:
return _lookup__2.call(this,o,k);
case 3:
return _lookup__3.call(this,o,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_lookup.cljs$core$IFn$_invoke$arity$2 = _lookup__2;
_lookup.cljs$core$IFn$_invoke$arity$3 = _lookup__3;
return _lookup;
})()
;


cljs.core.IAssociative = (function (){var obj28138 = {};
return obj28138;
})();

cljs.core._contains_key_QMARK_ = (function _contains_key_QMARK_(coll,k){
if((function (){var and__24262__auto__ = coll;
if(and__24262__auto__){
return coll.cljs$core$IAssociative$_contains_key_QMARK_$arity$2;
} else {
return and__24262__auto__;
}
})()){
return coll.cljs$core$IAssociative$_contains_key_QMARK_$arity$2(coll,k);
} else {
var x__24918__auto__ = (((coll == null))?null:coll);
return (function (){var or__24274__auto__ = (cljs.core._contains_key_QMARK_[(function (){var G__28142 = x__24918__auto__;
return goog.typeOf(G__28142);
})()]);
if(or__24274__auto__){
return or__24274__auto__;
} else {
var or__24274__auto____$1 = (cljs.core._contains_key_QMARK_["_"]);
if(or__24274__auto____$1){
return or__24274__auto____$1;
} else {
throw cljs.core.missing_protocol("IAssociative.-contains-key?",coll);
}
}
})().call(null,coll,k);
}
});

cljs.core._assoc = (function _assoc(coll,k,v){
if((function (){var and__24262__auto__ = coll;
if(and__24262__auto__){
return coll.cljs$core$IAssociative$_assoc$arity$3;
} else {
return and__24262__auto__;
}
})()){
return coll.cljs$core$IAssociative$_assoc$arity$3(coll,k,v);
} else {
var x__24918__auto__ = (((coll == null))?null:coll);
return (function (){var or__24274__auto__ = (cljs.core._assoc[(function (){var G__28146 = x__24918__auto__;
return goog.typeOf(G__28146);
})()]);
if(or__24274__auto__){
return or__24274__auto__;
} else {
var or__24274__auto____$1 = (cljs.core._assoc["_"]);
if(or__24274__auto____$1){
return or__24274__auto____$1;
} else {
throw cljs.core.missing_protocol("IAssociative.-assoc",coll);
}
}
})().call(null,coll,k,v);
}
});


cljs.core.IMap = (function (){var obj28148 = {};
return obj28148;
})();

cljs.core._dissoc = (function _dissoc(coll,k){
if((function (){var and__24262__auto__ = coll;
if(and__24262__auto__){
return coll.cljs$core$IMap$_dissoc$arity$2;
} else {
return and__24262__auto__;
}
})()){
return coll.cljs$core$IMap$_dissoc$arity$2(coll,k);
} else {
var x__24918__auto__ = (((coll == null))?null:coll);
return (function (){var or__24274__auto__ = (cljs.core._dissoc[(function (){var G__28152 = x__24918__auto__;
return goog.typeOf(G__28152);
})()]);
if(or__24274__auto__){
return or__24274__auto__;
} else {
var or__24274__auto____$1 = (cljs.core._dissoc["_"]);
if(or__24274__auto____$1){
return or__24274__auto____$1;
} else {
throw cljs.core.missing_protocol("IMap.-dissoc",coll);
}
}
})().call(null,coll,k);
}
});


cljs.core.IMapEntry = (function (){var obj28154 = {};
return obj28154;
})();

cljs.core._key = (function _key(coll){
if((function (){var and__24262__auto__ = coll;
if(and__24262__auto__){
return coll.cljs$core$IMapEntry$_key$arity$1;
} else {
return and__24262__auto__;
}
})()){
return coll.cljs$core$IMapEntry$_key$arity$1(coll);
} else {
var x__24918__auto__ = (((coll == null))?null:coll);
return (function (){var or__24274__auto__ = (cljs.core._key[(function (){var G__28158 = x__24918__auto__;
return goog.typeOf(G__28158);
})()]);
if(or__24274__auto__){
return or__24274__auto__;
} else {
var or__24274__auto____$1 = (cljs.core._key["_"]);
if(or__24274__auto____$1){
return or__24274__auto____$1;
} else {
throw cljs.core.missing_protocol("IMapEntry.-key",coll);
}
}
})().call(null,coll);
}
});

cljs.core._val = (function _val(coll){
if((function (){var and__24262__auto__ = coll;
if(and__24262__auto__){
return coll.cljs$core$IMapEntry$_val$arity$1;
} else {
return and__24262__auto__;
}
})()){
return coll.cljs$core$IMapEntry$_val$arity$1(coll);
} else {
var x__24918__auto__ = (((coll == null))?null:coll);
return (function (){var or__24274__auto__ = (cljs.core._val[(function (){var G__28162 = x__24918__auto__;
return goog.typeOf(G__28162);
})()]);
if(or__24274__auto__){
return or__24274__auto__;
} else {
var or__24274__auto____$1 = (cljs.core._val["_"]);
if(or__24274__auto____$1){
return or__24274__auto____$1;
} else {
throw cljs.core.missing_protocol("IMapEntry.-val",coll);
}
}
})().call(null,coll);
}
});


cljs.core.ISet = (function (){var obj28164 = {};
return obj28164;
})();

cljs.core._disjoin = (function _disjoin(coll,v){
if((function (){var and__24262__auto__ = coll;
if(and__24262__auto__){
return coll.cljs$core$ISet$_disjoin$arity$2;
} else {
return and__24262__auto__;
}
})()){
return coll.cljs$core$ISet$_disjoin$arity$2(coll,v);
} else {
var x__24918__auto__ = (((coll == null))?null:coll);
return (function (){var or__24274__auto__ = (cljs.core._disjoin[(function (){var G__28168 = x__24918__auto__;
return goog.typeOf(G__28168);
})()]);
if(or__24274__auto__){
return or__24274__auto__;
} else {
var or__24274__auto____$1 = (cljs.core._disjoin["_"]);
if(or__24274__auto____$1){
return or__24274__auto____$1;
} else {
throw cljs.core.missing_protocol("ISet.-disjoin",coll);
}
}
})().call(null,coll,v);
}
});


cljs.core.IStack = (function (){var obj28170 = {};
return obj28170;
})();

cljs.core._peek = (function _peek(coll){
if((function (){var and__24262__auto__ = coll;
if(and__24262__auto__){
return coll.cljs$core$IStack$_peek$arity$1;
} else {
return and__24262__auto__;
}
})()){
return coll.cljs$core$IStack$_peek$arity$1(coll);
} else {
var x__24918__auto__ = (((coll == null))?null:coll);
return (function (){var or__24274__auto__ = (cljs.core._peek[(function (){var G__28174 = x__24918__auto__;
return goog.typeOf(G__28174);
})()]);
if(or__24274__auto__){
return or__24274__auto__;
} else {
var or__24274__auto____$1 = (cljs.core._peek["_"]);
if(or__24274__auto____$1){
return or__24274__auto____$1;
} else {
throw cljs.core.missing_protocol("IStack.-peek",coll);
}
}
})().call(null,coll);
}
});

cljs.core._pop = (function _pop(coll){
if((function (){var and__24262__auto__ = coll;
if(and__24262__auto__){
return coll.cljs$core$IStack$_pop$arity$1;
} else {
return and__24262__auto__;
}
})()){
return coll.cljs$core$IStack$_pop$arity$1(coll);
} else {
var x__24918__auto__ = (((coll == null))?null:coll);
return (function (){var or__24274__auto__ = (cljs.core._pop[(function (){var G__28178 = x__24918__auto__;
return goog.typeOf(G__28178);
})()]);
if(or__24274__auto__){
return or__24274__auto__;
} else {
var or__24274__auto____$1 = (cljs.core._pop["_"]);
if(or__24274__auto____$1){
return or__24274__auto____$1;
} else {
throw cljs.core.missing_protocol("IStack.-pop",coll);
}
}
})().call(null,coll);
}
});


cljs.core.IVector = (function (){var obj28180 = {};
return obj28180;
})();

cljs.core._assoc_n = (function _assoc_n(coll,n,val){
if((function (){var and__24262__auto__ = coll;
if(and__24262__auto__){
return coll.cljs$core$IVector$_assoc_n$arity$3;
} else {
return and__24262__auto__;
}
})()){
return coll.cljs$core$IVector$_assoc_n$arity$3(coll,n,val);
} else {
var x__24918__auto__ = (((coll == null))?null:coll);
return (function (){var or__24274__auto__ = (cljs.core._assoc_n[(function (){var G__28184 = x__24918__auto__;
return goog.typeOf(G__28184);
})()]);
if(or__24274__auto__){
return or__24274__auto__;
} else {
var or__24274__auto____$1 = (cljs.core._assoc_n["_"]);
if(or__24274__auto____$1){
return or__24274__auto____$1;
} else {
throw cljs.core.missing_protocol("IVector.-assoc-n",coll);
}
}
})().call(null,coll,n,val);
}
});


cljs.core.IDeref = (function (){var obj28186 = {};
return obj28186;
})();

cljs.core._deref = (function _deref(o){
if((function (){var and__24262__auto__ = o;
if(and__24262__auto__){
return o.cljs$core$IDeref$_deref$arity$1;
} else {
return and__24262__auto__;
}
})()){
return o.cljs$core$IDeref$_deref$arity$1(o);
} else {
var x__24918__auto__ = (((o == null))?null:o);
return (function (){var or__24274__auto__ = (cljs.core._deref[(function (){var G__28190 = x__24918__auto__;
return goog.typeOf(G__28190);
})()]);
if(or__24274__auto__){
return or__24274__auto__;
} else {
var or__24274__auto____$1 = (cljs.core._deref["_"]);
if(or__24274__auto____$1){
return or__24274__auto____$1;
} else {
throw cljs.core.missing_protocol("IDeref.-deref",o);
}
}
})().call(null,o);
}
});


cljs.core.IDerefWithTimeout = (function (){var obj28192 = {};
return obj28192;
})();

cljs.core._deref_with_timeout = (function _deref_with_timeout(o,msec,timeout_val){
if((function (){var and__24262__auto__ = o;
if(and__24262__auto__){
return o.cljs$core$IDerefWithTimeout$_deref_with_timeout$arity$3;
} else {
return and__24262__auto__;
}
})()){
return o.cljs$core$IDerefWithTimeout$_deref_with_timeout$arity$3(o,msec,timeout_val);
} else {
var x__24918__auto__ = (((o == null))?null:o);
return (function (){var or__24274__auto__ = (cljs.core._deref_with_timeout[(function (){var G__28196 = x__24918__auto__;
return goog.typeOf(G__28196);
})()]);
if(or__24274__auto__){
return or__24274__auto__;
} else {
var or__24274__auto____$1 = (cljs.core._deref_with_timeout["_"]);
if(or__24274__auto____$1){
return or__24274__auto____$1;
} else {
throw cljs.core.missing_protocol("IDerefWithTimeout.-deref-with-timeout",o);
}
}
})().call(null,o,msec,timeout_val);
}
});


cljs.core.IMeta = (function (){var obj28198 = {};
return obj28198;
})();

cljs.core._meta = (function _meta(o){
if((function (){var and__24262__auto__ = o;
if(and__24262__auto__){
return o.cljs$core$IMeta$_meta$arity$1;
} else {
return and__24262__auto__;
}
})()){
return o.cljs$core$IMeta$_meta$arity$1(o);
} else {
var x__24918__auto__ = (((o == null))?null:o);
return (function (){var or__24274__auto__ = (cljs.core._meta[(function (){var G__28202 = x__24918__auto__;
return goog.typeOf(G__28202);
})()]);
if(or__24274__auto__){
return or__24274__auto__;
} else {
var or__24274__auto____$1 = (cljs.core._meta["_"]);
if(or__24274__auto____$1){
return or__24274__auto____$1;
} else {
throw cljs.core.missing_protocol("IMeta.-meta",o);
}
}
})().call(null,o);
}
});


cljs.core.IWithMeta = (function (){var obj28204 = {};
return obj28204;
})();

cljs.core._with_meta = (function _with_meta(o,meta){
if((function (){var and__24262__auto__ = o;
if(and__24262__auto__){
return o.cljs$core$IWithMeta$_with_meta$arity$2;
} else {
return and__24262__auto__;
}
})()){
return o.cljs$core$IWithMeta$_with_meta$arity$2(o,meta);
} else {
var x__24918__auto__ = (((o == null))?null:o);
return (function (){var or__24274__auto__ = (cljs.core._with_meta[(function (){var G__28208 = x__24918__auto__;
return goog.typeOf(G__28208);
})()]);
if(or__24274__auto__){
return or__24274__auto__;
} else {
var or__24274__auto____$1 = (cljs.core._with_meta["_"]);
if(or__24274__auto____$1){
return or__24274__auto____$1;
} else {
throw cljs.core.missing_protocol("IWithMeta.-with-meta",o);
}
}
})().call(null,o,meta);
}
});


cljs.core.IReduce = (function (){var obj28210 = {};
return obj28210;
})();

cljs.core._reduce = (function() {
var _reduce = null;
var _reduce__2 = (function (coll,f){
if((function (){var and__24262__auto__ = coll;
if(and__24262__auto__){
return coll.cljs$core$IReduce$_reduce$arity$2;
} else {
return and__24262__auto__;
}
})()){
return coll.cljs$core$IReduce$_reduce$arity$2(coll,f);
} else {
var x__24918__auto__ = (((coll == null))?null:coll);
return (function (){var or__24274__auto__ = (cljs.core._reduce[(function (){var G__28216 = x__24918__auto__;
return goog.typeOf(G__28216);
})()]);
if(or__24274__auto__){
return or__24274__auto__;
} else {
var or__24274__auto____$1 = (cljs.core._reduce["_"]);
if(or__24274__auto____$1){
return or__24274__auto____$1;
} else {
throw cljs.core.missing_protocol("IReduce.-reduce",coll);
}
}
})().call(null,coll,f);
}
});
var _reduce__3 = (function (coll,f,start){
if((function (){var and__24262__auto__ = coll;
if(and__24262__auto__){
return coll.cljs$core$IReduce$_reduce$arity$3;
} else {
return and__24262__auto__;
}
})()){
return coll.cljs$core$IReduce$_reduce$arity$3(coll,f,start);
} else {
var x__24918__auto__ = (((coll == null))?null:coll);
return (function (){var or__24274__auto__ = (cljs.core._reduce[(function (){var G__28218 = x__24918__auto__;
return goog.typeOf(G__28218);
})()]);
if(or__24274__auto__){
return or__24274__auto__;
} else {
var or__24274__auto____$1 = (cljs.core._reduce["_"]);
if(or__24274__auto____$1){
return or__24274__auto____$1;
} else {
throw cljs.core.missing_protocol("IReduce.-reduce",coll);
}
}
})().call(null,coll,f,start);
}
});
_reduce = function(coll,f,start){
switch(arguments.length){
case 2:
return _reduce__2.call(this,coll,f);
case 3:
return _reduce__3.call(this,coll,f,start);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_reduce.cljs$core$IFn$_invoke$arity$2 = _reduce__2;
_reduce.cljs$core$IFn$_invoke$arity$3 = _reduce__3;
return _reduce;
})()
;


cljs.core.IKVReduce = (function (){var obj28220 = {};
return obj28220;
})();

cljs.core._kv_reduce = (function _kv_reduce(coll,f,init){
if((function (){var and__24262__auto__ = coll;
if(and__24262__auto__){
return coll.cljs$core$IKVReduce$_kv_reduce$arity$3;
} else {
return and__24262__auto__;
}
})()){
return coll.cljs$core$IKVReduce$_kv_reduce$arity$3(coll,f,init);
} else {
var x__24918__auto__ = (((coll == null))?null:coll);
return (function (){var or__24274__auto__ = (cljs.core._kv_reduce[(function (){var G__28224 = x__24918__auto__;
return goog.typeOf(G__28224);
})()]);
if(or__24274__auto__){
return or__24274__auto__;
} else {
var or__24274__auto____$1 = (cljs.core._kv_reduce["_"]);
if(or__24274__auto____$1){
return or__24274__auto____$1;
} else {
throw cljs.core.missing_protocol("IKVReduce.-kv-reduce",coll);
}
}
})().call(null,coll,f,init);
}
});


cljs.core.IEquiv = (function (){var obj28226 = {};
return obj28226;
})();

cljs.core._equiv = (function _equiv(o,other){
if((function (){var and__24262__auto__ = o;
if(and__24262__auto__){
return o.cljs$core$IEquiv$_equiv$arity$2;
} else {
return and__24262__auto__;
}
})()){
return o.cljs$core$IEquiv$_equiv$arity$2(o,other);
} else {
var x__24918__auto__ = (((o == null))?null:o);
return (function (){var or__24274__auto__ = (cljs.core._equiv[(function (){var G__28230 = x__24918__auto__;
return goog.typeOf(G__28230);
})()]);
if(or__24274__auto__){
return or__24274__auto__;
} else {
var or__24274__auto____$1 = (cljs.core._equiv["_"]);
if(or__24274__auto____$1){
return or__24274__auto____$1;
} else {
throw cljs.core.missing_protocol("IEquiv.-equiv",o);
}
}
})().call(null,o,other);
}
});


cljs.core.IHash = (function (){var obj28232 = {};
return obj28232;
})();

cljs.core._hash = (function _hash(o){
if((function (){var and__24262__auto__ = o;
if(and__24262__auto__){
return o.cljs$core$IHash$_hash$arity$1;
} else {
return and__24262__auto__;
}
})()){
return o.cljs$core$IHash$_hash$arity$1(o);
} else {
var x__24918__auto__ = (((o == null))?null:o);
return (function (){var or__24274__auto__ = (cljs.core._hash[(function (){var G__28236 = x__24918__auto__;
return goog.typeOf(G__28236);
})()]);
if(or__24274__auto__){
return or__24274__auto__;
} else {
var or__24274__auto____$1 = (cljs.core._hash["_"]);
if(or__24274__auto____$1){
return or__24274__auto____$1;
} else {
throw cljs.core.missing_protocol("IHash.-hash",o);
}
}
})().call(null,o);
}
});


cljs.core.ISeqable = (function (){var obj28238 = {};
return obj28238;
})();

cljs.core._seq = (function _seq(o){
if((function (){var and__24262__auto__ = o;
if(and__24262__auto__){
return o.cljs$core$ISeqable$_seq$arity$1;
} else {
return and__24262__auto__;
}
})()){
return o.cljs$core$ISeqable$_seq$arity$1(o);
} else {
var x__24918__auto__ = (((o == null))?null:o);
return (function (){var or__24274__auto__ = (cljs.core._seq[(function (){var G__28242 = x__24918__auto__;
return goog.typeOf(G__28242);
})()]);
if(or__24274__auto__){
return or__24274__auto__;
} else {
var or__24274__auto____$1 = (cljs.core._seq["_"]);
if(or__24274__auto____$1){
return or__24274__auto____$1;
} else {
throw cljs.core.missing_protocol("ISeqable.-seq",o);
}
}
})().call(null,o);
}
});


cljs.core.ISequential = (function (){var obj28244 = {};
return obj28244;
})();


cljs.core.IList = (function (){var obj28246 = {};
return obj28246;
})();


cljs.core.IRecord = (function (){var obj28248 = {};
return obj28248;
})();


cljs.core.IReversible = (function (){var obj28250 = {};
return obj28250;
})();

cljs.core._rseq = (function _rseq(coll){
if((function (){var and__24262__auto__ = coll;
if(and__24262__auto__){
return coll.cljs$core$IReversible$_rseq$arity$1;
} else {
return and__24262__auto__;
}
})()){
return coll.cljs$core$IReversible$_rseq$arity$1(coll);
} else {
var x__24918__auto__ = (((coll == null))?null:coll);
return (function (){var or__24274__auto__ = (cljs.core._rseq[(function (){var G__28254 = x__24918__auto__;
return goog.typeOf(G__28254);
})()]);
if(or__24274__auto__){
return or__24274__auto__;
} else {
var or__24274__auto____$1 = (cljs.core._rseq["_"]);
if(or__24274__auto____$1){
return or__24274__auto____$1;
} else {
throw cljs.core.missing_protocol("IReversible.-rseq",coll);
}
}
})().call(null,coll);
}
});


cljs.core.ISorted = (function (){var obj28256 = {};
return obj28256;
})();

cljs.core._sorted_seq = (function _sorted_seq(coll,ascending_QMARK_){
if((function (){var and__24262__auto__ = coll;
if(and__24262__auto__){
return coll.cljs$core$ISorted$_sorted_seq$arity$2;
} else {
return and__24262__auto__;
}
})()){
return coll.cljs$core$ISorted$_sorted_seq$arity$2(coll,ascending_QMARK_);
} else {
var x__24918__auto__ = (((coll == null))?null:coll);
return (function (){var or__24274__auto__ = (cljs.core._sorted_seq[(function (){var G__28260 = x__24918__auto__;
return goog.typeOf(G__28260);
})()]);
if(or__24274__auto__){
return or__24274__auto__;
} else {
var or__24274__auto____$1 = (cljs.core._sorted_seq["_"]);
if(or__24274__auto____$1){
return or__24274__auto____$1;
} else {
throw cljs.core.missing_protocol("ISorted.-sorted-seq",coll);
}
}
})().call(null,coll,ascending_QMARK_);
}
});

cljs.core._sorted_seq_from = (function _sorted_seq_from(coll,k,ascending_QMARK_){
if((function (){var and__24262__auto__ = coll;
if(and__24262__auto__){
return coll.cljs$core$ISorted$_sorted_seq_from$arity$3;
} else {
return and__24262__auto__;
}
})()){
return coll.cljs$core$ISorted$_sorted_seq_from$arity$3(coll,k,ascending_QMARK_);
} else {
var x__24918__auto__ = (((coll == null))?null:coll);
return (function (){var or__24274__auto__ = (cljs.core._sorted_seq_from[(function (){var G__28264 = x__24918__auto__;
return goog.typeOf(G__28264);
})()]);
if(or__24274__auto__){
return or__24274__auto__;
} else {
var or__24274__auto____$1 = (cljs.core._sorted_seq_from["_"]);
if(or__24274__auto____$1){
return or__24274__auto____$1;
} else {
throw cljs.core.missing_protocol("ISorted.-sorted-seq-from",coll);
}
}
})().call(null,coll,k,ascending_QMARK_);
}
});

cljs.core._entry_key = (function _entry_key(coll,entry){
if((function (){var and__24262__auto__ = coll;
if(and__24262__auto__){
return coll.cljs$core$ISorted$_entry_key$arity$2;
} else {
return and__24262__auto__;
}
})()){
return coll.cljs$core$ISorted$_entry_key$arity$2(coll,entry);
} else {
var x__24918__auto__ = (((coll == null))?null:coll);
return (function (){var or__24274__auto__ = (cljs.core._entry_key[(function (){var G__28268 = x__24918__auto__;
return goog.typeOf(G__28268);
})()]);
if(or__24274__auto__){
return or__24274__auto__;
} else {
var or__24274__auto____$1 = (cljs.core._entry_key["_"]);
if(or__24274__auto____$1){
return or__24274__auto____$1;
} else {
throw cljs.core.missing_protocol("ISorted.-entry-key",coll);
}
}
})().call(null,coll,entry);
}
});

cljs.core._comparator = (function _comparator(coll){
if((function (){var and__24262__auto__ = coll;
if(and__24262__auto__){
return coll.cljs$core$ISorted$_comparator$arity$1;
} else {
return and__24262__auto__;
}
})()){
return coll.cljs$core$ISorted$_comparator$arity$1(coll);
} else {
var x__24918__auto__ = (((coll == null))?null:coll);
return (function (){var or__24274__auto__ = (cljs.core._comparator[(function (){var G__28272 = x__24918__auto__;
return goog.typeOf(G__28272);
})()]);
if(or__24274__auto__){
return or__24274__auto__;
} else {
var or__24274__auto____$1 = (cljs.core._comparator["_"]);
if(or__24274__auto____$1){
return or__24274__auto____$1;
} else {
throw cljs.core.missing_protocol("ISorted.-comparator",coll);
}
}
})().call(null,coll);
}
});


cljs.core.IWriter = (function (){var obj28274 = {};
return obj28274;
})();

cljs.core._write = (function _write(writer,s){
if((function (){var and__24262__auto__ = writer;
if(and__24262__auto__){
return writer.cljs$core$IWriter$_write$arity$2;
} else {
return and__24262__auto__;
}
})()){
return writer.cljs$core$IWriter$_write$arity$2(writer,s);
} else {
var x__24918__auto__ = (((writer == null))?null:writer);
return (function (){var or__24274__auto__ = (cljs.core._write[(function (){var G__28278 = x__24918__auto__;
return goog.typeOf(G__28278);
})()]);
if(or__24274__auto__){
return or__24274__auto__;
} else {
var or__24274__auto____$1 = (cljs.core._write["_"]);
if(or__24274__auto____$1){
return or__24274__auto____$1;
} else {
throw cljs.core.missing_protocol("IWriter.-write",writer);
}
}
})().call(null,writer,s);
}
});

cljs.core._flush = (function _flush(writer){
if((function (){var and__24262__auto__ = writer;
if(and__24262__auto__){
return writer.cljs$core$IWriter$_flush$arity$1;
} else {
return and__24262__auto__;
}
})()){
return writer.cljs$core$IWriter$_flush$arity$1(writer);
} else {
var x__24918__auto__ = (((writer == null))?null:writer);
return (function (){var or__24274__auto__ = (cljs.core._flush[(function (){var G__28282 = x__24918__auto__;
return goog.typeOf(G__28282);
})()]);
if(or__24274__auto__){
return or__24274__auto__;
} else {
var or__24274__auto____$1 = (cljs.core._flush["_"]);
if(or__24274__auto____$1){
return or__24274__auto____$1;
} else {
throw cljs.core.missing_protocol("IWriter.-flush",writer);
}
}
})().call(null,writer);
}
});


cljs.core.IPrintWithWriter = (function (){var obj28284 = {};
return obj28284;
})();

cljs.core._pr_writer = (function _pr_writer(o,writer,opts){
if((function (){var and__24262__auto__ = o;
if(and__24262__auto__){
return o.cljs$core$IPrintWithWriter$_pr_writer$arity$3;
} else {
return and__24262__auto__;
}
})()){
return o.cljs$core$IPrintWithWriter$_pr_writer$arity$3(o,writer,opts);
} else {
var x__24918__auto__ = (((o == null))?null:o);
return (function (){var or__24274__auto__ = (cljs.core._pr_writer[(function (){var G__28288 = x__24918__auto__;
return goog.typeOf(G__28288);
})()]);
if(or__24274__auto__){
return or__24274__auto__;
} else {
var or__24274__auto____$1 = (cljs.core._pr_writer["_"]);
if(or__24274__auto____$1){
return or__24274__auto____$1;
} else {
throw cljs.core.missing_protocol("IPrintWithWriter.-pr-writer",o);
}
}
})().call(null,o,writer,opts);
}
});


cljs.core.IPending = (function (){var obj28290 = {};
return obj28290;
})();

cljs.core._realized_QMARK_ = (function _realized_QMARK_(d){
if((function (){var and__24262__auto__ = d;
if(and__24262__auto__){
return d.cljs$core$IPending$_realized_QMARK_$arity$1;
} else {
return and__24262__auto__;
}
})()){
return d.cljs$core$IPending$_realized_QMARK_$arity$1(d);
} else {
var x__24918__auto__ = (((d == null))?null:d);
return (function (){var or__24274__auto__ = (cljs.core._realized_QMARK_[(function (){var G__28294 = x__24918__auto__;
return goog.typeOf(G__28294);
})()]);
if(or__24274__auto__){
return or__24274__auto__;
} else {
var or__24274__auto____$1 = (cljs.core._realized_QMARK_["_"]);
if(or__24274__auto____$1){
return or__24274__auto____$1;
} else {
throw cljs.core.missing_protocol("IPending.-realized?",d);
}
}
})().call(null,d);
}
});


cljs.core.IWatchable = (function (){var obj28296 = {};
return obj28296;
})();

cljs.core._notify_watches = (function _notify_watches(this$,oldval,newval){
if((function (){var and__24262__auto__ = this$;
if(and__24262__auto__){
return this$.cljs$core$IWatchable$_notify_watches$arity$3;
} else {
return and__24262__auto__;
}
})()){
return this$.cljs$core$IWatchable$_notify_watches$arity$3(this$,oldval,newval);
} else {
var x__24918__auto__ = (((this$ == null))?null:this$);
return (function (){var or__24274__auto__ = (cljs.core._notify_watches[(function (){var G__28300 = x__24918__auto__;
return goog.typeOf(G__28300);
})()]);
if(or__24274__auto__){
return or__24274__auto__;
} else {
var or__24274__auto____$1 = (cljs.core._notify_watches["_"]);
if(or__24274__auto____$1){
return or__24274__auto____$1;
} else {
throw cljs.core.missing_protocol("IWatchable.-notify-watches",this$);
}
}
})().call(null,this$,oldval,newval);
}
});

cljs.core._add_watch = (function _add_watch(this$,key,f){
if((function (){var and__24262__auto__ = this$;
if(and__24262__auto__){
return this$.cljs$core$IWatchable$_add_watch$arity$3;
} else {
return and__24262__auto__;
}
})()){
return this$.cljs$core$IWatchable$_add_watch$arity$3(this$,key,f);
} else {
var x__24918__auto__ = (((this$ == null))?null:this$);
return (function (){var or__24274__auto__ = (cljs.core._add_watch[(function (){var G__28304 = x__24918__auto__;
return goog.typeOf(G__28304);
})()]);
if(or__24274__auto__){
return or__24274__auto__;
} else {
var or__24274__auto____$1 = (cljs.core._add_watch["_"]);
if(or__24274__auto____$1){
return or__24274__auto____$1;
} else {
throw cljs.core.missing_protocol("IWatchable.-add-watch",this$);
}
}
})().call(null,this$,key,f);
}
});

cljs.core._remove_watch = (function _remove_watch(this$,key){
if((function (){var and__24262__auto__ = this$;
if(and__24262__auto__){
return this$.cljs$core$IWatchable$_remove_watch$arity$2;
} else {
return and__24262__auto__;
}
})()){
return this$.cljs$core$IWatchable$_remove_watch$arity$2(this$,key);
} else {
var x__24918__auto__ = (((this$ == null))?null:this$);
return (function (){var or__24274__auto__ = (cljs.core._remove_watch[(function (){var G__28308 = x__24918__auto__;
return goog.typeOf(G__28308);
})()]);
if(or__24274__auto__){
return or__24274__auto__;
} else {
var or__24274__auto____$1 = (cljs.core._remove_watch["_"]);
if(or__24274__auto____$1){
return or__24274__auto____$1;
} else {
throw cljs.core.missing_protocol("IWatchable.-remove-watch",this$);
}
}
})().call(null,this$,key);
}
});


cljs.core.IEditableCollection = (function (){var obj28310 = {};
return obj28310;
})();

cljs.core._as_transient = (function _as_transient(coll){
if((function (){var and__24262__auto__ = coll;
if(and__24262__auto__){
return coll.cljs$core$IEditableCollection$_as_transient$arity$1;
} else {
return and__24262__auto__;
}
})()){
return coll.cljs$core$IEditableCollection$_as_transient$arity$1(coll);
} else {
var x__24918__auto__ = (((coll == null))?null:coll);
return (function (){var or__24274__auto__ = (cljs.core._as_transient[(function (){var G__28314 = x__24918__auto__;
return goog.typeOf(G__28314);
})()]);
if(or__24274__auto__){
return or__24274__auto__;
} else {
var or__24274__auto____$1 = (cljs.core._as_transient["_"]);
if(or__24274__auto____$1){
return or__24274__auto____$1;
} else {
throw cljs.core.missing_protocol("IEditableCollection.-as-transient",coll);
}
}
})().call(null,coll);
}
});


cljs.core.ITransientCollection = (function (){var obj28316 = {};
return obj28316;
})();

cljs.core._conj_BANG_ = (function _conj_BANG_(tcoll,val){
if((function (){var and__24262__auto__ = tcoll;
if(and__24262__auto__){
return tcoll.cljs$core$ITransientCollection$_conj_BANG_$arity$2;
} else {
return and__24262__auto__;
}
})()){
return tcoll.cljs$core$ITransientCollection$_conj_BANG_$arity$2(tcoll,val);
} else {
var x__24918__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__24274__auto__ = (cljs.core._conj_BANG_[(function (){var G__28320 = x__24918__auto__;
return goog.typeOf(G__28320);
})()]);
if(or__24274__auto__){
return or__24274__auto__;
} else {
var or__24274__auto____$1 = (cljs.core._conj_BANG_["_"]);
if(or__24274__auto____$1){
return or__24274__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientCollection.-conj!",tcoll);
}
}
})().call(null,tcoll,val);
}
});

cljs.core._persistent_BANG_ = (function _persistent_BANG_(tcoll){
if((function (){var and__24262__auto__ = tcoll;
if(and__24262__auto__){
return tcoll.cljs$core$ITransientCollection$_persistent_BANG_$arity$1;
} else {
return and__24262__auto__;
}
})()){
return tcoll.cljs$core$ITransientCollection$_persistent_BANG_$arity$1(tcoll);
} else {
var x__24918__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__24274__auto__ = (cljs.core._persistent_BANG_[(function (){var G__28324 = x__24918__auto__;
return goog.typeOf(G__28324);
})()]);
if(or__24274__auto__){
return or__24274__auto__;
} else {
var or__24274__auto____$1 = (cljs.core._persistent_BANG_["_"]);
if(or__24274__auto____$1){
return or__24274__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientCollection.-persistent!",tcoll);
}
}
})().call(null,tcoll);
}
});


cljs.core.ITransientAssociative = (function (){var obj28326 = {};
return obj28326;
})();

cljs.core._assoc_BANG_ = (function _assoc_BANG_(tcoll,key,val){
if((function (){var and__24262__auto__ = tcoll;
if(and__24262__auto__){
return tcoll.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3;
} else {
return and__24262__auto__;
}
})()){
return tcoll.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3(tcoll,key,val);
} else {
var x__24918__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__24274__auto__ = (cljs.core._assoc_BANG_[(function (){var G__28330 = x__24918__auto__;
return goog.typeOf(G__28330);
})()]);
if(or__24274__auto__){
return or__24274__auto__;
} else {
var or__24274__auto____$1 = (cljs.core._assoc_BANG_["_"]);
if(or__24274__auto____$1){
return or__24274__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientAssociative.-assoc!",tcoll);
}
}
})().call(null,tcoll,key,val);
}
});


cljs.core.ITransientMap = (function (){var obj28332 = {};
return obj28332;
})();

cljs.core._dissoc_BANG_ = (function _dissoc_BANG_(tcoll,key){
if((function (){var and__24262__auto__ = tcoll;
if(and__24262__auto__){
return tcoll.cljs$core$ITransientMap$_dissoc_BANG_$arity$2;
} else {
return and__24262__auto__;
}
})()){
return tcoll.cljs$core$ITransientMap$_dissoc_BANG_$arity$2(tcoll,key);
} else {
var x__24918__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__24274__auto__ = (cljs.core._dissoc_BANG_[(function (){var G__28336 = x__24918__auto__;
return goog.typeOf(G__28336);
})()]);
if(or__24274__auto__){
return or__24274__auto__;
} else {
var or__24274__auto____$1 = (cljs.core._dissoc_BANG_["_"]);
if(or__24274__auto____$1){
return or__24274__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientMap.-dissoc!",tcoll);
}
}
})().call(null,tcoll,key);
}
});


cljs.core.ITransientVector = (function (){var obj28338 = {};
return obj28338;
})();

cljs.core._assoc_n_BANG_ = (function _assoc_n_BANG_(tcoll,n,val){
if((function (){var and__24262__auto__ = tcoll;
if(and__24262__auto__){
return tcoll.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3;
} else {
return and__24262__auto__;
}
})()){
return tcoll.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3(tcoll,n,val);
} else {
var x__24918__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__24274__auto__ = (cljs.core._assoc_n_BANG_[(function (){var G__28342 = x__24918__auto__;
return goog.typeOf(G__28342);
})()]);
if(or__24274__auto__){
return or__24274__auto__;
} else {
var or__24274__auto____$1 = (cljs.core._assoc_n_BANG_["_"]);
if(or__24274__auto____$1){
return or__24274__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientVector.-assoc-n!",tcoll);
}
}
})().call(null,tcoll,n,val);
}
});

cljs.core._pop_BANG_ = (function _pop_BANG_(tcoll){
if((function (){var and__24262__auto__ = tcoll;
if(and__24262__auto__){
return tcoll.cljs$core$ITransientVector$_pop_BANG_$arity$1;
} else {
return and__24262__auto__;
}
})()){
return tcoll.cljs$core$ITransientVector$_pop_BANG_$arity$1(tcoll);
} else {
var x__24918__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__24274__auto__ = (cljs.core._pop_BANG_[(function (){var G__28346 = x__24918__auto__;
return goog.typeOf(G__28346);
})()]);
if(or__24274__auto__){
return or__24274__auto__;
} else {
var or__24274__auto____$1 = (cljs.core._pop_BANG_["_"]);
if(or__24274__auto____$1){
return or__24274__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientVector.-pop!",tcoll);
}
}
})().call(null,tcoll);
}
});


cljs.core.ITransientSet = (function (){var obj28348 = {};
return obj28348;
})();

cljs.core._disjoin_BANG_ = (function _disjoin_BANG_(tcoll,v){
if((function (){var and__24262__auto__ = tcoll;
if(and__24262__auto__){
return tcoll.cljs$core$ITransientSet$_disjoin_BANG_$arity$2;
} else {
return and__24262__auto__;
}
})()){
return tcoll.cljs$core$ITransientSet$_disjoin_BANG_$arity$2(tcoll,v);
} else {
var x__24918__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__24274__auto__ = (cljs.core._disjoin_BANG_[(function (){var G__28352 = x__24918__auto__;
return goog.typeOf(G__28352);
})()]);
if(or__24274__auto__){
return or__24274__auto__;
} else {
var or__24274__auto____$1 = (cljs.core._disjoin_BANG_["_"]);
if(or__24274__auto____$1){
return or__24274__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientSet.-disjoin!",tcoll);
}
}
})().call(null,tcoll,v);
}
});


cljs.core.IComparable = (function (){var obj28354 = {};
return obj28354;
})();

cljs.core._compare = (function _compare(x,y){
if((function (){var and__24262__auto__ = x;
if(and__24262__auto__){
return x.cljs$core$IComparable$_compare$arity$2;
} else {
return and__24262__auto__;
}
})()){
return x.cljs$core$IComparable$_compare$arity$2(x,y);
} else {
var x__24918__auto__ = (((x == null))?null:x);
return (function (){var or__24274__auto__ = (cljs.core._compare[(function (){var G__28358 = x__24918__auto__;
return goog.typeOf(G__28358);
})()]);
if(or__24274__auto__){
return or__24274__auto__;
} else {
var or__24274__auto____$1 = (cljs.core._compare["_"]);
if(or__24274__auto____$1){
return or__24274__auto____$1;
} else {
throw cljs.core.missing_protocol("IComparable.-compare",x);
}
}
})().call(null,x,y);
}
});


cljs.core.IChunk = (function (){var obj28360 = {};
return obj28360;
})();

cljs.core._drop_first = (function _drop_first(coll){
if((function (){var and__24262__auto__ = coll;
if(and__24262__auto__){
return coll.cljs$core$IChunk$_drop_first$arity$1;
} else {
return and__24262__auto__;
}
})()){
return coll.cljs$core$IChunk$_drop_first$arity$1(coll);
} else {
var x__24918__auto__ = (((coll == null))?null:coll);
return (function (){var or__24274__auto__ = (cljs.core._drop_first[(function (){var G__28364 = x__24918__auto__;
return goog.typeOf(G__28364);
})()]);
if(or__24274__auto__){
return or__24274__auto__;
} else {
var or__24274__auto____$1 = (cljs.core._drop_first["_"]);
if(or__24274__auto____$1){
return or__24274__auto____$1;
} else {
throw cljs.core.missing_protocol("IChunk.-drop-first",coll);
}
}
})().call(null,coll);
}
});


cljs.core.IChunkedSeq = (function (){var obj28366 = {};
return obj28366;
})();

cljs.core._chunked_first = (function _chunked_first(coll){
if((function (){var and__24262__auto__ = coll;
if(and__24262__auto__){
return coll.cljs$core$IChunkedSeq$_chunked_first$arity$1;
} else {
return and__24262__auto__;
}
})()){
return coll.cljs$core$IChunkedSeq$_chunked_first$arity$1(coll);
} else {
var x__24918__auto__ = (((coll == null))?null:coll);
return (function (){var or__24274__auto__ = (cljs.core._chunked_first[(function (){var G__28370 = x__24918__auto__;
return goog.typeOf(G__28370);
})()]);
if(or__24274__auto__){
return or__24274__auto__;
} else {
var or__24274__auto____$1 = (cljs.core._chunked_first["_"]);
if(or__24274__auto____$1){
return or__24274__auto____$1;
} else {
throw cljs.core.missing_protocol("IChunkedSeq.-chunked-first",coll);
}
}
})().call(null,coll);
}
});

cljs.core._chunked_rest = (function _chunked_rest(coll){
if((function (){var and__24262__auto__ = coll;
if(and__24262__auto__){
return coll.cljs$core$IChunkedSeq$_chunked_rest$arity$1;
} else {
return and__24262__auto__;
}
})()){
return coll.cljs$core$IChunkedSeq$_chunked_rest$arity$1(coll);
} else {
var x__24918__auto__ = (((coll == null))?null:coll);
return (function (){var or__24274__auto__ = (cljs.core._chunked_rest[(function (){var G__28374 = x__24918__auto__;
return goog.typeOf(G__28374);
})()]);
if(or__24274__auto__){
return or__24274__auto__;
} else {
var or__24274__auto____$1 = (cljs.core._chunked_rest["_"]);
if(or__24274__auto____$1){
return or__24274__auto____$1;
} else {
throw cljs.core.missing_protocol("IChunkedSeq.-chunked-rest",coll);
}
}
})().call(null,coll);
}
});


cljs.core.IChunkedNext = (function (){var obj28376 = {};
return obj28376;
})();

cljs.core._chunked_next = (function _chunked_next(coll){
if((function (){var and__24262__auto__ = coll;
if(and__24262__auto__){
return coll.cljs$core$IChunkedNext$_chunked_next$arity$1;
} else {
return and__24262__auto__;
}
})()){
return coll.cljs$core$IChunkedNext$_chunked_next$arity$1(coll);
} else {
var x__24918__auto__ = (((coll == null))?null:coll);
return (function (){var or__24274__auto__ = (cljs.core._chunked_next[(function (){var G__28380 = x__24918__auto__;
return goog.typeOf(G__28380);
})()]);
if(or__24274__auto__){
return or__24274__auto__;
} else {
var or__24274__auto____$1 = (cljs.core._chunked_next["_"]);
if(or__24274__auto____$1){
return or__24274__auto____$1;
} else {
throw cljs.core.missing_protocol("IChunkedNext.-chunked-next",coll);
}
}
})().call(null,coll);
}
});


cljs.core.INamed = (function (){var obj28382 = {};
return obj28382;
})();

cljs.core._name = (function _name(x){
if((function (){var and__24262__auto__ = x;
if(and__24262__auto__){
return x.cljs$core$INamed$_name$arity$1;
} else {
return and__24262__auto__;
}
})()){
return x.cljs$core$INamed$_name$arity$1(x);
} else {
var x__24918__auto__ = (((x == null))?null:x);
return (function (){var or__24274__auto__ = (cljs.core._name[(function (){var G__28386 = x__24918__auto__;
return goog.typeOf(G__28386);
})()]);
if(or__24274__auto__){
return or__24274__auto__;
} else {
var or__24274__auto____$1 = (cljs.core._name["_"]);
if(or__24274__auto____$1){
return or__24274__auto____$1;
} else {
throw cljs.core.missing_protocol("INamed.-name",x);
}
}
})().call(null,x);
}
});

cljs.core._namespace = (function _namespace(x){
if((function (){var and__24262__auto__ = x;
if(and__24262__auto__){
return x.cljs$core$INamed$_namespace$arity$1;
} else {
return and__24262__auto__;
}
})()){
return x.cljs$core$INamed$_namespace$arity$1(x);
} else {
var x__24918__auto__ = (((x == null))?null:x);
return (function (){var or__24274__auto__ = (cljs.core._namespace[(function (){var G__28390 = x__24918__auto__;
return goog.typeOf(G__28390);
})()]);
if(or__24274__auto__){
return or__24274__auto__;
} else {
var or__24274__auto____$1 = (cljs.core._namespace["_"]);
if(or__24274__auto____$1){
return or__24274__auto____$1;
} else {
throw cljs.core.missing_protocol("INamed.-namespace",x);
}
}
})().call(null,x);
}
});


cljs.core.IAtom = (function (){var obj28392 = {};
return obj28392;
})();


cljs.core.IReset = (function (){var obj28394 = {};
return obj28394;
})();

cljs.core._reset_BANG_ = (function _reset_BANG_(o,new_value){
if((function (){var and__24262__auto__ = o;
if(and__24262__auto__){
return o.cljs$core$IReset$_reset_BANG_$arity$2;
} else {
return and__24262__auto__;
}
})()){
return o.cljs$core$IReset$_reset_BANG_$arity$2(o,new_value);
} else {
var x__24918__auto__ = (((o == null))?null:o);
return (function (){var or__24274__auto__ = (cljs.core._reset_BANG_[(function (){var G__28398 = x__24918__auto__;
return goog.typeOf(G__28398);
})()]);
if(or__24274__auto__){
return or__24274__auto__;
} else {
var or__24274__auto____$1 = (cljs.core._reset_BANG_["_"]);
if(or__24274__auto____$1){
return or__24274__auto____$1;
} else {
throw cljs.core.missing_protocol("IReset.-reset!",o);
}
}
})().call(null,o,new_value);
}
});


cljs.core.ISwap = (function (){var obj28400 = {};
return obj28400;
})();

cljs.core._swap_BANG_ = (function() {
var _swap_BANG_ = null;
var _swap_BANG___2 = (function (o,f){
if((function (){var and__24262__auto__ = o;
if(and__24262__auto__){
return o.cljs$core$ISwap$_swap_BANG_$arity$2;
} else {
return and__24262__auto__;
}
})()){
return o.cljs$core$ISwap$_swap_BANG_$arity$2(o,f);
} else {
var x__24918__auto__ = (((o == null))?null:o);
return (function (){var or__24274__auto__ = (cljs.core._swap_BANG_[(function (){var G__28410 = x__24918__auto__;
return goog.typeOf(G__28410);
})()]);
if(or__24274__auto__){
return or__24274__auto__;
} else {
var or__24274__auto____$1 = (cljs.core._swap_BANG_["_"]);
if(or__24274__auto____$1){
return or__24274__auto____$1;
} else {
throw cljs.core.missing_protocol("ISwap.-swap!",o);
}
}
})().call(null,o,f);
}
});
var _swap_BANG___3 = (function (o,f,a){
if((function (){var and__24262__auto__ = o;
if(and__24262__auto__){
return o.cljs$core$ISwap$_swap_BANG_$arity$3;
} else {
return and__24262__auto__;
}
})()){
return o.cljs$core$ISwap$_swap_BANG_$arity$3(o,f,a);
} else {
var x__24918__auto__ = (((o == null))?null:o);
return (function (){var or__24274__auto__ = (cljs.core._swap_BANG_[(function (){var G__28412 = x__24918__auto__;
return goog.typeOf(G__28412);
})()]);
if(or__24274__auto__){
return or__24274__auto__;
} else {
var or__24274__auto____$1 = (cljs.core._swap_BANG_["_"]);
if(or__24274__auto____$1){
return or__24274__auto____$1;
} else {
throw cljs.core.missing_protocol("ISwap.-swap!",o);
}
}
})().call(null,o,f,a);
}
});
var _swap_BANG___4 = (function (o,f,a,b){
if((function (){var and__24262__auto__ = o;
if(and__24262__auto__){
return o.cljs$core$ISwap$_swap_BANG_$arity$4;
} else {
return and__24262__auto__;
}
})()){
return o.cljs$core$ISwap$_swap_BANG_$arity$4(o,f,a,b);
} else {
var x__24918__auto__ = (((o == null))?null:o);
return (function (){var or__24274__auto__ = (cljs.core._swap_BANG_[(function (){var G__28414 = x__24918__auto__;
return goog.typeOf(G__28414);
})()]);
if(or__24274__auto__){
return or__24274__auto__;
} else {
var or__24274__auto____$1 = (cljs.core._swap_BANG_["_"]);
if(or__24274__auto____$1){
return or__24274__auto____$1;
} else {
throw cljs.core.missing_protocol("ISwap.-swap!",o);
}
}
})().call(null,o,f,a,b);
}
});
var _swap_BANG___5 = (function (o,f,a,b,xs){
if((function (){var and__24262__auto__ = o;
if(and__24262__auto__){
return o.cljs$core$ISwap$_swap_BANG_$arity$5;
} else {
return and__24262__auto__;
}
})()){
return o.cljs$core$ISwap$_swap_BANG_$arity$5(o,f,a,b,xs);
} else {
var x__24918__auto__ = (((o == null))?null:o);
return (function (){var or__24274__auto__ = (cljs.core._swap_BANG_[(function (){var G__28416 = x__24918__auto__;
return goog.typeOf(G__28416);
})()]);
if(or__24274__auto__){
return or__24274__auto__;
} else {
var or__24274__auto____$1 = (cljs.core._swap_BANG_["_"]);
if(or__24274__auto____$1){
return or__24274__auto____$1;
} else {
throw cljs.core.missing_protocol("ISwap.-swap!",o);
}
}
})().call(null,o,f,a,b,xs);
}
});
_swap_BANG_ = function(o,f,a,b,xs){
switch(arguments.length){
case 2:
return _swap_BANG___2.call(this,o,f);
case 3:
return _swap_BANG___3.call(this,o,f,a);
case 4:
return _swap_BANG___4.call(this,o,f,a,b);
case 5:
return _swap_BANG___5.call(this,o,f,a,b,xs);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_swap_BANG_.cljs$core$IFn$_invoke$arity$2 = _swap_BANG___2;
_swap_BANG_.cljs$core$IFn$_invoke$arity$3 = _swap_BANG___3;
_swap_BANG_.cljs$core$IFn$_invoke$arity$4 = _swap_BANG___4;
_swap_BANG_.cljs$core$IFn$_invoke$arity$5 = _swap_BANG___5;
return _swap_BANG_;
})()
;


cljs.core.IVolatile = (function (){var obj28418 = {};
return obj28418;
})();

cljs.core._vreset_BANG_ = (function _vreset_BANG_(o,new_value){
if((function (){var and__24262__auto__ = o;
if(and__24262__auto__){
return o.cljs$core$IVolatile$_vreset_BANG_$arity$2;
} else {
return and__24262__auto__;
}
})()){
return o.cljs$core$IVolatile$_vreset_BANG_$arity$2(o,new_value);
} else {
var x__24918__auto__ = (((o == null))?null:o);
return (function (){var or__24274__auto__ = (cljs.core._vreset_BANG_[(function (){var G__28422 = x__24918__auto__;
return goog.typeOf(G__28422);
})()]);
if(or__24274__auto__){
return or__24274__auto__;
} else {
var or__24274__auto____$1 = (cljs.core._vreset_BANG_["_"]);
if(or__24274__auto____$1){
return or__24274__auto____$1;
} else {
throw cljs.core.missing_protocol("IVolatile.-vreset!",o);
}
}
})().call(null,o,new_value);
}
});


cljs.core.IIterable = (function (){var obj28424 = {};
return obj28424;
})();

cljs.core._iterator = (function _iterator(coll){
if((function (){var and__24262__auto__ = coll;
if(and__24262__auto__){
return coll.cljs$core$IIterable$_iterator$arity$1;
} else {
return and__24262__auto__;
}
})()){
return coll.cljs$core$IIterable$_iterator$arity$1(coll);
} else {
var x__24918__auto__ = (((coll == null))?null:coll);
return (function (){var or__24274__auto__ = (cljs.core._iterator[(function (){var G__28428 = x__24918__auto__;
return goog.typeOf(G__28428);
})()]);
if(or__24274__auto__){
return or__24274__auto__;
} else {
var or__24274__auto____$1 = (cljs.core._iterator["_"]);
if(or__24274__auto____$1){
return or__24274__auto____$1;
} else {
throw cljs.core.missing_protocol("IIterable.-iterator",coll);
}
}
})().call(null,coll);
}
});


/**
* @constructor
*/
cljs.core.StringBufferWriter = (function (sb){
this.sb = sb;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 1073741824;
})
cljs.core.StringBufferWriter.prototype.cljs$core$IWriter$_write$arity$2 = (function (_,s){
var self__ = this;
var ___$1 = this;
return self__.sb.append(s);
});

cljs.core.StringBufferWriter.prototype.cljs$core$IWriter$_flush$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return null;
});

cljs.core.StringBufferWriter.cljs$lang$type = true;

cljs.core.StringBufferWriter.cljs$lang$ctorStr = "cljs.core/StringBufferWriter";

cljs.core.StringBufferWriter.cljs$lang$ctorPrWriter = (function (this__24861__auto__,writer__24862__auto__,opt__24863__auto__){
return cljs.core._write(writer__24862__auto__,"cljs.core/StringBufferWriter");
});

cljs.core.__GT_StringBufferWriter = (function __GT_StringBufferWriter(sb){
return (new cljs.core.StringBufferWriter(sb));
});

/**
* Support so that collections can implement toString without
* loading all the printing machinery.
*/
cljs.core.pr_str_STAR_ = (function pr_str_STAR_(obj){
var sb = (new goog.string.StringBuffer());
var writer = (new cljs.core.StringBufferWriter(sb));
obj.cljs$core$IPrintWithWriter$_pr_writer$arity$3(null,writer,cljs.core.pr_opts());

writer.cljs$core$IWriter$_flush$arity$1(null);

return [cljs.core.str(sb)].join('');
});
cljs.core.int_rotate_left = (function int_rotate_left(x,n){
return ((x << n) | (x >>> (- n)));
});
if((typeof Math.imul !== 'undefined') && (!(((function (){var G__28431 = (4294967295);
var G__28432 = (5);
return (Math.imul.cljs$core$IFn$_invoke$arity$2 ? Math.imul.cljs$core$IFn$_invoke$arity$2(G__28431,G__28432) : Math.imul.call(null,G__28431,G__28432));
})() === (0))))){
cljs.core.imul = (function imul(a,b){
var G__28435 = a;
var G__28436 = b;
return (Math.imul.cljs$core$IFn$_invoke$arity$2 ? Math.imul.cljs$core$IFn$_invoke$arity$2(G__28435,G__28436) : Math.imul.call(null,G__28435,G__28436));
});
} else {
cljs.core.imul = (function imul(a,b){
var ah = ((a >>> (16)) & (65535));
var al = (a & (65535));
var bh = ((b >>> (16)) & (65535));
var bl = (b & (65535));
return (((al * bl) + ((((ah * bl) + (al * bh)) << (16)) >>> (0))) | (0));
});
}
cljs.core.m3_seed = (0);
cljs.core.m3_C1 = (3432918353);
cljs.core.m3_C2 = (461845907);
cljs.core.m3_mix_K1 = (function m3_mix_K1(k1){
return cljs.core.imul(cljs.core.int_rotate_left(cljs.core.imul(k1,cljs.core.m3_C1),(15)),cljs.core.m3_C2);
});
cljs.core.m3_mix_H1 = (function m3_mix_H1(h1,k1){
return (cljs.core.imul(cljs.core.int_rotate_left((h1 ^ k1),(13)),(5)) + (3864292196));
});
cljs.core.m3_fmix = (function m3_fmix(h1,len){
var h1__$1 = h1;
var h1__$2 = (h1__$1 ^ len);
var h1__$3 = (h1__$2 ^ (h1__$2 >>> (16)));
var h1__$4 = cljs.core.imul(h1__$3,(2246822507));
var h1__$5 = (h1__$4 ^ (h1__$4 >>> (13)));
var h1__$6 = cljs.core.imul(h1__$5,(3266489909));
var h1__$7 = (h1__$6 ^ (h1__$6 >>> (16)));
return h1__$7;
});
cljs.core.m3_hash_int = (function m3_hash_int(in$){
if((in$ === (0))){
return in$;
} else {
var k1 = cljs.core.m3_mix_K1(in$);
var h1 = cljs.core.m3_mix_H1(cljs.core.m3_seed,k1);
return cljs.core.m3_fmix(h1,(4));
}
});
cljs.core.m3_hash_unencoded_chars = (function m3_hash_unencoded_chars(in$){
var h1 = (function (){var i = (1);
var h1 = cljs.core.m3_seed;
while(true){
if((i < in$.length)){
var G__28437 = (i + (2));
var G__28438 = cljs.core.m3_mix_H1(h1,cljs.core.m3_mix_K1((in$.charCodeAt((i - (1))) | (in$.charCodeAt(i) << (16)))));
i = G__28437;
h1 = G__28438;
continue;
} else {
return h1;
}
break;
}
})();
var h1__$1 = ((((in$.length & (1)) === (1)))?(h1 ^ cljs.core.m3_mix_K1(in$.charCodeAt((in$.length - (1))))):h1);
return cljs.core.m3_fmix(h1__$1,cljs.core.imul((2),in$.length));
});



cljs.core.string_hash_cache = (function (){var obj28440 = {};
return obj28440;
})();
cljs.core.string_hash_cache_count = (0);
cljs.core.hash_string_STAR_ = (function hash_string_STAR_(s){
if(!((s == null))){
var len = s.length;
if((len > (0))){
var i = (0);
var hash = (0);
while(true){
if((i < len)){
var G__28441 = (i + (1));
var G__28442 = (cljs.core.imul((31),hash) + s.charCodeAt(i));
i = G__28441;
hash = G__28442;
continue;
} else {
return hash;
}
break;
}
} else {
return (0);
}
} else {
return (0);
}
});
cljs.core.add_to_string_hash_cache = (function add_to_string_hash_cache(k){
var h = cljs.core.hash_string_STAR_(k);
(cljs.core.string_hash_cache[k] = h);

cljs.core.string_hash_cache_count = (cljs.core.string_hash_cache_count + (1));

return h;
});
cljs.core.hash_string = (function hash_string(k){
if((cljs.core.string_hash_cache_count > (255))){
cljs.core.string_hash_cache = (function (){var obj28446 = {};
return obj28446;
})();

cljs.core.string_hash_cache_count = (0);
} else {
}

var h = (cljs.core.string_hash_cache[k]);
if(typeof h === 'number'){
return h;
} else {
return cljs.core.add_to_string_hash_cache(k);
}
});
cljs.core.hash = (function hash(o){
if((function (){var G__28449 = o;
if(G__28449){
var bit__24948__auto__ = (G__28449.cljs$lang$protocol_mask$partition0$ & (4194304));
if((bit__24948__auto__) || (G__28449.cljs$core$IHash$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return o.cljs$core$IHash$_hash$arity$1(null);
} else {
if(typeof o === 'number'){
return ((function (){var G__28450 = o;
return (Math.floor.cljs$core$IFn$_invoke$arity$1 ? Math.floor.cljs$core$IFn$_invoke$arity$1(G__28450) : Math.floor.call(null,G__28450));
})() % (2147483647));
} else {
if(o === true){
return (1);
} else {
if(o === false){
return (0);
} else {
if(typeof o === 'string'){
return cljs.core.m3_hash_int(cljs.core.hash_string(o));
} else {
if((o instanceof Date)){
return o.valueOf();
} else {
if((o == null)){
return (0);
} else {
return cljs.core._hash(o);

}
}
}
}
}
}
}
});
cljs.core.hash_combine = (function hash_combine(seed,hash){
return (seed ^ (((hash + (2654435769)) + (seed << (6))) + (seed >> (2))));
});
cljs.core.instance_QMARK_ = (function instance_QMARK_(t,o){
return (o instanceof t);
});
cljs.core.symbol_QMARK_ = (function symbol_QMARK_(x){
return (x instanceof cljs.core.Symbol);
});
cljs.core.hash_symbol = (function hash_symbol(sym){
return cljs.core.hash_combine(cljs.core.m3_hash_unencoded_chars(sym.name),cljs.core.hash_string(sym.ns));
});
cljs.core.compare_symbols = (function compare_symbols(a,b){
if((a.str === b.str)){
return (0);
} else {
if(cljs.core.truth_((function (){var and__24262__auto__ = cljs.core.not(a.ns);
if(and__24262__auto__){
return b.ns;
} else {
return and__24262__auto__;
}
})())){
return (-1);
} else {
if(cljs.core.truth_(a.ns)){
if(cljs.core.not(b.ns)){
return (1);
} else {
var nsc = (function (){var G__28457 = a.ns;
var G__28458 = b.ns;
return goog.array.defaultCompare(G__28457,G__28458);
})();
if(((0) === nsc)){
var G__28459 = a.name;
var G__28460 = b.name;
return goog.array.defaultCompare(G__28459,G__28460);
} else {
return nsc;
}
}
} else {
var G__28461 = a.name;
var G__28462 = b.name;
return goog.array.defaultCompare(G__28461,G__28462);

}
}
}
});

/**
* @constructor
*/
cljs.core.Symbol = (function (ns,name,str,_hash,_meta){
this.ns = ns;
this.name = name;
this.str = str;
this._hash = _hash;
this._meta = _meta;
this.cljs$lang$protocol_mask$partition0$ = 2154168321;
this.cljs$lang$protocol_mask$partition1$ = 4096;
})
cljs.core.Symbol.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (o,writer,_){
var self__ = this;
var o__$1 = this;
return cljs.core._write(writer,self__.str);
});

cljs.core.Symbol.prototype.cljs$core$INamed$_name$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.name;
});

cljs.core.Symbol.prototype.cljs$core$INamed$_namespace$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.ns;
});

cljs.core.Symbol.prototype.cljs$core$IHash$_hash$arity$1 = (function (sym){
var self__ = this;
var sym__$1 = this;
var h__24695__auto__ = self__._hash;
if(!((h__24695__auto__ == null))){
return h__24695__auto__;
} else {
var h__24695__auto____$1 = cljs.core.hash_symbol(sym__$1);
self__._hash = h__24695__auto____$1;

return h__24695__auto____$1;
}
});

cljs.core.Symbol.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (_,new_meta){
var self__ = this;
var ___$1 = this;
return (new cljs.core.Symbol(self__.ns,self__.name,self__.str,self__._hash,new_meta));
});

cljs.core.Symbol.prototype.cljs$core$IMeta$_meta$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__._meta;
});

cljs.core.Symbol.prototype.call = (function() {
var G__28464 = null;
var G__28464__2 = (function (self__,coll){
var self__ = this;
var self____$1 = this;
var sym = self____$1;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll,sym,null);
});
var G__28464__3 = (function (self__,coll,not_found){
var self__ = this;
var self____$1 = this;
var sym = self____$1;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll,sym,not_found);
});
G__28464 = function(self__,coll,not_found){
switch(arguments.length){
case 2:
return G__28464__2.call(this,self__,coll);
case 3:
return G__28464__3.call(this,self__,coll,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__28464.cljs$core$IFn$_invoke$arity$2 = G__28464__2;
G__28464.cljs$core$IFn$_invoke$arity$3 = G__28464__3;
return G__28464;
})()
;

cljs.core.Symbol.prototype.apply = (function (self__,args28463){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args28463)));
});

cljs.core.Symbol.prototype.cljs$core$IFn$_invoke$arity$1 = (function (coll){
var self__ = this;
var sym = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll,sym,null);
});

cljs.core.Symbol.prototype.cljs$core$IFn$_invoke$arity$2 = (function (coll,not_found){
var self__ = this;
var sym = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll,sym,not_found);
});

cljs.core.Symbol.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (_,other){
var self__ = this;
var ___$1 = this;
if((other instanceof cljs.core.Symbol)){
return (self__.str === other.str);
} else {
return false;
}
});

cljs.core.Symbol.prototype.toString = (function (){
var self__ = this;
var _ = this;
return self__.str;
});

cljs.core.Symbol.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.Symbol.cljs$lang$type = true;

cljs.core.Symbol.cljs$lang$ctorStr = "cljs.core/Symbol";

cljs.core.Symbol.cljs$lang$ctorPrWriter = (function (this__24861__auto__,writer__24862__auto__,opt__24863__auto__){
return cljs.core._write(writer__24862__auto__,"cljs.core/Symbol");
});

cljs.core.__GT_Symbol = (function __GT_Symbol(ns,name,str,_hash,_meta){
return (new cljs.core.Symbol(ns,name,str,_hash,_meta));
});

cljs.core.symbol = (function() {
var symbol = null;
var symbol__1 = (function (name){
if((name instanceof cljs.core.Symbol)){
return name;
} else {
return symbol.cljs$core$IFn$_invoke$arity$2(null,name);
}
});
var symbol__2 = (function (ns,name){
var sym_str = ((!((ns == null)))?[cljs.core.str(ns),cljs.core.str("/"),cljs.core.str(name)].join(''):name);
return (new cljs.core.Symbol(ns,name,sym_str,null,null));
});
symbol = function(ns,name){
switch(arguments.length){
case 1:
return symbol__1.call(this,ns);
case 2:
return symbol__2.call(this,ns,name);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
symbol.cljs$core$IFn$_invoke$arity$1 = symbol__1;
symbol.cljs$core$IFn$_invoke$arity$2 = symbol__2;
return symbol;
})()
;

/**
* @constructor
*/
cljs.core.Var = (function (val,sym,_meta){
this.val = val;
this.sym = sym;
this._meta = _meta;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 163840;
})
cljs.core.Var.prototype.cljs$core$IMeta$_meta$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__._meta;
});

cljs.core.Var.prototype.cljs$core$IDeref$_deref$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.val;
});

cljs.core.Var.cljs$lang$type = true;

cljs.core.Var.cljs$lang$ctorStr = "cljs.core/Var";

cljs.core.Var.cljs$lang$ctorPrWriter = (function (this__24861__auto__,writer__24862__auto__,opt__24863__auto__){
return cljs.core._write(writer__24862__auto__,"cljs.core/Var");
});

cljs.core.__GT_Var = (function __GT_Var(val,sym,_meta){
return (new cljs.core.Var(val,sym,_meta));
});



cljs.core.iterable_QMARK_ = (function iterable_QMARK_(x){
var G__28468 = x;
if(G__28468){
var bit__24955__auto__ = null;
if(cljs.core.truth_((function (){var or__24274__auto__ = bit__24955__auto__;
if(cljs.core.truth_(or__24274__auto__)){
return or__24274__auto__;
} else {
return G__28468.cljs$core$IIterable$;
}
})())){
return true;
} else {
if((!G__28468.cljs$lang$protocol_mask$partition$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IIterable,G__28468);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IIterable,G__28468);
}
});
cljs.core.clone = (function clone(value){
return cljs.core._clone(value);
});
cljs.core.cloneable_QMARK_ = (function cloneable_QMARK_(value){
var G__28470 = value;
if(G__28470){
var bit__24955__auto__ = (G__28470.cljs$lang$protocol_mask$partition1$ & (8192));
if((bit__24955__auto__) || (G__28470.cljs$core$ICloneable$)){
return true;
} else {
if((!G__28470.cljs$lang$protocol_mask$partition1$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ICloneable,G__28470);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ICloneable,G__28470);
}
});
/**
* Returns a seq on the collection. If the collection is
* empty, returns nil.  (seq nil) returns nil. seq also works on
* Strings.
*/
cljs.core.seq = (function seq(coll){
if((coll == null)){
return null;
} else {
if((function (){var G__28472 = coll;
if(G__28472){
var bit__24948__auto__ = (G__28472.cljs$lang$protocol_mask$partition0$ & (8388608));
if((bit__24948__auto__) || (G__28472.cljs$core$ISeqable$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$ISeqable$_seq$arity$1(null);
} else {
if(coll instanceof Array){
if((coll.length === (0))){
return null;
} else {
return (new cljs.core.IndexedSeq(coll,(0)));
}
} else {
if(typeof coll === 'string'){
if((coll.length === (0))){
return null;
} else {
return (new cljs.core.IndexedSeq(coll,(0)));
}
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.ISeqable,coll)){
return cljs.core._seq(coll);
} else {
throw (new Error([cljs.core.str(coll),cljs.core.str(" is not ISeqable")].join('')));

}
}
}
}
}
});
/**
* Returns the first item in the collection. Calls seq on its
* argument. If coll is nil, returns nil.
*/
cljs.core.first = (function first(coll){
if((coll == null)){
return null;
} else {
if((function (){var G__28474 = coll;
if(G__28474){
var bit__24948__auto__ = (G__28474.cljs$lang$protocol_mask$partition0$ & (64));
if((bit__24948__auto__) || (G__28474.cljs$core$ISeq$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$ISeq$_first$arity$1(null);
} else {
var s = cljs.core.seq(coll);
if((s == null)){
return null;
} else {
return cljs.core._first(s);
}
}
}
});
/**
* Returns a possibly empty seq of the items after the first. Calls seq on its
* argument.
*/
cljs.core.rest = (function rest(coll){
if(!((coll == null))){
if((function (){var G__28476 = coll;
if(G__28476){
var bit__24948__auto__ = (G__28476.cljs$lang$protocol_mask$partition0$ & (64));
if((bit__24948__auto__) || (G__28476.cljs$core$ISeq$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$ISeq$_rest$arity$1(null);
} else {
var s = cljs.core.seq(coll);
if(s){
return cljs.core._rest(s);
} else {
return cljs.core.List.EMPTY;
}
}
} else {
return cljs.core.List.EMPTY;
}
});
/**
* Returns a seq of the items after the first. Calls seq on its
* argument.  If there are no more items, returns nil
*/
cljs.core.next = (function next(coll){
if((coll == null)){
return null;
} else {
if((function (){var G__28478 = coll;
if(G__28478){
var bit__24948__auto__ = (G__28478.cljs$lang$protocol_mask$partition0$ & (128));
if((bit__24948__auto__) || (G__28478.cljs$core$INext$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$INext$_next$arity$1(null);
} else {
return cljs.core.seq(cljs.core.rest(coll));
}
}
});
/**
* Equality. Returns true if x equals y, false if not. Compares
* numbers and collections in a type-independent manner.  Clojure's immutable data
* structures define -equiv (and thus =) as a value, not an identity,
* comparison.
* @param {...*} var_args
*/
cljs.core._EQ_ = (function() {
var _EQ_ = null;
var _EQ___1 = (function (x){
return true;
});
var _EQ___2 = (function (x,y){
if((x == null)){
return (y == null);
} else {
return ((x === y)) || (cljs.core._equiv(x,y));
}
});
var _EQ___3 = (function() { 
var G__28483__delegate = function (x,y,more){
while(true){
if(_EQ_.cljs$core$IFn$_invoke$arity$2(x,y)){
if(cljs.core.next(more)){
var G__28484 = y;
var G__28485 = cljs.core.first(more);
var G__28486 = cljs.core.next(more);
x = G__28484;
y = G__28485;
more = G__28486;
continue;
} else {
return _EQ_.cljs$core$IFn$_invoke$arity$2(y,cljs.core.first(more));
}
} else {
return false;
}
break;
}
};
var G__28483 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__28487__i = 0, G__28487__a = new Array(arguments.length -  2);
while (G__28487__i < G__28487__a.length) {G__28487__a[G__28487__i] = arguments[G__28487__i + 2]; ++G__28487__i;}
  more = new cljs.core.IndexedSeq(G__28487__a,0);
} 
return G__28483__delegate.call(this,x,y,more);};
G__28483.cljs$lang$maxFixedArity = 2;
G__28483.cljs$lang$applyTo = (function (arglist__28488){
var x = cljs.core.first(arglist__28488);
arglist__28488 = cljs.core.next(arglist__28488);
var y = cljs.core.first(arglist__28488);
var more = cljs.core.rest(arglist__28488);
return G__28483__delegate(x,y,more);
});
G__28483.cljs$core$IFn$_invoke$arity$variadic = G__28483__delegate;
return G__28483;
})()
;
_EQ_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return _EQ___1.call(this,x);
case 2:
return _EQ___2.call(this,x,y);
default:
var G__28489 = null;
if (arguments.length > 2) {
var G__28490__i = 0, G__28490__a = new Array(arguments.length -  2);
while (G__28490__i < G__28490__a.length) {G__28490__a[G__28490__i] = arguments[G__28490__i + 2]; ++G__28490__i;}
G__28489 = new cljs.core.IndexedSeq(G__28490__a,0);
}
return _EQ___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__28489);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_EQ_.cljs$lang$maxFixedArity = 2;
_EQ_.cljs$lang$applyTo = _EQ___3.cljs$lang$applyTo;
_EQ_.cljs$core$IFn$_invoke$arity$1 = _EQ___1;
_EQ_.cljs$core$IFn$_invoke$arity$2 = _EQ___2;
_EQ_.cljs$core$IFn$_invoke$arity$variadic = _EQ___3.cljs$core$IFn$_invoke$arity$variadic;
return _EQ_;
})()
;

/**
* @constructor
*/
cljs.core.ES6Iterator = (function (s){
this.s = s;
})
cljs.core.ES6Iterator.prototype.next = (function (){
var self__ = this;
var _ = this;
if(!((self__.s == null))){
var x = cljs.core.first(self__.s);
self__.s = cljs.core.next(self__.s);

return {"done": false, "value": x};
} else {
return {"done": true, "value": null};
}
});

cljs.core.ES6Iterator.cljs$lang$type = true;

cljs.core.ES6Iterator.cljs$lang$ctorStr = "cljs.core/ES6Iterator";

cljs.core.ES6Iterator.cljs$lang$ctorPrWriter = (function (this__24861__auto__,writer__24862__auto__,opt__24863__auto__){
return cljs.core._write(writer__24862__auto__,"cljs.core/ES6Iterator");
});

cljs.core.__GT_ES6Iterator = (function __GT_ES6Iterator(s){
return (new cljs.core.ES6Iterator(s));
});

cljs.core.es6_iterator = (function es6_iterator(coll){
return (new cljs.core.ES6Iterator(cljs.core.seq(coll)));
});

/**
* @constructor
*/
cljs.core.ES6IteratorSeq = (function (value,iter,_rest){
this.value = value;
this.iter = iter;
this._rest = _rest;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 8388672;
})
cljs.core.ES6IteratorSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.value;
});

cljs.core.ES6IteratorSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
if((self__._rest == null)){
self__._rest = (function (){var G__28491 = self__.iter;
return (cljs.core.es6_iterator_seq.cljs$core$IFn$_invoke$arity$1 ? cljs.core.es6_iterator_seq.cljs$core$IFn$_invoke$arity$1(G__28491) : cljs.core.es6_iterator_seq.call(null,G__28491));
})();
} else {
}

return self__._rest;
});

cljs.core.ES6IteratorSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return this$__$1;
});

cljs.core.ES6IteratorSeq.cljs$lang$type = true;

cljs.core.ES6IteratorSeq.cljs$lang$ctorStr = "cljs.core/ES6IteratorSeq";

cljs.core.ES6IteratorSeq.cljs$lang$ctorPrWriter = (function (this__24861__auto__,writer__24862__auto__,opt__24863__auto__){
return cljs.core._write(writer__24862__auto__,"cljs.core/ES6IteratorSeq");
});

cljs.core.__GT_ES6IteratorSeq = (function __GT_ES6IteratorSeq(value,iter,_rest){
return (new cljs.core.ES6IteratorSeq(value,iter,_rest));
});

cljs.core.es6_iterator_seq = (function es6_iterator_seq(iter){
var v = iter.next();
if(cljs.core.truth_(v.done)){
return cljs.core.List.EMPTY;
} else {
return (new cljs.core.ES6IteratorSeq(v.value,iter,null));
}
});
/**
* Mix final collection hash for ordered or unordered collections.
* hash-basis is the combined collection hash, count is the number
* of elements included in the basis. Note this is the hash code
* consistent with =, different from .hashCode.
* See http://clojure.org/data_structures#hash for full algorithms.
*/
cljs.core.mix_collection_hash = (function mix_collection_hash(hash_basis,count){
var h1 = cljs.core.m3_seed;
var k1 = cljs.core.m3_mix_K1(hash_basis);
var h1__$1 = cljs.core.m3_mix_H1(h1,k1);
return cljs.core.m3_fmix(h1__$1,count);
});
/**
* Returns the hash code, consistent with =, for an external ordered
* collection implementing Iterable.
* See http://clojure.org/data_structures#hash for full algorithms.
*/
cljs.core.hash_ordered_coll = (function hash_ordered_coll(coll){
var n = (0);
var hash_code = (1);
var coll__$1 = cljs.core.seq(coll);
while(true){
if(!((coll__$1 == null))){
var G__28492 = (n + (1));
var G__28493 = ((cljs.core.imul((31),hash_code) + cljs.core.hash(cljs.core.first(coll__$1))) | (0));
var G__28494 = cljs.core.next(coll__$1);
n = G__28492;
hash_code = G__28493;
coll__$1 = G__28494;
continue;
} else {
return cljs.core.mix_collection_hash(hash_code,n);
}
break;
}
});
/**
* Returns the hash code, consistent with =, for an external unordered
* collection implementing Iterable. For maps, the iterator should
* return map entries whose hash is computed as
* (hash-ordered-coll [k v]).
* See http://clojure.org/data_structures#hash for full algorithms.
*/
cljs.core.hash_unordered_coll = (function hash_unordered_coll(coll){
var n = (0);
var hash_code = (0);
var coll__$1 = cljs.core.seq(coll);
while(true){
if(!((coll__$1 == null))){
var G__28495 = (n + (1));
var G__28496 = ((hash_code + cljs.core.hash(cljs.core.first(coll__$1))) | (0));
var G__28497 = cljs.core.next(coll__$1);
n = G__28495;
hash_code = G__28496;
coll__$1 = G__28497;
continue;
} else {
return cljs.core.mix_collection_hash(hash_code,n);
}
break;
}
});


(cljs.core.ICounted["null"] = true);

(cljs.core._count["null"] = (function (_){
return (0);
}));
Date.prototype.cljs$core$IEquiv$ = true;

Date.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (o,other){
var o__$1 = this;
return ((other instanceof Date)) && ((o__$1.toString() === other.toString()));
});
(cljs.core.IEquiv["number"] = true);

(cljs.core._equiv["number"] = (function (x,o){
return (x === o);
}));
(cljs.core.IMeta["function"] = true);

(cljs.core._meta["function"] = (function (_){
return null;
}));

(cljs.core.Fn["function"] = true);
(cljs.core.IHash["_"] = true);

(cljs.core._hash["_"] = (function (o){
var G__28498 = o;
return goog.getUid(G__28498);
}));
/**
* Returns a number one greater than num.
*/
cljs.core.inc = (function inc(x){
return (x + (1));
});

/**
* @constructor
*/
cljs.core.Reduced = (function (val){
this.val = val;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32768;
})
cljs.core.Reduced.prototype.cljs$core$IDeref$_deref$arity$1 = (function (o){
var self__ = this;
var o__$1 = this;
return self__.val;
});

cljs.core.Reduced.cljs$lang$type = true;

cljs.core.Reduced.cljs$lang$ctorStr = "cljs.core/Reduced";

cljs.core.Reduced.cljs$lang$ctorPrWriter = (function (this__24861__auto__,writer__24862__auto__,opt__24863__auto__){
return cljs.core._write(writer__24862__auto__,"cljs.core/Reduced");
});

cljs.core.__GT_Reduced = (function __GT_Reduced(val){
return (new cljs.core.Reduced(val));
});

/**
* Wraps x in a way such that a reduce will terminate with the value x
*/
cljs.core.reduced = (function reduced(x){
return (new cljs.core.Reduced(x));
});
/**
* Returns true if x is the result of a call to reduced
*/
cljs.core.reduced_QMARK_ = (function reduced_QMARK_(r){
return (r instanceof cljs.core.Reduced);
});
/**
* If x is already reduced?, returns it, else returns (reduced x)
*/
cljs.core.ensure_reduced = (function ensure_reduced(x){
if(cljs.core.reduced_QMARK_(x)){
return x;
} else {
return cljs.core.reduced(x);
}
});
/**
* If x is reduced?, returns (deref x), else returns x
*/
cljs.core.unreduced = (function unreduced(x){
if(cljs.core.reduced_QMARK_(x)){
var G__28500 = x;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__28500) : cljs.core.deref.call(null,G__28500));
} else {
return x;
}
});
cljs.core.deref = (function deref(o){
return cljs.core._deref(o);
});
/**
* Accepts any collection which satisfies the ICount and IIndexed protocols and
* reduces them without incurring seq initialization
*/
cljs.core.ci_reduce = (function() {
var ci_reduce = null;
var ci_reduce__2 = (function (cicoll,f){
var cnt = cljs.core._count(cicoll);
if((cnt === (0))){
return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
} else {
var val = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(cicoll,(0));
var n = (1);
while(true){
if((n < cnt)){
var nval = (function (){var G__28507 = val;
var G__28508 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(cicoll,n);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__28507,G__28508) : f.call(null,G__28507,G__28508));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__28513 = nval;
var G__28514 = (n + (1));
val = G__28513;
n = G__28514;
continue;
}
} else {
return val;
}
break;
}
}
});
var ci_reduce__3 = (function (cicoll,f,val){
var cnt = cljs.core._count(cicoll);
var val__$1 = val;
var n = (0);
while(true){
if((n < cnt)){
var nval = (function (){var G__28509 = val__$1;
var G__28510 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(cicoll,n);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__28509,G__28510) : f.call(null,G__28509,G__28510));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__28515 = nval;
var G__28516 = (n + (1));
val__$1 = G__28515;
n = G__28516;
continue;
}
} else {
return val__$1;
}
break;
}
});
var ci_reduce__4 = (function (cicoll,f,val,idx){
var cnt = cljs.core._count(cicoll);
var val__$1 = val;
var n = idx;
while(true){
if((n < cnt)){
var nval = (function (){var G__28511 = val__$1;
var G__28512 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(cicoll,n);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__28511,G__28512) : f.call(null,G__28511,G__28512));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__28517 = nval;
var G__28518 = (n + (1));
val__$1 = G__28517;
n = G__28518;
continue;
}
} else {
return val__$1;
}
break;
}
});
ci_reduce = function(cicoll,f,val,idx){
switch(arguments.length){
case 2:
return ci_reduce__2.call(this,cicoll,f);
case 3:
return ci_reduce__3.call(this,cicoll,f,val);
case 4:
return ci_reduce__4.call(this,cicoll,f,val,idx);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
ci_reduce.cljs$core$IFn$_invoke$arity$2 = ci_reduce__2;
ci_reduce.cljs$core$IFn$_invoke$arity$3 = ci_reduce__3;
ci_reduce.cljs$core$IFn$_invoke$arity$4 = ci_reduce__4;
return ci_reduce;
})()
;
cljs.core.array_reduce = (function() {
var array_reduce = null;
var array_reduce__2 = (function (arr,f){
var cnt = arr.length;
if((arr.length === (0))){
return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
} else {
var val = (arr[(0)]);
var n = (1);
while(true){
if((n < cnt)){
var nval = (function (){var G__28525 = val;
var G__28526 = (arr[n]);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__28525,G__28526) : f.call(null,G__28525,G__28526));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__28531 = nval;
var G__28532 = (n + (1));
val = G__28531;
n = G__28532;
continue;
}
} else {
return val;
}
break;
}
}
});
var array_reduce__3 = (function (arr,f,val){
var cnt = arr.length;
var val__$1 = val;
var n = (0);
while(true){
if((n < cnt)){
var nval = (function (){var G__28527 = val__$1;
var G__28528 = (arr[n]);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__28527,G__28528) : f.call(null,G__28527,G__28528));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__28533 = nval;
var G__28534 = (n + (1));
val__$1 = G__28533;
n = G__28534;
continue;
}
} else {
return val__$1;
}
break;
}
});
var array_reduce__4 = (function (arr,f,val,idx){
var cnt = arr.length;
var val__$1 = val;
var n = idx;
while(true){
if((n < cnt)){
var nval = (function (){var G__28529 = val__$1;
var G__28530 = (arr[n]);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__28529,G__28530) : f.call(null,G__28529,G__28530));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__28535 = nval;
var G__28536 = (n + (1));
val__$1 = G__28535;
n = G__28536;
continue;
}
} else {
return val__$1;
}
break;
}
});
array_reduce = function(arr,f,val,idx){
switch(arguments.length){
case 2:
return array_reduce__2.call(this,arr,f);
case 3:
return array_reduce__3.call(this,arr,f,val);
case 4:
return array_reduce__4.call(this,arr,f,val,idx);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
array_reduce.cljs$core$IFn$_invoke$arity$2 = array_reduce__2;
array_reduce.cljs$core$IFn$_invoke$arity$3 = array_reduce__3;
array_reduce.cljs$core$IFn$_invoke$arity$4 = array_reduce__4;
return array_reduce;
})()
;



/**
* Returns true if coll implements count in constant time
*/
cljs.core.counted_QMARK_ = (function counted_QMARK_(x){
var G__28538 = x;
if(G__28538){
var bit__24955__auto__ = (G__28538.cljs$lang$protocol_mask$partition0$ & (2));
if((bit__24955__auto__) || (G__28538.cljs$core$ICounted$)){
return true;
} else {
if((!G__28538.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ICounted,G__28538);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ICounted,G__28538);
}
});
/**
* Returns true if coll implements nth in constant time
*/
cljs.core.indexed_QMARK_ = (function indexed_QMARK_(x){
var G__28540 = x;
if(G__28540){
var bit__24955__auto__ = (G__28540.cljs$lang$protocol_mask$partition0$ & (16));
if((bit__24955__auto__) || (G__28540.cljs$core$IIndexed$)){
return true;
} else {
if((!G__28540.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IIndexed,G__28540);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IIndexed,G__28540);
}
});

/**
* @constructor
*/
cljs.core.IndexedSeqIterator = (function (arr,i){
this.arr = arr;
this.i = i;
})
cljs.core.IndexedSeqIterator.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
return (self__.i < self__.arr.length);
});

cljs.core.IndexedSeqIterator.prototype.next = (function (){
var self__ = this;
var _ = this;
var ret = (self__.arr[self__.i]);
self__.i = (self__.i + (1));

return ret;
});

cljs.core.IndexedSeqIterator.cljs$lang$type = true;

cljs.core.IndexedSeqIterator.cljs$lang$ctorStr = "cljs.core/IndexedSeqIterator";

cljs.core.IndexedSeqIterator.cljs$lang$ctorPrWriter = (function (this__24861__auto__,writer__24862__auto__,opt__24863__auto__){
return cljs.core._write(writer__24862__auto__,"cljs.core/IndexedSeqIterator");
});

cljs.core.__GT_IndexedSeqIterator = (function __GT_IndexedSeqIterator(arr,i){
return (new cljs.core.IndexedSeqIterator(arr,i));
});


/**
* @constructor
*/
cljs.core.IndexedSeq = (function (arr,i){
this.arr = arr;
this.i = i;
this.cljs$lang$protocol_mask$partition0$ = 166199550;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.IndexedSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.IndexedSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.IndexedSeq.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (coll,n){
var self__ = this;
var coll__$1 = this;
var i__$1 = (n + self__.i);
if((i__$1 < self__.arr.length)){
return (self__.arr[i__$1]);
} else {
return null;
}
});

cljs.core.IndexedSeq.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (coll,n,not_found){
var self__ = this;
var coll__$1 = this;
var i__$1 = (n + self__.i);
if((i__$1 < self__.arr.length)){
return (self__.arr[i__$1]);
} else {
return not_found;
}
});

cljs.core.IndexedSeq.prototype.cljs$core$IIterable$ = true;

cljs.core.IndexedSeq.prototype.cljs$core$IIterable$_iterator$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.IndexedSeqIterator(self__.arr,self__.i));
});

cljs.core.IndexedSeq.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.IndexedSeq(self__.arr,self__.i));
});

cljs.core.IndexedSeq.prototype.cljs$core$INext$_next$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
if(((self__.i + (1)) < self__.arr.length)){
return (new cljs.core.IndexedSeq(self__.arr,(self__.i + (1))));
} else {
return null;
}
});

cljs.core.IndexedSeq.prototype.cljs$core$ICounted$_count$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (self__.arr.length - self__.i);
});

cljs.core.IndexedSeq.prototype.cljs$core$IReversible$_rseq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var c = cljs.core._count(coll__$1);
if((c > (0))){
return (new cljs.core.RSeq(coll__$1,(c - (1)),null));
} else {
return null;
}
});

cljs.core.IndexedSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.hash_ordered_coll(coll__$1);
});

cljs.core.IndexedSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
var G__28541 = coll__$1;
var G__28542 = other;
return (cljs.core.equiv_sequential.cljs$core$IFn$_invoke$arity$2 ? cljs.core.equiv_sequential.cljs$core$IFn$_invoke$arity$2(G__28541,G__28542) : cljs.core.equiv_sequential.call(null,G__28541,G__28542));
});

cljs.core.IndexedSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.List.EMPTY;
});

cljs.core.IndexedSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4(self__.arr,f,(self__.arr[self__.i]),(self__.i + (1)));
});

cljs.core.IndexedSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4(self__.arr,f,start,self__.i);
});

cljs.core.IndexedSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (self__.arr[self__.i]);
});

cljs.core.IndexedSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
if(((self__.i + (1)) < self__.arr.length)){
return (new cljs.core.IndexedSeq(self__.arr,(self__.i + (1))));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.IndexedSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return this$__$1;
});

cljs.core.IndexedSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
var G__28543 = o;
var G__28544 = coll__$1;
return (cljs.core.cons.cljs$core$IFn$_invoke$arity$2 ? cljs.core.cons.cljs$core$IFn$_invoke$arity$2(G__28543,G__28544) : cljs.core.cons.call(null,G__28543,G__28544));
});

cljs.core.IndexedSeq.cljs$lang$type = true;

cljs.core.IndexedSeq.cljs$lang$ctorStr = "cljs.core/IndexedSeq";

cljs.core.IndexedSeq.cljs$lang$ctorPrWriter = (function (this__24861__auto__,writer__24862__auto__,opt__24863__auto__){
return cljs.core._write(writer__24862__auto__,"cljs.core/IndexedSeq");
});

cljs.core.__GT_IndexedSeq = (function __GT_IndexedSeq(arr,i){
return (new cljs.core.IndexedSeq(arr,i));
});

(cljs.core.IndexedSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__25252__auto__ = this;
return cljs.core.es6_iterator(this__25252__auto__);
}));
cljs.core.prim_seq = (function() {
var prim_seq = null;
var prim_seq__1 = (function (prim){
return prim_seq.cljs$core$IFn$_invoke$arity$2(prim,(0));
});
var prim_seq__2 = (function (prim,i){
if((i < prim.length)){
return (new cljs.core.IndexedSeq(prim,i));
} else {
return null;
}
});
prim_seq = function(prim,i){
switch(arguments.length){
case 1:
return prim_seq__1.call(this,prim);
case 2:
return prim_seq__2.call(this,prim,i);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
prim_seq.cljs$core$IFn$_invoke$arity$1 = prim_seq__1;
prim_seq.cljs$core$IFn$_invoke$arity$2 = prim_seq__2;
return prim_seq;
})()
;
cljs.core.array_seq = (function() {
var array_seq = null;
var array_seq__1 = (function (array){
return cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(array,(0));
});
var array_seq__2 = (function (array,i){
return cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(array,i);
});
array_seq = function(array,i){
switch(arguments.length){
case 1:
return array_seq__1.call(this,array);
case 2:
return array_seq__2.call(this,array,i);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
array_seq.cljs$core$IFn$_invoke$arity$1 = array_seq__1;
array_seq.cljs$core$IFn$_invoke$arity$2 = array_seq__2;
return array_seq;
})()
;


/**
* @constructor
*/
cljs.core.RSeq = (function (ci,i,meta){
this.ci = ci;
this.i = i;
this.meta = meta;
this.cljs$lang$protocol_mask$partition0$ = 32374990;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.RSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.RSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.RSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.RSeq.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.RSeq(self__.ci,self__.i,self__.meta));
});

cljs.core.RSeq.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.i > (0))){
return (new cljs.core.RSeq(self__.ci,(self__.i - (1)),null));
} else {
return null;
}
});

cljs.core.RSeq.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (self__.i + (1));
});

cljs.core.RSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.hash_ordered_coll(coll__$1);
});

cljs.core.RSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
var G__28547 = coll__$1;
var G__28548 = other;
return (cljs.core.equiv_sequential.cljs$core$IFn$_invoke$arity$2 ? cljs.core.equiv_sequential.cljs$core$IFn$_invoke$arity$2(G__28547,G__28548) : cljs.core.equiv_sequential.call(null,G__28547,G__28548));
});

cljs.core.RSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var G__28549 = cljs.core.List.EMPTY;
var G__28550 = self__.meta;
return (cljs.core.with_meta.cljs$core$IFn$_invoke$arity$2 ? cljs.core.with_meta.cljs$core$IFn$_invoke$arity$2(G__28549,G__28550) : cljs.core.with_meta.call(null,G__28549,G__28550));
});

cljs.core.RSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (col,f){
var self__ = this;
var col__$1 = this;
var G__28551 = f;
var G__28552 = col__$1;
return (cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2 ? cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(G__28551,G__28552) : cljs.core.seq_reduce.call(null,G__28551,G__28552));
});

cljs.core.RSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (col,f,start){
var self__ = this;
var col__$1 = this;
var G__28553 = f;
var G__28554 = start;
var G__28555 = col__$1;
return (cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3 ? cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(G__28553,G__28554,G__28555) : cljs.core.seq_reduce.call(null,G__28553,G__28554,G__28555));
});

cljs.core.RSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.ci,self__.i);
});

cljs.core.RSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.i > (0))){
return (new cljs.core.RSeq(self__.ci,(self__.i - (1)),null));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.RSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.RSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,new_meta){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.RSeq(self__.ci,self__.i,new_meta));
});

cljs.core.RSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
var G__28556 = o;
var G__28557 = coll__$1;
return (cljs.core.cons.cljs$core$IFn$_invoke$arity$2 ? cljs.core.cons.cljs$core$IFn$_invoke$arity$2(G__28556,G__28557) : cljs.core.cons.call(null,G__28556,G__28557));
});

cljs.core.RSeq.cljs$lang$type = true;

cljs.core.RSeq.cljs$lang$ctorStr = "cljs.core/RSeq";

cljs.core.RSeq.cljs$lang$ctorPrWriter = (function (this__24861__auto__,writer__24862__auto__,opt__24863__auto__){
return cljs.core._write(writer__24862__auto__,"cljs.core/RSeq");
});

cljs.core.__GT_RSeq = (function __GT_RSeq(ci,i,meta){
return (new cljs.core.RSeq(ci,i,meta));
});

(cljs.core.RSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__25252__auto__ = this;
return cljs.core.es6_iterator(this__25252__auto__);
}));
/**
* Same as (first (next x))
*/
cljs.core.second = (function second(coll){
return cljs.core.first(cljs.core.next(coll));
});
/**
* Same as (first (first x))
*/
cljs.core.ffirst = (function ffirst(coll){
return cljs.core.first(cljs.core.first(coll));
});
/**
* Same as (next (first x))
*/
cljs.core.nfirst = (function nfirst(coll){
return cljs.core.next(cljs.core.first(coll));
});
/**
* Same as (first (next x))
*/
cljs.core.fnext = (function fnext(coll){
return cljs.core.first(cljs.core.next(coll));
});
/**
* Same as (next (next x))
*/
cljs.core.nnext = (function nnext(coll){
return cljs.core.next(cljs.core.next(coll));
});
/**
* Return the last item in coll, in linear time
*/
cljs.core.last = (function last(s){
while(true){
var sn = cljs.core.next(s);
if(!((sn == null))){
var G__28558 = sn;
s = G__28558;
continue;
} else {
return cljs.core.first(s);
}
break;
}
});
(cljs.core.IEquiv["_"] = true);

(cljs.core._equiv["_"] = (function (x,o){
return (x === o);
}));
/**
* conj[oin]. Returns a new collection with the xs
* 'added'. (conj nil item) returns (item).  The 'addition' may
* happen at different 'places' depending on the concrete type.
* @param {...*} var_args
*/
cljs.core.conj = (function() {
var conj = null;
var conj__0 = (function (){
return cljs.core.PersistentVector.EMPTY;
});
var conj__1 = (function (coll){
return coll;
});
var conj__2 = (function (coll,x){
if(!((coll == null))){
return cljs.core._conj(coll,x);
} else {
return cljs.core._conj(cljs.core.List.EMPTY,x);
}
});
var conj__3 = (function() { 
var G__28563__delegate = function (coll,x,xs){
while(true){
if(cljs.core.truth_(xs)){
var G__28564 = conj.cljs$core$IFn$_invoke$arity$2(coll,x);
var G__28565 = cljs.core.first(xs);
var G__28566 = cljs.core.next(xs);
coll = G__28564;
x = G__28565;
xs = G__28566;
continue;
} else {
return conj.cljs$core$IFn$_invoke$arity$2(coll,x);
}
break;
}
};
var G__28563 = function (coll,x,var_args){
var xs = null;
if (arguments.length > 2) {
var G__28567__i = 0, G__28567__a = new Array(arguments.length -  2);
while (G__28567__i < G__28567__a.length) {G__28567__a[G__28567__i] = arguments[G__28567__i + 2]; ++G__28567__i;}
  xs = new cljs.core.IndexedSeq(G__28567__a,0);
} 
return G__28563__delegate.call(this,coll,x,xs);};
G__28563.cljs$lang$maxFixedArity = 2;
G__28563.cljs$lang$applyTo = (function (arglist__28568){
var coll = cljs.core.first(arglist__28568);
arglist__28568 = cljs.core.next(arglist__28568);
var x = cljs.core.first(arglist__28568);
var xs = cljs.core.rest(arglist__28568);
return G__28563__delegate(coll,x,xs);
});
G__28563.cljs$core$IFn$_invoke$arity$variadic = G__28563__delegate;
return G__28563;
})()
;
conj = function(coll,x,var_args){
var xs = var_args;
switch(arguments.length){
case 0:
return conj__0.call(this);
case 1:
return conj__1.call(this,coll);
case 2:
return conj__2.call(this,coll,x);
default:
var G__28569 = null;
if (arguments.length > 2) {
var G__28570__i = 0, G__28570__a = new Array(arguments.length -  2);
while (G__28570__i < G__28570__a.length) {G__28570__a[G__28570__i] = arguments[G__28570__i + 2]; ++G__28570__i;}
G__28569 = new cljs.core.IndexedSeq(G__28570__a,0);
}
return conj__3.cljs$core$IFn$_invoke$arity$variadic(coll,x, G__28569);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
conj.cljs$lang$maxFixedArity = 2;
conj.cljs$lang$applyTo = conj__3.cljs$lang$applyTo;
conj.cljs$core$IFn$_invoke$arity$0 = conj__0;
conj.cljs$core$IFn$_invoke$arity$1 = conj__1;
conj.cljs$core$IFn$_invoke$arity$2 = conj__2;
conj.cljs$core$IFn$_invoke$arity$variadic = conj__3.cljs$core$IFn$_invoke$arity$variadic;
return conj;
})()
;
/**
* Returns an empty collection of the same category as coll, or nil
*/
cljs.core.empty = (function empty(coll){
if((coll == null)){
return null;
} else {
return cljs.core._empty(coll);
}
});
cljs.core.accumulating_seq_count = (function accumulating_seq_count(coll){
var s = cljs.core.seq(coll);
var acc = (0);
while(true){
if(cljs.core.counted_QMARK_(s)){
return (acc + cljs.core._count(s));
} else {
var G__28571 = cljs.core.next(s);
var G__28572 = (acc + (1));
s = G__28571;
acc = G__28572;
continue;
}
break;
}
});
/**
* Returns the number of items in the collection. (count nil) returns
* 0.  Also works on strings, arrays, and Maps
*/
cljs.core.count = (function count(coll){
if(!((coll == null))){
if((function (){var G__28574 = coll;
if(G__28574){
var bit__24948__auto__ = (G__28574.cljs$lang$protocol_mask$partition0$ & (2));
if((bit__24948__auto__) || (G__28574.cljs$core$ICounted$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$ICounted$_count$arity$1(null);
} else {
if(coll instanceof Array){
return coll.length;
} else {
if(typeof coll === 'string'){
return coll.length;
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.ICounted,coll)){
return cljs.core._count(coll);
} else {
return cljs.core.accumulating_seq_count(coll);

}
}
}
}
} else {
return (0);
}
});
cljs.core.linear_traversal_nth = (function() {
var linear_traversal_nth = null;
var linear_traversal_nth__2 = (function (coll,n){
while(true){
if((coll == null)){
throw (new Error("Index out of bounds"));
} else {
if((n === (0))){
if(cljs.core.seq(coll)){
return cljs.core.first(coll);
} else {
throw (new Error("Index out of bounds"));
}
} else {
if(cljs.core.indexed_QMARK_(coll)){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll,n);
} else {
if(cljs.core.seq(coll)){
var G__28575 = cljs.core.next(coll);
var G__28576 = (n - (1));
coll = G__28575;
n = G__28576;
continue;
} else {
throw (new Error("Index out of bounds"));

}
}
}
}
break;
}
});
var linear_traversal_nth__3 = (function (coll,n,not_found){
while(true){
if((coll == null)){
return not_found;
} else {
if((n === (0))){
if(cljs.core.seq(coll)){
return cljs.core.first(coll);
} else {
return not_found;
}
} else {
if(cljs.core.indexed_QMARK_(coll)){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(coll,n,not_found);
} else {
if(cljs.core.seq(coll)){
var G__28577 = cljs.core.next(coll);
var G__28578 = (n - (1));
var G__28579 = not_found;
coll = G__28577;
n = G__28578;
not_found = G__28579;
continue;
} else {
return not_found;

}
}
}
}
break;
}
});
linear_traversal_nth = function(coll,n,not_found){
switch(arguments.length){
case 2:
return linear_traversal_nth__2.call(this,coll,n);
case 3:
return linear_traversal_nth__3.call(this,coll,n,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
linear_traversal_nth.cljs$core$IFn$_invoke$arity$2 = linear_traversal_nth__2;
linear_traversal_nth.cljs$core$IFn$_invoke$arity$3 = linear_traversal_nth__3;
return linear_traversal_nth;
})()
;
/**
* Returns the value at the index. get returns nil if index out of
* bounds, nth throws an exception unless not-found is supplied.  nth
* also works for strings, arrays, regex Matchers and Lists, and,
* in O(n) time, for sequences.
*/
cljs.core.nth = (function() {
var nth = null;
var nth__2 = (function (coll,n){
if(!(typeof n === 'number')){
throw (new Error("index argument to nth must be a number"));
} else {
if((coll == null)){
return coll;
} else {
if((function (){var G__28584 = coll;
if(G__28584){
var bit__24948__auto__ = (G__28584.cljs$lang$protocol_mask$partition0$ & (16));
if((bit__24948__auto__) || (G__28584.cljs$core$IIndexed$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$IIndexed$_nth$arity$2(null,n);
} else {
if(coll instanceof Array){
if((n < coll.length)){
return (coll[n]);
} else {
return null;
}
} else {
if(typeof coll === 'string'){
if((n < coll.length)){
return (coll[n]);
} else {
return null;
}
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.IIndexed,coll)){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll,n);
} else {
if((function (){var G__28585 = coll;
if(G__28585){
var bit__24955__auto__ = (G__28585.cljs$lang$protocol_mask$partition0$ & (64));
if((bit__24955__auto__) || (G__28585.cljs$core$ISeq$)){
return true;
} else {
if((!G__28585.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq,G__28585);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq,G__28585);
}
})()){
return cljs.core.linear_traversal_nth.cljs$core$IFn$_invoke$arity$2(coll,n);
} else {
throw (new Error([cljs.core.str("nth not supported on this type "),cljs.core.str(cljs.core.type__GT_str(cljs.core.type(coll)))].join('')));

}
}
}
}
}
}
}
});
var nth__3 = (function (coll,n,not_found){
if(!(typeof n === 'number')){
throw (new Error("index argument to nth must be a number."));
} else {
if((coll == null)){
return not_found;
} else {
if((function (){var G__28586 = coll;
if(G__28586){
var bit__24948__auto__ = (G__28586.cljs$lang$protocol_mask$partition0$ & (16));
if((bit__24948__auto__) || (G__28586.cljs$core$IIndexed$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$IIndexed$_nth$arity$3(null,n,not_found);
} else {
if(coll instanceof Array){
if((n < coll.length)){
return (coll[n]);
} else {
return not_found;
}
} else {
if(typeof coll === 'string'){
if((n < coll.length)){
return (coll[n]);
} else {
return not_found;
}
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.IIndexed,coll)){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll,n);
} else {
if((function (){var G__28587 = coll;
if(G__28587){
var bit__24955__auto__ = (G__28587.cljs$lang$protocol_mask$partition0$ & (64));
if((bit__24955__auto__) || (G__28587.cljs$core$ISeq$)){
return true;
} else {
if((!G__28587.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq,G__28587);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq,G__28587);
}
})()){
return cljs.core.linear_traversal_nth.cljs$core$IFn$_invoke$arity$3(coll,n,not_found);
} else {
throw (new Error([cljs.core.str("nth not supported on this type "),cljs.core.str(cljs.core.type__GT_str(cljs.core.type(coll)))].join('')));

}
}
}
}
}
}
}
});
nth = function(coll,n,not_found){
switch(arguments.length){
case 2:
return nth__2.call(this,coll,n);
case 3:
return nth__3.call(this,coll,n,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
nth.cljs$core$IFn$_invoke$arity$2 = nth__2;
nth.cljs$core$IFn$_invoke$arity$3 = nth__3;
return nth;
})()
;
/**
* Returns the nth rest of coll, coll when n is 0.
*/
cljs.core.nthrest = (function nthrest(coll,n){
var n__$1 = n;
var xs = coll;
while(true){
if(((n__$1 > (0))) && (cljs.core.seq(xs))){
var G__28588 = (n__$1 - (1));
var G__28589 = cljs.core.rest(xs);
n__$1 = G__28588;
xs = G__28589;
continue;
} else {
return xs;
}
break;
}
});
/**
* Returns the value mapped to key, not-found or nil if key not present.
*/
cljs.core.get = (function() {
var get = null;
var get__2 = (function (o,k){
if((o == null)){
return null;
} else {
if((function (){var G__28592 = o;
if(G__28592){
var bit__24948__auto__ = (G__28592.cljs$lang$protocol_mask$partition0$ & (256));
if((bit__24948__auto__) || (G__28592.cljs$core$ILookup$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return o.cljs$core$ILookup$_lookup$arity$2(null,k);
} else {
if(o instanceof Array){
if((k < o.length)){
return (o[k]);
} else {
return null;
}
} else {
if(typeof o === 'string'){
if((k < o.length)){
return (o[k]);
} else {
return null;
}
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.ILookup,o)){
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$2(o,k);
} else {
return null;

}
}
}
}
}
});
var get__3 = (function (o,k,not_found){
if(!((o == null))){
if((function (){var G__28593 = o;
if(G__28593){
var bit__24948__auto__ = (G__28593.cljs$lang$protocol_mask$partition0$ & (256));
if((bit__24948__auto__) || (G__28593.cljs$core$ILookup$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return o.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
} else {
if(o instanceof Array){
if((k < o.length)){
return (o[k]);
} else {
return not_found;
}
} else {
if(typeof o === 'string'){
if((k < o.length)){
return (o[k]);
} else {
return not_found;
}
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.ILookup,o)){
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(o,k,not_found);
} else {
return not_found;

}
}
}
}
} else {
return not_found;
}
});
get = function(o,k,not_found){
switch(arguments.length){
case 2:
return get__2.call(this,o,k);
case 3:
return get__3.call(this,o,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
get.cljs$core$IFn$_invoke$arity$2 = get__2;
get.cljs$core$IFn$_invoke$arity$3 = get__3;
return get;
})()
;
/**
* assoc[iate]. When applied to a map, returns a new map of the
* same (hashed/sorted) type, that contains the mapping of key(s) to
* val(s). When applied to a vector, returns a new vector that
* contains val at index.
* @param {...*} var_args
*/
cljs.core.assoc = (function() {
var assoc = null;
var assoc__3 = (function (coll,k,v){
if(!((coll == null))){
return cljs.core._assoc(coll,k,v);
} else {
return cljs.core.PersistentHashMap.fromArrays([k],[v]);
}
});
var assoc__4 = (function() { 
var G__28597__delegate = function (coll,k,v,kvs){
while(true){
var ret = assoc.cljs$core$IFn$_invoke$arity$3(coll,k,v);
if(cljs.core.truth_(kvs)){
var G__28598 = ret;
var G__28599 = cljs.core.first(kvs);
var G__28600 = cljs.core.second(kvs);
var G__28601 = cljs.core.nnext(kvs);
coll = G__28598;
k = G__28599;
v = G__28600;
kvs = G__28601;
continue;
} else {
return ret;
}
break;
}
};
var G__28597 = function (coll,k,v,var_args){
var kvs = null;
if (arguments.length > 3) {
var G__28602__i = 0, G__28602__a = new Array(arguments.length -  3);
while (G__28602__i < G__28602__a.length) {G__28602__a[G__28602__i] = arguments[G__28602__i + 3]; ++G__28602__i;}
  kvs = new cljs.core.IndexedSeq(G__28602__a,0);
} 
return G__28597__delegate.call(this,coll,k,v,kvs);};
G__28597.cljs$lang$maxFixedArity = 3;
G__28597.cljs$lang$applyTo = (function (arglist__28603){
var coll = cljs.core.first(arglist__28603);
arglist__28603 = cljs.core.next(arglist__28603);
var k = cljs.core.first(arglist__28603);
arglist__28603 = cljs.core.next(arglist__28603);
var v = cljs.core.first(arglist__28603);
var kvs = cljs.core.rest(arglist__28603);
return G__28597__delegate(coll,k,v,kvs);
});
G__28597.cljs$core$IFn$_invoke$arity$variadic = G__28597__delegate;
return G__28597;
})()
;
assoc = function(coll,k,v,var_args){
var kvs = var_args;
switch(arguments.length){
case 3:
return assoc__3.call(this,coll,k,v);
default:
var G__28604 = null;
if (arguments.length > 3) {
var G__28605__i = 0, G__28605__a = new Array(arguments.length -  3);
while (G__28605__i < G__28605__a.length) {G__28605__a[G__28605__i] = arguments[G__28605__i + 3]; ++G__28605__i;}
G__28604 = new cljs.core.IndexedSeq(G__28605__a,0);
}
return assoc__4.cljs$core$IFn$_invoke$arity$variadic(coll,k,v, G__28604);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
assoc.cljs$lang$maxFixedArity = 3;
assoc.cljs$lang$applyTo = assoc__4.cljs$lang$applyTo;
assoc.cljs$core$IFn$_invoke$arity$3 = assoc__3;
assoc.cljs$core$IFn$_invoke$arity$variadic = assoc__4.cljs$core$IFn$_invoke$arity$variadic;
return assoc;
})()
;
/**
* dissoc[iate]. Returns a new map of the same (hashed/sorted) type,
* that does not contain a mapping for key(s).
* @param {...*} var_args
*/
cljs.core.dissoc = (function() {
var dissoc = null;
var dissoc__1 = (function (coll){
return coll;
});
var dissoc__2 = (function (coll,k){
if((coll == null)){
return null;
} else {
return cljs.core._dissoc(coll,k);
}
});
var dissoc__3 = (function() { 
var G__28608__delegate = function (coll,k,ks){
while(true){
if((coll == null)){
return null;
} else {
var ret = dissoc.cljs$core$IFn$_invoke$arity$2(coll,k);
if(cljs.core.truth_(ks)){
var G__28609 = ret;
var G__28610 = cljs.core.first(ks);
var G__28611 = cljs.core.next(ks);
coll = G__28609;
k = G__28610;
ks = G__28611;
continue;
} else {
return ret;
}
}
break;
}
};
var G__28608 = function (coll,k,var_args){
var ks = null;
if (arguments.length > 2) {
var G__28612__i = 0, G__28612__a = new Array(arguments.length -  2);
while (G__28612__i < G__28612__a.length) {G__28612__a[G__28612__i] = arguments[G__28612__i + 2]; ++G__28612__i;}
  ks = new cljs.core.IndexedSeq(G__28612__a,0);
} 
return G__28608__delegate.call(this,coll,k,ks);};
G__28608.cljs$lang$maxFixedArity = 2;
G__28608.cljs$lang$applyTo = (function (arglist__28613){
var coll = cljs.core.first(arglist__28613);
arglist__28613 = cljs.core.next(arglist__28613);
var k = cljs.core.first(arglist__28613);
var ks = cljs.core.rest(arglist__28613);
return G__28608__delegate(coll,k,ks);
});
G__28608.cljs$core$IFn$_invoke$arity$variadic = G__28608__delegate;
return G__28608;
})()
;
dissoc = function(coll,k,var_args){
var ks = var_args;
switch(arguments.length){
case 1:
return dissoc__1.call(this,coll);
case 2:
return dissoc__2.call(this,coll,k);
default:
var G__28614 = null;
if (arguments.length > 2) {
var G__28615__i = 0, G__28615__a = new Array(arguments.length -  2);
while (G__28615__i < G__28615__a.length) {G__28615__a[G__28615__i] = arguments[G__28615__i + 2]; ++G__28615__i;}
G__28614 = new cljs.core.IndexedSeq(G__28615__a,0);
}
return dissoc__3.cljs$core$IFn$_invoke$arity$variadic(coll,k, G__28614);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
dissoc.cljs$lang$maxFixedArity = 2;
dissoc.cljs$lang$applyTo = dissoc__3.cljs$lang$applyTo;
dissoc.cljs$core$IFn$_invoke$arity$1 = dissoc__1;
dissoc.cljs$core$IFn$_invoke$arity$2 = dissoc__2;
dissoc.cljs$core$IFn$_invoke$arity$variadic = dissoc__3.cljs$core$IFn$_invoke$arity$variadic;
return dissoc;
})()
;
cljs.core.fn_QMARK_ = (function fn_QMARK_(f){
var or__24274__auto__ = (function (){var G__28620 = f;
return goog.isFunction(G__28620);
})();
if(cljs.core.truth_(or__24274__auto__)){
return or__24274__auto__;
} else {
var G__28621 = f;
if(G__28621){
var bit__24955__auto__ = null;
if(cljs.core.truth_((function (){var or__24274__auto____$1 = bit__24955__auto__;
if(cljs.core.truth_(or__24274__auto____$1)){
return or__24274__auto____$1;
} else {
return G__28621.cljs$core$Fn$;
}
})())){
return true;
} else {
if((!G__28621.cljs$lang$protocol_mask$partition$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.Fn,G__28621);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.Fn,G__28621);
}
}
});

/**
* @constructor
*/
cljs.core.MetaFn = (function (afn,meta){
this.afn = afn;
this.meta = meta;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 393217;
})
cljs.core.MetaFn.prototype.call = (function() {
var G__29087 = null;
var G__29087__1 = (function (self__){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (self__.afn.cljs$core$IFn$_invoke$arity$0 ? self__.afn.cljs$core$IFn$_invoke$arity$0() : self__.afn.call(null));
});
var G__29087__2 = (function (self__,a){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__28623 = a;
return (self__.afn.cljs$core$IFn$_invoke$arity$1 ? self__.afn.cljs$core$IFn$_invoke$arity$1(G__28623) : self__.afn.call(null,G__28623));
});
var G__29087__3 = (function (self__,a,b){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__28624 = a;
var G__28625 = b;
return (self__.afn.cljs$core$IFn$_invoke$arity$2 ? self__.afn.cljs$core$IFn$_invoke$arity$2(G__28624,G__28625) : self__.afn.call(null,G__28624,G__28625));
});
var G__29087__4 = (function (self__,a,b,c){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__28626 = a;
var G__28627 = b;
var G__28628 = c;
return (self__.afn.cljs$core$IFn$_invoke$arity$3 ? self__.afn.cljs$core$IFn$_invoke$arity$3(G__28626,G__28627,G__28628) : self__.afn.call(null,G__28626,G__28627,G__28628));
});
var G__29087__5 = (function (self__,a,b,c,d){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__28629 = a;
var G__28630 = b;
var G__28631 = c;
var G__28632 = d;
return (self__.afn.cljs$core$IFn$_invoke$arity$4 ? self__.afn.cljs$core$IFn$_invoke$arity$4(G__28629,G__28630,G__28631,G__28632) : self__.afn.call(null,G__28629,G__28630,G__28631,G__28632));
});
var G__29087__6 = (function (self__,a,b,c,d,e){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__28633 = a;
var G__28634 = b;
var G__28635 = c;
var G__28636 = d;
var G__28637 = e;
return (self__.afn.cljs$core$IFn$_invoke$arity$5 ? self__.afn.cljs$core$IFn$_invoke$arity$5(G__28633,G__28634,G__28635,G__28636,G__28637) : self__.afn.call(null,G__28633,G__28634,G__28635,G__28636,G__28637));
});
var G__29087__7 = (function (self__,a,b,c,d,e,f){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__28638 = a;
var G__28639 = b;
var G__28640 = c;
var G__28641 = d;
var G__28642 = e;
var G__28643 = f;
return (self__.afn.cljs$core$IFn$_invoke$arity$6 ? self__.afn.cljs$core$IFn$_invoke$arity$6(G__28638,G__28639,G__28640,G__28641,G__28642,G__28643) : self__.afn.call(null,G__28638,G__28639,G__28640,G__28641,G__28642,G__28643));
});
var G__29087__8 = (function (self__,a,b,c,d,e,f,g){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__28644 = a;
var G__28645 = b;
var G__28646 = c;
var G__28647 = d;
var G__28648 = e;
var G__28649 = f;
var G__28650 = g;
return (self__.afn.cljs$core$IFn$_invoke$arity$7 ? self__.afn.cljs$core$IFn$_invoke$arity$7(G__28644,G__28645,G__28646,G__28647,G__28648,G__28649,G__28650) : self__.afn.call(null,G__28644,G__28645,G__28646,G__28647,G__28648,G__28649,G__28650));
});
var G__29087__9 = (function (self__,a,b,c,d,e,f,g,h){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__28651 = a;
var G__28652 = b;
var G__28653 = c;
var G__28654 = d;
var G__28655 = e;
var G__28656 = f;
var G__28657 = g;
var G__28658 = h;
return (self__.afn.cljs$core$IFn$_invoke$arity$8 ? self__.afn.cljs$core$IFn$_invoke$arity$8(G__28651,G__28652,G__28653,G__28654,G__28655,G__28656,G__28657,G__28658) : self__.afn.call(null,G__28651,G__28652,G__28653,G__28654,G__28655,G__28656,G__28657,G__28658));
});
var G__29087__10 = (function (self__,a,b,c,d,e,f,g,h,i){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__28659 = a;
var G__28660 = b;
var G__28661 = c;
var G__28662 = d;
var G__28663 = e;
var G__28664 = f;
var G__28665 = g;
var G__28666 = h;
var G__28667 = i;
return (self__.afn.cljs$core$IFn$_invoke$arity$9 ? self__.afn.cljs$core$IFn$_invoke$arity$9(G__28659,G__28660,G__28661,G__28662,G__28663,G__28664,G__28665,G__28666,G__28667) : self__.afn.call(null,G__28659,G__28660,G__28661,G__28662,G__28663,G__28664,G__28665,G__28666,G__28667));
});
var G__29087__11 = (function (self__,a,b,c,d,e,f,g,h,i,j){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__28668 = a;
var G__28669 = b;
var G__28670 = c;
var G__28671 = d;
var G__28672 = e;
var G__28673 = f;
var G__28674 = g;
var G__28675 = h;
var G__28676 = i;
var G__28677 = j;
return (self__.afn.cljs$core$IFn$_invoke$arity$10 ? self__.afn.cljs$core$IFn$_invoke$arity$10(G__28668,G__28669,G__28670,G__28671,G__28672,G__28673,G__28674,G__28675,G__28676,G__28677) : self__.afn.call(null,G__28668,G__28669,G__28670,G__28671,G__28672,G__28673,G__28674,G__28675,G__28676,G__28677));
});
var G__29087__12 = (function (self__,a,b,c,d,e,f,g,h,i,j,k){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__28678 = a;
var G__28679 = b;
var G__28680 = c;
var G__28681 = d;
var G__28682 = e;
var G__28683 = f;
var G__28684 = g;
var G__28685 = h;
var G__28686 = i;
var G__28687 = j;
var G__28688 = k;
return (self__.afn.cljs$core$IFn$_invoke$arity$11 ? self__.afn.cljs$core$IFn$_invoke$arity$11(G__28678,G__28679,G__28680,G__28681,G__28682,G__28683,G__28684,G__28685,G__28686,G__28687,G__28688) : self__.afn.call(null,G__28678,G__28679,G__28680,G__28681,G__28682,G__28683,G__28684,G__28685,G__28686,G__28687,G__28688));
});
var G__29087__13 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__28689 = a;
var G__28690 = b;
var G__28691 = c;
var G__28692 = d;
var G__28693 = e;
var G__28694 = f;
var G__28695 = g;
var G__28696 = h;
var G__28697 = i;
var G__28698 = j;
var G__28699 = k;
var G__28700 = l;
return (self__.afn.cljs$core$IFn$_invoke$arity$12 ? self__.afn.cljs$core$IFn$_invoke$arity$12(G__28689,G__28690,G__28691,G__28692,G__28693,G__28694,G__28695,G__28696,G__28697,G__28698,G__28699,G__28700) : self__.afn.call(null,G__28689,G__28690,G__28691,G__28692,G__28693,G__28694,G__28695,G__28696,G__28697,G__28698,G__28699,G__28700));
});
var G__29087__14 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__28701 = a;
var G__28702 = b;
var G__28703 = c;
var G__28704 = d;
var G__28705 = e;
var G__28706 = f;
var G__28707 = g;
var G__28708 = h;
var G__28709 = i;
var G__28710 = j;
var G__28711 = k;
var G__28712 = l;
var G__28713 = m;
return (self__.afn.cljs$core$IFn$_invoke$arity$13 ? self__.afn.cljs$core$IFn$_invoke$arity$13(G__28701,G__28702,G__28703,G__28704,G__28705,G__28706,G__28707,G__28708,G__28709,G__28710,G__28711,G__28712,G__28713) : self__.afn.call(null,G__28701,G__28702,G__28703,G__28704,G__28705,G__28706,G__28707,G__28708,G__28709,G__28710,G__28711,G__28712,G__28713));
});
var G__29087__15 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__28714 = a;
var G__28715 = b;
var G__28716 = c;
var G__28717 = d;
var G__28718 = e;
var G__28719 = f;
var G__28720 = g;
var G__28721 = h;
var G__28722 = i;
var G__28723 = j;
var G__28724 = k;
var G__28725 = l;
var G__28726 = m;
var G__28727 = n;
return (self__.afn.cljs$core$IFn$_invoke$arity$14 ? self__.afn.cljs$core$IFn$_invoke$arity$14(G__28714,G__28715,G__28716,G__28717,G__28718,G__28719,G__28720,G__28721,G__28722,G__28723,G__28724,G__28725,G__28726,G__28727) : self__.afn.call(null,G__28714,G__28715,G__28716,G__28717,G__28718,G__28719,G__28720,G__28721,G__28722,G__28723,G__28724,G__28725,G__28726,G__28727));
});
var G__29087__16 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__28728 = a;
var G__28729 = b;
var G__28730 = c;
var G__28731 = d;
var G__28732 = e;
var G__28733 = f;
var G__28734 = g;
var G__28735 = h;
var G__28736 = i;
var G__28737 = j;
var G__28738 = k;
var G__28739 = l;
var G__28740 = m;
var G__28741 = n;
var G__28742 = o;
return (self__.afn.cljs$core$IFn$_invoke$arity$15 ? self__.afn.cljs$core$IFn$_invoke$arity$15(G__28728,G__28729,G__28730,G__28731,G__28732,G__28733,G__28734,G__28735,G__28736,G__28737,G__28738,G__28739,G__28740,G__28741,G__28742) : self__.afn.call(null,G__28728,G__28729,G__28730,G__28731,G__28732,G__28733,G__28734,G__28735,G__28736,G__28737,G__28738,G__28739,G__28740,G__28741,G__28742));
});
var G__29087__17 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__28743 = a;
var G__28744 = b;
var G__28745 = c;
var G__28746 = d;
var G__28747 = e;
var G__28748 = f;
var G__28749 = g;
var G__28750 = h;
var G__28751 = i;
var G__28752 = j;
var G__28753 = k;
var G__28754 = l;
var G__28755 = m;
var G__28756 = n;
var G__28757 = o;
var G__28758 = p;
return (self__.afn.cljs$core$IFn$_invoke$arity$16 ? self__.afn.cljs$core$IFn$_invoke$arity$16(G__28743,G__28744,G__28745,G__28746,G__28747,G__28748,G__28749,G__28750,G__28751,G__28752,G__28753,G__28754,G__28755,G__28756,G__28757,G__28758) : self__.afn.call(null,G__28743,G__28744,G__28745,G__28746,G__28747,G__28748,G__28749,G__28750,G__28751,G__28752,G__28753,G__28754,G__28755,G__28756,G__28757,G__28758));
});
var G__29087__18 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__28759 = a;
var G__28760 = b;
var G__28761 = c;
var G__28762 = d;
var G__28763 = e;
var G__28764 = f;
var G__28765 = g;
var G__28766 = h;
var G__28767 = i;
var G__28768 = j;
var G__28769 = k;
var G__28770 = l;
var G__28771 = m;
var G__28772 = n;
var G__28773 = o;
var G__28774 = p;
var G__28775 = q;
return (self__.afn.cljs$core$IFn$_invoke$arity$17 ? self__.afn.cljs$core$IFn$_invoke$arity$17(G__28759,G__28760,G__28761,G__28762,G__28763,G__28764,G__28765,G__28766,G__28767,G__28768,G__28769,G__28770,G__28771,G__28772,G__28773,G__28774,G__28775) : self__.afn.call(null,G__28759,G__28760,G__28761,G__28762,G__28763,G__28764,G__28765,G__28766,G__28767,G__28768,G__28769,G__28770,G__28771,G__28772,G__28773,G__28774,G__28775));
});
var G__29087__19 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__28776 = a;
var G__28777 = b;
var G__28778 = c;
var G__28779 = d;
var G__28780 = e;
var G__28781 = f;
var G__28782 = g;
var G__28783 = h;
var G__28784 = i;
var G__28785 = j;
var G__28786 = k;
var G__28787 = l;
var G__28788 = m;
var G__28789 = n;
var G__28790 = o;
var G__28791 = p;
var G__28792 = q;
var G__28793 = r;
return (self__.afn.cljs$core$IFn$_invoke$arity$18 ? self__.afn.cljs$core$IFn$_invoke$arity$18(G__28776,G__28777,G__28778,G__28779,G__28780,G__28781,G__28782,G__28783,G__28784,G__28785,G__28786,G__28787,G__28788,G__28789,G__28790,G__28791,G__28792,G__28793) : self__.afn.call(null,G__28776,G__28777,G__28778,G__28779,G__28780,G__28781,G__28782,G__28783,G__28784,G__28785,G__28786,G__28787,G__28788,G__28789,G__28790,G__28791,G__28792,G__28793));
});
var G__29087__20 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__28794 = a;
var G__28795 = b;
var G__28796 = c;
var G__28797 = d;
var G__28798 = e;
var G__28799 = f;
var G__28800 = g;
var G__28801 = h;
var G__28802 = i;
var G__28803 = j;
var G__28804 = k;
var G__28805 = l;
var G__28806 = m;
var G__28807 = n;
var G__28808 = o;
var G__28809 = p;
var G__28810 = q;
var G__28811 = r;
var G__28812 = s;
return (self__.afn.cljs$core$IFn$_invoke$arity$19 ? self__.afn.cljs$core$IFn$_invoke$arity$19(G__28794,G__28795,G__28796,G__28797,G__28798,G__28799,G__28800,G__28801,G__28802,G__28803,G__28804,G__28805,G__28806,G__28807,G__28808,G__28809,G__28810,G__28811,G__28812) : self__.afn.call(null,G__28794,G__28795,G__28796,G__28797,G__28798,G__28799,G__28800,G__28801,G__28802,G__28803,G__28804,G__28805,G__28806,G__28807,G__28808,G__28809,G__28810,G__28811,G__28812));
});
var G__29087__21 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__28813 = a;
var G__28814 = b;
var G__28815 = c;
var G__28816 = d;
var G__28817 = e;
var G__28818 = f;
var G__28819 = g;
var G__28820 = h;
var G__28821 = i;
var G__28822 = j;
var G__28823 = k;
var G__28824 = l;
var G__28825 = m;
var G__28826 = n;
var G__28827 = o;
var G__28828 = p;
var G__28829 = q;
var G__28830 = r;
var G__28831 = s;
var G__28832 = t;
return (self__.afn.cljs$core$IFn$_invoke$arity$20 ? self__.afn.cljs$core$IFn$_invoke$arity$20(G__28813,G__28814,G__28815,G__28816,G__28817,G__28818,G__28819,G__28820,G__28821,G__28822,G__28823,G__28824,G__28825,G__28826,G__28827,G__28828,G__28829,G__28830,G__28831,G__28832) : self__.afn.call(null,G__28813,G__28814,G__28815,G__28816,G__28817,G__28818,G__28819,G__28820,G__28821,G__28822,G__28823,G__28824,G__28825,G__28826,G__28827,G__28828,G__28829,G__28830,G__28831,G__28832));
});
var G__29087__22 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__28833 = self__.afn;
var G__28834 = a;
var G__28835 = b;
var G__28836 = c;
var G__28837 = d;
var G__28838 = e;
var G__28839 = f;
var G__28840 = g;
var G__28841 = h;
var G__28842 = i;
var G__28843 = j;
var G__28844 = k;
var G__28845 = l;
var G__28846 = m;
var G__28847 = n;
var G__28848 = o;
var G__28849 = p;
var G__28850 = q;
var G__28851 = r;
var G__28852 = s;
var G__28853 = t;
var G__28854 = rest;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$22 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$22(G__28833,G__28834,G__28835,G__28836,G__28837,G__28838,G__28839,G__28840,G__28841,G__28842,G__28843,G__28844,G__28845,G__28846,G__28847,G__28848,G__28849,G__28850,G__28851,G__28852,G__28853,G__28854) : cljs.core.apply.call(null,G__28833,G__28834,G__28835,G__28836,G__28837,G__28838,G__28839,G__28840,G__28841,G__28842,G__28843,G__28844,G__28845,G__28846,G__28847,G__28848,G__28849,G__28850,G__28851,G__28852,G__28853,G__28854));
});
G__29087 = function(self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
switch(arguments.length){
case 1:
return G__29087__1.call(this,self__);
case 2:
return G__29087__2.call(this,self__,a);
case 3:
return G__29087__3.call(this,self__,a,b);
case 4:
return G__29087__4.call(this,self__,a,b,c);
case 5:
return G__29087__5.call(this,self__,a,b,c,d);
case 6:
return G__29087__6.call(this,self__,a,b,c,d,e);
case 7:
return G__29087__7.call(this,self__,a,b,c,d,e,f);
case 8:
return G__29087__8.call(this,self__,a,b,c,d,e,f,g);
case 9:
return G__29087__9.call(this,self__,a,b,c,d,e,f,g,h);
case 10:
return G__29087__10.call(this,self__,a,b,c,d,e,f,g,h,i);
case 11:
return G__29087__11.call(this,self__,a,b,c,d,e,f,g,h,i,j);
case 12:
return G__29087__12.call(this,self__,a,b,c,d,e,f,g,h,i,j,k);
case 13:
return G__29087__13.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l);
case 14:
return G__29087__14.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m);
case 15:
return G__29087__15.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
case 16:
return G__29087__16.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
case 17:
return G__29087__17.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
case 18:
return G__29087__18.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
case 19:
return G__29087__19.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
case 20:
return G__29087__20.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
case 21:
return G__29087__21.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
case 22:
return G__29087__22.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__29087.cljs$core$IFn$_invoke$arity$1 = G__29087__1;
G__29087.cljs$core$IFn$_invoke$arity$2 = G__29087__2;
G__29087.cljs$core$IFn$_invoke$arity$3 = G__29087__3;
G__29087.cljs$core$IFn$_invoke$arity$4 = G__29087__4;
G__29087.cljs$core$IFn$_invoke$arity$5 = G__29087__5;
G__29087.cljs$core$IFn$_invoke$arity$6 = G__29087__6;
G__29087.cljs$core$IFn$_invoke$arity$7 = G__29087__7;
G__29087.cljs$core$IFn$_invoke$arity$8 = G__29087__8;
G__29087.cljs$core$IFn$_invoke$arity$9 = G__29087__9;
G__29087.cljs$core$IFn$_invoke$arity$10 = G__29087__10;
G__29087.cljs$core$IFn$_invoke$arity$11 = G__29087__11;
G__29087.cljs$core$IFn$_invoke$arity$12 = G__29087__12;
G__29087.cljs$core$IFn$_invoke$arity$13 = G__29087__13;
G__29087.cljs$core$IFn$_invoke$arity$14 = G__29087__14;
G__29087.cljs$core$IFn$_invoke$arity$15 = G__29087__15;
G__29087.cljs$core$IFn$_invoke$arity$16 = G__29087__16;
G__29087.cljs$core$IFn$_invoke$arity$17 = G__29087__17;
G__29087.cljs$core$IFn$_invoke$arity$18 = G__29087__18;
G__29087.cljs$core$IFn$_invoke$arity$19 = G__29087__19;
G__29087.cljs$core$IFn$_invoke$arity$20 = G__29087__20;
G__29087.cljs$core$IFn$_invoke$arity$21 = G__29087__21;
G__29087.cljs$core$IFn$_invoke$arity$22 = G__29087__22;
return G__29087;
})()
;

cljs.core.MetaFn.prototype.apply = (function (self__,args28622){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args28622)));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$0 = (function (){
var self__ = this;
var _ = this;
return (self__.afn.cljs$core$IFn$_invoke$arity$0 ? self__.afn.cljs$core$IFn$_invoke$arity$0() : self__.afn.call(null));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$1 = (function (a){
var self__ = this;
var _ = this;
var G__28855 = a;
return (self__.afn.cljs$core$IFn$_invoke$arity$1 ? self__.afn.cljs$core$IFn$_invoke$arity$1(G__28855) : self__.afn.call(null,G__28855));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$2 = (function (a,b){
var self__ = this;
var _ = this;
var G__28856 = a;
var G__28857 = b;
return (self__.afn.cljs$core$IFn$_invoke$arity$2 ? self__.afn.cljs$core$IFn$_invoke$arity$2(G__28856,G__28857) : self__.afn.call(null,G__28856,G__28857));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$3 = (function (a,b,c){
var self__ = this;
var _ = this;
var G__28858 = a;
var G__28859 = b;
var G__28860 = c;
return (self__.afn.cljs$core$IFn$_invoke$arity$3 ? self__.afn.cljs$core$IFn$_invoke$arity$3(G__28858,G__28859,G__28860) : self__.afn.call(null,G__28858,G__28859,G__28860));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$4 = (function (a,b,c,d){
var self__ = this;
var _ = this;
var G__28861 = a;
var G__28862 = b;
var G__28863 = c;
var G__28864 = d;
return (self__.afn.cljs$core$IFn$_invoke$arity$4 ? self__.afn.cljs$core$IFn$_invoke$arity$4(G__28861,G__28862,G__28863,G__28864) : self__.afn.call(null,G__28861,G__28862,G__28863,G__28864));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$5 = (function (a,b,c,d,e){
var self__ = this;
var _ = this;
var G__28865 = a;
var G__28866 = b;
var G__28867 = c;
var G__28868 = d;
var G__28869 = e;
return (self__.afn.cljs$core$IFn$_invoke$arity$5 ? self__.afn.cljs$core$IFn$_invoke$arity$5(G__28865,G__28866,G__28867,G__28868,G__28869) : self__.afn.call(null,G__28865,G__28866,G__28867,G__28868,G__28869));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$6 = (function (a,b,c,d,e,f){
var self__ = this;
var _ = this;
var G__28870 = a;
var G__28871 = b;
var G__28872 = c;
var G__28873 = d;
var G__28874 = e;
var G__28875 = f;
return (self__.afn.cljs$core$IFn$_invoke$arity$6 ? self__.afn.cljs$core$IFn$_invoke$arity$6(G__28870,G__28871,G__28872,G__28873,G__28874,G__28875) : self__.afn.call(null,G__28870,G__28871,G__28872,G__28873,G__28874,G__28875));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$7 = (function (a,b,c,d,e,f,g){
var self__ = this;
var _ = this;
var G__28876 = a;
var G__28877 = b;
var G__28878 = c;
var G__28879 = d;
var G__28880 = e;
var G__28881 = f;
var G__28882 = g;
return (self__.afn.cljs$core$IFn$_invoke$arity$7 ? self__.afn.cljs$core$IFn$_invoke$arity$7(G__28876,G__28877,G__28878,G__28879,G__28880,G__28881,G__28882) : self__.afn.call(null,G__28876,G__28877,G__28878,G__28879,G__28880,G__28881,G__28882));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$8 = (function (a,b,c,d,e,f,g,h){
var self__ = this;
var _ = this;
var G__28883 = a;
var G__28884 = b;
var G__28885 = c;
var G__28886 = d;
var G__28887 = e;
var G__28888 = f;
var G__28889 = g;
var G__28890 = h;
return (self__.afn.cljs$core$IFn$_invoke$arity$8 ? self__.afn.cljs$core$IFn$_invoke$arity$8(G__28883,G__28884,G__28885,G__28886,G__28887,G__28888,G__28889,G__28890) : self__.afn.call(null,G__28883,G__28884,G__28885,G__28886,G__28887,G__28888,G__28889,G__28890));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$9 = (function (a,b,c,d,e,f,g,h,i){
var self__ = this;
var _ = this;
var G__28891 = a;
var G__28892 = b;
var G__28893 = c;
var G__28894 = d;
var G__28895 = e;
var G__28896 = f;
var G__28897 = g;
var G__28898 = h;
var G__28899 = i;
return (self__.afn.cljs$core$IFn$_invoke$arity$9 ? self__.afn.cljs$core$IFn$_invoke$arity$9(G__28891,G__28892,G__28893,G__28894,G__28895,G__28896,G__28897,G__28898,G__28899) : self__.afn.call(null,G__28891,G__28892,G__28893,G__28894,G__28895,G__28896,G__28897,G__28898,G__28899));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$10 = (function (a,b,c,d,e,f,g,h,i,j){
var self__ = this;
var _ = this;
var G__28900 = a;
var G__28901 = b;
var G__28902 = c;
var G__28903 = d;
var G__28904 = e;
var G__28905 = f;
var G__28906 = g;
var G__28907 = h;
var G__28908 = i;
var G__28909 = j;
return (self__.afn.cljs$core$IFn$_invoke$arity$10 ? self__.afn.cljs$core$IFn$_invoke$arity$10(G__28900,G__28901,G__28902,G__28903,G__28904,G__28905,G__28906,G__28907,G__28908,G__28909) : self__.afn.call(null,G__28900,G__28901,G__28902,G__28903,G__28904,G__28905,G__28906,G__28907,G__28908,G__28909));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$11 = (function (a,b,c,d,e,f,g,h,i,j,k){
var self__ = this;
var _ = this;
var G__28910 = a;
var G__28911 = b;
var G__28912 = c;
var G__28913 = d;
var G__28914 = e;
var G__28915 = f;
var G__28916 = g;
var G__28917 = h;
var G__28918 = i;
var G__28919 = j;
var G__28920 = k;
return (self__.afn.cljs$core$IFn$_invoke$arity$11 ? self__.afn.cljs$core$IFn$_invoke$arity$11(G__28910,G__28911,G__28912,G__28913,G__28914,G__28915,G__28916,G__28917,G__28918,G__28919,G__28920) : self__.afn.call(null,G__28910,G__28911,G__28912,G__28913,G__28914,G__28915,G__28916,G__28917,G__28918,G__28919,G__28920));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$12 = (function (a,b,c,d,e,f,g,h,i,j,k,l){
var self__ = this;
var _ = this;
var G__28921 = a;
var G__28922 = b;
var G__28923 = c;
var G__28924 = d;
var G__28925 = e;
var G__28926 = f;
var G__28927 = g;
var G__28928 = h;
var G__28929 = i;
var G__28930 = j;
var G__28931 = k;
var G__28932 = l;
return (self__.afn.cljs$core$IFn$_invoke$arity$12 ? self__.afn.cljs$core$IFn$_invoke$arity$12(G__28921,G__28922,G__28923,G__28924,G__28925,G__28926,G__28927,G__28928,G__28929,G__28930,G__28931,G__28932) : self__.afn.call(null,G__28921,G__28922,G__28923,G__28924,G__28925,G__28926,G__28927,G__28928,G__28929,G__28930,G__28931,G__28932));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$13 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m){
var self__ = this;
var _ = this;
var G__28933 = a;
var G__28934 = b;
var G__28935 = c;
var G__28936 = d;
var G__28937 = e;
var G__28938 = f;
var G__28939 = g;
var G__28940 = h;
var G__28941 = i;
var G__28942 = j;
var G__28943 = k;
var G__28944 = l;
var G__28945 = m;
return (self__.afn.cljs$core$IFn$_invoke$arity$13 ? self__.afn.cljs$core$IFn$_invoke$arity$13(G__28933,G__28934,G__28935,G__28936,G__28937,G__28938,G__28939,G__28940,G__28941,G__28942,G__28943,G__28944,G__28945) : self__.afn.call(null,G__28933,G__28934,G__28935,G__28936,G__28937,G__28938,G__28939,G__28940,G__28941,G__28942,G__28943,G__28944,G__28945));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$14 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n){
var self__ = this;
var _ = this;
var G__28946 = a;
var G__28947 = b;
var G__28948 = c;
var G__28949 = d;
var G__28950 = e;
var G__28951 = f;
var G__28952 = g;
var G__28953 = h;
var G__28954 = i;
var G__28955 = j;
var G__28956 = k;
var G__28957 = l;
var G__28958 = m;
var G__28959 = n;
return (self__.afn.cljs$core$IFn$_invoke$arity$14 ? self__.afn.cljs$core$IFn$_invoke$arity$14(G__28946,G__28947,G__28948,G__28949,G__28950,G__28951,G__28952,G__28953,G__28954,G__28955,G__28956,G__28957,G__28958,G__28959) : self__.afn.call(null,G__28946,G__28947,G__28948,G__28949,G__28950,G__28951,G__28952,G__28953,G__28954,G__28955,G__28956,G__28957,G__28958,G__28959));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$15 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
var self__ = this;
var _ = this;
var G__28960 = a;
var G__28961 = b;
var G__28962 = c;
var G__28963 = d;
var G__28964 = e;
var G__28965 = f;
var G__28966 = g;
var G__28967 = h;
var G__28968 = i;
var G__28969 = j;
var G__28970 = k;
var G__28971 = l;
var G__28972 = m;
var G__28973 = n;
var G__28974 = o;
return (self__.afn.cljs$core$IFn$_invoke$arity$15 ? self__.afn.cljs$core$IFn$_invoke$arity$15(G__28960,G__28961,G__28962,G__28963,G__28964,G__28965,G__28966,G__28967,G__28968,G__28969,G__28970,G__28971,G__28972,G__28973,G__28974) : self__.afn.call(null,G__28960,G__28961,G__28962,G__28963,G__28964,G__28965,G__28966,G__28967,G__28968,G__28969,G__28970,G__28971,G__28972,G__28973,G__28974));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$16 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
var self__ = this;
var _ = this;
var G__28975 = a;
var G__28976 = b;
var G__28977 = c;
var G__28978 = d;
var G__28979 = e;
var G__28980 = f;
var G__28981 = g;
var G__28982 = h;
var G__28983 = i;
var G__28984 = j;
var G__28985 = k;
var G__28986 = l;
var G__28987 = m;
var G__28988 = n;
var G__28989 = o;
var G__28990 = p;
return (self__.afn.cljs$core$IFn$_invoke$arity$16 ? self__.afn.cljs$core$IFn$_invoke$arity$16(G__28975,G__28976,G__28977,G__28978,G__28979,G__28980,G__28981,G__28982,G__28983,G__28984,G__28985,G__28986,G__28987,G__28988,G__28989,G__28990) : self__.afn.call(null,G__28975,G__28976,G__28977,G__28978,G__28979,G__28980,G__28981,G__28982,G__28983,G__28984,G__28985,G__28986,G__28987,G__28988,G__28989,G__28990));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$17 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
var self__ = this;
var _ = this;
var G__28991 = a;
var G__28992 = b;
var G__28993 = c;
var G__28994 = d;
var G__28995 = e;
var G__28996 = f;
var G__28997 = g;
var G__28998 = h;
var G__28999 = i;
var G__29000 = j;
var G__29001 = k;
var G__29002 = l;
var G__29003 = m;
var G__29004 = n;
var G__29005 = o;
var G__29006 = p;
var G__29007 = q;
return (self__.afn.cljs$core$IFn$_invoke$arity$17 ? self__.afn.cljs$core$IFn$_invoke$arity$17(G__28991,G__28992,G__28993,G__28994,G__28995,G__28996,G__28997,G__28998,G__28999,G__29000,G__29001,G__29002,G__29003,G__29004,G__29005,G__29006,G__29007) : self__.afn.call(null,G__28991,G__28992,G__28993,G__28994,G__28995,G__28996,G__28997,G__28998,G__28999,G__29000,G__29001,G__29002,G__29003,G__29004,G__29005,G__29006,G__29007));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$18 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
var self__ = this;
var _ = this;
var G__29008 = a;
var G__29009 = b;
var G__29010 = c;
var G__29011 = d;
var G__29012 = e;
var G__29013 = f;
var G__29014 = g;
var G__29015 = h;
var G__29016 = i;
var G__29017 = j;
var G__29018 = k;
var G__29019 = l;
var G__29020 = m;
var G__29021 = n;
var G__29022 = o;
var G__29023 = p;
var G__29024 = q;
var G__29025 = r;
return (self__.afn.cljs$core$IFn$_invoke$arity$18 ? self__.afn.cljs$core$IFn$_invoke$arity$18(G__29008,G__29009,G__29010,G__29011,G__29012,G__29013,G__29014,G__29015,G__29016,G__29017,G__29018,G__29019,G__29020,G__29021,G__29022,G__29023,G__29024,G__29025) : self__.afn.call(null,G__29008,G__29009,G__29010,G__29011,G__29012,G__29013,G__29014,G__29015,G__29016,G__29017,G__29018,G__29019,G__29020,G__29021,G__29022,G__29023,G__29024,G__29025));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$19 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
var self__ = this;
var _ = this;
var G__29026 = a;
var G__29027 = b;
var G__29028 = c;
var G__29029 = d;
var G__29030 = e;
var G__29031 = f;
var G__29032 = g;
var G__29033 = h;
var G__29034 = i;
var G__29035 = j;
var G__29036 = k;
var G__29037 = l;
var G__29038 = m;
var G__29039 = n;
var G__29040 = o;
var G__29041 = p;
var G__29042 = q;
var G__29043 = r;
var G__29044 = s;
return (self__.afn.cljs$core$IFn$_invoke$arity$19 ? self__.afn.cljs$core$IFn$_invoke$arity$19(G__29026,G__29027,G__29028,G__29029,G__29030,G__29031,G__29032,G__29033,G__29034,G__29035,G__29036,G__29037,G__29038,G__29039,G__29040,G__29041,G__29042,G__29043,G__29044) : self__.afn.call(null,G__29026,G__29027,G__29028,G__29029,G__29030,G__29031,G__29032,G__29033,G__29034,G__29035,G__29036,G__29037,G__29038,G__29039,G__29040,G__29041,G__29042,G__29043,G__29044));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$20 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
var self__ = this;
var _ = this;
var G__29045 = a;
var G__29046 = b;
var G__29047 = c;
var G__29048 = d;
var G__29049 = e;
var G__29050 = f;
var G__29051 = g;
var G__29052 = h;
var G__29053 = i;
var G__29054 = j;
var G__29055 = k;
var G__29056 = l;
var G__29057 = m;
var G__29058 = n;
var G__29059 = o;
var G__29060 = p;
var G__29061 = q;
var G__29062 = r;
var G__29063 = s;
var G__29064 = t;
return (self__.afn.cljs$core$IFn$_invoke$arity$20 ? self__.afn.cljs$core$IFn$_invoke$arity$20(G__29045,G__29046,G__29047,G__29048,G__29049,G__29050,G__29051,G__29052,G__29053,G__29054,G__29055,G__29056,G__29057,G__29058,G__29059,G__29060,G__29061,G__29062,G__29063,G__29064) : self__.afn.call(null,G__29045,G__29046,G__29047,G__29048,G__29049,G__29050,G__29051,G__29052,G__29053,G__29054,G__29055,G__29056,G__29057,G__29058,G__29059,G__29060,G__29061,G__29062,G__29063,G__29064));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$21 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
var self__ = this;
var _ = this;
var G__29065 = self__.afn;
var G__29066 = a;
var G__29067 = b;
var G__29068 = c;
var G__29069 = d;
var G__29070 = e;
var G__29071 = f;
var G__29072 = g;
var G__29073 = h;
var G__29074 = i;
var G__29075 = j;
var G__29076 = k;
var G__29077 = l;
var G__29078 = m;
var G__29079 = n;
var G__29080 = o;
var G__29081 = p;
var G__29082 = q;
var G__29083 = r;
var G__29084 = s;
var G__29085 = t;
var G__29086 = rest;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$22 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$22(G__29065,G__29066,G__29067,G__29068,G__29069,G__29070,G__29071,G__29072,G__29073,G__29074,G__29075,G__29076,G__29077,G__29078,G__29079,G__29080,G__29081,G__29082,G__29083,G__29084,G__29085,G__29086) : cljs.core.apply.call(null,G__29065,G__29066,G__29067,G__29068,G__29069,G__29070,G__29071,G__29072,G__29073,G__29074,G__29075,G__29076,G__29077,G__29078,G__29079,G__29080,G__29081,G__29082,G__29083,G__29084,G__29085,G__29086));
});

cljs.core.MetaFn.prototype.cljs$core$Fn$ = true;

cljs.core.MetaFn.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (_,new_meta){
var self__ = this;
var ___$1 = this;
return (new cljs.core.MetaFn(self__.afn,new_meta));
});

cljs.core.MetaFn.prototype.cljs$core$IMeta$_meta$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.meta;
});

cljs.core.MetaFn.cljs$lang$type = true;

cljs.core.MetaFn.cljs$lang$ctorStr = "cljs.core/MetaFn";

cljs.core.MetaFn.cljs$lang$ctorPrWriter = (function (this__24861__auto__,writer__24862__auto__,opt__24863__auto__){
return cljs.core._write(writer__24862__auto__,"cljs.core/MetaFn");
});

cljs.core.__GT_MetaFn = (function __GT_MetaFn(afn,meta){
return (new cljs.core.MetaFn(afn,meta));
});

/**
* Returns an object of the same type and value as obj, with
* map m as its metadata.
*/
cljs.core.with_meta = (function with_meta(o,meta){
if((cljs.core.fn_QMARK_(o)) && (!((function (){var G__29091 = o;
if(G__29091){
var bit__24955__auto__ = (G__29091.cljs$lang$protocol_mask$partition0$ & (262144));
if((bit__24955__auto__) || (G__29091.cljs$core$IWithMeta$)){
return true;
} else {
if((!G__29091.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IWithMeta,G__29091);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IWithMeta,G__29091);
}
})()))){
return (new cljs.core.MetaFn(o,meta));
} else {
if((o == null)){
return null;
} else {
return cljs.core._with_meta(o,meta);
}
}
});
/**
* Returns the metadata of obj, returns nil if there is no metadata.
*/
cljs.core.meta = (function meta(o){
if((function (){var and__24262__auto__ = !((o == null));
if(and__24262__auto__){
var G__29095 = o;
if(G__29095){
var bit__24955__auto__ = (G__29095.cljs$lang$protocol_mask$partition0$ & (131072));
if((bit__24955__auto__) || (G__29095.cljs$core$IMeta$)){
return true;
} else {
if((!G__29095.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IMeta,G__29095);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IMeta,G__29095);
}
} else {
return and__24262__auto__;
}
})()){
return cljs.core._meta(o);
} else {
return null;
}
});
/**
* For a list or queue, same as first, for a vector, same as, but much
* more efficient than, last. If the collection is empty, returns nil.
*/
cljs.core.peek = (function peek(coll){
if((coll == null)){
return null;
} else {
return cljs.core._peek(coll);
}
});
/**
* For a list or queue, returns a new list/queue without the first
* item, for a vector, returns a new vector without the last item.
* Note - not the same as next/butlast.
*/
cljs.core.pop = (function pop(coll){
if((coll == null)){
return null;
} else {
return cljs.core._pop(coll);
}
});
/**
* disj[oin]. Returns a new set of the same (hashed/sorted) type, that
* does not contain key(s).
* @param {...*} var_args
*/
cljs.core.disj = (function() {
var disj = null;
var disj__1 = (function (coll){
return coll;
});
var disj__2 = (function (coll,k){
if((coll == null)){
return null;
} else {
return cljs.core._disjoin(coll,k);
}
});
var disj__3 = (function() { 
var G__29098__delegate = function (coll,k,ks){
while(true){
if((coll == null)){
return null;
} else {
var ret = disj.cljs$core$IFn$_invoke$arity$2(coll,k);
if(cljs.core.truth_(ks)){
var G__29099 = ret;
var G__29100 = cljs.core.first(ks);
var G__29101 = cljs.core.next(ks);
coll = G__29099;
k = G__29100;
ks = G__29101;
continue;
} else {
return ret;
}
}
break;
}
};
var G__29098 = function (coll,k,var_args){
var ks = null;
if (arguments.length > 2) {
var G__29102__i = 0, G__29102__a = new Array(arguments.length -  2);
while (G__29102__i < G__29102__a.length) {G__29102__a[G__29102__i] = arguments[G__29102__i + 2]; ++G__29102__i;}
  ks = new cljs.core.IndexedSeq(G__29102__a,0);
} 
return G__29098__delegate.call(this,coll,k,ks);};
G__29098.cljs$lang$maxFixedArity = 2;
G__29098.cljs$lang$applyTo = (function (arglist__29103){
var coll = cljs.core.first(arglist__29103);
arglist__29103 = cljs.core.next(arglist__29103);
var k = cljs.core.first(arglist__29103);
var ks = cljs.core.rest(arglist__29103);
return G__29098__delegate(coll,k,ks);
});
G__29098.cljs$core$IFn$_invoke$arity$variadic = G__29098__delegate;
return G__29098;
})()
;
disj = function(coll,k,var_args){
var ks = var_args;
switch(arguments.length){
case 1:
return disj__1.call(this,coll);
case 2:
return disj__2.call(this,coll,k);
default:
var G__29104 = null;
if (arguments.length > 2) {
var G__29105__i = 0, G__29105__a = new Array(arguments.length -  2);
while (G__29105__i < G__29105__a.length) {G__29105__a[G__29105__i] = arguments[G__29105__i + 2]; ++G__29105__i;}
G__29104 = new cljs.core.IndexedSeq(G__29105__a,0);
}
return disj__3.cljs$core$IFn$_invoke$arity$variadic(coll,k, G__29104);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
disj.cljs$lang$maxFixedArity = 2;
disj.cljs$lang$applyTo = disj__3.cljs$lang$applyTo;
disj.cljs$core$IFn$_invoke$arity$1 = disj__1;
disj.cljs$core$IFn$_invoke$arity$2 = disj__2;
disj.cljs$core$IFn$_invoke$arity$variadic = disj__3.cljs$core$IFn$_invoke$arity$variadic;
return disj;
})()
;
/**
* Returns true if coll has no items - same as (not (seq coll)).
* Please use the idiom (seq x) rather than (not (empty? x))
*/
cljs.core.empty_QMARK_ = (function empty_QMARK_(coll){
return ((coll == null)) || (cljs.core.not(cljs.core.seq(coll)));
});
/**
* Returns true if x satisfies ICollection
*/
cljs.core.coll_QMARK_ = (function coll_QMARK_(x){
if((x == null)){
return false;
} else {
var G__29107 = x;
if(G__29107){
var bit__24955__auto__ = (G__29107.cljs$lang$protocol_mask$partition0$ & (8));
if((bit__24955__auto__) || (G__29107.cljs$core$ICollection$)){
return true;
} else {
if((!G__29107.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ICollection,G__29107);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ICollection,G__29107);
}
}
});
/**
* Returns true if x satisfies ISet
*/
cljs.core.set_QMARK_ = (function set_QMARK_(x){
if((x == null)){
return false;
} else {
var G__29109 = x;
if(G__29109){
var bit__24955__auto__ = (G__29109.cljs$lang$protocol_mask$partition0$ & (4096));
if((bit__24955__auto__) || (G__29109.cljs$core$ISet$)){
return true;
} else {
if((!G__29109.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISet,G__29109);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISet,G__29109);
}
}
});
/**
* Returns true if coll implements Associative
*/
cljs.core.associative_QMARK_ = (function associative_QMARK_(x){
var G__29111 = x;
if(G__29111){
var bit__24955__auto__ = (G__29111.cljs$lang$protocol_mask$partition0$ & (512));
if((bit__24955__auto__) || (G__29111.cljs$core$IAssociative$)){
return true;
} else {
if((!G__29111.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IAssociative,G__29111);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IAssociative,G__29111);
}
});
/**
* Returns true if coll satisfies ISequential
*/
cljs.core.sequential_QMARK_ = (function sequential_QMARK_(x){
var G__29113 = x;
if(G__29113){
var bit__24955__auto__ = (G__29113.cljs$lang$protocol_mask$partition0$ & (16777216));
if((bit__24955__auto__) || (G__29113.cljs$core$ISequential$)){
return true;
} else {
if((!G__29113.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISequential,G__29113);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISequential,G__29113);
}
});
/**
* Returns true if coll satisfies ISorted
*/
cljs.core.sorted_QMARK_ = (function sorted_QMARK_(x){
var G__29115 = x;
if(G__29115){
var bit__24955__auto__ = (G__29115.cljs$lang$protocol_mask$partition0$ & (268435456));
if((bit__24955__auto__) || (G__29115.cljs$core$ISorted$)){
return true;
} else {
if((!G__29115.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISorted,G__29115);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISorted,G__29115);
}
});
/**
* Returns true if coll satisfies IReduce
*/
cljs.core.reduceable_QMARK_ = (function reduceable_QMARK_(x){
var G__29117 = x;
if(G__29117){
var bit__24955__auto__ = (G__29117.cljs$lang$protocol_mask$partition0$ & (524288));
if((bit__24955__auto__) || (G__29117.cljs$core$IReduce$)){
return true;
} else {
if((!G__29117.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IReduce,G__29117);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IReduce,G__29117);
}
});
/**
* Return true if x satisfies IMap
*/
cljs.core.map_QMARK_ = (function map_QMARK_(x){
if((x == null)){
return false;
} else {
var G__29119 = x;
if(G__29119){
var bit__24955__auto__ = (G__29119.cljs$lang$protocol_mask$partition0$ & (1024));
if((bit__24955__auto__) || (G__29119.cljs$core$IMap$)){
return true;
} else {
if((!G__29119.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IMap,G__29119);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IMap,G__29119);
}
}
});
/**
* Return true if x satisfies IVector
*/
cljs.core.vector_QMARK_ = (function vector_QMARK_(x){
var G__29121 = x;
if(G__29121){
var bit__24955__auto__ = (G__29121.cljs$lang$protocol_mask$partition0$ & (16384));
if((bit__24955__auto__) || (G__29121.cljs$core$IVector$)){
return true;
} else {
if((!G__29121.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IVector,G__29121);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IVector,G__29121);
}
});

cljs.core.chunked_seq_QMARK_ = (function chunked_seq_QMARK_(x){
var G__29123 = x;
if(G__29123){
var bit__24948__auto__ = (G__29123.cljs$lang$protocol_mask$partition1$ & (512));
if((bit__24948__auto__) || (G__29123.cljs$core$IChunkedSeq$)){
return true;
} else {
return false;
}
} else {
return false;
}
});
/**
* @param {...*} var_args
*/
cljs.core.js_obj = (function() {
var js_obj = null;
var js_obj__0 = (function (){
var obj29129 = {};
return obj29129;
});
var js_obj__1 = (function() { 
var G__29132__delegate = function (keyvals){
var G__29130 = goog.object.create;
var G__29131 = keyvals;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$2 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$2(G__29130,G__29131) : cljs.core.apply.call(null,G__29130,G__29131));
};
var G__29132 = function (var_args){
var keyvals = null;
if (arguments.length > 0) {
var G__29133__i = 0, G__29133__a = new Array(arguments.length -  0);
while (G__29133__i < G__29133__a.length) {G__29133__a[G__29133__i] = arguments[G__29133__i + 0]; ++G__29133__i;}
  keyvals = new cljs.core.IndexedSeq(G__29133__a,0);
} 
return G__29132__delegate.call(this,keyvals);};
G__29132.cljs$lang$maxFixedArity = 0;
G__29132.cljs$lang$applyTo = (function (arglist__29134){
var keyvals = cljs.core.seq(arglist__29134);
return G__29132__delegate(keyvals);
});
G__29132.cljs$core$IFn$_invoke$arity$variadic = G__29132__delegate;
return G__29132;
})()
;
js_obj = function(var_args){
var keyvals = var_args;
switch(arguments.length){
case 0:
return js_obj__0.call(this);
default:
var G__29135 = null;
if (arguments.length > 0) {
var G__29136__i = 0, G__29136__a = new Array(arguments.length -  0);
while (G__29136__i < G__29136__a.length) {G__29136__a[G__29136__i] = arguments[G__29136__i + 0]; ++G__29136__i;}
G__29135 = new cljs.core.IndexedSeq(G__29136__a,0);
}
return js_obj__1.cljs$core$IFn$_invoke$arity$variadic(G__29135);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
js_obj.cljs$lang$maxFixedArity = 0;
js_obj.cljs$lang$applyTo = js_obj__1.cljs$lang$applyTo;
js_obj.cljs$core$IFn$_invoke$arity$0 = js_obj__0;
js_obj.cljs$core$IFn$_invoke$arity$variadic = js_obj__1.cljs$core$IFn$_invoke$arity$variadic;
return js_obj;
})()
;
cljs.core.js_keys = (function js_keys(obj){
var keys = [];
var G__29139_29141 = obj;
var G__29140_29142 = ((function (G__29139_29141,keys){
return (function (val,key,obj__$1){
return keys.push(key);
});})(G__29139_29141,keys))
;
goog.object.forEach(G__29139_29141,G__29140_29142);

return keys;
});
cljs.core.js_delete = (function js_delete(obj,key){
return delete obj[key];
});
cljs.core.array_copy = (function array_copy(from,i,to,j,len){
var i__$1 = i;
var j__$1 = j;
var len__$1 = len;
while(true){
if((len__$1 === (0))){
return to;
} else {
(to[j__$1] = (from[i__$1]));

var G__29143 = (i__$1 + (1));
var G__29144 = (j__$1 + (1));
var G__29145 = (len__$1 - (1));
i__$1 = G__29143;
j__$1 = G__29144;
len__$1 = G__29145;
continue;
}
break;
}
});
cljs.core.array_copy_downward = (function array_copy_downward(from,i,to,j,len){
var i__$1 = (i + (len - (1)));
var j__$1 = (j + (len - (1)));
var len__$1 = len;
while(true){
if((len__$1 === (0))){
return to;
} else {
(to[j__$1] = (from[i__$1]));

var G__29146 = (i__$1 - (1));
var G__29147 = (j__$1 - (1));
var G__29148 = (len__$1 - (1));
i__$1 = G__29146;
j__$1 = G__29147;
len__$1 = G__29148;
continue;
}
break;
}
});
cljs.core.lookup_sentinel = (function (){var obj29150 = {};
return obj29150;
})();
/**
* Returns true if x is the value false, false otherwise.
*/
cljs.core.false_QMARK_ = (function false_QMARK_(x){
return x === false;
});
/**
* Returns true if x is the value true, false otherwise.
*/
cljs.core.true_QMARK_ = (function true_QMARK_(x){
return x === true;
});
cljs.core.undefined_QMARK_ = (function undefined_QMARK_(x){
return (void 0 === x);
});
/**
* Return true if s satisfies ISeq
*/
cljs.core.seq_QMARK_ = (function seq_QMARK_(s){
if((s == null)){
return false;
} else {
var G__29152 = s;
if(G__29152){
var bit__24955__auto__ = (G__29152.cljs$lang$protocol_mask$partition0$ & (64));
if((bit__24955__auto__) || (G__29152.cljs$core$ISeq$)){
return true;
} else {
if((!G__29152.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq,G__29152);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq,G__29152);
}
}
});
/**
* Return true if s satisfies ISeqable
*/
cljs.core.seqable_QMARK_ = (function seqable_QMARK_(s){
var G__29154 = s;
if(G__29154){
var bit__24955__auto__ = (G__29154.cljs$lang$protocol_mask$partition0$ & (8388608));
if((bit__24955__auto__) || (G__29154.cljs$core$ISeqable$)){
return true;
} else {
if((!G__29154.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeqable,G__29154);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeqable,G__29154);
}
});
cljs.core.boolean$ = (function boolean$(x){
if(cljs.core.truth_(x)){
return true;
} else {
return false;
}
});
cljs.core.ifn_QMARK_ = (function ifn_QMARK_(f){
var or__24274__auto__ = cljs.core.fn_QMARK_(f);
if(or__24274__auto__){
return or__24274__auto__;
} else {
var G__29158 = f;
if(G__29158){
var bit__24955__auto__ = (G__29158.cljs$lang$protocol_mask$partition0$ & (1));
if((bit__24955__auto__) || (G__29158.cljs$core$IFn$)){
return true;
} else {
if((!G__29158.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IFn,G__29158);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IFn,G__29158);
}
}
});
/**
* Returns true if n is an integer.
*/
cljs.core.integer_QMARK_ = (function integer_QMARK_(n){
return (typeof n === 'number') && (cljs.core.not((function (){var G__29171 = n;
return isNaN(G__29171);
})())) && (!((n === Infinity))) && (((function (){var G__29172 = n;
return parseFloat(G__29172);
})() === (function (){var G__29173 = n;
var G__29174 = (10);
return parseInt(G__29173,G__29174);
})()));
});
/**
* Returns true if key is present in the given collection, otherwise
* returns false.  Note that for numerically indexed collections like
* vectors and arrays, this tests if the numeric key is within the
* range of indexes. 'contains?' operates constant or logarithmic time;
* it will not perform a linear search for a value.  See also 'some'.
*/
cljs.core.contains_QMARK_ = (function contains_QMARK_(coll,v){
if((cljs.core.get.cljs$core$IFn$_invoke$arity$3(coll,v,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel)){
return false;
} else {
return true;
}
});
/**
* Returns the map entry for key, or nil if key not present.
*/
cljs.core.find = (function find(coll,k){
if((!((coll == null))) && (cljs.core.associative_QMARK_(coll)) && (cljs.core.contains_QMARK_(coll,k))){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [k,cljs.core.get.cljs$core$IFn$_invoke$arity$2(coll,k)], null);
} else {
return null;
}
});
/**
* Returns true if no two of the arguments are =
* @param {...*} var_args
*/
cljs.core.distinct_QMARK_ = (function() {
var distinct_QMARK_ = null;
var distinct_QMARK___1 = (function (x){
return true;
});
var distinct_QMARK___2 = (function (x,y){
return !(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x,y));
});
var distinct_QMARK___3 = (function() { 
var G__29175__delegate = function (x,y,more){
if(!(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x,y))){
var s = cljs.core.PersistentHashSet.fromArray([x,y], true);
var xs = more;
while(true){
var x__$1 = cljs.core.first(xs);
var etc = cljs.core.next(xs);
if(cljs.core.truth_(xs)){
if(cljs.core.contains_QMARK_(s,x__$1)){
return false;
} else {
var G__29176 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(s,x__$1);
var G__29177 = etc;
s = G__29176;
xs = G__29177;
continue;
}
} else {
return true;
}
break;
}
} else {
return false;
}
};
var G__29175 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__29178__i = 0, G__29178__a = new Array(arguments.length -  2);
while (G__29178__i < G__29178__a.length) {G__29178__a[G__29178__i] = arguments[G__29178__i + 2]; ++G__29178__i;}
  more = new cljs.core.IndexedSeq(G__29178__a,0);
} 
return G__29175__delegate.call(this,x,y,more);};
G__29175.cljs$lang$maxFixedArity = 2;
G__29175.cljs$lang$applyTo = (function (arglist__29179){
var x = cljs.core.first(arglist__29179);
arglist__29179 = cljs.core.next(arglist__29179);
var y = cljs.core.first(arglist__29179);
var more = cljs.core.rest(arglist__29179);
return G__29175__delegate(x,y,more);
});
G__29175.cljs$core$IFn$_invoke$arity$variadic = G__29175__delegate;
return G__29175;
})()
;
distinct_QMARK_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return distinct_QMARK___1.call(this,x);
case 2:
return distinct_QMARK___2.call(this,x,y);
default:
var G__29180 = null;
if (arguments.length > 2) {
var G__29181__i = 0, G__29181__a = new Array(arguments.length -  2);
while (G__29181__i < G__29181__a.length) {G__29181__a[G__29181__i] = arguments[G__29181__i + 2]; ++G__29181__i;}
G__29180 = new cljs.core.IndexedSeq(G__29181__a,0);
}
return distinct_QMARK___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__29180);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
distinct_QMARK_.cljs$lang$maxFixedArity = 2;
distinct_QMARK_.cljs$lang$applyTo = distinct_QMARK___3.cljs$lang$applyTo;
distinct_QMARK_.cljs$core$IFn$_invoke$arity$1 = distinct_QMARK___1;
distinct_QMARK_.cljs$core$IFn$_invoke$arity$2 = distinct_QMARK___2;
distinct_QMARK_.cljs$core$IFn$_invoke$arity$variadic = distinct_QMARK___3.cljs$core$IFn$_invoke$arity$variadic;
return distinct_QMARK_;
})()
;
/**
* Comparator. Returns a negative number, zero, or a positive number
* when x is logically 'less than', 'equal to', or 'greater than'
* y. Uses IComparable if available and google.array.defaultCompare for objects
* of the same type and special-cases nil to be less than any other object.
*/
cljs.core.compare = (function compare(x,y){
if((x === y)){
return (0);
} else {
if((x == null)){
return (-1);
} else {
if((y == null)){
return (1);
} else {
if((cljs.core.type(x) === cljs.core.type(y))){
if((function (){var G__29185 = x;
if(G__29185){
var bit__24948__auto__ = (G__29185.cljs$lang$protocol_mask$partition1$ & (2048));
if((bit__24948__auto__) || (G__29185.cljs$core$IComparable$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return x.cljs$core$IComparable$_compare$arity$2(null,y);
} else {
var G__29186 = x;
var G__29187 = y;
return goog.array.defaultCompare(G__29186,G__29187);
}
} else {
throw (new Error("compare on non-nil objects of different types"));

}
}
}
}
});
/**
* Compare indexed collection.
*/
cljs.core.compare_indexed = (function() {
var compare_indexed = null;
var compare_indexed__2 = (function (xs,ys){
var xl = cljs.core.count(xs);
var yl = cljs.core.count(ys);
if((xl < yl)){
return (-1);
} else {
if((xl > yl)){
return (1);
} else {
return compare_indexed.cljs$core$IFn$_invoke$arity$4(xs,ys,xl,(0));

}
}
});
var compare_indexed__4 = (function (xs,ys,len,n){
while(true){
var d = cljs.core.compare(cljs.core.nth.cljs$core$IFn$_invoke$arity$2(xs,n),cljs.core.nth.cljs$core$IFn$_invoke$arity$2(ys,n));
if(((d === (0))) && (((n + (1)) < len))){
var G__29192 = xs;
var G__29193 = ys;
var G__29194 = len;
var G__29195 = (n + (1));
xs = G__29192;
ys = G__29193;
len = G__29194;
n = G__29195;
continue;
} else {
return d;
}
break;
}
});
compare_indexed = function(xs,ys,len,n){
switch(arguments.length){
case 2:
return compare_indexed__2.call(this,xs,ys);
case 4:
return compare_indexed__4.call(this,xs,ys,len,n);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
compare_indexed.cljs$core$IFn$_invoke$arity$2 = compare_indexed__2;
compare_indexed.cljs$core$IFn$_invoke$arity$4 = compare_indexed__4;
return compare_indexed;
})()
;
/**
* Given a fn that might be boolean valued or a comparator,
* return a fn that is a comparator.
*/
cljs.core.fn__GT_comparator = (function fn__GT_comparator(f){
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(f,cljs.core.compare)){
return cljs.core.compare;
} else {
return (function (x,y){
var r = (function (){var G__29200 = x;
var G__29201 = y;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__29200,G__29201) : f.call(null,G__29200,G__29201));
})();
if(typeof r === 'number'){
return r;
} else {
if(cljs.core.truth_(r)){
return (-1);
} else {
if(cljs.core.truth_((function (){var G__29202 = y;
var G__29203 = x;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__29202,G__29203) : f.call(null,G__29202,G__29203));
})())){
return (1);
} else {
return (0);
}
}
}
});
}
});
/**
* Returns a sorted sequence of the items in coll. Comp can be
* boolean-valued comparison function, or a -/0/+ valued comparator.
* Comp defaults to compare.
*/
cljs.core.sort = (function() {
var sort = null;
var sort__1 = (function (coll){
return sort.cljs$core$IFn$_invoke$arity$2(cljs.core.compare,coll);
});
var sort__2 = (function (comp,coll){
if(cljs.core.seq(coll)){
var a = (function (){var G__29209 = coll;
return (cljs.core.to_array.cljs$core$IFn$_invoke$arity$1 ? cljs.core.to_array.cljs$core$IFn$_invoke$arity$1(G__29209) : cljs.core.to_array.call(null,G__29209));
})();
var G__29210_29212 = a;
var G__29211_29213 = cljs.core.fn__GT_comparator(comp);
goog.array.stableSort(G__29210_29212,G__29211_29213);

return cljs.core.seq(a);
} else {
return cljs.core.List.EMPTY;
}
});
sort = function(comp,coll){
switch(arguments.length){
case 1:
return sort__1.call(this,comp);
case 2:
return sort__2.call(this,comp,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
sort.cljs$core$IFn$_invoke$arity$1 = sort__1;
sort.cljs$core$IFn$_invoke$arity$2 = sort__2;
return sort;
})()
;
/**
* Returns a sorted sequence of the items in coll, where the sort
* order is determined by comparing (keyfn item).  Comp can be
* boolean-valued comparison funcion, or a -/0/+ valued comparator.
* Comp defaults to compare.
*/
cljs.core.sort_by = (function() {
var sort_by = null;
var sort_by__2 = (function (keyfn,coll){
return sort_by.cljs$core$IFn$_invoke$arity$3(keyfn,cljs.core.compare,coll);
});
var sort_by__3 = (function (keyfn,comp,coll){
return cljs.core.sort.cljs$core$IFn$_invoke$arity$2((function (x,y){
return cljs.core.fn__GT_comparator(comp).call(null,(function (){var G__29219 = x;
return (keyfn.cljs$core$IFn$_invoke$arity$1 ? keyfn.cljs$core$IFn$_invoke$arity$1(G__29219) : keyfn.call(null,G__29219));
})(),(function (){var G__29220 = y;
return (keyfn.cljs$core$IFn$_invoke$arity$1 ? keyfn.cljs$core$IFn$_invoke$arity$1(G__29220) : keyfn.call(null,G__29220));
})());
}),coll);
});
sort_by = function(keyfn,comp,coll){
switch(arguments.length){
case 2:
return sort_by__2.call(this,keyfn,comp);
case 3:
return sort_by__3.call(this,keyfn,comp,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
sort_by.cljs$core$IFn$_invoke$arity$2 = sort_by__2;
sort_by.cljs$core$IFn$_invoke$arity$3 = sort_by__3;
return sort_by;
})()
;
cljs.core.seq_reduce = (function() {
var seq_reduce = null;
var seq_reduce__2 = (function (f,coll){
var temp__4124__auto__ = cljs.core.seq(coll);
if(temp__4124__auto__){
var s = temp__4124__auto__;
var G__29226 = f;
var G__29227 = cljs.core.first(s);
var G__29228 = cljs.core.next(s);
return (cljs.core.reduce.cljs$core$IFn$_invoke$arity$3 ? cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(G__29226,G__29227,G__29228) : cljs.core.reduce.call(null,G__29226,G__29227,G__29228));
} else {
return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
}
});
var seq_reduce__3 = (function (f,val,coll){
var val__$1 = val;
var coll__$1 = cljs.core.seq(coll);
while(true){
if(coll__$1){
var nval = (function (){var G__29229 = val__$1;
var G__29230 = cljs.core.first(coll__$1);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__29229,G__29230) : f.call(null,G__29229,G__29230));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__29231 = nval;
var G__29232 = cljs.core.next(coll__$1);
val__$1 = G__29231;
coll__$1 = G__29232;
continue;
}
} else {
return val__$1;
}
break;
}
});
seq_reduce = function(f,val,coll){
switch(arguments.length){
case 2:
return seq_reduce__2.call(this,f,val);
case 3:
return seq_reduce__3.call(this,f,val,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
seq_reduce.cljs$core$IFn$_invoke$arity$2 = seq_reduce__2;
seq_reduce.cljs$core$IFn$_invoke$arity$3 = seq_reduce__3;
return seq_reduce;
})()
;
/**
* Return a random permutation of coll
*/
cljs.core.shuffle = (function shuffle(coll){
var a = (function (){var G__29236 = coll;
return (cljs.core.to_array.cljs$core$IFn$_invoke$arity$1 ? cljs.core.to_array.cljs$core$IFn$_invoke$arity$1(G__29236) : cljs.core.to_array.call(null,G__29236));
})();
var G__29237_29239 = a;
goog.array.shuffle(G__29237_29239);

var G__29238 = a;
return (cljs.core.vec.cljs$core$IFn$_invoke$arity$1 ? cljs.core.vec.cljs$core$IFn$_invoke$arity$1(G__29238) : cljs.core.vec.call(null,G__29238));
});
/**
* f should be a function of 2 arguments. If val is not supplied,
* returns the result of applying f to the first 2 items in coll, then
* applying f to that result and the 3rd item, etc. If coll contains no
* items, f must accept no arguments as well, and reduce returns the
* result of calling f with no arguments.  If coll has only 1 item, it
* is returned and f is not called.  If val is supplied, returns the
* result of applying f to val and the first item in coll, then
* applying f to that result and the 2nd item, etc. If coll contains no
* items, returns val and f is not called.
*/
cljs.core.reduce = (function() {
var reduce = null;
var reduce__2 = (function (f,coll){
if((function (){var G__29242 = coll;
if(G__29242){
var bit__24948__auto__ = (G__29242.cljs$lang$protocol_mask$partition0$ & (524288));
if((bit__24948__auto__) || (G__29242.cljs$core$IReduce$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$IReduce$_reduce$arity$2(null,f);
} else {
if(coll instanceof Array){
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$2(coll,f);
} else {
if(typeof coll === 'string'){
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$2(coll,f);
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.IReduce,coll)){
return cljs.core._reduce.cljs$core$IFn$_invoke$arity$2(coll,f);
} else {
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll);

}
}
}
}
});
var reduce__3 = (function (f,val,coll){
if((function (){var G__29243 = coll;
if(G__29243){
var bit__24948__auto__ = (G__29243.cljs$lang$protocol_mask$partition0$ & (524288));
if((bit__24948__auto__) || (G__29243.cljs$core$IReduce$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$IReduce$_reduce$arity$3(null,f,val);
} else {
if(coll instanceof Array){
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$3(coll,f,val);
} else {
if(typeof coll === 'string'){
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$3(coll,f,val);
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.IReduce,coll)){
return cljs.core._reduce.cljs$core$IFn$_invoke$arity$3(coll,f,val);
} else {
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,val,coll);

}
}
}
}
});
reduce = function(f,val,coll){
switch(arguments.length){
case 2:
return reduce__2.call(this,f,val);
case 3:
return reduce__3.call(this,f,val,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
reduce.cljs$core$IFn$_invoke$arity$2 = reduce__2;
reduce.cljs$core$IFn$_invoke$arity$3 = reduce__3;
return reduce;
})()
;
/**
* Reduces an associative collection. f should be a function of 3
* arguments. Returns the result of applying f to init, the first key
* and the first value in coll, then applying f to that result and the
* 2nd key and value, etc. If coll contains no entries, returns init
* and f is not called. Note that reduce-kv is supported on vectors,
* where the keys will be the ordinals.
*/
cljs.core.reduce_kv = (function reduce_kv(f,init,coll){
if(!((coll == null))){
return cljs.core._kv_reduce(coll,f,init);
} else {
return init;
}
});
cljs.core.identity = (function identity(x){
return x;
});
cljs.core.completing = (function() {
var completing = null;
var completing__1 = (function (f){
return completing.cljs$core$IFn$_invoke$arity$2(f,cljs.core.identity);
});
var completing__2 = (function (f,cf){
return (function() {
var G__29252 = null;
var G__29252__0 = (function (){
return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
});
var G__29252__1 = (function (x){
var G__29249 = x;
return (cf.cljs$core$IFn$_invoke$arity$1 ? cf.cljs$core$IFn$_invoke$arity$1(G__29249) : cf.call(null,G__29249));
});
var G__29252__2 = (function (x,y){
var G__29250 = x;
var G__29251 = y;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__29250,G__29251) : f.call(null,G__29250,G__29251));
});
G__29252 = function(x,y){
switch(arguments.length){
case 0:
return G__29252__0.call(this);
case 1:
return G__29252__1.call(this,x);
case 2:
return G__29252__2.call(this,x,y);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__29252.cljs$core$IFn$_invoke$arity$0 = G__29252__0;
G__29252.cljs$core$IFn$_invoke$arity$1 = G__29252__1;
G__29252.cljs$core$IFn$_invoke$arity$2 = G__29252__2;
return G__29252;
})()
});
completing = function(f,cf){
switch(arguments.length){
case 1:
return completing__1.call(this,f);
case 2:
return completing__2.call(this,f,cf);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
completing.cljs$core$IFn$_invoke$arity$1 = completing__1;
completing.cljs$core$IFn$_invoke$arity$2 = completing__2;
return completing;
})()
;
/**
* reduce with a transformation of f (xf). If init is not
* supplied, (f) will be called to produce it. f should be a reducing
* step function that accepts both 1 and 2 arguments, if it accepts
* only 2 you can add the arity-1 with 'completing'. Returns the result
* of applying (the transformed) xf to init and the first item in coll,
* then applying xf to that result and the 2nd item, etc. If coll
* contains no items, returns init and f is not called. Note that
* certain transforms may inject or skip items.
*/
cljs.core.transduce = (function() {
var transduce = null;
var transduce__3 = (function (xform,f,coll){
return transduce.cljs$core$IFn$_invoke$arity$4(xform,f,(function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})(),coll);
});
var transduce__4 = (function (xform,f,init,coll){
var f__$1 = (function (){var G__29259 = f;
return (xform.cljs$core$IFn$_invoke$arity$1 ? xform.cljs$core$IFn$_invoke$arity$1(G__29259) : xform.call(null,G__29259));
})();
var ret = cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(f__$1,init,coll);
var G__29260 = ret;
return (f__$1.cljs$core$IFn$_invoke$arity$1 ? f__$1.cljs$core$IFn$_invoke$arity$1(G__29260) : f__$1.call(null,G__29260));
});
transduce = function(xform,f,init,coll){
switch(arguments.length){
case 3:
return transduce__3.call(this,xform,f,init);
case 4:
return transduce__4.call(this,xform,f,init,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
transduce.cljs$core$IFn$_invoke$arity$3 = transduce__3;
transduce.cljs$core$IFn$_invoke$arity$4 = transduce__4;
return transduce;
})()
;
/**
* Returns the sum of nums. (+) returns 0.
* @param {...*} var_args
*/
cljs.core._PLUS_ = (function() {
var _PLUS_ = null;
var _PLUS___0 = (function (){
return (0);
});
var _PLUS___1 = (function (x){
return x;
});
var _PLUS___2 = (function (x,y){
return (x + y);
});
var _PLUS___3 = (function() { 
var G__29261__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(_PLUS_,(x + y),more);
};
var G__29261 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__29262__i = 0, G__29262__a = new Array(arguments.length -  2);
while (G__29262__i < G__29262__a.length) {G__29262__a[G__29262__i] = arguments[G__29262__i + 2]; ++G__29262__i;}
  more = new cljs.core.IndexedSeq(G__29262__a,0);
} 
return G__29261__delegate.call(this,x,y,more);};
G__29261.cljs$lang$maxFixedArity = 2;
G__29261.cljs$lang$applyTo = (function (arglist__29263){
var x = cljs.core.first(arglist__29263);
arglist__29263 = cljs.core.next(arglist__29263);
var y = cljs.core.first(arglist__29263);
var more = cljs.core.rest(arglist__29263);
return G__29261__delegate(x,y,more);
});
G__29261.cljs$core$IFn$_invoke$arity$variadic = G__29261__delegate;
return G__29261;
})()
;
_PLUS_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 0:
return _PLUS___0.call(this);
case 1:
return _PLUS___1.call(this,x);
case 2:
return _PLUS___2.call(this,x,y);
default:
var G__29264 = null;
if (arguments.length > 2) {
var G__29265__i = 0, G__29265__a = new Array(arguments.length -  2);
while (G__29265__i < G__29265__a.length) {G__29265__a[G__29265__i] = arguments[G__29265__i + 2]; ++G__29265__i;}
G__29264 = new cljs.core.IndexedSeq(G__29265__a,0);
}
return _PLUS___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__29264);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_PLUS_.cljs$lang$maxFixedArity = 2;
_PLUS_.cljs$lang$applyTo = _PLUS___3.cljs$lang$applyTo;
_PLUS_.cljs$core$IFn$_invoke$arity$0 = _PLUS___0;
_PLUS_.cljs$core$IFn$_invoke$arity$1 = _PLUS___1;
_PLUS_.cljs$core$IFn$_invoke$arity$2 = _PLUS___2;
_PLUS_.cljs$core$IFn$_invoke$arity$variadic = _PLUS___3.cljs$core$IFn$_invoke$arity$variadic;
return _PLUS_;
})()
;
/**
* If no ys are supplied, returns the negation of x, else subtracts
* the ys from x and returns the result.
* @param {...*} var_args
*/
cljs.core._ = (function() {
var _ = null;
var ___1 = (function (x){
return (- x);
});
var ___2 = (function (x,y){
return (x - y);
});
var ___3 = (function() { 
var G__29266__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(_,(x - y),more);
};
var G__29266 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__29267__i = 0, G__29267__a = new Array(arguments.length -  2);
while (G__29267__i < G__29267__a.length) {G__29267__a[G__29267__i] = arguments[G__29267__i + 2]; ++G__29267__i;}
  more = new cljs.core.IndexedSeq(G__29267__a,0);
} 
return G__29266__delegate.call(this,x,y,more);};
G__29266.cljs$lang$maxFixedArity = 2;
G__29266.cljs$lang$applyTo = (function (arglist__29268){
var x = cljs.core.first(arglist__29268);
arglist__29268 = cljs.core.next(arglist__29268);
var y = cljs.core.first(arglist__29268);
var more = cljs.core.rest(arglist__29268);
return G__29266__delegate(x,y,more);
});
G__29266.cljs$core$IFn$_invoke$arity$variadic = G__29266__delegate;
return G__29266;
})()
;
_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return ___1.call(this,x);
case 2:
return ___2.call(this,x,y);
default:
var G__29269 = null;
if (arguments.length > 2) {
var G__29270__i = 0, G__29270__a = new Array(arguments.length -  2);
while (G__29270__i < G__29270__a.length) {G__29270__a[G__29270__i] = arguments[G__29270__i + 2]; ++G__29270__i;}
G__29269 = new cljs.core.IndexedSeq(G__29270__a,0);
}
return ___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__29269);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_.cljs$lang$maxFixedArity = 2;
_.cljs$lang$applyTo = ___3.cljs$lang$applyTo;
_.cljs$core$IFn$_invoke$arity$1 = ___1;
_.cljs$core$IFn$_invoke$arity$2 = ___2;
_.cljs$core$IFn$_invoke$arity$variadic = ___3.cljs$core$IFn$_invoke$arity$variadic;
return _;
})()
;
/**
* Returns the product of nums. (*) returns 1.
* @param {...*} var_args
*/
cljs.core._STAR_ = (function() {
var _STAR_ = null;
var _STAR___0 = (function (){
return (1);
});
var _STAR___1 = (function (x){
return x;
});
var _STAR___2 = (function (x,y){
return (x * y);
});
var _STAR___3 = (function() { 
var G__29271__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(_STAR_,(x * y),more);
};
var G__29271 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__29272__i = 0, G__29272__a = new Array(arguments.length -  2);
while (G__29272__i < G__29272__a.length) {G__29272__a[G__29272__i] = arguments[G__29272__i + 2]; ++G__29272__i;}
  more = new cljs.core.IndexedSeq(G__29272__a,0);
} 
return G__29271__delegate.call(this,x,y,more);};
G__29271.cljs$lang$maxFixedArity = 2;
G__29271.cljs$lang$applyTo = (function (arglist__29273){
var x = cljs.core.first(arglist__29273);
arglist__29273 = cljs.core.next(arglist__29273);
var y = cljs.core.first(arglist__29273);
var more = cljs.core.rest(arglist__29273);
return G__29271__delegate(x,y,more);
});
G__29271.cljs$core$IFn$_invoke$arity$variadic = G__29271__delegate;
return G__29271;
})()
;
_STAR_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 0:
return _STAR___0.call(this);
case 1:
return _STAR___1.call(this,x);
case 2:
return _STAR___2.call(this,x,y);
default:
var G__29274 = null;
if (arguments.length > 2) {
var G__29275__i = 0, G__29275__a = new Array(arguments.length -  2);
while (G__29275__i < G__29275__a.length) {G__29275__a[G__29275__i] = arguments[G__29275__i + 2]; ++G__29275__i;}
G__29274 = new cljs.core.IndexedSeq(G__29275__a,0);
}
return _STAR___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__29274);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_STAR_.cljs$lang$maxFixedArity = 2;
_STAR_.cljs$lang$applyTo = _STAR___3.cljs$lang$applyTo;
_STAR_.cljs$core$IFn$_invoke$arity$0 = _STAR___0;
_STAR_.cljs$core$IFn$_invoke$arity$1 = _STAR___1;
_STAR_.cljs$core$IFn$_invoke$arity$2 = _STAR___2;
_STAR_.cljs$core$IFn$_invoke$arity$variadic = _STAR___3.cljs$core$IFn$_invoke$arity$variadic;
return _STAR_;
})()
;
/**
* If no denominators are supplied, returns 1/numerator,
* else returns numerator divided by all of the denominators.
* @param {...*} var_args
*/
cljs.core._SLASH_ = (function() {
var _SLASH_ = null;
var _SLASH___1 = (function (x){
return _SLASH_.cljs$core$IFn$_invoke$arity$2((1),x);
});
var _SLASH___2 = (function (x,y){
return (x / y);
});
var _SLASH___3 = (function() { 
var G__29280__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(_SLASH_,_SLASH_.cljs$core$IFn$_invoke$arity$2(x,y),more);
};
var G__29280 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__29281__i = 0, G__29281__a = new Array(arguments.length -  2);
while (G__29281__i < G__29281__a.length) {G__29281__a[G__29281__i] = arguments[G__29281__i + 2]; ++G__29281__i;}
  more = new cljs.core.IndexedSeq(G__29281__a,0);
} 
return G__29280__delegate.call(this,x,y,more);};
G__29280.cljs$lang$maxFixedArity = 2;
G__29280.cljs$lang$applyTo = (function (arglist__29282){
var x = cljs.core.first(arglist__29282);
arglist__29282 = cljs.core.next(arglist__29282);
var y = cljs.core.first(arglist__29282);
var more = cljs.core.rest(arglist__29282);
return G__29280__delegate(x,y,more);
});
G__29280.cljs$core$IFn$_invoke$arity$variadic = G__29280__delegate;
return G__29280;
})()
;
_SLASH_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return _SLASH___1.call(this,x);
case 2:
return _SLASH___2.call(this,x,y);
default:
var G__29283 = null;
if (arguments.length > 2) {
var G__29284__i = 0, G__29284__a = new Array(arguments.length -  2);
while (G__29284__i < G__29284__a.length) {G__29284__a[G__29284__i] = arguments[G__29284__i + 2]; ++G__29284__i;}
G__29283 = new cljs.core.IndexedSeq(G__29284__a,0);
}
return _SLASH___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__29283);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_SLASH_.cljs$lang$maxFixedArity = 2;
_SLASH_.cljs$lang$applyTo = _SLASH___3.cljs$lang$applyTo;
_SLASH_.cljs$core$IFn$_invoke$arity$1 = _SLASH___1;
_SLASH_.cljs$core$IFn$_invoke$arity$2 = _SLASH___2;
_SLASH_.cljs$core$IFn$_invoke$arity$variadic = _SLASH___3.cljs$core$IFn$_invoke$arity$variadic;
return _SLASH_;
})()
;
/**
* Returns non-nil if nums are in monotonically increasing order,
* otherwise false.
* @param {...*} var_args
*/
cljs.core._LT_ = (function() {
var _LT_ = null;
var _LT___1 = (function (x){
return true;
});
var _LT___2 = (function (x,y){
return (x < y);
});
var _LT___3 = (function() { 
var G__29285__delegate = function (x,y,more){
while(true){
if((x < y)){
if(cljs.core.next(more)){
var G__29286 = y;
var G__29287 = cljs.core.first(more);
var G__29288 = cljs.core.next(more);
x = G__29286;
y = G__29287;
more = G__29288;
continue;
} else {
return (y < cljs.core.first(more));
}
} else {
return false;
}
break;
}
};
var G__29285 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__29289__i = 0, G__29289__a = new Array(arguments.length -  2);
while (G__29289__i < G__29289__a.length) {G__29289__a[G__29289__i] = arguments[G__29289__i + 2]; ++G__29289__i;}
  more = new cljs.core.IndexedSeq(G__29289__a,0);
} 
return G__29285__delegate.call(this,x,y,more);};
G__29285.cljs$lang$maxFixedArity = 2;
G__29285.cljs$lang$applyTo = (function (arglist__29290){
var x = cljs.core.first(arglist__29290);
arglist__29290 = cljs.core.next(arglist__29290);
var y = cljs.core.first(arglist__29290);
var more = cljs.core.rest(arglist__29290);
return G__29285__delegate(x,y,more);
});
G__29285.cljs$core$IFn$_invoke$arity$variadic = G__29285__delegate;
return G__29285;
})()
;
_LT_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return _LT___1.call(this,x);
case 2:
return _LT___2.call(this,x,y);
default:
var G__29291 = null;
if (arguments.length > 2) {
var G__29292__i = 0, G__29292__a = new Array(arguments.length -  2);
while (G__29292__i < G__29292__a.length) {G__29292__a[G__29292__i] = arguments[G__29292__i + 2]; ++G__29292__i;}
G__29291 = new cljs.core.IndexedSeq(G__29292__a,0);
}
return _LT___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__29291);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_LT_.cljs$lang$maxFixedArity = 2;
_LT_.cljs$lang$applyTo = _LT___3.cljs$lang$applyTo;
_LT_.cljs$core$IFn$_invoke$arity$1 = _LT___1;
_LT_.cljs$core$IFn$_invoke$arity$2 = _LT___2;
_LT_.cljs$core$IFn$_invoke$arity$variadic = _LT___3.cljs$core$IFn$_invoke$arity$variadic;
return _LT_;
})()
;
/**
* Returns non-nil if nums are in monotonically non-decreasing order,
* otherwise false.
* @param {...*} var_args
*/
cljs.core._LT__EQ_ = (function() {
var _LT__EQ_ = null;
var _LT__EQ___1 = (function (x){
return true;
});
var _LT__EQ___2 = (function (x,y){
return (x <= y);
});
var _LT__EQ___3 = (function() { 
var G__29293__delegate = function (x,y,more){
while(true){
if((x <= y)){
if(cljs.core.next(more)){
var G__29294 = y;
var G__29295 = cljs.core.first(more);
var G__29296 = cljs.core.next(more);
x = G__29294;
y = G__29295;
more = G__29296;
continue;
} else {
return (y <= cljs.core.first(more));
}
} else {
return false;
}
break;
}
};
var G__29293 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__29297__i = 0, G__29297__a = new Array(arguments.length -  2);
while (G__29297__i < G__29297__a.length) {G__29297__a[G__29297__i] = arguments[G__29297__i + 2]; ++G__29297__i;}
  more = new cljs.core.IndexedSeq(G__29297__a,0);
} 
return G__29293__delegate.call(this,x,y,more);};
G__29293.cljs$lang$maxFixedArity = 2;
G__29293.cljs$lang$applyTo = (function (arglist__29298){
var x = cljs.core.first(arglist__29298);
arglist__29298 = cljs.core.next(arglist__29298);
var y = cljs.core.first(arglist__29298);
var more = cljs.core.rest(arglist__29298);
return G__29293__delegate(x,y,more);
});
G__29293.cljs$core$IFn$_invoke$arity$variadic = G__29293__delegate;
return G__29293;
})()
;
_LT__EQ_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return _LT__EQ___1.call(this,x);
case 2:
return _LT__EQ___2.call(this,x,y);
default:
var G__29299 = null;
if (arguments.length > 2) {
var G__29300__i = 0, G__29300__a = new Array(arguments.length -  2);
while (G__29300__i < G__29300__a.length) {G__29300__a[G__29300__i] = arguments[G__29300__i + 2]; ++G__29300__i;}
G__29299 = new cljs.core.IndexedSeq(G__29300__a,0);
}
return _LT__EQ___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__29299);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_LT__EQ_.cljs$lang$maxFixedArity = 2;
_LT__EQ_.cljs$lang$applyTo = _LT__EQ___3.cljs$lang$applyTo;
_LT__EQ_.cljs$core$IFn$_invoke$arity$1 = _LT__EQ___1;
_LT__EQ_.cljs$core$IFn$_invoke$arity$2 = _LT__EQ___2;
_LT__EQ_.cljs$core$IFn$_invoke$arity$variadic = _LT__EQ___3.cljs$core$IFn$_invoke$arity$variadic;
return _LT__EQ_;
})()
;
/**
* Returns non-nil if nums are in monotonically decreasing order,
* otherwise false.
* @param {...*} var_args
*/
cljs.core._GT_ = (function() {
var _GT_ = null;
var _GT___1 = (function (x){
return true;
});
var _GT___2 = (function (x,y){
return (x > y);
});
var _GT___3 = (function() { 
var G__29301__delegate = function (x,y,more){
while(true){
if((x > y)){
if(cljs.core.next(more)){
var G__29302 = y;
var G__29303 = cljs.core.first(more);
var G__29304 = cljs.core.next(more);
x = G__29302;
y = G__29303;
more = G__29304;
continue;
} else {
return (y > cljs.core.first(more));
}
} else {
return false;
}
break;
}
};
var G__29301 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__29305__i = 0, G__29305__a = new Array(arguments.length -  2);
while (G__29305__i < G__29305__a.length) {G__29305__a[G__29305__i] = arguments[G__29305__i + 2]; ++G__29305__i;}
  more = new cljs.core.IndexedSeq(G__29305__a,0);
} 
return G__29301__delegate.call(this,x,y,more);};
G__29301.cljs$lang$maxFixedArity = 2;
G__29301.cljs$lang$applyTo = (function (arglist__29306){
var x = cljs.core.first(arglist__29306);
arglist__29306 = cljs.core.next(arglist__29306);
var y = cljs.core.first(arglist__29306);
var more = cljs.core.rest(arglist__29306);
return G__29301__delegate(x,y,more);
});
G__29301.cljs$core$IFn$_invoke$arity$variadic = G__29301__delegate;
return G__29301;
})()
;
_GT_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return _GT___1.call(this,x);
case 2:
return _GT___2.call(this,x,y);
default:
var G__29307 = null;
if (arguments.length > 2) {
var G__29308__i = 0, G__29308__a = new Array(arguments.length -  2);
while (G__29308__i < G__29308__a.length) {G__29308__a[G__29308__i] = arguments[G__29308__i + 2]; ++G__29308__i;}
G__29307 = new cljs.core.IndexedSeq(G__29308__a,0);
}
return _GT___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__29307);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_GT_.cljs$lang$maxFixedArity = 2;
_GT_.cljs$lang$applyTo = _GT___3.cljs$lang$applyTo;
_GT_.cljs$core$IFn$_invoke$arity$1 = _GT___1;
_GT_.cljs$core$IFn$_invoke$arity$2 = _GT___2;
_GT_.cljs$core$IFn$_invoke$arity$variadic = _GT___3.cljs$core$IFn$_invoke$arity$variadic;
return _GT_;
})()
;
/**
* Returns non-nil if nums are in monotonically non-increasing order,
* otherwise false.
* @param {...*} var_args
*/
cljs.core._GT__EQ_ = (function() {
var _GT__EQ_ = null;
var _GT__EQ___1 = (function (x){
return true;
});
var _GT__EQ___2 = (function (x,y){
return (x >= y);
});
var _GT__EQ___3 = (function() { 
var G__29309__delegate = function (x,y,more){
while(true){
if((x >= y)){
if(cljs.core.next(more)){
var G__29310 = y;
var G__29311 = cljs.core.first(more);
var G__29312 = cljs.core.next(more);
x = G__29310;
y = G__29311;
more = G__29312;
continue;
} else {
return (y >= cljs.core.first(more));
}
} else {
return false;
}
break;
}
};
var G__29309 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__29313__i = 0, G__29313__a = new Array(arguments.length -  2);
while (G__29313__i < G__29313__a.length) {G__29313__a[G__29313__i] = arguments[G__29313__i + 2]; ++G__29313__i;}
  more = new cljs.core.IndexedSeq(G__29313__a,0);
} 
return G__29309__delegate.call(this,x,y,more);};
G__29309.cljs$lang$maxFixedArity = 2;
G__29309.cljs$lang$applyTo = (function (arglist__29314){
var x = cljs.core.first(arglist__29314);
arglist__29314 = cljs.core.next(arglist__29314);
var y = cljs.core.first(arglist__29314);
var more = cljs.core.rest(arglist__29314);
return G__29309__delegate(x,y,more);
});
G__29309.cljs$core$IFn$_invoke$arity$variadic = G__29309__delegate;
return G__29309;
})()
;
_GT__EQ_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return _GT__EQ___1.call(this,x);
case 2:
return _GT__EQ___2.call(this,x,y);
default:
var G__29315 = null;
if (arguments.length > 2) {
var G__29316__i = 0, G__29316__a = new Array(arguments.length -  2);
while (G__29316__i < G__29316__a.length) {G__29316__a[G__29316__i] = arguments[G__29316__i + 2]; ++G__29316__i;}
G__29315 = new cljs.core.IndexedSeq(G__29316__a,0);
}
return _GT__EQ___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__29315);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_GT__EQ_.cljs$lang$maxFixedArity = 2;
_GT__EQ_.cljs$lang$applyTo = _GT__EQ___3.cljs$lang$applyTo;
_GT__EQ_.cljs$core$IFn$_invoke$arity$1 = _GT__EQ___1;
_GT__EQ_.cljs$core$IFn$_invoke$arity$2 = _GT__EQ___2;
_GT__EQ_.cljs$core$IFn$_invoke$arity$variadic = _GT__EQ___3.cljs$core$IFn$_invoke$arity$variadic;
return _GT__EQ_;
})()
;
/**
* Returns a number one less than num.
*/
cljs.core.dec = (function dec(x){
return (x - (1));
});
/**
* Returns the greatest of the nums.
* @param {...*} var_args
*/
cljs.core.max = (function() {
var max = null;
var max__1 = (function (x){
return x;
});
var max__2 = (function (x,y){
var x__24591__auto__ = x;
var y__24592__auto__ = y;
return ((x__24591__auto__ > y__24592__auto__) ? x__24591__auto__ : y__24592__auto__);
});
var max__3 = (function() { 
var G__29317__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(max,(function (){var x__24591__auto__ = x;
var y__24592__auto__ = y;
return ((x__24591__auto__ > y__24592__auto__) ? x__24591__auto__ : y__24592__auto__);
})(),more);
};
var G__29317 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__29318__i = 0, G__29318__a = new Array(arguments.length -  2);
while (G__29318__i < G__29318__a.length) {G__29318__a[G__29318__i] = arguments[G__29318__i + 2]; ++G__29318__i;}
  more = new cljs.core.IndexedSeq(G__29318__a,0);
} 
return G__29317__delegate.call(this,x,y,more);};
G__29317.cljs$lang$maxFixedArity = 2;
G__29317.cljs$lang$applyTo = (function (arglist__29319){
var x = cljs.core.first(arglist__29319);
arglist__29319 = cljs.core.next(arglist__29319);
var y = cljs.core.first(arglist__29319);
var more = cljs.core.rest(arglist__29319);
return G__29317__delegate(x,y,more);
});
G__29317.cljs$core$IFn$_invoke$arity$variadic = G__29317__delegate;
return G__29317;
})()
;
max = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return max__1.call(this,x);
case 2:
return max__2.call(this,x,y);
default:
var G__29320 = null;
if (arguments.length > 2) {
var G__29321__i = 0, G__29321__a = new Array(arguments.length -  2);
while (G__29321__i < G__29321__a.length) {G__29321__a[G__29321__i] = arguments[G__29321__i + 2]; ++G__29321__i;}
G__29320 = new cljs.core.IndexedSeq(G__29321__a,0);
}
return max__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__29320);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
max.cljs$lang$maxFixedArity = 2;
max.cljs$lang$applyTo = max__3.cljs$lang$applyTo;
max.cljs$core$IFn$_invoke$arity$1 = max__1;
max.cljs$core$IFn$_invoke$arity$2 = max__2;
max.cljs$core$IFn$_invoke$arity$variadic = max__3.cljs$core$IFn$_invoke$arity$variadic;
return max;
})()
;
/**
* Returns the least of the nums.
* @param {...*} var_args
*/
cljs.core.min = (function() {
var min = null;
var min__1 = (function (x){
return x;
});
var min__2 = (function (x,y){
var x__24598__auto__ = x;
var y__24599__auto__ = y;
return ((x__24598__auto__ < y__24599__auto__) ? x__24598__auto__ : y__24599__auto__);
});
var min__3 = (function() { 
var G__29322__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(min,(function (){var x__24598__auto__ = x;
var y__24599__auto__ = y;
return ((x__24598__auto__ < y__24599__auto__) ? x__24598__auto__ : y__24599__auto__);
})(),more);
};
var G__29322 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__29323__i = 0, G__29323__a = new Array(arguments.length -  2);
while (G__29323__i < G__29323__a.length) {G__29323__a[G__29323__i] = arguments[G__29323__i + 2]; ++G__29323__i;}
  more = new cljs.core.IndexedSeq(G__29323__a,0);
} 
return G__29322__delegate.call(this,x,y,more);};
G__29322.cljs$lang$maxFixedArity = 2;
G__29322.cljs$lang$applyTo = (function (arglist__29324){
var x = cljs.core.first(arglist__29324);
arglist__29324 = cljs.core.next(arglist__29324);
var y = cljs.core.first(arglist__29324);
var more = cljs.core.rest(arglist__29324);
return G__29322__delegate(x,y,more);
});
G__29322.cljs$core$IFn$_invoke$arity$variadic = G__29322__delegate;
return G__29322;
})()
;
min = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return min__1.call(this,x);
case 2:
return min__2.call(this,x,y);
default:
var G__29325 = null;
if (arguments.length > 2) {
var G__29326__i = 0, G__29326__a = new Array(arguments.length -  2);
while (G__29326__i < G__29326__a.length) {G__29326__a[G__29326__i] = arguments[G__29326__i + 2]; ++G__29326__i;}
G__29325 = new cljs.core.IndexedSeq(G__29326__a,0);
}
return min__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__29325);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
min.cljs$lang$maxFixedArity = 2;
min.cljs$lang$applyTo = min__3.cljs$lang$applyTo;
min.cljs$core$IFn$_invoke$arity$1 = min__1;
min.cljs$core$IFn$_invoke$arity$2 = min__2;
min.cljs$core$IFn$_invoke$arity$variadic = min__3.cljs$core$IFn$_invoke$arity$variadic;
return min;
})()
;
cljs.core.byte$ = (function byte$(x){
return x;
});
/**
* Coerce to char
*/
cljs.core.char$ = (function char$(x){
if(typeof x === 'number'){
return String.fromCharCode(x);
} else {
if((typeof x === 'string') && ((x.length === (1)))){
return x;
} else {
throw (new Error("Argument to char must be a character or number"));

}
}
});
cljs.core.short$ = (function short$(x){
return x;
});
cljs.core.float$ = (function float$(x){
return x;
});
cljs.core.double$ = (function double$(x){
return x;
});
cljs.core.unchecked_byte = (function unchecked_byte(x){
return x;
});
cljs.core.unchecked_char = (function unchecked_char(x){
return x;
});
cljs.core.unchecked_short = (function unchecked_short(x){
return x;
});
cljs.core.unchecked_float = (function unchecked_float(x){
return x;
});
cljs.core.unchecked_double = (function unchecked_double(x){
return x;
});
/**
* Returns the sum of nums. (+) returns 0.
* @param {...*} var_args
*/
cljs.core.unchecked_add = (function() {
var unchecked_add = null;
var unchecked_add__0 = (function (){
return (0);
});
var unchecked_add__1 = (function (x){
return x;
});
var unchecked_add__2 = (function (x,y){
return (x + y);
});
var unchecked_add__3 = (function() { 
var G__29327__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_add,(x + y),more);
};
var G__29327 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__29328__i = 0, G__29328__a = new Array(arguments.length -  2);
while (G__29328__i < G__29328__a.length) {G__29328__a[G__29328__i] = arguments[G__29328__i + 2]; ++G__29328__i;}
  more = new cljs.core.IndexedSeq(G__29328__a,0);
} 
return G__29327__delegate.call(this,x,y,more);};
G__29327.cljs$lang$maxFixedArity = 2;
G__29327.cljs$lang$applyTo = (function (arglist__29329){
var x = cljs.core.first(arglist__29329);
arglist__29329 = cljs.core.next(arglist__29329);
var y = cljs.core.first(arglist__29329);
var more = cljs.core.rest(arglist__29329);
return G__29327__delegate(x,y,more);
});
G__29327.cljs$core$IFn$_invoke$arity$variadic = G__29327__delegate;
return G__29327;
})()
;
unchecked_add = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 0:
return unchecked_add__0.call(this);
case 1:
return unchecked_add__1.call(this,x);
case 2:
return unchecked_add__2.call(this,x,y);
default:
var G__29330 = null;
if (arguments.length > 2) {
var G__29331__i = 0, G__29331__a = new Array(arguments.length -  2);
while (G__29331__i < G__29331__a.length) {G__29331__a[G__29331__i] = arguments[G__29331__i + 2]; ++G__29331__i;}
G__29330 = new cljs.core.IndexedSeq(G__29331__a,0);
}
return unchecked_add__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__29330);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
unchecked_add.cljs$lang$maxFixedArity = 2;
unchecked_add.cljs$lang$applyTo = unchecked_add__3.cljs$lang$applyTo;
unchecked_add.cljs$core$IFn$_invoke$arity$0 = unchecked_add__0;
unchecked_add.cljs$core$IFn$_invoke$arity$1 = unchecked_add__1;
unchecked_add.cljs$core$IFn$_invoke$arity$2 = unchecked_add__2;
unchecked_add.cljs$core$IFn$_invoke$arity$variadic = unchecked_add__3.cljs$core$IFn$_invoke$arity$variadic;
return unchecked_add;
})()
;
/**
* Returns the sum of nums. (+) returns 0.
* @param {...*} var_args
*/
cljs.core.unchecked_add_int = (function() {
var unchecked_add_int = null;
var unchecked_add_int__0 = (function (){
return (0);
});
var unchecked_add_int__1 = (function (x){
return x;
});
var unchecked_add_int__2 = (function (x,y){
return (x + y);
});
var unchecked_add_int__3 = (function() { 
var G__29332__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_add_int,(x + y),more);
};
var G__29332 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__29333__i = 0, G__29333__a = new Array(arguments.length -  2);
while (G__29333__i < G__29333__a.length) {G__29333__a[G__29333__i] = arguments[G__29333__i + 2]; ++G__29333__i;}
  more = new cljs.core.IndexedSeq(G__29333__a,0);
} 
return G__29332__delegate.call(this,x,y,more);};
G__29332.cljs$lang$maxFixedArity = 2;
G__29332.cljs$lang$applyTo = (function (arglist__29334){
var x = cljs.core.first(arglist__29334);
arglist__29334 = cljs.core.next(arglist__29334);
var y = cljs.core.first(arglist__29334);
var more = cljs.core.rest(arglist__29334);
return G__29332__delegate(x,y,more);
});
G__29332.cljs$core$IFn$_invoke$arity$variadic = G__29332__delegate;
return G__29332;
})()
;
unchecked_add_int = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 0:
return unchecked_add_int__0.call(this);
case 1:
return unchecked_add_int__1.call(this,x);
case 2:
return unchecked_add_int__2.call(this,x,y);
default:
var G__29335 = null;
if (arguments.length > 2) {
var G__29336__i = 0, G__29336__a = new Array(arguments.length -  2);
while (G__29336__i < G__29336__a.length) {G__29336__a[G__29336__i] = arguments[G__29336__i + 2]; ++G__29336__i;}
G__29335 = new cljs.core.IndexedSeq(G__29336__a,0);
}
return unchecked_add_int__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__29335);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
unchecked_add_int.cljs$lang$maxFixedArity = 2;
unchecked_add_int.cljs$lang$applyTo = unchecked_add_int__3.cljs$lang$applyTo;
unchecked_add_int.cljs$core$IFn$_invoke$arity$0 = unchecked_add_int__0;
unchecked_add_int.cljs$core$IFn$_invoke$arity$1 = unchecked_add_int__1;
unchecked_add_int.cljs$core$IFn$_invoke$arity$2 = unchecked_add_int__2;
unchecked_add_int.cljs$core$IFn$_invoke$arity$variadic = unchecked_add_int__3.cljs$core$IFn$_invoke$arity$variadic;
return unchecked_add_int;
})()
;
cljs.core.unchecked_dec = (function unchecked_dec(x){
return (x - (1));
});
cljs.core.unchecked_dec_int = (function unchecked_dec_int(x){
return (x - (1));
});
/**
* If no denominators are supplied, returns 1/numerator,
* else returns numerator divided by all of the denominators.
* @param {...*} var_args
*/
cljs.core.unchecked_divide_int = (function() {
var unchecked_divide_int = null;
var unchecked_divide_int__1 = (function (x){
return unchecked_divide_int.cljs$core$IFn$_invoke$arity$2((1),x);
});
var unchecked_divide_int__2 = (function (x,y){
return (x / y);
});
var unchecked_divide_int__3 = (function() { 
var G__29341__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_divide_int,unchecked_divide_int.cljs$core$IFn$_invoke$arity$2(x,y),more);
};
var G__29341 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__29342__i = 0, G__29342__a = new Array(arguments.length -  2);
while (G__29342__i < G__29342__a.length) {G__29342__a[G__29342__i] = arguments[G__29342__i + 2]; ++G__29342__i;}
  more = new cljs.core.IndexedSeq(G__29342__a,0);
} 
return G__29341__delegate.call(this,x,y,more);};
G__29341.cljs$lang$maxFixedArity = 2;
G__29341.cljs$lang$applyTo = (function (arglist__29343){
var x = cljs.core.first(arglist__29343);
arglist__29343 = cljs.core.next(arglist__29343);
var y = cljs.core.first(arglist__29343);
var more = cljs.core.rest(arglist__29343);
return G__29341__delegate(x,y,more);
});
G__29341.cljs$core$IFn$_invoke$arity$variadic = G__29341__delegate;
return G__29341;
})()
;
unchecked_divide_int = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return unchecked_divide_int__1.call(this,x);
case 2:
return unchecked_divide_int__2.call(this,x,y);
default:
var G__29344 = null;
if (arguments.length > 2) {
var G__29345__i = 0, G__29345__a = new Array(arguments.length -  2);
while (G__29345__i < G__29345__a.length) {G__29345__a[G__29345__i] = arguments[G__29345__i + 2]; ++G__29345__i;}
G__29344 = new cljs.core.IndexedSeq(G__29345__a,0);
}
return unchecked_divide_int__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__29344);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
unchecked_divide_int.cljs$lang$maxFixedArity = 2;
unchecked_divide_int.cljs$lang$applyTo = unchecked_divide_int__3.cljs$lang$applyTo;
unchecked_divide_int.cljs$core$IFn$_invoke$arity$1 = unchecked_divide_int__1;
unchecked_divide_int.cljs$core$IFn$_invoke$arity$2 = unchecked_divide_int__2;
unchecked_divide_int.cljs$core$IFn$_invoke$arity$variadic = unchecked_divide_int__3.cljs$core$IFn$_invoke$arity$variadic;
return unchecked_divide_int;
})()
;
cljs.core.unchecked_inc = (function unchecked_inc(x){
return (x + (1));
});
cljs.core.unchecked_inc_int = (function unchecked_inc_int(x){
return (x + (1));
});
/**
* Returns the product of nums. (*) returns 1.
* @param {...*} var_args
*/
cljs.core.unchecked_multiply = (function() {
var unchecked_multiply = null;
var unchecked_multiply__0 = (function (){
return (1);
});
var unchecked_multiply__1 = (function (x){
return x;
});
var unchecked_multiply__2 = (function (x,y){
return (x * y);
});
var unchecked_multiply__3 = (function() { 
var G__29346__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_multiply,(x * y),more);
};
var G__29346 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__29347__i = 0, G__29347__a = new Array(arguments.length -  2);
while (G__29347__i < G__29347__a.length) {G__29347__a[G__29347__i] = arguments[G__29347__i + 2]; ++G__29347__i;}
  more = new cljs.core.IndexedSeq(G__29347__a,0);
} 
return G__29346__delegate.call(this,x,y,more);};
G__29346.cljs$lang$maxFixedArity = 2;
G__29346.cljs$lang$applyTo = (function (arglist__29348){
var x = cljs.core.first(arglist__29348);
arglist__29348 = cljs.core.next(arglist__29348);
var y = cljs.core.first(arglist__29348);
var more = cljs.core.rest(arglist__29348);
return G__29346__delegate(x,y,more);
});
G__29346.cljs$core$IFn$_invoke$arity$variadic = G__29346__delegate;
return G__29346;
})()
;
unchecked_multiply = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 0:
return unchecked_multiply__0.call(this);
case 1:
return unchecked_multiply__1.call(this,x);
case 2:
return unchecked_multiply__2.call(this,x,y);
default:
var G__29349 = null;
if (arguments.length > 2) {
var G__29350__i = 0, G__29350__a = new Array(arguments.length -  2);
while (G__29350__i < G__29350__a.length) {G__29350__a[G__29350__i] = arguments[G__29350__i + 2]; ++G__29350__i;}
G__29349 = new cljs.core.IndexedSeq(G__29350__a,0);
}
return unchecked_multiply__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__29349);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
unchecked_multiply.cljs$lang$maxFixedArity = 2;
unchecked_multiply.cljs$lang$applyTo = unchecked_multiply__3.cljs$lang$applyTo;
unchecked_multiply.cljs$core$IFn$_invoke$arity$0 = unchecked_multiply__0;
unchecked_multiply.cljs$core$IFn$_invoke$arity$1 = unchecked_multiply__1;
unchecked_multiply.cljs$core$IFn$_invoke$arity$2 = unchecked_multiply__2;
unchecked_multiply.cljs$core$IFn$_invoke$arity$variadic = unchecked_multiply__3.cljs$core$IFn$_invoke$arity$variadic;
return unchecked_multiply;
})()
;
/**
* Returns the product of nums. (*) returns 1.
* @param {...*} var_args
*/
cljs.core.unchecked_multiply_int = (function() {
var unchecked_multiply_int = null;
var unchecked_multiply_int__0 = (function (){
return (1);
});
var unchecked_multiply_int__1 = (function (x){
return x;
});
var unchecked_multiply_int__2 = (function (x,y){
return (x * y);
});
var unchecked_multiply_int__3 = (function() { 
var G__29351__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_multiply_int,(x * y),more);
};
var G__29351 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__29352__i = 0, G__29352__a = new Array(arguments.length -  2);
while (G__29352__i < G__29352__a.length) {G__29352__a[G__29352__i] = arguments[G__29352__i + 2]; ++G__29352__i;}
  more = new cljs.core.IndexedSeq(G__29352__a,0);
} 
return G__29351__delegate.call(this,x,y,more);};
G__29351.cljs$lang$maxFixedArity = 2;
G__29351.cljs$lang$applyTo = (function (arglist__29353){
var x = cljs.core.first(arglist__29353);
arglist__29353 = cljs.core.next(arglist__29353);
var y = cljs.core.first(arglist__29353);
var more = cljs.core.rest(arglist__29353);
return G__29351__delegate(x,y,more);
});
G__29351.cljs$core$IFn$_invoke$arity$variadic = G__29351__delegate;
return G__29351;
})()
;
unchecked_multiply_int = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 0:
return unchecked_multiply_int__0.call(this);
case 1:
return unchecked_multiply_int__1.call(this,x);
case 2:
return unchecked_multiply_int__2.call(this,x,y);
default:
var G__29354 = null;
if (arguments.length > 2) {
var G__29355__i = 0, G__29355__a = new Array(arguments.length -  2);
while (G__29355__i < G__29355__a.length) {G__29355__a[G__29355__i] = arguments[G__29355__i + 2]; ++G__29355__i;}
G__29354 = new cljs.core.IndexedSeq(G__29355__a,0);
}
return unchecked_multiply_int__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__29354);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
unchecked_multiply_int.cljs$lang$maxFixedArity = 2;
unchecked_multiply_int.cljs$lang$applyTo = unchecked_multiply_int__3.cljs$lang$applyTo;
unchecked_multiply_int.cljs$core$IFn$_invoke$arity$0 = unchecked_multiply_int__0;
unchecked_multiply_int.cljs$core$IFn$_invoke$arity$1 = unchecked_multiply_int__1;
unchecked_multiply_int.cljs$core$IFn$_invoke$arity$2 = unchecked_multiply_int__2;
unchecked_multiply_int.cljs$core$IFn$_invoke$arity$variadic = unchecked_multiply_int__3.cljs$core$IFn$_invoke$arity$variadic;
return unchecked_multiply_int;
})()
;
cljs.core.unchecked_negate = (function unchecked_negate(x){
return (- x);
});
cljs.core.unchecked_negate_int = (function unchecked_negate_int(x){
return (- x);
});
cljs.core.unchecked_remainder_int = (function unchecked_remainder_int(x,n){
var G__29358 = x;
var G__29359 = n;
return (cljs.core.mod.cljs$core$IFn$_invoke$arity$2 ? cljs.core.mod.cljs$core$IFn$_invoke$arity$2(G__29358,G__29359) : cljs.core.mod.call(null,G__29358,G__29359));
});
/**
* If no ys are supplied, returns the negation of x, else subtracts
* the ys from x and returns the result.
* @param {...*} var_args
*/
cljs.core.unchecked_subtract = (function() {
var unchecked_subtract = null;
var unchecked_subtract__1 = (function (x){
return (- x);
});
var unchecked_subtract__2 = (function (x,y){
return (x - y);
});
var unchecked_subtract__3 = (function() { 
var G__29360__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_subtract,(x - y),more);
};
var G__29360 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__29361__i = 0, G__29361__a = new Array(arguments.length -  2);
while (G__29361__i < G__29361__a.length) {G__29361__a[G__29361__i] = arguments[G__29361__i + 2]; ++G__29361__i;}
  more = new cljs.core.IndexedSeq(G__29361__a,0);
} 
return G__29360__delegate.call(this,x,y,more);};
G__29360.cljs$lang$maxFixedArity = 2;
G__29360.cljs$lang$applyTo = (function (arglist__29362){
var x = cljs.core.first(arglist__29362);
arglist__29362 = cljs.core.next(arglist__29362);
var y = cljs.core.first(arglist__29362);
var more = cljs.core.rest(arglist__29362);
return G__29360__delegate(x,y,more);
});
G__29360.cljs$core$IFn$_invoke$arity$variadic = G__29360__delegate;
return G__29360;
})()
;
unchecked_subtract = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return unchecked_subtract__1.call(this,x);
case 2:
return unchecked_subtract__2.call(this,x,y);
default:
var G__29363 = null;
if (arguments.length > 2) {
var G__29364__i = 0, G__29364__a = new Array(arguments.length -  2);
while (G__29364__i < G__29364__a.length) {G__29364__a[G__29364__i] = arguments[G__29364__i + 2]; ++G__29364__i;}
G__29363 = new cljs.core.IndexedSeq(G__29364__a,0);
}
return unchecked_subtract__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__29363);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
unchecked_subtract.cljs$lang$maxFixedArity = 2;
unchecked_subtract.cljs$lang$applyTo = unchecked_subtract__3.cljs$lang$applyTo;
unchecked_subtract.cljs$core$IFn$_invoke$arity$1 = unchecked_subtract__1;
unchecked_subtract.cljs$core$IFn$_invoke$arity$2 = unchecked_subtract__2;
unchecked_subtract.cljs$core$IFn$_invoke$arity$variadic = unchecked_subtract__3.cljs$core$IFn$_invoke$arity$variadic;
return unchecked_subtract;
})()
;
/**
* If no ys are supplied, returns the negation of x, else subtracts
* the ys from x and returns the result.
* @param {...*} var_args
*/
cljs.core.unchecked_subtract_int = (function() {
var unchecked_subtract_int = null;
var unchecked_subtract_int__1 = (function (x){
return (- x);
});
var unchecked_subtract_int__2 = (function (x,y){
return (x - y);
});
var unchecked_subtract_int__3 = (function() { 
var G__29365__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_subtract_int,(x - y),more);
};
var G__29365 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__29366__i = 0, G__29366__a = new Array(arguments.length -  2);
while (G__29366__i < G__29366__a.length) {G__29366__a[G__29366__i] = arguments[G__29366__i + 2]; ++G__29366__i;}
  more = new cljs.core.IndexedSeq(G__29366__a,0);
} 
return G__29365__delegate.call(this,x,y,more);};
G__29365.cljs$lang$maxFixedArity = 2;
G__29365.cljs$lang$applyTo = (function (arglist__29367){
var x = cljs.core.first(arglist__29367);
arglist__29367 = cljs.core.next(arglist__29367);
var y = cljs.core.first(arglist__29367);
var more = cljs.core.rest(arglist__29367);
return G__29365__delegate(x,y,more);
});
G__29365.cljs$core$IFn$_invoke$arity$variadic = G__29365__delegate;
return G__29365;
})()
;
unchecked_subtract_int = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return unchecked_subtract_int__1.call(this,x);
case 2:
return unchecked_subtract_int__2.call(this,x,y);
default:
var G__29368 = null;
if (arguments.length > 2) {
var G__29369__i = 0, G__29369__a = new Array(arguments.length -  2);
while (G__29369__i < G__29369__a.length) {G__29369__a[G__29369__i] = arguments[G__29369__i + 2]; ++G__29369__i;}
G__29368 = new cljs.core.IndexedSeq(G__29369__a,0);
}
return unchecked_subtract_int__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__29368);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
unchecked_subtract_int.cljs$lang$maxFixedArity = 2;
unchecked_subtract_int.cljs$lang$applyTo = unchecked_subtract_int__3.cljs$lang$applyTo;
unchecked_subtract_int.cljs$core$IFn$_invoke$arity$1 = unchecked_subtract_int__1;
unchecked_subtract_int.cljs$core$IFn$_invoke$arity$2 = unchecked_subtract_int__2;
unchecked_subtract_int.cljs$core$IFn$_invoke$arity$variadic = unchecked_subtract_int__3.cljs$core$IFn$_invoke$arity$variadic;
return unchecked_subtract_int;
})()
;
cljs.core.fix = (function fix(q){
if((q >= (0))){
var G__29372 = q;
return (Math.floor.cljs$core$IFn$_invoke$arity$1 ? Math.floor.cljs$core$IFn$_invoke$arity$1(G__29372) : Math.floor.call(null,G__29372));
} else {
var G__29373 = q;
return (Math.ceil.cljs$core$IFn$_invoke$arity$1 ? Math.ceil.cljs$core$IFn$_invoke$arity$1(G__29373) : Math.ceil.call(null,G__29373));
}
});
/**
* Coerce to int by stripping decimal places.
*/
cljs.core.int$ = (function int$(x){
return (x | (0));
});
/**
* Coerce to int by stripping decimal places.
*/
cljs.core.unchecked_int = (function unchecked_int(x){
return cljs.core.fix(x);
});
/**
* Coerce to long by stripping decimal places. Identical to `int'.
*/
cljs.core.long$ = (function long$(x){
return cljs.core.fix(x);
});
/**
* Coerce to long by stripping decimal places. Identical to `int'.
*/
cljs.core.unchecked_long = (function unchecked_long(x){
return cljs.core.fix(x);
});
cljs.core.booleans = (function booleans(x){
return x;
});
cljs.core.bytes = (function bytes(x){
return x;
});
cljs.core.chars = (function chars(x){
return x;
});
cljs.core.shorts = (function shorts(x){
return x;
});
cljs.core.ints = (function ints(x){
return x;
});
cljs.core.floats = (function floats(x){
return x;
});
cljs.core.doubles = (function doubles(x){
return x;
});
cljs.core.longs = (function longs(x){
return x;
});
/**
* Modulus of num and div with original javascript behavior. i.e. bug for negative numbers
*/
cljs.core.js_mod = (function js_mod(n,d){
return (n % d);
});
/**
* Modulus of num and div. Truncates toward negative infinity.
*/
cljs.core.mod = (function mod(n,d){
return (((n % d) + d) % d);
});
/**
* quot[ient] of dividing numerator by denominator.
*/
cljs.core.quot = (function quot(n,d){
var rem = (n % d);
return cljs.core.fix(((n - rem) / d));
});
/**
* remainder of dividing numerator by denominator.
*/
cljs.core.rem = (function rem(n,d){
var q = cljs.core.quot(n,d);
return (n - (d * q));
});
/**
* Bitwise exclusive or
*/
cljs.core.bit_xor = (function bit_xor(x,y){
return (x ^ y);
});
/**
* Bitwise and
*/
cljs.core.bit_and = (function bit_and(x,y){
return (x & y);
});
/**
* Bitwise or
*/
cljs.core.bit_or = (function bit_or(x,y){
return (x | y);
});
/**
* Bitwise and
*/
cljs.core.bit_and_not = (function bit_and_not(x,y){
return (x & ~y);
});
/**
* Clear bit at index n
*/
cljs.core.bit_clear = (function bit_clear(x,n){
return (x & ~(1 << n));
});
/**
* Flip bit at index n
*/
cljs.core.bit_flip = (function bit_flip(x,n){
return (x ^ (1 << n));
});
/**
* Bitwise complement
*/
cljs.core.bit_not = (function bit_not(x){
return (~ x);
});
/**
* Set bit at index n
*/
cljs.core.bit_set = (function bit_set(x,n){
return (x | (1 << n));
});
/**
* Test bit at index n
*/
cljs.core.bit_test = (function bit_test(x,n){
return ((x & (1 << n)) != 0);
});
/**
* Bitwise shift left
*/
cljs.core.bit_shift_left = (function bit_shift_left(x,n){
return (x << n);
});
/**
* Bitwise shift right
*/
cljs.core.bit_shift_right = (function bit_shift_right(x,n){
return (x >> n);
});
/**
* DEPRECATED: Bitwise shift right with zero fill
*/
cljs.core.bit_shift_right_zero_fill = (function bit_shift_right_zero_fill(x,n){
return (x >>> n);
});
/**
* Bitwise shift right with zero fill
*/
cljs.core.unsigned_bit_shift_right = (function unsigned_bit_shift_right(x,n){
return (x >>> n);
});
/**
* Counts the number of bits set in n
*/
cljs.core.bit_count = (function bit_count(v){
var v__$1 = (v - ((v >> (1)) & (1431655765)));
var v__$2 = ((v__$1 & (858993459)) + ((v__$1 >> (2)) & (858993459)));
return ((((v__$2 + (v__$2 >> (4))) & (252645135)) * (16843009)) >> (24));
});
/**
* Returns non-nil if nums all have the equivalent
* value, otherwise false. Behavior on non nums is
* undefined.
* @param {...*} var_args
*/
cljs.core._EQ__EQ_ = (function() {
var _EQ__EQ_ = null;
var _EQ__EQ___1 = (function (x){
return true;
});
var _EQ__EQ___2 = (function (x,y){
return cljs.core._equiv(x,y);
});
var _EQ__EQ___3 = (function() { 
var G__29378__delegate = function (x,y,more){
while(true){
if(_EQ__EQ_.cljs$core$IFn$_invoke$arity$2(x,y)){
if(cljs.core.next(more)){
var G__29379 = y;
var G__29380 = cljs.core.first(more);
var G__29381 = cljs.core.next(more);
x = G__29379;
y = G__29380;
more = G__29381;
continue;
} else {
return _EQ__EQ_.cljs$core$IFn$_invoke$arity$2(y,cljs.core.first(more));
}
} else {
return false;
}
break;
}
};
var G__29378 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__29382__i = 0, G__29382__a = new Array(arguments.length -  2);
while (G__29382__i < G__29382__a.length) {G__29382__a[G__29382__i] = arguments[G__29382__i + 2]; ++G__29382__i;}
  more = new cljs.core.IndexedSeq(G__29382__a,0);
} 
return G__29378__delegate.call(this,x,y,more);};
G__29378.cljs$lang$maxFixedArity = 2;
G__29378.cljs$lang$applyTo = (function (arglist__29383){
var x = cljs.core.first(arglist__29383);
arglist__29383 = cljs.core.next(arglist__29383);
var y = cljs.core.first(arglist__29383);
var more = cljs.core.rest(arglist__29383);
return G__29378__delegate(x,y,more);
});
G__29378.cljs$core$IFn$_invoke$arity$variadic = G__29378__delegate;
return G__29378;
})()
;
_EQ__EQ_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return _EQ__EQ___1.call(this,x);
case 2:
return _EQ__EQ___2.call(this,x,y);
default:
var G__29384 = null;
if (arguments.length > 2) {
var G__29385__i = 0, G__29385__a = new Array(arguments.length -  2);
while (G__29385__i < G__29385__a.length) {G__29385__a[G__29385__i] = arguments[G__29385__i + 2]; ++G__29385__i;}
G__29384 = new cljs.core.IndexedSeq(G__29385__a,0);
}
return _EQ__EQ___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__29384);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_EQ__EQ_.cljs$lang$maxFixedArity = 2;
_EQ__EQ_.cljs$lang$applyTo = _EQ__EQ___3.cljs$lang$applyTo;
_EQ__EQ_.cljs$core$IFn$_invoke$arity$1 = _EQ__EQ___1;
_EQ__EQ_.cljs$core$IFn$_invoke$arity$2 = _EQ__EQ___2;
_EQ__EQ_.cljs$core$IFn$_invoke$arity$variadic = _EQ__EQ___3.cljs$core$IFn$_invoke$arity$variadic;
return _EQ__EQ_;
})()
;
/**
* Returns true if num is greater than zero, else false
*/
cljs.core.pos_QMARK_ = (function pos_QMARK_(n){
return (n > (0));
});
cljs.core.zero_QMARK_ = (function zero_QMARK_(n){
return (n === (0));
});
/**
* Returns true if num is less than zero, else false
*/
cljs.core.neg_QMARK_ = (function neg_QMARK_(x){
return (x < (0));
});
/**
* Returns the nth next of coll, (seq coll) when n is 0.
*/
cljs.core.nthnext = (function nthnext(coll,n){
var n__$1 = n;
var xs = cljs.core.seq(coll);
while(true){
if((xs) && ((n__$1 > (0)))){
var G__29386 = (n__$1 - (1));
var G__29387 = cljs.core.next(xs);
n__$1 = G__29386;
xs = G__29387;
continue;
} else {
return xs;
}
break;
}
});
/**
* With no args, returns the empty string. With one arg x, returns
* x.toString().  (str nil) returns the empty string. With more than
* one arg, returns the concatenation of the str values of the args.
* @param {...*} var_args
*/
cljs.core.str = (function() {
var str = null;
var str__0 = (function (){
return "";
});
var str__1 = (function (x){
if((x == null)){
return "";
} else {
var G__29391 = x;
return goog.string.buildString(G__29391);
}
});
var str__2 = (function() { 
var G__29392__delegate = function (x,ys){
var sb = (new goog.string.StringBuffer(str.cljs$core$IFn$_invoke$arity$1(x)));
var more = ys;
while(true){
if(cljs.core.truth_(more)){
var G__29393 = sb.append(str.cljs$core$IFn$_invoke$arity$1(cljs.core.first(more)));
var G__29394 = cljs.core.next(more);
sb = G__29393;
more = G__29394;
continue;
} else {
return sb.toString();
}
break;
}
};
var G__29392 = function (x,var_args){
var ys = null;
if (arguments.length > 1) {
var G__29395__i = 0, G__29395__a = new Array(arguments.length -  1);
while (G__29395__i < G__29395__a.length) {G__29395__a[G__29395__i] = arguments[G__29395__i + 1]; ++G__29395__i;}
  ys = new cljs.core.IndexedSeq(G__29395__a,0);
} 
return G__29392__delegate.call(this,x,ys);};
G__29392.cljs$lang$maxFixedArity = 1;
G__29392.cljs$lang$applyTo = (function (arglist__29396){
var x = cljs.core.first(arglist__29396);
var ys = cljs.core.rest(arglist__29396);
return G__29392__delegate(x,ys);
});
G__29392.cljs$core$IFn$_invoke$arity$variadic = G__29392__delegate;
return G__29392;
})()
;
str = function(x,var_args){
var ys = var_args;
switch(arguments.length){
case 0:
return str__0.call(this);
case 1:
return str__1.call(this,x);
default:
var G__29397 = null;
if (arguments.length > 1) {
var G__29398__i = 0, G__29398__a = new Array(arguments.length -  1);
while (G__29398__i < G__29398__a.length) {G__29398__a[G__29398__i] = arguments[G__29398__i + 1]; ++G__29398__i;}
G__29397 = new cljs.core.IndexedSeq(G__29398__a,0);
}
return str__2.cljs$core$IFn$_invoke$arity$variadic(x, G__29397);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
str.cljs$lang$maxFixedArity = 1;
str.cljs$lang$applyTo = str__2.cljs$lang$applyTo;
str.cljs$core$IFn$_invoke$arity$0 = str__0;
str.cljs$core$IFn$_invoke$arity$1 = str__1;
str.cljs$core$IFn$_invoke$arity$variadic = str__2.cljs$core$IFn$_invoke$arity$variadic;
return str;
})()
;
/**
* Returns the substring of s beginning at start inclusive, and ending
* at end (defaults to length of string), exclusive.
*/
cljs.core.subs = (function() {
var subs = null;
var subs__2 = (function (s,start){
return s.substring(start);
});
var subs__3 = (function (s,start,end){
return s.substring(start,end);
});
subs = function(s,start,end){
switch(arguments.length){
case 2:
return subs__2.call(this,s,start);
case 3:
return subs__3.call(this,s,start,end);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
subs.cljs$core$IFn$_invoke$arity$2 = subs__2;
subs.cljs$core$IFn$_invoke$arity$3 = subs__3;
return subs;
})()
;

/**
* Assumes x is sequential. Returns true if x equals y, otherwise
* returns false.
*/
cljs.core.equiv_sequential = (function equiv_sequential(x,y){
return cljs.core.boolean$(((cljs.core.sequential_QMARK_(y))?(((cljs.core.counted_QMARK_(x)) && (cljs.core.counted_QMARK_(y)) && (!((cljs.core.count(x) === cljs.core.count(y)))))?false:(function (){var xs = cljs.core.seq(x);
var ys = cljs.core.seq(y);
while(true){
if((xs == null)){
return (ys == null);
} else {
if((ys == null)){
return false;
} else {
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.first(xs),cljs.core.first(ys))){
var G__29399 = cljs.core.next(xs);
var G__29400 = cljs.core.next(ys);
xs = G__29399;
ys = G__29400;
continue;
} else {
return false;

}
}
}
break;
}
})()):null));
});
cljs.core.hash_coll = (function hash_coll(coll){
if(cljs.core.seq(coll)){
var res = cljs.core.hash(cljs.core.first(coll));
var s = cljs.core.next(coll);
while(true){
if((s == null)){
return res;
} else {
var G__29401 = cljs.core.hash_combine(res,cljs.core.hash(cljs.core.first(s)));
var G__29402 = cljs.core.next(s);
res = G__29401;
s = G__29402;
continue;
}
break;
}
} else {
return (0);
}
});

cljs.core.hash_imap = (function hash_imap(m){
var h = (0);
var s = cljs.core.seq(m);
while(true){
if(s){
var e = cljs.core.first(s);
var G__29407 = ((h + (cljs.core.hash((function (){var G__29405 = e;
return (cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__29405) : cljs.core.key.call(null,G__29405));
})()) ^ cljs.core.hash((function (){var G__29406 = e;
return (cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(G__29406) : cljs.core.val.call(null,G__29406));
})()))) % (4503599627370496));
var G__29408 = cljs.core.next(s);
h = G__29407;
s = G__29408;
continue;
} else {
return h;
}
break;
}
});
cljs.core.hash_iset = (function hash_iset(s){
var h = (0);
var s__$1 = cljs.core.seq(s);
while(true){
if(s__$1){
var e = cljs.core.first(s__$1);
var G__29409 = ((h + cljs.core.hash(e)) % (4503599627370496));
var G__29410 = cljs.core.next(s__$1);
h = G__29409;
s__$1 = G__29410;
continue;
} else {
return h;
}
break;
}
});


/**
* Takes a JavaScript object and a map of names to functions and
* attaches said functions as methods on the object.  Any references to
* JavaScript's implicit this (via the this-as macro) will resolve to the
* object that the function is attached.
*/
cljs.core.extend_object_BANG_ = (function extend_object_BANG_(obj,fn_map){
var seq__29421_29431 = cljs.core.seq(fn_map);
var chunk__29422_29432 = null;
var count__29423_29433 = (0);
var i__29424_29434 = (0);
while(true){
if((i__29424_29434 < count__29423_29433)){
var vec__29425_29435 = chunk__29422_29432.cljs$core$IIndexed$_nth$arity$2(null,i__29424_29434);
var key_name_29436 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__29425_29435,(0),null);
var f_29437 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__29425_29435,(1),null);
var str_name_29438 = (function (){var G__29426 = key_name_29436;
return (cljs.core.name.cljs$core$IFn$_invoke$arity$1 ? cljs.core.name.cljs$core$IFn$_invoke$arity$1(G__29426) : cljs.core.name.call(null,G__29426));
})();
(obj[str_name_29438] = f_29437);

var G__29439 = seq__29421_29431;
var G__29440 = chunk__29422_29432;
var G__29441 = count__29423_29433;
var G__29442 = (i__29424_29434 + (1));
seq__29421_29431 = G__29439;
chunk__29422_29432 = G__29440;
count__29423_29433 = G__29441;
i__29424_29434 = G__29442;
continue;
} else {
var temp__4126__auto___29443 = cljs.core.seq(seq__29421_29431);
if(temp__4126__auto___29443){
var seq__29421_29444__$1 = temp__4126__auto___29443;
if(cljs.core.chunked_seq_QMARK_(seq__29421_29444__$1)){
var c__25061__auto___29445 = (function (){var G__29427 = seq__29421_29444__$1;
return (cljs.core.chunk_first.cljs$core$IFn$_invoke$arity$1 ? cljs.core.chunk_first.cljs$core$IFn$_invoke$arity$1(G__29427) : cljs.core.chunk_first.call(null,G__29427));
})();
var G__29446 = (function (){var G__29428 = seq__29421_29444__$1;
return (cljs.core.chunk_rest.cljs$core$IFn$_invoke$arity$1 ? cljs.core.chunk_rest.cljs$core$IFn$_invoke$arity$1(G__29428) : cljs.core.chunk_rest.call(null,G__29428));
})();
var G__29447 = c__25061__auto___29445;
var G__29448 = cljs.core.count(c__25061__auto___29445);
var G__29449 = (0);
seq__29421_29431 = G__29446;
chunk__29422_29432 = G__29447;
count__29423_29433 = G__29448;
i__29424_29434 = G__29449;
continue;
} else {
var vec__29429_29450 = cljs.core.first(seq__29421_29444__$1);
var key_name_29451 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__29429_29450,(0),null);
var f_29452 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__29429_29450,(1),null);
var str_name_29453 = (function (){var G__29430 = key_name_29451;
return (cljs.core.name.cljs$core$IFn$_invoke$arity$1 ? cljs.core.name.cljs$core$IFn$_invoke$arity$1(G__29430) : cljs.core.name.call(null,G__29430));
})();
(obj[str_name_29453] = f_29452);

var G__29454 = cljs.core.next(seq__29421_29444__$1);
var G__29455 = null;
var G__29456 = (0);
var G__29457 = (0);
seq__29421_29431 = G__29454;
chunk__29422_29432 = G__29455;
count__29423_29433 = G__29456;
i__29424_29434 = G__29457;
continue;
}
} else {
}
}
break;
}

return obj;
});

/**
* @constructor
*/
cljs.core.List = (function (meta,first,rest,count,__hash){
this.meta = meta;
this.first = first;
this.rest = rest;
this.count = count;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 65937646;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.List.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.List.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.List.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.List.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.List(self__.meta,self__.first,self__.rest,self__.count,self__.__hash));
});

cljs.core.List.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.count === (1))){
return null;
} else {
return self__.rest;
}
});

cljs.core.List.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.count;
});

cljs.core.List.prototype.cljs$core$IStack$_peek$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.first;
});

cljs.core.List.prototype.cljs$core$IStack$_pop$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._rest(coll__$1);
});

cljs.core.List.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__24695__auto__ = self__.__hash;
if(!((h__24695__auto__ == null))){
return h__24695__auto__;
} else {
var h__24695__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__24695__auto____$1;

return h__24695__auto____$1;
}
});

cljs.core.List.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.List.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.List.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.List.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.List.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.first;
});

cljs.core.List.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.count === (1))){
return cljs.core.List.EMPTY;
} else {
return self__.rest;
}
});

cljs.core.List.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.List.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.List(meta__$1,self__.first,self__.rest,self__.count,self__.__hash));
});

cljs.core.List.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.List(self__.meta,o,coll__$1,(self__.count + (1)),null));
});

cljs.core.List.cljs$lang$type = true;

cljs.core.List.cljs$lang$ctorStr = "cljs.core/List";

cljs.core.List.cljs$lang$ctorPrWriter = (function (this__24861__auto__,writer__24862__auto__,opt__24863__auto__){
return cljs.core._write(writer__24862__auto__,"cljs.core/List");
});

cljs.core.__GT_List = (function __GT_List(meta,first,rest,count,__hash){
return (new cljs.core.List(meta,first,rest,count,__hash));
});

(cljs.core.List.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__25252__auto__ = this;
return cljs.core.es6_iterator(this__25252__auto__);
}));

/**
* @constructor
*/
cljs.core.EmptyList = (function (meta){
this.meta = meta;
this.cljs$lang$protocol_mask$partition0$ = 65937614;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.EmptyList.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.EmptyList.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.EmptyList.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.EmptyList.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.EmptyList(self__.meta));
});

cljs.core.EmptyList.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return null;
});

cljs.core.EmptyList.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (0);
});

cljs.core.EmptyList.prototype.cljs$core$IStack$_peek$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return null;
});

cljs.core.EmptyList.prototype.cljs$core$IStack$_pop$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
throw (new Error("Can't pop empty list"));
});

cljs.core.EmptyList.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (0);
});

cljs.core.EmptyList.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.EmptyList.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.EmptyList.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.EmptyList.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.EmptyList.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return null;
});

cljs.core.EmptyList.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.List.EMPTY;
});

cljs.core.EmptyList.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return null;
});

cljs.core.EmptyList.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.EmptyList(meta__$1));
});

cljs.core.EmptyList.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.List(self__.meta,o,null,(1),null));
});

cljs.core.EmptyList.cljs$lang$type = true;

cljs.core.EmptyList.cljs$lang$ctorStr = "cljs.core/EmptyList";

cljs.core.EmptyList.cljs$lang$ctorPrWriter = (function (this__24861__auto__,writer__24862__auto__,opt__24863__auto__){
return cljs.core._write(writer__24862__auto__,"cljs.core/EmptyList");
});

cljs.core.__GT_EmptyList = (function __GT_EmptyList(meta){
return (new cljs.core.EmptyList(meta));
});

cljs.core.List.EMPTY = (new cljs.core.EmptyList(null));
(cljs.core.EmptyList.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__25252__auto__ = this;
return cljs.core.es6_iterator(this__25252__auto__);
}));
cljs.core.reversible_QMARK_ = (function reversible_QMARK_(coll){
var G__29459 = coll;
if(G__29459){
var bit__24955__auto__ = (G__29459.cljs$lang$protocol_mask$partition0$ & (134217728));
if((bit__24955__auto__) || (G__29459.cljs$core$IReversible$)){
return true;
} else {
if((!G__29459.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IReversible,G__29459);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IReversible,G__29459);
}
});
cljs.core.rseq = (function rseq(coll){
return cljs.core._rseq(coll);
});
/**
* Returns a seq of the items in coll in reverse order. Not lazy.
*/
cljs.core.reverse = (function reverse(coll){
if(cljs.core.reversible_QMARK_(coll)){
return cljs.core.rseq(coll);
} else {
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.conj,cljs.core.List.EMPTY,coll);
}
});
/**
* @param {...*} var_args
*/
cljs.core.list = (function() { 
var list__delegate = function (xs){
var arr = ((((xs instanceof cljs.core.IndexedSeq)) && ((xs.i === (0))))?xs.arr:(function (){var arr = [];
var xs__$1 = xs;
while(true){
if(!((xs__$1 == null))){
arr.push(xs__$1.cljs$core$ISeq$_first$arity$1(null));

var G__29460 = xs__$1.cljs$core$INext$_next$arity$1(null);
xs__$1 = G__29460;
continue;
} else {
return arr;
}
break;
}
})());
var i = arr.length;
var r = cljs.core.List.EMPTY;
while(true){
if((i > (0))){
var G__29461 = (i - (1));
var G__29462 = r.cljs$core$ICollection$_conj$arity$2(null,(arr[(i - (1))]));
i = G__29461;
r = G__29462;
continue;
} else {
return r;
}
break;
}
};
var list = function (var_args){
var xs = null;
if (arguments.length > 0) {
var G__29463__i = 0, G__29463__a = new Array(arguments.length -  0);
while (G__29463__i < G__29463__a.length) {G__29463__a[G__29463__i] = arguments[G__29463__i + 0]; ++G__29463__i;}
  xs = new cljs.core.IndexedSeq(G__29463__a,0);
} 
return list__delegate.call(this,xs);};
list.cljs$lang$maxFixedArity = 0;
list.cljs$lang$applyTo = (function (arglist__29464){
var xs = cljs.core.seq(arglist__29464);
return list__delegate(xs);
});
list.cljs$core$IFn$_invoke$arity$variadic = list__delegate;
return list;
})()
;

/**
* @constructor
*/
cljs.core.Cons = (function (meta,first,rest,__hash){
this.meta = meta;
this.first = first;
this.rest = rest;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 65929452;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.Cons.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.Cons.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.Cons.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.Cons.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.Cons(self__.meta,self__.first,self__.rest,self__.__hash));
});

cljs.core.Cons.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.rest == null)){
return null;
} else {
return cljs.core.seq(self__.rest);
}
});

cljs.core.Cons.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__24695__auto__ = self__.__hash;
if(!((h__24695__auto__ == null))){
return h__24695__auto__;
} else {
var h__24695__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__24695__auto____$1;

return h__24695__auto____$1;
}
});

cljs.core.Cons.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.Cons.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.Cons.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.Cons.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.Cons.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.first;
});

cljs.core.Cons.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.rest == null)){
return cljs.core.List.EMPTY;
} else {
return self__.rest;
}
});

cljs.core.Cons.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.Cons.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.Cons(meta__$1,self__.first,self__.rest,self__.__hash));
});

cljs.core.Cons.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.Cons(null,o,coll__$1,self__.__hash));
});

cljs.core.Cons.cljs$lang$type = true;

cljs.core.Cons.cljs$lang$ctorStr = "cljs.core/Cons";

cljs.core.Cons.cljs$lang$ctorPrWriter = (function (this__24861__auto__,writer__24862__auto__,opt__24863__auto__){
return cljs.core._write(writer__24862__auto__,"cljs.core/Cons");
});

cljs.core.__GT_Cons = (function __GT_Cons(meta,first,rest,__hash){
return (new cljs.core.Cons(meta,first,rest,__hash));
});

(cljs.core.Cons.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__25252__auto__ = this;
return cljs.core.es6_iterator(this__25252__auto__);
}));
/**
* Returns a new seq where x is the first element and seq is the rest.
*/
cljs.core.cons = (function cons(x,coll){
if((function (){var or__24274__auto__ = (coll == null);
if(or__24274__auto__){
return or__24274__auto__;
} else {
var G__29468 = coll;
if(G__29468){
var bit__24948__auto__ = (G__29468.cljs$lang$protocol_mask$partition0$ & (64));
if((bit__24948__auto__) || (G__29468.cljs$core$ISeq$)){
return true;
} else {
return false;
}
} else {
return false;
}
}
})()){
return (new cljs.core.Cons(null,x,coll,null));
} else {
return (new cljs.core.Cons(null,x,cljs.core.seq(coll),null));
}
});
cljs.core.list_QMARK_ = (function list_QMARK_(x){
var G__29470 = x;
if(G__29470){
var bit__24955__auto__ = (G__29470.cljs$lang$protocol_mask$partition0$ & (33554432));
if((bit__24955__auto__) || (G__29470.cljs$core$IList$)){
return true;
} else {
if((!G__29470.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IList,G__29470);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IList,G__29470);
}
});
cljs.core.hash_keyword = (function hash_keyword(k){
return ((cljs.core.hash_symbol(k) + (2654435769)) | (0));
});
cljs.core.compare_keywords = (function compare_keywords(a,b){
if((a.fqn === b.fqn)){
return (0);
} else {
if(cljs.core.truth_((function (){var and__24262__auto__ = cljs.core.not(a.ns);
if(and__24262__auto__){
return b.ns;
} else {
return and__24262__auto__;
}
})())){
return (-1);
} else {
if(cljs.core.truth_(a.ns)){
if(cljs.core.not(b.ns)){
return (1);
} else {
var nsc = (function (){var G__29477 = a.ns;
var G__29478 = b.ns;
return goog.array.defaultCompare(G__29477,G__29478);
})();
if(((0) === nsc)){
var G__29479 = a.name;
var G__29480 = b.name;
return goog.array.defaultCompare(G__29479,G__29480);
} else {
return nsc;
}
}
} else {
var G__29481 = a.name;
var G__29482 = b.name;
return goog.array.defaultCompare(G__29481,G__29482);

}
}
}
});

/**
* @constructor
*/
cljs.core.Keyword = (function (ns,name,fqn,_hash){
this.ns = ns;
this.name = name;
this.fqn = fqn;
this._hash = _hash;
this.cljs$lang$protocol_mask$partition0$ = 2153775105;
this.cljs$lang$protocol_mask$partition1$ = 4096;
})
cljs.core.Keyword.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (o,writer,_){
var self__ = this;
var o__$1 = this;
return cljs.core._write(writer,[cljs.core.str(":"),cljs.core.str(self__.fqn)].join(''));
});

cljs.core.Keyword.prototype.cljs$core$INamed$_name$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.name;
});

cljs.core.Keyword.prototype.cljs$core$INamed$_namespace$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.ns;
});

cljs.core.Keyword.prototype.cljs$core$IHash$_hash$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
var h__24695__auto__ = self__._hash;
if(!((h__24695__auto__ == null))){
return h__24695__auto__;
} else {
var h__24695__auto____$1 = cljs.core.hash_keyword(this$__$1);
self__._hash = h__24695__auto____$1;

return h__24695__auto____$1;
}
});

cljs.core.Keyword.prototype.call = (function() {
var G__29484 = null;
var G__29484__2 = (function (self__,coll){
var self__ = this;
var self____$1 = this;
var kw = self____$1;
return cljs.core.get.cljs$core$IFn$_invoke$arity$2(coll,kw);
});
var G__29484__3 = (function (self__,coll,not_found){
var self__ = this;
var self____$1 = this;
var kw = self____$1;
return cljs.core.get.cljs$core$IFn$_invoke$arity$3(coll,kw,not_found);
});
G__29484 = function(self__,coll,not_found){
switch(arguments.length){
case 2:
return G__29484__2.call(this,self__,coll);
case 3:
return G__29484__3.call(this,self__,coll,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__29484.cljs$core$IFn$_invoke$arity$2 = G__29484__2;
G__29484.cljs$core$IFn$_invoke$arity$3 = G__29484__3;
return G__29484;
})()
;

cljs.core.Keyword.prototype.apply = (function (self__,args29483){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args29483)));
});

cljs.core.Keyword.prototype.cljs$core$IFn$_invoke$arity$1 = (function (coll){
var self__ = this;
var kw = this;
return cljs.core.get.cljs$core$IFn$_invoke$arity$2(coll,kw);
});

cljs.core.Keyword.prototype.cljs$core$IFn$_invoke$arity$2 = (function (coll,not_found){
var self__ = this;
var kw = this;
return cljs.core.get.cljs$core$IFn$_invoke$arity$3(coll,kw,not_found);
});

cljs.core.Keyword.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (_,other){
var self__ = this;
var ___$1 = this;
if((other instanceof cljs.core.Keyword)){
return (self__.fqn === other.fqn);
} else {
return false;
}
});

cljs.core.Keyword.prototype.toString = (function (){
var self__ = this;
var _ = this;
return [cljs.core.str(":"),cljs.core.str(self__.fqn)].join('');
});

cljs.core.Keyword.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.Keyword.cljs$lang$type = true;

cljs.core.Keyword.cljs$lang$ctorStr = "cljs.core/Keyword";

cljs.core.Keyword.cljs$lang$ctorPrWriter = (function (this__24861__auto__,writer__24862__auto__,opt__24863__auto__){
return cljs.core._write(writer__24862__auto__,"cljs.core/Keyword");
});

cljs.core.__GT_Keyword = (function __GT_Keyword(ns,name,fqn,_hash){
return (new cljs.core.Keyword(ns,name,fqn,_hash));
});

cljs.core.keyword_QMARK_ = (function keyword_QMARK_(x){
return (x instanceof cljs.core.Keyword);
});
cljs.core.keyword_identical_QMARK_ = (function keyword_identical_QMARK_(x,y){
if((x === y)){
return true;
} else {
if(((x instanceof cljs.core.Keyword)) && ((y instanceof cljs.core.Keyword))){
return (x.fqn === y.fqn);
} else {
return false;
}
}
});
/**
* Returns the namespace String of a symbol or keyword, or nil if not present.
*/
cljs.core.namespace = (function namespace(x){
if((function (){var G__29486 = x;
if(G__29486){
var bit__24948__auto__ = (G__29486.cljs$lang$protocol_mask$partition1$ & (4096));
if((bit__24948__auto__) || (G__29486.cljs$core$INamed$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return x.cljs$core$INamed$_namespace$arity$1(null);
} else {
throw (new Error([cljs.core.str("Doesn't support namespace: "),cljs.core.str(x)].join('')));
}
});
/**
* Returns a Keyword with the given namespace and name.  Do not use :
* in the keyword strings, it will be added automatically.
*/
cljs.core.keyword = (function() {
var keyword = null;
var keyword__1 = (function (name){
if((name instanceof cljs.core.Keyword)){
return name;
} else {
if((name instanceof cljs.core.Symbol)){
return (new cljs.core.Keyword(cljs.core.namespace(name),(function (){var G__29488 = name;
return (cljs.core.name.cljs$core$IFn$_invoke$arity$1 ? cljs.core.name.cljs$core$IFn$_invoke$arity$1(G__29488) : cljs.core.name.call(null,G__29488));
})(),name.str,null));
} else {
if(typeof name === 'string'){
var parts = name.split("/");
if((parts.length === (2))){
return (new cljs.core.Keyword((parts[(0)]),(parts[(1)]),name,null));
} else {
return (new cljs.core.Keyword(null,(parts[(0)]),name,null));
}
} else {
return null;
}
}
}
});
var keyword__2 = (function (ns,name){
return (new cljs.core.Keyword(ns,name,[cljs.core.str((cljs.core.truth_(ns)?[cljs.core.str(ns),cljs.core.str("/")].join(''):null)),cljs.core.str(name)].join(''),null));
});
keyword = function(ns,name){
switch(arguments.length){
case 1:
return keyword__1.call(this,ns);
case 2:
return keyword__2.call(this,ns,name);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
keyword.cljs$core$IFn$_invoke$arity$1 = keyword__1;
keyword.cljs$core$IFn$_invoke$arity$2 = keyword__2;
return keyword;
})()
;

/**
* @constructor
*/
cljs.core.LazySeq = (function (meta,fn,s,__hash){
this.meta = meta;
this.fn = fn;
this.s = s;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32374988;
})
cljs.core.LazySeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.LazySeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.LazySeq.prototype.sval = (function (){
var self__ = this;
var coll = this;
if((self__.fn == null)){
return self__.s;
} else {
self__.s = (function (){return (self__.fn.cljs$core$IFn$_invoke$arity$0 ? self__.fn.cljs$core$IFn$_invoke$arity$0() : self__.fn.call(null));
})();

self__.fn = null;

return self__.s;
}
});

cljs.core.LazySeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.LazySeq.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
cljs.core._seq(coll__$1);

if((self__.s == null)){
return null;
} else {
return cljs.core.next(self__.s);
}
});

cljs.core.LazySeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__24695__auto__ = self__.__hash;
if(!((h__24695__auto__ == null))){
return h__24695__auto__;
} else {
var h__24695__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__24695__auto____$1;

return h__24695__auto____$1;
}
});

cljs.core.LazySeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.LazySeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.LazySeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.LazySeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.LazySeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
cljs.core._seq(coll__$1);

if((self__.s == null)){
return null;
} else {
return cljs.core.first(self__.s);
}
});

cljs.core.LazySeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
cljs.core._seq(coll__$1);

if(!((self__.s == null))){
return cljs.core.rest(self__.s);
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.LazySeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
coll__$1.sval();

if((self__.s == null)){
return null;
} else {
var ls = self__.s;
while(true){
if((ls instanceof cljs.core.LazySeq)){
var G__29489 = ls.sval();
ls = G__29489;
continue;
} else {
self__.s = ls;

return cljs.core.seq(self__.s);
}
break;
}
}
});

cljs.core.LazySeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.LazySeq(meta__$1,self__.fn,self__.s,self__.__hash));
});

cljs.core.LazySeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.LazySeq.cljs$lang$type = true;

cljs.core.LazySeq.cljs$lang$ctorStr = "cljs.core/LazySeq";

cljs.core.LazySeq.cljs$lang$ctorPrWriter = (function (this__24861__auto__,writer__24862__auto__,opt__24863__auto__){
return cljs.core._write(writer__24862__auto__,"cljs.core/LazySeq");
});

cljs.core.__GT_LazySeq = (function __GT_LazySeq(meta,fn,s,__hash){
return (new cljs.core.LazySeq(meta,fn,s,__hash));
});

(cljs.core.LazySeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__25252__auto__ = this;
return cljs.core.es6_iterator(this__25252__auto__);
}));

/**
* @constructor
*/
cljs.core.ChunkBuffer = (function (buf,end){
this.buf = buf;
this.end = end;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 2;
})
cljs.core.ChunkBuffer.prototype.cljs$core$ICounted$_count$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.end;
});

cljs.core.ChunkBuffer.prototype.add = (function (o){
var self__ = this;
var _ = this;
(self__.buf[self__.end] = o);

return self__.end = (self__.end + (1));
});

cljs.core.ChunkBuffer.prototype.chunk = (function (o){
var self__ = this;
var _ = this;
var ret = (new cljs.core.ArrayChunk(self__.buf,(0),self__.end));
self__.buf = null;

return ret;
});

cljs.core.ChunkBuffer.cljs$lang$type = true;

cljs.core.ChunkBuffer.cljs$lang$ctorStr = "cljs.core/ChunkBuffer";

cljs.core.ChunkBuffer.cljs$lang$ctorPrWriter = (function (this__24861__auto__,writer__24862__auto__,opt__24863__auto__){
return cljs.core._write(writer__24862__auto__,"cljs.core/ChunkBuffer");
});

cljs.core.__GT_ChunkBuffer = (function __GT_ChunkBuffer(buf,end){
return (new cljs.core.ChunkBuffer(buf,end));
});

cljs.core.chunk_buffer = (function chunk_buffer(capacity){
return (new cljs.core.ChunkBuffer((new Array(capacity)),(0)));
});

/**
* @constructor
*/
cljs.core.ArrayChunk = (function (arr,off,end){
this.arr = arr;
this.off = off;
this.end = end;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 524306;
})
cljs.core.ArrayChunk.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4(self__.arr,f,(self__.arr[self__.off]),(self__.off + (1)));
});

cljs.core.ArrayChunk.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4(self__.arr,f,start,self__.off);
});

cljs.core.ArrayChunk.prototype.cljs$core$IChunk$ = true;

cljs.core.ArrayChunk.prototype.cljs$core$IChunk$_drop_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.off === self__.end)){
throw (new Error("-drop-first of empty chunk"));
} else {
return (new cljs.core.ArrayChunk(self__.arr,(self__.off + (1)),self__.end));
}
});

cljs.core.ArrayChunk.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (coll,i){
var self__ = this;
var coll__$1 = this;
return (self__.arr[(self__.off + i)]);
});

cljs.core.ArrayChunk.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (coll,i,not_found){
var self__ = this;
var coll__$1 = this;
if(((i >= (0))) && ((i < (self__.end - self__.off)))){
return (self__.arr[(self__.off + i)]);
} else {
return not_found;
}
});

cljs.core.ArrayChunk.prototype.cljs$core$ICounted$_count$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (self__.end - self__.off);
});

cljs.core.ArrayChunk.cljs$lang$type = true;

cljs.core.ArrayChunk.cljs$lang$ctorStr = "cljs.core/ArrayChunk";

cljs.core.ArrayChunk.cljs$lang$ctorPrWriter = (function (this__24861__auto__,writer__24862__auto__,opt__24863__auto__){
return cljs.core._write(writer__24862__auto__,"cljs.core/ArrayChunk");
});

cljs.core.__GT_ArrayChunk = (function __GT_ArrayChunk(arr,off,end){
return (new cljs.core.ArrayChunk(arr,off,end));
});

cljs.core.array_chunk = (function() {
var array_chunk = null;
var array_chunk__1 = (function (arr){
return (new cljs.core.ArrayChunk(arr,(0),arr.length));
});
var array_chunk__2 = (function (arr,off){
return (new cljs.core.ArrayChunk(arr,off,arr.length));
});
var array_chunk__3 = (function (arr,off,end){
return (new cljs.core.ArrayChunk(arr,off,end));
});
array_chunk = function(arr,off,end){
switch(arguments.length){
case 1:
return array_chunk__1.call(this,arr);
case 2:
return array_chunk__2.call(this,arr,off);
case 3:
return array_chunk__3.call(this,arr,off,end);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
array_chunk.cljs$core$IFn$_invoke$arity$1 = array_chunk__1;
array_chunk.cljs$core$IFn$_invoke$arity$2 = array_chunk__2;
array_chunk.cljs$core$IFn$_invoke$arity$3 = array_chunk__3;
return array_chunk;
})()
;

/**
* @constructor
*/
cljs.core.ChunkedCons = (function (chunk,more,meta,__hash){
this.chunk = chunk;
this.more = more;
this.meta = meta;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 31850732;
this.cljs$lang$protocol_mask$partition1$ = 1536;
})
cljs.core.ChunkedCons.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.ChunkedCons.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.ChunkedCons.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.ChunkedCons.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((cljs.core._count(self__.chunk) > (1))){
return (new cljs.core.ChunkedCons(cljs.core._drop_first(self__.chunk),self__.more,self__.meta,null));
} else {
var more__$1 = cljs.core._seq(self__.more);
if((more__$1 == null)){
return null;
} else {
return more__$1;
}
}
});

cljs.core.ChunkedCons.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__24695__auto__ = self__.__hash;
if(!((h__24695__auto__ == null))){
return h__24695__auto__;
} else {
var h__24695__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__24695__auto____$1;

return h__24695__auto____$1;
}
});

cljs.core.ChunkedCons.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.ChunkedCons.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.ChunkedCons.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.chunk,(0));
});

cljs.core.ChunkedCons.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((cljs.core._count(self__.chunk) > (1))){
return (new cljs.core.ChunkedCons(cljs.core._drop_first(self__.chunk),self__.more,self__.meta,null));
} else {
if((self__.more == null)){
return cljs.core.List.EMPTY;
} else {
return self__.more;
}
}
});

cljs.core.ChunkedCons.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.ChunkedCons.prototype.cljs$core$IChunkedSeq$_chunked_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.chunk;
});

cljs.core.ChunkedCons.prototype.cljs$core$IChunkedSeq$_chunked_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.more == null)){
return cljs.core.List.EMPTY;
} else {
return self__.more;
}
});

cljs.core.ChunkedCons.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,m){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.ChunkedCons(self__.chunk,self__.more,m,self__.__hash));
});

cljs.core.ChunkedCons.prototype.cljs$core$ICollection$_conj$arity$2 = (function (this$,o){
var self__ = this;
var this$__$1 = this;
return cljs.core.cons(o,this$__$1);
});

cljs.core.ChunkedCons.prototype.cljs$core$IChunkedNext$_chunked_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.more == null)){
return null;
} else {
return self__.more;
}
});

cljs.core.ChunkedCons.cljs$lang$type = true;

cljs.core.ChunkedCons.cljs$lang$ctorStr = "cljs.core/ChunkedCons";

cljs.core.ChunkedCons.cljs$lang$ctorPrWriter = (function (this__24861__auto__,writer__24862__auto__,opt__24863__auto__){
return cljs.core._write(writer__24862__auto__,"cljs.core/ChunkedCons");
});

cljs.core.__GT_ChunkedCons = (function __GT_ChunkedCons(chunk,more,meta,__hash){
return (new cljs.core.ChunkedCons(chunk,more,meta,__hash));
});

(cljs.core.ChunkedCons.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__25252__auto__ = this;
return cljs.core.es6_iterator(this__25252__auto__);
}));
cljs.core.chunk_cons = (function chunk_cons(chunk,rest){
if((cljs.core._count(chunk) === (0))){
return rest;
} else {
return (new cljs.core.ChunkedCons(chunk,rest,null,null));
}
});
cljs.core.chunk_append = (function chunk_append(b,x){
return b.add(x);
});
cljs.core.chunk = (function chunk(b){
return b.chunk();
});
cljs.core.chunk_first = (function chunk_first(s){
return cljs.core._chunked_first(s);
});
cljs.core.chunk_rest = (function chunk_rest(s){
return cljs.core._chunked_rest(s);
});
cljs.core.chunk_next = (function chunk_next(s){
if((function (){var G__29491 = s;
if(G__29491){
var bit__24948__auto__ = (G__29491.cljs$lang$protocol_mask$partition1$ & (1024));
if((bit__24948__auto__) || (G__29491.cljs$core$IChunkedNext$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return cljs.core._chunked_next(s);
} else {
return cljs.core.seq(cljs.core._chunked_rest(s));
}
});
/**
* Naive impl of to-array as a start.
*/
cljs.core.to_array = (function to_array(s){
var ary = [];
var s__$1 = s;
while(true){
if(cljs.core.seq(s__$1)){
ary.push(cljs.core.first(s__$1));

var G__29492 = cljs.core.next(s__$1);
s__$1 = G__29492;
continue;
} else {
return ary;
}
break;
}
});
/**
* Returns a (potentially-ragged) 2-dimensional array
* containing the contents of coll.
*/
cljs.core.to_array_2d = (function to_array_2d(coll){
var ret = (new Array(cljs.core.count(coll)));
var i_29493 = (0);
var xs_29494 = cljs.core.seq(coll);
while(true){
if(xs_29494){
(ret[i_29493] = cljs.core.to_array(cljs.core.first(xs_29494)));

var G__29495 = (i_29493 + (1));
var G__29496 = cljs.core.next(xs_29494);
i_29493 = G__29495;
xs_29494 = G__29496;
continue;
} else {
}
break;
}

return ret;
});
cljs.core.int_array = (function() {
var int_array = null;
var int_array__1 = (function (size_or_seq){
if(typeof size_or_seq === 'number'){
return int_array.cljs$core$IFn$_invoke$arity$2(size_or_seq,null);
} else {
return cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(size_or_seq);
}
});
var int_array__2 = (function (size,init_val_or_seq){
var a = (new Array(size));
if(cljs.core.seq_QMARK_(init_val_or_seq)){
var s = cljs.core.seq(init_val_or_seq);
var i = (0);
var s__$1 = s;
while(true){
if((s__$1) && ((i < size))){
(a[i] = cljs.core.first(s__$1));

var G__29499 = (i + (1));
var G__29500 = cljs.core.next(s__$1);
i = G__29499;
s__$1 = G__29500;
continue;
} else {
return a;
}
break;
}
} else {
var n__25161__auto___29501 = size;
var i_29502 = (0);
while(true){
if((i_29502 < n__25161__auto___29501)){
(a[i_29502] = init_val_or_seq);

var G__29503 = (i_29502 + (1));
i_29502 = G__29503;
continue;
} else {
}
break;
}

return a;
}
});
int_array = function(size,init_val_or_seq){
switch(arguments.length){
case 1:
return int_array__1.call(this,size);
case 2:
return int_array__2.call(this,size,init_val_or_seq);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
int_array.cljs$core$IFn$_invoke$arity$1 = int_array__1;
int_array.cljs$core$IFn$_invoke$arity$2 = int_array__2;
return int_array;
})()
;
cljs.core.long_array = (function() {
var long_array = null;
var long_array__1 = (function (size_or_seq){
if(typeof size_or_seq === 'number'){
return long_array.cljs$core$IFn$_invoke$arity$2(size_or_seq,null);
} else {
return cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(size_or_seq);
}
});
var long_array__2 = (function (size,init_val_or_seq){
var a = (new Array(size));
if(cljs.core.seq_QMARK_(init_val_or_seq)){
var s = cljs.core.seq(init_val_or_seq);
var i = (0);
var s__$1 = s;
while(true){
if((s__$1) && ((i < size))){
(a[i] = cljs.core.first(s__$1));

var G__29506 = (i + (1));
var G__29507 = cljs.core.next(s__$1);
i = G__29506;
s__$1 = G__29507;
continue;
} else {
return a;
}
break;
}
} else {
var n__25161__auto___29508 = size;
var i_29509 = (0);
while(true){
if((i_29509 < n__25161__auto___29508)){
(a[i_29509] = init_val_or_seq);

var G__29510 = (i_29509 + (1));
i_29509 = G__29510;
continue;
} else {
}
break;
}

return a;
}
});
long_array = function(size,init_val_or_seq){
switch(arguments.length){
case 1:
return long_array__1.call(this,size);
case 2:
return long_array__2.call(this,size,init_val_or_seq);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
long_array.cljs$core$IFn$_invoke$arity$1 = long_array__1;
long_array.cljs$core$IFn$_invoke$arity$2 = long_array__2;
return long_array;
})()
;
cljs.core.double_array = (function() {
var double_array = null;
var double_array__1 = (function (size_or_seq){
if(typeof size_or_seq === 'number'){
return double_array.cljs$core$IFn$_invoke$arity$2(size_or_seq,null);
} else {
return cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(size_or_seq);
}
});
var double_array__2 = (function (size,init_val_or_seq){
var a = (new Array(size));
if(cljs.core.seq_QMARK_(init_val_or_seq)){
var s = cljs.core.seq(init_val_or_seq);
var i = (0);
var s__$1 = s;
while(true){
if((s__$1) && ((i < size))){
(a[i] = cljs.core.first(s__$1));

var G__29513 = (i + (1));
var G__29514 = cljs.core.next(s__$1);
i = G__29513;
s__$1 = G__29514;
continue;
} else {
return a;
}
break;
}
} else {
var n__25161__auto___29515 = size;
var i_29516 = (0);
while(true){
if((i_29516 < n__25161__auto___29515)){
(a[i_29516] = init_val_or_seq);

var G__29517 = (i_29516 + (1));
i_29516 = G__29517;
continue;
} else {
}
break;
}

return a;
}
});
double_array = function(size,init_val_or_seq){
switch(arguments.length){
case 1:
return double_array__1.call(this,size);
case 2:
return double_array__2.call(this,size,init_val_or_seq);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
double_array.cljs$core$IFn$_invoke$arity$1 = double_array__1;
double_array.cljs$core$IFn$_invoke$arity$2 = double_array__2;
return double_array;
})()
;
cljs.core.object_array = (function() {
var object_array = null;
var object_array__1 = (function (size_or_seq){
if(typeof size_or_seq === 'number'){
return object_array.cljs$core$IFn$_invoke$arity$2(size_or_seq,null);
} else {
return cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(size_or_seq);
}
});
var object_array__2 = (function (size,init_val_or_seq){
var a = (new Array(size));
if(cljs.core.seq_QMARK_(init_val_or_seq)){
var s = cljs.core.seq(init_val_or_seq);
var i = (0);
var s__$1 = s;
while(true){
if((s__$1) && ((i < size))){
(a[i] = cljs.core.first(s__$1));

var G__29520 = (i + (1));
var G__29521 = cljs.core.next(s__$1);
i = G__29520;
s__$1 = G__29521;
continue;
} else {
return a;
}
break;
}
} else {
var n__25161__auto___29522 = size;
var i_29523 = (0);
while(true){
if((i_29523 < n__25161__auto___29522)){
(a[i_29523] = init_val_or_seq);

var G__29524 = (i_29523 + (1));
i_29523 = G__29524;
continue;
} else {
}
break;
}

return a;
}
});
object_array = function(size,init_val_or_seq){
switch(arguments.length){
case 1:
return object_array__1.call(this,size);
case 2:
return object_array__2.call(this,size,init_val_or_seq);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
object_array.cljs$core$IFn$_invoke$arity$1 = object_array__1;
object_array.cljs$core$IFn$_invoke$arity$2 = object_array__2;
return object_array;
})()
;
cljs.core.bounded_count = (function bounded_count(s,n){
if(cljs.core.counted_QMARK_(s)){
return cljs.core.count(s);
} else {
var s__$1 = s;
var i = n;
var sum = (0);
while(true){
if(((i > (0))) && (cljs.core.seq(s__$1))){
var G__29525 = cljs.core.next(s__$1);
var G__29526 = (i - (1));
var G__29527 = (sum + (1));
s__$1 = G__29525;
i = G__29526;
sum = G__29527;
continue;
} else {
return sum;
}
break;
}
}
});
cljs.core.spread = (function spread(arglist){
if((arglist == null)){
return null;
} else {
if((cljs.core.next(arglist) == null)){
return cljs.core.seq(cljs.core.first(arglist));
} else {
return cljs.core.cons(cljs.core.first(arglist),spread(cljs.core.next(arglist)));

}
}
});
/**
* Returns a lazy seq representing the concatenation of the elements in the supplied colls.
* @param {...*} var_args
*/
cljs.core.concat = (function() {
var concat = null;
var concat__0 = (function (){
return (new cljs.core.LazySeq(null,(function (){
return null;
}),null,null));
});
var concat__1 = (function (x){
return (new cljs.core.LazySeq(null,(function (){
return x;
}),null,null));
});
var concat__2 = (function (x,y){
return (new cljs.core.LazySeq(null,(function (){
var s = cljs.core.seq(x);
if(s){
if(cljs.core.chunked_seq_QMARK_(s)){
return cljs.core.chunk_cons(cljs.core.chunk_first(s),concat.cljs$core$IFn$_invoke$arity$2(cljs.core.chunk_rest(s),y));
} else {
return cljs.core.cons(cljs.core.first(s),concat.cljs$core$IFn$_invoke$arity$2(cljs.core.rest(s),y));
}
} else {
return y;
}
}),null,null));
});
var concat__3 = (function() { 
var G__29547__delegate = function (x,y,zs){
var cat = (function cat(xys,zs__$1){
return (new cljs.core.LazySeq(null,(function (){
var xys__$1 = cljs.core.seq(xys);
if(xys__$1){
if(cljs.core.chunked_seq_QMARK_(xys__$1)){
return cljs.core.chunk_cons(cljs.core.chunk_first(xys__$1),cat(cljs.core.chunk_rest(xys__$1),zs__$1));
} else {
return cljs.core.cons(cljs.core.first(xys__$1),cat(cljs.core.rest(xys__$1),zs__$1));
}
} else {
if(cljs.core.truth_(zs__$1)){
return cat(cljs.core.first(zs__$1),cljs.core.next(zs__$1));
} else {
return null;
}
}
}),null,null));
});
return cat(concat.cljs$core$IFn$_invoke$arity$2(x,y),zs);
};
var G__29547 = function (x,y,var_args){
var zs = null;
if (arguments.length > 2) {
var G__29548__i = 0, G__29548__a = new Array(arguments.length -  2);
while (G__29548__i < G__29548__a.length) {G__29548__a[G__29548__i] = arguments[G__29548__i + 2]; ++G__29548__i;}
  zs = new cljs.core.IndexedSeq(G__29548__a,0);
} 
return G__29547__delegate.call(this,x,y,zs);};
G__29547.cljs$lang$maxFixedArity = 2;
G__29547.cljs$lang$applyTo = (function (arglist__29549){
var x = cljs.core.first(arglist__29549);
arglist__29549 = cljs.core.next(arglist__29549);
var y = cljs.core.first(arglist__29549);
var zs = cljs.core.rest(arglist__29549);
return G__29547__delegate(x,y,zs);
});
G__29547.cljs$core$IFn$_invoke$arity$variadic = G__29547__delegate;
return G__29547;
})()
;
concat = function(x,y,var_args){
var zs = var_args;
switch(arguments.length){
case 0:
return concat__0.call(this);
case 1:
return concat__1.call(this,x);
case 2:
return concat__2.call(this,x,y);
default:
var G__29550 = null;
if (arguments.length > 2) {
var G__29551__i = 0, G__29551__a = new Array(arguments.length -  2);
while (G__29551__i < G__29551__a.length) {G__29551__a[G__29551__i] = arguments[G__29551__i + 2]; ++G__29551__i;}
G__29550 = new cljs.core.IndexedSeq(G__29551__a,0);
}
return concat__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__29550);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
concat.cljs$lang$maxFixedArity = 2;
concat.cljs$lang$applyTo = concat__3.cljs$lang$applyTo;
concat.cljs$core$IFn$_invoke$arity$0 = concat__0;
concat.cljs$core$IFn$_invoke$arity$1 = concat__1;
concat.cljs$core$IFn$_invoke$arity$2 = concat__2;
concat.cljs$core$IFn$_invoke$arity$variadic = concat__3.cljs$core$IFn$_invoke$arity$variadic;
return concat;
})()
;
/**
* Creates a new list containing the items prepended to the rest, the
* last of which will be treated as a sequence.
* @param {...*} var_args
*/
cljs.core.list_STAR_ = (function() {
var list_STAR_ = null;
var list_STAR___1 = (function (args){
return cljs.core.seq(args);
});
var list_STAR___2 = (function (a,args){
return cljs.core.cons(a,args);
});
var list_STAR___3 = (function (a,b,args){
return cljs.core.cons(a,cljs.core.cons(b,args));
});
var list_STAR___4 = (function (a,b,c,args){
return cljs.core.cons(a,cljs.core.cons(b,cljs.core.cons(c,args)));
});
var list_STAR___5 = (function() { 
var G__29552__delegate = function (a,b,c,d,more){
return cljs.core.cons(a,cljs.core.cons(b,cljs.core.cons(c,cljs.core.cons(d,cljs.core.spread(more)))));
};
var G__29552 = function (a,b,c,d,var_args){
var more = null;
if (arguments.length > 4) {
var G__29553__i = 0, G__29553__a = new Array(arguments.length -  4);
while (G__29553__i < G__29553__a.length) {G__29553__a[G__29553__i] = arguments[G__29553__i + 4]; ++G__29553__i;}
  more = new cljs.core.IndexedSeq(G__29553__a,0);
} 
return G__29552__delegate.call(this,a,b,c,d,more);};
G__29552.cljs$lang$maxFixedArity = 4;
G__29552.cljs$lang$applyTo = (function (arglist__29554){
var a = cljs.core.first(arglist__29554);
arglist__29554 = cljs.core.next(arglist__29554);
var b = cljs.core.first(arglist__29554);
arglist__29554 = cljs.core.next(arglist__29554);
var c = cljs.core.first(arglist__29554);
arglist__29554 = cljs.core.next(arglist__29554);
var d = cljs.core.first(arglist__29554);
var more = cljs.core.rest(arglist__29554);
return G__29552__delegate(a,b,c,d,more);
});
G__29552.cljs$core$IFn$_invoke$arity$variadic = G__29552__delegate;
return G__29552;
})()
;
list_STAR_ = function(a,b,c,d,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return list_STAR___1.call(this,a);
case 2:
return list_STAR___2.call(this,a,b);
case 3:
return list_STAR___3.call(this,a,b,c);
case 4:
return list_STAR___4.call(this,a,b,c,d);
default:
var G__29555 = null;
if (arguments.length > 4) {
var G__29556__i = 0, G__29556__a = new Array(arguments.length -  4);
while (G__29556__i < G__29556__a.length) {G__29556__a[G__29556__i] = arguments[G__29556__i + 4]; ++G__29556__i;}
G__29555 = new cljs.core.IndexedSeq(G__29556__a,0);
}
return list_STAR___5.cljs$core$IFn$_invoke$arity$variadic(a,b,c,d, G__29555);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
list_STAR_.cljs$lang$maxFixedArity = 4;
list_STAR_.cljs$lang$applyTo = list_STAR___5.cljs$lang$applyTo;
list_STAR_.cljs$core$IFn$_invoke$arity$1 = list_STAR___1;
list_STAR_.cljs$core$IFn$_invoke$arity$2 = list_STAR___2;
list_STAR_.cljs$core$IFn$_invoke$arity$3 = list_STAR___3;
list_STAR_.cljs$core$IFn$_invoke$arity$4 = list_STAR___4;
list_STAR_.cljs$core$IFn$_invoke$arity$variadic = list_STAR___5.cljs$core$IFn$_invoke$arity$variadic;
return list_STAR_;
})()
;
/**
* Returns a new, transient version of the collection, in constant time.
*/
cljs.core.transient$ = (function transient$(coll){
return cljs.core._as_transient(coll);
});
/**
* Returns a new, persistent version of the transient collection, in
* constant time. The transient collection cannot be used after this
* call, any such use will throw an exception.
*/
cljs.core.persistent_BANG_ = (function persistent_BANG_(tcoll){
return cljs.core._persistent_BANG_(tcoll);
});
/**
* Adds x to the transient collection, and return coll. The 'addition'
* may happen at different 'places' depending on the concrete type.
* @param {...*} var_args
*/
cljs.core.conj_BANG_ = (function() {
var conj_BANG_ = null;
var conj_BANG___0 = (function (){
return cljs.core.transient$(cljs.core.PersistentVector.EMPTY);
});
var conj_BANG___1 = (function (coll){
return coll;
});
var conj_BANG___2 = (function (tcoll,val){
return cljs.core._conj_BANG_(tcoll,val);
});
var conj_BANG___3 = (function() { 
var G__29557__delegate = function (tcoll,val,vals){
while(true){
var ntcoll = cljs.core._conj_BANG_(tcoll,val);
if(cljs.core.truth_(vals)){
var G__29558 = ntcoll;
var G__29559 = cljs.core.first(vals);
var G__29560 = cljs.core.next(vals);
tcoll = G__29558;
val = G__29559;
vals = G__29560;
continue;
} else {
return ntcoll;
}
break;
}
};
var G__29557 = function (tcoll,val,var_args){
var vals = null;
if (arguments.length > 2) {
var G__29561__i = 0, G__29561__a = new Array(arguments.length -  2);
while (G__29561__i < G__29561__a.length) {G__29561__a[G__29561__i] = arguments[G__29561__i + 2]; ++G__29561__i;}
  vals = new cljs.core.IndexedSeq(G__29561__a,0);
} 
return G__29557__delegate.call(this,tcoll,val,vals);};
G__29557.cljs$lang$maxFixedArity = 2;
G__29557.cljs$lang$applyTo = (function (arglist__29562){
var tcoll = cljs.core.first(arglist__29562);
arglist__29562 = cljs.core.next(arglist__29562);
var val = cljs.core.first(arglist__29562);
var vals = cljs.core.rest(arglist__29562);
return G__29557__delegate(tcoll,val,vals);
});
G__29557.cljs$core$IFn$_invoke$arity$variadic = G__29557__delegate;
return G__29557;
})()
;
conj_BANG_ = function(tcoll,val,var_args){
var vals = var_args;
switch(arguments.length){
case 0:
return conj_BANG___0.call(this);
case 1:
return conj_BANG___1.call(this,tcoll);
case 2:
return conj_BANG___2.call(this,tcoll,val);
default:
var G__29563 = null;
if (arguments.length > 2) {
var G__29564__i = 0, G__29564__a = new Array(arguments.length -  2);
while (G__29564__i < G__29564__a.length) {G__29564__a[G__29564__i] = arguments[G__29564__i + 2]; ++G__29564__i;}
G__29563 = new cljs.core.IndexedSeq(G__29564__a,0);
}
return conj_BANG___3.cljs$core$IFn$_invoke$arity$variadic(tcoll,val, G__29563);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
conj_BANG_.cljs$lang$maxFixedArity = 2;
conj_BANG_.cljs$lang$applyTo = conj_BANG___3.cljs$lang$applyTo;
conj_BANG_.cljs$core$IFn$_invoke$arity$0 = conj_BANG___0;
conj_BANG_.cljs$core$IFn$_invoke$arity$1 = conj_BANG___1;
conj_BANG_.cljs$core$IFn$_invoke$arity$2 = conj_BANG___2;
conj_BANG_.cljs$core$IFn$_invoke$arity$variadic = conj_BANG___3.cljs$core$IFn$_invoke$arity$variadic;
return conj_BANG_;
})()
;
/**
* When applied to a transient map, adds mapping of key(s) to
* val(s). When applied to a transient vector, sets the val at index.
* Note - index must be <= (count vector). Returns coll.
* @param {...*} var_args
*/
cljs.core.assoc_BANG_ = (function() {
var assoc_BANG_ = null;
var assoc_BANG___3 = (function (tcoll,key,val){
return cljs.core._assoc_BANG_(tcoll,key,val);
});
var assoc_BANG___4 = (function() { 
var G__29565__delegate = function (tcoll,key,val,kvs){
while(true){
var ntcoll = cljs.core._assoc_BANG_(tcoll,key,val);
if(cljs.core.truth_(kvs)){
var G__29566 = ntcoll;
var G__29567 = cljs.core.first(kvs);
var G__29568 = cljs.core.second(kvs);
var G__29569 = cljs.core.nnext(kvs);
tcoll = G__29566;
key = G__29567;
val = G__29568;
kvs = G__29569;
continue;
} else {
return ntcoll;
}
break;
}
};
var G__29565 = function (tcoll,key,val,var_args){
var kvs = null;
if (arguments.length > 3) {
var G__29570__i = 0, G__29570__a = new Array(arguments.length -  3);
while (G__29570__i < G__29570__a.length) {G__29570__a[G__29570__i] = arguments[G__29570__i + 3]; ++G__29570__i;}
  kvs = new cljs.core.IndexedSeq(G__29570__a,0);
} 
return G__29565__delegate.call(this,tcoll,key,val,kvs);};
G__29565.cljs$lang$maxFixedArity = 3;
G__29565.cljs$lang$applyTo = (function (arglist__29571){
var tcoll = cljs.core.first(arglist__29571);
arglist__29571 = cljs.core.next(arglist__29571);
var key = cljs.core.first(arglist__29571);
arglist__29571 = cljs.core.next(arglist__29571);
var val = cljs.core.first(arglist__29571);
var kvs = cljs.core.rest(arglist__29571);
return G__29565__delegate(tcoll,key,val,kvs);
});
G__29565.cljs$core$IFn$_invoke$arity$variadic = G__29565__delegate;
return G__29565;
})()
;
assoc_BANG_ = function(tcoll,key,val,var_args){
var kvs = var_args;
switch(arguments.length){
case 3:
return assoc_BANG___3.call(this,tcoll,key,val);
default:
var G__29572 = null;
if (arguments.length > 3) {
var G__29573__i = 0, G__29573__a = new Array(arguments.length -  3);
while (G__29573__i < G__29573__a.length) {G__29573__a[G__29573__i] = arguments[G__29573__i + 3]; ++G__29573__i;}
G__29572 = new cljs.core.IndexedSeq(G__29573__a,0);
}
return assoc_BANG___4.cljs$core$IFn$_invoke$arity$variadic(tcoll,key,val, G__29572);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
assoc_BANG_.cljs$lang$maxFixedArity = 3;
assoc_BANG_.cljs$lang$applyTo = assoc_BANG___4.cljs$lang$applyTo;
assoc_BANG_.cljs$core$IFn$_invoke$arity$3 = assoc_BANG___3;
assoc_BANG_.cljs$core$IFn$_invoke$arity$variadic = assoc_BANG___4.cljs$core$IFn$_invoke$arity$variadic;
return assoc_BANG_;
})()
;
/**
* Returns a transient map that doesn't contain a mapping for key(s).
* @param {...*} var_args
*/
cljs.core.dissoc_BANG_ = (function() {
var dissoc_BANG_ = null;
var dissoc_BANG___2 = (function (tcoll,key){
return cljs.core._dissoc_BANG_(tcoll,key);
});
var dissoc_BANG___3 = (function() { 
var G__29574__delegate = function (tcoll,key,ks){
while(true){
var ntcoll = cljs.core._dissoc_BANG_(tcoll,key);
if(cljs.core.truth_(ks)){
var G__29575 = ntcoll;
var G__29576 = cljs.core.first(ks);
var G__29577 = cljs.core.next(ks);
tcoll = G__29575;
key = G__29576;
ks = G__29577;
continue;
} else {
return ntcoll;
}
break;
}
};
var G__29574 = function (tcoll,key,var_args){
var ks = null;
if (arguments.length > 2) {
var G__29578__i = 0, G__29578__a = new Array(arguments.length -  2);
while (G__29578__i < G__29578__a.length) {G__29578__a[G__29578__i] = arguments[G__29578__i + 2]; ++G__29578__i;}
  ks = new cljs.core.IndexedSeq(G__29578__a,0);
} 
return G__29574__delegate.call(this,tcoll,key,ks);};
G__29574.cljs$lang$maxFixedArity = 2;
G__29574.cljs$lang$applyTo = (function (arglist__29579){
var tcoll = cljs.core.first(arglist__29579);
arglist__29579 = cljs.core.next(arglist__29579);
var key = cljs.core.first(arglist__29579);
var ks = cljs.core.rest(arglist__29579);
return G__29574__delegate(tcoll,key,ks);
});
G__29574.cljs$core$IFn$_invoke$arity$variadic = G__29574__delegate;
return G__29574;
})()
;
dissoc_BANG_ = function(tcoll,key,var_args){
var ks = var_args;
switch(arguments.length){
case 2:
return dissoc_BANG___2.call(this,tcoll,key);
default:
var G__29580 = null;
if (arguments.length > 2) {
var G__29581__i = 0, G__29581__a = new Array(arguments.length -  2);
while (G__29581__i < G__29581__a.length) {G__29581__a[G__29581__i] = arguments[G__29581__i + 2]; ++G__29581__i;}
G__29580 = new cljs.core.IndexedSeq(G__29581__a,0);
}
return dissoc_BANG___3.cljs$core$IFn$_invoke$arity$variadic(tcoll,key, G__29580);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
dissoc_BANG_.cljs$lang$maxFixedArity = 2;
dissoc_BANG_.cljs$lang$applyTo = dissoc_BANG___3.cljs$lang$applyTo;
dissoc_BANG_.cljs$core$IFn$_invoke$arity$2 = dissoc_BANG___2;
dissoc_BANG_.cljs$core$IFn$_invoke$arity$variadic = dissoc_BANG___3.cljs$core$IFn$_invoke$arity$variadic;
return dissoc_BANG_;
})()
;
/**
* Removes the last item from a transient vector. If
* the collection is empty, throws an exception. Returns coll
*/
cljs.core.pop_BANG_ = (function pop_BANG_(tcoll){
return cljs.core._pop_BANG_(tcoll);
});
/**
* disj[oin]. Returns a transient set of the same (hashed/sorted) type, that
* does not contain key(s).
* @param {...*} var_args
*/
cljs.core.disj_BANG_ = (function() {
var disj_BANG_ = null;
var disj_BANG___2 = (function (tcoll,val){
return cljs.core._disjoin_BANG_(tcoll,val);
});
var disj_BANG___3 = (function() { 
var G__29582__delegate = function (tcoll,val,vals){
while(true){
var ntcoll = cljs.core._disjoin_BANG_(tcoll,val);
if(cljs.core.truth_(vals)){
var G__29583 = ntcoll;
var G__29584 = cljs.core.first(vals);
var G__29585 = cljs.core.next(vals);
tcoll = G__29583;
val = G__29584;
vals = G__29585;
continue;
} else {
return ntcoll;
}
break;
}
};
var G__29582 = function (tcoll,val,var_args){
var vals = null;
if (arguments.length > 2) {
var G__29586__i = 0, G__29586__a = new Array(arguments.length -  2);
while (G__29586__i < G__29586__a.length) {G__29586__a[G__29586__i] = arguments[G__29586__i + 2]; ++G__29586__i;}
  vals = new cljs.core.IndexedSeq(G__29586__a,0);
} 
return G__29582__delegate.call(this,tcoll,val,vals);};
G__29582.cljs$lang$maxFixedArity = 2;
G__29582.cljs$lang$applyTo = (function (arglist__29587){
var tcoll = cljs.core.first(arglist__29587);
arglist__29587 = cljs.core.next(arglist__29587);
var val = cljs.core.first(arglist__29587);
var vals = cljs.core.rest(arglist__29587);
return G__29582__delegate(tcoll,val,vals);
});
G__29582.cljs$core$IFn$_invoke$arity$variadic = G__29582__delegate;
return G__29582;
})()
;
disj_BANG_ = function(tcoll,val,var_args){
var vals = var_args;
switch(arguments.length){
case 2:
return disj_BANG___2.call(this,tcoll,val);
default:
var G__29588 = null;
if (arguments.length > 2) {
var G__29589__i = 0, G__29589__a = new Array(arguments.length -  2);
while (G__29589__i < G__29589__a.length) {G__29589__a[G__29589__i] = arguments[G__29589__i + 2]; ++G__29589__i;}
G__29588 = new cljs.core.IndexedSeq(G__29589__a,0);
}
return disj_BANG___3.cljs$core$IFn$_invoke$arity$variadic(tcoll,val, G__29588);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
disj_BANG_.cljs$lang$maxFixedArity = 2;
disj_BANG_.cljs$lang$applyTo = disj_BANG___3.cljs$lang$applyTo;
disj_BANG_.cljs$core$IFn$_invoke$arity$2 = disj_BANG___2;
disj_BANG_.cljs$core$IFn$_invoke$arity$variadic = disj_BANG___3.cljs$core$IFn$_invoke$arity$variadic;
return disj_BANG_;
})()
;

cljs.core.apply_to = (function apply_to(f,argc,args){
var args__$1 = cljs.core.seq(args);
if((argc === (0))){
return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
} else {
var a25205 = cljs.core._first(args__$1);
var args__$2 = cljs.core._rest(args__$1);
if((argc === (1))){
if(f.cljs$core$IFn$_invoke$arity$1){
return f.cljs$core$IFn$_invoke$arity$1(a25205);
} else {
var G__29800 = a25205;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__29800) : f.call(null,G__29800));
}
} else {
var b25206 = cljs.core._first(args__$2);
var args__$3 = cljs.core._rest(args__$2);
if((argc === (2))){
if(f.cljs$core$IFn$_invoke$arity$2){
return f.cljs$core$IFn$_invoke$arity$2(a25205,b25206);
} else {
var G__29801 = a25205;
var G__29802 = b25206;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__29801,G__29802) : f.call(null,G__29801,G__29802));
}
} else {
var c25207 = cljs.core._first(args__$3);
var args__$4 = cljs.core._rest(args__$3);
if((argc === (3))){
if(f.cljs$core$IFn$_invoke$arity$3){
return f.cljs$core$IFn$_invoke$arity$3(a25205,b25206,c25207);
} else {
var G__29803 = a25205;
var G__29804 = b25206;
var G__29805 = c25207;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__29803,G__29804,G__29805) : f.call(null,G__29803,G__29804,G__29805));
}
} else {
var d25208 = cljs.core._first(args__$4);
var args__$5 = cljs.core._rest(args__$4);
if((argc === (4))){
if(f.cljs$core$IFn$_invoke$arity$4){
return f.cljs$core$IFn$_invoke$arity$4(a25205,b25206,c25207,d25208);
} else {
var G__29806 = a25205;
var G__29807 = b25206;
var G__29808 = c25207;
var G__29809 = d25208;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__29806,G__29807,G__29808,G__29809) : f.call(null,G__29806,G__29807,G__29808,G__29809));
}
} else {
var e25209 = cljs.core._first(args__$5);
var args__$6 = cljs.core._rest(args__$5);
if((argc === (5))){
if(f.cljs$core$IFn$_invoke$arity$5){
return f.cljs$core$IFn$_invoke$arity$5(a25205,b25206,c25207,d25208,e25209);
} else {
var G__29810 = a25205;
var G__29811 = b25206;
var G__29812 = c25207;
var G__29813 = d25208;
var G__29814 = e25209;
return (f.cljs$core$IFn$_invoke$arity$5 ? f.cljs$core$IFn$_invoke$arity$5(G__29810,G__29811,G__29812,G__29813,G__29814) : f.call(null,G__29810,G__29811,G__29812,G__29813,G__29814));
}
} else {
var f25210 = cljs.core._first(args__$6);
var args__$7 = cljs.core._rest(args__$6);
if((argc === (6))){
if(f.cljs$core$IFn$_invoke$arity$6){
return f.cljs$core$IFn$_invoke$arity$6(a25205,b25206,c25207,d25208,e25209,f25210);
} else {
var G__29815 = a25205;
var G__29816 = b25206;
var G__29817 = c25207;
var G__29818 = d25208;
var G__29819 = e25209;
var G__29820 = f25210;
return (f.cljs$core$IFn$_invoke$arity$6 ? f.cljs$core$IFn$_invoke$arity$6(G__29815,G__29816,G__29817,G__29818,G__29819,G__29820) : f.call(null,G__29815,G__29816,G__29817,G__29818,G__29819,G__29820));
}
} else {
var g25211 = cljs.core._first(args__$7);
var args__$8 = cljs.core._rest(args__$7);
if((argc === (7))){
if(f.cljs$core$IFn$_invoke$arity$7){
return f.cljs$core$IFn$_invoke$arity$7(a25205,b25206,c25207,d25208,e25209,f25210,g25211);
} else {
var G__29821 = a25205;
var G__29822 = b25206;
var G__29823 = c25207;
var G__29824 = d25208;
var G__29825 = e25209;
var G__29826 = f25210;
var G__29827 = g25211;
return (f.cljs$core$IFn$_invoke$arity$7 ? f.cljs$core$IFn$_invoke$arity$7(G__29821,G__29822,G__29823,G__29824,G__29825,G__29826,G__29827) : f.call(null,G__29821,G__29822,G__29823,G__29824,G__29825,G__29826,G__29827));
}
} else {
var h25212 = cljs.core._first(args__$8);
var args__$9 = cljs.core._rest(args__$8);
if((argc === (8))){
if(f.cljs$core$IFn$_invoke$arity$8){
return f.cljs$core$IFn$_invoke$arity$8(a25205,b25206,c25207,d25208,e25209,f25210,g25211,h25212);
} else {
var G__29828 = a25205;
var G__29829 = b25206;
var G__29830 = c25207;
var G__29831 = d25208;
var G__29832 = e25209;
var G__29833 = f25210;
var G__29834 = g25211;
var G__29835 = h25212;
return (f.cljs$core$IFn$_invoke$arity$8 ? f.cljs$core$IFn$_invoke$arity$8(G__29828,G__29829,G__29830,G__29831,G__29832,G__29833,G__29834,G__29835) : f.call(null,G__29828,G__29829,G__29830,G__29831,G__29832,G__29833,G__29834,G__29835));
}
} else {
var i25213 = cljs.core._first(args__$9);
var args__$10 = cljs.core._rest(args__$9);
if((argc === (9))){
if(f.cljs$core$IFn$_invoke$arity$9){
return f.cljs$core$IFn$_invoke$arity$9(a25205,b25206,c25207,d25208,e25209,f25210,g25211,h25212,i25213);
} else {
var G__29836 = a25205;
var G__29837 = b25206;
var G__29838 = c25207;
var G__29839 = d25208;
var G__29840 = e25209;
var G__29841 = f25210;
var G__29842 = g25211;
var G__29843 = h25212;
var G__29844 = i25213;
return (f.cljs$core$IFn$_invoke$arity$9 ? f.cljs$core$IFn$_invoke$arity$9(G__29836,G__29837,G__29838,G__29839,G__29840,G__29841,G__29842,G__29843,G__29844) : f.call(null,G__29836,G__29837,G__29838,G__29839,G__29840,G__29841,G__29842,G__29843,G__29844));
}
} else {
var j25214 = cljs.core._first(args__$10);
var args__$11 = cljs.core._rest(args__$10);
if((argc === (10))){
if(f.cljs$core$IFn$_invoke$arity$10){
return f.cljs$core$IFn$_invoke$arity$10(a25205,b25206,c25207,d25208,e25209,f25210,g25211,h25212,i25213,j25214);
} else {
var G__29845 = a25205;
var G__29846 = b25206;
var G__29847 = c25207;
var G__29848 = d25208;
var G__29849 = e25209;
var G__29850 = f25210;
var G__29851 = g25211;
var G__29852 = h25212;
var G__29853 = i25213;
var G__29854 = j25214;
return (f.cljs$core$IFn$_invoke$arity$10 ? f.cljs$core$IFn$_invoke$arity$10(G__29845,G__29846,G__29847,G__29848,G__29849,G__29850,G__29851,G__29852,G__29853,G__29854) : f.call(null,G__29845,G__29846,G__29847,G__29848,G__29849,G__29850,G__29851,G__29852,G__29853,G__29854));
}
} else {
var k25215 = cljs.core._first(args__$11);
var args__$12 = cljs.core._rest(args__$11);
if((argc === (11))){
if(f.cljs$core$IFn$_invoke$arity$11){
return f.cljs$core$IFn$_invoke$arity$11(a25205,b25206,c25207,d25208,e25209,f25210,g25211,h25212,i25213,j25214,k25215);
} else {
var G__29855 = a25205;
var G__29856 = b25206;
var G__29857 = c25207;
var G__29858 = d25208;
var G__29859 = e25209;
var G__29860 = f25210;
var G__29861 = g25211;
var G__29862 = h25212;
var G__29863 = i25213;
var G__29864 = j25214;
var G__29865 = k25215;
return (f.cljs$core$IFn$_invoke$arity$11 ? f.cljs$core$IFn$_invoke$arity$11(G__29855,G__29856,G__29857,G__29858,G__29859,G__29860,G__29861,G__29862,G__29863,G__29864,G__29865) : f.call(null,G__29855,G__29856,G__29857,G__29858,G__29859,G__29860,G__29861,G__29862,G__29863,G__29864,G__29865));
}
} else {
var l25216 = cljs.core._first(args__$12);
var args__$13 = cljs.core._rest(args__$12);
if((argc === (12))){
if(f.cljs$core$IFn$_invoke$arity$12){
return f.cljs$core$IFn$_invoke$arity$12(a25205,b25206,c25207,d25208,e25209,f25210,g25211,h25212,i25213,j25214,k25215,l25216);
} else {
var G__29866 = a25205;
var G__29867 = b25206;
var G__29868 = c25207;
var G__29869 = d25208;
var G__29870 = e25209;
var G__29871 = f25210;
var G__29872 = g25211;
var G__29873 = h25212;
var G__29874 = i25213;
var G__29875 = j25214;
var G__29876 = k25215;
var G__29877 = l25216;
return (f.cljs$core$IFn$_invoke$arity$12 ? f.cljs$core$IFn$_invoke$arity$12(G__29866,G__29867,G__29868,G__29869,G__29870,G__29871,G__29872,G__29873,G__29874,G__29875,G__29876,G__29877) : f.call(null,G__29866,G__29867,G__29868,G__29869,G__29870,G__29871,G__29872,G__29873,G__29874,G__29875,G__29876,G__29877));
}
} else {
var m25217 = cljs.core._first(args__$13);
var args__$14 = cljs.core._rest(args__$13);
if((argc === (13))){
if(f.cljs$core$IFn$_invoke$arity$13){
return f.cljs$core$IFn$_invoke$arity$13(a25205,b25206,c25207,d25208,e25209,f25210,g25211,h25212,i25213,j25214,k25215,l25216,m25217);
} else {
var G__29878 = a25205;
var G__29879 = b25206;
var G__29880 = c25207;
var G__29881 = d25208;
var G__29882 = e25209;
var G__29883 = f25210;
var G__29884 = g25211;
var G__29885 = h25212;
var G__29886 = i25213;
var G__29887 = j25214;
var G__29888 = k25215;
var G__29889 = l25216;
var G__29890 = m25217;
return (f.cljs$core$IFn$_invoke$arity$13 ? f.cljs$core$IFn$_invoke$arity$13(G__29878,G__29879,G__29880,G__29881,G__29882,G__29883,G__29884,G__29885,G__29886,G__29887,G__29888,G__29889,G__29890) : f.call(null,G__29878,G__29879,G__29880,G__29881,G__29882,G__29883,G__29884,G__29885,G__29886,G__29887,G__29888,G__29889,G__29890));
}
} else {
var n25218 = cljs.core._first(args__$14);
var args__$15 = cljs.core._rest(args__$14);
if((argc === (14))){
if(f.cljs$core$IFn$_invoke$arity$14){
return f.cljs$core$IFn$_invoke$arity$14(a25205,b25206,c25207,d25208,e25209,f25210,g25211,h25212,i25213,j25214,k25215,l25216,m25217,n25218);
} else {
var G__29891 = a25205;
var G__29892 = b25206;
var G__29893 = c25207;
var G__29894 = d25208;
var G__29895 = e25209;
var G__29896 = f25210;
var G__29897 = g25211;
var G__29898 = h25212;
var G__29899 = i25213;
var G__29900 = j25214;
var G__29901 = k25215;
var G__29902 = l25216;
var G__29903 = m25217;
var G__29904 = n25218;
return (f.cljs$core$IFn$_invoke$arity$14 ? f.cljs$core$IFn$_invoke$arity$14(G__29891,G__29892,G__29893,G__29894,G__29895,G__29896,G__29897,G__29898,G__29899,G__29900,G__29901,G__29902,G__29903,G__29904) : f.call(null,G__29891,G__29892,G__29893,G__29894,G__29895,G__29896,G__29897,G__29898,G__29899,G__29900,G__29901,G__29902,G__29903,G__29904));
}
} else {
var o25219 = cljs.core._first(args__$15);
var args__$16 = cljs.core._rest(args__$15);
if((argc === (15))){
if(f.cljs$core$IFn$_invoke$arity$15){
return f.cljs$core$IFn$_invoke$arity$15(a25205,b25206,c25207,d25208,e25209,f25210,g25211,h25212,i25213,j25214,k25215,l25216,m25217,n25218,o25219);
} else {
var G__29905 = a25205;
var G__29906 = b25206;
var G__29907 = c25207;
var G__29908 = d25208;
var G__29909 = e25209;
var G__29910 = f25210;
var G__29911 = g25211;
var G__29912 = h25212;
var G__29913 = i25213;
var G__29914 = j25214;
var G__29915 = k25215;
var G__29916 = l25216;
var G__29917 = m25217;
var G__29918 = n25218;
var G__29919 = o25219;
return (f.cljs$core$IFn$_invoke$arity$15 ? f.cljs$core$IFn$_invoke$arity$15(G__29905,G__29906,G__29907,G__29908,G__29909,G__29910,G__29911,G__29912,G__29913,G__29914,G__29915,G__29916,G__29917,G__29918,G__29919) : f.call(null,G__29905,G__29906,G__29907,G__29908,G__29909,G__29910,G__29911,G__29912,G__29913,G__29914,G__29915,G__29916,G__29917,G__29918,G__29919));
}
} else {
var p25220 = cljs.core._first(args__$16);
var args__$17 = cljs.core._rest(args__$16);
if((argc === (16))){
if(f.cljs$core$IFn$_invoke$arity$16){
return f.cljs$core$IFn$_invoke$arity$16(a25205,b25206,c25207,d25208,e25209,f25210,g25211,h25212,i25213,j25214,k25215,l25216,m25217,n25218,o25219,p25220);
} else {
var G__29920 = a25205;
var G__29921 = b25206;
var G__29922 = c25207;
var G__29923 = d25208;
var G__29924 = e25209;
var G__29925 = f25210;
var G__29926 = g25211;
var G__29927 = h25212;
var G__29928 = i25213;
var G__29929 = j25214;
var G__29930 = k25215;
var G__29931 = l25216;
var G__29932 = m25217;
var G__29933 = n25218;
var G__29934 = o25219;
var G__29935 = p25220;
return (f.cljs$core$IFn$_invoke$arity$16 ? f.cljs$core$IFn$_invoke$arity$16(G__29920,G__29921,G__29922,G__29923,G__29924,G__29925,G__29926,G__29927,G__29928,G__29929,G__29930,G__29931,G__29932,G__29933,G__29934,G__29935) : f.call(null,G__29920,G__29921,G__29922,G__29923,G__29924,G__29925,G__29926,G__29927,G__29928,G__29929,G__29930,G__29931,G__29932,G__29933,G__29934,G__29935));
}
} else {
var q25221 = cljs.core._first(args__$17);
var args__$18 = cljs.core._rest(args__$17);
if((argc === (17))){
if(f.cljs$core$IFn$_invoke$arity$17){
return f.cljs$core$IFn$_invoke$arity$17(a25205,b25206,c25207,d25208,e25209,f25210,g25211,h25212,i25213,j25214,k25215,l25216,m25217,n25218,o25219,p25220,q25221);
} else {
var G__29936 = a25205;
var G__29937 = b25206;
var G__29938 = c25207;
var G__29939 = d25208;
var G__29940 = e25209;
var G__29941 = f25210;
var G__29942 = g25211;
var G__29943 = h25212;
var G__29944 = i25213;
var G__29945 = j25214;
var G__29946 = k25215;
var G__29947 = l25216;
var G__29948 = m25217;
var G__29949 = n25218;
var G__29950 = o25219;
var G__29951 = p25220;
var G__29952 = q25221;
return (f.cljs$core$IFn$_invoke$arity$17 ? f.cljs$core$IFn$_invoke$arity$17(G__29936,G__29937,G__29938,G__29939,G__29940,G__29941,G__29942,G__29943,G__29944,G__29945,G__29946,G__29947,G__29948,G__29949,G__29950,G__29951,G__29952) : f.call(null,G__29936,G__29937,G__29938,G__29939,G__29940,G__29941,G__29942,G__29943,G__29944,G__29945,G__29946,G__29947,G__29948,G__29949,G__29950,G__29951,G__29952));
}
} else {
var r25222 = cljs.core._first(args__$18);
var args__$19 = cljs.core._rest(args__$18);
if((argc === (18))){
if(f.cljs$core$IFn$_invoke$arity$18){
return f.cljs$core$IFn$_invoke$arity$18(a25205,b25206,c25207,d25208,e25209,f25210,g25211,h25212,i25213,j25214,k25215,l25216,m25217,n25218,o25219,p25220,q25221,r25222);
} else {
var G__29953 = a25205;
var G__29954 = b25206;
var G__29955 = c25207;
var G__29956 = d25208;
var G__29957 = e25209;
var G__29958 = f25210;
var G__29959 = g25211;
var G__29960 = h25212;
var G__29961 = i25213;
var G__29962 = j25214;
var G__29963 = k25215;
var G__29964 = l25216;
var G__29965 = m25217;
var G__29966 = n25218;
var G__29967 = o25219;
var G__29968 = p25220;
var G__29969 = q25221;
var G__29970 = r25222;
return (f.cljs$core$IFn$_invoke$arity$18 ? f.cljs$core$IFn$_invoke$arity$18(G__29953,G__29954,G__29955,G__29956,G__29957,G__29958,G__29959,G__29960,G__29961,G__29962,G__29963,G__29964,G__29965,G__29966,G__29967,G__29968,G__29969,G__29970) : f.call(null,G__29953,G__29954,G__29955,G__29956,G__29957,G__29958,G__29959,G__29960,G__29961,G__29962,G__29963,G__29964,G__29965,G__29966,G__29967,G__29968,G__29969,G__29970));
}
} else {
var s25223 = cljs.core._first(args__$19);
var args__$20 = cljs.core._rest(args__$19);
if((argc === (19))){
if(f.cljs$core$IFn$_invoke$arity$19){
return f.cljs$core$IFn$_invoke$arity$19(a25205,b25206,c25207,d25208,e25209,f25210,g25211,h25212,i25213,j25214,k25215,l25216,m25217,n25218,o25219,p25220,q25221,r25222,s25223);
} else {
var G__29971 = a25205;
var G__29972 = b25206;
var G__29973 = c25207;
var G__29974 = d25208;
var G__29975 = e25209;
var G__29976 = f25210;
var G__29977 = g25211;
var G__29978 = h25212;
var G__29979 = i25213;
var G__29980 = j25214;
var G__29981 = k25215;
var G__29982 = l25216;
var G__29983 = m25217;
var G__29984 = n25218;
var G__29985 = o25219;
var G__29986 = p25220;
var G__29987 = q25221;
var G__29988 = r25222;
var G__29989 = s25223;
return (f.cljs$core$IFn$_invoke$arity$19 ? f.cljs$core$IFn$_invoke$arity$19(G__29971,G__29972,G__29973,G__29974,G__29975,G__29976,G__29977,G__29978,G__29979,G__29980,G__29981,G__29982,G__29983,G__29984,G__29985,G__29986,G__29987,G__29988,G__29989) : f.call(null,G__29971,G__29972,G__29973,G__29974,G__29975,G__29976,G__29977,G__29978,G__29979,G__29980,G__29981,G__29982,G__29983,G__29984,G__29985,G__29986,G__29987,G__29988,G__29989));
}
} else {
var t25224 = cljs.core._first(args__$20);
var args__$21 = cljs.core._rest(args__$20);
if((argc === (20))){
if(f.cljs$core$IFn$_invoke$arity$20){
return f.cljs$core$IFn$_invoke$arity$20(a25205,b25206,c25207,d25208,e25209,f25210,g25211,h25212,i25213,j25214,k25215,l25216,m25217,n25218,o25219,p25220,q25221,r25222,s25223,t25224);
} else {
var G__29990 = a25205;
var G__29991 = b25206;
var G__29992 = c25207;
var G__29993 = d25208;
var G__29994 = e25209;
var G__29995 = f25210;
var G__29996 = g25211;
var G__29997 = h25212;
var G__29998 = i25213;
var G__29999 = j25214;
var G__30000 = k25215;
var G__30001 = l25216;
var G__30002 = m25217;
var G__30003 = n25218;
var G__30004 = o25219;
var G__30005 = p25220;
var G__30006 = q25221;
var G__30007 = r25222;
var G__30008 = s25223;
var G__30009 = t25224;
return (f.cljs$core$IFn$_invoke$arity$20 ? f.cljs$core$IFn$_invoke$arity$20(G__29990,G__29991,G__29992,G__29993,G__29994,G__29995,G__29996,G__29997,G__29998,G__29999,G__30000,G__30001,G__30002,G__30003,G__30004,G__30005,G__30006,G__30007,G__30008,G__30009) : f.call(null,G__29990,G__29991,G__29992,G__29993,G__29994,G__29995,G__29996,G__29997,G__29998,G__29999,G__30000,G__30001,G__30002,G__30003,G__30004,G__30005,G__30006,G__30007,G__30008,G__30009));
}
} else {
throw (new Error("Only up to 20 arguments supported on functions"));
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
});

/**
* Applies fn f to the argument list formed by prepending intervening arguments to args.
* First cut.  Not lazy.  Needs to use emitted toApply.
* @param {...*} var_args
*/
cljs.core.apply = (function() {
var apply = null;
var apply__2 = (function (f,args){
var fixed_arity = f.cljs$lang$maxFixedArity;
if(f.cljs$lang$applyTo){
var bc = cljs.core.bounded_count(args,(fixed_arity + (1)));
if((bc <= fixed_arity)){
return cljs.core.apply_to(f,bc,args);
} else {
return f.cljs$lang$applyTo(args);
}
} else {
return f.apply(f,cljs.core.to_array(args));
}
});
var apply__3 = (function (f,x,args){
var arglist = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$2(x,args);
var fixed_arity = f.cljs$lang$maxFixedArity;
if(f.cljs$lang$applyTo){
var bc = cljs.core.bounded_count(arglist,(fixed_arity + (1)));
if((bc <= fixed_arity)){
return cljs.core.apply_to(f,bc,arglist);
} else {
return f.cljs$lang$applyTo(arglist);
}
} else {
return f.apply(f,cljs.core.to_array(arglist));
}
});
var apply__4 = (function (f,x,y,args){
var arglist = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$3(x,y,args);
var fixed_arity = f.cljs$lang$maxFixedArity;
if(f.cljs$lang$applyTo){
var bc = cljs.core.bounded_count(arglist,(fixed_arity + (1)));
if((bc <= fixed_arity)){
return cljs.core.apply_to(f,bc,arglist);
} else {
return f.cljs$lang$applyTo(arglist);
}
} else {
return f.apply(f,cljs.core.to_array(arglist));
}
});
var apply__5 = (function (f,x,y,z,args){
var arglist = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(x,y,z,args);
var fixed_arity = f.cljs$lang$maxFixedArity;
if(f.cljs$lang$applyTo){
var bc = cljs.core.bounded_count(arglist,(fixed_arity + (1)));
if((bc <= fixed_arity)){
return cljs.core.apply_to(f,bc,arglist);
} else {
return f.cljs$lang$applyTo(arglist);
}
} else {
return f.apply(f,cljs.core.to_array(arglist));
}
});
var apply__6 = (function() { 
var G__30010__delegate = function (f,a,b,c,d,args){
var arglist = cljs.core.cons(a,cljs.core.cons(b,cljs.core.cons(c,cljs.core.cons(d,cljs.core.spread(args)))));
var fixed_arity = f.cljs$lang$maxFixedArity;
if(f.cljs$lang$applyTo){
var bc = cljs.core.bounded_count(arglist,(fixed_arity + (1)));
if((bc <= fixed_arity)){
return cljs.core.apply_to(f,bc,arglist);
} else {
return f.cljs$lang$applyTo(arglist);
}
} else {
return f.apply(f,cljs.core.to_array(arglist));
}
};
var G__30010 = function (f,a,b,c,d,var_args){
var args = null;
if (arguments.length > 5) {
var G__30011__i = 0, G__30011__a = new Array(arguments.length -  5);
while (G__30011__i < G__30011__a.length) {G__30011__a[G__30011__i] = arguments[G__30011__i + 5]; ++G__30011__i;}
  args = new cljs.core.IndexedSeq(G__30011__a,0);
} 
return G__30010__delegate.call(this,f,a,b,c,d,args);};
G__30010.cljs$lang$maxFixedArity = 5;
G__30010.cljs$lang$applyTo = (function (arglist__30012){
var f = cljs.core.first(arglist__30012);
arglist__30012 = cljs.core.next(arglist__30012);
var a = cljs.core.first(arglist__30012);
arglist__30012 = cljs.core.next(arglist__30012);
var b = cljs.core.first(arglist__30012);
arglist__30012 = cljs.core.next(arglist__30012);
var c = cljs.core.first(arglist__30012);
arglist__30012 = cljs.core.next(arglist__30012);
var d = cljs.core.first(arglist__30012);
var args = cljs.core.rest(arglist__30012);
return G__30010__delegate(f,a,b,c,d,args);
});
G__30010.cljs$core$IFn$_invoke$arity$variadic = G__30010__delegate;
return G__30010;
})()
;
apply = function(f,a,b,c,d,var_args){
var args = var_args;
switch(arguments.length){
case 2:
return apply__2.call(this,f,a);
case 3:
return apply__3.call(this,f,a,b);
case 4:
return apply__4.call(this,f,a,b,c);
case 5:
return apply__5.call(this,f,a,b,c,d);
default:
var G__30013 = null;
if (arguments.length > 5) {
var G__30014__i = 0, G__30014__a = new Array(arguments.length -  5);
while (G__30014__i < G__30014__a.length) {G__30014__a[G__30014__i] = arguments[G__30014__i + 5]; ++G__30014__i;}
G__30013 = new cljs.core.IndexedSeq(G__30014__a,0);
}
return apply__6.cljs$core$IFn$_invoke$arity$variadic(f,a,b,c,d, G__30013);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
apply.cljs$lang$maxFixedArity = 5;
apply.cljs$lang$applyTo = apply__6.cljs$lang$applyTo;
apply.cljs$core$IFn$_invoke$arity$2 = apply__2;
apply.cljs$core$IFn$_invoke$arity$3 = apply__3;
apply.cljs$core$IFn$_invoke$arity$4 = apply__4;
apply.cljs$core$IFn$_invoke$arity$5 = apply__5;
apply.cljs$core$IFn$_invoke$arity$variadic = apply__6.cljs$core$IFn$_invoke$arity$variadic;
return apply;
})()
;
/**
* Returns an object of the same type and value as obj, with
* (apply f (meta obj) args) as its metadata.
* @param {...*} var_args
*/
cljs.core.vary_meta = (function() {
var vary_meta = null;
var vary_meta__2 = (function (obj,f){
return cljs.core.with_meta(obj,(function (){var G__30030 = cljs.core.meta(obj);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__30030) : f.call(null,G__30030));
})());
});
var vary_meta__3 = (function (obj,f,a){
return cljs.core.with_meta(obj,(function (){var G__30031 = cljs.core.meta(obj);
var G__30032 = a;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__30031,G__30032) : f.call(null,G__30031,G__30032));
})());
});
var vary_meta__4 = (function (obj,f,a,b){
return cljs.core.with_meta(obj,(function (){var G__30033 = cljs.core.meta(obj);
var G__30034 = a;
var G__30035 = b;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__30033,G__30034,G__30035) : f.call(null,G__30033,G__30034,G__30035));
})());
});
var vary_meta__5 = (function (obj,f,a,b,c){
return cljs.core.with_meta(obj,(function (){var G__30036 = cljs.core.meta(obj);
var G__30037 = a;
var G__30038 = b;
var G__30039 = c;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__30036,G__30037,G__30038,G__30039) : f.call(null,G__30036,G__30037,G__30038,G__30039));
})());
});
var vary_meta__6 = (function (obj,f,a,b,c,d){
return cljs.core.with_meta(obj,(function (){var G__30040 = cljs.core.meta(obj);
var G__30041 = a;
var G__30042 = b;
var G__30043 = c;
var G__30044 = d;
return (f.cljs$core$IFn$_invoke$arity$5 ? f.cljs$core$IFn$_invoke$arity$5(G__30040,G__30041,G__30042,G__30043,G__30044) : f.call(null,G__30040,G__30041,G__30042,G__30043,G__30044));
})());
});
var vary_meta__7 = (function() { 
var G__30045__delegate = function (obj,f,a,b,c,d,args){
return cljs.core.with_meta(obj,cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f,cljs.core.meta(obj),a,b,c,cljs.core.array_seq([d,args], 0)));
};
var G__30045 = function (obj,f,a,b,c,d,var_args){
var args = null;
if (arguments.length > 6) {
var G__30046__i = 0, G__30046__a = new Array(arguments.length -  6);
while (G__30046__i < G__30046__a.length) {G__30046__a[G__30046__i] = arguments[G__30046__i + 6]; ++G__30046__i;}
  args = new cljs.core.IndexedSeq(G__30046__a,0);
} 
return G__30045__delegate.call(this,obj,f,a,b,c,d,args);};
G__30045.cljs$lang$maxFixedArity = 6;
G__30045.cljs$lang$applyTo = (function (arglist__30047){
var obj = cljs.core.first(arglist__30047);
arglist__30047 = cljs.core.next(arglist__30047);
var f = cljs.core.first(arglist__30047);
arglist__30047 = cljs.core.next(arglist__30047);
var a = cljs.core.first(arglist__30047);
arglist__30047 = cljs.core.next(arglist__30047);
var b = cljs.core.first(arglist__30047);
arglist__30047 = cljs.core.next(arglist__30047);
var c = cljs.core.first(arglist__30047);
arglist__30047 = cljs.core.next(arglist__30047);
var d = cljs.core.first(arglist__30047);
var args = cljs.core.rest(arglist__30047);
return G__30045__delegate(obj,f,a,b,c,d,args);
});
G__30045.cljs$core$IFn$_invoke$arity$variadic = G__30045__delegate;
return G__30045;
})()
;
vary_meta = function(obj,f,a,b,c,d,var_args){
var args = var_args;
switch(arguments.length){
case 2:
return vary_meta__2.call(this,obj,f);
case 3:
return vary_meta__3.call(this,obj,f,a);
case 4:
return vary_meta__4.call(this,obj,f,a,b);
case 5:
return vary_meta__5.call(this,obj,f,a,b,c);
case 6:
return vary_meta__6.call(this,obj,f,a,b,c,d);
default:
var G__30048 = null;
if (arguments.length > 6) {
var G__30049__i = 0, G__30049__a = new Array(arguments.length -  6);
while (G__30049__i < G__30049__a.length) {G__30049__a[G__30049__i] = arguments[G__30049__i + 6]; ++G__30049__i;}
G__30048 = new cljs.core.IndexedSeq(G__30049__a,0);
}
return vary_meta__7.cljs$core$IFn$_invoke$arity$variadic(obj,f,a,b,c,d, G__30048);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
vary_meta.cljs$lang$maxFixedArity = 6;
vary_meta.cljs$lang$applyTo = vary_meta__7.cljs$lang$applyTo;
vary_meta.cljs$core$IFn$_invoke$arity$2 = vary_meta__2;
vary_meta.cljs$core$IFn$_invoke$arity$3 = vary_meta__3;
vary_meta.cljs$core$IFn$_invoke$arity$4 = vary_meta__4;
vary_meta.cljs$core$IFn$_invoke$arity$5 = vary_meta__5;
vary_meta.cljs$core$IFn$_invoke$arity$6 = vary_meta__6;
vary_meta.cljs$core$IFn$_invoke$arity$variadic = vary_meta__7.cljs$core$IFn$_invoke$arity$variadic;
return vary_meta;
})()
;
/**
* Same as (not (= obj1 obj2))
* @param {...*} var_args
*/
cljs.core.not_EQ_ = (function() {
var not_EQ_ = null;
var not_EQ___1 = (function (x){
return false;
});
var not_EQ___2 = (function (x,y){
return !(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x,y));
});
var not_EQ___3 = (function() { 
var G__30050__delegate = function (x,y,more){
return cljs.core.not(cljs.core.apply.cljs$core$IFn$_invoke$arity$4(cljs.core._EQ_,x,y,more));
};
var G__30050 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__30051__i = 0, G__30051__a = new Array(arguments.length -  2);
while (G__30051__i < G__30051__a.length) {G__30051__a[G__30051__i] = arguments[G__30051__i + 2]; ++G__30051__i;}
  more = new cljs.core.IndexedSeq(G__30051__a,0);
} 
return G__30050__delegate.call(this,x,y,more);};
G__30050.cljs$lang$maxFixedArity = 2;
G__30050.cljs$lang$applyTo = (function (arglist__30052){
var x = cljs.core.first(arglist__30052);
arglist__30052 = cljs.core.next(arglist__30052);
var y = cljs.core.first(arglist__30052);
var more = cljs.core.rest(arglist__30052);
return G__30050__delegate(x,y,more);
});
G__30050.cljs$core$IFn$_invoke$arity$variadic = G__30050__delegate;
return G__30050;
})()
;
not_EQ_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return not_EQ___1.call(this,x);
case 2:
return not_EQ___2.call(this,x,y);
default:
var G__30053 = null;
if (arguments.length > 2) {
var G__30054__i = 0, G__30054__a = new Array(arguments.length -  2);
while (G__30054__i < G__30054__a.length) {G__30054__a[G__30054__i] = arguments[G__30054__i + 2]; ++G__30054__i;}
G__30053 = new cljs.core.IndexedSeq(G__30054__a,0);
}
return not_EQ___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__30053);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
not_EQ_.cljs$lang$maxFixedArity = 2;
not_EQ_.cljs$lang$applyTo = not_EQ___3.cljs$lang$applyTo;
not_EQ_.cljs$core$IFn$_invoke$arity$1 = not_EQ___1;
not_EQ_.cljs$core$IFn$_invoke$arity$2 = not_EQ___2;
not_EQ_.cljs$core$IFn$_invoke$arity$variadic = not_EQ___3.cljs$core$IFn$_invoke$arity$variadic;
return not_EQ_;
})()
;
/**
* If coll is empty, returns nil, else coll
*/
cljs.core.not_empty = (function not_empty(coll){
if(cljs.core.seq(coll)){
return coll;
} else {
return null;
}
});
cljs.core.nil_iter = (function nil_iter(){
if(typeof cljs.core.t30058 !== 'undefined'){
} else {

/**
* @constructor
*/
cljs.core.t30058 = (function (nil_iter,meta30059){
this.nil_iter = nil_iter;
this.meta30059 = meta30059;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 393216;
})
cljs.core.t30058.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
return false;
});

cljs.core.t30058.prototype.next = (function (){
var self__ = this;
var _ = this;
return (new Error("No such element"));
});

cljs.core.t30058.prototype.remove = (function (){
var self__ = this;
var _ = this;
return (new Error("Unsupported operation"));
});

cljs.core.t30058.prototype.cljs$core$IMeta$_meta$arity$1 = (function (_30060){
var self__ = this;
var _30060__$1 = this;
return self__.meta30059;
});

cljs.core.t30058.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (_30060,meta30059__$1){
var self__ = this;
var _30060__$1 = this;
return (new cljs.core.t30058(self__.nil_iter,meta30059__$1));
});

cljs.core.t30058.cljs$lang$type = true;

cljs.core.t30058.cljs$lang$ctorStr = "cljs.core/t30058";

cljs.core.t30058.cljs$lang$ctorPrWriter = (function (this__24861__auto__,writer__24862__auto__,opt__24863__auto__){
return cljs.core._write(writer__24862__auto__,"cljs.core/t30058");
});

cljs.core.__GT_t30058 = (function __GT_t30058(nil_iter__$1,meta30059){
return (new cljs.core.t30058(nil_iter__$1,meta30059));
});

}

return (new cljs.core.t30058(nil_iter,new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null,"end-column","end-column",1425389514),54,new cljs.core.Keyword(null,"end-line","end-line",1837326455),2998,new cljs.core.Keyword(null,"column","column",2078222095),3,new cljs.core.Keyword(null,"line","line",212345235),2994,new cljs.core.Keyword(null,"file","file",-1269645878),"/home/callum/projects/closso/.repl/33/cljs/core.cljs"], null)));
});

/**
* @constructor
*/
cljs.core.StringIter = (function (s,i){
this.s = s;
this.i = i;
})
cljs.core.StringIter.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
return (self__.i < self__.s.length);
});

cljs.core.StringIter.prototype.next = (function (){
var self__ = this;
var _ = this;
var ret = self__.s.charAt(self__.i);
self__.i = (self__.i + (1));

return ret;
});

cljs.core.StringIter.prototype.remove = (function (){
var self__ = this;
var _ = this;
return (new Error("Unsupported operation"));
});

cljs.core.StringIter.cljs$lang$type = true;

cljs.core.StringIter.cljs$lang$ctorStr = "cljs.core/StringIter";

cljs.core.StringIter.cljs$lang$ctorPrWriter = (function (this__24861__auto__,writer__24862__auto__,opt__24863__auto__){
return cljs.core._write(writer__24862__auto__,"cljs.core/StringIter");
});

cljs.core.__GT_StringIter = (function __GT_StringIter(s,i){
return (new cljs.core.StringIter(s,i));
});

cljs.core.string_iter = (function string_iter(x){
return (new cljs.core.StringIter(x,(0)));
});

/**
* @constructor
*/
cljs.core.ArrayIter = (function (arr,i){
this.arr = arr;
this.i = i;
})
cljs.core.ArrayIter.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
return (self__.i < self__.arr.length);
});

cljs.core.ArrayIter.prototype.next = (function (){
var self__ = this;
var _ = this;
var ret = (self__.arr[self__.i]);
self__.i = (self__.i + (1));

return ret;
});

cljs.core.ArrayIter.prototype.remove = (function (){
var self__ = this;
var _ = this;
return (new Error("Unsupported operation"));
});

cljs.core.ArrayIter.cljs$lang$type = true;

cljs.core.ArrayIter.cljs$lang$ctorStr = "cljs.core/ArrayIter";

cljs.core.ArrayIter.cljs$lang$ctorPrWriter = (function (this__24861__auto__,writer__24862__auto__,opt__24863__auto__){
return cljs.core._write(writer__24862__auto__,"cljs.core/ArrayIter");
});

cljs.core.__GT_ArrayIter = (function __GT_ArrayIter(arr,i){
return (new cljs.core.ArrayIter(arr,i));
});

cljs.core.array_iter = (function array_iter(x){
return (new cljs.core.ArrayIter(x,(0)));
});
cljs.core.INIT = {};
cljs.core.START = {};

/**
* @constructor
*/
cljs.core.SeqIter = (function (_seq,_next){
this._seq = _seq;
this._next = _next;
})
cljs.core.SeqIter.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
if((self__._seq === cljs.core.INIT)){
self__._seq = cljs.core.START;

self__._next = cljs.core.seq(self__._next);
} else {
if((self__._seq === self__._next)){
self__._next = cljs.core.next(self__._seq);
} else {
}
}

return !((self__._next == null));
});

cljs.core.SeqIter.prototype.next = (function (){
var self__ = this;
var this$ = this;
if(cljs.core.not(this$.hasNext())){
throw (new Error("No such element"));
} else {
self__._seq = self__._next;

return cljs.core.first(self__._next);
}
});

cljs.core.SeqIter.prototype.remove = (function (){
var self__ = this;
var _ = this;
return (new Error("Unsupported operation"));
});

cljs.core.SeqIter.cljs$lang$type = true;

cljs.core.SeqIter.cljs$lang$ctorStr = "cljs.core/SeqIter";

cljs.core.SeqIter.cljs$lang$ctorPrWriter = (function (this__24861__auto__,writer__24862__auto__,opt__24863__auto__){
return cljs.core._write(writer__24862__auto__,"cljs.core/SeqIter");
});

cljs.core.__GT_SeqIter = (function __GT_SeqIter(_seq,_next){
return (new cljs.core.SeqIter(_seq,_next));
});

cljs.core.seq_iter = (function seq_iter(coll){
return (new cljs.core.SeqIter(cljs.core.INIT,coll));
});
cljs.core.iter = (function iter(coll){
if((coll == null)){
return cljs.core.nil_iter();
} else {
if(typeof coll === 'string'){
return cljs.core.string_iter(coll);
} else {
if(coll instanceof Array){
return cljs.core.array_iter(coll);
} else {
if(cljs.core.iterable_QMARK_(coll)){
return cljs.core._iterator(coll);
} else {
if(cljs.core.seqable_QMARK_(coll)){
return cljs.core.seq_iter(coll);
} else {
throw (new Error([cljs.core.str("Cannot create iterator from "),cljs.core.str(coll)].join('')));

}
}
}
}
}
});
cljs.core.lazy_transformer = (function lazy_transformer(stepper){
return (new cljs.core.LazyTransformer(stepper,null,null,null));
});

/**
* @constructor
*/
cljs.core.Stepper = (function (xform,iter){
this.xform = xform;
this.iter = iter;
})
cljs.core.Stepper.prototype.step = (function (lt){
var self__ = this;
var this$ = this;
while(true){
if(cljs.core.truth_((function (){var and__24262__auto__ = !((lt.stepper == null));
if(and__24262__auto__){
return self__.iter.hasNext();
} else {
return and__24262__auto__;
}
})())){
if(cljs.core.reduced_QMARK_((function (){var G__30061 = lt;
var G__30062 = self__.iter.next();
return (self__.xform.cljs$core$IFn$_invoke$arity$2 ? self__.xform.cljs$core$IFn$_invoke$arity$2(G__30061,G__30062) : self__.xform.call(null,G__30061,G__30062));
})())){
if((lt.rest == null)){
} else {
lt.rest.stepper = null;
}
} else {
continue;
}
} else {
}
break;
}

if((lt.stepper == null)){
return null;
} else {
var G__30063 = lt;
return (self__.xform.cljs$core$IFn$_invoke$arity$1 ? self__.xform.cljs$core$IFn$_invoke$arity$1(G__30063) : self__.xform.call(null,G__30063));
}
});

cljs.core.Stepper.cljs$lang$type = true;

cljs.core.Stepper.cljs$lang$ctorStr = "cljs.core/Stepper";

cljs.core.Stepper.cljs$lang$ctorPrWriter = (function (this__24861__auto__,writer__24862__auto__,opt__24863__auto__){
return cljs.core._write(writer__24862__auto__,"cljs.core/Stepper");
});

cljs.core.__GT_Stepper = (function __GT_Stepper(xform,iter){
return (new cljs.core.Stepper(xform,iter));
});

cljs.core.stepper = (function stepper(xform,iter){
var stepfn = (function() {
var stepfn = null;
var stepfn__1 = (function (result){
var lt = ((cljs.core.reduced_QMARK_(result))?cljs.core.deref(result):result);
lt.stepper = null;

return result;
});
var stepfn__2 = (function (result,input){
var lt = result;
lt.first = input;

lt.rest = cljs.core.lazy_transformer(lt.stepper);

lt.stepper = null;

return lt.rest;
});
stepfn = function(result,input){
switch(arguments.length){
case 1:
return stepfn__1.call(this,result);
case 2:
return stepfn__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
stepfn.cljs$core$IFn$_invoke$arity$1 = stepfn__1;
stepfn.cljs$core$IFn$_invoke$arity$2 = stepfn__2;
return stepfn;
})()
;
return (new cljs.core.Stepper((function (){var G__30065 = stepfn;
return (xform.cljs$core$IFn$_invoke$arity$1 ? xform.cljs$core$IFn$_invoke$arity$1(G__30065) : xform.call(null,G__30065));
})(),iter));
});

/**
* @constructor
*/
cljs.core.MultiStepper = (function (xform,iters,nexts){
this.xform = xform;
this.iters = iters;
this.nexts = nexts;
})
cljs.core.MultiStepper.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
var iters__$1 = cljs.core.seq(self__.iters);
while(true){
if(!((iters__$1 == null))){
var iter = cljs.core.first(iters__$1);
if(cljs.core.not(iter.hasNext())){
return false;
} else {
var G__30067 = cljs.core.next(iters__$1);
iters__$1 = G__30067;
continue;
}
} else {
return true;
}
break;
}
});

cljs.core.MultiStepper.prototype.next = (function (){
var self__ = this;
var _ = this;
var n__25161__auto___30068 = self__.iters.length;
var i_30069 = (0);
while(true){
if((i_30069 < n__25161__auto___30068)){
(self__.nexts[i_30069] = (self__.iters[i_30069]).next());

var G__30070 = (i_30069 + (1));
i_30069 = G__30070;
continue;
} else {
}
break;
}

return cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(self__.nexts,(0));
});

cljs.core.MultiStepper.prototype.step = (function (lt){
var self__ = this;
var this$ = this;
while(true){
if(cljs.core.truth_((function (){var and__24262__auto__ = !((lt.stepper == null));
if(and__24262__auto__){
return this$.hasNext();
} else {
return and__24262__auto__;
}
})())){
if(cljs.core.reduced_QMARK_(cljs.core.apply.cljs$core$IFn$_invoke$arity$2(self__.xform,cljs.core.cons(lt,this$.next())))){
if((lt.rest == null)){
} else {
lt.rest.stepper = null;
}
} else {
continue;
}
} else {
}
break;
}

if((lt.stepper == null)){
return null;
} else {
var G__30066 = lt;
return (self__.xform.cljs$core$IFn$_invoke$arity$1 ? self__.xform.cljs$core$IFn$_invoke$arity$1(G__30066) : self__.xform.call(null,G__30066));
}
});

cljs.core.MultiStepper.cljs$lang$type = true;

cljs.core.MultiStepper.cljs$lang$ctorStr = "cljs.core/MultiStepper";

cljs.core.MultiStepper.cljs$lang$ctorPrWriter = (function (this__24861__auto__,writer__24862__auto__,opt__24863__auto__){
return cljs.core._write(writer__24862__auto__,"cljs.core/MultiStepper");
});

cljs.core.__GT_MultiStepper = (function __GT_MultiStepper(xform,iters,nexts){
return (new cljs.core.MultiStepper(xform,iters,nexts));
});

cljs.core.multi_stepper = (function() {
var multi_stepper = null;
var multi_stepper__2 = (function (xform,iters){
return multi_stepper.cljs$core$IFn$_invoke$arity$3(xform,iters,(new Array(iters.length)));
});
var multi_stepper__3 = (function (xform,iters,nexts){
var stepfn = (function() {
var stepfn = null;
var stepfn__1 = (function (result){
var lt = ((cljs.core.reduced_QMARK_(result))?cljs.core.deref(result):result);
lt.stepper = null;

return lt;
});
var stepfn__2 = (function (result,input){
var lt = result;
lt.first = input;

lt.rest = cljs.core.lazy_transformer(lt.stepper);

lt.stepper = null;

return lt.rest;
});
stepfn = function(result,input){
switch(arguments.length){
case 1:
return stepfn__1.call(this,result);
case 2:
return stepfn__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
stepfn.cljs$core$IFn$_invoke$arity$1 = stepfn__1;
stepfn.cljs$core$IFn$_invoke$arity$2 = stepfn__2;
return stepfn;
})()
;
return (new cljs.core.MultiStepper((function (){var G__30075 = stepfn;
return (xform.cljs$core$IFn$_invoke$arity$1 ? xform.cljs$core$IFn$_invoke$arity$1(G__30075) : xform.call(null,G__30075));
})(),iters,nexts));
});
multi_stepper = function(xform,iters,nexts){
switch(arguments.length){
case 2:
return multi_stepper__2.call(this,xform,iters);
case 3:
return multi_stepper__3.call(this,xform,iters,nexts);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
multi_stepper.cljs$core$IFn$_invoke$arity$2 = multi_stepper__2;
multi_stepper.cljs$core$IFn$_invoke$arity$3 = multi_stepper__3;
return multi_stepper;
})()
;

/**
* @constructor
*/
cljs.core.LazyTransformer = (function (stepper,first,rest,meta){
this.stepper = stepper;
this.first = first;
this.rest = rest;
this.meta = meta;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 31719628;
})
cljs.core.LazyTransformer.prototype.cljs$core$INext$_next$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
if((self__.stepper == null)){
} else {
cljs.core._seq(this$__$1);
}

if((self__.rest == null)){
return null;
} else {
return cljs.core._seq(self__.rest);
}
});

cljs.core.LazyTransformer.prototype.cljs$core$ISeq$_first$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
if((self__.stepper == null)){
} else {
cljs.core._seq(this$__$1);
}

if((self__.rest == null)){
return null;
} else {
return self__.first;
}
});

cljs.core.LazyTransformer.prototype.cljs$core$ISeq$_rest$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
if((self__.stepper == null)){
} else {
cljs.core._seq(this$__$1);
}

if((self__.rest == null)){
return cljs.core.List.EMPTY;
} else {
return self__.rest;
}
});

cljs.core.LazyTransformer.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
if((self__.stepper == null)){
} else {
self__.stepper.step(this$__$1);
}

if((self__.rest == null)){
return null;
} else {
return this$__$1;
}
});

cljs.core.LazyTransformer.prototype.cljs$core$IHash$_hash$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return cljs.core.hash_ordered_coll(this$__$1);
});

cljs.core.LazyTransformer.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (this$,other){
var self__ = this;
var this$__$1 = this;
var s = cljs.core._seq(this$__$1);
if(!((s == null))){
return cljs.core.equiv_sequential(this$__$1,other);
} else {
return (cljs.core.sequential_QMARK_(other)) && ((cljs.core.seq(other) == null));
}
});

cljs.core.LazyTransformer.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return cljs.core.List.EMPTY;
});

cljs.core.LazyTransformer.prototype.cljs$core$ICollection$_conj$arity$2 = (function (this$,o){
var self__ = this;
var this$__$1 = this;
return cljs.core.cons(o,cljs.core._seq(this$__$1));
});

cljs.core.LazyTransformer.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (this$,new_meta){
var self__ = this;
var this$__$1 = this;
return (new cljs.core.LazyTransformer(self__.stepper,self__.first,self__.rest,new_meta));
});

cljs.core.LazyTransformer.cljs$lang$type = true;

cljs.core.LazyTransformer.cljs$lang$ctorStr = "cljs.core/LazyTransformer";

cljs.core.LazyTransformer.cljs$lang$ctorPrWriter = (function (this__24861__auto__,writer__24862__auto__,opt__24863__auto__){
return cljs.core._write(writer__24862__auto__,"cljs.core/LazyTransformer");
});

cljs.core.__GT_LazyTransformer = (function __GT_LazyTransformer(stepper,first,rest,meta){
return (new cljs.core.LazyTransformer(stepper,first,rest,meta));
});

(cljs.core.LazyTransformer.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__25252__auto__ = this;
return cljs.core.es6_iterator(this__25252__auto__);
}));
cljs.core.LazyTransformer.create = (function (xform,coll){
return (new cljs.core.LazyTransformer(cljs.core.stepper(xform,cljs.core.iter(coll)),null,null,null));
});
cljs.core.LazyTransformer.createMulti = (function (xform,colls){
var iters = [];
var seq__30076_30080 = cljs.core.seq(colls);
var chunk__30077_30081 = null;
var count__30078_30082 = (0);
var i__30079_30083 = (0);
while(true){
if((i__30079_30083 < count__30078_30082)){
var coll_30084 = chunk__30077_30081.cljs$core$IIndexed$_nth$arity$2(null,i__30079_30083);
iters.push(cljs.core.iter(coll_30084));

var G__30085 = seq__30076_30080;
var G__30086 = chunk__30077_30081;
var G__30087 = count__30078_30082;
var G__30088 = (i__30079_30083 + (1));
seq__30076_30080 = G__30085;
chunk__30077_30081 = G__30086;
count__30078_30082 = G__30087;
i__30079_30083 = G__30088;
continue;
} else {
var temp__4126__auto___30089 = cljs.core.seq(seq__30076_30080);
if(temp__4126__auto___30089){
var seq__30076_30090__$1 = temp__4126__auto___30089;
if(cljs.core.chunked_seq_QMARK_(seq__30076_30090__$1)){
var c__25061__auto___30091 = cljs.core.chunk_first(seq__30076_30090__$1);
var G__30092 = cljs.core.chunk_rest(seq__30076_30090__$1);
var G__30093 = c__25061__auto___30091;
var G__30094 = cljs.core.count(c__25061__auto___30091);
var G__30095 = (0);
seq__30076_30080 = G__30092;
chunk__30077_30081 = G__30093;
count__30078_30082 = G__30094;
i__30079_30083 = G__30095;
continue;
} else {
var coll_30096 = cljs.core.first(seq__30076_30090__$1);
iters.push(cljs.core.iter(coll_30096));

var G__30097 = cljs.core.next(seq__30076_30090__$1);
var G__30098 = null;
var G__30099 = (0);
var G__30100 = (0);
seq__30076_30080 = G__30097;
chunk__30077_30081 = G__30098;
count__30078_30082 = G__30099;
i__30079_30083 = G__30100;
continue;
}
} else {
}
}
break;
}

return (new cljs.core.LazyTransformer(cljs.core.multi_stepper.cljs$core$IFn$_invoke$arity$3(xform,iters,(new Array(iters.length))),null,null,null));
});
/**
* Coerces coll to a (possibly empty) sequence, if it is not already
* one. Will not force a lazy seq. (sequence nil) yields (), When a
* transducer is supplied, returns a lazy sequence of applications of
* the transform to the items in coll(s), i.e. to the set of first
* items of each coll, followed by the set of second
* items in each coll, until any one of the colls is exhausted.  Any
* remaining items in other colls are ignored. The transform should accept
* number-of-colls arguments
* @param {...*} var_args
*/
cljs.core.sequence = (function() {
var sequence = null;
var sequence__1 = (function (coll){
if(cljs.core.seq_QMARK_(coll)){
return coll;
} else {
var or__24274__auto__ = cljs.core.seq(coll);
if(or__24274__auto__){
return or__24274__auto__;
} else {
return cljs.core.List.EMPTY;
}
}
});
var sequence__2 = (function (xform,coll){
return cljs.core.LazyTransformer.create(xform,coll);
});
var sequence__3 = (function() { 
var G__30101__delegate = function (xform,coll,colls){
return cljs.core.LazyTransformer.createMulti(xform,cljs.core.to_array(cljs.core.cons(coll,colls)));
};
var G__30101 = function (xform,coll,var_args){
var colls = null;
if (arguments.length > 2) {
var G__30102__i = 0, G__30102__a = new Array(arguments.length -  2);
while (G__30102__i < G__30102__a.length) {G__30102__a[G__30102__i] = arguments[G__30102__i + 2]; ++G__30102__i;}
  colls = new cljs.core.IndexedSeq(G__30102__a,0);
} 
return G__30101__delegate.call(this,xform,coll,colls);};
G__30101.cljs$lang$maxFixedArity = 2;
G__30101.cljs$lang$applyTo = (function (arglist__30103){
var xform = cljs.core.first(arglist__30103);
arglist__30103 = cljs.core.next(arglist__30103);
var coll = cljs.core.first(arglist__30103);
var colls = cljs.core.rest(arglist__30103);
return G__30101__delegate(xform,coll,colls);
});
G__30101.cljs$core$IFn$_invoke$arity$variadic = G__30101__delegate;
return G__30101;
})()
;
sequence = function(xform,coll,var_args){
var colls = var_args;
switch(arguments.length){
case 1:
return sequence__1.call(this,xform);
case 2:
return sequence__2.call(this,xform,coll);
default:
var G__30104 = null;
if (arguments.length > 2) {
var G__30105__i = 0, G__30105__a = new Array(arguments.length -  2);
while (G__30105__i < G__30105__a.length) {G__30105__a[G__30105__i] = arguments[G__30105__i + 2]; ++G__30105__i;}
G__30104 = new cljs.core.IndexedSeq(G__30105__a,0);
}
return sequence__3.cljs$core$IFn$_invoke$arity$variadic(xform,coll, G__30104);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
sequence.cljs$lang$maxFixedArity = 2;
sequence.cljs$lang$applyTo = sequence__3.cljs$lang$applyTo;
sequence.cljs$core$IFn$_invoke$arity$1 = sequence__1;
sequence.cljs$core$IFn$_invoke$arity$2 = sequence__2;
sequence.cljs$core$IFn$_invoke$arity$variadic = sequence__3.cljs$core$IFn$_invoke$arity$variadic;
return sequence;
})()
;
/**
* Returns true if (pred x) is logical true for every x in coll, else
* false.
*/
cljs.core.every_QMARK_ = (function every_QMARK_(pred,coll){
while(true){
if((cljs.core.seq(coll) == null)){
return true;
} else {
if(cljs.core.truth_((function (){var G__30107 = cljs.core.first(coll);
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__30107) : pred.call(null,G__30107));
})())){
var G__30108 = pred;
var G__30109 = cljs.core.next(coll);
pred = G__30108;
coll = G__30109;
continue;
} else {
return false;

}
}
break;
}
});
/**
* Returns false if (pred x) is logical true for every x in
* coll, else true.
*/
cljs.core.not_every_QMARK_ = (function not_every_QMARK_(pred,coll){
return !(cljs.core.every_QMARK_(pred,coll));
});
/**
* Returns the first logical true value of (pred x) for any x in coll,
* else nil.  One common idiom is to use a set as pred, for example
* this will return :fred if :fred is in the sequence, otherwise nil:
* (some #{:fred} coll)
*/
cljs.core.some = (function some(pred,coll){
while(true){
if(cljs.core.seq(coll)){
var or__24274__auto__ = (function (){var G__30113 = cljs.core.first(coll);
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__30113) : pred.call(null,G__30113));
})();
if(cljs.core.truth_(or__24274__auto__)){
return or__24274__auto__;
} else {
var G__30114 = pred;
var G__30115 = cljs.core.next(coll);
pred = G__30114;
coll = G__30115;
continue;
}
} else {
return null;
}
break;
}
});
/**
* Returns false if (pred x) is logical true for any x in coll,
* else true.
*/
cljs.core.not_any_QMARK_ = (function not_any_QMARK_(pred,coll){
return cljs.core.not(cljs.core.some(pred,coll));
});
/**
* Returns true if n is even, throws an exception if n is not an integer
*/
cljs.core.even_QMARK_ = (function even_QMARK_(n){
if(cljs.core.integer_QMARK_(n)){
return ((n & (1)) === (0));
} else {
throw (new Error([cljs.core.str("Argument must be an integer: "),cljs.core.str(n)].join('')));
}
});
/**
* Returns true if n is odd, throws an exception if n is not an integer
*/
cljs.core.odd_QMARK_ = (function odd_QMARK_(n){
return !(cljs.core.even_QMARK_(n));
});
/**
* Takes a fn f and returns a fn that takes the same arguments as f,
* has the same effects, if any, and returns the opposite truth value.
*/
cljs.core.complement = (function complement(f){
return (function() {
var G__30122 = null;
var G__30122__0 = (function (){
return cljs.core.not((function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})());
});
var G__30122__1 = (function (x){
return cljs.core.not((function (){var G__30119 = x;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__30119) : f.call(null,G__30119));
})());
});
var G__30122__2 = (function (x,y){
return cljs.core.not((function (){var G__30120 = x;
var G__30121 = y;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__30120,G__30121) : f.call(null,G__30120,G__30121));
})());
});
var G__30122__3 = (function() { 
var G__30123__delegate = function (x,y,zs){
return cljs.core.not(cljs.core.apply.cljs$core$IFn$_invoke$arity$4(f,x,y,zs));
};
var G__30123 = function (x,y,var_args){
var zs = null;
if (arguments.length > 2) {
var G__30124__i = 0, G__30124__a = new Array(arguments.length -  2);
while (G__30124__i < G__30124__a.length) {G__30124__a[G__30124__i] = arguments[G__30124__i + 2]; ++G__30124__i;}
  zs = new cljs.core.IndexedSeq(G__30124__a,0);
} 
return G__30123__delegate.call(this,x,y,zs);};
G__30123.cljs$lang$maxFixedArity = 2;
G__30123.cljs$lang$applyTo = (function (arglist__30125){
var x = cljs.core.first(arglist__30125);
arglist__30125 = cljs.core.next(arglist__30125);
var y = cljs.core.first(arglist__30125);
var zs = cljs.core.rest(arglist__30125);
return G__30123__delegate(x,y,zs);
});
G__30123.cljs$core$IFn$_invoke$arity$variadic = G__30123__delegate;
return G__30123;
})()
;
G__30122 = function(x,y,var_args){
var zs = var_args;
switch(arguments.length){
case 0:
return G__30122__0.call(this);
case 1:
return G__30122__1.call(this,x);
case 2:
return G__30122__2.call(this,x,y);
default:
var G__30126 = null;
if (arguments.length > 2) {
var G__30127__i = 0, G__30127__a = new Array(arguments.length -  2);
while (G__30127__i < G__30127__a.length) {G__30127__a[G__30127__i] = arguments[G__30127__i + 2]; ++G__30127__i;}
G__30126 = new cljs.core.IndexedSeq(G__30127__a,0);
}
return G__30122__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__30126);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__30122.cljs$lang$maxFixedArity = 2;
G__30122.cljs$lang$applyTo = G__30122__3.cljs$lang$applyTo;
G__30122.cljs$core$IFn$_invoke$arity$0 = G__30122__0;
G__30122.cljs$core$IFn$_invoke$arity$1 = G__30122__1;
G__30122.cljs$core$IFn$_invoke$arity$2 = G__30122__2;
G__30122.cljs$core$IFn$_invoke$arity$variadic = G__30122__3.cljs$core$IFn$_invoke$arity$variadic;
return G__30122;
})()
});
/**
* Returns a function that takes any number of arguments and returns x.
*/
cljs.core.constantly = (function constantly(x){
return (function() { 
var G__30128__delegate = function (args){
return x;
};
var G__30128 = function (var_args){
var args = null;
if (arguments.length > 0) {
var G__30129__i = 0, G__30129__a = new Array(arguments.length -  0);
while (G__30129__i < G__30129__a.length) {G__30129__a[G__30129__i] = arguments[G__30129__i + 0]; ++G__30129__i;}
  args = new cljs.core.IndexedSeq(G__30129__a,0);
} 
return G__30128__delegate.call(this,args);};
G__30128.cljs$lang$maxFixedArity = 0;
G__30128.cljs$lang$applyTo = (function (arglist__30130){
var args = cljs.core.seq(arglist__30130);
return G__30128__delegate(args);
});
G__30128.cljs$core$IFn$_invoke$arity$variadic = G__30128__delegate;
return G__30128;
})()
;
});
/**
* Takes a set of functions and returns a fn that is the composition
* of those fns.  The returned fn takes a variable number of args,
* applies the rightmost of fns to the args, the next
* fn (right-to-left) to the result, etc.
* @param {...*} var_args
*/
cljs.core.comp = (function() {
var comp = null;
var comp__0 = (function (){
return cljs.core.identity;
});
var comp__1 = (function (f){
return f;
});
var comp__2 = (function (f,g){
return (function() {
var G__30185 = null;
var G__30185__0 = (function (){
var G__30158 = (function (){return (g.cljs$core$IFn$_invoke$arity$0 ? g.cljs$core$IFn$_invoke$arity$0() : g.call(null));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__30158) : f.call(null,G__30158));
});
var G__30185__1 = (function (x){
var G__30159 = (function (){var G__30160 = x;
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__30160) : g.call(null,G__30160));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__30159) : f.call(null,G__30159));
});
var G__30185__2 = (function (x,y){
var G__30161 = (function (){var G__30162 = x;
var G__30163 = y;
return (g.cljs$core$IFn$_invoke$arity$2 ? g.cljs$core$IFn$_invoke$arity$2(G__30162,G__30163) : g.call(null,G__30162,G__30163));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__30161) : f.call(null,G__30161));
});
var G__30185__3 = (function (x,y,z){
var G__30164 = (function (){var G__30165 = x;
var G__30166 = y;
var G__30167 = z;
return (g.cljs$core$IFn$_invoke$arity$3 ? g.cljs$core$IFn$_invoke$arity$3(G__30165,G__30166,G__30167) : g.call(null,G__30165,G__30166,G__30167));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__30164) : f.call(null,G__30164));
});
var G__30185__4 = (function() { 
var G__30186__delegate = function (x,y,z,args){
var G__30168 = cljs.core.apply.cljs$core$IFn$_invoke$arity$5(g,x,y,z,args);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__30168) : f.call(null,G__30168));
};
var G__30186 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__30187__i = 0, G__30187__a = new Array(arguments.length -  3);
while (G__30187__i < G__30187__a.length) {G__30187__a[G__30187__i] = arguments[G__30187__i + 3]; ++G__30187__i;}
  args = new cljs.core.IndexedSeq(G__30187__a,0);
} 
return G__30186__delegate.call(this,x,y,z,args);};
G__30186.cljs$lang$maxFixedArity = 3;
G__30186.cljs$lang$applyTo = (function (arglist__30188){
var x = cljs.core.first(arglist__30188);
arglist__30188 = cljs.core.next(arglist__30188);
var y = cljs.core.first(arglist__30188);
arglist__30188 = cljs.core.next(arglist__30188);
var z = cljs.core.first(arglist__30188);
var args = cljs.core.rest(arglist__30188);
return G__30186__delegate(x,y,z,args);
});
G__30186.cljs$core$IFn$_invoke$arity$variadic = G__30186__delegate;
return G__30186;
})()
;
G__30185 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__30185__0.call(this);
case 1:
return G__30185__1.call(this,x);
case 2:
return G__30185__2.call(this,x,y);
case 3:
return G__30185__3.call(this,x,y,z);
default:
var G__30189 = null;
if (arguments.length > 3) {
var G__30190__i = 0, G__30190__a = new Array(arguments.length -  3);
while (G__30190__i < G__30190__a.length) {G__30190__a[G__30190__i] = arguments[G__30190__i + 3]; ++G__30190__i;}
G__30189 = new cljs.core.IndexedSeq(G__30190__a,0);
}
return G__30185__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__30189);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__30185.cljs$lang$maxFixedArity = 3;
G__30185.cljs$lang$applyTo = G__30185__4.cljs$lang$applyTo;
G__30185.cljs$core$IFn$_invoke$arity$0 = G__30185__0;
G__30185.cljs$core$IFn$_invoke$arity$1 = G__30185__1;
G__30185.cljs$core$IFn$_invoke$arity$2 = G__30185__2;
G__30185.cljs$core$IFn$_invoke$arity$3 = G__30185__3;
G__30185.cljs$core$IFn$_invoke$arity$variadic = G__30185__4.cljs$core$IFn$_invoke$arity$variadic;
return G__30185;
})()
});
var comp__3 = (function (f,g,h){
return (function() {
var G__30191 = null;
var G__30191__0 = (function (){
var G__30169 = (function (){var G__30170 = (function (){return (h.cljs$core$IFn$_invoke$arity$0 ? h.cljs$core$IFn$_invoke$arity$0() : h.call(null));
})();
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__30170) : g.call(null,G__30170));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__30169) : f.call(null,G__30169));
});
var G__30191__1 = (function (x){
var G__30171 = (function (){var G__30172 = (function (){var G__30173 = x;
return (h.cljs$core$IFn$_invoke$arity$1 ? h.cljs$core$IFn$_invoke$arity$1(G__30173) : h.call(null,G__30173));
})();
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__30172) : g.call(null,G__30172));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__30171) : f.call(null,G__30171));
});
var G__30191__2 = (function (x,y){
var G__30174 = (function (){var G__30175 = (function (){var G__30176 = x;
var G__30177 = y;
return (h.cljs$core$IFn$_invoke$arity$2 ? h.cljs$core$IFn$_invoke$arity$2(G__30176,G__30177) : h.call(null,G__30176,G__30177));
})();
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__30175) : g.call(null,G__30175));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__30174) : f.call(null,G__30174));
});
var G__30191__3 = (function (x,y,z){
var G__30178 = (function (){var G__30179 = (function (){var G__30180 = x;
var G__30181 = y;
var G__30182 = z;
return (h.cljs$core$IFn$_invoke$arity$3 ? h.cljs$core$IFn$_invoke$arity$3(G__30180,G__30181,G__30182) : h.call(null,G__30180,G__30181,G__30182));
})();
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__30179) : g.call(null,G__30179));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__30178) : f.call(null,G__30178));
});
var G__30191__4 = (function() { 
var G__30192__delegate = function (x,y,z,args){
var G__30183 = (function (){var G__30184 = cljs.core.apply.cljs$core$IFn$_invoke$arity$5(h,x,y,z,args);
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__30184) : g.call(null,G__30184));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__30183) : f.call(null,G__30183));
};
var G__30192 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__30193__i = 0, G__30193__a = new Array(arguments.length -  3);
while (G__30193__i < G__30193__a.length) {G__30193__a[G__30193__i] = arguments[G__30193__i + 3]; ++G__30193__i;}
  args = new cljs.core.IndexedSeq(G__30193__a,0);
} 
return G__30192__delegate.call(this,x,y,z,args);};
G__30192.cljs$lang$maxFixedArity = 3;
G__30192.cljs$lang$applyTo = (function (arglist__30194){
var x = cljs.core.first(arglist__30194);
arglist__30194 = cljs.core.next(arglist__30194);
var y = cljs.core.first(arglist__30194);
arglist__30194 = cljs.core.next(arglist__30194);
var z = cljs.core.first(arglist__30194);
var args = cljs.core.rest(arglist__30194);
return G__30192__delegate(x,y,z,args);
});
G__30192.cljs$core$IFn$_invoke$arity$variadic = G__30192__delegate;
return G__30192;
})()
;
G__30191 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__30191__0.call(this);
case 1:
return G__30191__1.call(this,x);
case 2:
return G__30191__2.call(this,x,y);
case 3:
return G__30191__3.call(this,x,y,z);
default:
var G__30195 = null;
if (arguments.length > 3) {
var G__30196__i = 0, G__30196__a = new Array(arguments.length -  3);
while (G__30196__i < G__30196__a.length) {G__30196__a[G__30196__i] = arguments[G__30196__i + 3]; ++G__30196__i;}
G__30195 = new cljs.core.IndexedSeq(G__30196__a,0);
}
return G__30191__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__30195);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__30191.cljs$lang$maxFixedArity = 3;
G__30191.cljs$lang$applyTo = G__30191__4.cljs$lang$applyTo;
G__30191.cljs$core$IFn$_invoke$arity$0 = G__30191__0;
G__30191.cljs$core$IFn$_invoke$arity$1 = G__30191__1;
G__30191.cljs$core$IFn$_invoke$arity$2 = G__30191__2;
G__30191.cljs$core$IFn$_invoke$arity$3 = G__30191__3;
G__30191.cljs$core$IFn$_invoke$arity$variadic = G__30191__4.cljs$core$IFn$_invoke$arity$variadic;
return G__30191;
})()
});
var comp__4 = (function() { 
var G__30197__delegate = function (f1,f2,f3,fs){
var fs__$1 = cljs.core.reverse(cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(f1,f2,f3,fs));
return ((function (fs__$1){
return (function() { 
var G__30198__delegate = function (args){
var ret = cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.first(fs__$1),args);
var fs__$2 = cljs.core.next(fs__$1);
while(true){
if(fs__$2){
var G__30199 = cljs.core.first(fs__$2).call(null,ret);
var G__30200 = cljs.core.next(fs__$2);
ret = G__30199;
fs__$2 = G__30200;
continue;
} else {
return ret;
}
break;
}
};
var G__30198 = function (var_args){
var args = null;
if (arguments.length > 0) {
var G__30201__i = 0, G__30201__a = new Array(arguments.length -  0);
while (G__30201__i < G__30201__a.length) {G__30201__a[G__30201__i] = arguments[G__30201__i + 0]; ++G__30201__i;}
  args = new cljs.core.IndexedSeq(G__30201__a,0);
} 
return G__30198__delegate.call(this,args);};
G__30198.cljs$lang$maxFixedArity = 0;
G__30198.cljs$lang$applyTo = (function (arglist__30202){
var args = cljs.core.seq(arglist__30202);
return G__30198__delegate(args);
});
G__30198.cljs$core$IFn$_invoke$arity$variadic = G__30198__delegate;
return G__30198;
})()
;
;})(fs__$1))
};
var G__30197 = function (f1,f2,f3,var_args){
var fs = null;
if (arguments.length > 3) {
var G__30203__i = 0, G__30203__a = new Array(arguments.length -  3);
while (G__30203__i < G__30203__a.length) {G__30203__a[G__30203__i] = arguments[G__30203__i + 3]; ++G__30203__i;}
  fs = new cljs.core.IndexedSeq(G__30203__a,0);
} 
return G__30197__delegate.call(this,f1,f2,f3,fs);};
G__30197.cljs$lang$maxFixedArity = 3;
G__30197.cljs$lang$applyTo = (function (arglist__30204){
var f1 = cljs.core.first(arglist__30204);
arglist__30204 = cljs.core.next(arglist__30204);
var f2 = cljs.core.first(arglist__30204);
arglist__30204 = cljs.core.next(arglist__30204);
var f3 = cljs.core.first(arglist__30204);
var fs = cljs.core.rest(arglist__30204);
return G__30197__delegate(f1,f2,f3,fs);
});
G__30197.cljs$core$IFn$_invoke$arity$variadic = G__30197__delegate;
return G__30197;
})()
;
comp = function(f1,f2,f3,var_args){
var fs = var_args;
switch(arguments.length){
case 0:
return comp__0.call(this);
case 1:
return comp__1.call(this,f1);
case 2:
return comp__2.call(this,f1,f2);
case 3:
return comp__3.call(this,f1,f2,f3);
default:
var G__30205 = null;
if (arguments.length > 3) {
var G__30206__i = 0, G__30206__a = new Array(arguments.length -  3);
while (G__30206__i < G__30206__a.length) {G__30206__a[G__30206__i] = arguments[G__30206__i + 3]; ++G__30206__i;}
G__30205 = new cljs.core.IndexedSeq(G__30206__a,0);
}
return comp__4.cljs$core$IFn$_invoke$arity$variadic(f1,f2,f3, G__30205);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
comp.cljs$lang$maxFixedArity = 3;
comp.cljs$lang$applyTo = comp__4.cljs$lang$applyTo;
comp.cljs$core$IFn$_invoke$arity$0 = comp__0;
comp.cljs$core$IFn$_invoke$arity$1 = comp__1;
comp.cljs$core$IFn$_invoke$arity$2 = comp__2;
comp.cljs$core$IFn$_invoke$arity$3 = comp__3;
comp.cljs$core$IFn$_invoke$arity$variadic = comp__4.cljs$core$IFn$_invoke$arity$variadic;
return comp;
})()
;
/**
* Takes a function f and fewer than the normal arguments to f, and
* returns a fn that takes a variable number of additional args. When
* called, the returned function calls f with args + additional args.
* @param {...*} var_args
*/
cljs.core.partial = (function() {
var partial = null;
var partial__1 = (function (f){
return f;
});
var partial__2 = (function (f,arg1){
return (function() {
var G__30291 = null;
var G__30291__0 = (function (){
var G__30249 = arg1;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__30249) : f.call(null,G__30249));
});
var G__30291__1 = (function (x){
var G__30250 = arg1;
var G__30251 = x;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__30250,G__30251) : f.call(null,G__30250,G__30251));
});
var G__30291__2 = (function (x,y){
var G__30252 = arg1;
var G__30253 = x;
var G__30254 = y;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__30252,G__30253,G__30254) : f.call(null,G__30252,G__30253,G__30254));
});
var G__30291__3 = (function (x,y,z){
var G__30255 = arg1;
var G__30256 = x;
var G__30257 = y;
var G__30258 = z;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__30255,G__30256,G__30257,G__30258) : f.call(null,G__30255,G__30256,G__30257,G__30258));
});
var G__30291__4 = (function() { 
var G__30292__delegate = function (x,y,z,args){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f,arg1,x,y,z,cljs.core.array_seq([args], 0));
};
var G__30292 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__30293__i = 0, G__30293__a = new Array(arguments.length -  3);
while (G__30293__i < G__30293__a.length) {G__30293__a[G__30293__i] = arguments[G__30293__i + 3]; ++G__30293__i;}
  args = new cljs.core.IndexedSeq(G__30293__a,0);
} 
return G__30292__delegate.call(this,x,y,z,args);};
G__30292.cljs$lang$maxFixedArity = 3;
G__30292.cljs$lang$applyTo = (function (arglist__30294){
var x = cljs.core.first(arglist__30294);
arglist__30294 = cljs.core.next(arglist__30294);
var y = cljs.core.first(arglist__30294);
arglist__30294 = cljs.core.next(arglist__30294);
var z = cljs.core.first(arglist__30294);
var args = cljs.core.rest(arglist__30294);
return G__30292__delegate(x,y,z,args);
});
G__30292.cljs$core$IFn$_invoke$arity$variadic = G__30292__delegate;
return G__30292;
})()
;
G__30291 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__30291__0.call(this);
case 1:
return G__30291__1.call(this,x);
case 2:
return G__30291__2.call(this,x,y);
case 3:
return G__30291__3.call(this,x,y,z);
default:
var G__30295 = null;
if (arguments.length > 3) {
var G__30296__i = 0, G__30296__a = new Array(arguments.length -  3);
while (G__30296__i < G__30296__a.length) {G__30296__a[G__30296__i] = arguments[G__30296__i + 3]; ++G__30296__i;}
G__30295 = new cljs.core.IndexedSeq(G__30296__a,0);
}
return G__30291__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__30295);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__30291.cljs$lang$maxFixedArity = 3;
G__30291.cljs$lang$applyTo = G__30291__4.cljs$lang$applyTo;
G__30291.cljs$core$IFn$_invoke$arity$0 = G__30291__0;
G__30291.cljs$core$IFn$_invoke$arity$1 = G__30291__1;
G__30291.cljs$core$IFn$_invoke$arity$2 = G__30291__2;
G__30291.cljs$core$IFn$_invoke$arity$3 = G__30291__3;
G__30291.cljs$core$IFn$_invoke$arity$variadic = G__30291__4.cljs$core$IFn$_invoke$arity$variadic;
return G__30291;
})()
});
var partial__3 = (function (f,arg1,arg2){
return (function() {
var G__30297 = null;
var G__30297__0 = (function (){
var G__30259 = arg1;
var G__30260 = arg2;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__30259,G__30260) : f.call(null,G__30259,G__30260));
});
var G__30297__1 = (function (x){
var G__30261 = arg1;
var G__30262 = arg2;
var G__30263 = x;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__30261,G__30262,G__30263) : f.call(null,G__30261,G__30262,G__30263));
});
var G__30297__2 = (function (x,y){
var G__30264 = arg1;
var G__30265 = arg2;
var G__30266 = x;
var G__30267 = y;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__30264,G__30265,G__30266,G__30267) : f.call(null,G__30264,G__30265,G__30266,G__30267));
});
var G__30297__3 = (function (x,y,z){
var G__30268 = arg1;
var G__30269 = arg2;
var G__30270 = x;
var G__30271 = y;
var G__30272 = z;
return (f.cljs$core$IFn$_invoke$arity$5 ? f.cljs$core$IFn$_invoke$arity$5(G__30268,G__30269,G__30270,G__30271,G__30272) : f.call(null,G__30268,G__30269,G__30270,G__30271,G__30272));
});
var G__30297__4 = (function() { 
var G__30298__delegate = function (x,y,z,args){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f,arg1,arg2,x,y,cljs.core.array_seq([z,args], 0));
};
var G__30298 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__30299__i = 0, G__30299__a = new Array(arguments.length -  3);
while (G__30299__i < G__30299__a.length) {G__30299__a[G__30299__i] = arguments[G__30299__i + 3]; ++G__30299__i;}
  args = new cljs.core.IndexedSeq(G__30299__a,0);
} 
return G__30298__delegate.call(this,x,y,z,args);};
G__30298.cljs$lang$maxFixedArity = 3;
G__30298.cljs$lang$applyTo = (function (arglist__30300){
var x = cljs.core.first(arglist__30300);
arglist__30300 = cljs.core.next(arglist__30300);
var y = cljs.core.first(arglist__30300);
arglist__30300 = cljs.core.next(arglist__30300);
var z = cljs.core.first(arglist__30300);
var args = cljs.core.rest(arglist__30300);
return G__30298__delegate(x,y,z,args);
});
G__30298.cljs$core$IFn$_invoke$arity$variadic = G__30298__delegate;
return G__30298;
})()
;
G__30297 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__30297__0.call(this);
case 1:
return G__30297__1.call(this,x);
case 2:
return G__30297__2.call(this,x,y);
case 3:
return G__30297__3.call(this,x,y,z);
default:
var G__30301 = null;
if (arguments.length > 3) {
var G__30302__i = 0, G__30302__a = new Array(arguments.length -  3);
while (G__30302__i < G__30302__a.length) {G__30302__a[G__30302__i] = arguments[G__30302__i + 3]; ++G__30302__i;}
G__30301 = new cljs.core.IndexedSeq(G__30302__a,0);
}
return G__30297__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__30301);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__30297.cljs$lang$maxFixedArity = 3;
G__30297.cljs$lang$applyTo = G__30297__4.cljs$lang$applyTo;
G__30297.cljs$core$IFn$_invoke$arity$0 = G__30297__0;
G__30297.cljs$core$IFn$_invoke$arity$1 = G__30297__1;
G__30297.cljs$core$IFn$_invoke$arity$2 = G__30297__2;
G__30297.cljs$core$IFn$_invoke$arity$3 = G__30297__3;
G__30297.cljs$core$IFn$_invoke$arity$variadic = G__30297__4.cljs$core$IFn$_invoke$arity$variadic;
return G__30297;
})()
});
var partial__4 = (function (f,arg1,arg2,arg3){
return (function() {
var G__30303 = null;
var G__30303__0 = (function (){
var G__30273 = arg1;
var G__30274 = arg2;
var G__30275 = arg3;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__30273,G__30274,G__30275) : f.call(null,G__30273,G__30274,G__30275));
});
var G__30303__1 = (function (x){
var G__30276 = arg1;
var G__30277 = arg2;
var G__30278 = arg3;
var G__30279 = x;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__30276,G__30277,G__30278,G__30279) : f.call(null,G__30276,G__30277,G__30278,G__30279));
});
var G__30303__2 = (function (x,y){
var G__30280 = arg1;
var G__30281 = arg2;
var G__30282 = arg3;
var G__30283 = x;
var G__30284 = y;
return (f.cljs$core$IFn$_invoke$arity$5 ? f.cljs$core$IFn$_invoke$arity$5(G__30280,G__30281,G__30282,G__30283,G__30284) : f.call(null,G__30280,G__30281,G__30282,G__30283,G__30284));
});
var G__30303__3 = (function (x,y,z){
var G__30285 = arg1;
var G__30286 = arg2;
var G__30287 = arg3;
var G__30288 = x;
var G__30289 = y;
var G__30290 = z;
return (f.cljs$core$IFn$_invoke$arity$6 ? f.cljs$core$IFn$_invoke$arity$6(G__30285,G__30286,G__30287,G__30288,G__30289,G__30290) : f.call(null,G__30285,G__30286,G__30287,G__30288,G__30289,G__30290));
});
var G__30303__4 = (function() { 
var G__30304__delegate = function (x,y,z,args){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f,arg1,arg2,arg3,x,cljs.core.array_seq([y,z,args], 0));
};
var G__30304 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__30305__i = 0, G__30305__a = new Array(arguments.length -  3);
while (G__30305__i < G__30305__a.length) {G__30305__a[G__30305__i] = arguments[G__30305__i + 3]; ++G__30305__i;}
  args = new cljs.core.IndexedSeq(G__30305__a,0);
} 
return G__30304__delegate.call(this,x,y,z,args);};
G__30304.cljs$lang$maxFixedArity = 3;
G__30304.cljs$lang$applyTo = (function (arglist__30306){
var x = cljs.core.first(arglist__30306);
arglist__30306 = cljs.core.next(arglist__30306);
var y = cljs.core.first(arglist__30306);
arglist__30306 = cljs.core.next(arglist__30306);
var z = cljs.core.first(arglist__30306);
var args = cljs.core.rest(arglist__30306);
return G__30304__delegate(x,y,z,args);
});
G__30304.cljs$core$IFn$_invoke$arity$variadic = G__30304__delegate;
return G__30304;
})()
;
G__30303 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__30303__0.call(this);
case 1:
return G__30303__1.call(this,x);
case 2:
return G__30303__2.call(this,x,y);
case 3:
return G__30303__3.call(this,x,y,z);
default:
var G__30307 = null;
if (arguments.length > 3) {
var G__30308__i = 0, G__30308__a = new Array(arguments.length -  3);
while (G__30308__i < G__30308__a.length) {G__30308__a[G__30308__i] = arguments[G__30308__i + 3]; ++G__30308__i;}
G__30307 = new cljs.core.IndexedSeq(G__30308__a,0);
}
return G__30303__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__30307);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__30303.cljs$lang$maxFixedArity = 3;
G__30303.cljs$lang$applyTo = G__30303__4.cljs$lang$applyTo;
G__30303.cljs$core$IFn$_invoke$arity$0 = G__30303__0;
G__30303.cljs$core$IFn$_invoke$arity$1 = G__30303__1;
G__30303.cljs$core$IFn$_invoke$arity$2 = G__30303__2;
G__30303.cljs$core$IFn$_invoke$arity$3 = G__30303__3;
G__30303.cljs$core$IFn$_invoke$arity$variadic = G__30303__4.cljs$core$IFn$_invoke$arity$variadic;
return G__30303;
})()
});
var partial__5 = (function() { 
var G__30309__delegate = function (f,arg1,arg2,arg3,more){
return (function() { 
var G__30310__delegate = function (args){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,arg1,arg2,arg3,cljs.core.concat.cljs$core$IFn$_invoke$arity$2(more,args));
};
var G__30310 = function (var_args){
var args = null;
if (arguments.length > 0) {
var G__30311__i = 0, G__30311__a = new Array(arguments.length -  0);
while (G__30311__i < G__30311__a.length) {G__30311__a[G__30311__i] = arguments[G__30311__i + 0]; ++G__30311__i;}
  args = new cljs.core.IndexedSeq(G__30311__a,0);
} 
return G__30310__delegate.call(this,args);};
G__30310.cljs$lang$maxFixedArity = 0;
G__30310.cljs$lang$applyTo = (function (arglist__30312){
var args = cljs.core.seq(arglist__30312);
return G__30310__delegate(args);
});
G__30310.cljs$core$IFn$_invoke$arity$variadic = G__30310__delegate;
return G__30310;
})()
;
};
var G__30309 = function (f,arg1,arg2,arg3,var_args){
var more = null;
if (arguments.length > 4) {
var G__30313__i = 0, G__30313__a = new Array(arguments.length -  4);
while (G__30313__i < G__30313__a.length) {G__30313__a[G__30313__i] = arguments[G__30313__i + 4]; ++G__30313__i;}
  more = new cljs.core.IndexedSeq(G__30313__a,0);
} 
return G__30309__delegate.call(this,f,arg1,arg2,arg3,more);};
G__30309.cljs$lang$maxFixedArity = 4;
G__30309.cljs$lang$applyTo = (function (arglist__30314){
var f = cljs.core.first(arglist__30314);
arglist__30314 = cljs.core.next(arglist__30314);
var arg1 = cljs.core.first(arglist__30314);
arglist__30314 = cljs.core.next(arglist__30314);
var arg2 = cljs.core.first(arglist__30314);
arglist__30314 = cljs.core.next(arglist__30314);
var arg3 = cljs.core.first(arglist__30314);
var more = cljs.core.rest(arglist__30314);
return G__30309__delegate(f,arg1,arg2,arg3,more);
});
G__30309.cljs$core$IFn$_invoke$arity$variadic = G__30309__delegate;
return G__30309;
})()
;
partial = function(f,arg1,arg2,arg3,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return partial__1.call(this,f);
case 2:
return partial__2.call(this,f,arg1);
case 3:
return partial__3.call(this,f,arg1,arg2);
case 4:
return partial__4.call(this,f,arg1,arg2,arg3);
default:
var G__30315 = null;
if (arguments.length > 4) {
var G__30316__i = 0, G__30316__a = new Array(arguments.length -  4);
while (G__30316__i < G__30316__a.length) {G__30316__a[G__30316__i] = arguments[G__30316__i + 4]; ++G__30316__i;}
G__30315 = new cljs.core.IndexedSeq(G__30316__a,0);
}
return partial__5.cljs$core$IFn$_invoke$arity$variadic(f,arg1,arg2,arg3, G__30315);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
partial.cljs$lang$maxFixedArity = 4;
partial.cljs$lang$applyTo = partial__5.cljs$lang$applyTo;
partial.cljs$core$IFn$_invoke$arity$1 = partial__1;
partial.cljs$core$IFn$_invoke$arity$2 = partial__2;
partial.cljs$core$IFn$_invoke$arity$3 = partial__3;
partial.cljs$core$IFn$_invoke$arity$4 = partial__4;
partial.cljs$core$IFn$_invoke$arity$variadic = partial__5.cljs$core$IFn$_invoke$arity$variadic;
return partial;
})()
;
/**
* Takes a function f, and returns a function that calls f, replacing
* a nil first argument to f with the supplied value x. Higher arity
* versions can replace arguments in the second and third
* positions (y, z). Note that the function f can take any number of
* arguments, not just the one(s) being nil-patched.
*/
cljs.core.fnil = (function() {
var fnil = null;
var fnil__2 = (function (f,x){
return (function() {
var G__30349 = null;
var G__30349__1 = (function (a){
var G__30333 = (((a == null))?x:a);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__30333) : f.call(null,G__30333));
});
var G__30349__2 = (function (a,b){
var G__30334 = (((a == null))?x:a);
var G__30335 = b;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__30334,G__30335) : f.call(null,G__30334,G__30335));
});
var G__30349__3 = (function (a,b,c){
var G__30336 = (((a == null))?x:a);
var G__30337 = b;
var G__30338 = c;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__30336,G__30337,G__30338) : f.call(null,G__30336,G__30337,G__30338));
});
var G__30349__4 = (function() { 
var G__30350__delegate = function (a,b,c,ds){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,(((a == null))?x:a),b,c,ds);
};
var G__30350 = function (a,b,c,var_args){
var ds = null;
if (arguments.length > 3) {
var G__30351__i = 0, G__30351__a = new Array(arguments.length -  3);
while (G__30351__i < G__30351__a.length) {G__30351__a[G__30351__i] = arguments[G__30351__i + 3]; ++G__30351__i;}
  ds = new cljs.core.IndexedSeq(G__30351__a,0);
} 
return G__30350__delegate.call(this,a,b,c,ds);};
G__30350.cljs$lang$maxFixedArity = 3;
G__30350.cljs$lang$applyTo = (function (arglist__30352){
var a = cljs.core.first(arglist__30352);
arglist__30352 = cljs.core.next(arglist__30352);
var b = cljs.core.first(arglist__30352);
arglist__30352 = cljs.core.next(arglist__30352);
var c = cljs.core.first(arglist__30352);
var ds = cljs.core.rest(arglist__30352);
return G__30350__delegate(a,b,c,ds);
});
G__30350.cljs$core$IFn$_invoke$arity$variadic = G__30350__delegate;
return G__30350;
})()
;
G__30349 = function(a,b,c,var_args){
var ds = var_args;
switch(arguments.length){
case 1:
return G__30349__1.call(this,a);
case 2:
return G__30349__2.call(this,a,b);
case 3:
return G__30349__3.call(this,a,b,c);
default:
var G__30353 = null;
if (arguments.length > 3) {
var G__30354__i = 0, G__30354__a = new Array(arguments.length -  3);
while (G__30354__i < G__30354__a.length) {G__30354__a[G__30354__i] = arguments[G__30354__i + 3]; ++G__30354__i;}
G__30353 = new cljs.core.IndexedSeq(G__30354__a,0);
}
return G__30349__4.cljs$core$IFn$_invoke$arity$variadic(a,b,c, G__30353);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__30349.cljs$lang$maxFixedArity = 3;
G__30349.cljs$lang$applyTo = G__30349__4.cljs$lang$applyTo;
G__30349.cljs$core$IFn$_invoke$arity$1 = G__30349__1;
G__30349.cljs$core$IFn$_invoke$arity$2 = G__30349__2;
G__30349.cljs$core$IFn$_invoke$arity$3 = G__30349__3;
G__30349.cljs$core$IFn$_invoke$arity$variadic = G__30349__4.cljs$core$IFn$_invoke$arity$variadic;
return G__30349;
})()
});
var fnil__3 = (function (f,x,y){
return (function() {
var G__30355 = null;
var G__30355__2 = (function (a,b){
var G__30339 = (((a == null))?x:a);
var G__30340 = (((b == null))?y:b);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__30339,G__30340) : f.call(null,G__30339,G__30340));
});
var G__30355__3 = (function (a,b,c){
var G__30341 = (((a == null))?x:a);
var G__30342 = (((b == null))?y:b);
var G__30343 = c;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__30341,G__30342,G__30343) : f.call(null,G__30341,G__30342,G__30343));
});
var G__30355__4 = (function() { 
var G__30356__delegate = function (a,b,c,ds){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,(((a == null))?x:a),(((b == null))?y:b),c,ds);
};
var G__30356 = function (a,b,c,var_args){
var ds = null;
if (arguments.length > 3) {
var G__30357__i = 0, G__30357__a = new Array(arguments.length -  3);
while (G__30357__i < G__30357__a.length) {G__30357__a[G__30357__i] = arguments[G__30357__i + 3]; ++G__30357__i;}
  ds = new cljs.core.IndexedSeq(G__30357__a,0);
} 
return G__30356__delegate.call(this,a,b,c,ds);};
G__30356.cljs$lang$maxFixedArity = 3;
G__30356.cljs$lang$applyTo = (function (arglist__30358){
var a = cljs.core.first(arglist__30358);
arglist__30358 = cljs.core.next(arglist__30358);
var b = cljs.core.first(arglist__30358);
arglist__30358 = cljs.core.next(arglist__30358);
var c = cljs.core.first(arglist__30358);
var ds = cljs.core.rest(arglist__30358);
return G__30356__delegate(a,b,c,ds);
});
G__30356.cljs$core$IFn$_invoke$arity$variadic = G__30356__delegate;
return G__30356;
})()
;
G__30355 = function(a,b,c,var_args){
var ds = var_args;
switch(arguments.length){
case 2:
return G__30355__2.call(this,a,b);
case 3:
return G__30355__3.call(this,a,b,c);
default:
var G__30359 = null;
if (arguments.length > 3) {
var G__30360__i = 0, G__30360__a = new Array(arguments.length -  3);
while (G__30360__i < G__30360__a.length) {G__30360__a[G__30360__i] = arguments[G__30360__i + 3]; ++G__30360__i;}
G__30359 = new cljs.core.IndexedSeq(G__30360__a,0);
}
return G__30355__4.cljs$core$IFn$_invoke$arity$variadic(a,b,c, G__30359);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__30355.cljs$lang$maxFixedArity = 3;
G__30355.cljs$lang$applyTo = G__30355__4.cljs$lang$applyTo;
G__30355.cljs$core$IFn$_invoke$arity$2 = G__30355__2;
G__30355.cljs$core$IFn$_invoke$arity$3 = G__30355__3;
G__30355.cljs$core$IFn$_invoke$arity$variadic = G__30355__4.cljs$core$IFn$_invoke$arity$variadic;
return G__30355;
})()
});
var fnil__4 = (function (f,x,y,z){
return (function() {
var G__30361 = null;
var G__30361__2 = (function (a,b){
var G__30344 = (((a == null))?x:a);
var G__30345 = (((b == null))?y:b);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__30344,G__30345) : f.call(null,G__30344,G__30345));
});
var G__30361__3 = (function (a,b,c){
var G__30346 = (((a == null))?x:a);
var G__30347 = (((b == null))?y:b);
var G__30348 = (((c == null))?z:c);
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__30346,G__30347,G__30348) : f.call(null,G__30346,G__30347,G__30348));
});
var G__30361__4 = (function() { 
var G__30362__delegate = function (a,b,c,ds){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,(((a == null))?x:a),(((b == null))?y:b),(((c == null))?z:c),ds);
};
var G__30362 = function (a,b,c,var_args){
var ds = null;
if (arguments.length > 3) {
var G__30363__i = 0, G__30363__a = new Array(arguments.length -  3);
while (G__30363__i < G__30363__a.length) {G__30363__a[G__30363__i] = arguments[G__30363__i + 3]; ++G__30363__i;}
  ds = new cljs.core.IndexedSeq(G__30363__a,0);
} 
return G__30362__delegate.call(this,a,b,c,ds);};
G__30362.cljs$lang$maxFixedArity = 3;
G__30362.cljs$lang$applyTo = (function (arglist__30364){
var a = cljs.core.first(arglist__30364);
arglist__30364 = cljs.core.next(arglist__30364);
var b = cljs.core.first(arglist__30364);
arglist__30364 = cljs.core.next(arglist__30364);
var c = cljs.core.first(arglist__30364);
var ds = cljs.core.rest(arglist__30364);
return G__30362__delegate(a,b,c,ds);
});
G__30362.cljs$core$IFn$_invoke$arity$variadic = G__30362__delegate;
return G__30362;
})()
;
G__30361 = function(a,b,c,var_args){
var ds = var_args;
switch(arguments.length){
case 2:
return G__30361__2.call(this,a,b);
case 3:
return G__30361__3.call(this,a,b,c);
default:
var G__30365 = null;
if (arguments.length > 3) {
var G__30366__i = 0, G__30366__a = new Array(arguments.length -  3);
while (G__30366__i < G__30366__a.length) {G__30366__a[G__30366__i] = arguments[G__30366__i + 3]; ++G__30366__i;}
G__30365 = new cljs.core.IndexedSeq(G__30366__a,0);
}
return G__30361__4.cljs$core$IFn$_invoke$arity$variadic(a,b,c, G__30365);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__30361.cljs$lang$maxFixedArity = 3;
G__30361.cljs$lang$applyTo = G__30361__4.cljs$lang$applyTo;
G__30361.cljs$core$IFn$_invoke$arity$2 = G__30361__2;
G__30361.cljs$core$IFn$_invoke$arity$3 = G__30361__3;
G__30361.cljs$core$IFn$_invoke$arity$variadic = G__30361__4.cljs$core$IFn$_invoke$arity$variadic;
return G__30361;
})()
});
fnil = function(f,x,y,z){
switch(arguments.length){
case 2:
return fnil__2.call(this,f,x);
case 3:
return fnil__3.call(this,f,x,y);
case 4:
return fnil__4.call(this,f,x,y,z);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
fnil.cljs$core$IFn$_invoke$arity$2 = fnil__2;
fnil.cljs$core$IFn$_invoke$arity$3 = fnil__3;
fnil.cljs$core$IFn$_invoke$arity$4 = fnil__4;
return fnil;
})()
;
/**
* Returns a lazy sequence consisting of the result of applying f to 0
* and the first item of coll, followed by applying f to 1 and the second
* item in coll, etc, until coll is exhausted. Thus function f should
* accept 2 arguments, index and item.
*/
cljs.core.map_indexed = (function map_indexed(f,coll){
var mapi = (function mapi(idx,coll__$1){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll__$1);
if(temp__4126__auto__){
var s = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(s)){
var c = cljs.core.chunk_first(s);
var size = cljs.core.count(c);
var b = cljs.core.chunk_buffer(size);
var n__25161__auto___30415 = size;
var i_30416 = (0);
while(true){
if((i_30416 < n__25161__auto___30415)){
cljs.core.chunk_append(b,(function (){var G__30411 = (idx + i_30416);
var G__30412 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c,i_30416);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__30411,G__30412) : f.call(null,G__30411,G__30412));
})());

var G__30417 = (i_30416 + (1));
i_30416 = G__30417;
continue;
} else {
}
break;
}

return cljs.core.chunk_cons(cljs.core.chunk(b),mapi((idx + size),cljs.core.chunk_rest(s)));
} else {
return cljs.core.cons((function (){var G__30413 = idx;
var G__30414 = cljs.core.first(s);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__30413,G__30414) : f.call(null,G__30413,G__30414));
})(),mapi((idx + (1)),cljs.core.rest(s)));
}
} else {
return null;
}
}),null,null));
});
return mapi((0),coll);
});
/**
* Returns a lazy sequence of the non-nil results of (f item). Note,
* this means false return values will be included.  f must be free of
* side-effects.  Returns a transducer when no collection is provided.
*/
cljs.core.keep = (function() {
var keep = null;
var keep__1 = (function (f){
return (function (rf){
return (function() {
var G__30436 = null;
var G__30436__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__30436__1 = (function (result){
var G__30430 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__30430) : rf.call(null,G__30430));
});
var G__30436__2 = (function (result,input){
var v = (function (){var G__30431 = input;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__30431) : f.call(null,G__30431));
})();
if((v == null)){
return result;
} else {
var G__30432 = result;
var G__30433 = v;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__30432,G__30433) : rf.call(null,G__30432,G__30433));
}
});
G__30436 = function(result,input){
switch(arguments.length){
case 0:
return G__30436__0.call(this);
case 1:
return G__30436__1.call(this,result);
case 2:
return G__30436__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__30436.cljs$core$IFn$_invoke$arity$0 = G__30436__0;
G__30436.cljs$core$IFn$_invoke$arity$1 = G__30436__1;
G__30436.cljs$core$IFn$_invoke$arity$2 = G__30436__2;
return G__30436;
})()
});
});
var keep__2 = (function (f,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(s)){
var c = cljs.core.chunk_first(s);
var size = cljs.core.count(c);
var b = cljs.core.chunk_buffer(size);
var n__25161__auto___30437 = size;
var i_30438 = (0);
while(true){
if((i_30438 < n__25161__auto___30437)){
var x_30439 = (function (){var G__30434 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c,i_30438);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__30434) : f.call(null,G__30434));
})();
if((x_30439 == null)){
} else {
cljs.core.chunk_append(b,x_30439);
}

var G__30440 = (i_30438 + (1));
i_30438 = G__30440;
continue;
} else {
}
break;
}

return cljs.core.chunk_cons(cljs.core.chunk(b),keep.cljs$core$IFn$_invoke$arity$2(f,cljs.core.chunk_rest(s)));
} else {
var x = (function (){var G__30435 = cljs.core.first(s);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__30435) : f.call(null,G__30435));
})();
if((x == null)){
return keep.cljs$core$IFn$_invoke$arity$2(f,cljs.core.rest(s));
} else {
return cljs.core.cons(x,keep.cljs$core$IFn$_invoke$arity$2(f,cljs.core.rest(s)));
}
}
} else {
return null;
}
}),null,null));
});
keep = function(f,coll){
switch(arguments.length){
case 1:
return keep__1.call(this,f);
case 2:
return keep__2.call(this,f,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
keep.cljs$core$IFn$_invoke$arity$1 = keep__1;
keep.cljs$core$IFn$_invoke$arity$2 = keep__2;
return keep;
})()
;

/**
* @constructor
*/
cljs.core.Atom = (function (state,meta,validator,watches){
this.state = state;
this.meta = meta;
this.validator = validator;
this.watches = watches;
this.cljs$lang$protocol_mask$partition0$ = 6455296;
this.cljs$lang$protocol_mask$partition1$ = 16386;
})
cljs.core.Atom.prototype.cljs$core$IHash$_hash$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
var G__30441 = this$__$1;
return goog.getUid(G__30441);
});

cljs.core.Atom.prototype.cljs$core$IWatchable$_notify_watches$arity$3 = (function (this$,oldval,newval){
var self__ = this;
var this$__$1 = this;
var seq__30442 = cljs.core.seq(self__.watches);
var chunk__30443 = null;
var count__30444 = (0);
var i__30445 = (0);
while(true){
if((i__30445 < count__30444)){
var vec__30446 = chunk__30443.cljs$core$IIndexed$_nth$arity$2(null,i__30445);
var key = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__30446,(0),null);
var f = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__30446,(1),null);
var G__30447_30456 = key;
var G__30448_30457 = this$__$1;
var G__30449_30458 = oldval;
var G__30450_30459 = newval;
(f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__30447_30456,G__30448_30457,G__30449_30458,G__30450_30459) : f.call(null,G__30447_30456,G__30448_30457,G__30449_30458,G__30450_30459));

var G__30460 = seq__30442;
var G__30461 = chunk__30443;
var G__30462 = count__30444;
var G__30463 = (i__30445 + (1));
seq__30442 = G__30460;
chunk__30443 = G__30461;
count__30444 = G__30462;
i__30445 = G__30463;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__30442);
if(temp__4126__auto__){
var seq__30442__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__30442__$1)){
var c__25061__auto__ = cljs.core.chunk_first(seq__30442__$1);
var G__30464 = cljs.core.chunk_rest(seq__30442__$1);
var G__30465 = c__25061__auto__;
var G__30466 = cljs.core.count(c__25061__auto__);
var G__30467 = (0);
seq__30442 = G__30464;
chunk__30443 = G__30465;
count__30444 = G__30466;
i__30445 = G__30467;
continue;
} else {
var vec__30451 = cljs.core.first(seq__30442__$1);
var key = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__30451,(0),null);
var f = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__30451,(1),null);
var G__30452_30468 = key;
var G__30453_30469 = this$__$1;
var G__30454_30470 = oldval;
var G__30455_30471 = newval;
(f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__30452_30468,G__30453_30469,G__30454_30470,G__30455_30471) : f.call(null,G__30452_30468,G__30453_30469,G__30454_30470,G__30455_30471));

var G__30472 = cljs.core.next(seq__30442__$1);
var G__30473 = null;
var G__30474 = (0);
var G__30475 = (0);
seq__30442 = G__30472;
chunk__30443 = G__30473;
count__30444 = G__30474;
i__30445 = G__30475;
continue;
}
} else {
return null;
}
}
break;
}
});

cljs.core.Atom.prototype.cljs$core$IWatchable$_add_watch$arity$3 = (function (this$,key,f){
var self__ = this;
var this$__$1 = this;
this$__$1.watches = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.watches,key,f);

return this$__$1;
});

cljs.core.Atom.prototype.cljs$core$IWatchable$_remove_watch$arity$2 = (function (this$,key){
var self__ = this;
var this$__$1 = this;
return this$__$1.watches = cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(self__.watches,key);
});

cljs.core.Atom.prototype.cljs$core$IMeta$_meta$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.meta;
});

cljs.core.Atom.prototype.cljs$core$IDeref$_deref$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.state;
});

cljs.core.Atom.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (o,other){
var self__ = this;
var o__$1 = this;
return (o__$1 === other);
});

cljs.core.Atom.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.Atom.cljs$lang$type = true;

cljs.core.Atom.cljs$lang$ctorStr = "cljs.core/Atom";

cljs.core.Atom.cljs$lang$ctorPrWriter = (function (this__24861__auto__,writer__24862__auto__,opt__24863__auto__){
return cljs.core._write(writer__24862__auto__,"cljs.core/Atom");
});

cljs.core.__GT_Atom = (function __GT_Atom(state,meta,validator,watches){
return (new cljs.core.Atom(state,meta,validator,watches));
});

/**
* Creates and returns an Atom with an initial value of x and zero or
* more options (in any order):
* 
* :meta metadata-map
* 
* :validator validate-fn
* 
* If metadata-map is supplied, it will be come the metadata on the
* atom. validate-fn must be nil or a side-effect-free fn of one
* argument, which will be passed the intended new state on any state
* change. If the new state is unacceptable, the validate-fn should
* return false or throw an Error.  If either of these error conditions
* occur, then the value of the atom will not change.
* @param {...*} var_args
*/
cljs.core.atom = (function() {
var atom = null;
var atom__1 = (function (x){
return (new cljs.core.Atom(x,null,null,null));
});
var atom__2 = (function() { 
var G__30479__delegate = function (x,p__30476){
var map__30478 = p__30476;
var map__30478__$1 = ((cljs.core.seq_QMARK_(map__30478))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__30478):map__30478);
var validator = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__30478__$1,new cljs.core.Keyword(null,"validator","validator",-1966190681));
var meta = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__30478__$1,new cljs.core.Keyword(null,"meta","meta",1499536964));
return (new cljs.core.Atom(x,meta,validator,null));
};
var G__30479 = function (x,var_args){
var p__30476 = null;
if (arguments.length > 1) {
var G__30480__i = 0, G__30480__a = new Array(arguments.length -  1);
while (G__30480__i < G__30480__a.length) {G__30480__a[G__30480__i] = arguments[G__30480__i + 1]; ++G__30480__i;}
  p__30476 = new cljs.core.IndexedSeq(G__30480__a,0);
} 
return G__30479__delegate.call(this,x,p__30476);};
G__30479.cljs$lang$maxFixedArity = 1;
G__30479.cljs$lang$applyTo = (function (arglist__30481){
var x = cljs.core.first(arglist__30481);
var p__30476 = cljs.core.rest(arglist__30481);
return G__30479__delegate(x,p__30476);
});
G__30479.cljs$core$IFn$_invoke$arity$variadic = G__30479__delegate;
return G__30479;
})()
;
atom = function(x,var_args){
var p__30476 = var_args;
switch(arguments.length){
case 1:
return atom__1.call(this,x);
default:
var G__30482 = null;
if (arguments.length > 1) {
var G__30483__i = 0, G__30483__a = new Array(arguments.length -  1);
while (G__30483__i < G__30483__a.length) {G__30483__a[G__30483__i] = arguments[G__30483__i + 1]; ++G__30483__i;}
G__30482 = new cljs.core.IndexedSeq(G__30483__a,0);
}
return atom__2.cljs$core$IFn$_invoke$arity$variadic(x, G__30482);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
atom.cljs$lang$maxFixedArity = 1;
atom.cljs$lang$applyTo = atom__2.cljs$lang$applyTo;
atom.cljs$core$IFn$_invoke$arity$1 = atom__1;
atom.cljs$core$IFn$_invoke$arity$variadic = atom__2.cljs$core$IFn$_invoke$arity$variadic;
return atom;
})()
;
/**
* Sets the value of atom to newval without regard for the
* current value. Returns newval.
*/
cljs.core.reset_BANG_ = (function reset_BANG_(a,new_value){
if((a instanceof cljs.core.Atom)){
var validate = a.validator;
if((validate == null)){
} else {
if(cljs.core.truth_((function (){var G__30486 = new_value;
return (validate.cljs$core$IFn$_invoke$arity$1 ? validate.cljs$core$IFn$_invoke$arity$1(G__30486) : validate.call(null,G__30486));
})())){
} else {
throw (new Error([cljs.core.str("Assert failed: "),cljs.core.str("Validator rejected reference state"),cljs.core.str("\n"),cljs.core.str((function (){var G__30487 = cljs.core.list(new cljs.core.Symbol(null,"validate","validate",1439230700,null),new cljs.core.Symbol(null,"new-value","new-value",-1567397401,null));
return (cljs.core.pr_str.cljs$core$IFn$_invoke$arity$1 ? cljs.core.pr_str.cljs$core$IFn$_invoke$arity$1(G__30487) : cljs.core.pr_str.call(null,G__30487));
})())].join('')));
}
}

var old_value = a.state;
a.state = new_value;

if((a.watches == null)){
} else {
cljs.core._notify_watches(a,old_value,new_value);
}

return new_value;
} else {
return cljs.core._reset_BANG_(a,new_value);
}
});
/**
* Atomically swaps the value of atom to be:
* (apply f current-value-of-atom args). Note that f may be called
* multiple times, and thus should be free of side effects.  Returns
* the value that was swapped in.
* @param {...*} var_args
*/
cljs.core.swap_BANG_ = (function() {
var swap_BANG_ = null;
var swap_BANG___2 = (function (a,f){
if((a instanceof cljs.core.Atom)){
return cljs.core.reset_BANG_(a,(function (){var G__30494 = a.state;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__30494) : f.call(null,G__30494));
})());
} else {
return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$2(a,f);
}
});
var swap_BANG___3 = (function (a,f,x){
if((a instanceof cljs.core.Atom)){
return cljs.core.reset_BANG_(a,(function (){var G__30495 = a.state;
var G__30496 = x;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__30495,G__30496) : f.call(null,G__30495,G__30496));
})());
} else {
return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$3(a,f,x);
}
});
var swap_BANG___4 = (function (a,f,x,y){
if((a instanceof cljs.core.Atom)){
return cljs.core.reset_BANG_(a,(function (){var G__30497 = a.state;
var G__30498 = x;
var G__30499 = y;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__30497,G__30498,G__30499) : f.call(null,G__30497,G__30498,G__30499));
})());
} else {
return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$4(a,f,x,y);
}
});
var swap_BANG___5 = (function() { 
var G__30500__delegate = function (a,f,x,y,more){
if((a instanceof cljs.core.Atom)){
return cljs.core.reset_BANG_(a,cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,a.state,x,y,more));
} else {
return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$5(a,f,x,y,more);
}
};
var G__30500 = function (a,f,x,y,var_args){
var more = null;
if (arguments.length > 4) {
var G__30501__i = 0, G__30501__a = new Array(arguments.length -  4);
while (G__30501__i < G__30501__a.length) {G__30501__a[G__30501__i] = arguments[G__30501__i + 4]; ++G__30501__i;}
  more = new cljs.core.IndexedSeq(G__30501__a,0);
} 
return G__30500__delegate.call(this,a,f,x,y,more);};
G__30500.cljs$lang$maxFixedArity = 4;
G__30500.cljs$lang$applyTo = (function (arglist__30502){
var a = cljs.core.first(arglist__30502);
arglist__30502 = cljs.core.next(arglist__30502);
var f = cljs.core.first(arglist__30502);
arglist__30502 = cljs.core.next(arglist__30502);
var x = cljs.core.first(arglist__30502);
arglist__30502 = cljs.core.next(arglist__30502);
var y = cljs.core.first(arglist__30502);
var more = cljs.core.rest(arglist__30502);
return G__30500__delegate(a,f,x,y,more);
});
G__30500.cljs$core$IFn$_invoke$arity$variadic = G__30500__delegate;
return G__30500;
})()
;
swap_BANG_ = function(a,f,x,y,var_args){
var more = var_args;
switch(arguments.length){
case 2:
return swap_BANG___2.call(this,a,f);
case 3:
return swap_BANG___3.call(this,a,f,x);
case 4:
return swap_BANG___4.call(this,a,f,x,y);
default:
var G__30503 = null;
if (arguments.length > 4) {
var G__30504__i = 0, G__30504__a = new Array(arguments.length -  4);
while (G__30504__i < G__30504__a.length) {G__30504__a[G__30504__i] = arguments[G__30504__i + 4]; ++G__30504__i;}
G__30503 = new cljs.core.IndexedSeq(G__30504__a,0);
}
return swap_BANG___5.cljs$core$IFn$_invoke$arity$variadic(a,f,x,y, G__30503);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
swap_BANG_.cljs$lang$maxFixedArity = 4;
swap_BANG_.cljs$lang$applyTo = swap_BANG___5.cljs$lang$applyTo;
swap_BANG_.cljs$core$IFn$_invoke$arity$2 = swap_BANG___2;
swap_BANG_.cljs$core$IFn$_invoke$arity$3 = swap_BANG___3;
swap_BANG_.cljs$core$IFn$_invoke$arity$4 = swap_BANG___4;
swap_BANG_.cljs$core$IFn$_invoke$arity$variadic = swap_BANG___5.cljs$core$IFn$_invoke$arity$variadic;
return swap_BANG_;
})()
;
/**
* Atomically sets the value of atom to newval if and only if the
* current value of the atom is equal to oldval. Returns true if
* set happened, else false.
*/
cljs.core.compare_and_set_BANG_ = (function compare_and_set_BANG_(a,oldval,newval){
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(a.cljs$core$IDeref$_deref$arity$1(null),oldval)){
cljs.core.reset_BANG_(a,newval);

return true;
} else {
return false;
}
});
/**
* Sets the validator-fn for an atom. validator-fn must be nil or a
* side-effect-free fn of one argument, which will be passed the intended
* new state on any state change. If the new state is unacceptable, the
* validator-fn should return false or throw an Error. If the current state
* is not acceptable to the new validator, an Error will be thrown and the
* validator will not be changed.
*/
cljs.core.set_validator_BANG_ = (function set_validator_BANG_(iref,val){
return iref.validator = val;
});
/**
* Gets the validator-fn for a var/ref/agent/atom.
*/
cljs.core.get_validator = (function get_validator(iref){
return iref.validator;
});

/**
* @constructor
*/
cljs.core.Volatile = (function (state){
this.state = state;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32768;
})
cljs.core.Volatile.prototype.cljs$core$IDeref$_deref$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.state;
});

cljs.core.Volatile.prototype.cljs$core$IVolatile$ = true;

cljs.core.Volatile.prototype.cljs$core$IVolatile$_vreset_BANG_$arity$2 = (function (_,new_state){
var self__ = this;
var ___$1 = this;
return self__.state = new_state;
});

cljs.core.Volatile.cljs$lang$type = true;

cljs.core.Volatile.cljs$lang$ctorStr = "cljs.core/Volatile";

cljs.core.Volatile.cljs$lang$ctorPrWriter = (function (this__24861__auto__,writer__24862__auto__,opt__24863__auto__){
return cljs.core._write(writer__24862__auto__,"cljs.core/Volatile");
});

cljs.core.__GT_Volatile = (function __GT_Volatile(state){
return (new cljs.core.Volatile(state));
});

/**
* Creates and returns a Volatile with an initial value of val.
*/
cljs.core.volatile_BANG_ = (function volatile_BANG_(val){
return (new cljs.core.Volatile(val));
});
/**
* Returns true if x is a volatile.
*/
cljs.core.volatile_QMARK_ = (function volatile_QMARK_(x){
return (x instanceof cljs.core.Volatile);
});
/**
* Sets the value of volatile to newval without regard for the
* current value. Returns newval.
*/
cljs.core.vreset_BANG_ = (function vreset_BANG_(vol,newval){
return cljs.core._vreset_BANG_(vol,newval);
});
/**
* Returns a lazy sequence of the non-nil results of (f index item). Note,
* this means false return values will be included.  f must be free of
* side-effects.  Returns a stateful transducer when no collection is
* provided.
*/
cljs.core.keep_indexed = (function() {
var keep_indexed = null;
var keep_indexed__1 = (function (f){
return (function (rf){
var ia = cljs.core.volatile_BANG_((-1));
return ((function (ia){
return (function() {
var G__30571 = null;
var G__30571__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__30571__1 = (function (result){
var G__30538 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__30538) : rf.call(null,G__30538));
});
var G__30571__2 = (function (result,input){
var i = ia.cljs$core$IVolatile$_vreset_BANG_$arity$2(null,(ia.cljs$core$IDeref$_deref$arity$1(null) + (1)));
var v = (function (){var G__30539 = i;
var G__30540 = input;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__30539,G__30540) : f.call(null,G__30539,G__30540));
})();
if((v == null)){
return result;
} else {
var G__30541 = result;
var G__30542 = v;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__30541,G__30542) : rf.call(null,G__30541,G__30542));
}
});
G__30571 = function(result,input){
switch(arguments.length){
case 0:
return G__30571__0.call(this);
case 1:
return G__30571__1.call(this,result);
case 2:
return G__30571__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__30571.cljs$core$IFn$_invoke$arity$0 = G__30571__0;
G__30571.cljs$core$IFn$_invoke$arity$1 = G__30571__1;
G__30571.cljs$core$IFn$_invoke$arity$2 = G__30571__2;
return G__30571;
})()
;})(ia))
});
});
var keep_indexed__2 = (function (f,coll){
var keepi = (function keepi(idx,coll__$1){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll__$1);
if(temp__4126__auto__){
var s = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(s)){
var c = cljs.core.chunk_first(s);
var size = cljs.core.count(c);
var b = cljs.core.chunk_buffer(size);
var n__25161__auto___30572 = size;
var i_30573 = (0);
while(true){
if((i_30573 < n__25161__auto___30572)){
var x_30574 = (function (){var G__30567 = (idx + i_30573);
var G__30568 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c,i_30573);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__30567,G__30568) : f.call(null,G__30567,G__30568));
})();
if((x_30574 == null)){
} else {
cljs.core.chunk_append(b,x_30574);
}

var G__30575 = (i_30573 + (1));
i_30573 = G__30575;
continue;
} else {
}
break;
}

return cljs.core.chunk_cons(cljs.core.chunk(b),keepi((idx + size),cljs.core.chunk_rest(s)));
} else {
var x = (function (){var G__30569 = idx;
var G__30570 = cljs.core.first(s);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__30569,G__30570) : f.call(null,G__30569,G__30570));
})();
if((x == null)){
return keepi((idx + (1)),cljs.core.rest(s));
} else {
return cljs.core.cons(x,keepi((idx + (1)),cljs.core.rest(s)));
}
}
} else {
return null;
}
}),null,null));
});
return keepi((0),coll);
});
keep_indexed = function(f,coll){
switch(arguments.length){
case 1:
return keep_indexed__1.call(this,f);
case 2:
return keep_indexed__2.call(this,f,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
keep_indexed.cljs$core$IFn$_invoke$arity$1 = keep_indexed__1;
keep_indexed.cljs$core$IFn$_invoke$arity$2 = keep_indexed__2;
return keep_indexed;
})()
;
/**
* Takes a set of predicates and returns a function f that returns true if all of its
* composing predicates return a logical true value against all of its arguments, else it returns
* false. Note that f is short-circuiting in that it will stop execution on the first
* argument that triggers a logical false result against the original predicates.
* @param {...*} var_args
*/
cljs.core.every_pred = (function() {
var every_pred = null;
var every_pred__1 = (function (p){
return (function() {
var ep1 = null;
var ep1__0 = (function (){
return true;
});
var ep1__1 = (function (x){
return cljs.core.boolean$((function (){var G__30789 = x;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__30789) : p.call(null,G__30789));
})());
});
var ep1__2 = (function (x,y){
return cljs.core.boolean$((function (){var and__24262__auto__ = (function (){var G__30791 = x;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__30791) : p.call(null,G__30791));
})();
if(cljs.core.truth_(and__24262__auto__)){
var G__30792 = y;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__30792) : p.call(null,G__30792));
} else {
return and__24262__auto__;
}
})());
});
var ep1__3 = (function (x,y,z){
return cljs.core.boolean$((function (){var and__24262__auto__ = (function (){var G__30794 = x;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__30794) : p.call(null,G__30794));
})();
if(cljs.core.truth_(and__24262__auto__)){
var and__24262__auto____$1 = (function (){var G__30796 = y;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__30796) : p.call(null,G__30796));
})();
if(cljs.core.truth_(and__24262__auto____$1)){
var G__30797 = z;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__30797) : p.call(null,G__30797));
} else {
return and__24262__auto____$1;
}
} else {
return and__24262__auto__;
}
})());
});
var ep1__4 = (function() { 
var G__30966__delegate = function (x,y,z,args){
return cljs.core.boolean$((ep1.cljs$core$IFn$_invoke$arity$3(x,y,z)) && (cljs.core.every_QMARK_(p,args)));
};
var G__30966 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__30967__i = 0, G__30967__a = new Array(arguments.length -  3);
while (G__30967__i < G__30967__a.length) {G__30967__a[G__30967__i] = arguments[G__30967__i + 3]; ++G__30967__i;}
  args = new cljs.core.IndexedSeq(G__30967__a,0);
} 
return G__30966__delegate.call(this,x,y,z,args);};
G__30966.cljs$lang$maxFixedArity = 3;
G__30966.cljs$lang$applyTo = (function (arglist__30968){
var x = cljs.core.first(arglist__30968);
arglist__30968 = cljs.core.next(arglist__30968);
var y = cljs.core.first(arglist__30968);
arglist__30968 = cljs.core.next(arglist__30968);
var z = cljs.core.first(arglist__30968);
var args = cljs.core.rest(arglist__30968);
return G__30966__delegate(x,y,z,args);
});
G__30966.cljs$core$IFn$_invoke$arity$variadic = G__30966__delegate;
return G__30966;
})()
;
ep1 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return ep1__0.call(this);
case 1:
return ep1__1.call(this,x);
case 2:
return ep1__2.call(this,x,y);
case 3:
return ep1__3.call(this,x,y,z);
default:
var G__30969 = null;
if (arguments.length > 3) {
var G__30970__i = 0, G__30970__a = new Array(arguments.length -  3);
while (G__30970__i < G__30970__a.length) {G__30970__a[G__30970__i] = arguments[G__30970__i + 3]; ++G__30970__i;}
G__30969 = new cljs.core.IndexedSeq(G__30970__a,0);
}
return ep1__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__30969);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
ep1.cljs$lang$maxFixedArity = 3;
ep1.cljs$lang$applyTo = ep1__4.cljs$lang$applyTo;
ep1.cljs$core$IFn$_invoke$arity$0 = ep1__0;
ep1.cljs$core$IFn$_invoke$arity$1 = ep1__1;
ep1.cljs$core$IFn$_invoke$arity$2 = ep1__2;
ep1.cljs$core$IFn$_invoke$arity$3 = ep1__3;
ep1.cljs$core$IFn$_invoke$arity$variadic = ep1__4.cljs$core$IFn$_invoke$arity$variadic;
return ep1;
})()
});
var every_pred__2 = (function (p1,p2){
return (function() {
var ep2 = null;
var ep2__0 = (function (){
return true;
});
var ep2__1 = (function (x){
return cljs.core.boolean$((function (){var and__24262__auto__ = (function (){var G__30829 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__30829) : p1.call(null,G__30829));
})();
if(cljs.core.truth_(and__24262__auto__)){
var G__30830 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__30830) : p2.call(null,G__30830));
} else {
return and__24262__auto__;
}
})());
});
var ep2__2 = (function (x,y){
return cljs.core.boolean$((function (){var and__24262__auto__ = (function (){var G__30832 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__30832) : p1.call(null,G__30832));
})();
if(cljs.core.truth_(and__24262__auto__)){
var and__24262__auto____$1 = (function (){var G__30834 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__30834) : p1.call(null,G__30834));
})();
if(cljs.core.truth_(and__24262__auto____$1)){
var and__24262__auto____$2 = (function (){var G__30836 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__30836) : p2.call(null,G__30836));
})();
if(cljs.core.truth_(and__24262__auto____$2)){
var G__30837 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__30837) : p2.call(null,G__30837));
} else {
return and__24262__auto____$2;
}
} else {
return and__24262__auto____$1;
}
} else {
return and__24262__auto__;
}
})());
});
var ep2__3 = (function (x,y,z){
return cljs.core.boolean$((function (){var and__24262__auto__ = (function (){var G__30839 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__30839) : p1.call(null,G__30839));
})();
if(cljs.core.truth_(and__24262__auto__)){
var and__24262__auto____$1 = (function (){var G__30841 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__30841) : p1.call(null,G__30841));
})();
if(cljs.core.truth_(and__24262__auto____$1)){
var and__24262__auto____$2 = (function (){var G__30843 = z;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__30843) : p1.call(null,G__30843));
})();
if(cljs.core.truth_(and__24262__auto____$2)){
var and__24262__auto____$3 = (function (){var G__30845 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__30845) : p2.call(null,G__30845));
})();
if(cljs.core.truth_(and__24262__auto____$3)){
var and__24262__auto____$4 = (function (){var G__30847 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__30847) : p2.call(null,G__30847));
})();
if(cljs.core.truth_(and__24262__auto____$4)){
var G__30848 = z;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__30848) : p2.call(null,G__30848));
} else {
return and__24262__auto____$4;
}
} else {
return and__24262__auto____$3;
}
} else {
return and__24262__auto____$2;
}
} else {
return and__24262__auto____$1;
}
} else {
return and__24262__auto__;
}
})());
});
var ep2__4 = (function() { 
var G__30971__delegate = function (x,y,z,args){
return cljs.core.boolean$((ep2.cljs$core$IFn$_invoke$arity$3(x,y,z)) && (cljs.core.every_QMARK_((function (p1__30576_SHARP_){
var and__24262__auto__ = (function (){var G__30853 = p1__30576_SHARP_;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__30853) : p1.call(null,G__30853));
})();
if(cljs.core.truth_(and__24262__auto__)){
var G__30854 = p1__30576_SHARP_;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__30854) : p2.call(null,G__30854));
} else {
return and__24262__auto__;
}
}),args)));
};
var G__30971 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__30972__i = 0, G__30972__a = new Array(arguments.length -  3);
while (G__30972__i < G__30972__a.length) {G__30972__a[G__30972__i] = arguments[G__30972__i + 3]; ++G__30972__i;}
  args = new cljs.core.IndexedSeq(G__30972__a,0);
} 
return G__30971__delegate.call(this,x,y,z,args);};
G__30971.cljs$lang$maxFixedArity = 3;
G__30971.cljs$lang$applyTo = (function (arglist__30973){
var x = cljs.core.first(arglist__30973);
arglist__30973 = cljs.core.next(arglist__30973);
var y = cljs.core.first(arglist__30973);
arglist__30973 = cljs.core.next(arglist__30973);
var z = cljs.core.first(arglist__30973);
var args = cljs.core.rest(arglist__30973);
return G__30971__delegate(x,y,z,args);
});
G__30971.cljs$core$IFn$_invoke$arity$variadic = G__30971__delegate;
return G__30971;
})()
;
ep2 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return ep2__0.call(this);
case 1:
return ep2__1.call(this,x);
case 2:
return ep2__2.call(this,x,y);
case 3:
return ep2__3.call(this,x,y,z);
default:
var G__30974 = null;
if (arguments.length > 3) {
var G__30975__i = 0, G__30975__a = new Array(arguments.length -  3);
while (G__30975__i < G__30975__a.length) {G__30975__a[G__30975__i] = arguments[G__30975__i + 3]; ++G__30975__i;}
G__30974 = new cljs.core.IndexedSeq(G__30975__a,0);
}
return ep2__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__30974);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
ep2.cljs$lang$maxFixedArity = 3;
ep2.cljs$lang$applyTo = ep2__4.cljs$lang$applyTo;
ep2.cljs$core$IFn$_invoke$arity$0 = ep2__0;
ep2.cljs$core$IFn$_invoke$arity$1 = ep2__1;
ep2.cljs$core$IFn$_invoke$arity$2 = ep2__2;
ep2.cljs$core$IFn$_invoke$arity$3 = ep2__3;
ep2.cljs$core$IFn$_invoke$arity$variadic = ep2__4.cljs$core$IFn$_invoke$arity$variadic;
return ep2;
})()
});
var every_pred__3 = (function (p1,p2,p3){
return (function() {
var ep3 = null;
var ep3__0 = (function (){
return true;
});
var ep3__1 = (function (x){
return cljs.core.boolean$((function (){var and__24262__auto__ = (function (){var G__30900 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__30900) : p1.call(null,G__30900));
})();
if(cljs.core.truth_(and__24262__auto__)){
var and__24262__auto____$1 = (function (){var G__30902 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__30902) : p2.call(null,G__30902));
})();
if(cljs.core.truth_(and__24262__auto____$1)){
var G__30903 = x;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__30903) : p3.call(null,G__30903));
} else {
return and__24262__auto____$1;
}
} else {
return and__24262__auto__;
}
})());
});
var ep3__2 = (function (x,y){
return cljs.core.boolean$((function (){var and__24262__auto__ = (function (){var G__30905 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__30905) : p1.call(null,G__30905));
})();
if(cljs.core.truth_(and__24262__auto__)){
var and__24262__auto____$1 = (function (){var G__30907 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__30907) : p2.call(null,G__30907));
})();
if(cljs.core.truth_(and__24262__auto____$1)){
var and__24262__auto____$2 = (function (){var G__30909 = x;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__30909) : p3.call(null,G__30909));
})();
if(cljs.core.truth_(and__24262__auto____$2)){
var and__24262__auto____$3 = (function (){var G__30911 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__30911) : p1.call(null,G__30911));
})();
if(cljs.core.truth_(and__24262__auto____$3)){
var and__24262__auto____$4 = (function (){var G__30913 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__30913) : p2.call(null,G__30913));
})();
if(cljs.core.truth_(and__24262__auto____$4)){
var G__30914 = y;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__30914) : p3.call(null,G__30914));
} else {
return and__24262__auto____$4;
}
} else {
return and__24262__auto____$3;
}
} else {
return and__24262__auto____$2;
}
} else {
return and__24262__auto____$1;
}
} else {
return and__24262__auto__;
}
})());
});
var ep3__3 = (function (x,y,z){
return cljs.core.boolean$((function (){var and__24262__auto__ = (function (){var G__30916 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__30916) : p1.call(null,G__30916));
})();
if(cljs.core.truth_(and__24262__auto__)){
var and__24262__auto____$1 = (function (){var G__30918 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__30918) : p2.call(null,G__30918));
})();
if(cljs.core.truth_(and__24262__auto____$1)){
var and__24262__auto____$2 = (function (){var G__30920 = x;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__30920) : p3.call(null,G__30920));
})();
if(cljs.core.truth_(and__24262__auto____$2)){
var and__24262__auto____$3 = (function (){var G__30922 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__30922) : p1.call(null,G__30922));
})();
if(cljs.core.truth_(and__24262__auto____$3)){
var and__24262__auto____$4 = (function (){var G__30924 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__30924) : p2.call(null,G__30924));
})();
if(cljs.core.truth_(and__24262__auto____$4)){
var and__24262__auto____$5 = (function (){var G__30926 = y;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__30926) : p3.call(null,G__30926));
})();
if(cljs.core.truth_(and__24262__auto____$5)){
var and__24262__auto____$6 = (function (){var G__30928 = z;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__30928) : p1.call(null,G__30928));
})();
if(cljs.core.truth_(and__24262__auto____$6)){
var and__24262__auto____$7 = (function (){var G__30930 = z;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__30930) : p2.call(null,G__30930));
})();
if(cljs.core.truth_(and__24262__auto____$7)){
var G__30931 = z;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__30931) : p3.call(null,G__30931));
} else {
return and__24262__auto____$7;
}
} else {
return and__24262__auto____$6;
}
} else {
return and__24262__auto____$5;
}
} else {
return and__24262__auto____$4;
}
} else {
return and__24262__auto____$3;
}
} else {
return and__24262__auto____$2;
}
} else {
return and__24262__auto____$1;
}
} else {
return and__24262__auto__;
}
})());
});
var ep3__4 = (function() { 
var G__30976__delegate = function (x,y,z,args){
return cljs.core.boolean$((ep3.cljs$core$IFn$_invoke$arity$3(x,y,z)) && (cljs.core.every_QMARK_((function (p1__30577_SHARP_){
var and__24262__auto__ = (function (){var G__30938 = p1__30577_SHARP_;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__30938) : p1.call(null,G__30938));
})();
if(cljs.core.truth_(and__24262__auto__)){
var and__24262__auto____$1 = (function (){var G__30940 = p1__30577_SHARP_;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__30940) : p2.call(null,G__30940));
})();
if(cljs.core.truth_(and__24262__auto____$1)){
var G__30941 = p1__30577_SHARP_;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__30941) : p3.call(null,G__30941));
} else {
return and__24262__auto____$1;
}
} else {
return and__24262__auto__;
}
}),args)));
};
var G__30976 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__30977__i = 0, G__30977__a = new Array(arguments.length -  3);
while (G__30977__i < G__30977__a.length) {G__30977__a[G__30977__i] = arguments[G__30977__i + 3]; ++G__30977__i;}
  args = new cljs.core.IndexedSeq(G__30977__a,0);
} 
return G__30976__delegate.call(this,x,y,z,args);};
G__30976.cljs$lang$maxFixedArity = 3;
G__30976.cljs$lang$applyTo = (function (arglist__30978){
var x = cljs.core.first(arglist__30978);
arglist__30978 = cljs.core.next(arglist__30978);
var y = cljs.core.first(arglist__30978);
arglist__30978 = cljs.core.next(arglist__30978);
var z = cljs.core.first(arglist__30978);
var args = cljs.core.rest(arglist__30978);
return G__30976__delegate(x,y,z,args);
});
G__30976.cljs$core$IFn$_invoke$arity$variadic = G__30976__delegate;
return G__30976;
})()
;
ep3 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return ep3__0.call(this);
case 1:
return ep3__1.call(this,x);
case 2:
return ep3__2.call(this,x,y);
case 3:
return ep3__3.call(this,x,y,z);
default:
var G__30979 = null;
if (arguments.length > 3) {
var G__30980__i = 0, G__30980__a = new Array(arguments.length -  3);
while (G__30980__i < G__30980__a.length) {G__30980__a[G__30980__i] = arguments[G__30980__i + 3]; ++G__30980__i;}
G__30979 = new cljs.core.IndexedSeq(G__30980__a,0);
}
return ep3__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__30979);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
ep3.cljs$lang$maxFixedArity = 3;
ep3.cljs$lang$applyTo = ep3__4.cljs$lang$applyTo;
ep3.cljs$core$IFn$_invoke$arity$0 = ep3__0;
ep3.cljs$core$IFn$_invoke$arity$1 = ep3__1;
ep3.cljs$core$IFn$_invoke$arity$2 = ep3__2;
ep3.cljs$core$IFn$_invoke$arity$3 = ep3__3;
ep3.cljs$core$IFn$_invoke$arity$variadic = ep3__4.cljs$core$IFn$_invoke$arity$variadic;
return ep3;
})()
});
var every_pred__4 = (function() { 
var G__30981__delegate = function (p1,p2,p3,ps){
var ps__$1 = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(p1,p2,p3,ps);
return ((function (ps__$1){
return (function() {
var epn = null;
var epn__0 = (function (){
return true;
});
var epn__1 = (function (x){
return cljs.core.every_QMARK_(((function (ps__$1){
return (function (p1__30578_SHARP_){
var G__30957 = x;
return (p1__30578_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__30578_SHARP_.cljs$core$IFn$_invoke$arity$1(G__30957) : p1__30578_SHARP_.call(null,G__30957));
});})(ps__$1))
,ps__$1);
});
var epn__2 = (function (x,y){
return cljs.core.every_QMARK_(((function (ps__$1){
return (function (p1__30579_SHARP_){
var and__24262__auto__ = (function (){var G__30959 = x;
return (p1__30579_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__30579_SHARP_.cljs$core$IFn$_invoke$arity$1(G__30959) : p1__30579_SHARP_.call(null,G__30959));
})();
if(cljs.core.truth_(and__24262__auto__)){
var G__30960 = y;
return (p1__30579_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__30579_SHARP_.cljs$core$IFn$_invoke$arity$1(G__30960) : p1__30579_SHARP_.call(null,G__30960));
} else {
return and__24262__auto__;
}
});})(ps__$1))
,ps__$1);
});
var epn__3 = (function (x,y,z){
return cljs.core.every_QMARK_(((function (ps__$1){
return (function (p1__30580_SHARP_){
var and__24262__auto__ = (function (){var G__30962 = x;
return (p1__30580_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__30580_SHARP_.cljs$core$IFn$_invoke$arity$1(G__30962) : p1__30580_SHARP_.call(null,G__30962));
})();
if(cljs.core.truth_(and__24262__auto__)){
var and__24262__auto____$1 = (function (){var G__30964 = y;
return (p1__30580_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__30580_SHARP_.cljs$core$IFn$_invoke$arity$1(G__30964) : p1__30580_SHARP_.call(null,G__30964));
})();
if(cljs.core.truth_(and__24262__auto____$1)){
var G__30965 = z;
return (p1__30580_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__30580_SHARP_.cljs$core$IFn$_invoke$arity$1(G__30965) : p1__30580_SHARP_.call(null,G__30965));
} else {
return and__24262__auto____$1;
}
} else {
return and__24262__auto__;
}
});})(ps__$1))
,ps__$1);
});
var epn__4 = (function() { 
var G__30982__delegate = function (x,y,z,args){
return cljs.core.boolean$((epn.cljs$core$IFn$_invoke$arity$3(x,y,z)) && (cljs.core.every_QMARK_(((function (ps__$1){
return (function (p1__30581_SHARP_){
return cljs.core.every_QMARK_(p1__30581_SHARP_,args);
});})(ps__$1))
,ps__$1)));
};
var G__30982 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__30983__i = 0, G__30983__a = new Array(arguments.length -  3);
while (G__30983__i < G__30983__a.length) {G__30983__a[G__30983__i] = arguments[G__30983__i + 3]; ++G__30983__i;}
  args = new cljs.core.IndexedSeq(G__30983__a,0);
} 
return G__30982__delegate.call(this,x,y,z,args);};
G__30982.cljs$lang$maxFixedArity = 3;
G__30982.cljs$lang$applyTo = (function (arglist__30984){
var x = cljs.core.first(arglist__30984);
arglist__30984 = cljs.core.next(arglist__30984);
var y = cljs.core.first(arglist__30984);
arglist__30984 = cljs.core.next(arglist__30984);
var z = cljs.core.first(arglist__30984);
var args = cljs.core.rest(arglist__30984);
return G__30982__delegate(x,y,z,args);
});
G__30982.cljs$core$IFn$_invoke$arity$variadic = G__30982__delegate;
return G__30982;
})()
;
epn = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return epn__0.call(this);
case 1:
return epn__1.call(this,x);
case 2:
return epn__2.call(this,x,y);
case 3:
return epn__3.call(this,x,y,z);
default:
var G__30985 = null;
if (arguments.length > 3) {
var G__30986__i = 0, G__30986__a = new Array(arguments.length -  3);
while (G__30986__i < G__30986__a.length) {G__30986__a[G__30986__i] = arguments[G__30986__i + 3]; ++G__30986__i;}
G__30985 = new cljs.core.IndexedSeq(G__30986__a,0);
}
return epn__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__30985);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
epn.cljs$lang$maxFixedArity = 3;
epn.cljs$lang$applyTo = epn__4.cljs$lang$applyTo;
epn.cljs$core$IFn$_invoke$arity$0 = epn__0;
epn.cljs$core$IFn$_invoke$arity$1 = epn__1;
epn.cljs$core$IFn$_invoke$arity$2 = epn__2;
epn.cljs$core$IFn$_invoke$arity$3 = epn__3;
epn.cljs$core$IFn$_invoke$arity$variadic = epn__4.cljs$core$IFn$_invoke$arity$variadic;
return epn;
})()
;})(ps__$1))
};
var G__30981 = function (p1,p2,p3,var_args){
var ps = null;
if (arguments.length > 3) {
var G__30987__i = 0, G__30987__a = new Array(arguments.length -  3);
while (G__30987__i < G__30987__a.length) {G__30987__a[G__30987__i] = arguments[G__30987__i + 3]; ++G__30987__i;}
  ps = new cljs.core.IndexedSeq(G__30987__a,0);
} 
return G__30981__delegate.call(this,p1,p2,p3,ps);};
G__30981.cljs$lang$maxFixedArity = 3;
G__30981.cljs$lang$applyTo = (function (arglist__30988){
var p1 = cljs.core.first(arglist__30988);
arglist__30988 = cljs.core.next(arglist__30988);
var p2 = cljs.core.first(arglist__30988);
arglist__30988 = cljs.core.next(arglist__30988);
var p3 = cljs.core.first(arglist__30988);
var ps = cljs.core.rest(arglist__30988);
return G__30981__delegate(p1,p2,p3,ps);
});
G__30981.cljs$core$IFn$_invoke$arity$variadic = G__30981__delegate;
return G__30981;
})()
;
every_pred = function(p1,p2,p3,var_args){
var ps = var_args;
switch(arguments.length){
case 1:
return every_pred__1.call(this,p1);
case 2:
return every_pred__2.call(this,p1,p2);
case 3:
return every_pred__3.call(this,p1,p2,p3);
default:
var G__30989 = null;
if (arguments.length > 3) {
var G__30990__i = 0, G__30990__a = new Array(arguments.length -  3);
while (G__30990__i < G__30990__a.length) {G__30990__a[G__30990__i] = arguments[G__30990__i + 3]; ++G__30990__i;}
G__30989 = new cljs.core.IndexedSeq(G__30990__a,0);
}
return every_pred__4.cljs$core$IFn$_invoke$arity$variadic(p1,p2,p3, G__30989);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
every_pred.cljs$lang$maxFixedArity = 3;
every_pred.cljs$lang$applyTo = every_pred__4.cljs$lang$applyTo;
every_pred.cljs$core$IFn$_invoke$arity$1 = every_pred__1;
every_pred.cljs$core$IFn$_invoke$arity$2 = every_pred__2;
every_pred.cljs$core$IFn$_invoke$arity$3 = every_pred__3;
every_pred.cljs$core$IFn$_invoke$arity$variadic = every_pred__4.cljs$core$IFn$_invoke$arity$variadic;
return every_pred;
})()
;
/**
* Takes a set of predicates and returns a function f that returns the first logical true value
* returned by one of its composing predicates against any of its arguments, else it returns
* logical false. Note that f is short-circuiting in that it will stop execution on the first
* argument that triggers a logical true result against the original predicates.
* @param {...*} var_args
*/
cljs.core.some_fn = (function() {
var some_fn = null;
var some_fn__1 = (function (p){
return (function() {
var sp1 = null;
var sp1__0 = (function (){
return null;
});
var sp1__1 = (function (x){
var G__31196 = x;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__31196) : p.call(null,G__31196));
});
var sp1__2 = (function (x,y){
var or__24274__auto__ = (function (){var G__31198 = x;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__31198) : p.call(null,G__31198));
})();
if(cljs.core.truth_(or__24274__auto__)){
return or__24274__auto__;
} else {
var G__31199 = y;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__31199) : p.call(null,G__31199));
}
});
var sp1__3 = (function (x,y,z){
var or__24274__auto__ = (function (){var G__31201 = x;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__31201) : p.call(null,G__31201));
})();
if(cljs.core.truth_(or__24274__auto__)){
return or__24274__auto__;
} else {
var or__24274__auto____$1 = (function (){var G__31203 = y;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__31203) : p.call(null,G__31203));
})();
if(cljs.core.truth_(or__24274__auto____$1)){
return or__24274__auto____$1;
} else {
var G__31204 = z;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__31204) : p.call(null,G__31204));
}
}
});
var sp1__4 = (function() { 
var G__31365__delegate = function (x,y,z,args){
var or__24274__auto__ = sp1.cljs$core$IFn$_invoke$arity$3(x,y,z);
if(cljs.core.truth_(or__24274__auto__)){
return or__24274__auto__;
} else {
return cljs.core.some(p,args);
}
};
var G__31365 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__31366__i = 0, G__31366__a = new Array(arguments.length -  3);
while (G__31366__i < G__31366__a.length) {G__31366__a[G__31366__i] = arguments[G__31366__i + 3]; ++G__31366__i;}
  args = new cljs.core.IndexedSeq(G__31366__a,0);
} 
return G__31365__delegate.call(this,x,y,z,args);};
G__31365.cljs$lang$maxFixedArity = 3;
G__31365.cljs$lang$applyTo = (function (arglist__31367){
var x = cljs.core.first(arglist__31367);
arglist__31367 = cljs.core.next(arglist__31367);
var y = cljs.core.first(arglist__31367);
arglist__31367 = cljs.core.next(arglist__31367);
var z = cljs.core.first(arglist__31367);
var args = cljs.core.rest(arglist__31367);
return G__31365__delegate(x,y,z,args);
});
G__31365.cljs$core$IFn$_invoke$arity$variadic = G__31365__delegate;
return G__31365;
})()
;
sp1 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return sp1__0.call(this);
case 1:
return sp1__1.call(this,x);
case 2:
return sp1__2.call(this,x,y);
case 3:
return sp1__3.call(this,x,y,z);
default:
var G__31368 = null;
if (arguments.length > 3) {
var G__31369__i = 0, G__31369__a = new Array(arguments.length -  3);
while (G__31369__i < G__31369__a.length) {G__31369__a[G__31369__i] = arguments[G__31369__i + 3]; ++G__31369__i;}
G__31368 = new cljs.core.IndexedSeq(G__31369__a,0);
}
return sp1__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__31368);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
sp1.cljs$lang$maxFixedArity = 3;
sp1.cljs$lang$applyTo = sp1__4.cljs$lang$applyTo;
sp1.cljs$core$IFn$_invoke$arity$0 = sp1__0;
sp1.cljs$core$IFn$_invoke$arity$1 = sp1__1;
sp1.cljs$core$IFn$_invoke$arity$2 = sp1__2;
sp1.cljs$core$IFn$_invoke$arity$3 = sp1__3;
sp1.cljs$core$IFn$_invoke$arity$variadic = sp1__4.cljs$core$IFn$_invoke$arity$variadic;
return sp1;
})()
});
var some_fn__2 = (function (p1,p2){
return (function() {
var sp2 = null;
var sp2__0 = (function (){
return null;
});
var sp2__1 = (function (x){
var or__24274__auto__ = (function (){var G__31236 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__31236) : p1.call(null,G__31236));
})();
if(cljs.core.truth_(or__24274__auto__)){
return or__24274__auto__;
} else {
var G__31237 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__31237) : p2.call(null,G__31237));
}
});
var sp2__2 = (function (x,y){
var or__24274__auto__ = (function (){var G__31239 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__31239) : p1.call(null,G__31239));
})();
if(cljs.core.truth_(or__24274__auto__)){
return or__24274__auto__;
} else {
var or__24274__auto____$1 = (function (){var G__31241 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__31241) : p1.call(null,G__31241));
})();
if(cljs.core.truth_(or__24274__auto____$1)){
return or__24274__auto____$1;
} else {
var or__24274__auto____$2 = (function (){var G__31243 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__31243) : p2.call(null,G__31243));
})();
if(cljs.core.truth_(or__24274__auto____$2)){
return or__24274__auto____$2;
} else {
var G__31244 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__31244) : p2.call(null,G__31244));
}
}
}
});
var sp2__3 = (function (x,y,z){
var or__24274__auto__ = (function (){var G__31246 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__31246) : p1.call(null,G__31246));
})();
if(cljs.core.truth_(or__24274__auto__)){
return or__24274__auto__;
} else {
var or__24274__auto____$1 = (function (){var G__31248 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__31248) : p1.call(null,G__31248));
})();
if(cljs.core.truth_(or__24274__auto____$1)){
return or__24274__auto____$1;
} else {
var or__24274__auto____$2 = (function (){var G__31250 = z;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__31250) : p1.call(null,G__31250));
})();
if(cljs.core.truth_(or__24274__auto____$2)){
return or__24274__auto____$2;
} else {
var or__24274__auto____$3 = (function (){var G__31252 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__31252) : p2.call(null,G__31252));
})();
if(cljs.core.truth_(or__24274__auto____$3)){
return or__24274__auto____$3;
} else {
var or__24274__auto____$4 = (function (){var G__31254 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__31254) : p2.call(null,G__31254));
})();
if(cljs.core.truth_(or__24274__auto____$4)){
return or__24274__auto____$4;
} else {
var G__31255 = z;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__31255) : p2.call(null,G__31255));
}
}
}
}
}
});
var sp2__4 = (function() { 
var G__31370__delegate = function (x,y,z,args){
var or__24274__auto__ = sp2.cljs$core$IFn$_invoke$arity$3(x,y,z);
if(cljs.core.truth_(or__24274__auto__)){
return or__24274__auto__;
} else {
return cljs.core.some(((function (or__24274__auto__){
return (function (p1__30991_SHARP_){
var or__24274__auto____$1 = (function (){var G__31257 = p1__30991_SHARP_;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__31257) : p1.call(null,G__31257));
})();
if(cljs.core.truth_(or__24274__auto____$1)){
return or__24274__auto____$1;
} else {
var G__31258 = p1__30991_SHARP_;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__31258) : p2.call(null,G__31258));
}
});})(or__24274__auto__))
,args);
}
};
var G__31370 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__31371__i = 0, G__31371__a = new Array(arguments.length -  3);
while (G__31371__i < G__31371__a.length) {G__31371__a[G__31371__i] = arguments[G__31371__i + 3]; ++G__31371__i;}
  args = new cljs.core.IndexedSeq(G__31371__a,0);
} 
return G__31370__delegate.call(this,x,y,z,args);};
G__31370.cljs$lang$maxFixedArity = 3;
G__31370.cljs$lang$applyTo = (function (arglist__31372){
var x = cljs.core.first(arglist__31372);
arglist__31372 = cljs.core.next(arglist__31372);
var y = cljs.core.first(arglist__31372);
arglist__31372 = cljs.core.next(arglist__31372);
var z = cljs.core.first(arglist__31372);
var args = cljs.core.rest(arglist__31372);
return G__31370__delegate(x,y,z,args);
});
G__31370.cljs$core$IFn$_invoke$arity$variadic = G__31370__delegate;
return G__31370;
})()
;
sp2 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return sp2__0.call(this);
case 1:
return sp2__1.call(this,x);
case 2:
return sp2__2.call(this,x,y);
case 3:
return sp2__3.call(this,x,y,z);
default:
var G__31373 = null;
if (arguments.length > 3) {
var G__31374__i = 0, G__31374__a = new Array(arguments.length -  3);
while (G__31374__i < G__31374__a.length) {G__31374__a[G__31374__i] = arguments[G__31374__i + 3]; ++G__31374__i;}
G__31373 = new cljs.core.IndexedSeq(G__31374__a,0);
}
return sp2__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__31373);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
sp2.cljs$lang$maxFixedArity = 3;
sp2.cljs$lang$applyTo = sp2__4.cljs$lang$applyTo;
sp2.cljs$core$IFn$_invoke$arity$0 = sp2__0;
sp2.cljs$core$IFn$_invoke$arity$1 = sp2__1;
sp2.cljs$core$IFn$_invoke$arity$2 = sp2__2;
sp2.cljs$core$IFn$_invoke$arity$3 = sp2__3;
sp2.cljs$core$IFn$_invoke$arity$variadic = sp2__4.cljs$core$IFn$_invoke$arity$variadic;
return sp2;
})()
});
var some_fn__3 = (function (p1,p2,p3){
return (function() {
var sp3 = null;
var sp3__0 = (function (){
return null;
});
var sp3__1 = (function (x){
var or__24274__auto__ = (function (){var G__31304 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__31304) : p1.call(null,G__31304));
})();
if(cljs.core.truth_(or__24274__auto__)){
return or__24274__auto__;
} else {
var or__24274__auto____$1 = (function (){var G__31306 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__31306) : p2.call(null,G__31306));
})();
if(cljs.core.truth_(or__24274__auto____$1)){
return or__24274__auto____$1;
} else {
var G__31307 = x;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__31307) : p3.call(null,G__31307));
}
}
});
var sp3__2 = (function (x,y){
var or__24274__auto__ = (function (){var G__31309 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__31309) : p1.call(null,G__31309));
})();
if(cljs.core.truth_(or__24274__auto__)){
return or__24274__auto__;
} else {
var or__24274__auto____$1 = (function (){var G__31311 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__31311) : p2.call(null,G__31311));
})();
if(cljs.core.truth_(or__24274__auto____$1)){
return or__24274__auto____$1;
} else {
var or__24274__auto____$2 = (function (){var G__31313 = x;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__31313) : p3.call(null,G__31313));
})();
if(cljs.core.truth_(or__24274__auto____$2)){
return or__24274__auto____$2;
} else {
var or__24274__auto____$3 = (function (){var G__31315 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__31315) : p1.call(null,G__31315));
})();
if(cljs.core.truth_(or__24274__auto____$3)){
return or__24274__auto____$3;
} else {
var or__24274__auto____$4 = (function (){var G__31317 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__31317) : p2.call(null,G__31317));
})();
if(cljs.core.truth_(or__24274__auto____$4)){
return or__24274__auto____$4;
} else {
var G__31318 = y;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__31318) : p3.call(null,G__31318));
}
}
}
}
}
});
var sp3__3 = (function (x,y,z){
var or__24274__auto__ = (function (){var G__31320 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__31320) : p1.call(null,G__31320));
})();
if(cljs.core.truth_(or__24274__auto__)){
return or__24274__auto__;
} else {
var or__24274__auto____$1 = (function (){var G__31322 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__31322) : p2.call(null,G__31322));
})();
if(cljs.core.truth_(or__24274__auto____$1)){
return or__24274__auto____$1;
} else {
var or__24274__auto____$2 = (function (){var G__31324 = x;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__31324) : p3.call(null,G__31324));
})();
if(cljs.core.truth_(or__24274__auto____$2)){
return or__24274__auto____$2;
} else {
var or__24274__auto____$3 = (function (){var G__31326 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__31326) : p1.call(null,G__31326));
})();
if(cljs.core.truth_(or__24274__auto____$3)){
return or__24274__auto____$3;
} else {
var or__24274__auto____$4 = (function (){var G__31328 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__31328) : p2.call(null,G__31328));
})();
if(cljs.core.truth_(or__24274__auto____$4)){
return or__24274__auto____$4;
} else {
var or__24274__auto____$5 = (function (){var G__31330 = y;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__31330) : p3.call(null,G__31330));
})();
if(cljs.core.truth_(or__24274__auto____$5)){
return or__24274__auto____$5;
} else {
var or__24274__auto____$6 = (function (){var G__31332 = z;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__31332) : p1.call(null,G__31332));
})();
if(cljs.core.truth_(or__24274__auto____$6)){
return or__24274__auto____$6;
} else {
var or__24274__auto____$7 = (function (){var G__31334 = z;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__31334) : p2.call(null,G__31334));
})();
if(cljs.core.truth_(or__24274__auto____$7)){
return or__24274__auto____$7;
} else {
var G__31335 = z;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__31335) : p3.call(null,G__31335));
}
}
}
}
}
}
}
}
});
var sp3__4 = (function() { 
var G__31375__delegate = function (x,y,z,args){
var or__24274__auto__ = sp3.cljs$core$IFn$_invoke$arity$3(x,y,z);
if(cljs.core.truth_(or__24274__auto__)){
return or__24274__auto__;
} else {
return cljs.core.some(((function (or__24274__auto__){
return (function (p1__30992_SHARP_){
var or__24274__auto____$1 = (function (){var G__31337 = p1__30992_SHARP_;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__31337) : p1.call(null,G__31337));
})();
if(cljs.core.truth_(or__24274__auto____$1)){
return or__24274__auto____$1;
} else {
var or__24274__auto____$2 = (function (){var G__31339 = p1__30992_SHARP_;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__31339) : p2.call(null,G__31339));
})();
if(cljs.core.truth_(or__24274__auto____$2)){
return or__24274__auto____$2;
} else {
var G__31340 = p1__30992_SHARP_;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__31340) : p3.call(null,G__31340));
}
}
});})(or__24274__auto__))
,args);
}
};
var G__31375 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__31376__i = 0, G__31376__a = new Array(arguments.length -  3);
while (G__31376__i < G__31376__a.length) {G__31376__a[G__31376__i] = arguments[G__31376__i + 3]; ++G__31376__i;}
  args = new cljs.core.IndexedSeq(G__31376__a,0);
} 
return G__31375__delegate.call(this,x,y,z,args);};
G__31375.cljs$lang$maxFixedArity = 3;
G__31375.cljs$lang$applyTo = (function (arglist__31377){
var x = cljs.core.first(arglist__31377);
arglist__31377 = cljs.core.next(arglist__31377);
var y = cljs.core.first(arglist__31377);
arglist__31377 = cljs.core.next(arglist__31377);
var z = cljs.core.first(arglist__31377);
var args = cljs.core.rest(arglist__31377);
return G__31375__delegate(x,y,z,args);
});
G__31375.cljs$core$IFn$_invoke$arity$variadic = G__31375__delegate;
return G__31375;
})()
;
sp3 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return sp3__0.call(this);
case 1:
return sp3__1.call(this,x);
case 2:
return sp3__2.call(this,x,y);
case 3:
return sp3__3.call(this,x,y,z);
default:
var G__31378 = null;
if (arguments.length > 3) {
var G__31379__i = 0, G__31379__a = new Array(arguments.length -  3);
while (G__31379__i < G__31379__a.length) {G__31379__a[G__31379__i] = arguments[G__31379__i + 3]; ++G__31379__i;}
G__31378 = new cljs.core.IndexedSeq(G__31379__a,0);
}
return sp3__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__31378);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
sp3.cljs$lang$maxFixedArity = 3;
sp3.cljs$lang$applyTo = sp3__4.cljs$lang$applyTo;
sp3.cljs$core$IFn$_invoke$arity$0 = sp3__0;
sp3.cljs$core$IFn$_invoke$arity$1 = sp3__1;
sp3.cljs$core$IFn$_invoke$arity$2 = sp3__2;
sp3.cljs$core$IFn$_invoke$arity$3 = sp3__3;
sp3.cljs$core$IFn$_invoke$arity$variadic = sp3__4.cljs$core$IFn$_invoke$arity$variadic;
return sp3;
})()
});
var some_fn__4 = (function() { 
var G__31380__delegate = function (p1,p2,p3,ps){
var ps__$1 = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(p1,p2,p3,ps);
return ((function (ps__$1){
return (function() {
var spn = null;
var spn__0 = (function (){
return null;
});
var spn__1 = (function (x){
return cljs.core.some(((function (ps__$1){
return (function (p1__30993_SHARP_){
var G__31356 = x;
return (p1__30993_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__30993_SHARP_.cljs$core$IFn$_invoke$arity$1(G__31356) : p1__30993_SHARP_.call(null,G__31356));
});})(ps__$1))
,ps__$1);
});
var spn__2 = (function (x,y){
return cljs.core.some(((function (ps__$1){
return (function (p1__30994_SHARP_){
var or__24274__auto__ = (function (){var G__31358 = x;
return (p1__30994_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__30994_SHARP_.cljs$core$IFn$_invoke$arity$1(G__31358) : p1__30994_SHARP_.call(null,G__31358));
})();
if(cljs.core.truth_(or__24274__auto__)){
return or__24274__auto__;
} else {
var G__31359 = y;
return (p1__30994_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__30994_SHARP_.cljs$core$IFn$_invoke$arity$1(G__31359) : p1__30994_SHARP_.call(null,G__31359));
}
});})(ps__$1))
,ps__$1);
});
var spn__3 = (function (x,y,z){
return cljs.core.some(((function (ps__$1){
return (function (p1__30995_SHARP_){
var or__24274__auto__ = (function (){var G__31361 = x;
return (p1__30995_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__30995_SHARP_.cljs$core$IFn$_invoke$arity$1(G__31361) : p1__30995_SHARP_.call(null,G__31361));
})();
if(cljs.core.truth_(or__24274__auto__)){
return or__24274__auto__;
} else {
var or__24274__auto____$1 = (function (){var G__31363 = y;
return (p1__30995_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__30995_SHARP_.cljs$core$IFn$_invoke$arity$1(G__31363) : p1__30995_SHARP_.call(null,G__31363));
})();
if(cljs.core.truth_(or__24274__auto____$1)){
return or__24274__auto____$1;
} else {
var G__31364 = z;
return (p1__30995_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__30995_SHARP_.cljs$core$IFn$_invoke$arity$1(G__31364) : p1__30995_SHARP_.call(null,G__31364));
}
}
});})(ps__$1))
,ps__$1);
});
var spn__4 = (function() { 
var G__31381__delegate = function (x,y,z,args){
var or__24274__auto__ = spn.cljs$core$IFn$_invoke$arity$3(x,y,z);
if(cljs.core.truth_(or__24274__auto__)){
return or__24274__auto__;
} else {
return cljs.core.some(((function (or__24274__auto__,ps__$1){
return (function (p1__30996_SHARP_){
return cljs.core.some(p1__30996_SHARP_,args);
});})(or__24274__auto__,ps__$1))
,ps__$1);
}
};
var G__31381 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__31382__i = 0, G__31382__a = new Array(arguments.length -  3);
while (G__31382__i < G__31382__a.length) {G__31382__a[G__31382__i] = arguments[G__31382__i + 3]; ++G__31382__i;}
  args = new cljs.core.IndexedSeq(G__31382__a,0);
} 
return G__31381__delegate.call(this,x,y,z,args);};
G__31381.cljs$lang$maxFixedArity = 3;
G__31381.cljs$lang$applyTo = (function (arglist__31383){
var x = cljs.core.first(arglist__31383);
arglist__31383 = cljs.core.next(arglist__31383);
var y = cljs.core.first(arglist__31383);
arglist__31383 = cljs.core.next(arglist__31383);
var z = cljs.core.first(arglist__31383);
var args = cljs.core.rest(arglist__31383);
return G__31381__delegate(x,y,z,args);
});
G__31381.cljs$core$IFn$_invoke$arity$variadic = G__31381__delegate;
return G__31381;
})()
;
spn = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return spn__0.call(this);
case 1:
return spn__1.call(this,x);
case 2:
return spn__2.call(this,x,y);
case 3:
return spn__3.call(this,x,y,z);
default:
var G__31384 = null;
if (arguments.length > 3) {
var G__31385__i = 0, G__31385__a = new Array(arguments.length -  3);
while (G__31385__i < G__31385__a.length) {G__31385__a[G__31385__i] = arguments[G__31385__i + 3]; ++G__31385__i;}
G__31384 = new cljs.core.IndexedSeq(G__31385__a,0);
}
return spn__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__31384);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
spn.cljs$lang$maxFixedArity = 3;
spn.cljs$lang$applyTo = spn__4.cljs$lang$applyTo;
spn.cljs$core$IFn$_invoke$arity$0 = spn__0;
spn.cljs$core$IFn$_invoke$arity$1 = spn__1;
spn.cljs$core$IFn$_invoke$arity$2 = spn__2;
spn.cljs$core$IFn$_invoke$arity$3 = spn__3;
spn.cljs$core$IFn$_invoke$arity$variadic = spn__4.cljs$core$IFn$_invoke$arity$variadic;
return spn;
})()
;})(ps__$1))
};
var G__31380 = function (p1,p2,p3,var_args){
var ps = null;
if (arguments.length > 3) {
var G__31386__i = 0, G__31386__a = new Array(arguments.length -  3);
while (G__31386__i < G__31386__a.length) {G__31386__a[G__31386__i] = arguments[G__31386__i + 3]; ++G__31386__i;}
  ps = new cljs.core.IndexedSeq(G__31386__a,0);
} 
return G__31380__delegate.call(this,p1,p2,p3,ps);};
G__31380.cljs$lang$maxFixedArity = 3;
G__31380.cljs$lang$applyTo = (function (arglist__31387){
var p1 = cljs.core.first(arglist__31387);
arglist__31387 = cljs.core.next(arglist__31387);
var p2 = cljs.core.first(arglist__31387);
arglist__31387 = cljs.core.next(arglist__31387);
var p3 = cljs.core.first(arglist__31387);
var ps = cljs.core.rest(arglist__31387);
return G__31380__delegate(p1,p2,p3,ps);
});
G__31380.cljs$core$IFn$_invoke$arity$variadic = G__31380__delegate;
return G__31380;
})()
;
some_fn = function(p1,p2,p3,var_args){
var ps = var_args;
switch(arguments.length){
case 1:
return some_fn__1.call(this,p1);
case 2:
return some_fn__2.call(this,p1,p2);
case 3:
return some_fn__3.call(this,p1,p2,p3);
default:
var G__31388 = null;
if (arguments.length > 3) {
var G__31389__i = 0, G__31389__a = new Array(arguments.length -  3);
while (G__31389__i < G__31389__a.length) {G__31389__a[G__31389__i] = arguments[G__31389__i + 3]; ++G__31389__i;}
G__31388 = new cljs.core.IndexedSeq(G__31389__a,0);
}
return some_fn__4.cljs$core$IFn$_invoke$arity$variadic(p1,p2,p3, G__31388);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
some_fn.cljs$lang$maxFixedArity = 3;
some_fn.cljs$lang$applyTo = some_fn__4.cljs$lang$applyTo;
some_fn.cljs$core$IFn$_invoke$arity$1 = some_fn__1;
some_fn.cljs$core$IFn$_invoke$arity$2 = some_fn__2;
some_fn.cljs$core$IFn$_invoke$arity$3 = some_fn__3;
some_fn.cljs$core$IFn$_invoke$arity$variadic = some_fn__4.cljs$core$IFn$_invoke$arity$variadic;
return some_fn;
})()
;
/**
* Returns a lazy sequence consisting of the result of applying f to
* the set of first items of each coll, followed by applying f to the
* set of second items in each coll, until any one of the colls is
* exhausted.  Any remaining items in other colls are ignored. Function
* f should accept number-of-colls arguments. Returns a transducer when
* no collection is provided.
* @param {...*} var_args
*/
cljs.core.map = (function() {
var map = null;
var map__1 = (function (f){
return (function (rf){
return (function() {
var G__31444 = null;
var G__31444__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__31444__1 = (function (result){
var G__31430 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__31430) : rf.call(null,G__31430));
});
var G__31444__2 = (function (result,input){
var G__31431 = result;
var G__31432 = (function (){var G__31433 = input;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__31433) : f.call(null,G__31433));
})();
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__31431,G__31432) : rf.call(null,G__31431,G__31432));
});
var G__31444__3 = (function() { 
var G__31445__delegate = function (result,input,inputs){
var G__31434 = result;
var G__31435 = cljs.core.apply.cljs$core$IFn$_invoke$arity$3(f,input,inputs);
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__31434,G__31435) : rf.call(null,G__31434,G__31435));
};
var G__31445 = function (result,input,var_args){
var inputs = null;
if (arguments.length > 2) {
var G__31446__i = 0, G__31446__a = new Array(arguments.length -  2);
while (G__31446__i < G__31446__a.length) {G__31446__a[G__31446__i] = arguments[G__31446__i + 2]; ++G__31446__i;}
  inputs = new cljs.core.IndexedSeq(G__31446__a,0);
} 
return G__31445__delegate.call(this,result,input,inputs);};
G__31445.cljs$lang$maxFixedArity = 2;
G__31445.cljs$lang$applyTo = (function (arglist__31447){
var result = cljs.core.first(arglist__31447);
arglist__31447 = cljs.core.next(arglist__31447);
var input = cljs.core.first(arglist__31447);
var inputs = cljs.core.rest(arglist__31447);
return G__31445__delegate(result,input,inputs);
});
G__31445.cljs$core$IFn$_invoke$arity$variadic = G__31445__delegate;
return G__31445;
})()
;
G__31444 = function(result,input,var_args){
var inputs = var_args;
switch(arguments.length){
case 0:
return G__31444__0.call(this);
case 1:
return G__31444__1.call(this,result);
case 2:
return G__31444__2.call(this,result,input);
default:
var G__31448 = null;
if (arguments.length > 2) {
var G__31449__i = 0, G__31449__a = new Array(arguments.length -  2);
while (G__31449__i < G__31449__a.length) {G__31449__a[G__31449__i] = arguments[G__31449__i + 2]; ++G__31449__i;}
G__31448 = new cljs.core.IndexedSeq(G__31449__a,0);
}
return G__31444__3.cljs$core$IFn$_invoke$arity$variadic(result,input, G__31448);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__31444.cljs$lang$maxFixedArity = 2;
G__31444.cljs$lang$applyTo = G__31444__3.cljs$lang$applyTo;
G__31444.cljs$core$IFn$_invoke$arity$0 = G__31444__0;
G__31444.cljs$core$IFn$_invoke$arity$1 = G__31444__1;
G__31444.cljs$core$IFn$_invoke$arity$2 = G__31444__2;
G__31444.cljs$core$IFn$_invoke$arity$variadic = G__31444__3.cljs$core$IFn$_invoke$arity$variadic;
return G__31444;
})()
});
});
var map__2 = (function (f,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(s)){
var c = cljs.core.chunk_first(s);
var size = cljs.core.count(c);
var b = cljs.core.chunk_buffer(size);
var n__25161__auto___31450 = size;
var i_31451 = (0);
while(true){
if((i_31451 < n__25161__auto___31450)){
cljs.core.chunk_append(b,(function (){var G__31436 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c,i_31451);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__31436) : f.call(null,G__31436));
})());

var G__31452 = (i_31451 + (1));
i_31451 = G__31452;
continue;
} else {
}
break;
}

return cljs.core.chunk_cons(cljs.core.chunk(b),map.cljs$core$IFn$_invoke$arity$2(f,cljs.core.chunk_rest(s)));
} else {
return cljs.core.cons((function (){var G__31437 = cljs.core.first(s);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__31437) : f.call(null,G__31437));
})(),map.cljs$core$IFn$_invoke$arity$2(f,cljs.core.rest(s)));
}
} else {
return null;
}
}),null,null));
});
var map__3 = (function (f,c1,c2){
return (new cljs.core.LazySeq(null,(function (){
var s1 = cljs.core.seq(c1);
var s2 = cljs.core.seq(c2);
if((s1) && (s2)){
return cljs.core.cons((function (){var G__31438 = cljs.core.first(s1);
var G__31439 = cljs.core.first(s2);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__31438,G__31439) : f.call(null,G__31438,G__31439));
})(),map.cljs$core$IFn$_invoke$arity$3(f,cljs.core.rest(s1),cljs.core.rest(s2)));
} else {
return null;
}
}),null,null));
});
var map__4 = (function (f,c1,c2,c3){
return (new cljs.core.LazySeq(null,(function (){
var s1 = cljs.core.seq(c1);
var s2 = cljs.core.seq(c2);
var s3 = cljs.core.seq(c3);
if((s1) && (s2) && (s3)){
return cljs.core.cons((function (){var G__31440 = cljs.core.first(s1);
var G__31441 = cljs.core.first(s2);
var G__31442 = cljs.core.first(s3);
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__31440,G__31441,G__31442) : f.call(null,G__31440,G__31441,G__31442));
})(),map.cljs$core$IFn$_invoke$arity$4(f,cljs.core.rest(s1),cljs.core.rest(s2),cljs.core.rest(s3)));
} else {
return null;
}
}),null,null));
});
var map__5 = (function() { 
var G__31453__delegate = function (f,c1,c2,c3,colls){
var step = (function step(cs){
return (new cljs.core.LazySeq(null,(function (){
var ss = map.cljs$core$IFn$_invoke$arity$2(cljs.core.seq,cs);
if(cljs.core.every_QMARK_(cljs.core.identity,ss)){
return cljs.core.cons(map.cljs$core$IFn$_invoke$arity$2(cljs.core.first,ss),step(map.cljs$core$IFn$_invoke$arity$2(cljs.core.rest,ss)));
} else {
return null;
}
}),null,null));
});
return map.cljs$core$IFn$_invoke$arity$2(((function (step){
return (function (p1__31390_SHARP_){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$2(f,p1__31390_SHARP_);
});})(step))
,step(cljs.core.conj.cljs$core$IFn$_invoke$arity$variadic(colls,c3,cljs.core.array_seq([c2,c1], 0))));
};
var G__31453 = function (f,c1,c2,c3,var_args){
var colls = null;
if (arguments.length > 4) {
var G__31454__i = 0, G__31454__a = new Array(arguments.length -  4);
while (G__31454__i < G__31454__a.length) {G__31454__a[G__31454__i] = arguments[G__31454__i + 4]; ++G__31454__i;}
  colls = new cljs.core.IndexedSeq(G__31454__a,0);
} 
return G__31453__delegate.call(this,f,c1,c2,c3,colls);};
G__31453.cljs$lang$maxFixedArity = 4;
G__31453.cljs$lang$applyTo = (function (arglist__31455){
var f = cljs.core.first(arglist__31455);
arglist__31455 = cljs.core.next(arglist__31455);
var c1 = cljs.core.first(arglist__31455);
arglist__31455 = cljs.core.next(arglist__31455);
var c2 = cljs.core.first(arglist__31455);
arglist__31455 = cljs.core.next(arglist__31455);
var c3 = cljs.core.first(arglist__31455);
var colls = cljs.core.rest(arglist__31455);
return G__31453__delegate(f,c1,c2,c3,colls);
});
G__31453.cljs$core$IFn$_invoke$arity$variadic = G__31453__delegate;
return G__31453;
})()
;
map = function(f,c1,c2,c3,var_args){
var colls = var_args;
switch(arguments.length){
case 1:
return map__1.call(this,f);
case 2:
return map__2.call(this,f,c1);
case 3:
return map__3.call(this,f,c1,c2);
case 4:
return map__4.call(this,f,c1,c2,c3);
default:
var G__31456 = null;
if (arguments.length > 4) {
var G__31457__i = 0, G__31457__a = new Array(arguments.length -  4);
while (G__31457__i < G__31457__a.length) {G__31457__a[G__31457__i] = arguments[G__31457__i + 4]; ++G__31457__i;}
G__31456 = new cljs.core.IndexedSeq(G__31457__a,0);
}
return map__5.cljs$core$IFn$_invoke$arity$variadic(f,c1,c2,c3, G__31456);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
map.cljs$lang$maxFixedArity = 4;
map.cljs$lang$applyTo = map__5.cljs$lang$applyTo;
map.cljs$core$IFn$_invoke$arity$1 = map__1;
map.cljs$core$IFn$_invoke$arity$2 = map__2;
map.cljs$core$IFn$_invoke$arity$3 = map__3;
map.cljs$core$IFn$_invoke$arity$4 = map__4;
map.cljs$core$IFn$_invoke$arity$variadic = map__5.cljs$core$IFn$_invoke$arity$variadic;
return map;
})()
;
/**
* Returns a lazy sequence of the first n items in coll, or all items if
* there are fewer than n.  Returns a stateful transducer when
* no collection is provided.
*/
cljs.core.take = (function() {
var take = null;
var take__1 = (function (n){
return (function (rf){
var na = cljs.core.volatile_BANG_(n);
return ((function (na){
return (function() {
var G__31466 = null;
var G__31466__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__31466__1 = (function (result){
var G__31463 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__31463) : rf.call(null,G__31463));
});
var G__31466__2 = (function (result,input){
var n__$1 = cljs.core.deref(na);
var nn = na.cljs$core$IVolatile$_vreset_BANG_$arity$2(null,(na.cljs$core$IDeref$_deref$arity$1(null) - (1)));
var result__$1 = (((n__$1 > (0)))?(function (){var G__31464 = result;
var G__31465 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__31464,G__31465) : rf.call(null,G__31464,G__31465));
})():result);
if(!((nn > (0)))){
return cljs.core.ensure_reduced(result__$1);
} else {
return result__$1;
}
});
G__31466 = function(result,input){
switch(arguments.length){
case 0:
return G__31466__0.call(this);
case 1:
return G__31466__1.call(this,result);
case 2:
return G__31466__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__31466.cljs$core$IFn$_invoke$arity$0 = G__31466__0;
G__31466.cljs$core$IFn$_invoke$arity$1 = G__31466__1;
G__31466.cljs$core$IFn$_invoke$arity$2 = G__31466__2;
return G__31466;
})()
;})(na))
});
});
var take__2 = (function (n,coll){
return (new cljs.core.LazySeq(null,(function (){
if((n > (0))){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
return cljs.core.cons(cljs.core.first(s),take.cljs$core$IFn$_invoke$arity$2((n - (1)),cljs.core.rest(s)));
} else {
return null;
}
} else {
return null;
}
}),null,null));
});
take = function(n,coll){
switch(arguments.length){
case 1:
return take__1.call(this,n);
case 2:
return take__2.call(this,n,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
take.cljs$core$IFn$_invoke$arity$1 = take__1;
take.cljs$core$IFn$_invoke$arity$2 = take__2;
return take;
})()
;
/**
* Returns a lazy sequence of all but the first n items in coll.
* Returns a stateful transducer when no collection is provided.
*/
cljs.core.drop = (function() {
var drop = null;
var drop__1 = (function (n){
return (function (rf){
var na = cljs.core.volatile_BANG_(n);
return ((function (na){
return (function() {
var G__31473 = null;
var G__31473__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__31473__1 = (function (result){
var G__31470 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__31470) : rf.call(null,G__31470));
});
var G__31473__2 = (function (result,input){
var n__$1 = cljs.core.deref(na);
na.cljs$core$IVolatile$_vreset_BANG_$arity$2(null,(na.cljs$core$IDeref$_deref$arity$1(null) - (1)));

if((n__$1 > (0))){
return result;
} else {
var G__31471 = result;
var G__31472 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__31471,G__31472) : rf.call(null,G__31471,G__31472));
}
});
G__31473 = function(result,input){
switch(arguments.length){
case 0:
return G__31473__0.call(this);
case 1:
return G__31473__1.call(this,result);
case 2:
return G__31473__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__31473.cljs$core$IFn$_invoke$arity$0 = G__31473__0;
G__31473.cljs$core$IFn$_invoke$arity$1 = G__31473__1;
G__31473.cljs$core$IFn$_invoke$arity$2 = G__31473__2;
return G__31473;
})()
;})(na))
});
});
var drop__2 = (function (n,coll){
var step = (function (n__$1,coll__$1){
while(true){
var s = cljs.core.seq(coll__$1);
if(((n__$1 > (0))) && (s)){
var G__31474 = (n__$1 - (1));
var G__31475 = cljs.core.rest(s);
n__$1 = G__31474;
coll__$1 = G__31475;
continue;
} else {
return s;
}
break;
}
});
return (new cljs.core.LazySeq(null,((function (step){
return (function (){
return step(n,coll);
});})(step))
,null,null));
});
drop = function(n,coll){
switch(arguments.length){
case 1:
return drop__1.call(this,n);
case 2:
return drop__2.call(this,n,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
drop.cljs$core$IFn$_invoke$arity$1 = drop__1;
drop.cljs$core$IFn$_invoke$arity$2 = drop__2;
return drop;
})()
;
/**
* Return a lazy sequence of all but the last n (default 1) items in coll
*/
cljs.core.drop_last = (function() {
var drop_last = null;
var drop_last__1 = (function (s){
return drop_last.cljs$core$IFn$_invoke$arity$2((1),s);
});
var drop_last__2 = (function (n,s){
return cljs.core.map.cljs$core$IFn$_invoke$arity$3((function (x,_){
return x;
}),s,cljs.core.drop.cljs$core$IFn$_invoke$arity$2(n,s));
});
drop_last = function(n,s){
switch(arguments.length){
case 1:
return drop_last__1.call(this,n);
case 2:
return drop_last__2.call(this,n,s);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
drop_last.cljs$core$IFn$_invoke$arity$1 = drop_last__1;
drop_last.cljs$core$IFn$_invoke$arity$2 = drop_last__2;
return drop_last;
})()
;
/**
* Returns a seq of the last n items in coll.  Depending on the type
* of coll may be no better than linear time.  For vectors, see also subvec.
*/
cljs.core.take_last = (function take_last(n,coll){
var s = cljs.core.seq(coll);
var lead = cljs.core.seq(cljs.core.drop.cljs$core$IFn$_invoke$arity$2(n,coll));
while(true){
if(lead){
var G__31478 = cljs.core.next(s);
var G__31479 = cljs.core.next(lead);
s = G__31478;
lead = G__31479;
continue;
} else {
return s;
}
break;
}
});
/**
* Returns a lazy sequence of the items in coll starting from the
* first item for which (pred item) returns logical false.  Returns a
* stateful transducer when no collection is provided.
*/
cljs.core.drop_while = (function() {
var drop_while = null;
var drop_while__1 = (function (pred){
return (function (rf){
var da = cljs.core.volatile_BANG_(true);
return ((function (da){
return (function() {
var G__31492 = null;
var G__31492__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__31492__1 = (function (result){
var G__31486 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__31486) : rf.call(null,G__31486));
});
var G__31492__2 = (function (result,input){
var drop_QMARK_ = cljs.core.deref(da);
if(cljs.core.truth_((function (){var and__24262__auto__ = drop_QMARK_;
if(cljs.core.truth_(and__24262__auto__)){
var G__31487 = input;
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__31487) : pred.call(null,G__31487));
} else {
return and__24262__auto__;
}
})())){
return result;
} else {
cljs.core.vreset_BANG_(da,null);

var G__31488 = result;
var G__31489 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__31488,G__31489) : rf.call(null,G__31488,G__31489));
}
});
G__31492 = function(result,input){
switch(arguments.length){
case 0:
return G__31492__0.call(this);
case 1:
return G__31492__1.call(this,result);
case 2:
return G__31492__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__31492.cljs$core$IFn$_invoke$arity$0 = G__31492__0;
G__31492.cljs$core$IFn$_invoke$arity$1 = G__31492__1;
G__31492.cljs$core$IFn$_invoke$arity$2 = G__31492__2;
return G__31492;
})()
;})(da))
});
});
var drop_while__2 = (function (pred,coll){
var step = (function (pred__$1,coll__$1){
while(true){
var s = cljs.core.seq(coll__$1);
if(cljs.core.truth_((function (){var and__24262__auto__ = s;
if(and__24262__auto__){
var G__31491 = cljs.core.first(s);
return (pred__$1.cljs$core$IFn$_invoke$arity$1 ? pred__$1.cljs$core$IFn$_invoke$arity$1(G__31491) : pred__$1.call(null,G__31491));
} else {
return and__24262__auto__;
}
})())){
var G__31493 = pred__$1;
var G__31494 = cljs.core.rest(s);
pred__$1 = G__31493;
coll__$1 = G__31494;
continue;
} else {
return s;
}
break;
}
});
return (new cljs.core.LazySeq(null,((function (step){
return (function (){
return step(pred,coll);
});})(step))
,null,null));
});
drop_while = function(pred,coll){
switch(arguments.length){
case 1:
return drop_while__1.call(this,pred);
case 2:
return drop_while__2.call(this,pred,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
drop_while.cljs$core$IFn$_invoke$arity$1 = drop_while__1;
drop_while.cljs$core$IFn$_invoke$arity$2 = drop_while__2;
return drop_while;
})()
;
/**
* Returns a lazy (infinite!) sequence of repetitions of the items in coll.
*/
cljs.core.cycle = (function cycle(coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
return cljs.core.concat.cljs$core$IFn$_invoke$arity$2(s,cycle(s));
} else {
return null;
}
}),null,null));
});
/**
* Returns a vector of [(take n coll) (drop n coll)]
*/
cljs.core.split_at = (function split_at(n,coll){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,coll),cljs.core.drop.cljs$core$IFn$_invoke$arity$2(n,coll)], null);
});
/**
* Returns a lazy (infinite!, or length n if supplied) sequence of xs.
*/
cljs.core.repeat = (function() {
var repeat = null;
var repeat__1 = (function (x){
return (new cljs.core.LazySeq(null,(function (){
return cljs.core.cons(x,repeat.cljs$core$IFn$_invoke$arity$1(x));
}),null,null));
});
var repeat__2 = (function (n,x){
return cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,repeat.cljs$core$IFn$_invoke$arity$1(x));
});
repeat = function(n,x){
switch(arguments.length){
case 1:
return repeat__1.call(this,n);
case 2:
return repeat__2.call(this,n,x);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
repeat.cljs$core$IFn$_invoke$arity$1 = repeat__1;
repeat.cljs$core$IFn$_invoke$arity$2 = repeat__2;
return repeat;
})()
;
/**
* Returns a lazy seq of n xs.
*/
cljs.core.replicate = (function replicate(n,x){
return cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,cljs.core.repeat.cljs$core$IFn$_invoke$arity$1(x));
});
/**
* Takes a function of no args, presumably with side effects, and
* returns an infinite (or length n if supplied) lazy sequence of calls
* to it
*/
cljs.core.repeatedly = (function() {
var repeatedly = null;
var repeatedly__1 = (function (f){
return (new cljs.core.LazySeq(null,(function (){
return cljs.core.cons((function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})(),repeatedly.cljs$core$IFn$_invoke$arity$1(f));
}),null,null));
});
var repeatedly__2 = (function (n,f){
return cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,repeatedly.cljs$core$IFn$_invoke$arity$1(f));
});
repeatedly = function(n,f){
switch(arguments.length){
case 1:
return repeatedly__1.call(this,n);
case 2:
return repeatedly__2.call(this,n,f);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
repeatedly.cljs$core$IFn$_invoke$arity$1 = repeatedly__1;
repeatedly.cljs$core$IFn$_invoke$arity$2 = repeatedly__2;
return repeatedly;
})()
;
/**
* Returns a lazy sequence of x, (f x), (f (f x)) etc. f must be free of side-effects
*/
cljs.core.iterate = (function iterate(f,x){
return cljs.core.cons(x,(new cljs.core.LazySeq(null,(function (){
return iterate(f,(function (){var G__31503 = x;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__31503) : f.call(null,G__31503));
})());
}),null,null)));
});
/**
* Returns a lazy seq of the first item in each coll, then the second etc.
* @param {...*} var_args
*/
cljs.core.interleave = (function() {
var interleave = null;
var interleave__2 = (function (c1,c2){
return (new cljs.core.LazySeq(null,(function (){
var s1 = cljs.core.seq(c1);
var s2 = cljs.core.seq(c2);
if((s1) && (s2)){
return cljs.core.cons(cljs.core.first(s1),cljs.core.cons(cljs.core.first(s2),interleave.cljs$core$IFn$_invoke$arity$2(cljs.core.rest(s1),cljs.core.rest(s2))));
} else {
return null;
}
}),null,null));
});
var interleave__3 = (function() { 
var G__31506__delegate = function (c1,c2,colls){
return (new cljs.core.LazySeq(null,(function (){
var ss = cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.seq,cljs.core.conj.cljs$core$IFn$_invoke$arity$variadic(colls,c2,cljs.core.array_seq([c1], 0)));
if(cljs.core.every_QMARK_(cljs.core.identity,ss)){
return cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.first,ss),cljs.core.apply.cljs$core$IFn$_invoke$arity$2(interleave,cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.rest,ss)));
} else {
return null;
}
}),null,null));
};
var G__31506 = function (c1,c2,var_args){
var colls = null;
if (arguments.length > 2) {
var G__31507__i = 0, G__31507__a = new Array(arguments.length -  2);
while (G__31507__i < G__31507__a.length) {G__31507__a[G__31507__i] = arguments[G__31507__i + 2]; ++G__31507__i;}
  colls = new cljs.core.IndexedSeq(G__31507__a,0);
} 
return G__31506__delegate.call(this,c1,c2,colls);};
G__31506.cljs$lang$maxFixedArity = 2;
G__31506.cljs$lang$applyTo = (function (arglist__31508){
var c1 = cljs.core.first(arglist__31508);
arglist__31508 = cljs.core.next(arglist__31508);
var c2 = cljs.core.first(arglist__31508);
var colls = cljs.core.rest(arglist__31508);
return G__31506__delegate(c1,c2,colls);
});
G__31506.cljs$core$IFn$_invoke$arity$variadic = G__31506__delegate;
return G__31506;
})()
;
interleave = function(c1,c2,var_args){
var colls = var_args;
switch(arguments.length){
case 2:
return interleave__2.call(this,c1,c2);
default:
var G__31509 = null;
if (arguments.length > 2) {
var G__31510__i = 0, G__31510__a = new Array(arguments.length -  2);
while (G__31510__i < G__31510__a.length) {G__31510__a[G__31510__i] = arguments[G__31510__i + 2]; ++G__31510__i;}
G__31509 = new cljs.core.IndexedSeq(G__31510__a,0);
}
return interleave__3.cljs$core$IFn$_invoke$arity$variadic(c1,c2, G__31509);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
interleave.cljs$lang$maxFixedArity = 2;
interleave.cljs$lang$applyTo = interleave__3.cljs$lang$applyTo;
interleave.cljs$core$IFn$_invoke$arity$2 = interleave__2;
interleave.cljs$core$IFn$_invoke$arity$variadic = interleave__3.cljs$core$IFn$_invoke$arity$variadic;
return interleave;
})()
;
/**
* Returns a lazy seq of the elements of coll separated by sep
*/
cljs.core.interpose = (function interpose(sep,coll){
return cljs.core.drop.cljs$core$IFn$_invoke$arity$2((1),cljs.core.interleave.cljs$core$IFn$_invoke$arity$2(cljs.core.repeat.cljs$core$IFn$_invoke$arity$1(sep),coll));
});
/**
* Take a collection of collections, and return a lazy seq
* of items from the inner collection
*/
cljs.core.flatten1 = (function flatten1(colls){
var cat = (function cat(coll,colls__$1){
return (new cljs.core.LazySeq(null,(function (){
var temp__4124__auto__ = cljs.core.seq(coll);
if(temp__4124__auto__){
var coll__$1 = temp__4124__auto__;
return cljs.core.cons(cljs.core.first(coll__$1),cat(cljs.core.rest(coll__$1),colls__$1));
} else {
if(cljs.core.seq(colls__$1)){
return cat(cljs.core.first(colls__$1),cljs.core.rest(colls__$1));
} else {
return null;
}
}
}),null,null));
});
return cat(null,colls);
});
/**
* Returns the result of applying concat to the result of applying map
* to f and colls.  Thus function f should return a collection. Returns
* a transducer when no collections are provided
* @param {...*} var_args
*/
cljs.core.mapcat = (function() {
var mapcat = null;
var mapcat__1 = (function (f){
return cljs.core.comp.cljs$core$IFn$_invoke$arity$2(cljs.core.map.cljs$core$IFn$_invoke$arity$1(f),cljs.core.cat);
});
var mapcat__2 = (function() { 
var G__31519__delegate = function (f,colls){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.concat,cljs.core.apply.cljs$core$IFn$_invoke$arity$3(cljs.core.map,f,colls));
};
var G__31519 = function (f,var_args){
var colls = null;
if (arguments.length > 1) {
var G__31520__i = 0, G__31520__a = new Array(arguments.length -  1);
while (G__31520__i < G__31520__a.length) {G__31520__a[G__31520__i] = arguments[G__31520__i + 1]; ++G__31520__i;}
  colls = new cljs.core.IndexedSeq(G__31520__a,0);
} 
return G__31519__delegate.call(this,f,colls);};
G__31519.cljs$lang$maxFixedArity = 1;
G__31519.cljs$lang$applyTo = (function (arglist__31521){
var f = cljs.core.first(arglist__31521);
var colls = cljs.core.rest(arglist__31521);
return G__31519__delegate(f,colls);
});
G__31519.cljs$core$IFn$_invoke$arity$variadic = G__31519__delegate;
return G__31519;
})()
;
mapcat = function(f,var_args){
var colls = var_args;
switch(arguments.length){
case 1:
return mapcat__1.call(this,f);
default:
var G__31522 = null;
if (arguments.length > 1) {
var G__31523__i = 0, G__31523__a = new Array(arguments.length -  1);
while (G__31523__i < G__31523__a.length) {G__31523__a[G__31523__i] = arguments[G__31523__i + 1]; ++G__31523__i;}
G__31522 = new cljs.core.IndexedSeq(G__31523__a,0);
}
return mapcat__2.cljs$core$IFn$_invoke$arity$variadic(f, G__31522);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
mapcat.cljs$lang$maxFixedArity = 1;
mapcat.cljs$lang$applyTo = mapcat__2.cljs$lang$applyTo;
mapcat.cljs$core$IFn$_invoke$arity$1 = mapcat__1;
mapcat.cljs$core$IFn$_invoke$arity$variadic = mapcat__2.cljs$core$IFn$_invoke$arity$variadic;
return mapcat;
})()
;
/**
* Returns a lazy sequence of the items in coll for which
* (pred item) returns true. pred must be free of side-effects.
* Returns a transducer when no collection is provided.
*/
cljs.core.filter = (function() {
var filter = null;
var filter__1 = (function (pred){
return (function (rf){
return (function() {
var G__31542 = null;
var G__31542__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__31542__1 = (function (result){
var G__31536 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__31536) : rf.call(null,G__31536));
});
var G__31542__2 = (function (result,input){
if(cljs.core.truth_((function (){var G__31537 = input;
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__31537) : pred.call(null,G__31537));
})())){
var G__31538 = result;
var G__31539 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__31538,G__31539) : rf.call(null,G__31538,G__31539));
} else {
return result;
}
});
G__31542 = function(result,input){
switch(arguments.length){
case 0:
return G__31542__0.call(this);
case 1:
return G__31542__1.call(this,result);
case 2:
return G__31542__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__31542.cljs$core$IFn$_invoke$arity$0 = G__31542__0;
G__31542.cljs$core$IFn$_invoke$arity$1 = G__31542__1;
G__31542.cljs$core$IFn$_invoke$arity$2 = G__31542__2;
return G__31542;
})()
});
});
var filter__2 = (function (pred,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(s)){
var c = cljs.core.chunk_first(s);
var size = cljs.core.count(c);
var b = cljs.core.chunk_buffer(size);
var n__25161__auto___31543 = size;
var i_31544 = (0);
while(true){
if((i_31544 < n__25161__auto___31543)){
if(cljs.core.truth_((function (){var G__31540 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c,i_31544);
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__31540) : pred.call(null,G__31540));
})())){
cljs.core.chunk_append(b,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c,i_31544));
} else {
}

var G__31545 = (i_31544 + (1));
i_31544 = G__31545;
continue;
} else {
}
break;
}

return cljs.core.chunk_cons(cljs.core.chunk(b),filter.cljs$core$IFn$_invoke$arity$2(pred,cljs.core.chunk_rest(s)));
} else {
var f = cljs.core.first(s);
var r = cljs.core.rest(s);
if(cljs.core.truth_((function (){var G__31541 = f;
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__31541) : pred.call(null,G__31541));
})())){
return cljs.core.cons(f,filter.cljs$core$IFn$_invoke$arity$2(pred,r));
} else {
return filter.cljs$core$IFn$_invoke$arity$2(pred,r);
}
}
} else {
return null;
}
}),null,null));
});
filter = function(pred,coll){
switch(arguments.length){
case 1:
return filter__1.call(this,pred);
case 2:
return filter__2.call(this,pred,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
filter.cljs$core$IFn$_invoke$arity$1 = filter__1;
filter.cljs$core$IFn$_invoke$arity$2 = filter__2;
return filter;
})()
;
/**
* Returns a lazy sequence of the items in coll for which
* (pred item) returns false. pred must be free of side-effects.
* Returns a transducer when no collection is provided.
*/
cljs.core.remove = (function() {
var remove = null;
var remove__1 = (function (pred){
return cljs.core.filter.cljs$core$IFn$_invoke$arity$1(cljs.core.complement(pred));
});
var remove__2 = (function (pred,coll){
return cljs.core.filter.cljs$core$IFn$_invoke$arity$2(cljs.core.complement(pred),coll);
});
remove = function(pred,coll){
switch(arguments.length){
case 1:
return remove__1.call(this,pred);
case 2:
return remove__2.call(this,pred,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
remove.cljs$core$IFn$_invoke$arity$1 = remove__1;
remove.cljs$core$IFn$_invoke$arity$2 = remove__2;
return remove;
})()
;
/**
* Returns a lazy sequence of the nodes in a tree, via a depth-first walk.
* branch? must be a fn of one arg that returns true if passed a node
* that can have children (but may not).  children must be a fn of one
* arg that returns a sequence of the children. Will only be called on
* nodes for which branch? returns true. Root is the root node of the
* tree.
*/
cljs.core.tree_seq = (function tree_seq(branch_QMARK_,children,root){
var walk = (function walk(node){
return (new cljs.core.LazySeq(null,(function (){
return cljs.core.cons(node,(cljs.core.truth_((function (){var G__31552 = node;
return (branch_QMARK_.cljs$core$IFn$_invoke$arity$1 ? branch_QMARK_.cljs$core$IFn$_invoke$arity$1(G__31552) : branch_QMARK_.call(null,G__31552));
})())?cljs.core.mapcat.cljs$core$IFn$_invoke$arity$variadic(walk,cljs.core.array_seq([(function (){var G__31553 = node;
return (children.cljs$core$IFn$_invoke$arity$1 ? children.cljs$core$IFn$_invoke$arity$1(G__31553) : children.call(null,G__31553));
})()], 0)):null));
}),null,null));
});
return walk(root);
});
/**
* Takes any nested combination of sequential things (lists, vectors,
* etc.) and returns their contents as a single, flat sequence.
* (flatten nil) returns nil.
*/
cljs.core.flatten = (function flatten(x){
return cljs.core.filter.cljs$core$IFn$_invoke$arity$2((function (p1__31554_SHARP_){
return !(cljs.core.sequential_QMARK_(p1__31554_SHARP_));
}),cljs.core.rest(cljs.core.tree_seq(cljs.core.sequential_QMARK_,cljs.core.seq,x)));
});
/**
* Returns a new coll consisting of to-coll with all of the items of
* from-coll conjoined. A transducer may be supplied.
*/
cljs.core.into = (function() {
var into = null;
var into__2 = (function (to,from){
if(!((to == null))){
if((function (){var G__31557 = to;
if(G__31557){
var bit__24948__auto__ = (G__31557.cljs$lang$protocol_mask$partition1$ & (4));
if((bit__24948__auto__) || (G__31557.cljs$core$IEditableCollection$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return cljs.core.with_meta(cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj_BANG_,cljs.core.transient$(to),from)),cljs.core.meta(to));
} else {
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj,to,from);
}
} else {
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.conj,cljs.core.List.EMPTY,from);
}
});
var into__3 = (function (to,xform,from){
if((function (){var G__31558 = to;
if(G__31558){
var bit__24948__auto__ = (G__31558.cljs$lang$protocol_mask$partition1$ & (4));
if((bit__24948__auto__) || (G__31558.cljs$core$IEditableCollection$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return cljs.core.with_meta(cljs.core.persistent_BANG_(cljs.core.transduce.cljs$core$IFn$_invoke$arity$4(xform,cljs.core.conj_BANG_,cljs.core.transient$(to),from)),cljs.core.meta(to));
} else {
return cljs.core.transduce.cljs$core$IFn$_invoke$arity$4(xform,cljs.core.conj,to,from);
}
});
into = function(to,xform,from){
switch(arguments.length){
case 2:
return into__2.call(this,to,xform);
case 3:
return into__3.call(this,to,xform,from);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
into.cljs$core$IFn$_invoke$arity$2 = into__2;
into.cljs$core$IFn$_invoke$arity$3 = into__3;
return into;
})()
;
/**
* Returns a vector consisting of the result of applying f to the
* set of first items of each coll, followed by applying f to the set
* of second items in each coll, until any one of the colls is
* exhausted.  Any remaining items in other colls are ignored. Function
* f should accept number-of-colls arguments.
* @param {...*} var_args
*/
cljs.core.mapv = (function() {
var mapv = null;
var mapv__2 = (function (f,coll){
return cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (v,o){
return cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$2(v,(function (){var G__31560 = o;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__31560) : f.call(null,G__31560));
})());
}),cljs.core.transient$(cljs.core.PersistentVector.EMPTY),coll));
});
var mapv__3 = (function (f,c1,c2){
return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentVector.EMPTY,cljs.core.map.cljs$core$IFn$_invoke$arity$3(f,c1,c2));
});
var mapv__4 = (function (f,c1,c2,c3){
return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentVector.EMPTY,cljs.core.map.cljs$core$IFn$_invoke$arity$4(f,c1,c2,c3));
});
var mapv__5 = (function() { 
var G__31561__delegate = function (f,c1,c2,c3,colls){
return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentVector.EMPTY,cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(cljs.core.map,f,c1,c2,c3,cljs.core.array_seq([colls], 0)));
};
var G__31561 = function (f,c1,c2,c3,var_args){
var colls = null;
if (arguments.length > 4) {
var G__31562__i = 0, G__31562__a = new Array(arguments.length -  4);
while (G__31562__i < G__31562__a.length) {G__31562__a[G__31562__i] = arguments[G__31562__i + 4]; ++G__31562__i;}
  colls = new cljs.core.IndexedSeq(G__31562__a,0);
} 
return G__31561__delegate.call(this,f,c1,c2,c3,colls);};
G__31561.cljs$lang$maxFixedArity = 4;
G__31561.cljs$lang$applyTo = (function (arglist__31563){
var f = cljs.core.first(arglist__31563);
arglist__31563 = cljs.core.next(arglist__31563);
var c1 = cljs.core.first(arglist__31563);
arglist__31563 = cljs.core.next(arglist__31563);
var c2 = cljs.core.first(arglist__31563);
arglist__31563 = cljs.core.next(arglist__31563);
var c3 = cljs.core.first(arglist__31563);
var colls = cljs.core.rest(arglist__31563);
return G__31561__delegate(f,c1,c2,c3,colls);
});
G__31561.cljs$core$IFn$_invoke$arity$variadic = G__31561__delegate;
return G__31561;
})()
;
mapv = function(f,c1,c2,c3,var_args){
var colls = var_args;
switch(arguments.length){
case 2:
return mapv__2.call(this,f,c1);
case 3:
return mapv__3.call(this,f,c1,c2);
case 4:
return mapv__4.call(this,f,c1,c2,c3);
default:
var G__31564 = null;
if (arguments.length > 4) {
var G__31565__i = 0, G__31565__a = new Array(arguments.length -  4);
while (G__31565__i < G__31565__a.length) {G__31565__a[G__31565__i] = arguments[G__31565__i + 4]; ++G__31565__i;}
G__31564 = new cljs.core.IndexedSeq(G__31565__a,0);
}
return mapv__5.cljs$core$IFn$_invoke$arity$variadic(f,c1,c2,c3, G__31564);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
mapv.cljs$lang$maxFixedArity = 4;
mapv.cljs$lang$applyTo = mapv__5.cljs$lang$applyTo;
mapv.cljs$core$IFn$_invoke$arity$2 = mapv__2;
mapv.cljs$core$IFn$_invoke$arity$3 = mapv__3;
mapv.cljs$core$IFn$_invoke$arity$4 = mapv__4;
mapv.cljs$core$IFn$_invoke$arity$variadic = mapv__5.cljs$core$IFn$_invoke$arity$variadic;
return mapv;
})()
;
/**
* Returns a vector of the items in coll for which
* (pred item) returns true. pred must be free of side-effects.
*/
cljs.core.filterv = (function filterv(pred,coll){
return cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (v,o){
if(cljs.core.truth_((function (){var G__31567 = o;
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__31567) : pred.call(null,G__31567));
})())){
return cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$2(v,o);
} else {
return v;
}
}),cljs.core.transient$(cljs.core.PersistentVector.EMPTY),coll));
});
/**
* Returns a lazy sequence of lists of n items each, at offsets step
* apart. If step is not supplied, defaults to n, i.e. the partitions
* do not overlap. If a pad collection is supplied, use its elements as
* necessary to complete last partition up to n items. In case there are
* not enough padding elements, return a partition with less than n items.
*/
cljs.core.partition = (function() {
var partition = null;
var partition__2 = (function (n,coll){
return partition.cljs$core$IFn$_invoke$arity$3(n,n,coll);
});
var partition__3 = (function (n,step,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
var p = cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,s);
if((n === cljs.core.count(p))){
return cljs.core.cons(p,partition.cljs$core$IFn$_invoke$arity$3(n,step,cljs.core.drop.cljs$core$IFn$_invoke$arity$2(step,s)));
} else {
return null;
}
} else {
return null;
}
}),null,null));
});
var partition__4 = (function (n,step,pad,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
var p = cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,s);
if((n === cljs.core.count(p))){
return cljs.core.cons(p,partition.cljs$core$IFn$_invoke$arity$4(n,step,pad,cljs.core.drop.cljs$core$IFn$_invoke$arity$2(step,s)));
} else {
return cljs.core._conj(cljs.core.List.EMPTY,cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,cljs.core.concat.cljs$core$IFn$_invoke$arity$2(p,pad)));
}
} else {
return null;
}
}),null,null));
});
partition = function(n,step,pad,coll){
switch(arguments.length){
case 2:
return partition__2.call(this,n,step);
case 3:
return partition__3.call(this,n,step,pad);
case 4:
return partition__4.call(this,n,step,pad,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
partition.cljs$core$IFn$_invoke$arity$2 = partition__2;
partition.cljs$core$IFn$_invoke$arity$3 = partition__3;
partition.cljs$core$IFn$_invoke$arity$4 = partition__4;
return partition;
})()
;
/**
* Returns the value in a nested associative structure,
* where ks is a sequence of keys. Returns nil if the key is not present,
* or the not-found value if supplied.
*/
cljs.core.get_in = (function() {
var get_in = null;
var get_in__2 = (function (m,ks){
return get_in.cljs$core$IFn$_invoke$arity$3(m,ks,null);
});
var get_in__3 = (function (m,ks,not_found){
var sentinel = cljs.core.lookup_sentinel;
var m__$1 = m;
var ks__$1 = cljs.core.seq(ks);
while(true){
if(ks__$1){
if(!((function (){var G__31582 = m__$1;
if(G__31582){
var bit__24955__auto__ = (G__31582.cljs$lang$protocol_mask$partition0$ & (256));
if((bit__24955__auto__) || (G__31582.cljs$core$ILookup$)){
return true;
} else {
if((!G__31582.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ILookup,G__31582);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ILookup,G__31582);
}
})())){
return not_found;
} else {
var m__$2 = cljs.core.get.cljs$core$IFn$_invoke$arity$3(m__$1,cljs.core.first(ks__$1),sentinel);
if((sentinel === m__$2)){
return not_found;
} else {
var G__31583 = sentinel;
var G__31584 = m__$2;
var G__31585 = cljs.core.next(ks__$1);
sentinel = G__31583;
m__$1 = G__31584;
ks__$1 = G__31585;
continue;
}
}
} else {
return m__$1;
}
break;
}
});
get_in = function(m,ks,not_found){
switch(arguments.length){
case 2:
return get_in__2.call(this,m,ks);
case 3:
return get_in__3.call(this,m,ks,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
get_in.cljs$core$IFn$_invoke$arity$2 = get_in__2;
get_in.cljs$core$IFn$_invoke$arity$3 = get_in__3;
return get_in;
})()
;
/**
* Associates a value in a nested associative structure, where ks is a
* sequence of keys and v is the new value and returns a new nested structure.
* If any levels do not exist, hash-maps will be created.
*/
cljs.core.assoc_in = (function assoc_in(m,p__31586,v){
var vec__31591 = p__31586;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__31591,(0),null);
var ks = cljs.core.nthnext(vec__31591,(1));
if(ks){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,assoc_in(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),ks,v));
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,v);
}
});
/**
* 'Updates' a value in a nested associative structure, where ks is a
* sequence of keys and f is a function that will take the old value
* and any supplied args and return the new value, and returns a new
* nested structure.  If any levels do not exist, hash-maps will be
* created.
* @param {...*} var_args
*/
cljs.core.update_in = (function() {
var update_in = null;
var update_in__3 = (function (m,p__31592,f){
var vec__31630 = p__31592;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__31630,(0),null);
var ks = cljs.core.nthnext(vec__31630,(1));
if(ks){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,update_in.cljs$core$IFn$_invoke$arity$3(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),ks,f));
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__31631 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__31631) : f.call(null,G__31631));
})());
}
});
var update_in__4 = (function (m,p__31593,f,a){
var vec__31632 = p__31593;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__31632,(0),null);
var ks = cljs.core.nthnext(vec__31632,(1));
if(ks){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,update_in.cljs$core$IFn$_invoke$arity$4(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),ks,f,a));
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__31633 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__31634 = a;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__31633,G__31634) : f.call(null,G__31633,G__31634));
})());
}
});
var update_in__5 = (function (m,p__31594,f,a,b){
var vec__31635 = p__31594;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__31635,(0),null);
var ks = cljs.core.nthnext(vec__31635,(1));
if(ks){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,update_in.cljs$core$IFn$_invoke$arity$5(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),ks,f,a,b));
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__31636 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__31637 = a;
var G__31638 = b;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__31636,G__31637,G__31638) : f.call(null,G__31636,G__31637,G__31638));
})());
}
});
var update_in__6 = (function (m,p__31595,f,a,b,c){
var vec__31639 = p__31595;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__31639,(0),null);
var ks = cljs.core.nthnext(vec__31639,(1));
if(ks){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,update_in.cljs$core$IFn$_invoke$arity$6(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),ks,f,a,b,c));
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__31640 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__31641 = a;
var G__31642 = b;
var G__31643 = c;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__31640,G__31641,G__31642,G__31643) : f.call(null,G__31640,G__31641,G__31642,G__31643));
})());
}
});
var update_in__7 = (function() { 
var G__31645__delegate = function (m,p__31596,f,a,b,c,args){
var vec__31644 = p__31596;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__31644,(0),null);
var ks = cljs.core.nthnext(vec__31644,(1));
if(ks){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(update_in,cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),ks,f,a,cljs.core.array_seq([b,c,args], 0)));
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f,cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),a,b,c,cljs.core.array_seq([args], 0)));
}
};
var G__31645 = function (m,p__31596,f,a,b,c,var_args){
var args = null;
if (arguments.length > 6) {
var G__31646__i = 0, G__31646__a = new Array(arguments.length -  6);
while (G__31646__i < G__31646__a.length) {G__31646__a[G__31646__i] = arguments[G__31646__i + 6]; ++G__31646__i;}
  args = new cljs.core.IndexedSeq(G__31646__a,0);
} 
return G__31645__delegate.call(this,m,p__31596,f,a,b,c,args);};
G__31645.cljs$lang$maxFixedArity = 6;
G__31645.cljs$lang$applyTo = (function (arglist__31647){
var m = cljs.core.first(arglist__31647);
arglist__31647 = cljs.core.next(arglist__31647);
var p__31596 = cljs.core.first(arglist__31647);
arglist__31647 = cljs.core.next(arglist__31647);
var f = cljs.core.first(arglist__31647);
arglist__31647 = cljs.core.next(arglist__31647);
var a = cljs.core.first(arglist__31647);
arglist__31647 = cljs.core.next(arglist__31647);
var b = cljs.core.first(arglist__31647);
arglist__31647 = cljs.core.next(arglist__31647);
var c = cljs.core.first(arglist__31647);
var args = cljs.core.rest(arglist__31647);
return G__31645__delegate(m,p__31596,f,a,b,c,args);
});
G__31645.cljs$core$IFn$_invoke$arity$variadic = G__31645__delegate;
return G__31645;
})()
;
update_in = function(m,p__31596,f,a,b,c,var_args){
var args = var_args;
switch(arguments.length){
case 3:
return update_in__3.call(this,m,p__31596,f);
case 4:
return update_in__4.call(this,m,p__31596,f,a);
case 5:
return update_in__5.call(this,m,p__31596,f,a,b);
case 6:
return update_in__6.call(this,m,p__31596,f,a,b,c);
default:
var G__31648 = null;
if (arguments.length > 6) {
var G__31649__i = 0, G__31649__a = new Array(arguments.length -  6);
while (G__31649__i < G__31649__a.length) {G__31649__a[G__31649__i] = arguments[G__31649__i + 6]; ++G__31649__i;}
G__31648 = new cljs.core.IndexedSeq(G__31649__a,0);
}
return update_in__7.cljs$core$IFn$_invoke$arity$variadic(m,p__31596,f,a,b,c, G__31648);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
update_in.cljs$lang$maxFixedArity = 6;
update_in.cljs$lang$applyTo = update_in__7.cljs$lang$applyTo;
update_in.cljs$core$IFn$_invoke$arity$3 = update_in__3;
update_in.cljs$core$IFn$_invoke$arity$4 = update_in__4;
update_in.cljs$core$IFn$_invoke$arity$5 = update_in__5;
update_in.cljs$core$IFn$_invoke$arity$6 = update_in__6;
update_in.cljs$core$IFn$_invoke$arity$variadic = update_in__7.cljs$core$IFn$_invoke$arity$variadic;
return update_in;
})()
;
/**
* 'Updates' a value in an associative structure, where k is a
* key and f is a function that will take the old value
* and any supplied args and return the new value, and returns a new
* structure.  If the key does not exist, nil is passed as the old value.
* @param {...*} var_args
*/
cljs.core.update = (function() {
var update = null;
var update__3 = (function (m,k,f){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__31660 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__31660) : f.call(null,G__31660));
})());
});
var update__4 = (function (m,k,f,x){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__31661 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__31662 = x;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__31661,G__31662) : f.call(null,G__31661,G__31662));
})());
});
var update__5 = (function (m,k,f,x,y){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__31663 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__31664 = x;
var G__31665 = y;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__31663,G__31664,G__31665) : f.call(null,G__31663,G__31664,G__31665));
})());
});
var update__6 = (function (m,k,f,x,y,z){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__31666 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__31667 = x;
var G__31668 = y;
var G__31669 = z;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__31666,G__31667,G__31668,G__31669) : f.call(null,G__31666,G__31667,G__31668,G__31669));
})());
});
var update__7 = (function() { 
var G__31670__delegate = function (m,k,f,x,y,z,more){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f,cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),x,y,z,cljs.core.array_seq([more], 0)));
};
var G__31670 = function (m,k,f,x,y,z,var_args){
var more = null;
if (arguments.length > 6) {
var G__31671__i = 0, G__31671__a = new Array(arguments.length -  6);
while (G__31671__i < G__31671__a.length) {G__31671__a[G__31671__i] = arguments[G__31671__i + 6]; ++G__31671__i;}
  more = new cljs.core.IndexedSeq(G__31671__a,0);
} 
return G__31670__delegate.call(this,m,k,f,x,y,z,more);};
G__31670.cljs$lang$maxFixedArity = 6;
G__31670.cljs$lang$applyTo = (function (arglist__31672){
var m = cljs.core.first(arglist__31672);
arglist__31672 = cljs.core.next(arglist__31672);
var k = cljs.core.first(arglist__31672);
arglist__31672 = cljs.core.next(arglist__31672);
var f = cljs.core.first(arglist__31672);
arglist__31672 = cljs.core.next(arglist__31672);
var x = cljs.core.first(arglist__31672);
arglist__31672 = cljs.core.next(arglist__31672);
var y = cljs.core.first(arglist__31672);
arglist__31672 = cljs.core.next(arglist__31672);
var z = cljs.core.first(arglist__31672);
var more = cljs.core.rest(arglist__31672);
return G__31670__delegate(m,k,f,x,y,z,more);
});
G__31670.cljs$core$IFn$_invoke$arity$variadic = G__31670__delegate;
return G__31670;
})()
;
update = function(m,k,f,x,y,z,var_args){
var more = var_args;
switch(arguments.length){
case 3:
return update__3.call(this,m,k,f);
case 4:
return update__4.call(this,m,k,f,x);
case 5:
return update__5.call(this,m,k,f,x,y);
case 6:
return update__6.call(this,m,k,f,x,y,z);
default:
var G__31673 = null;
if (arguments.length > 6) {
var G__31674__i = 0, G__31674__a = new Array(arguments.length -  6);
while (G__31674__i < G__31674__a.length) {G__31674__a[G__31674__i] = arguments[G__31674__i + 6]; ++G__31674__i;}
G__31673 = new cljs.core.IndexedSeq(G__31674__a,0);
}
return update__7.cljs$core$IFn$_invoke$arity$variadic(m,k,f,x,y,z, G__31673);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
update.cljs$lang$maxFixedArity = 6;
update.cljs$lang$applyTo = update__7.cljs$lang$applyTo;
update.cljs$core$IFn$_invoke$arity$3 = update__3;
update.cljs$core$IFn$_invoke$arity$4 = update__4;
update.cljs$core$IFn$_invoke$arity$5 = update__5;
update.cljs$core$IFn$_invoke$arity$6 = update__6;
update.cljs$core$IFn$_invoke$arity$variadic = update__7.cljs$core$IFn$_invoke$arity$variadic;
return update;
})()
;

/**
* @constructor
*/
cljs.core.VectorNode = (function (edit,arr){
this.edit = edit;
this.arr = arr;
})

cljs.core.VectorNode.cljs$lang$type = true;

cljs.core.VectorNode.cljs$lang$ctorStr = "cljs.core/VectorNode";

cljs.core.VectorNode.cljs$lang$ctorPrWriter = (function (this__24861__auto__,writer__24862__auto__,opt__24863__auto__){
return cljs.core._write(writer__24862__auto__,"cljs.core/VectorNode");
});

cljs.core.__GT_VectorNode = (function __GT_VectorNode(edit,arr){
return (new cljs.core.VectorNode(edit,arr));
});

cljs.core.pv_fresh_node = (function pv_fresh_node(edit){
return (new cljs.core.VectorNode(edit,[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null]));
});
cljs.core.pv_aget = (function pv_aget(node,idx){
return (node.arr[idx]);
});
cljs.core.pv_aset = (function pv_aset(node,idx,val){
return (node.arr[idx] = val);
});
cljs.core.pv_clone_node = (function pv_clone_node(node){
return (new cljs.core.VectorNode(node.edit,cljs.core.aclone(node.arr)));
});
cljs.core.tail_off = (function tail_off(pv){
var cnt = pv.cnt;
if((cnt < (32))){
return (0);
} else {
return (((cnt - (1)) >>> (5)) << (5));
}
});
cljs.core.new_path = (function new_path(edit,level,node){
var ll = level;
var ret = node;
while(true){
if((ll === (0))){
return ret;
} else {
var embed = ret;
var r = cljs.core.pv_fresh_node(edit);
var _ = cljs.core.pv_aset(r,(0),embed);
var G__31675 = (ll - (5));
var G__31676 = r;
ll = G__31675;
ret = G__31676;
continue;
}
break;
}
});
cljs.core.push_tail = (function push_tail(pv,level,parent,tailnode){
var ret = cljs.core.pv_clone_node(parent);
var subidx = (((pv.cnt - (1)) >>> level) & (31));
if(((5) === level)){
cljs.core.pv_aset(ret,subidx,tailnode);

return ret;
} else {
var child = cljs.core.pv_aget(parent,subidx);
if(!((child == null))){
var node_to_insert = push_tail(pv,(level - (5)),child,tailnode);
cljs.core.pv_aset(ret,subidx,node_to_insert);

return ret;
} else {
var node_to_insert = cljs.core.new_path(null,(level - (5)),tailnode);
cljs.core.pv_aset(ret,subidx,node_to_insert);

return ret;
}
}
});
cljs.core.vector_index_out_of_bounds = (function vector_index_out_of_bounds(i,cnt){
throw (new Error([cljs.core.str("No item "),cljs.core.str(i),cljs.core.str(" in vector of length "),cljs.core.str(cnt)].join('')));
});
cljs.core.first_array_for_longvec = (function first_array_for_longvec(pv){
var node = pv.root;
var level = pv.shift;
while(true){
if((level > (0))){
var G__31681 = cljs.core.pv_aget(node,(0));
var G__31682 = (level - (5));
node = G__31681;
level = G__31682;
continue;
} else {
return node.arr;
}
break;
}
});
cljs.core.unchecked_array_for = (function unchecked_array_for(pv,i){
if((i >= cljs.core.tail_off(pv))){
return pv.tail;
} else {
var node = pv.root;
var level = pv.shift;
while(true){
if((level > (0))){
var G__31683 = cljs.core.pv_aget(node,((i >>> level) & (31)));
var G__31684 = (level - (5));
node = G__31683;
level = G__31684;
continue;
} else {
return node.arr;
}
break;
}
}
});
cljs.core.array_for = (function array_for(pv,i){
if((((0) <= i)) && ((i < pv.cnt))){
return cljs.core.unchecked_array_for(pv,i);
} else {
return cljs.core.vector_index_out_of_bounds(i,pv.cnt);
}
});
cljs.core.do_assoc = (function do_assoc(pv,level,node,i,val){
var ret = cljs.core.pv_clone_node(node);
if((level === (0))){
cljs.core.pv_aset(ret,(i & (31)),val);

return ret;
} else {
var subidx = ((i >>> level) & (31));
cljs.core.pv_aset(ret,subidx,do_assoc(pv,(level - (5)),cljs.core.pv_aget(node,subidx),i,val));

return ret;
}
});
cljs.core.pop_tail = (function pop_tail(pv,level,node){
var subidx = (((pv.cnt - (2)) >>> level) & (31));
if((level > (5))){
var new_child = pop_tail(pv,(level - (5)),cljs.core.pv_aget(node,subidx));
if(((new_child == null)) && ((subidx === (0)))){
return null;
} else {
var ret = cljs.core.pv_clone_node(node);
cljs.core.pv_aset(ret,subidx,new_child);

return ret;
}
} else {
if((subidx === (0))){
return null;
} else {
var ret = cljs.core.pv_clone_node(node);
cljs.core.pv_aset(ret,subidx,null);

return ret;

}
}
});

/**
* @constructor
*/
cljs.core.RangedIterator = (function (i,base,arr,v,start,end){
this.i = i;
this.base = base;
this.arr = arr;
this.v = v;
this.start = start;
this.end = end;
})
cljs.core.RangedIterator.prototype.hasNext = (function (){
var self__ = this;
var this$ = this;
return (self__.i < self__.end);
});

cljs.core.RangedIterator.prototype.next = (function (){
var self__ = this;
var this$ = this;
if(((self__.i - self__.base) === (32))){
self__.arr = cljs.core.unchecked_array_for(self__.v,self__.i);

self__.base = (self__.base + (32));
} else {
}

var ret = (self__.arr[(self__.i & (31))]);
self__.i = (self__.i + (1));

return ret;
});

cljs.core.RangedIterator.cljs$lang$type = true;

cljs.core.RangedIterator.cljs$lang$ctorStr = "cljs.core/RangedIterator";

cljs.core.RangedIterator.cljs$lang$ctorPrWriter = (function (this__24861__auto__,writer__24862__auto__,opt__24863__auto__){
return cljs.core._write(writer__24862__auto__,"cljs.core/RangedIterator");
});

cljs.core.__GT_RangedIterator = (function __GT_RangedIterator(i,base,arr,v,start,end){
return (new cljs.core.RangedIterator(i,base,arr,v,start,end));
});

cljs.core.ranged_iterator = (function ranged_iterator(v,start,end){
var i = start;
return (new cljs.core.RangedIterator(i,(i - (i % (32))),(((start < cljs.core.count(v)))?cljs.core.unchecked_array_for(v,i):null),v,start,end));
});







/**
* @constructor
*/
cljs.core.PersistentVector = (function (meta,cnt,shift,root,tail,__hash){
this.meta = meta;
this.cnt = cnt;
this.shift = shift;
this.root = root;
this.tail = tail;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 167668511;
this.cljs$lang$protocol_mask$partition1$ = 8196;
})
cljs.core.PersistentVector.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentVector.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentVector.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.PersistentVector.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
if(typeof k === 'number'){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(coll__$1,k,not_found);
} else {
return not_found;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = (function (v,f,init){
var self__ = this;
var v__$1 = this;
var i = (0);
var init__$1 = init;
while(true){
if((i < self__.cnt)){
var arr = cljs.core.unchecked_array_for(v__$1,i);
var len = arr.length;
var init__$2 = (function (){var j = (0);
var init__$2 = init__$1;
while(true){
if((j < len)){
var init__$3 = (function (){var G__31694 = init__$2;
var G__31695 = (j + i);
var G__31696 = (arr[j]);
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__31694,G__31695,G__31696) : f.call(null,G__31694,G__31695,G__31696));
})();
if(cljs.core.reduced_QMARK_(init__$3)){
return init__$3;
} else {
var G__31707 = (j + (1));
var G__31708 = init__$3;
j = G__31707;
init__$2 = G__31708;
continue;
}
} else {
return init__$2;
}
break;
}
})();
if(cljs.core.reduced_QMARK_(init__$2)){
var G__31697 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__31697) : cljs.core.deref.call(null,G__31697));
} else {
var G__31709 = (i + len);
var G__31710 = init__$2;
i = G__31709;
init__$1 = G__31710;
continue;
}
} else {
return init__$1;
}
break;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (coll,n){
var self__ = this;
var coll__$1 = this;
return (cljs.core.array_for(coll__$1,n)[(n & (31))]);
});

cljs.core.PersistentVector.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (coll,n,not_found){
var self__ = this;
var coll__$1 = this;
if((((0) <= n)) && ((n < self__.cnt))){
return (cljs.core.unchecked_array_for(coll__$1,n)[(n & (31))]);
} else {
return not_found;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IVector$_assoc_n$arity$3 = (function (coll,n,val){
var self__ = this;
var coll__$1 = this;
if((((0) <= n)) && ((n < self__.cnt))){
if((cljs.core.tail_off(coll__$1) <= n)){
var new_tail = cljs.core.aclone(self__.tail);
(new_tail[(n & (31))] = val);

return (new cljs.core.PersistentVector(self__.meta,self__.cnt,self__.shift,self__.root,new_tail,null));
} else {
return (new cljs.core.PersistentVector(self__.meta,self__.cnt,self__.shift,cljs.core.do_assoc(coll__$1,self__.shift,self__.root,n,val),self__.tail,null));
}
} else {
if((n === self__.cnt)){
return cljs.core._conj(coll__$1,val);
} else {
throw (new Error([cljs.core.str("Index "),cljs.core.str(n),cljs.core.str(" out of bounds  [0,"),cljs.core.str(self__.cnt),cljs.core.str("]")].join('')));

}
}
});

cljs.core.PersistentVector.prototype.cljs$core$IIterable$ = true;

cljs.core.PersistentVector.prototype.cljs$core$IIterable$_iterator$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return cljs.core.ranged_iterator(this$__$1,(0),self__.cnt);
});

cljs.core.PersistentVector.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentVector.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.PersistentVector(self__.meta,self__.cnt,self__.shift,self__.root,self__.tail,self__.__hash));
});

cljs.core.PersistentVector.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.cnt;
});

cljs.core.PersistentVector.prototype.cljs$core$IMapEntry$_key$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll__$1,(0));
});

cljs.core.PersistentVector.prototype.cljs$core$IMapEntry$_val$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll__$1,(1));
});

cljs.core.PersistentVector.prototype.cljs$core$IStack$_peek$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll__$1,(self__.cnt - (1)));
} else {
return null;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IStack$_pop$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt === (0))){
throw (new Error("Can't pop empty vector"));
} else {
if(((1) === self__.cnt)){
return cljs.core._with_meta(cljs.core.PersistentVector.EMPTY,self__.meta);
} else {
if(((1) < (self__.cnt - cljs.core.tail_off(coll__$1)))){
return (new cljs.core.PersistentVector(self__.meta,(self__.cnt - (1)),self__.shift,self__.root,self__.tail.slice((0),(-1)),null));
} else {
var new_tail = cljs.core.unchecked_array_for(coll__$1,(self__.cnt - (2)));
var nr = cljs.core.pop_tail(coll__$1,self__.shift,self__.root);
var new_root = (((nr == null))?cljs.core.PersistentVector.EMPTY_NODE:nr);
var cnt_1 = (self__.cnt - (1));
if((((5) < self__.shift)) && ((cljs.core.pv_aget(new_root,(1)) == null))){
return (new cljs.core.PersistentVector(self__.meta,cnt_1,(self__.shift - (5)),cljs.core.pv_aget(new_root,(0)),new_tail,null));
} else {
return (new cljs.core.PersistentVector(self__.meta,cnt_1,self__.shift,new_root,new_tail,null));
}

}
}
}
});

cljs.core.PersistentVector.prototype.cljs$core$IReversible$_rseq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
return (new cljs.core.RSeq(coll__$1,(self__.cnt - (1)),null));
} else {
return null;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__24695__auto__ = self__.__hash;
if(!((h__24695__auto__ == null))){
return h__24695__auto__;
} else {
var h__24695__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__24695__auto____$1;

return h__24695__auto____$1;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
if((other instanceof cljs.core.PersistentVector)){
if((self__.cnt === cljs.core.count(other))){
var me_iter = cljs.core._iterator(coll__$1);
var you_iter = cljs.core._iterator(other);
while(true){
if(cljs.core.truth_(me_iter.hasNext())){
var x = me_iter.next();
var y = you_iter.next();
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x,y)){
continue;
} else {
return false;
}
} else {
return true;
}
break;
}
} else {
return false;
}
} else {
return cljs.core.equiv_sequential(coll__$1,other);
}
});

cljs.core.PersistentVector.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.TransientVector(self__.cnt,self__.shift,(function (){var G__31698 = self__.root;
return (cljs.core.tv_editable_root.cljs$core$IFn$_invoke$arity$1 ? cljs.core.tv_editable_root.cljs$core$IFn$_invoke$arity$1(G__31698) : cljs.core.tv_editable_root.call(null,G__31698));
})(),(function (){var G__31699 = self__.tail;
return (cljs.core.tv_editable_tail.cljs$core$IFn$_invoke$arity$1 ? cljs.core.tv_editable_tail.cljs$core$IFn$_invoke$arity$1(G__31699) : cljs.core.tv_editable_tail.call(null,G__31699));
})()));
});

cljs.core.PersistentVector.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.PersistentVector.EMPTY,self__.meta);
});

cljs.core.PersistentVector.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (v,f){
var self__ = this;
var v__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(v__$1,f);
});

cljs.core.PersistentVector.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (v,f,init){
var self__ = this;
var v__$1 = this;
var i = (0);
var init__$1 = init;
while(true){
if((i < self__.cnt)){
var arr = cljs.core.unchecked_array_for(v__$1,i);
var len = arr.length;
var init__$2 = (function (){var j = (0);
var init__$2 = init__$1;
while(true){
if((j < len)){
var init__$3 = (function (){var G__31700 = init__$2;
var G__31701 = (arr[j]);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__31700,G__31701) : f.call(null,G__31700,G__31701));
})();
if(cljs.core.reduced_QMARK_(init__$3)){
return init__$3;
} else {
var G__31711 = (j + (1));
var G__31712 = init__$3;
j = G__31711;
init__$2 = G__31712;
continue;
}
} else {
return init__$2;
}
break;
}
})();
if(cljs.core.reduced_QMARK_(init__$2)){
var G__31702 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__31702) : cljs.core.deref.call(null,G__31702));
} else {
var G__31713 = (i + len);
var G__31714 = init__$2;
i = G__31713;
init__$1 = G__31714;
continue;
}
} else {
return init__$1;
}
break;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (coll,k,v){
var self__ = this;
var coll__$1 = this;
if(typeof k === 'number'){
return cljs.core._assoc_n(coll__$1,k,v);
} else {
throw (new Error("Vector's key for assoc must be a number."));
}
});

cljs.core.PersistentVector.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt === (0))){
return null;
} else {
if((self__.cnt <= (32))){
return (new cljs.core.IndexedSeq(self__.tail,(0)));
} else {
var G__31703 = coll__$1;
var G__31704 = cljs.core.first_array_for_longvec(coll__$1);
var G__31705 = (0);
var G__31706 = (0);
return (cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__31703,G__31704,G__31705,G__31706) : cljs.core.chunked_seq.call(null,G__31703,G__31704,G__31705,G__31706));

}
}
});

cljs.core.PersistentVector.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentVector(meta__$1,self__.cnt,self__.shift,self__.root,self__.tail,self__.__hash));
});

cljs.core.PersistentVector.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
if(((self__.cnt - cljs.core.tail_off(coll__$1)) < (32))){
var len = self__.tail.length;
var new_tail = (new Array((len + (1))));
var n__25161__auto___31715 = len;
var i_31716 = (0);
while(true){
if((i_31716 < n__25161__auto___31715)){
(new_tail[i_31716] = (self__.tail[i_31716]));

var G__31717 = (i_31716 + (1));
i_31716 = G__31717;
continue;
} else {
}
break;
}

(new_tail[len] = o);

return (new cljs.core.PersistentVector(self__.meta,(self__.cnt + (1)),self__.shift,self__.root,new_tail,null));
} else {
var root_overflow_QMARK_ = ((self__.cnt >>> (5)) > ((1) << self__.shift));
var new_shift = ((root_overflow_QMARK_)?(self__.shift + (5)):self__.shift);
var new_root = ((root_overflow_QMARK_)?(function (){var n_r = cljs.core.pv_fresh_node(null);
cljs.core.pv_aset(n_r,(0),self__.root);

cljs.core.pv_aset(n_r,(1),cljs.core.new_path(null,self__.shift,(new cljs.core.VectorNode(null,self__.tail))));

return n_r;
})():cljs.core.push_tail(coll__$1,self__.shift,self__.root,(new cljs.core.VectorNode(null,self__.tail))));
return (new cljs.core.PersistentVector(self__.meta,(self__.cnt + (1)),new_shift,new_root,[o],null));
}
});

cljs.core.PersistentVector.prototype.call = (function() {
var G__31718 = null;
var G__31718__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$IIndexed$_nth$arity$2(null,k);
});
var G__31718__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$IIndexed$_nth$arity$3(null,k,not_found);
});
G__31718 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__31718__2.call(this,self__,k);
case 3:
return G__31718__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__31718.cljs$core$IFn$_invoke$arity$2 = G__31718__2;
G__31718.cljs$core$IFn$_invoke$arity$3 = G__31718__3;
return G__31718;
})()
;

cljs.core.PersistentVector.prototype.apply = (function (self__,args31693){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args31693)));
});

cljs.core.PersistentVector.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$IIndexed$_nth$arity$2(null,k);
});

cljs.core.PersistentVector.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$IIndexed$_nth$arity$3(null,k,not_found);
});

cljs.core.PersistentVector.cljs$lang$type = true;

cljs.core.PersistentVector.cljs$lang$ctorStr = "cljs.core/PersistentVector";

cljs.core.PersistentVector.cljs$lang$ctorPrWriter = (function (this__24861__auto__,writer__24862__auto__,opt__24863__auto__){
return cljs.core._write(writer__24862__auto__,"cljs.core/PersistentVector");
});

cljs.core.__GT_PersistentVector = (function __GT_PersistentVector(meta,cnt,shift,root,tail,__hash){
return (new cljs.core.PersistentVector(meta,cnt,shift,root,tail,__hash));
});

cljs.core.PersistentVector.EMPTY_NODE = (new cljs.core.VectorNode(null,[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null]));
cljs.core.PersistentVector.EMPTY = (new cljs.core.PersistentVector(null,(0),(5),cljs.core.PersistentVector.EMPTY_NODE,[],(0)));
cljs.core.PersistentVector.fromArray = (function (xs,no_clone){
var l = xs.length;
var xs__$1 = ((no_clone)?xs:cljs.core.aclone(xs));
if((l < (32))){
return (new cljs.core.PersistentVector(null,l,(5),cljs.core.PersistentVector.EMPTY_NODE,xs__$1,null));
} else {
var node = xs__$1.slice((0),(32));
var v = (new cljs.core.PersistentVector(null,(32),(5),cljs.core.PersistentVector.EMPTY_NODE,node,null));
var i = (32);
var out = v.cljs$core$IEditableCollection$_as_transient$arity$1(null);
while(true){
if((i < l)){
var G__31719 = (i + (1));
var G__31720 = cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$2(out,(xs__$1[i]));
i = G__31719;
out = G__31720;
continue;
} else {
return cljs.core.persistent_BANG_(out);
}
break;
}
}
});
(cljs.core.PersistentVector.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__25252__auto__ = this;
return cljs.core.es6_iterator(this__25252__auto__);
}));
cljs.core.vec = (function vec(coll){
return cljs.core._persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj_BANG_,cljs.core._as_transient(cljs.core.PersistentVector.EMPTY),coll));
});
/**
* @param {...*} var_args
*/
cljs.core.vector = (function() { 
var vector__delegate = function (args){
if(((args instanceof cljs.core.IndexedSeq)) && ((args.i === (0)))){
return cljs.core.PersistentVector.fromArray(args.arr,true);
} else {
return cljs.core.vec(args);
}
};
var vector = function (var_args){
var args = null;
if (arguments.length > 0) {
var G__31721__i = 0, G__31721__a = new Array(arguments.length -  0);
while (G__31721__i < G__31721__a.length) {G__31721__a[G__31721__i] = arguments[G__31721__i + 0]; ++G__31721__i;}
  args = new cljs.core.IndexedSeq(G__31721__a,0);
} 
return vector__delegate.call(this,args);};
vector.cljs$lang$maxFixedArity = 0;
vector.cljs$lang$applyTo = (function (arglist__31722){
var args = cljs.core.seq(arglist__31722);
return vector__delegate(args);
});
vector.cljs$core$IFn$_invoke$arity$variadic = vector__delegate;
return vector;
})()
;

/**
* @constructor
*/
cljs.core.ChunkedSeq = (function (vec,node,i,off,meta,__hash){
this.vec = vec;
this.node = node;
this.i = i;
this.off = off;
this.meta = meta;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 32375020;
this.cljs$lang$protocol_mask$partition1$ = 1536;
})
cljs.core.ChunkedSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.ChunkedSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.ChunkedSeq.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if(((self__.off + (1)) < self__.node.length)){
var s = (function (){var G__31723 = self__.vec;
var G__31724 = self__.node;
var G__31725 = self__.i;
var G__31726 = (self__.off + (1));
return (cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__31723,G__31724,G__31725,G__31726) : cljs.core.chunked_seq.call(null,G__31723,G__31724,G__31725,G__31726));
})();
if((s == null)){
return null;
} else {
return s;
}
} else {
return cljs.core._chunked_next(coll__$1);
}
});

cljs.core.ChunkedSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__24695__auto__ = self__.__hash;
if(!((h__24695__auto__ == null))){
return h__24695__auto__;
} else {
var h__24695__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__24695__auto____$1;

return h__24695__auto____$1;
}
});

cljs.core.ChunkedSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.PersistentVector.EMPTY,self__.meta);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2((function (){var G__31727 = self__.vec;
var G__31728 = (self__.i + self__.off);
var G__31729 = cljs.core.count(self__.vec);
return (cljs.core.subvec.cljs$core$IFn$_invoke$arity$3 ? cljs.core.subvec.cljs$core$IFn$_invoke$arity$3(G__31727,G__31728,G__31729) : cljs.core.subvec.call(null,G__31727,G__31728,G__31729));
})(),f);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3((function (){var G__31730 = self__.vec;
var G__31731 = (self__.i + self__.off);
var G__31732 = cljs.core.count(self__.vec);
return (cljs.core.subvec.cljs$core$IFn$_invoke$arity$3 ? cljs.core.subvec.cljs$core$IFn$_invoke$arity$3(G__31730,G__31731,G__31732) : cljs.core.subvec.call(null,G__31730,G__31731,G__31732));
})(),f,start);
});

cljs.core.ChunkedSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (self__.node[self__.off]);
});

cljs.core.ChunkedSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if(((self__.off + (1)) < self__.node.length)){
var s = (function (){var G__31733 = self__.vec;
var G__31734 = self__.node;
var G__31735 = self__.i;
var G__31736 = (self__.off + (1));
return (cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__31733,G__31734,G__31735,G__31736) : cljs.core.chunked_seq.call(null,G__31733,G__31734,G__31735,G__31736));
})();
if((s == null)){
return cljs.core.List.EMPTY;
} else {
return s;
}
} else {
return cljs.core._chunked_rest(coll__$1);
}
});

cljs.core.ChunkedSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedSeq$_chunked_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.array_chunk.cljs$core$IFn$_invoke$arity$2(self__.node,self__.off);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedSeq$_chunked_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var end = (self__.i + self__.node.length);
if((end < cljs.core._count(self__.vec))){
var G__31737 = self__.vec;
var G__31738 = cljs.core.unchecked_array_for(self__.vec,end);
var G__31739 = end;
var G__31740 = (0);
return (cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__31737,G__31738,G__31739,G__31740) : cljs.core.chunked_seq.call(null,G__31737,G__31738,G__31739,G__31740));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.ChunkedSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,m){
var self__ = this;
var coll__$1 = this;
var G__31741 = self__.vec;
var G__31742 = self__.node;
var G__31743 = self__.i;
var G__31744 = self__.off;
var G__31745 = m;
return (cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$5 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$5(G__31741,G__31742,G__31743,G__31744,G__31745) : cljs.core.chunked_seq.call(null,G__31741,G__31742,G__31743,G__31744,G__31745));
});

cljs.core.ChunkedSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedNext$_chunked_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var end = (self__.i + self__.node.length);
if((end < cljs.core._count(self__.vec))){
var G__31746 = self__.vec;
var G__31747 = cljs.core.unchecked_array_for(self__.vec,end);
var G__31748 = end;
var G__31749 = (0);
return (cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__31746,G__31747,G__31748,G__31749) : cljs.core.chunked_seq.call(null,G__31746,G__31747,G__31748,G__31749));
} else {
return null;
}
});

cljs.core.ChunkedSeq.cljs$lang$type = true;

cljs.core.ChunkedSeq.cljs$lang$ctorStr = "cljs.core/ChunkedSeq";

cljs.core.ChunkedSeq.cljs$lang$ctorPrWriter = (function (this__24861__auto__,writer__24862__auto__,opt__24863__auto__){
return cljs.core._write(writer__24862__auto__,"cljs.core/ChunkedSeq");
});

cljs.core.__GT_ChunkedSeq = (function __GT_ChunkedSeq(vec,node,i,off,meta,__hash){
return (new cljs.core.ChunkedSeq(vec,node,i,off,meta,__hash));
});

(cljs.core.ChunkedSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__25252__auto__ = this;
return cljs.core.es6_iterator(this__25252__auto__);
}));
cljs.core.chunked_seq = (function() {
var chunked_seq = null;
var chunked_seq__3 = (function (vec,i,off){
return (new cljs.core.ChunkedSeq(vec,cljs.core.array_for(vec,i),i,off,null,null));
});
var chunked_seq__4 = (function (vec,node,i,off){
return (new cljs.core.ChunkedSeq(vec,node,i,off,null,null));
});
var chunked_seq__5 = (function (vec,node,i,off,meta){
return (new cljs.core.ChunkedSeq(vec,node,i,off,meta,null));
});
chunked_seq = function(vec,node,i,off,meta){
switch(arguments.length){
case 3:
return chunked_seq__3.call(this,vec,node,i);
case 4:
return chunked_seq__4.call(this,vec,node,i,off);
case 5:
return chunked_seq__5.call(this,vec,node,i,off,meta);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
chunked_seq.cljs$core$IFn$_invoke$arity$3 = chunked_seq__3;
chunked_seq.cljs$core$IFn$_invoke$arity$4 = chunked_seq__4;
chunked_seq.cljs$core$IFn$_invoke$arity$5 = chunked_seq__5;
return chunked_seq;
})()
;

/**
* @constructor
*/
cljs.core.Subvec = (function (meta,v,start,end,__hash){
this.meta = meta;
this.v = v;
this.start = start;
this.end = end;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 166617887;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.Subvec.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.Subvec.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.Subvec.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.Subvec.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
if(typeof k === 'number'){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(coll__$1,k,not_found);
} else {
return not_found;
}
});

cljs.core.Subvec.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (coll,n){
var self__ = this;
var coll__$1 = this;
if(((n < (0))) || ((self__.end <= (self__.start + n)))){
return cljs.core.vector_index_out_of_bounds(n,(self__.end - self__.start));
} else {
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.v,(self__.start + n));
}
});

cljs.core.Subvec.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (coll,n,not_found){
var self__ = this;
var coll__$1 = this;
if(((n < (0))) || ((self__.end <= (self__.start + n)))){
return not_found;
} else {
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(self__.v,(self__.start + n),not_found);
}
});

cljs.core.Subvec.prototype.cljs$core$IVector$_assoc_n$arity$3 = (function (coll,n,val){
var self__ = this;
var coll__$1 = this;
var v_pos = (self__.start + n);
var G__31751 = self__.meta;
var G__31752 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.v,v_pos,val);
var G__31753 = self__.start;
var G__31754 = (function (){var x__24591__auto__ = self__.end;
var y__24592__auto__ = (v_pos + (1));
return ((x__24591__auto__ > y__24592__auto__) ? x__24591__auto__ : y__24592__auto__);
})();
var G__31755 = null;
return (cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5 ? cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5(G__31751,G__31752,G__31753,G__31754,G__31755) : cljs.core.build_subvec.call(null,G__31751,G__31752,G__31753,G__31754,G__31755));
});

cljs.core.Subvec.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.Subvec.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.Subvec(self__.meta,self__.v,self__.start,self__.end,self__.__hash));
});

cljs.core.Subvec.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (self__.end - self__.start);
});

cljs.core.Subvec.prototype.cljs$core$IStack$_peek$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.v,(self__.end - (1)));
});

cljs.core.Subvec.prototype.cljs$core$IStack$_pop$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.start === self__.end)){
throw (new Error("Can't pop empty vector"));
} else {
var G__31756 = self__.meta;
var G__31757 = self__.v;
var G__31758 = self__.start;
var G__31759 = (self__.end - (1));
var G__31760 = null;
return (cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5 ? cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5(G__31756,G__31757,G__31758,G__31759,G__31760) : cljs.core.build_subvec.call(null,G__31756,G__31757,G__31758,G__31759,G__31760));
}
});

cljs.core.Subvec.prototype.cljs$core$IReversible$_rseq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if(!((self__.start === self__.end))){
return (new cljs.core.RSeq(coll__$1,((self__.end - self__.start) - (1)),null));
} else {
return null;
}
});

cljs.core.Subvec.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__24695__auto__ = self__.__hash;
if(!((h__24695__auto__ == null))){
return h__24695__auto__;
} else {
var h__24695__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__24695__auto____$1;

return h__24695__auto____$1;
}
});

cljs.core.Subvec.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.Subvec.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.PersistentVector.EMPTY,self__.meta);
});

cljs.core.Subvec.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(coll__$1,f);
});

cljs.core.Subvec.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start__$1){
var self__ = this;
var coll__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3(coll__$1,f,start__$1);
});

cljs.core.Subvec.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (coll,key,val){
var self__ = this;
var coll__$1 = this;
if(typeof key === 'number'){
return cljs.core._assoc_n(coll__$1,key,val);
} else {
throw (new Error("Subvec's key for assoc must be a number."));
}
});

cljs.core.Subvec.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var subvec_seq = ((function (coll__$1){
return (function subvec_seq(i){
if((i === self__.end)){
return null;
} else {
return cljs.core.cons(cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.v,i),(new cljs.core.LazySeq(null,((function (coll__$1){
return (function (){
return subvec_seq((i + (1)));
});})(coll__$1))
,null,null)));
}
});})(coll__$1))
;
return subvec_seq(self__.start);
});

cljs.core.Subvec.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
var G__31762 = meta__$1;
var G__31763 = self__.v;
var G__31764 = self__.start;
var G__31765 = self__.end;
var G__31766 = self__.__hash;
return (cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5 ? cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5(G__31762,G__31763,G__31764,G__31765,G__31766) : cljs.core.build_subvec.call(null,G__31762,G__31763,G__31764,G__31765,G__31766));
});

cljs.core.Subvec.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
var G__31767 = self__.meta;
var G__31768 = cljs.core._assoc_n(self__.v,self__.end,o);
var G__31769 = self__.start;
var G__31770 = (self__.end + (1));
var G__31771 = null;
return (cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5 ? cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5(G__31767,G__31768,G__31769,G__31770,G__31771) : cljs.core.build_subvec.call(null,G__31767,G__31768,G__31769,G__31770,G__31771));
});

cljs.core.Subvec.prototype.call = (function() {
var G__31772 = null;
var G__31772__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$IIndexed$_nth$arity$2(null,k);
});
var G__31772__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$IIndexed$_nth$arity$3(null,k,not_found);
});
G__31772 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__31772__2.call(this,self__,k);
case 3:
return G__31772__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__31772.cljs$core$IFn$_invoke$arity$2 = G__31772__2;
G__31772.cljs$core$IFn$_invoke$arity$3 = G__31772__3;
return G__31772;
})()
;

cljs.core.Subvec.prototype.apply = (function (self__,args31750){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args31750)));
});

cljs.core.Subvec.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$IIndexed$_nth$arity$2(null,k);
});

cljs.core.Subvec.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$IIndexed$_nth$arity$3(null,k,not_found);
});

cljs.core.Subvec.cljs$lang$type = true;

cljs.core.Subvec.cljs$lang$ctorStr = "cljs.core/Subvec";

cljs.core.Subvec.cljs$lang$ctorPrWriter = (function (this__24861__auto__,writer__24862__auto__,opt__24863__auto__){
return cljs.core._write(writer__24862__auto__,"cljs.core/Subvec");
});

cljs.core.__GT_Subvec = (function __GT_Subvec(meta,v,start,end,__hash){
return (new cljs.core.Subvec(meta,v,start,end,__hash));
});

(cljs.core.Subvec.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__25252__auto__ = this;
return cljs.core.es6_iterator(this__25252__auto__);
}));
cljs.core.build_subvec = (function build_subvec(meta,v,start,end,__hash){
while(true){
if((v instanceof cljs.core.Subvec)){
var G__31773 = meta;
var G__31774 = v.v;
var G__31775 = (v.start + start);
var G__31776 = (v.start + end);
var G__31777 = __hash;
meta = G__31773;
v = G__31774;
start = G__31775;
end = G__31776;
__hash = G__31777;
continue;
} else {
var c = cljs.core.count(v);
if(((start < (0))) || ((end < (0))) || ((start > c)) || ((end > c))){
throw (new Error("Index out of bounds"));
} else {
}

return (new cljs.core.Subvec(meta,v,start,end,__hash));
}
break;
}
});
/**
* Returns a persistent vector of the items in vector from
* start (inclusive) to end (exclusive).  If end is not supplied,
* defaults to (count vector). This operation is O(1) and very fast, as
* the resulting vector shares structure with the original and no
* trimming is done.
*/
cljs.core.subvec = (function() {
var subvec = null;
var subvec__2 = (function (v,start){
return subvec.cljs$core$IFn$_invoke$arity$3(v,start,cljs.core.count(v));
});
var subvec__3 = (function (v,start,end){
return cljs.core.build_subvec(null,v,start,end,null);
});
subvec = function(v,start,end){
switch(arguments.length){
case 2:
return subvec__2.call(this,v,start);
case 3:
return subvec__3.call(this,v,start,end);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
subvec.cljs$core$IFn$_invoke$arity$2 = subvec__2;
subvec.cljs$core$IFn$_invoke$arity$3 = subvec__3;
return subvec;
})()
;
cljs.core.tv_ensure_editable = (function tv_ensure_editable(edit,node){
if((edit === node.edit)){
return node;
} else {
return (new cljs.core.VectorNode(edit,cljs.core.aclone(node.arr)));
}
});
cljs.core.tv_editable_root = (function tv_editable_root(node){
return (new cljs.core.VectorNode((function (){var obj31784 = {};
return obj31784;
})(),cljs.core.aclone(node.arr)));
});
cljs.core.tv_editable_tail = (function tv_editable_tail(tl){
var ret = [null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null];
cljs.core.array_copy(tl,(0),ret,(0),tl.length);

return ret;
});
cljs.core.tv_push_tail = (function tv_push_tail(tv,level,parent,tail_node){
var ret = cljs.core.tv_ensure_editable(tv.root.edit,parent);
var subidx = (((tv.cnt - (1)) >>> level) & (31));
cljs.core.pv_aset(ret,subidx,(((level === (5)))?tail_node:(function (){var child = cljs.core.pv_aget(ret,subidx);
if(!((child == null))){
return tv_push_tail(tv,(level - (5)),child,tail_node);
} else {
return cljs.core.new_path(tv.root.edit,(level - (5)),tail_node);
}
})()));

return ret;
});
cljs.core.tv_pop_tail = (function tv_pop_tail(tv,level,node){
var node__$1 = cljs.core.tv_ensure_editable(tv.root.edit,node);
var subidx = (((tv.cnt - (2)) >>> level) & (31));
if((level > (5))){
var new_child = tv_pop_tail(tv,(level - (5)),cljs.core.pv_aget(node__$1,subidx));
if(((new_child == null)) && ((subidx === (0)))){
return null;
} else {
cljs.core.pv_aset(node__$1,subidx,new_child);

return node__$1;
}
} else {
if((subidx === (0))){
return null;
} else {
cljs.core.pv_aset(node__$1,subidx,null);

return node__$1;

}
}
});
cljs.core.unchecked_editable_array_for = (function unchecked_editable_array_for(tv,i){
if((i >= cljs.core.tail_off(tv))){
return tv.tail;
} else {
var root = tv.root;
var node = root;
var level = tv.shift;
while(true){
if((level > (0))){
var G__31792 = cljs.core.tv_ensure_editable(root.edit,cljs.core.pv_aget(node,((i >>> level) & (31))));
var G__31793 = (level - (5));
node = G__31792;
level = G__31793;
continue;
} else {
return node.arr;
}
break;
}
}
});

/**
* @constructor
*/
cljs.core.TransientVector = (function (cnt,shift,root,tail){
this.cnt = cnt;
this.shift = shift;
this.root = root;
this.tail = tail;
this.cljs$lang$protocol_mask$partition0$ = 275;
this.cljs$lang$protocol_mask$partition1$ = 88;
})
cljs.core.TransientVector.prototype.call = (function() {
var G__31797 = null;
var G__31797__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__31797__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__31797 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__31797__2.call(this,self__,k);
case 3:
return G__31797__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__31797.cljs$core$IFn$_invoke$arity$2 = G__31797__2;
G__31797.cljs$core$IFn$_invoke$arity$3 = G__31797__3;
return G__31797;
})()
;

cljs.core.TransientVector.prototype.apply = (function (self__,args31794){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args31794)));
});

cljs.core.TransientVector.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.TransientVector.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.TransientVector.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.TransientVector.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
if(typeof k === 'number'){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(coll__$1,k,not_found);
} else {
return not_found;
}
});

cljs.core.TransientVector.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (coll,n){
var self__ = this;
var coll__$1 = this;
if(self__.root.edit){
return (cljs.core.array_for(coll__$1,n)[(n & (31))]);
} else {
throw (new Error("nth after persistent!"));
}
});

cljs.core.TransientVector.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (coll,n,not_found){
var self__ = this;
var coll__$1 = this;
if((((0) <= n)) && ((n < self__.cnt))){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll__$1,n);
} else {
return not_found;
}
});

cljs.core.TransientVector.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if(self__.root.edit){
return self__.cnt;
} else {
throw (new Error("count after persistent!"));
}
});

cljs.core.TransientVector.prototype.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3 = (function (tcoll,n,val){
var self__ = this;
var tcoll__$1 = this;
if(self__.root.edit){
if((((0) <= n)) && ((n < self__.cnt))){
if((cljs.core.tail_off(tcoll__$1) <= n)){
(self__.tail[(n & (31))] = val);

return tcoll__$1;
} else {
var new_root = ((function (tcoll__$1){
return (function go(level,node){
var node__$1 = cljs.core.tv_ensure_editable(self__.root.edit,node);
if((level === (0))){
cljs.core.pv_aset(node__$1,(n & (31)),val);

return node__$1;
} else {
var subidx = ((n >>> level) & (31));
cljs.core.pv_aset(node__$1,subidx,go((level - (5)),cljs.core.pv_aget(node__$1,subidx)));

return node__$1;
}
});})(tcoll__$1))
.call(null,self__.shift,self__.root);
self__.root = new_root;

return tcoll__$1;
}
} else {
if((n === self__.cnt)){
return cljs.core._conj_BANG_(tcoll__$1,val);
} else {
throw (new Error([cljs.core.str("Index "),cljs.core.str(n),cljs.core.str(" out of bounds for TransientVector of length"),cljs.core.str(self__.cnt)].join('')));

}
}
} else {
throw (new Error("assoc! after persistent!"));
}
});

cljs.core.TransientVector.prototype.cljs$core$ITransientVector$_pop_BANG_$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
if(self__.root.edit){
if((self__.cnt === (0))){
throw (new Error("Can't pop empty vector"));
} else {
if(((1) === self__.cnt)){
self__.cnt = (0);

return tcoll__$1;
} else {
if((((self__.cnt - (1)) & (31)) > (0))){
self__.cnt = (self__.cnt - (1));

return tcoll__$1;
} else {
var new_tail = cljs.core.unchecked_editable_array_for(tcoll__$1,(self__.cnt - (2)));
var new_root = (function (){var nr = cljs.core.tv_pop_tail(tcoll__$1,self__.shift,self__.root);
if(!((nr == null))){
return nr;
} else {
return (new cljs.core.VectorNode(self__.root.edit,[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null]));
}
})();
if((((5) < self__.shift)) && ((cljs.core.pv_aget(new_root,(1)) == null))){
var new_root__$1 = cljs.core.tv_ensure_editable(self__.root.edit,cljs.core.pv_aget(new_root,(0)));
self__.root = new_root__$1;

self__.shift = (self__.shift - (5));

self__.cnt = (self__.cnt - (1));

self__.tail = new_tail;

return tcoll__$1;
} else {
self__.root = new_root;

self__.cnt = (self__.cnt - (1));

self__.tail = new_tail;

return tcoll__$1;
}

}
}
}
} else {
throw (new Error("pop! after persistent!"));
}
});

cljs.core.TransientVector.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = (function (tcoll,key,val){
var self__ = this;
var tcoll__$1 = this;
if(typeof key === 'number'){
return cljs.core._assoc_n_BANG_(tcoll__$1,key,val);
} else {
throw (new Error("TransientVector's key for assoc! must be a number."));
}
});

cljs.core.TransientVector.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = (function (tcoll,o){
var self__ = this;
var tcoll__$1 = this;
if(self__.root.edit){
if(((self__.cnt - cljs.core.tail_off(tcoll__$1)) < (32))){
(self__.tail[(self__.cnt & (31))] = o);

self__.cnt = (self__.cnt + (1));

return tcoll__$1;
} else {
var tail_node = (new cljs.core.VectorNode(self__.root.edit,self__.tail));
var new_tail = [null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null];
(new_tail[(0)] = o);

self__.tail = new_tail;

if(((self__.cnt >>> (5)) > ((1) << self__.shift))){
var new_root_array = [null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null];
var new_shift = (self__.shift + (5));
(new_root_array[(0)] = self__.root);

(new_root_array[(1)] = cljs.core.new_path(self__.root.edit,self__.shift,tail_node));

self__.root = (new cljs.core.VectorNode(self__.root.edit,new_root_array));

self__.shift = new_shift;

self__.cnt = (self__.cnt + (1));

return tcoll__$1;
} else {
var new_root = cljs.core.tv_push_tail(tcoll__$1,self__.shift,self__.root,tail_node);
self__.root = new_root;

self__.cnt = (self__.cnt + (1));

return tcoll__$1;
}
}
} else {
throw (new Error("conj! after persistent!"));
}
});

cljs.core.TransientVector.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
if(self__.root.edit){
self__.root.edit = null;

var len = (self__.cnt - cljs.core.tail_off(tcoll__$1));
var trimmed_tail = (new Array(len));
cljs.core.array_copy(self__.tail,(0),trimmed_tail,(0),len);

return (new cljs.core.PersistentVector(null,self__.cnt,self__.shift,self__.root,trimmed_tail,null));
} else {
throw (new Error("persistent! called twice"));
}
});

cljs.core.TransientVector.cljs$lang$type = true;

cljs.core.TransientVector.cljs$lang$ctorStr = "cljs.core/TransientVector";

cljs.core.TransientVector.cljs$lang$ctorPrWriter = (function (this__24861__auto__,writer__24862__auto__,opt__24863__auto__){
return cljs.core._write(writer__24862__auto__,"cljs.core/TransientVector");
});

cljs.core.__GT_TransientVector = (function __GT_TransientVector(cnt,shift,root,tail){
return (new cljs.core.TransientVector(cnt,shift,root,tail));
});


/**
* @constructor
*/
cljs.core.PersistentQueueSeq = (function (meta,front,rear,__hash){
this.meta = meta;
this.front = front;
this.rear = rear;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 31850572;
})
cljs.core.PersistentQueueSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentQueueSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__24695__auto__ = self__.__hash;
if(!((h__24695__auto__ == null))){
return h__24695__auto__;
} else {
var h__24695__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__24695__auto____$1;

return h__24695__auto____$1;
}
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.first(self__.front);
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var temp__4124__auto__ = cljs.core.next(self__.front);
if(temp__4124__auto__){
var f1 = temp__4124__auto__;
return (new cljs.core.PersistentQueueSeq(self__.meta,f1,self__.rear,null));
} else {
if((self__.rear == null)){
return cljs.core._empty(coll__$1);
} else {
return (new cljs.core.PersistentQueueSeq(self__.meta,self__.rear,null,null));
}
}
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentQueueSeq(meta__$1,self__.front,self__.rear,self__.__hash));
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.PersistentQueueSeq.cljs$lang$type = true;

cljs.core.PersistentQueueSeq.cljs$lang$ctorStr = "cljs.core/PersistentQueueSeq";

cljs.core.PersistentQueueSeq.cljs$lang$ctorPrWriter = (function (this__24861__auto__,writer__24862__auto__,opt__24863__auto__){
return cljs.core._write(writer__24862__auto__,"cljs.core/PersistentQueueSeq");
});

cljs.core.__GT_PersistentQueueSeq = (function __GT_PersistentQueueSeq(meta,front,rear,__hash){
return (new cljs.core.PersistentQueueSeq(meta,front,rear,__hash));
});

(cljs.core.PersistentQueueSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__25252__auto__ = this;
return cljs.core.es6_iterator(this__25252__auto__);
}));

/**
* @constructor
*/
cljs.core.PersistentQueue = (function (meta,count,front,rear,__hash){
this.meta = meta;
this.count = count;
this.front = front;
this.rear = rear;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 31858766;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.PersistentQueue.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentQueue.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentQueue.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentQueue.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentQueue(self__.meta,self__.count,self__.front,self__.rear,self__.__hash));
});

cljs.core.PersistentQueue.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.count;
});

cljs.core.PersistentQueue.prototype.cljs$core$IStack$_peek$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.first(self__.front);
});

cljs.core.PersistentQueue.prototype.cljs$core$IStack$_pop$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if(cljs.core.truth_(self__.front)){
var temp__4124__auto__ = cljs.core.next(self__.front);
if(temp__4124__auto__){
var f1 = temp__4124__auto__;
return (new cljs.core.PersistentQueue(self__.meta,(self__.count - (1)),f1,self__.rear,null));
} else {
return (new cljs.core.PersistentQueue(self__.meta,(self__.count - (1)),cljs.core.seq(self__.rear),cljs.core.PersistentVector.EMPTY,null));
}
} else {
return coll__$1;
}
});

cljs.core.PersistentQueue.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__24695__auto__ = self__.__hash;
if(!((h__24695__auto__ == null))){
return h__24695__auto__;
} else {
var h__24695__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__24695__auto____$1;

return h__24695__auto____$1;
}
});

cljs.core.PersistentQueue.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.PersistentQueue.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.PersistentQueue.EMPTY,self__.meta);
});

cljs.core.PersistentQueue.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.first(self__.front);
});

cljs.core.PersistentQueue.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.rest(cljs.core.seq(coll__$1));
});

cljs.core.PersistentQueue.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var rear__$1 = cljs.core.seq(self__.rear);
if(cljs.core.truth_((function (){var or__24274__auto__ = self__.front;
if(cljs.core.truth_(or__24274__auto__)){
return or__24274__auto__;
} else {
return rear__$1;
}
})())){
return (new cljs.core.PersistentQueueSeq(null,self__.front,cljs.core.seq(rear__$1),null));
} else {
return null;
}
});

cljs.core.PersistentQueue.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentQueue(meta__$1,self__.count,self__.front,self__.rear,self__.__hash));
});

cljs.core.PersistentQueue.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
if(cljs.core.truth_(self__.front)){
return (new cljs.core.PersistentQueue(self__.meta,(self__.count + (1)),self__.front,cljs.core.conj.cljs$core$IFn$_invoke$arity$2((function (){var or__24274__auto__ = self__.rear;
if(cljs.core.truth_(or__24274__auto__)){
return or__24274__auto__;
} else {
return cljs.core.PersistentVector.EMPTY;
}
})(),o),null));
} else {
return (new cljs.core.PersistentQueue(self__.meta,(self__.count + (1)),cljs.core.conj.cljs$core$IFn$_invoke$arity$2(self__.front,o),cljs.core.PersistentVector.EMPTY,null));
}
});

cljs.core.PersistentQueue.cljs$lang$type = true;

cljs.core.PersistentQueue.cljs$lang$ctorStr = "cljs.core/PersistentQueue";

cljs.core.PersistentQueue.cljs$lang$ctorPrWriter = (function (this__24861__auto__,writer__24862__auto__,opt__24863__auto__){
return cljs.core._write(writer__24862__auto__,"cljs.core/PersistentQueue");
});

cljs.core.__GT_PersistentQueue = (function __GT_PersistentQueue(meta,count,front,rear,__hash){
return (new cljs.core.PersistentQueue(meta,count,front,rear,__hash));
});

cljs.core.PersistentQueue.EMPTY = (new cljs.core.PersistentQueue(null,(0),null,cljs.core.PersistentVector.EMPTY,(0)));
(cljs.core.PersistentQueue.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__25252__auto__ = this;
return cljs.core.es6_iterator(this__25252__auto__);
}));

/**
* @constructor
*/
cljs.core.NeverEquiv = (function (){
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 2097152;
})
cljs.core.NeverEquiv.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (o,other){
var self__ = this;
var o__$1 = this;
return false;
});

cljs.core.NeverEquiv.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.NeverEquiv.cljs$lang$type = true;

cljs.core.NeverEquiv.cljs$lang$ctorStr = "cljs.core/NeverEquiv";

cljs.core.NeverEquiv.cljs$lang$ctorPrWriter = (function (this__24861__auto__,writer__24862__auto__,opt__24863__auto__){
return cljs.core._write(writer__24862__auto__,"cljs.core/NeverEquiv");
});

cljs.core.__GT_NeverEquiv = (function __GT_NeverEquiv(){
return (new cljs.core.NeverEquiv());
});

cljs.core.never_equiv = (new cljs.core.NeverEquiv());
/**
* Assumes y is a map. Returns true if x equals y, otherwise returns
* false.
*/
cljs.core.equiv_map = (function equiv_map(x,y){
return cljs.core.boolean$(((cljs.core.map_QMARK_(y))?(((cljs.core.count(x) === cljs.core.count(y)))?cljs.core.every_QMARK_(cljs.core.identity,cljs.core.map.cljs$core$IFn$_invoke$arity$2((function (xkv){
return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$3(y,cljs.core.first(xkv),cljs.core.never_equiv),cljs.core.second(xkv));
}),x)):null):null));
});
cljs.core.scan_array = (function scan_array(incr,k,array){
var len = array.length;
var i = (0);
while(true){
if((i < len)){
if((k === (array[i]))){
return i;
} else {
var G__31798 = (i + incr);
i = G__31798;
continue;
}
} else {
return null;
}
break;
}
});
cljs.core.obj_map_compare_keys = (function obj_map_compare_keys(a,b){
var a__$1 = cljs.core.hash(a);
var b__$1 = cljs.core.hash(b);
if((a__$1 < b__$1)){
return (-1);
} else {
if((a__$1 > b__$1)){
return (1);
} else {
return (0);

}
}
});
cljs.core.obj_map__GT_hash_map = (function obj_map__GT_hash_map(m,k,v){
var ks = m.keys;
var len = ks.length;
var so = m.strobj;
var mm = cljs.core.meta(m);
var i = (0);
var out = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
while(true){
if((i < len)){
var k__$1 = (ks[i]);
var G__31799 = (i + (1));
var G__31800 = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(out,k__$1,(so[k__$1]));
i = G__31799;
out = G__31800;
continue;
} else {
return cljs.core.with_meta(cljs.core.persistent_BANG_(cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(out,k,v)),mm);
}
break;
}
});
cljs.core.obj_clone = (function obj_clone(obj,ks){
var new_obj = (function (){var obj31804 = {};
return obj31804;
})();
var l = ks.length;
var i_31805 = (0);
while(true){
if((i_31805 < l)){
var k_31806 = (ks[i_31805]);
(new_obj[k_31806] = (obj[k_31806]));

var G__31807 = (i_31805 + (1));
i_31805 = G__31807;
continue;
} else {
}
break;
}

return new_obj;
});

/**
* @constructor
*/
cljs.core.ObjMap = (function (meta,keys,strobj,update_count,__hash){
this.meta = meta;
this.keys = keys;
this.strobj = strobj;
this.update_count = update_count;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 16123663;
this.cljs$lang$protocol_mask$partition1$ = 4;
})
cljs.core.ObjMap.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.ObjMap.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.ObjMap.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.ObjMap.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
if(cljs.core.truth_((function (){var and__24262__auto__ = (function (){var G__31811 = k;
return goog.isString(G__31811);
})();
if(cljs.core.truth_(and__24262__auto__)){
return !((cljs.core.scan_array((1),k,self__.keys) == null));
} else {
return and__24262__auto__;
}
})())){
return (self__.strobj[k]);
} else {
return not_found;
}
});

cljs.core.ObjMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = (function (coll,f,init){
var self__ = this;
var coll__$1 = this;
var len = self__.keys.length;
var keys__$1 = self__.keys.sort(cljs.core.obj_map_compare_keys);
var init__$1 = init;
while(true){
if(cljs.core.seq(keys__$1)){
var k = cljs.core.first(keys__$1);
var init__$2 = (function (){var G__31812 = init__$1;
var G__31813 = k;
var G__31814 = (self__.strobj[k]);
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__31812,G__31813,G__31814) : f.call(null,G__31812,G__31813,G__31814));
})();
if(cljs.core.reduced_QMARK_(init__$2)){
var G__31815 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__31815) : cljs.core.deref.call(null,G__31815));
} else {
var G__31821 = cljs.core.rest(keys__$1);
var G__31822 = init__$2;
keys__$1 = G__31821;
init__$1 = G__31822;
continue;
}
} else {
return init__$1;
}
break;
}
});

cljs.core.ObjMap.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.ObjMap.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.keys.length;
});

cljs.core.ObjMap.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__24695__auto__ = self__.__hash;
if(!((h__24695__auto__ == null))){
return h__24695__auto__;
} else {
var h__24695__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
self__.__hash = h__24695__auto____$1;

return h__24695__auto____$1;
}
});

cljs.core.ObjMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_map(coll__$1,other);
});

cljs.core.ObjMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.transient$(cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentHashMap.EMPTY,coll__$1));
});

cljs.core.ObjMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.ObjMap.EMPTY,self__.meta);
});

cljs.core.ObjMap.prototype.cljs$core$IMap$_dissoc$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
if(cljs.core.truth_((function (){var and__24262__auto__ = (function (){var G__31817 = k;
return goog.isString(G__31817);
})();
if(cljs.core.truth_(and__24262__auto__)){
return !((cljs.core.scan_array((1),k,self__.keys) == null));
} else {
return and__24262__auto__;
}
})())){
var new_keys = cljs.core.aclone(self__.keys);
var new_strobj = cljs.core.obj_clone(self__.strobj,self__.keys);
new_keys.splice(cljs.core.scan_array((1),k,new_keys),(1));

delete new_strobj[k];

return (new cljs.core.ObjMap(self__.meta,new_keys,new_strobj,(self__.update_count + (1)),null));
} else {
return coll__$1;
}
});

cljs.core.ObjMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (coll,k,v){
var self__ = this;
var coll__$1 = this;
if(cljs.core.truth_((function (){var G__31818 = k;
return goog.isString(G__31818);
})())){
if(((self__.update_count > cljs.core.ObjMap.HASHMAP_THRESHOLD)) || ((self__.keys.length >= cljs.core.ObjMap.HASHMAP_THRESHOLD))){
return cljs.core.obj_map__GT_hash_map(coll__$1,k,v);
} else {
if(!((cljs.core.scan_array((1),k,self__.keys) == null))){
var new_strobj = cljs.core.obj_clone(self__.strobj,self__.keys);
(new_strobj[k] = v);

return (new cljs.core.ObjMap(self__.meta,self__.keys,new_strobj,(self__.update_count + (1)),null));
} else {
var new_strobj = cljs.core.obj_clone(self__.strobj,self__.keys);
var new_keys = cljs.core.aclone(self__.keys);
(new_strobj[k] = v);

new_keys.push(k);

return (new cljs.core.ObjMap(self__.meta,new_keys,new_strobj,(self__.update_count + (1)),null));
}
}
} else {
return cljs.core.obj_map__GT_hash_map(coll__$1,k,v);
}
});

cljs.core.ObjMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
if(cljs.core.truth_((function (){var and__24262__auto__ = (function (){var G__31820 = k;
return goog.isString(G__31820);
})();
if(cljs.core.truth_(and__24262__auto__)){
return !((cljs.core.scan_array((1),k,self__.keys) == null));
} else {
return and__24262__auto__;
}
})())){
return true;
} else {
return false;
}
});

cljs.core.ObjMap.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.keys.length > (0))){
return cljs.core.map.cljs$core$IFn$_invoke$arity$2(((function (coll__$1){
return (function (p1__31808_SHARP_){
return (new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[p1__31808_SHARP_,(self__.strobj[p1__31808_SHARP_])],null));
});})(coll__$1))
,self__.keys.sort(cljs.core.obj_map_compare_keys));
} else {
return null;
}
});

cljs.core.ObjMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.ObjMap(meta__$1,self__.keys,self__.strobj,self__.update_count,self__.__hash));
});

cljs.core.ObjMap.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,entry){
var self__ = this;
var coll__$1 = this;
if(cljs.core.vector_QMARK_(entry)){
return cljs.core._assoc(coll__$1,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(1)));
} else {
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj,coll__$1,entry);
}
});

cljs.core.ObjMap.prototype.call = (function() {
var G__31823 = null;
var G__31823__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__31823__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__31823 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__31823__2.call(this,self__,k);
case 3:
return G__31823__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__31823.cljs$core$IFn$_invoke$arity$2 = G__31823__2;
G__31823.cljs$core$IFn$_invoke$arity$3 = G__31823__3;
return G__31823;
})()
;

cljs.core.ObjMap.prototype.apply = (function (self__,args31809){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args31809)));
});

cljs.core.ObjMap.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.ObjMap.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.ObjMap.cljs$lang$type = true;

cljs.core.ObjMap.cljs$lang$ctorStr = "cljs.core/ObjMap";

cljs.core.ObjMap.cljs$lang$ctorPrWriter = (function (this__24861__auto__,writer__24862__auto__,opt__24863__auto__){
return cljs.core._write(writer__24862__auto__,"cljs.core/ObjMap");
});

cljs.core.__GT_ObjMap = (function __GT_ObjMap(meta,keys,strobj,update_count,__hash){
return (new cljs.core.ObjMap(meta,keys,strobj,update_count,__hash));
});

cljs.core.ObjMap.EMPTY = (new cljs.core.ObjMap(null,[],(function (){var obj31825 = {};
return obj31825;
})(),(0),(0)));
cljs.core.ObjMap.HASHMAP_THRESHOLD = (8);
cljs.core.ObjMap.fromObject = (function (ks,obj){
return (new cljs.core.ObjMap(null,ks,obj,(0),null));
});

/**
* @constructor
*/
cljs.core.ES6EntriesIterator = (function (s){
this.s = s;
})
cljs.core.ES6EntriesIterator.prototype.next = (function (){
var self__ = this;
var _ = this;
if(!((self__.s == null))){
var vec__31826 = cljs.core.first(self__.s);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__31826,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__31826,(1),null);
self__.s = cljs.core.next(self__.s);

return {"done": false, "value": [k,v]};
} else {
return {"done": true, "value": null};
}
});

cljs.core.ES6EntriesIterator.cljs$lang$type = true;

cljs.core.ES6EntriesIterator.cljs$lang$ctorStr = "cljs.core/ES6EntriesIterator";

cljs.core.ES6EntriesIterator.cljs$lang$ctorPrWriter = (function (this__24861__auto__,writer__24862__auto__,opt__24863__auto__){
return cljs.core._write(writer__24862__auto__,"cljs.core/ES6EntriesIterator");
});

cljs.core.__GT_ES6EntriesIterator = (function __GT_ES6EntriesIterator(s){
return (new cljs.core.ES6EntriesIterator(s));
});

cljs.core.es6_entries_iterator = (function es6_entries_iterator(coll){
return (new cljs.core.ES6EntriesIterator(cljs.core.seq(coll)));
});

/**
* @constructor
*/
cljs.core.ES6SetEntriesIterator = (function (s){
this.s = s;
})
cljs.core.ES6SetEntriesIterator.prototype.next = (function (){
var self__ = this;
var _ = this;
if(!((self__.s == null))){
var x = cljs.core.first(self__.s);
self__.s = cljs.core.next(self__.s);

return {"done": false, "value": [x,x]};
} else {
return {"done": true, "value": null};
}
});

cljs.core.ES6SetEntriesIterator.cljs$lang$type = true;

cljs.core.ES6SetEntriesIterator.cljs$lang$ctorStr = "cljs.core/ES6SetEntriesIterator";

cljs.core.ES6SetEntriesIterator.cljs$lang$ctorPrWriter = (function (this__24861__auto__,writer__24862__auto__,opt__24863__auto__){
return cljs.core._write(writer__24862__auto__,"cljs.core/ES6SetEntriesIterator");
});

cljs.core.__GT_ES6SetEntriesIterator = (function __GT_ES6SetEntriesIterator(s){
return (new cljs.core.ES6SetEntriesIterator(s));
});

cljs.core.es6_set_entries_iterator = (function es6_set_entries_iterator(coll){
return (new cljs.core.ES6SetEntriesIterator(cljs.core.seq(coll)));
});
cljs.core.array_map_index_of_nil_QMARK_ = (function array_map_index_of_nil_QMARK_(arr,m,k){
var len = arr.length;
var i = (0);
while(true){
if((len <= i)){
return (-1);
} else {
if(((arr[i]) == null)){
return i;
} else {
var G__31827 = (i + (2));
i = G__31827;
continue;

}
}
break;
}
});
cljs.core.array_map_index_of_keyword_QMARK_ = (function array_map_index_of_keyword_QMARK_(arr,m,k){
var len = arr.length;
var kstr = k.fqn;
var i = (0);
while(true){
if((len <= i)){
return (-1);
} else {
if((function (){var k_SINGLEQUOTE_ = (arr[i]);
return ((k_SINGLEQUOTE_ instanceof cljs.core.Keyword)) && ((kstr === k_SINGLEQUOTE_.fqn));
})()){
return i;
} else {
var G__31828 = (i + (2));
i = G__31828;
continue;

}
}
break;
}
});
cljs.core.array_map_index_of_symbol_QMARK_ = (function array_map_index_of_symbol_QMARK_(arr,m,k){
var len = arr.length;
var kstr = k.str;
var i = (0);
while(true){
if((len <= i)){
return (-1);
} else {
if((function (){var k_SINGLEQUOTE_ = (arr[i]);
return ((k_SINGLEQUOTE_ instanceof cljs.core.Symbol)) && ((kstr === k_SINGLEQUOTE_.str));
})()){
return i;
} else {
var G__31829 = (i + (2));
i = G__31829;
continue;

}
}
break;
}
});
cljs.core.array_map_index_of_identical_QMARK_ = (function array_map_index_of_identical_QMARK_(arr,m,k){
var len = arr.length;
var i = (0);
while(true){
if((len <= i)){
return (-1);
} else {
if((k === (arr[i]))){
return i;
} else {
var G__31830 = (i + (2));
i = G__31830;
continue;

}
}
break;
}
});
cljs.core.array_map_index_of_equiv_QMARK_ = (function array_map_index_of_equiv_QMARK_(arr,m,k){
var len = arr.length;
var i = (0);
while(true){
if((len <= i)){
return (-1);
} else {
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(k,(arr[i]))){
return i;
} else {
var G__31831 = (i + (2));
i = G__31831;
continue;

}
}
break;
}
});
cljs.core.array_map_index_of = (function array_map_index_of(m,k){
var arr = m.arr;
if((k instanceof cljs.core.Keyword)){
return cljs.core.array_map_index_of_keyword_QMARK_(arr,m,k);
} else {
if(cljs.core.truth_((function (){var or__24274__auto__ = (function (){var G__31835 = k;
return goog.isString(G__31835);
})();
if(cljs.core.truth_(or__24274__auto__)){
return or__24274__auto__;
} else {
return typeof k === 'number';
}
})())){
return cljs.core.array_map_index_of_identical_QMARK_(arr,m,k);
} else {
if((k instanceof cljs.core.Symbol)){
return cljs.core.array_map_index_of_symbol_QMARK_(arr,m,k);
} else {
if((k == null)){
return cljs.core.array_map_index_of_nil_QMARK_(arr,m,k);
} else {
return cljs.core.array_map_index_of_equiv_QMARK_(arr,m,k);

}
}
}
}
});
cljs.core.array_map_extend_kv = (function array_map_extend_kv(m,k,v){
var arr = m.arr;
var l = arr.length;
var narr = (new Array((l + (2))));
var i_31836 = (0);
while(true){
if((i_31836 < l)){
(narr[i_31836] = (arr[i_31836]));

var G__31837 = (i_31836 + (1));
i_31836 = G__31837;
continue;
} else {
}
break;
}

(narr[l] = k);

(narr[(l + (1))] = v);

return narr;
});

/**
* @constructor
*/
cljs.core.PersistentArrayMapSeq = (function (arr,i,_meta){
this.arr = arr;
this.i = i;
this._meta = _meta;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32374990;
})
cljs.core.PersistentArrayMapSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentArrayMapSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__._meta;
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.i < (self__.arr.length - (2)))){
return (new cljs.core.PersistentArrayMapSeq(self__.arr,(self__.i + (2)),self__._meta));
} else {
return null;
}
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return ((self__.arr.length - self__.i) / (2));
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.hash_ordered_coll(coll__$1);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__._meta);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(self__.arr[self__.i]),(self__.arr[(self__.i + (1))])], null);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.i < (self__.arr.length - (2)))){
return (new cljs.core.PersistentArrayMapSeq(self__.arr,(self__.i + (2)),self__._meta));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,new_meta){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentArrayMapSeq(self__.arr,self__.i,new_meta));
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.PersistentArrayMapSeq.cljs$lang$type = true;

cljs.core.PersistentArrayMapSeq.cljs$lang$ctorStr = "cljs.core/PersistentArrayMapSeq";

cljs.core.PersistentArrayMapSeq.cljs$lang$ctorPrWriter = (function (this__24861__auto__,writer__24862__auto__,opt__24863__auto__){
return cljs.core._write(writer__24862__auto__,"cljs.core/PersistentArrayMapSeq");
});

cljs.core.__GT_PersistentArrayMapSeq = (function __GT_PersistentArrayMapSeq(arr,i,_meta){
return (new cljs.core.PersistentArrayMapSeq(arr,i,_meta));
});

(cljs.core.PersistentArrayMapSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__25252__auto__ = this;
return cljs.core.es6_iterator(this__25252__auto__);
}));
cljs.core.persistent_array_map_seq = (function persistent_array_map_seq(arr,i,_meta){
if((i <= (arr.length - (2)))){
return (new cljs.core.PersistentArrayMapSeq(arr,i,_meta));
} else {
return null;
}
});


/**
* @constructor
*/
cljs.core.PersistentArrayMapIterator = (function (arr,i,cnt){
this.arr = arr;
this.i = i;
this.cnt = cnt;
})
cljs.core.PersistentArrayMapIterator.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
return (self__.i < self__.cnt);
});

cljs.core.PersistentArrayMapIterator.prototype.next = (function (){
var self__ = this;
var _ = this;
var ret = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(self__.arr[self__.i]),(self__.arr[(self__.i + (1))])], null);
self__.i = (self__.i + (2));

return ret;
});

cljs.core.PersistentArrayMapIterator.cljs$lang$type = true;

cljs.core.PersistentArrayMapIterator.cljs$lang$ctorStr = "cljs.core/PersistentArrayMapIterator";

cljs.core.PersistentArrayMapIterator.cljs$lang$ctorPrWriter = (function (this__24861__auto__,writer__24862__auto__,opt__24863__auto__){
return cljs.core._write(writer__24862__auto__,"cljs.core/PersistentArrayMapIterator");
});

cljs.core.__GT_PersistentArrayMapIterator = (function __GT_PersistentArrayMapIterator(arr,i,cnt){
return (new cljs.core.PersistentArrayMapIterator(arr,i,cnt));
});


/**
* @constructor
*/
cljs.core.PersistentArrayMap = (function (meta,cnt,arr,__hash){
this.meta = meta;
this.cnt = cnt;
this.arr = arr;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 16647951;
this.cljs$lang$protocol_mask$partition1$ = 8196;
})
cljs.core.PersistentArrayMap.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentArrayMap.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentArrayMap.prototype.keys = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator((function (){var G__31839 = coll;
return (cljs.core.keys.cljs$core$IFn$_invoke$arity$1 ? cljs.core.keys.cljs$core$IFn$_invoke$arity$1(G__31839) : cljs.core.keys.call(null,G__31839));
})());
});

cljs.core.PersistentArrayMap.prototype.entries = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_entries_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentArrayMap.prototype.values = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator((function (){var G__31840 = coll;
return (cljs.core.vals.cljs$core$IFn$_invoke$arity$1 ? cljs.core.vals.cljs$core$IFn$_invoke$arity$1(G__31840) : cljs.core.vals.call(null,G__31840));
})());
});

cljs.core.PersistentArrayMap.prototype.has = (function (k){
var self__ = this;
var coll = this;
return cljs.core.contains_QMARK_(coll,k);
});

cljs.core.PersistentArrayMap.prototype.get = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentArrayMap.prototype.forEach = (function (f){
var self__ = this;
var coll = this;
var seq__31841 = cljs.core.seq(coll);
var chunk__31842 = null;
var count__31843 = (0);
var i__31844 = (0);
while(true){
if((i__31844 < count__31843)){
var vec__31845 = chunk__31842.cljs$core$IIndexed$_nth$arity$2(null,i__31844);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__31845,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__31845,(1),null);
var G__31846_31859 = v;
var G__31847_31860 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__31846_31859,G__31847_31860) : f.call(null,G__31846_31859,G__31847_31860));

var G__31861 = seq__31841;
var G__31862 = chunk__31842;
var G__31863 = count__31843;
var G__31864 = (i__31844 + (1));
seq__31841 = G__31861;
chunk__31842 = G__31862;
count__31843 = G__31863;
i__31844 = G__31864;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__31841);
if(temp__4126__auto__){
var seq__31841__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__31841__$1)){
var c__25061__auto__ = cljs.core.chunk_first(seq__31841__$1);
var G__31865 = cljs.core.chunk_rest(seq__31841__$1);
var G__31866 = c__25061__auto__;
var G__31867 = cljs.core.count(c__25061__auto__);
var G__31868 = (0);
seq__31841 = G__31865;
chunk__31842 = G__31866;
count__31843 = G__31867;
i__31844 = G__31868;
continue;
} else {
var vec__31848 = cljs.core.first(seq__31841__$1);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__31848,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__31848,(1),null);
var G__31849_31869 = v;
var G__31850_31870 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__31849_31869,G__31850_31870) : f.call(null,G__31849_31869,G__31850_31870));

var G__31871 = cljs.core.next(seq__31841__$1);
var G__31872 = null;
var G__31873 = (0);
var G__31874 = (0);
seq__31841 = G__31871;
chunk__31842 = G__31872;
count__31843 = G__31873;
i__31844 = G__31874;
continue;
}
} else {
return null;
}
}
break;
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.PersistentArrayMap.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
var idx = cljs.core.array_map_index_of(coll__$1,k);
if((idx === (-1))){
return not_found;
} else {
return (self__.arr[(idx + (1))]);
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = (function (coll,f,init){
var self__ = this;
var coll__$1 = this;
var len = self__.arr.length;
var i = (0);
var init__$1 = init;
while(true){
if((i < len)){
var init__$2 = (function (){var G__31851 = init__$1;
var G__31852 = (self__.arr[i]);
var G__31853 = (self__.arr[(i + (1))]);
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__31851,G__31852,G__31853) : f.call(null,G__31851,G__31852,G__31853));
})();
if(cljs.core.reduced_QMARK_(init__$2)){
var G__31854 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__31854) : cljs.core.deref.call(null,G__31854));
} else {
var G__31875 = (i + (2));
var G__31876 = init__$2;
i = G__31875;
init__$1 = G__31876;
continue;
}
} else {
return init__$1;
}
break;
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IIterable$ = true;

cljs.core.PersistentArrayMap.prototype.cljs$core$IIterable$_iterator$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return (new cljs.core.PersistentArrayMapIterator(self__.arr,(0),(self__.cnt * (2))));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentArrayMap.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.PersistentArrayMap(self__.meta,self__.cnt,self__.arr,self__.__hash));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.cnt;
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__24695__auto__ = self__.__hash;
if(!((h__24695__auto__ == null))){
return h__24695__auto__;
} else {
var h__24695__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
self__.__hash = h__24695__auto____$1;

return h__24695__auto____$1;
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
if((function (){var G__31855 = other;
if(G__31855){
var bit__24948__auto__ = (G__31855.cljs$lang$protocol_mask$partition0$ & (1024));
if((bit__24948__auto__) || (G__31855.cljs$core$IMap$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
var alen = self__.arr.length;
var other__$1 = other;
if((self__.cnt === other__$1.cljs$core$ICounted$_count$arity$1(null))){
var i = (0);
while(true){
if((i < alen)){
var v = other__$1.cljs$core$ILookup$_lookup$arity$3(null,(self__.arr[i]),cljs.core.lookup_sentinel);
if(!((v === cljs.core.lookup_sentinel))){
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2((self__.arr[(i + (1))]),v)){
var G__31877 = (i + (2));
i = G__31877;
continue;
} else {
return false;
}
} else {
return false;
}
} else {
return true;
}
break;
}
} else {
return false;
}
} else {
return cljs.core.equiv_map(coll__$1,other);
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.TransientArrayMap((function (){var obj31857 = {};
return obj31857;
})(),self__.arr.length,cljs.core.aclone(self__.arr)));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._with_meta(cljs.core.PersistentArrayMap.EMPTY,self__.meta);
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IMap$_dissoc$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
var idx = cljs.core.array_map_index_of(coll__$1,k);
if((idx >= (0))){
var len = self__.arr.length;
var new_len = (len - (2));
if((new_len === (0))){
return cljs.core._empty(coll__$1);
} else {
var new_arr = (new Array(new_len));
var s = (0);
var d = (0);
while(true){
if((s >= len)){
return (new cljs.core.PersistentArrayMap(self__.meta,(self__.cnt - (1)),new_arr,null));
} else {
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(k,(self__.arr[s]))){
var G__31878 = (s + (2));
var G__31879 = d;
s = G__31878;
d = G__31879;
continue;
} else {
(new_arr[d] = (self__.arr[s]));

(new_arr[(d + (1))] = (self__.arr[(s + (1))]));

var G__31880 = (s + (2));
var G__31881 = (d + (2));
s = G__31880;
d = G__31881;
continue;

}
}
break;
}
}
} else {
return coll__$1;
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (coll,k,v){
var self__ = this;
var coll__$1 = this;
var idx = cljs.core.array_map_index_of(coll__$1,k);
if((idx === (-1))){
if((self__.cnt < cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD)){
var arr__$1 = cljs.core.array_map_extend_kv(coll__$1,k,v);
return (new cljs.core.PersistentArrayMap(self__.meta,(self__.cnt + (1)),arr__$1,null));
} else {
return cljs.core._with_meta(cljs.core._assoc(cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentHashMap.EMPTY,coll__$1),k,v),self__.meta);
}
} else {
if((v === (self__.arr[(idx + (1))]))){
return coll__$1;
} else {
var arr__$1 = (function (){var G__31858 = cljs.core.aclone(self__.arr);
(G__31858[(idx + (1))] = v);

return G__31858;
})();
return (new cljs.core.PersistentArrayMap(self__.meta,self__.cnt,arr__$1,null));

}
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return !((cljs.core.array_map_index_of(coll__$1,k) === (-1)));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.persistent_array_map_seq(self__.arr,(0),null);
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentArrayMap(meta__$1,self__.cnt,self__.arr,self__.__hash));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,entry){
var self__ = this;
var coll__$1 = this;
if(cljs.core.vector_QMARK_(entry)){
return cljs.core._assoc(coll__$1,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(1)));
} else {
var ret = coll__$1;
var es = cljs.core.seq(entry);
while(true){
if((es == null)){
return ret;
} else {
var e = cljs.core.first(es);
if(cljs.core.vector_QMARK_(e)){
var G__31882 = cljs.core._assoc(ret,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e,(1)));
var G__31883 = cljs.core.next(es);
ret = G__31882;
es = G__31883;
continue;
} else {
throw (new Error("conj on a map takes map entries or seqables of map entries"));
}
}
break;
}
}
});

cljs.core.PersistentArrayMap.prototype.call = (function() {
var G__31884 = null;
var G__31884__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__31884__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__31884 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__31884__2.call(this,self__,k);
case 3:
return G__31884__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__31884.cljs$core$IFn$_invoke$arity$2 = G__31884__2;
G__31884.cljs$core$IFn$_invoke$arity$3 = G__31884__3;
return G__31884;
})()
;

cljs.core.PersistentArrayMap.prototype.apply = (function (self__,args31838){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args31838)));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.PersistentArrayMap.cljs$lang$type = true;

cljs.core.PersistentArrayMap.cljs$lang$ctorStr = "cljs.core/PersistentArrayMap";

cljs.core.PersistentArrayMap.cljs$lang$ctorPrWriter = (function (this__24861__auto__,writer__24862__auto__,opt__24863__auto__){
return cljs.core._write(writer__24862__auto__,"cljs.core/PersistentArrayMap");
});

cljs.core.__GT_PersistentArrayMap = (function __GT_PersistentArrayMap(meta,cnt,arr,__hash){
return (new cljs.core.PersistentArrayMap(meta,cnt,arr,__hash));
});

cljs.core.PersistentArrayMap.EMPTY = (new cljs.core.PersistentArrayMap(null,(0),[],null));
cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD = (8);
cljs.core.PersistentArrayMap.fromArray = (function (arr,no_clone,no_check){
var arr__$1 = ((no_clone)?arr:cljs.core.aclone(arr));
if(no_check){
var cnt = (arr__$1.length / (2));
return (new cljs.core.PersistentArrayMap(null,cnt,arr__$1,null));
} else {
var len = arr__$1.length;
var i = (0);
var ret = cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY);
while(true){
if((i < len)){
var G__31885 = (i + (2));
var G__31886 = cljs.core._assoc_BANG_(ret,(arr__$1[i]),(arr__$1[(i + (1))]));
i = G__31885;
ret = G__31886;
continue;
} else {
return cljs.core._persistent_BANG_(ret);
}
break;
}
}
});
(cljs.core.PersistentArrayMap.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__25252__auto__ = this;
return cljs.core.es6_iterator(this__25252__auto__);
}));

/**
* @constructor
*/
cljs.core.TransientArrayMap = (function (editable_QMARK_,len,arr){
this.editable_QMARK_ = editable_QMARK_;
this.len = len;
this.arr = arr;
this.cljs$lang$protocol_mask$partition1$ = 56;
this.cljs$lang$protocol_mask$partition0$ = 258;
})
cljs.core.TransientArrayMap.prototype.cljs$core$ITransientMap$_dissoc_BANG_$arity$2 = (function (tcoll,key){
var self__ = this;
var tcoll__$1 = this;
if(cljs.core.truth_(self__.editable_QMARK_)){
var idx = cljs.core.array_map_index_of(tcoll__$1,key);
if((idx >= (0))){
(self__.arr[idx] = (self__.arr[(self__.len - (2))]));

(self__.arr[(idx + (1))] = (self__.arr[(self__.len - (1))]));

var G__31887_31895 = self__.arr;
G__31887_31895.pop();

G__31887_31895.pop();


self__.len = (self__.len - (2));
} else {
}

return tcoll__$1;
} else {
throw (new Error("dissoc! after persistent!"));
}
});

cljs.core.TransientArrayMap.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = (function (tcoll,key,val){
var self__ = this;
var tcoll__$1 = this;
if(cljs.core.truth_(self__.editable_QMARK_)){
var idx = cljs.core.array_map_index_of(tcoll__$1,key);
if((idx === (-1))){
if(((self__.len + (2)) <= ((2) * cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD))){
self__.len = (self__.len + (2));

self__.arr.push(key);

self__.arr.push(val);

return tcoll__$1;
} else {
return cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3((function (){var G__31888 = self__.len;
var G__31889 = self__.arr;
return (cljs.core.array__GT_transient_hash_map.cljs$core$IFn$_invoke$arity$2 ? cljs.core.array__GT_transient_hash_map.cljs$core$IFn$_invoke$arity$2(G__31888,G__31889) : cljs.core.array__GT_transient_hash_map.call(null,G__31888,G__31889));
})(),key,val);
}
} else {
if((val === (self__.arr[(idx + (1))]))){
return tcoll__$1;
} else {
(self__.arr[(idx + (1))] = val);

return tcoll__$1;
}
}
} else {
throw (new Error("assoc! after persistent!"));
}
});

cljs.core.TransientArrayMap.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = (function (tcoll,o){
var self__ = this;
var tcoll__$1 = this;
if(cljs.core.truth_(self__.editable_QMARK_)){
if((function (){var G__31890 = o;
if(G__31890){
var bit__24955__auto__ = (G__31890.cljs$lang$protocol_mask$partition0$ & (2048));
if((bit__24955__auto__) || (G__31890.cljs$core$IMapEntry$)){
return true;
} else {
if((!G__31890.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IMapEntry,G__31890);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IMapEntry,G__31890);
}
})()){
return cljs.core._assoc_BANG_(tcoll__$1,(function (){var G__31891 = o;
return (cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__31891) : cljs.core.key.call(null,G__31891));
})(),(function (){var G__31892 = o;
return (cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(G__31892) : cljs.core.val.call(null,G__31892));
})());
} else {
var es = cljs.core.seq(o);
var tcoll__$2 = tcoll__$1;
while(true){
var temp__4124__auto__ = cljs.core.first(es);
if(cljs.core.truth_(temp__4124__auto__)){
var e = temp__4124__auto__;
var G__31896 = cljs.core.next(es);
var G__31897 = cljs.core._assoc_BANG_(tcoll__$2,(function (){var G__31893 = e;
return (cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__31893) : cljs.core.key.call(null,G__31893));
})(),(function (){var G__31894 = e;
return (cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(G__31894) : cljs.core.val.call(null,G__31894));
})());
es = G__31896;
tcoll__$2 = G__31897;
continue;
} else {
return tcoll__$2;
}
break;
}
}
} else {
throw (new Error("conj! after persistent!"));
}
});

cljs.core.TransientArrayMap.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
if(cljs.core.truth_(self__.editable_QMARK_)){
self__.editable_QMARK_ = false;

return (new cljs.core.PersistentArrayMap(null,cljs.core.quot(self__.len,(2)),self__.arr,null));
} else {
throw (new Error("persistent! called twice"));
}
});

cljs.core.TransientArrayMap.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (tcoll,k){
var self__ = this;
var tcoll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(tcoll__$1,k,null);
});

cljs.core.TransientArrayMap.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (tcoll,k,not_found){
var self__ = this;
var tcoll__$1 = this;
if(cljs.core.truth_(self__.editable_QMARK_)){
var idx = cljs.core.array_map_index_of(tcoll__$1,k);
if((idx === (-1))){
return not_found;
} else {
return (self__.arr[(idx + (1))]);
}
} else {
throw (new Error("lookup after persistent!"));
}
});

cljs.core.TransientArrayMap.prototype.cljs$core$ICounted$_count$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
if(cljs.core.truth_(self__.editable_QMARK_)){
return cljs.core.quot(self__.len,(2));
} else {
throw (new Error("count after persistent!"));
}
});

cljs.core.TransientArrayMap.cljs$lang$type = true;

cljs.core.TransientArrayMap.cljs$lang$ctorStr = "cljs.core/TransientArrayMap";

cljs.core.TransientArrayMap.cljs$lang$ctorPrWriter = (function (this__24861__auto__,writer__24862__auto__,opt__24863__auto__){
return cljs.core._write(writer__24862__auto__,"cljs.core/TransientArrayMap");
});

cljs.core.__GT_TransientArrayMap = (function __GT_TransientArrayMap(editable_QMARK_,len,arr){
return (new cljs.core.TransientArrayMap(editable_QMARK_,len,arr));
});


cljs.core.array__GT_transient_hash_map = (function array__GT_transient_hash_map(len,arr){
var out = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
var i = (0);
while(true){
if((i < len)){
var G__31898 = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(out,(arr[i]),(arr[(i + (1))]));
var G__31899 = (i + (2));
out = G__31898;
i = G__31899;
continue;
} else {
return out;
}
break;
}
});

/**
* @constructor
*/
cljs.core.Box = (function (val){
this.val = val;
})

cljs.core.Box.cljs$lang$type = true;

cljs.core.Box.cljs$lang$ctorStr = "cljs.core/Box";

cljs.core.Box.cljs$lang$ctorPrWriter = (function (this__24861__auto__,writer__24862__auto__,opt__24863__auto__){
return cljs.core._write(writer__24862__auto__,"cljs.core/Box");
});

cljs.core.__GT_Box = (function __GT_Box(val){
return (new cljs.core.Box(val));
});






cljs.core.key_test = (function key_test(key,other){
if((key === other)){
return true;
} else {
if(cljs.core.keyword_identical_QMARK_(key,other)){
return true;
} else {
return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(key,other);

}
}
});
cljs.core.mask = (function mask(hash,shift){
return ((hash >>> shift) & (31));
});
cljs.core.clone_and_set = (function() {
var clone_and_set = null;
var clone_and_set__3 = (function (arr,i,a){
var G__31902 = cljs.core.aclone(arr);
(G__31902[i] = a);

return G__31902;
});
var clone_and_set__5 = (function (arr,i,a,j,b){
var G__31903 = cljs.core.aclone(arr);
(G__31903[i] = a);

(G__31903[j] = b);

return G__31903;
});
clone_and_set = function(arr,i,a,j,b){
switch(arguments.length){
case 3:
return clone_and_set__3.call(this,arr,i,a);
case 5:
return clone_and_set__5.call(this,arr,i,a,j,b);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
clone_and_set.cljs$core$IFn$_invoke$arity$3 = clone_and_set__3;
clone_and_set.cljs$core$IFn$_invoke$arity$5 = clone_and_set__5;
return clone_and_set;
})()
;
cljs.core.remove_pair = (function remove_pair(arr,i){
var new_arr = (new Array((arr.length - (2))));
cljs.core.array_copy(arr,(0),new_arr,(0),((2) * i));

cljs.core.array_copy(arr,((2) * (i + (1))),new_arr,((2) * i),(new_arr.length - ((2) * i)));

return new_arr;
});
cljs.core.bitmap_indexed_node_index = (function bitmap_indexed_node_index(bitmap,bit){
return cljs.core.bit_count((bitmap & (bit - (1))));
});
cljs.core.bitpos = (function bitpos(hash,shift){
return ((1) << ((hash >>> shift) & 0x01f));
});
cljs.core.edit_and_set = (function() {
var edit_and_set = null;
var edit_and_set__4 = (function (inode,edit,i,a){
var editable = inode.ensure_editable(edit);
(editable.arr[i] = a);

return editable;
});
var edit_and_set__6 = (function (inode,edit,i,a,j,b){
var editable = inode.ensure_editable(edit);
(editable.arr[i] = a);

(editable.arr[j] = b);

return editable;
});
edit_and_set = function(inode,edit,i,a,j,b){
switch(arguments.length){
case 4:
return edit_and_set__4.call(this,inode,edit,i,a);
case 6:
return edit_and_set__6.call(this,inode,edit,i,a,j,b);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
edit_and_set.cljs$core$IFn$_invoke$arity$4 = edit_and_set__4;
edit_and_set.cljs$core$IFn$_invoke$arity$6 = edit_and_set__6;
return edit_and_set;
})()
;
cljs.core.inode_kv_reduce = (function inode_kv_reduce(arr,f,init){
var len = arr.length;
var i = (0);
var init__$1 = init;
while(true){
if((i < len)){
var init__$2 = (function (){var k = (arr[i]);
if(!((k == null))){
var G__31908 = init__$1;
var G__31909 = k;
var G__31910 = (arr[(i + (1))]);
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__31908,G__31909,G__31910) : f.call(null,G__31908,G__31909,G__31910));
} else {
var node = (arr[(i + (1))]);
if(!((node == null))){
return node.kv_reduce(f,init__$1);
} else {
return init__$1;
}
}
})();
if(cljs.core.reduced_QMARK_(init__$2)){
var G__31911 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__31911) : cljs.core.deref.call(null,G__31911));
} else {
var G__31912 = (i + (2));
var G__31913 = init__$2;
i = G__31912;
init__$1 = G__31913;
continue;
}
} else {
return init__$1;
}
break;
}
});

/**
* @constructor
*/
cljs.core.BitmapIndexedNode = (function (edit,bitmap,arr){
this.edit = edit;
this.bitmap = bitmap;
this.arr = arr;
})
cljs.core.BitmapIndexedNode.prototype.ensure_editable = (function (e){
var self__ = this;
var inode = this;
if((e === self__.edit)){
return inode;
} else {
var n = cljs.core.bit_count(self__.bitmap);
var new_arr = (new Array((((n < (0)))?(4):((2) * (n + (1))))));
cljs.core.array_copy(self__.arr,(0),new_arr,(0),((2) * n));

return (new cljs.core.BitmapIndexedNode(e,self__.bitmap,new_arr));
}
});

cljs.core.BitmapIndexedNode.prototype.inode_without_BANG_ = (function (edit__$1,shift,hash,key,removed_leaf_QMARK_){
var self__ = this;
var inode = this;
var bit = (1 << ((hash >>> shift) & 0x01f));
if(((self__.bitmap & bit) === (0))){
return inode;
} else {
var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap,bit);
var key_or_nil = (self__.arr[((2) * idx)]);
var val_or_node = (self__.arr[(((2) * idx) + (1))]);
if((key_or_nil == null)){
var n = val_or_node.inode_without_BANG_(edit__$1,(shift + (5)),hash,key,removed_leaf_QMARK_);
if((n === val_or_node)){
return inode;
} else {
if(!((n == null))){
return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,(((2) * idx) + (1)),n);
} else {
if((self__.bitmap === bit)){
return null;
} else {
return inode.edit_and_remove_pair(edit__$1,bit,idx);

}
}
}
} else {
if(cljs.core.key_test(key,key_or_nil)){
(removed_leaf_QMARK_[(0)] = true);

return inode.edit_and_remove_pair(edit__$1,bit,idx);
} else {
return inode;

}
}
}
});

cljs.core.BitmapIndexedNode.prototype.edit_and_remove_pair = (function (e,bit,i){
var self__ = this;
var inode = this;
if((self__.bitmap === bit)){
return null;
} else {
var editable = inode.ensure_editable(e);
var earr = editable.arr;
var len = earr.length;
editable.bitmap = (bit ^ editable.bitmap);

cljs.core.array_copy(earr,((2) * (i + (1))),earr,((2) * i),(len - ((2) * (i + (1)))));

(earr[(len - (2))] = null);

(earr[(len - (1))] = null);

return editable;
}
});

cljs.core.BitmapIndexedNode.prototype.inode_seq = (function (){
var self__ = this;
var inode = this;
var G__31914 = self__.arr;
return (cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1 ? cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1(G__31914) : cljs.core.create_inode_seq.call(null,G__31914));
});

cljs.core.BitmapIndexedNode.prototype.kv_reduce = (function (f,init){
var self__ = this;
var inode = this;
return cljs.core.inode_kv_reduce(self__.arr,f,init);
});

cljs.core.BitmapIndexedNode.prototype.inode_lookup = (function (shift,hash,key,not_found){
var self__ = this;
var inode = this;
var bit = (1 << ((hash >>> shift) & 0x01f));
if(((self__.bitmap & bit) === (0))){
return not_found;
} else {
var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap,bit);
var key_or_nil = (self__.arr[((2) * idx)]);
var val_or_node = (self__.arr[(((2) * idx) + (1))]);
if((key_or_nil == null)){
return val_or_node.inode_lookup((shift + (5)),hash,key,not_found);
} else {
if(cljs.core.key_test(key,key_or_nil)){
return val_or_node;
} else {
return not_found;

}
}
}
});

cljs.core.BitmapIndexedNode.prototype.inode_assoc_BANG_ = (function (edit__$1,shift,hash,key,val,added_leaf_QMARK_){
var self__ = this;
var inode = this;
var bit = (1 << ((hash >>> shift) & 0x01f));
var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap,bit);
if(((self__.bitmap & bit) === (0))){
var n = cljs.core.bit_count(self__.bitmap);
if((((2) * n) < self__.arr.length)){
var editable = inode.ensure_editable(edit__$1);
var earr = editable.arr;
added_leaf_QMARK_.val = true;

cljs.core.array_copy_downward(earr,((2) * idx),earr,((2) * (idx + (1))),((2) * (n - idx)));

(earr[((2) * idx)] = key);

(earr[(((2) * idx) + (1))] = val);

editable.bitmap = (editable.bitmap | bit);

return editable;
} else {
if((n >= (16))){
var nodes = [null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null];
var jdx = ((hash >>> shift) & 0x01f);
(nodes[jdx] = cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit__$1,(shift + (5)),hash,key,val,added_leaf_QMARK_));

var i_31928 = (0);
var j_31929 = (0);
while(true){
if((i_31928 < (32))){
if((((self__.bitmap >>> i_31928) & (1)) === (0))){
var G__31930 = (i_31928 + (1));
var G__31931 = j_31929;
i_31928 = G__31930;
j_31929 = G__31931;
continue;
} else {
(nodes[i_31928] = ((!(((self__.arr[j_31929]) == null)))?cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit__$1,(shift + (5)),cljs.core.hash((self__.arr[j_31929])),(self__.arr[j_31929]),(self__.arr[(j_31929 + (1))]),added_leaf_QMARK_):(self__.arr[(j_31929 + (1))])));

var G__31932 = (i_31928 + (1));
var G__31933 = (j_31929 + (2));
i_31928 = G__31932;
j_31929 = G__31933;
continue;
}
} else {
}
break;
}

return (new cljs.core.ArrayNode(edit__$1,(n + (1)),nodes));
} else {
var new_arr = (new Array(((2) * (n + (4)))));
cljs.core.array_copy(self__.arr,(0),new_arr,(0),((2) * idx));

(new_arr[((2) * idx)] = key);

(new_arr[(((2) * idx) + (1))] = val);

cljs.core.array_copy(self__.arr,((2) * idx),new_arr,((2) * (idx + (1))),((2) * (n - idx)));

added_leaf_QMARK_.val = true;

var editable = inode.ensure_editable(edit__$1);
editable.arr = new_arr;

editable.bitmap = (editable.bitmap | bit);

return editable;

}
}
} else {
var key_or_nil = (self__.arr[((2) * idx)]);
var val_or_node = (self__.arr[(((2) * idx) + (1))]);
if((key_or_nil == null)){
var n = val_or_node.inode_assoc_BANG_(edit__$1,(shift + (5)),hash,key,val,added_leaf_QMARK_);
if((n === val_or_node)){
return inode;
} else {
return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,(((2) * idx) + (1)),n);
}
} else {
if(cljs.core.key_test(key,key_or_nil)){
if((val === val_or_node)){
return inode;
} else {
return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,(((2) * idx) + (1)),val);
}
} else {
added_leaf_QMARK_.val = true;

return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$6(inode,edit__$1,((2) * idx),null,(((2) * idx) + (1)),(function (){var G__31915 = edit__$1;
var G__31916 = (shift + (5));
var G__31917 = key_or_nil;
var G__31918 = val_or_node;
var G__31919 = hash;
var G__31920 = key;
var G__31921 = val;
return (cljs.core.create_node.cljs$core$IFn$_invoke$arity$7 ? cljs.core.create_node.cljs$core$IFn$_invoke$arity$7(G__31915,G__31916,G__31917,G__31918,G__31919,G__31920,G__31921) : cljs.core.create_node.call(null,G__31915,G__31916,G__31917,G__31918,G__31919,G__31920,G__31921));
})());

}
}
}
});

cljs.core.BitmapIndexedNode.prototype.inode_assoc = (function (shift,hash,key,val,added_leaf_QMARK_){
var self__ = this;
var inode = this;
var bit = (1 << ((hash >>> shift) & 0x01f));
var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap,bit);
if(((self__.bitmap & bit) === (0))){
var n = cljs.core.bit_count(self__.bitmap);
if((n >= (16))){
var nodes = [null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null];
var jdx = ((hash >>> shift) & 0x01f);
(nodes[jdx] = cljs.core.BitmapIndexedNode.EMPTY.inode_assoc((shift + (5)),hash,key,val,added_leaf_QMARK_));

var i_31934 = (0);
var j_31935 = (0);
while(true){
if((i_31934 < (32))){
if((((self__.bitmap >>> i_31934) & (1)) === (0))){
var G__31936 = (i_31934 + (1));
var G__31937 = j_31935;
i_31934 = G__31936;
j_31935 = G__31937;
continue;
} else {
(nodes[i_31934] = ((!(((self__.arr[j_31935]) == null)))?cljs.core.BitmapIndexedNode.EMPTY.inode_assoc((shift + (5)),cljs.core.hash((self__.arr[j_31935])),(self__.arr[j_31935]),(self__.arr[(j_31935 + (1))]),added_leaf_QMARK_):(self__.arr[(j_31935 + (1))])));

var G__31938 = (i_31934 + (1));
var G__31939 = (j_31935 + (2));
i_31934 = G__31938;
j_31935 = G__31939;
continue;
}
} else {
}
break;
}

return (new cljs.core.ArrayNode(null,(n + (1)),nodes));
} else {
var new_arr = (new Array(((2) * (n + (1)))));
cljs.core.array_copy(self__.arr,(0),new_arr,(0),((2) * idx));

(new_arr[((2) * idx)] = key);

(new_arr[(((2) * idx) + (1))] = val);

cljs.core.array_copy(self__.arr,((2) * idx),new_arr,((2) * (idx + (1))),((2) * (n - idx)));

added_leaf_QMARK_.val = true;

return (new cljs.core.BitmapIndexedNode(null,(self__.bitmap | bit),new_arr));
}
} else {
var key_or_nil = (self__.arr[((2) * idx)]);
var val_or_node = (self__.arr[(((2) * idx) + (1))]);
if((key_or_nil == null)){
var n = val_or_node.inode_assoc((shift + (5)),hash,key,val,added_leaf_QMARK_);
if((n === val_or_node)){
return inode;
} else {
return (new cljs.core.BitmapIndexedNode(null,self__.bitmap,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,(((2) * idx) + (1)),n)));
}
} else {
if(cljs.core.key_test(key,key_or_nil)){
if((val === val_or_node)){
return inode;
} else {
return (new cljs.core.BitmapIndexedNode(null,self__.bitmap,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,(((2) * idx) + (1)),val)));
}
} else {
added_leaf_QMARK_.val = true;

return (new cljs.core.BitmapIndexedNode(null,self__.bitmap,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$5(self__.arr,((2) * idx),null,(((2) * idx) + (1)),(function (){var G__31922 = (shift + (5));
var G__31923 = key_or_nil;
var G__31924 = val_or_node;
var G__31925 = hash;
var G__31926 = key;
var G__31927 = val;
return (cljs.core.create_node.cljs$core$IFn$_invoke$arity$6 ? cljs.core.create_node.cljs$core$IFn$_invoke$arity$6(G__31922,G__31923,G__31924,G__31925,G__31926,G__31927) : cljs.core.create_node.call(null,G__31922,G__31923,G__31924,G__31925,G__31926,G__31927));
})())));

}
}
}
});

cljs.core.BitmapIndexedNode.prototype.inode_find = (function (shift,hash,key,not_found){
var self__ = this;
var inode = this;
var bit = (1 << ((hash >>> shift) & 0x01f));
if(((self__.bitmap & bit) === (0))){
return not_found;
} else {
var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap,bit);
var key_or_nil = (self__.arr[((2) * idx)]);
var val_or_node = (self__.arr[(((2) * idx) + (1))]);
if((key_or_nil == null)){
return val_or_node.inode_find((shift + (5)),hash,key,not_found);
} else {
if(cljs.core.key_test(key,key_or_nil)){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [key_or_nil,val_or_node], null);
} else {
return not_found;

}
}
}
});

cljs.core.BitmapIndexedNode.prototype.inode_without = (function (shift,hash,key){
var self__ = this;
var inode = this;
var bit = (1 << ((hash >>> shift) & 0x01f));
if(((self__.bitmap & bit) === (0))){
return inode;
} else {
var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap,bit);
var key_or_nil = (self__.arr[((2) * idx)]);
var val_or_node = (self__.arr[(((2) * idx) + (1))]);
if((key_or_nil == null)){
var n = val_or_node.inode_without((shift + (5)),hash,key);
if((n === val_or_node)){
return inode;
} else {
if(!((n == null))){
return (new cljs.core.BitmapIndexedNode(null,self__.bitmap,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,(((2) * idx) + (1)),n)));
} else {
if((self__.bitmap === bit)){
return null;
} else {
return (new cljs.core.BitmapIndexedNode(null,(self__.bitmap ^ bit),cljs.core.remove_pair(self__.arr,idx)));

}
}
}
} else {
if(cljs.core.key_test(key,key_or_nil)){
return (new cljs.core.BitmapIndexedNode(null,(self__.bitmap ^ bit),cljs.core.remove_pair(self__.arr,idx)));
} else {
return inode;

}
}
}
});

cljs.core.BitmapIndexedNode.cljs$lang$type = true;

cljs.core.BitmapIndexedNode.cljs$lang$ctorStr = "cljs.core/BitmapIndexedNode";

cljs.core.BitmapIndexedNode.cljs$lang$ctorPrWriter = (function (this__24861__auto__,writer__24862__auto__,opt__24863__auto__){
return cljs.core._write(writer__24862__auto__,"cljs.core/BitmapIndexedNode");
});

cljs.core.__GT_BitmapIndexedNode = (function __GT_BitmapIndexedNode(edit,bitmap,arr){
return (new cljs.core.BitmapIndexedNode(edit,bitmap,arr));
});

cljs.core.BitmapIndexedNode.EMPTY = (new cljs.core.BitmapIndexedNode(null,(0),[]));
cljs.core.pack_array_node = (function pack_array_node(array_node,edit,idx){
var arr = array_node.arr;
var len = arr.length;
var new_arr = (new Array(((2) * (array_node.cnt - (1)))));
var i = (0);
var j = (1);
var bitmap = (0);
while(true){
if((i < len)){
if((!((i === idx))) && (!(((arr[i]) == null)))){
(new_arr[j] = (arr[i]));

var G__31940 = (i + (1));
var G__31941 = (j + (2));
var G__31942 = (bitmap | ((1) << i));
i = G__31940;
j = G__31941;
bitmap = G__31942;
continue;
} else {
var G__31943 = (i + (1));
var G__31944 = j;
var G__31945 = bitmap;
i = G__31943;
j = G__31944;
bitmap = G__31945;
continue;
}
} else {
return (new cljs.core.BitmapIndexedNode(edit,bitmap,new_arr));
}
break;
}
});

/**
* @constructor
*/
cljs.core.ArrayNode = (function (edit,cnt,arr){
this.edit = edit;
this.cnt = cnt;
this.arr = arr;
})
cljs.core.ArrayNode.prototype.ensure_editable = (function (e){
var self__ = this;
var inode = this;
if((e === self__.edit)){
return inode;
} else {
return (new cljs.core.ArrayNode(e,self__.cnt,cljs.core.aclone(self__.arr)));
}
});

cljs.core.ArrayNode.prototype.inode_without_BANG_ = (function (edit__$1,shift,hash,key,removed_leaf_QMARK_){
var self__ = this;
var inode = this;
var idx = ((hash >>> shift) & 0x01f);
var node = (self__.arr[idx]);
if((node == null)){
return inode;
} else {
var n = node.inode_without_BANG_(edit__$1,(shift + (5)),hash,key,removed_leaf_QMARK_);
if((n === node)){
return inode;
} else {
if((n == null)){
if((self__.cnt <= (8))){
return cljs.core.pack_array_node(inode,edit__$1,idx);
} else {
var editable = cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,idx,n);
editable.cnt = (editable.cnt - (1));

return editable;
}
} else {
return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,idx,n);

}
}
}
});

cljs.core.ArrayNode.prototype.inode_seq = (function (){
var self__ = this;
var inode = this;
var G__31946 = self__.arr;
return (cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$1 ? cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$1(G__31946) : cljs.core.create_array_node_seq.call(null,G__31946));
});

cljs.core.ArrayNode.prototype.kv_reduce = (function (f,init){
var self__ = this;
var inode = this;
var len = self__.arr.length;
var i = (0);
var init__$1 = init;
while(true){
if((i < len)){
var node = (self__.arr[i]);
if(!((node == null))){
var init__$2 = node.kv_reduce(f,init__$1);
if(cljs.core.reduced_QMARK_(init__$2)){
var G__31947 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__31947) : cljs.core.deref.call(null,G__31947));
} else {
var G__31948 = (i + (1));
var G__31949 = init__$2;
i = G__31948;
init__$1 = G__31949;
continue;
}
} else {
var G__31950 = (i + (1));
var G__31951 = init__$1;
i = G__31950;
init__$1 = G__31951;
continue;
}
} else {
return init__$1;
}
break;
}
});

cljs.core.ArrayNode.prototype.inode_lookup = (function (shift,hash,key,not_found){
var self__ = this;
var inode = this;
var idx = ((hash >>> shift) & 0x01f);
var node = (self__.arr[idx]);
if(!((node == null))){
return node.inode_lookup((shift + (5)),hash,key,not_found);
} else {
return not_found;
}
});

cljs.core.ArrayNode.prototype.inode_assoc_BANG_ = (function (edit__$1,shift,hash,key,val,added_leaf_QMARK_){
var self__ = this;
var inode = this;
var idx = ((hash >>> shift) & 0x01f);
var node = (self__.arr[idx]);
if((node == null)){
var editable = cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,idx,cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit__$1,(shift + (5)),hash,key,val,added_leaf_QMARK_));
editable.cnt = (editable.cnt + (1));

return editable;
} else {
var n = node.inode_assoc_BANG_(edit__$1,(shift + (5)),hash,key,val,added_leaf_QMARK_);
if((n === node)){
return inode;
} else {
return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,idx,n);
}
}
});

cljs.core.ArrayNode.prototype.inode_assoc = (function (shift,hash,key,val,added_leaf_QMARK_){
var self__ = this;
var inode = this;
var idx = ((hash >>> shift) & 0x01f);
var node = (self__.arr[idx]);
if((node == null)){
return (new cljs.core.ArrayNode(null,(self__.cnt + (1)),cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,idx,cljs.core.BitmapIndexedNode.EMPTY.inode_assoc((shift + (5)),hash,key,val,added_leaf_QMARK_))));
} else {
var n = node.inode_assoc((shift + (5)),hash,key,val,added_leaf_QMARK_);
if((n === node)){
return inode;
} else {
return (new cljs.core.ArrayNode(null,self__.cnt,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,idx,n)));
}
}
});

cljs.core.ArrayNode.prototype.inode_find = (function (shift,hash,key,not_found){
var self__ = this;
var inode = this;
var idx = ((hash >>> shift) & 0x01f);
var node = (self__.arr[idx]);
if(!((node == null))){
return node.inode_find((shift + (5)),hash,key,not_found);
} else {
return not_found;
}
});

cljs.core.ArrayNode.prototype.inode_without = (function (shift,hash,key){
var self__ = this;
var inode = this;
var idx = ((hash >>> shift) & 0x01f);
var node = (self__.arr[idx]);
if(!((node == null))){
var n = node.inode_without((shift + (5)),hash,key);
if((n === node)){
return inode;
} else {
if((n == null)){
if((self__.cnt <= (8))){
return cljs.core.pack_array_node(inode,null,idx);
} else {
return (new cljs.core.ArrayNode(null,(self__.cnt - (1)),cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,idx,n)));
}
} else {
return (new cljs.core.ArrayNode(null,self__.cnt,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,idx,n)));

}
}
} else {
return inode;
}
});

cljs.core.ArrayNode.cljs$lang$type = true;

cljs.core.ArrayNode.cljs$lang$ctorStr = "cljs.core/ArrayNode";

cljs.core.ArrayNode.cljs$lang$ctorPrWriter = (function (this__24861__auto__,writer__24862__auto__,opt__24863__auto__){
return cljs.core._write(writer__24862__auto__,"cljs.core/ArrayNode");
});

cljs.core.__GT_ArrayNode = (function __GT_ArrayNode(edit,cnt,arr){
return (new cljs.core.ArrayNode(edit,cnt,arr));
});

cljs.core.hash_collision_node_find_index = (function hash_collision_node_find_index(arr,cnt,key){
var lim = ((2) * cnt);
var i = (0);
while(true){
if((i < lim)){
if(cljs.core.key_test(key,(arr[i]))){
return i;
} else {
var G__31952 = (i + (2));
i = G__31952;
continue;
}
} else {
return (-1);
}
break;
}
});

/**
* @constructor
*/
cljs.core.HashCollisionNode = (function (edit,collision_hash,cnt,arr){
this.edit = edit;
this.collision_hash = collision_hash;
this.cnt = cnt;
this.arr = arr;
})
cljs.core.HashCollisionNode.prototype.ensure_editable = (function (e){
var self__ = this;
var inode = this;
if((e === self__.edit)){
return inode;
} else {
var new_arr = (new Array(((2) * (self__.cnt + (1)))));
cljs.core.array_copy(self__.arr,(0),new_arr,(0),((2) * self__.cnt));

return (new cljs.core.HashCollisionNode(e,self__.collision_hash,self__.cnt,new_arr));
}
});

cljs.core.HashCollisionNode.prototype.inode_without_BANG_ = (function (edit__$1,shift,hash,key,removed_leaf_QMARK_){
var self__ = this;
var inode = this;
var idx = cljs.core.hash_collision_node_find_index(self__.arr,self__.cnt,key);
if((idx === (-1))){
return inode;
} else {
(removed_leaf_QMARK_[(0)] = true);

if((self__.cnt === (1))){
return null;
} else {
var editable = inode.ensure_editable(edit__$1);
var earr = editable.arr;
(earr[idx] = (earr[(((2) * self__.cnt) - (2))]));

(earr[(idx + (1))] = (earr[(((2) * self__.cnt) - (1))]));

(earr[(((2) * self__.cnt) - (1))] = null);

(earr[(((2) * self__.cnt) - (2))] = null);

editable.cnt = (editable.cnt - (1));

return editable;
}
}
});

cljs.core.HashCollisionNode.prototype.inode_seq = (function (){
var self__ = this;
var inode = this;
var G__31953 = self__.arr;
return (cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1 ? cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1(G__31953) : cljs.core.create_inode_seq.call(null,G__31953));
});

cljs.core.HashCollisionNode.prototype.kv_reduce = (function (f,init){
var self__ = this;
var inode = this;
return cljs.core.inode_kv_reduce(self__.arr,f,init);
});

cljs.core.HashCollisionNode.prototype.inode_lookup = (function (shift,hash,key,not_found){
var self__ = this;
var inode = this;
var idx = cljs.core.hash_collision_node_find_index(self__.arr,self__.cnt,key);
if((idx < (0))){
return not_found;
} else {
if(cljs.core.key_test(key,(self__.arr[idx]))){
return (self__.arr[(idx + (1))]);
} else {
return not_found;

}
}
});

cljs.core.HashCollisionNode.prototype.inode_assoc_BANG_ = (function (edit__$1,shift,hash,key,val,added_leaf_QMARK_){
var self__ = this;
var inode = this;
if((hash === self__.collision_hash)){
var idx = cljs.core.hash_collision_node_find_index(self__.arr,self__.cnt,key);
if((idx === (-1))){
if((self__.arr.length > ((2) * self__.cnt))){
var editable = cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$6(inode,edit__$1,((2) * self__.cnt),key,(((2) * self__.cnt) + (1)),val);
added_leaf_QMARK_.val = true;

editable.cnt = (editable.cnt + (1));

return editable;
} else {
var len = self__.arr.length;
var new_arr = (new Array((len + (2))));
cljs.core.array_copy(self__.arr,(0),new_arr,(0),len);

(new_arr[len] = key);

(new_arr[(len + (1))] = val);

added_leaf_QMARK_.val = true;

return inode.ensure_editable_array(edit__$1,(self__.cnt + (1)),new_arr);
}
} else {
if(((self__.arr[(idx + (1))]) === val)){
return inode;
} else {
return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,(idx + (1)),val);
}
}
} else {
return (new cljs.core.BitmapIndexedNode(edit__$1,(1 << ((self__.collision_hash >>> shift) & 0x01f)),[null,inode,null,null])).inode_assoc_BANG_(edit__$1,shift,hash,key,val,added_leaf_QMARK_);
}
});

cljs.core.HashCollisionNode.prototype.inode_assoc = (function (shift,hash,key,val,added_leaf_QMARK_){
var self__ = this;
var inode = this;
if((hash === self__.collision_hash)){
var idx = cljs.core.hash_collision_node_find_index(self__.arr,self__.cnt,key);
if((idx === (-1))){
var len = ((2) * self__.cnt);
var new_arr = (new Array((len + (2))));
cljs.core.array_copy(self__.arr,(0),new_arr,(0),len);

(new_arr[len] = key);

(new_arr[(len + (1))] = val);

added_leaf_QMARK_.val = true;

return (new cljs.core.HashCollisionNode(null,self__.collision_hash,(self__.cnt + (1)),new_arr));
} else {
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2((self__.arr[idx]),val)){
return inode;
} else {
return (new cljs.core.HashCollisionNode(null,self__.collision_hash,self__.cnt,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,(idx + (1)),val)));
}
}
} else {
return (new cljs.core.BitmapIndexedNode(null,(1 << ((self__.collision_hash >>> shift) & 0x01f)),[null,inode])).inode_assoc(shift,hash,key,val,added_leaf_QMARK_);
}
});

cljs.core.HashCollisionNode.prototype.ensure_editable_array = (function (e,count,array){
var self__ = this;
var inode = this;
if((e === self__.edit)){
self__.arr = array;

self__.cnt = count;

return inode;
} else {
return (new cljs.core.HashCollisionNode(self__.edit,self__.collision_hash,count,array));
}
});

cljs.core.HashCollisionNode.prototype.inode_find = (function (shift,hash,key,not_found){
var self__ = this;
var inode = this;
var idx = cljs.core.hash_collision_node_find_index(self__.arr,self__.cnt,key);
if((idx < (0))){
return not_found;
} else {
if(cljs.core.key_test(key,(self__.arr[idx]))){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(self__.arr[idx]),(self__.arr[(idx + (1))])], null);
} else {
return not_found;

}
}
});

cljs.core.HashCollisionNode.prototype.inode_without = (function (shift,hash,key){
var self__ = this;
var inode = this;
var idx = cljs.core.hash_collision_node_find_index(self__.arr,self__.cnt,key);
if((idx === (-1))){
return inode;
} else {
if((self__.cnt === (1))){
return null;
} else {
return (new cljs.core.HashCollisionNode(null,self__.collision_hash,(self__.cnt - (1)),cljs.core.remove_pair(self__.arr,cljs.core.quot(idx,(2)))));

}
}
});

cljs.core.HashCollisionNode.cljs$lang$type = true;

cljs.core.HashCollisionNode.cljs$lang$ctorStr = "cljs.core/HashCollisionNode";

cljs.core.HashCollisionNode.cljs$lang$ctorPrWriter = (function (this__24861__auto__,writer__24862__auto__,opt__24863__auto__){
return cljs.core._write(writer__24862__auto__,"cljs.core/HashCollisionNode");
});

cljs.core.__GT_HashCollisionNode = (function __GT_HashCollisionNode(edit,collision_hash,cnt,arr){
return (new cljs.core.HashCollisionNode(edit,collision_hash,cnt,arr));
});

cljs.core.create_node = (function() {
var create_node = null;
var create_node__6 = (function (shift,key1,val1,key2hash,key2,val2){
var key1hash = cljs.core.hash(key1);
if((key1hash === key2hash)){
return (new cljs.core.HashCollisionNode(null,key1hash,(2),[key1,val1,key2,val2]));
} else {
var added_leaf_QMARK_ = (new cljs.core.Box(false));
return cljs.core.BitmapIndexedNode.EMPTY.inode_assoc(shift,key1hash,key1,val1,added_leaf_QMARK_).inode_assoc(shift,key2hash,key2,val2,added_leaf_QMARK_);
}
});
var create_node__7 = (function (edit,shift,key1,val1,key2hash,key2,val2){
var key1hash = cljs.core.hash(key1);
if((key1hash === key2hash)){
return (new cljs.core.HashCollisionNode(null,key1hash,(2),[key1,val1,key2,val2]));
} else {
var added_leaf_QMARK_ = (new cljs.core.Box(false));
return cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit,shift,key1hash,key1,val1,added_leaf_QMARK_).inode_assoc_BANG_(edit,shift,key2hash,key2,val2,added_leaf_QMARK_);
}
});
create_node = function(edit,shift,key1,val1,key2hash,key2,val2){
switch(arguments.length){
case 6:
return create_node__6.call(this,edit,shift,key1,val1,key2hash,key2);
case 7:
return create_node__7.call(this,edit,shift,key1,val1,key2hash,key2,val2);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
create_node.cljs$core$IFn$_invoke$arity$6 = create_node__6;
create_node.cljs$core$IFn$_invoke$arity$7 = create_node__7;
return create_node;
})()
;

/**
* @constructor
*/
cljs.core.NodeSeq = (function (meta,nodes,i,s,__hash){
this.meta = meta;
this.nodes = nodes;
this.i = i;
this.s = s;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32374860;
})
cljs.core.NodeSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.NodeSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.NodeSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.NodeSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__24695__auto__ = self__.__hash;
if(!((h__24695__auto__ == null))){
return h__24695__auto__;
} else {
var h__24695__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__24695__auto____$1;

return h__24695__auto____$1;
}
});

cljs.core.NodeSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.NodeSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.NodeSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.NodeSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.NodeSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.s == null)){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(self__.nodes[self__.i]),(self__.nodes[(self__.i + (1))])], null);
} else {
return cljs.core.first(self__.s);
}
});

cljs.core.NodeSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.s == null)){
var G__31954 = self__.nodes;
var G__31955 = (self__.i + (2));
var G__31956 = null;
return (cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3 ? cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3(G__31954,G__31955,G__31956) : cljs.core.create_inode_seq.call(null,G__31954,G__31955,G__31956));
} else {
var G__31957 = self__.nodes;
var G__31958 = self__.i;
var G__31959 = cljs.core.next(self__.s);
return (cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3 ? cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3(G__31957,G__31958,G__31959) : cljs.core.create_inode_seq.call(null,G__31957,G__31958,G__31959));
}
});

cljs.core.NodeSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return this$__$1;
});

cljs.core.NodeSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.NodeSeq(meta__$1,self__.nodes,self__.i,self__.s,self__.__hash));
});

cljs.core.NodeSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.NodeSeq.cljs$lang$type = true;

cljs.core.NodeSeq.cljs$lang$ctorStr = "cljs.core/NodeSeq";

cljs.core.NodeSeq.cljs$lang$ctorPrWriter = (function (this__24861__auto__,writer__24862__auto__,opt__24863__auto__){
return cljs.core._write(writer__24862__auto__,"cljs.core/NodeSeq");
});

cljs.core.__GT_NodeSeq = (function __GT_NodeSeq(meta,nodes,i,s,__hash){
return (new cljs.core.NodeSeq(meta,nodes,i,s,__hash));
});

(cljs.core.NodeSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__25252__auto__ = this;
return cljs.core.es6_iterator(this__25252__auto__);
}));
cljs.core.create_inode_seq = (function() {
var create_inode_seq = null;
var create_inode_seq__1 = (function (nodes){
return create_inode_seq.cljs$core$IFn$_invoke$arity$3(nodes,(0),null);
});
var create_inode_seq__3 = (function (nodes,i,s){
if((s == null)){
var len = nodes.length;
var j = i;
while(true){
if((j < len)){
if(!(((nodes[j]) == null))){
return (new cljs.core.NodeSeq(null,nodes,j,null,null));
} else {
var temp__4124__auto__ = (nodes[(j + (1))]);
if(cljs.core.truth_(temp__4124__auto__)){
var node = temp__4124__auto__;
var temp__4124__auto____$1 = node.inode_seq();
if(cljs.core.truth_(temp__4124__auto____$1)){
var node_seq = temp__4124__auto____$1;
return (new cljs.core.NodeSeq(null,nodes,(j + (2)),node_seq,null));
} else {
var G__31963 = (j + (2));
j = G__31963;
continue;
}
} else {
var G__31964 = (j + (2));
j = G__31964;
continue;
}
}
} else {
return null;
}
break;
}
} else {
return (new cljs.core.NodeSeq(null,nodes,i,s,null));
}
});
create_inode_seq = function(nodes,i,s){
switch(arguments.length){
case 1:
return create_inode_seq__1.call(this,nodes);
case 3:
return create_inode_seq__3.call(this,nodes,i,s);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
create_inode_seq.cljs$core$IFn$_invoke$arity$1 = create_inode_seq__1;
create_inode_seq.cljs$core$IFn$_invoke$arity$3 = create_inode_seq__3;
return create_inode_seq;
})()
;

/**
* @constructor
*/
cljs.core.ArrayNodeSeq = (function (meta,nodes,i,s,__hash){
this.meta = meta;
this.nodes = nodes;
this.i = i;
this.s = s;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32374860;
})
cljs.core.ArrayNodeSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.ArrayNodeSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__24695__auto__ = self__.__hash;
if(!((h__24695__auto__ == null))){
return h__24695__auto__;
} else {
var h__24695__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__24695__auto____$1;

return h__24695__auto____$1;
}
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.first(self__.s);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var G__31965 = null;
var G__31966 = self__.nodes;
var G__31967 = self__.i;
var G__31968 = cljs.core.next(self__.s);
return (cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$4(G__31965,G__31966,G__31967,G__31968) : cljs.core.create_array_node_seq.call(null,G__31965,G__31966,G__31967,G__31968));
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return this$__$1;
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.ArrayNodeSeq(meta__$1,self__.nodes,self__.i,self__.s,self__.__hash));
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.ArrayNodeSeq.cljs$lang$type = true;

cljs.core.ArrayNodeSeq.cljs$lang$ctorStr = "cljs.core/ArrayNodeSeq";

cljs.core.ArrayNodeSeq.cljs$lang$ctorPrWriter = (function (this__24861__auto__,writer__24862__auto__,opt__24863__auto__){
return cljs.core._write(writer__24862__auto__,"cljs.core/ArrayNodeSeq");
});

cljs.core.__GT_ArrayNodeSeq = (function __GT_ArrayNodeSeq(meta,nodes,i,s,__hash){
return (new cljs.core.ArrayNodeSeq(meta,nodes,i,s,__hash));
});

(cljs.core.ArrayNodeSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__25252__auto__ = this;
return cljs.core.es6_iterator(this__25252__auto__);
}));
cljs.core.create_array_node_seq = (function() {
var create_array_node_seq = null;
var create_array_node_seq__1 = (function (nodes){
return create_array_node_seq.cljs$core$IFn$_invoke$arity$4(null,nodes,(0),null);
});
var create_array_node_seq__4 = (function (meta,nodes,i,s){
if((s == null)){
var len = nodes.length;
var j = i;
while(true){
if((j < len)){
var temp__4124__auto__ = (nodes[j]);
if(cljs.core.truth_(temp__4124__auto__)){
var nj = temp__4124__auto__;
var temp__4124__auto____$1 = nj.inode_seq();
if(cljs.core.truth_(temp__4124__auto____$1)){
var ns = temp__4124__auto____$1;
return (new cljs.core.ArrayNodeSeq(meta,nodes,(j + (1)),ns,null));
} else {
var G__31973 = (j + (1));
j = G__31973;
continue;
}
} else {
var G__31974 = (j + (1));
j = G__31974;
continue;
}
} else {
return null;
}
break;
}
} else {
return (new cljs.core.ArrayNodeSeq(meta,nodes,i,s,null));
}
});
create_array_node_seq = function(meta,nodes,i,s){
switch(arguments.length){
case 1:
return create_array_node_seq__1.call(this,meta);
case 4:
return create_array_node_seq__4.call(this,meta,nodes,i,s);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
create_array_node_seq.cljs$core$IFn$_invoke$arity$1 = create_array_node_seq__1;
create_array_node_seq.cljs$core$IFn$_invoke$arity$4 = create_array_node_seq__4;
return create_array_node_seq;
})()
;

/**
* @constructor
*/
cljs.core.PersistentHashMap = (function (meta,cnt,root,has_nil_QMARK_,nil_val,__hash){
this.meta = meta;
this.cnt = cnt;
this.root = root;
this.has_nil_QMARK_ = has_nil_QMARK_;
this.nil_val = nil_val;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 16123663;
this.cljs$lang$protocol_mask$partition1$ = 8196;
})
cljs.core.PersistentHashMap.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentHashMap.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentHashMap.prototype.keys = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator((function (){var G__31976 = coll;
return (cljs.core.keys.cljs$core$IFn$_invoke$arity$1 ? cljs.core.keys.cljs$core$IFn$_invoke$arity$1(G__31976) : cljs.core.keys.call(null,G__31976));
})());
});

cljs.core.PersistentHashMap.prototype.entries = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_entries_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentHashMap.prototype.values = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator((function (){var G__31977 = coll;
return (cljs.core.vals.cljs$core$IFn$_invoke$arity$1 ? cljs.core.vals.cljs$core$IFn$_invoke$arity$1(G__31977) : cljs.core.vals.call(null,G__31977));
})());
});

cljs.core.PersistentHashMap.prototype.has = (function (k){
var self__ = this;
var coll = this;
return cljs.core.contains_QMARK_(coll,k);
});

cljs.core.PersistentHashMap.prototype.get = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentHashMap.prototype.forEach = (function (f){
var self__ = this;
var coll = this;
var seq__31978 = cljs.core.seq(coll);
var chunk__31979 = null;
var count__31980 = (0);
var i__31981 = (0);
while(true){
if((i__31981 < count__31980)){
var vec__31982 = chunk__31979.cljs$core$IIndexed$_nth$arity$2(null,i__31981);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__31982,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__31982,(1),null);
var G__31983_31994 = v;
var G__31984_31995 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__31983_31994,G__31984_31995) : f.call(null,G__31983_31994,G__31984_31995));

var G__31996 = seq__31978;
var G__31997 = chunk__31979;
var G__31998 = count__31980;
var G__31999 = (i__31981 + (1));
seq__31978 = G__31996;
chunk__31979 = G__31997;
count__31980 = G__31998;
i__31981 = G__31999;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__31978);
if(temp__4126__auto__){
var seq__31978__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__31978__$1)){
var c__25061__auto__ = cljs.core.chunk_first(seq__31978__$1);
var G__32000 = cljs.core.chunk_rest(seq__31978__$1);
var G__32001 = c__25061__auto__;
var G__32002 = cljs.core.count(c__25061__auto__);
var G__32003 = (0);
seq__31978 = G__32000;
chunk__31979 = G__32001;
count__31980 = G__32002;
i__31981 = G__32003;
continue;
} else {
var vec__31985 = cljs.core.first(seq__31978__$1);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__31985,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__31985,(1),null);
var G__31986_32004 = v;
var G__31987_32005 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__31986_32004,G__31987_32005) : f.call(null,G__31986_32004,G__31987_32005));

var G__32006 = cljs.core.next(seq__31978__$1);
var G__32007 = null;
var G__32008 = (0);
var G__32009 = (0);
seq__31978 = G__32006;
chunk__31979 = G__32007;
count__31980 = G__32008;
i__31981 = G__32009;
continue;
}
} else {
return null;
}
}
break;
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.PersistentHashMap.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
if((k == null)){
if(self__.has_nil_QMARK_){
return self__.nil_val;
} else {
return not_found;
}
} else {
if((self__.root == null)){
return not_found;
} else {
return self__.root.inode_lookup((0),cljs.core.hash(k),k,not_found);

}
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = (function (coll,f,init){
var self__ = this;
var coll__$1 = this;
var init__$1 = ((self__.has_nil_QMARK_)?(function (){var G__31988 = init;
var G__31989 = null;
var G__31990 = self__.nil_val;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__31988,G__31989,G__31990) : f.call(null,G__31988,G__31989,G__31990));
})():init);
if(cljs.core.reduced_QMARK_(init__$1)){
var G__31991 = init__$1;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__31991) : cljs.core.deref.call(null,G__31991));
} else {
if(!((self__.root == null))){
return self__.root.kv_reduce(f,init__$1);
} else {
return init__$1;

}
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentHashMap.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.PersistentHashMap(self__.meta,self__.cnt,self__.root,self__.has_nil_QMARK_,self__.nil_val,self__.__hash));
});

cljs.core.PersistentHashMap.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.cnt;
});

cljs.core.PersistentHashMap.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__24695__auto__ = self__.__hash;
if(!((h__24695__auto__ == null))){
return h__24695__auto__;
} else {
var h__24695__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
self__.__hash = h__24695__auto____$1;

return h__24695__auto____$1;
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_map(coll__$1,other);
});

cljs.core.PersistentHashMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.TransientHashMap((function (){var obj31993 = {};
return obj31993;
})(),self__.root,self__.cnt,self__.has_nil_QMARK_,self__.nil_val));
});

cljs.core.PersistentHashMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._with_meta(cljs.core.PersistentHashMap.EMPTY,self__.meta);
});

cljs.core.PersistentHashMap.prototype.cljs$core$IMap$_dissoc$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
if((k == null)){
if(self__.has_nil_QMARK_){
return (new cljs.core.PersistentHashMap(self__.meta,(self__.cnt - (1)),self__.root,false,null,null));
} else {
return coll__$1;
}
} else {
if((self__.root == null)){
return coll__$1;
} else {
var new_root = self__.root.inode_without((0),cljs.core.hash(k),k);
if((new_root === self__.root)){
return coll__$1;
} else {
return (new cljs.core.PersistentHashMap(self__.meta,(self__.cnt - (1)),new_root,self__.has_nil_QMARK_,self__.nil_val,null));
}

}
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (coll,k,v){
var self__ = this;
var coll__$1 = this;
if((k == null)){
if((self__.has_nil_QMARK_) && ((v === self__.nil_val))){
return coll__$1;
} else {
return (new cljs.core.PersistentHashMap(self__.meta,((self__.has_nil_QMARK_)?self__.cnt:(self__.cnt + (1))),self__.root,true,v,null));
}
} else {
var added_leaf_QMARK_ = (new cljs.core.Box(false));
var new_root = (((self__.root == null))?cljs.core.BitmapIndexedNode.EMPTY:self__.root).inode_assoc((0),cljs.core.hash(k),k,v,added_leaf_QMARK_);
if((new_root === self__.root)){
return coll__$1;
} else {
return (new cljs.core.PersistentHashMap(self__.meta,((added_leaf_QMARK_.val)?(self__.cnt + (1)):self__.cnt),new_root,self__.has_nil_QMARK_,self__.nil_val,null));
}
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
if((k == null)){
return self__.has_nil_QMARK_;
} else {
if((self__.root == null)){
return false;
} else {
return !((self__.root.inode_lookup((0),cljs.core.hash(k),k,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel));

}
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
var s = ((!((self__.root == null)))?self__.root.inode_seq():null);
if(self__.has_nil_QMARK_){
return cljs.core.cons(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null,self__.nil_val], null),s);
} else {
return s;
}
} else {
return null;
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentHashMap(meta__$1,self__.cnt,self__.root,self__.has_nil_QMARK_,self__.nil_val,self__.__hash));
});

cljs.core.PersistentHashMap.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,entry){
var self__ = this;
var coll__$1 = this;
if(cljs.core.vector_QMARK_(entry)){
return cljs.core._assoc(coll__$1,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(1)));
} else {
var ret = coll__$1;
var es = cljs.core.seq(entry);
while(true){
if((es == null)){
return ret;
} else {
var e = cljs.core.first(es);
if(cljs.core.vector_QMARK_(e)){
var G__32010 = cljs.core._assoc(ret,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e,(1)));
var G__32011 = cljs.core.next(es);
ret = G__32010;
es = G__32011;
continue;
} else {
throw (new Error("conj on a map takes map entries or seqables of map entries"));
}
}
break;
}
}
});

cljs.core.PersistentHashMap.prototype.call = (function() {
var G__32012 = null;
var G__32012__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__32012__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__32012 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__32012__2.call(this,self__,k);
case 3:
return G__32012__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__32012.cljs$core$IFn$_invoke$arity$2 = G__32012__2;
G__32012.cljs$core$IFn$_invoke$arity$3 = G__32012__3;
return G__32012;
})()
;

cljs.core.PersistentHashMap.prototype.apply = (function (self__,args31975){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args31975)));
});

cljs.core.PersistentHashMap.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentHashMap.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.PersistentHashMap.cljs$lang$type = true;

cljs.core.PersistentHashMap.cljs$lang$ctorStr = "cljs.core/PersistentHashMap";

cljs.core.PersistentHashMap.cljs$lang$ctorPrWriter = (function (this__24861__auto__,writer__24862__auto__,opt__24863__auto__){
return cljs.core._write(writer__24862__auto__,"cljs.core/PersistentHashMap");
});

cljs.core.__GT_PersistentHashMap = (function __GT_PersistentHashMap(meta,cnt,root,has_nil_QMARK_,nil_val,__hash){
return (new cljs.core.PersistentHashMap(meta,cnt,root,has_nil_QMARK_,nil_val,__hash));
});

cljs.core.PersistentHashMap.EMPTY = (new cljs.core.PersistentHashMap(null,(0),null,false,null,(0)));
cljs.core.PersistentHashMap.fromArrays = (function (ks,vs){
var len = ks.length;
var i = (0);
var out = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
while(true){
if((i < len)){
var G__32013 = (i + (1));
var G__32014 = out.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3(null,(ks[i]),(vs[i]));
i = G__32013;
out = G__32014;
continue;
} else {
return cljs.core.persistent_BANG_(out);
}
break;
}
});
(cljs.core.PersistentHashMap.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__25252__auto__ = this;
return cljs.core.es6_iterator(this__25252__auto__);
}));

/**
* @constructor
*/
cljs.core.TransientHashMap = (function (edit,root,count,has_nil_QMARK_,nil_val){
this.edit = edit;
this.root = root;
this.count = count;
this.has_nil_QMARK_ = has_nil_QMARK_;
this.nil_val = nil_val;
this.cljs$lang$protocol_mask$partition1$ = 56;
this.cljs$lang$protocol_mask$partition0$ = 258;
})
cljs.core.TransientHashMap.prototype.cljs$core$ITransientMap$_dissoc_BANG_$arity$2 = (function (tcoll,key){
var self__ = this;
var tcoll__$1 = this;
return tcoll__$1.without_BANG_(key);
});

cljs.core.TransientHashMap.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = (function (tcoll,key,val){
var self__ = this;
var tcoll__$1 = this;
return tcoll__$1.assoc_BANG_(key,val);
});

cljs.core.TransientHashMap.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = (function (tcoll,val){
var self__ = this;
var tcoll__$1 = this;
return tcoll__$1.conj_BANG_(val);
});

cljs.core.TransientHashMap.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
return tcoll__$1.persistent_BANG_();
});

cljs.core.TransientHashMap.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (tcoll,k){
var self__ = this;
var tcoll__$1 = this;
if((k == null)){
if(self__.has_nil_QMARK_){
return self__.nil_val;
} else {
return null;
}
} else {
if((self__.root == null)){
return null;
} else {
return self__.root.inode_lookup((0),cljs.core.hash(k),k);
}
}
});

cljs.core.TransientHashMap.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (tcoll,k,not_found){
var self__ = this;
var tcoll__$1 = this;
if((k == null)){
if(self__.has_nil_QMARK_){
return self__.nil_val;
} else {
return not_found;
}
} else {
if((self__.root == null)){
return not_found;
} else {
return self__.root.inode_lookup((0),cljs.core.hash(k),k,not_found);
}
}
});

cljs.core.TransientHashMap.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if(self__.edit){
return self__.count;
} else {
throw (new Error("count after persistent!"));
}
});

cljs.core.TransientHashMap.prototype.conj_BANG_ = (function (o){
var self__ = this;
var tcoll = this;
if(self__.edit){
if((function (){var G__32015 = o;
if(G__32015){
var bit__24955__auto__ = (G__32015.cljs$lang$protocol_mask$partition0$ & (2048));
if((bit__24955__auto__) || (G__32015.cljs$core$IMapEntry$)){
return true;
} else {
if((!G__32015.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IMapEntry,G__32015);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IMapEntry,G__32015);
}
})()){
return tcoll.assoc_BANG_((function (){var G__32016 = o;
return (cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__32016) : cljs.core.key.call(null,G__32016));
})(),(function (){var G__32017 = o;
return (cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(G__32017) : cljs.core.val.call(null,G__32017));
})());
} else {
var es = cljs.core.seq(o);
var tcoll__$1 = tcoll;
while(true){
var temp__4124__auto__ = cljs.core.first(es);
if(cljs.core.truth_(temp__4124__auto__)){
var e = temp__4124__auto__;
var G__32020 = cljs.core.next(es);
var G__32021 = tcoll__$1.assoc_BANG_((function (){var G__32018 = e;
return (cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__32018) : cljs.core.key.call(null,G__32018));
})(),(function (){var G__32019 = e;
return (cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(G__32019) : cljs.core.val.call(null,G__32019));
})());
es = G__32020;
tcoll__$1 = G__32021;
continue;
} else {
return tcoll__$1;
}
break;
}
}
} else {
throw (new Error("conj! after persistent"));
}
});

cljs.core.TransientHashMap.prototype.assoc_BANG_ = (function (k,v){
var self__ = this;
var tcoll = this;
if(self__.edit){
if((k == null)){
if((self__.nil_val === v)){
} else {
self__.nil_val = v;
}

if(self__.has_nil_QMARK_){
} else {
self__.count = (self__.count + (1));

self__.has_nil_QMARK_ = true;
}

return tcoll;
} else {
var added_leaf_QMARK_ = (new cljs.core.Box(false));
var node = (((self__.root == null))?cljs.core.BitmapIndexedNode.EMPTY:self__.root).inode_assoc_BANG_(self__.edit,(0),cljs.core.hash(k),k,v,added_leaf_QMARK_);
if((node === self__.root)){
} else {
self__.root = node;
}

if(added_leaf_QMARK_.val){
self__.count = (self__.count + (1));
} else {
}

return tcoll;
}
} else {
throw (new Error("assoc! after persistent!"));
}
});

cljs.core.TransientHashMap.prototype.without_BANG_ = (function (k){
var self__ = this;
var tcoll = this;
if(self__.edit){
if((k == null)){
if(self__.has_nil_QMARK_){
self__.has_nil_QMARK_ = false;

self__.nil_val = null;

self__.count = (self__.count - (1));

return tcoll;
} else {
return tcoll;
}
} else {
if((self__.root == null)){
return tcoll;
} else {
var removed_leaf_QMARK_ = (new cljs.core.Box(false));
var node = self__.root.inode_without_BANG_(self__.edit,(0),cljs.core.hash(k),k,removed_leaf_QMARK_);
if((node === self__.root)){
} else {
self__.root = node;
}

if(cljs.core.truth_((removed_leaf_QMARK_[(0)]))){
self__.count = (self__.count - (1));
} else {
}

return tcoll;
}
}
} else {
throw (new Error("dissoc! after persistent!"));
}
});

cljs.core.TransientHashMap.prototype.persistent_BANG_ = (function (){
var self__ = this;
var tcoll = this;
if(self__.edit){
self__.edit = null;

return (new cljs.core.PersistentHashMap(null,self__.count,self__.root,self__.has_nil_QMARK_,self__.nil_val,null));
} else {
throw (new Error("persistent! called twice"));
}
});

cljs.core.TransientHashMap.cljs$lang$type = true;

cljs.core.TransientHashMap.cljs$lang$ctorStr = "cljs.core/TransientHashMap";

cljs.core.TransientHashMap.cljs$lang$ctorPrWriter = (function (this__24861__auto__,writer__24862__auto__,opt__24863__auto__){
return cljs.core._write(writer__24862__auto__,"cljs.core/TransientHashMap");
});

cljs.core.__GT_TransientHashMap = (function __GT_TransientHashMap(edit,root,count,has_nil_QMARK_,nil_val){
return (new cljs.core.TransientHashMap(edit,root,count,has_nil_QMARK_,nil_val));
});

cljs.core.tree_map_seq_push = (function tree_map_seq_push(node,stack,ascending_QMARK_){
var t = node;
var stack__$1 = stack;
while(true){
if(!((t == null))){
var G__32022 = ((ascending_QMARK_)?t.left:t.right);
var G__32023 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(stack__$1,t);
t = G__32022;
stack__$1 = G__32023;
continue;
} else {
return stack__$1;
}
break;
}
});

/**
* @constructor
*/
cljs.core.PersistentTreeMapSeq = (function (meta,stack,ascending_QMARK_,cnt,__hash){
this.meta = meta;
this.stack = stack;
this.ascending_QMARK_ = ascending_QMARK_;
this.cnt = cnt;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32374862;
})
cljs.core.PersistentTreeMapSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentTreeMapSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt < (0))){
return (cljs.core.count(cljs.core.next(coll__$1)) + (1));
} else {
return self__.cnt;
}
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__24695__auto__ = self__.__hash;
if(!((h__24695__auto__ == null))){
return h__24695__auto__;
} else {
var h__24695__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__24695__auto____$1;

return h__24695__auto____$1;
}
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return cljs.core.peek(self__.stack);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
var t = cljs.core.first(self__.stack);
var next_stack = cljs.core.tree_map_seq_push(((self__.ascending_QMARK_)?t.right:t.left),cljs.core.next(self__.stack),self__.ascending_QMARK_);
if(!((next_stack == null))){
return (new cljs.core.PersistentTreeMapSeq(null,next_stack,self__.ascending_QMARK_,(self__.cnt - (1)),null));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return this$__$1;
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeMapSeq(meta__$1,self__.stack,self__.ascending_QMARK_,self__.cnt,self__.__hash));
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.PersistentTreeMapSeq.cljs$lang$type = true;

cljs.core.PersistentTreeMapSeq.cljs$lang$ctorStr = "cljs.core/PersistentTreeMapSeq";

cljs.core.PersistentTreeMapSeq.cljs$lang$ctorPrWriter = (function (this__24861__auto__,writer__24862__auto__,opt__24863__auto__){
return cljs.core._write(writer__24862__auto__,"cljs.core/PersistentTreeMapSeq");
});

cljs.core.__GT_PersistentTreeMapSeq = (function __GT_PersistentTreeMapSeq(meta,stack,ascending_QMARK_,cnt,__hash){
return (new cljs.core.PersistentTreeMapSeq(meta,stack,ascending_QMARK_,cnt,__hash));
});

(cljs.core.PersistentTreeMapSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__25252__auto__ = this;
return cljs.core.es6_iterator(this__25252__auto__);
}));
cljs.core.create_tree_map_seq = (function create_tree_map_seq(tree,ascending_QMARK_,cnt){
return (new cljs.core.PersistentTreeMapSeq(null,cljs.core.tree_map_seq_push(tree,null,ascending_QMARK_),ascending_QMARK_,cnt,null));
});

cljs.core.balance_left = (function balance_left(key,val,ins,right){
if((ins instanceof cljs.core.RedNode)){
if((ins.left instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(ins.key,ins.val,ins.left.blacken(),(new cljs.core.BlackNode(key,val,ins.right,right,null)),null));
} else {
if((ins.right instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(ins.right.key,ins.right.val,(new cljs.core.BlackNode(ins.key,ins.val,ins.left,ins.right.left,null)),(new cljs.core.BlackNode(key,val,ins.right.right,right,null)),null));
} else {
return (new cljs.core.BlackNode(key,val,ins,right,null));

}
}
} else {
return (new cljs.core.BlackNode(key,val,ins,right,null));
}
});
cljs.core.balance_right = (function balance_right(key,val,left,ins){
if((ins instanceof cljs.core.RedNode)){
if((ins.right instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(ins.key,ins.val,(new cljs.core.BlackNode(key,val,left,ins.left,null)),ins.right.blacken(),null));
} else {
if((ins.left instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(ins.left.key,ins.left.val,(new cljs.core.BlackNode(key,val,left,ins.left.left,null)),(new cljs.core.BlackNode(ins.key,ins.val,ins.left.right,ins.right,null)),null));
} else {
return (new cljs.core.BlackNode(key,val,left,ins,null));

}
}
} else {
return (new cljs.core.BlackNode(key,val,left,ins,null));
}
});
cljs.core.balance_left_del = (function balance_left_del(key,val,del,right){
if((del instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(key,val,del.blacken(),right,null));
} else {
if((right instanceof cljs.core.BlackNode)){
return cljs.core.balance_right(key,val,del,right.redden());
} else {
if(((right instanceof cljs.core.RedNode)) && ((right.left instanceof cljs.core.BlackNode))){
return (new cljs.core.RedNode(right.left.key,right.left.val,(new cljs.core.BlackNode(key,val,del,right.left.left,null)),cljs.core.balance_right(right.key,right.val,right.left.right,right.right.redden()),null));
} else {
throw (new Error("red-black tree invariant violation"));

}
}
}
});
cljs.core.balance_right_del = (function balance_right_del(key,val,left,del){
if((del instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(key,val,left,del.blacken(),null));
} else {
if((left instanceof cljs.core.BlackNode)){
return cljs.core.balance_left(key,val,left.redden(),del);
} else {
if(((left instanceof cljs.core.RedNode)) && ((left.right instanceof cljs.core.BlackNode))){
return (new cljs.core.RedNode(left.right.key,left.right.val,cljs.core.balance_left(left.key,left.val,left.left.redden(),left.right.left),(new cljs.core.BlackNode(key,val,left.right.right,del,null)),null));
} else {
throw (new Error("red-black tree invariant violation"));

}
}
}
});
cljs.core.tree_map_kv_reduce = (function tree_map_kv_reduce(node,f,init){
var init__$1 = ((!((node.left == null)))?tree_map_kv_reduce(node.left,f,init):init);
if(cljs.core.reduced_QMARK_(init__$1)){
var G__32036 = init__$1;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__32036) : cljs.core.deref.call(null,G__32036));
} else {
var init__$2 = (function (){var G__32037 = init__$1;
var G__32038 = node.key;
var G__32039 = node.val;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__32037,G__32038,G__32039) : f.call(null,G__32037,G__32038,G__32039));
})();
if(cljs.core.reduced_QMARK_(init__$2)){
var G__32040 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__32040) : cljs.core.deref.call(null,G__32040));
} else {
var init__$3 = ((!((node.right == null)))?tree_map_kv_reduce(node.right,f,init__$2):init__$2);
if(cljs.core.reduced_QMARK_(init__$3)){
var G__32041 = init__$3;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__32041) : cljs.core.deref.call(null,G__32041));
} else {
return init__$3;
}
}
}
});

/**
* @constructor
*/
cljs.core.BlackNode = (function (key,val,left,right,__hash){
this.key = key;
this.val = val;
this.left = left;
this.right = right;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32402207;
})
cljs.core.BlackNode.prototype.add_right = (function (ins){
var self__ = this;
var node = this;
return ins.balance_right(node);
});

cljs.core.BlackNode.prototype.redden = (function (){
var self__ = this;
var node = this;
return (new cljs.core.RedNode(self__.key,self__.val,self__.left,self__.right,null));
});

cljs.core.BlackNode.prototype.blacken = (function (){
var self__ = this;
var node = this;
return node;
});

cljs.core.BlackNode.prototype.add_left = (function (ins){
var self__ = this;
var node = this;
return ins.balance_left(node);
});

cljs.core.BlackNode.prototype.replace = (function (key__$1,val__$1,left__$1,right__$1){
var self__ = this;
var node = this;
return (new cljs.core.BlackNode(key__$1,val__$1,left__$1,right__$1,null));
});

cljs.core.BlackNode.prototype.balance_left = (function (parent){
var self__ = this;
var node = this;
return (new cljs.core.BlackNode(parent.key,parent.val,node,parent.right,null));
});

cljs.core.BlackNode.prototype.balance_right = (function (parent){
var self__ = this;
var node = this;
return (new cljs.core.BlackNode(parent.key,parent.val,parent.left,node,null));
});

cljs.core.BlackNode.prototype.remove_left = (function (del){
var self__ = this;
var node = this;
return cljs.core.balance_left_del(self__.key,self__.val,del,self__.right);
});

cljs.core.BlackNode.prototype.kv_reduce = (function (f,init){
var self__ = this;
var node = this;
return cljs.core.tree_map_kv_reduce(node,f,init);
});

cljs.core.BlackNode.prototype.remove_right = (function (del){
var self__ = this;
var node = this;
return cljs.core.balance_right_del(self__.key,self__.val,self__.left,del);
});

cljs.core.BlackNode.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (node,k){
var self__ = this;
var node__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(node__$1,k,null);
});

cljs.core.BlackNode.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (node,k,not_found){
var self__ = this;
var node__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(node__$1,k,not_found);
});

cljs.core.BlackNode.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (node,n){
var self__ = this;
var node__$1 = this;
if((n === (0))){
return self__.key;
} else {
if((n === (1))){
return self__.val;
} else {
return null;

}
}
});

cljs.core.BlackNode.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (node,n,not_found){
var self__ = this;
var node__$1 = this;
if((n === (0))){
return self__.key;
} else {
if((n === (1))){
return self__.val;
} else {
return not_found;

}
}
});

cljs.core.BlackNode.prototype.cljs$core$IVector$_assoc_n$arity$3 = (function (node,n,v){
var self__ = this;
var node__$1 = this;
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val], null).cljs$core$IVector$_assoc_n$arity$3(null,n,v);
});

cljs.core.BlackNode.prototype.cljs$core$IMeta$_meta$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return null;
});

cljs.core.BlackNode.prototype.cljs$core$ICounted$_count$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return (2);
});

cljs.core.BlackNode.prototype.cljs$core$IMapEntry$_key$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return self__.key;
});

cljs.core.BlackNode.prototype.cljs$core$IMapEntry$_val$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return self__.val;
});

cljs.core.BlackNode.prototype.cljs$core$IStack$_peek$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return self__.val;
});

cljs.core.BlackNode.prototype.cljs$core$IStack$_pop$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key], null);
});

cljs.core.BlackNode.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__24695__auto__ = self__.__hash;
if(!((h__24695__auto__ == null))){
return h__24695__auto__;
} else {
var h__24695__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__24695__auto____$1;

return h__24695__auto____$1;
}
});

cljs.core.BlackNode.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.BlackNode.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return cljs.core.PersistentVector.EMPTY;
});

cljs.core.BlackNode.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (node,f){
var self__ = this;
var node__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(node__$1,f);
});

cljs.core.BlackNode.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (node,f,start){
var self__ = this;
var node__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3(node__$1,f,start);
});

cljs.core.BlackNode.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (node,k,v){
var self__ = this;
var node__$1 = this;
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val], null),k,v);
});

cljs.core.BlackNode.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return cljs.core._conj(cljs.core._conj(cljs.core.List.EMPTY,self__.val),self__.key);
});

cljs.core.BlackNode.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (node,meta){
var self__ = this;
var node__$1 = this;
return cljs.core.with_meta(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val], null),meta);
});

cljs.core.BlackNode.prototype.cljs$core$ICollection$_conj$arity$2 = (function (node,o){
var self__ = this;
var node__$1 = this;
return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val,o], null);
});

cljs.core.BlackNode.prototype.call = (function() {
var G__32043 = null;
var G__32043__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var node = self____$1;
return node.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__32043__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var node = self____$1;
return node.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__32043 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__32043__2.call(this,self__,k);
case 3:
return G__32043__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__32043.cljs$core$IFn$_invoke$arity$2 = G__32043__2;
G__32043.cljs$core$IFn$_invoke$arity$3 = G__32043__3;
return G__32043;
})()
;

cljs.core.BlackNode.prototype.apply = (function (self__,args32042){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args32042)));
});

cljs.core.BlackNode.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var node = this;
return node.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.BlackNode.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var node = this;
return node.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.BlackNode.cljs$lang$type = true;

cljs.core.BlackNode.cljs$lang$ctorStr = "cljs.core/BlackNode";

cljs.core.BlackNode.cljs$lang$ctorPrWriter = (function (this__24861__auto__,writer__24862__auto__,opt__24863__auto__){
return cljs.core._write(writer__24862__auto__,"cljs.core/BlackNode");
});

cljs.core.__GT_BlackNode = (function __GT_BlackNode(key,val,left,right,__hash){
return (new cljs.core.BlackNode(key,val,left,right,__hash));
});

(cljs.core.BlackNode.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__25252__auto__ = this;
return cljs.core.es6_iterator(this__25252__auto__);
}));

/**
* @constructor
*/
cljs.core.RedNode = (function (key,val,left,right,__hash){
this.key = key;
this.val = val;
this.left = left;
this.right = right;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32402207;
})
cljs.core.RedNode.prototype.add_right = (function (ins){
var self__ = this;
var node = this;
return (new cljs.core.RedNode(self__.key,self__.val,self__.left,ins,null));
});

cljs.core.RedNode.prototype.redden = (function (){
var self__ = this;
var node = this;
throw (new Error("red-black tree invariant violation"));
});

cljs.core.RedNode.prototype.blacken = (function (){
var self__ = this;
var node = this;
return (new cljs.core.BlackNode(self__.key,self__.val,self__.left,self__.right,null));
});

cljs.core.RedNode.prototype.add_left = (function (ins){
var self__ = this;
var node = this;
return (new cljs.core.RedNode(self__.key,self__.val,ins,self__.right,null));
});

cljs.core.RedNode.prototype.replace = (function (key__$1,val__$1,left__$1,right__$1){
var self__ = this;
var node = this;
return (new cljs.core.RedNode(key__$1,val__$1,left__$1,right__$1,null));
});

cljs.core.RedNode.prototype.balance_left = (function (parent){
var self__ = this;
var node = this;
if((self__.left instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(self__.key,self__.val,self__.left.blacken(),(new cljs.core.BlackNode(parent.key,parent.val,self__.right,parent.right,null)),null));
} else {
if((self__.right instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(self__.right.key,self__.right.val,(new cljs.core.BlackNode(self__.key,self__.val,self__.left,self__.right.left,null)),(new cljs.core.BlackNode(parent.key,parent.val,self__.right.right,parent.right,null)),null));
} else {
return (new cljs.core.BlackNode(parent.key,parent.val,node,parent.right,null));

}
}
});

cljs.core.RedNode.prototype.balance_right = (function (parent){
var self__ = this;
var node = this;
if((self__.right instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(self__.key,self__.val,(new cljs.core.BlackNode(parent.key,parent.val,parent.left,self__.left,null)),self__.right.blacken(),null));
} else {
if((self__.left instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(self__.left.key,self__.left.val,(new cljs.core.BlackNode(parent.key,parent.val,parent.left,self__.left.left,null)),(new cljs.core.BlackNode(self__.key,self__.val,self__.left.right,self__.right,null)),null));
} else {
return (new cljs.core.BlackNode(parent.key,parent.val,parent.left,node,null));

}
}
});

cljs.core.RedNode.prototype.remove_left = (function (del){
var self__ = this;
var node = this;
return (new cljs.core.RedNode(self__.key,self__.val,del,self__.right,null));
});

cljs.core.RedNode.prototype.kv_reduce = (function (f,init){
var self__ = this;
var node = this;
return cljs.core.tree_map_kv_reduce(node,f,init);
});

cljs.core.RedNode.prototype.remove_right = (function (del){
var self__ = this;
var node = this;
return (new cljs.core.RedNode(self__.key,self__.val,self__.left,del,null));
});

cljs.core.RedNode.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (node,k){
var self__ = this;
var node__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(node__$1,k,null);
});

cljs.core.RedNode.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (node,k,not_found){
var self__ = this;
var node__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(node__$1,k,not_found);
});

cljs.core.RedNode.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (node,n){
var self__ = this;
var node__$1 = this;
if((n === (0))){
return self__.key;
} else {
if((n === (1))){
return self__.val;
} else {
return null;

}
}
});

cljs.core.RedNode.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (node,n,not_found){
var self__ = this;
var node__$1 = this;
if((n === (0))){
return self__.key;
} else {
if((n === (1))){
return self__.val;
} else {
return not_found;

}
}
});

cljs.core.RedNode.prototype.cljs$core$IVector$_assoc_n$arity$3 = (function (node,n,v){
var self__ = this;
var node__$1 = this;
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val], null).cljs$core$IVector$_assoc_n$arity$3(null,n,v);
});

cljs.core.RedNode.prototype.cljs$core$IMeta$_meta$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return null;
});

cljs.core.RedNode.prototype.cljs$core$ICounted$_count$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return (2);
});

cljs.core.RedNode.prototype.cljs$core$IMapEntry$_key$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return self__.key;
});

cljs.core.RedNode.prototype.cljs$core$IMapEntry$_val$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return self__.val;
});

cljs.core.RedNode.prototype.cljs$core$IStack$_peek$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return self__.val;
});

cljs.core.RedNode.prototype.cljs$core$IStack$_pop$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key], null);
});

cljs.core.RedNode.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__24695__auto__ = self__.__hash;
if(!((h__24695__auto__ == null))){
return h__24695__auto__;
} else {
var h__24695__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__24695__auto____$1;

return h__24695__auto____$1;
}
});

cljs.core.RedNode.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.RedNode.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return cljs.core.PersistentVector.EMPTY;
});

cljs.core.RedNode.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (node,f){
var self__ = this;
var node__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(node__$1,f);
});

cljs.core.RedNode.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (node,f,start){
var self__ = this;
var node__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3(node__$1,f,start);
});

cljs.core.RedNode.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (node,k,v){
var self__ = this;
var node__$1 = this;
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val], null),k,v);
});

cljs.core.RedNode.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return cljs.core._conj(cljs.core._conj(cljs.core.List.EMPTY,self__.val),self__.key);
});

cljs.core.RedNode.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (node,meta){
var self__ = this;
var node__$1 = this;
return cljs.core.with_meta(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val], null),meta);
});

cljs.core.RedNode.prototype.cljs$core$ICollection$_conj$arity$2 = (function (node,o){
var self__ = this;
var node__$1 = this;
return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val,o], null);
});

cljs.core.RedNode.prototype.call = (function() {
var G__32045 = null;
var G__32045__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var node = self____$1;
return node.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__32045__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var node = self____$1;
return node.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__32045 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__32045__2.call(this,self__,k);
case 3:
return G__32045__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__32045.cljs$core$IFn$_invoke$arity$2 = G__32045__2;
G__32045.cljs$core$IFn$_invoke$arity$3 = G__32045__3;
return G__32045;
})()
;

cljs.core.RedNode.prototype.apply = (function (self__,args32044){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args32044)));
});

cljs.core.RedNode.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var node = this;
return node.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.RedNode.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var node = this;
return node.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.RedNode.cljs$lang$type = true;

cljs.core.RedNode.cljs$lang$ctorStr = "cljs.core/RedNode";

cljs.core.RedNode.cljs$lang$ctorPrWriter = (function (this__24861__auto__,writer__24862__auto__,opt__24863__auto__){
return cljs.core._write(writer__24862__auto__,"cljs.core/RedNode");
});

cljs.core.__GT_RedNode = (function __GT_RedNode(key,val,left,right,__hash){
return (new cljs.core.RedNode(key,val,left,right,__hash));
});

(cljs.core.RedNode.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__25252__auto__ = this;
return cljs.core.es6_iterator(this__25252__auto__);
}));
cljs.core.tree_map_add = (function tree_map_add(comp,tree,k,v,found){
if((tree == null)){
return (new cljs.core.RedNode(k,v,null,null,null));
} else {
var c = (function (){var G__32058 = k;
var G__32059 = tree.key;
return (comp.cljs$core$IFn$_invoke$arity$2 ? comp.cljs$core$IFn$_invoke$arity$2(G__32058,G__32059) : comp.call(null,G__32058,G__32059));
})();
if((c === (0))){
(found[(0)] = tree);

return null;
} else {
if((c < (0))){
var ins = tree_map_add(comp,tree.left,k,v,found);
if(!((ins == null))){
return tree.add_left(ins);
} else {
return null;
}
} else {
var ins = tree_map_add(comp,tree.right,k,v,found);
if(!((ins == null))){
return tree.add_right(ins);
} else {
return null;
}

}
}
}
});
cljs.core.tree_map_append = (function tree_map_append(left,right){
if((left == null)){
return right;
} else {
if((right == null)){
return left;
} else {
if((left instanceof cljs.core.RedNode)){
if((right instanceof cljs.core.RedNode)){
var app = tree_map_append(left.right,right.left);
if((app instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(app.key,app.val,(new cljs.core.RedNode(left.key,left.val,left.left,app.left,null)),(new cljs.core.RedNode(right.key,right.val,app.right,right.right,null)),null));
} else {
return (new cljs.core.RedNode(left.key,left.val,left.left,(new cljs.core.RedNode(right.key,right.val,app,right.right,null)),null));
}
} else {
return (new cljs.core.RedNode(left.key,left.val,left.left,tree_map_append(left.right,right),null));
}
} else {
if((right instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(right.key,right.val,tree_map_append(left,right.left),right.right,null));
} else {
var app = tree_map_append(left.right,right.left);
if((app instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(app.key,app.val,(new cljs.core.BlackNode(left.key,left.val,left.left,app.left,null)),(new cljs.core.BlackNode(right.key,right.val,app.right,right.right,null)),null));
} else {
return cljs.core.balance_left_del(left.key,left.val,left.left,(new cljs.core.BlackNode(right.key,right.val,app,right.right,null)));
}

}
}
}
}
});
cljs.core.tree_map_remove = (function tree_map_remove(comp,tree,k,found){
if(!((tree == null))){
var c = (function (){var G__32078 = k;
var G__32079 = tree.key;
return (comp.cljs$core$IFn$_invoke$arity$2 ? comp.cljs$core$IFn$_invoke$arity$2(G__32078,G__32079) : comp.call(null,G__32078,G__32079));
})();
if((c === (0))){
(found[(0)] = tree);

return cljs.core.tree_map_append(tree.left,tree.right);
} else {
if((c < (0))){
var del = tree_map_remove(comp,tree.left,k,found);
if((!((del == null))) || (!(((found[(0)]) == null)))){
if((tree.left instanceof cljs.core.BlackNode)){
return cljs.core.balance_left_del(tree.key,tree.val,del,tree.right);
} else {
return (new cljs.core.RedNode(tree.key,tree.val,del,tree.right,null));
}
} else {
return null;
}
} else {
var del = tree_map_remove(comp,tree.right,k,found);
if((!((del == null))) || (!(((found[(0)]) == null)))){
if((tree.right instanceof cljs.core.BlackNode)){
return cljs.core.balance_right_del(tree.key,tree.val,tree.left,del);
} else {
return (new cljs.core.RedNode(tree.key,tree.val,tree.left,del,null));
}
} else {
return null;
}

}
}
} else {
return null;
}
});
cljs.core.tree_map_replace = (function tree_map_replace(comp,tree,k,v){
var tk = tree.key;
var c = (function (){var G__32090 = k;
var G__32091 = tk;
return (comp.cljs$core$IFn$_invoke$arity$2 ? comp.cljs$core$IFn$_invoke$arity$2(G__32090,G__32091) : comp.call(null,G__32090,G__32091));
})();
if((c === (0))){
return tree.replace(tk,v,tree.left,tree.right);
} else {
if((c < (0))){
return tree.replace(tk,tree.val,tree_map_replace(comp,tree.left,k,v),tree.right);
} else {
return tree.replace(tk,tree.val,tree.left,tree_map_replace(comp,tree.right,k,v));

}
}
});

/**
* @constructor
*/
cljs.core.PersistentTreeMap = (function (comp,tree,cnt,meta,__hash){
this.comp = comp;
this.tree = tree;
this.cnt = cnt;
this.meta = meta;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 418776847;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.PersistentTreeMap.prototype.forEach = (function (f){
var self__ = this;
var coll = this;
var seq__32093 = cljs.core.seq(coll);
var chunk__32094 = null;
var count__32095 = (0);
var i__32096 = (0);
while(true){
if((i__32096 < count__32095)){
var vec__32097 = chunk__32094.cljs$core$IIndexed$_nth$arity$2(null,i__32096);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__32097,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__32097,(1),null);
var G__32098_32110 = v;
var G__32099_32111 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__32098_32110,G__32099_32111) : f.call(null,G__32098_32110,G__32099_32111));

var G__32112 = seq__32093;
var G__32113 = chunk__32094;
var G__32114 = count__32095;
var G__32115 = (i__32096 + (1));
seq__32093 = G__32112;
chunk__32094 = G__32113;
count__32095 = G__32114;
i__32096 = G__32115;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__32093);
if(temp__4126__auto__){
var seq__32093__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__32093__$1)){
var c__25061__auto__ = cljs.core.chunk_first(seq__32093__$1);
var G__32116 = cljs.core.chunk_rest(seq__32093__$1);
var G__32117 = c__25061__auto__;
var G__32118 = cljs.core.count(c__25061__auto__);
var G__32119 = (0);
seq__32093 = G__32116;
chunk__32094 = G__32117;
count__32095 = G__32118;
i__32096 = G__32119;
continue;
} else {
var vec__32100 = cljs.core.first(seq__32093__$1);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__32100,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__32100,(1),null);
var G__32101_32120 = v;
var G__32102_32121 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__32101_32120,G__32102_32121) : f.call(null,G__32101_32120,G__32102_32121));

var G__32122 = cljs.core.next(seq__32093__$1);
var G__32123 = null;
var G__32124 = (0);
var G__32125 = (0);
seq__32093 = G__32122;
chunk__32094 = G__32123;
count__32095 = G__32124;
i__32096 = G__32125;
continue;
}
} else {
return null;
}
}
break;
}
});

cljs.core.PersistentTreeMap.prototype.get = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentTreeMap.prototype.entries = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_entries_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentTreeMap.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentTreeMap.prototype.keys = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator((function (){var G__32103 = coll;
return (cljs.core.keys.cljs$core$IFn$_invoke$arity$1 ? cljs.core.keys.cljs$core$IFn$_invoke$arity$1(G__32103) : cljs.core.keys.call(null,G__32103));
})());
});

cljs.core.PersistentTreeMap.prototype.values = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator((function (){var G__32104 = coll;
return (cljs.core.vals.cljs$core$IFn$_invoke$arity$1 ? cljs.core.vals.cljs$core$IFn$_invoke$arity$1(G__32104) : cljs.core.vals.call(null,G__32104));
})());
});

cljs.core.PersistentTreeMap.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentTreeMap.prototype.entry_at = (function (k){
var self__ = this;
var coll = this;
var t = self__.tree;
while(true){
if(!((t == null))){
var c = (function (){var G__32105 = k;
var G__32106 = t.key;
return (self__.comp.cljs$core$IFn$_invoke$arity$2 ? self__.comp.cljs$core$IFn$_invoke$arity$2(G__32105,G__32106) : self__.comp.call(null,G__32105,G__32106));
})();
if((c === (0))){
return t;
} else {
if((c < (0))){
var G__32126 = t.left;
t = G__32126;
continue;
} else {
var G__32127 = t.right;
t = G__32127;
continue;

}
}
} else {
return null;
}
break;
}
});

cljs.core.PersistentTreeMap.prototype.has = (function (k){
var self__ = this;
var coll = this;
return cljs.core.contains_QMARK_(coll,k);
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
var n = coll__$1.entry_at(k);
if(!((n == null))){
return n.val;
} else {
return not_found;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = (function (coll,f,init){
var self__ = this;
var coll__$1 = this;
if(!((self__.tree == null))){
return cljs.core.tree_map_kv_reduce(self__.tree,f,init);
} else {
return init;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.PersistentTreeMap(self__.comp,self__.tree,self__.cnt,self__.meta,self__.__hash));
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.cnt;
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IReversible$_rseq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
return cljs.core.create_tree_map_seq(self__.tree,false,self__.cnt);
} else {
return null;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__24695__auto__ = self__.__hash;
if(!((h__24695__auto__ == null))){
return h__24695__auto__;
} else {
var h__24695__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
self__.__hash = h__24695__auto____$1;

return h__24695__auto____$1;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_map(coll__$1,other);
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeMap(self__.comp,null,(0),self__.meta,(0)));
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IMap$_dissoc$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
var found = [null];
var t = cljs.core.tree_map_remove(self__.comp,self__.tree,k,found);
if((t == null)){
if((cljs.core.nth.cljs$core$IFn$_invoke$arity$2(found,(0)) == null)){
return coll__$1;
} else {
return (new cljs.core.PersistentTreeMap(self__.comp,null,(0),self__.meta,null));
}
} else {
return (new cljs.core.PersistentTreeMap(self__.comp,t.blacken(),(self__.cnt - (1)),self__.meta,null));
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (coll,k,v){
var self__ = this;
var coll__$1 = this;
var found = [null];
var t = cljs.core.tree_map_add(self__.comp,self__.tree,k,v,found);
if((t == null)){
var found_node = cljs.core.nth.cljs$core$IFn$_invoke$arity$2(found,(0));
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(v,found_node.val)){
return coll__$1;
} else {
return (new cljs.core.PersistentTreeMap(self__.comp,cljs.core.tree_map_replace(self__.comp,self__.tree,k,v),self__.cnt,self__.meta,null));
}
} else {
return (new cljs.core.PersistentTreeMap(self__.comp,t.blacken(),(self__.cnt + (1)),self__.meta,null));
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return !((coll__$1.entry_at(k) == null));
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
return cljs.core.create_tree_map_seq(self__.tree,true,self__.cnt);
} else {
return null;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeMap(self__.comp,self__.tree,self__.cnt,meta__$1,self__.__hash));
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,entry){
var self__ = this;
var coll__$1 = this;
if(cljs.core.vector_QMARK_(entry)){
return cljs.core._assoc(coll__$1,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(1)));
} else {
var ret = coll__$1;
var es = cljs.core.seq(entry);
while(true){
if((es == null)){
return ret;
} else {
var e = cljs.core.first(es);
if(cljs.core.vector_QMARK_(e)){
var G__32128 = cljs.core._assoc(ret,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e,(1)));
var G__32129 = cljs.core.next(es);
ret = G__32128;
es = G__32129;
continue;
} else {
throw (new Error("conj on a map takes map entries or seqables of map entries"));
}
}
break;
}
}
});

cljs.core.PersistentTreeMap.prototype.call = (function() {
var G__32130 = null;
var G__32130__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__32130__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__32130 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__32130__2.call(this,self__,k);
case 3:
return G__32130__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__32130.cljs$core$IFn$_invoke$arity$2 = G__32130__2;
G__32130.cljs$core$IFn$_invoke$arity$3 = G__32130__3;
return G__32130;
})()
;

cljs.core.PersistentTreeMap.prototype.apply = (function (self__,args32092){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args32092)));
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_sorted_seq$arity$2 = (function (coll,ascending_QMARK_){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
return cljs.core.create_tree_map_seq(self__.tree,ascending_QMARK_,self__.cnt);
} else {
return null;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_sorted_seq_from$arity$3 = (function (coll,k,ascending_QMARK_){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
var stack = null;
var t = self__.tree;
while(true){
if(!((t == null))){
var c = (function (){var G__32107 = k;
var G__32108 = t.key;
return (self__.comp.cljs$core$IFn$_invoke$arity$2 ? self__.comp.cljs$core$IFn$_invoke$arity$2(G__32107,G__32108) : self__.comp.call(null,G__32107,G__32108));
})();
if((c === (0))){
return (new cljs.core.PersistentTreeMapSeq(null,cljs.core.conj.cljs$core$IFn$_invoke$arity$2(stack,t),ascending_QMARK_,(-1),null));
} else {
if(cljs.core.truth_(ascending_QMARK_)){
if((c < (0))){
var G__32131 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(stack,t);
var G__32132 = t.left;
stack = G__32131;
t = G__32132;
continue;
} else {
var G__32133 = stack;
var G__32134 = t.right;
stack = G__32133;
t = G__32134;
continue;
}
} else {
if((c > (0))){
var G__32135 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(stack,t);
var G__32136 = t.right;
stack = G__32135;
t = G__32136;
continue;
} else {
var G__32137 = stack;
var G__32138 = t.left;
stack = G__32137;
t = G__32138;
continue;
}

}
}
} else {
if((stack == null)){
return null;
} else {
return (new cljs.core.PersistentTreeMapSeq(null,stack,ascending_QMARK_,(-1),null));
}
}
break;
}
} else {
return null;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_entry_key$arity$2 = (function (coll,entry){
var self__ = this;
var coll__$1 = this;
var G__32109 = entry;
return (cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__32109) : cljs.core.key.call(null,G__32109));
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_comparator$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.comp;
});

cljs.core.PersistentTreeMap.cljs$lang$type = true;

cljs.core.PersistentTreeMap.cljs$lang$ctorStr = "cljs.core/PersistentTreeMap";

cljs.core.PersistentTreeMap.cljs$lang$ctorPrWriter = (function (this__24861__auto__,writer__24862__auto__,opt__24863__auto__){
return cljs.core._write(writer__24862__auto__,"cljs.core/PersistentTreeMap");
});

cljs.core.__GT_PersistentTreeMap = (function __GT_PersistentTreeMap(comp,tree,cnt,meta,__hash){
return (new cljs.core.PersistentTreeMap(comp,tree,cnt,meta,__hash));
});

cljs.core.PersistentTreeMap.EMPTY = (new cljs.core.PersistentTreeMap(cljs.core.compare,null,(0),null,(0)));
(cljs.core.PersistentTreeMap.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__25252__auto__ = this;
return cljs.core.es6_iterator(this__25252__auto__);
}));
/**
* keyval => key val
* Returns a new hash map with supplied mappings.
* @param {...*} var_args
*/
cljs.core.hash_map = (function() { 
var hash_map__delegate = function (keyvals){
var in$ = cljs.core.seq(keyvals);
var out = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
while(true){
if(in$){
var G__32139 = cljs.core.nnext(in$);
var G__32140 = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(out,cljs.core.first(in$),cljs.core.second(in$));
in$ = G__32139;
out = G__32140;
continue;
} else {
return cljs.core.persistent_BANG_(out);
}
break;
}
};
var hash_map = function (var_args){
var keyvals = null;
if (arguments.length > 0) {
var G__32141__i = 0, G__32141__a = new Array(arguments.length -  0);
while (G__32141__i < G__32141__a.length) {G__32141__a[G__32141__i] = arguments[G__32141__i + 0]; ++G__32141__i;}
  keyvals = new cljs.core.IndexedSeq(G__32141__a,0);
} 
return hash_map__delegate.call(this,keyvals);};
hash_map.cljs$lang$maxFixedArity = 0;
hash_map.cljs$lang$applyTo = (function (arglist__32142){
var keyvals = cljs.core.seq(arglist__32142);
return hash_map__delegate(keyvals);
});
hash_map.cljs$core$IFn$_invoke$arity$variadic = hash_map__delegate;
return hash_map;
})()
;
/**
* keyval => key val
* Returns a new array map with supplied mappings.
* @param {...*} var_args
*/
cljs.core.array_map = (function() { 
var array_map__delegate = function (keyvals){
return cljs.core.PersistentArrayMap.fromArray(cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.array,keyvals),true,false);
};
var array_map = function (var_args){
var keyvals = null;
if (arguments.length > 0) {
var G__32143__i = 0, G__32143__a = new Array(arguments.length -  0);
while (G__32143__i < G__32143__a.length) {G__32143__a[G__32143__i] = arguments[G__32143__i + 0]; ++G__32143__i;}
  keyvals = new cljs.core.IndexedSeq(G__32143__a,0);
} 
return array_map__delegate.call(this,keyvals);};
array_map.cljs$lang$maxFixedArity = 0;
array_map.cljs$lang$applyTo = (function (arglist__32144){
var keyvals = cljs.core.seq(arglist__32144);
return array_map__delegate(keyvals);
});
array_map.cljs$core$IFn$_invoke$arity$variadic = array_map__delegate;
return array_map;
})()
;
/**
* keyval => key val
* Returns a new object map with supplied mappings.
* @param {...*} var_args
*/
cljs.core.obj_map = (function() { 
var obj_map__delegate = function (keyvals){
var ks = [];
var obj = (function (){var obj32148 = {};
return obj32148;
})();
var kvs = cljs.core.seq(keyvals);
while(true){
if(kvs){
ks.push(cljs.core.first(kvs));

(obj[cljs.core.first(kvs)] = cljs.core.second(kvs));

var G__32149 = cljs.core.nnext(kvs);
kvs = G__32149;
continue;
} else {
return cljs.core.ObjMap.fromObject(ks,obj);
}
break;
}
};
var obj_map = function (var_args){
var keyvals = null;
if (arguments.length > 0) {
var G__32150__i = 0, G__32150__a = new Array(arguments.length -  0);
while (G__32150__i < G__32150__a.length) {G__32150__a[G__32150__i] = arguments[G__32150__i + 0]; ++G__32150__i;}
  keyvals = new cljs.core.IndexedSeq(G__32150__a,0);
} 
return obj_map__delegate.call(this,keyvals);};
obj_map.cljs$lang$maxFixedArity = 0;
obj_map.cljs$lang$applyTo = (function (arglist__32151){
var keyvals = cljs.core.seq(arglist__32151);
return obj_map__delegate(keyvals);
});
obj_map.cljs$core$IFn$_invoke$arity$variadic = obj_map__delegate;
return obj_map;
})()
;
/**
* keyval => key val
* Returns a new sorted map with supplied mappings.
* @param {...*} var_args
*/
cljs.core.sorted_map = (function() { 
var sorted_map__delegate = function (keyvals){
var in$ = cljs.core.seq(keyvals);
var out = cljs.core.PersistentTreeMap.EMPTY;
while(true){
if(in$){
var G__32152 = cljs.core.nnext(in$);
var G__32153 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(out,cljs.core.first(in$),cljs.core.second(in$));
in$ = G__32152;
out = G__32153;
continue;
} else {
return out;
}
break;
}
};
var sorted_map = function (var_args){
var keyvals = null;
if (arguments.length > 0) {
var G__32154__i = 0, G__32154__a = new Array(arguments.length -  0);
while (G__32154__i < G__32154__a.length) {G__32154__a[G__32154__i] = arguments[G__32154__i + 0]; ++G__32154__i;}
  keyvals = new cljs.core.IndexedSeq(G__32154__a,0);
} 
return sorted_map__delegate.call(this,keyvals);};
sorted_map.cljs$lang$maxFixedArity = 0;
sorted_map.cljs$lang$applyTo = (function (arglist__32155){
var keyvals = cljs.core.seq(arglist__32155);
return sorted_map__delegate(keyvals);
});
sorted_map.cljs$core$IFn$_invoke$arity$variadic = sorted_map__delegate;
return sorted_map;
})()
;
/**
* keyval => key val
* Returns a new sorted map with supplied mappings, using the supplied comparator.
* @param {...*} var_args
*/
cljs.core.sorted_map_by = (function() { 
var sorted_map_by__delegate = function (comparator,keyvals){
var in$ = cljs.core.seq(keyvals);
var out = (new cljs.core.PersistentTreeMap(cljs.core.fn__GT_comparator(comparator),null,(0),null,(0)));
while(true){
if(in$){
var G__32156 = cljs.core.nnext(in$);
var G__32157 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(out,cljs.core.first(in$),cljs.core.second(in$));
in$ = G__32156;
out = G__32157;
continue;
} else {
return out;
}
break;
}
};
var sorted_map_by = function (comparator,var_args){
var keyvals = null;
if (arguments.length > 1) {
var G__32158__i = 0, G__32158__a = new Array(arguments.length -  1);
while (G__32158__i < G__32158__a.length) {G__32158__a[G__32158__i] = arguments[G__32158__i + 1]; ++G__32158__i;}
  keyvals = new cljs.core.IndexedSeq(G__32158__a,0);
} 
return sorted_map_by__delegate.call(this,comparator,keyvals);};
sorted_map_by.cljs$lang$maxFixedArity = 1;
sorted_map_by.cljs$lang$applyTo = (function (arglist__32159){
var comparator = cljs.core.first(arglist__32159);
var keyvals = cljs.core.rest(arglist__32159);
return sorted_map_by__delegate(comparator,keyvals);
});
sorted_map_by.cljs$core$IFn$_invoke$arity$variadic = sorted_map_by__delegate;
return sorted_map_by;
})()
;

/**
* @constructor
*/
cljs.core.KeySeq = (function (mseq,_meta){
this.mseq = mseq;
this._meta = _meta;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32374988;
})
cljs.core.KeySeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.KeySeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.KeySeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__._meta;
});

cljs.core.KeySeq.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var nseq = (((function (){var G__32160 = self__.mseq;
if(G__32160){
var bit__24955__auto__ = (G__32160.cljs$lang$protocol_mask$partition0$ & (128));
if((bit__24955__auto__) || (G__32160.cljs$core$INext$)){
return true;
} else {
if((!G__32160.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__32160);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__32160);
}
})())?self__.mseq.cljs$core$INext$_next$arity$1(null):cljs.core.next(self__.mseq));
if((nseq == null)){
return null;
} else {
return (new cljs.core.KeySeq(nseq,self__._meta));
}
});

cljs.core.KeySeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.hash_ordered_coll(coll__$1);
});

cljs.core.KeySeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.KeySeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__._meta);
});

cljs.core.KeySeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.KeySeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.KeySeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var me = self__.mseq.cljs$core$ISeq$_first$arity$1(null);
return me.cljs$core$IMapEntry$_key$arity$1(null);
});

cljs.core.KeySeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var nseq = (((function (){var G__32161 = self__.mseq;
if(G__32161){
var bit__24955__auto__ = (G__32161.cljs$lang$protocol_mask$partition0$ & (128));
if((bit__24955__auto__) || (G__32161.cljs$core$INext$)){
return true;
} else {
if((!G__32161.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__32161);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__32161);
}
})())?self__.mseq.cljs$core$INext$_next$arity$1(null):cljs.core.next(self__.mseq));
if(!((nseq == null))){
return (new cljs.core.KeySeq(nseq,self__._meta));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.KeySeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.KeySeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,new_meta){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.KeySeq(self__.mseq,new_meta));
});

cljs.core.KeySeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.KeySeq.cljs$lang$type = true;

cljs.core.KeySeq.cljs$lang$ctorStr = "cljs.core/KeySeq";

cljs.core.KeySeq.cljs$lang$ctorPrWriter = (function (this__24861__auto__,writer__24862__auto__,opt__24863__auto__){
return cljs.core._write(writer__24862__auto__,"cljs.core/KeySeq");
});

cljs.core.__GT_KeySeq = (function __GT_KeySeq(mseq,_meta){
return (new cljs.core.KeySeq(mseq,_meta));
});

(cljs.core.KeySeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__25252__auto__ = this;
return cljs.core.es6_iterator(this__25252__auto__);
}));
/**
* Returns a sequence of the map's keys.
*/
cljs.core.keys = (function keys(hash_map){
var temp__4126__auto__ = cljs.core.seq(hash_map);
if(temp__4126__auto__){
var mseq = temp__4126__auto__;
return (new cljs.core.KeySeq(mseq,null));
} else {
return null;
}
});
/**
* Returns the key of the map entry.
*/
cljs.core.key = (function key(map_entry){
return cljs.core._key(map_entry);
});

/**
* @constructor
*/
cljs.core.ValSeq = (function (mseq,_meta){
this.mseq = mseq;
this._meta = _meta;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32374988;
})
cljs.core.ValSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.ValSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.ValSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__._meta;
});

cljs.core.ValSeq.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var nseq = (((function (){var G__32162 = self__.mseq;
if(G__32162){
var bit__24955__auto__ = (G__32162.cljs$lang$protocol_mask$partition0$ & (128));
if((bit__24955__auto__) || (G__32162.cljs$core$INext$)){
return true;
} else {
if((!G__32162.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__32162);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__32162);
}
})())?self__.mseq.cljs$core$INext$_next$arity$1(null):cljs.core.next(self__.mseq));
if((nseq == null)){
return null;
} else {
return (new cljs.core.ValSeq(nseq,self__._meta));
}
});

cljs.core.ValSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.hash_ordered_coll(coll__$1);
});

cljs.core.ValSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.ValSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__._meta);
});

cljs.core.ValSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.ValSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.ValSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var me = self__.mseq.cljs$core$ISeq$_first$arity$1(null);
return me.cljs$core$IMapEntry$_val$arity$1(null);
});

cljs.core.ValSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var nseq = (((function (){var G__32163 = self__.mseq;
if(G__32163){
var bit__24955__auto__ = (G__32163.cljs$lang$protocol_mask$partition0$ & (128));
if((bit__24955__auto__) || (G__32163.cljs$core$INext$)){
return true;
} else {
if((!G__32163.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__32163);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__32163);
}
})())?self__.mseq.cljs$core$INext$_next$arity$1(null):cljs.core.next(self__.mseq));
if(!((nseq == null))){
return (new cljs.core.ValSeq(nseq,self__._meta));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.ValSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.ValSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,new_meta){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.ValSeq(self__.mseq,new_meta));
});

cljs.core.ValSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.ValSeq.cljs$lang$type = true;

cljs.core.ValSeq.cljs$lang$ctorStr = "cljs.core/ValSeq";

cljs.core.ValSeq.cljs$lang$ctorPrWriter = (function (this__24861__auto__,writer__24862__auto__,opt__24863__auto__){
return cljs.core._write(writer__24862__auto__,"cljs.core/ValSeq");
});

cljs.core.__GT_ValSeq = (function __GT_ValSeq(mseq,_meta){
return (new cljs.core.ValSeq(mseq,_meta));
});

(cljs.core.ValSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__25252__auto__ = this;
return cljs.core.es6_iterator(this__25252__auto__);
}));
/**
* Returns a sequence of the map's values.
*/
cljs.core.vals = (function vals(hash_map){
var temp__4126__auto__ = cljs.core.seq(hash_map);
if(temp__4126__auto__){
var mseq = temp__4126__auto__;
return (new cljs.core.ValSeq(mseq,null));
} else {
return null;
}
});
/**
* Returns the value in the map entry.
*/
cljs.core.val = (function val(map_entry){
return cljs.core._val(map_entry);
});
/**
* Returns a map that consists of the rest of the maps conj-ed onto
* the first.  If a key occurs in more than one map, the mapping from
* the latter (left-to-right) will be the mapping in the result.
* @param {...*} var_args
*/
cljs.core.merge = (function() { 
var merge__delegate = function (maps){
if(cljs.core.truth_(cljs.core.some(cljs.core.identity,maps))){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$2((function (p1__32164_SHARP_,p2__32165_SHARP_){
return cljs.core.conj.cljs$core$IFn$_invoke$arity$2((function (){var or__24274__auto__ = p1__32164_SHARP_;
if(cljs.core.truth_(or__24274__auto__)){
return or__24274__auto__;
} else {
return cljs.core.PersistentArrayMap.EMPTY;
}
})(),p2__32165_SHARP_);
}),maps);
} else {
return null;
}
};
var merge = function (var_args){
var maps = null;
if (arguments.length > 0) {
var G__32166__i = 0, G__32166__a = new Array(arguments.length -  0);
while (G__32166__i < G__32166__a.length) {G__32166__a[G__32166__i] = arguments[G__32166__i + 0]; ++G__32166__i;}
  maps = new cljs.core.IndexedSeq(G__32166__a,0);
} 
return merge__delegate.call(this,maps);};
merge.cljs$lang$maxFixedArity = 0;
merge.cljs$lang$applyTo = (function (arglist__32167){
var maps = cljs.core.seq(arglist__32167);
return merge__delegate(maps);
});
merge.cljs$core$IFn$_invoke$arity$variadic = merge__delegate;
return merge;
})()
;
/**
* Returns a map that consists of the rest of the maps conj-ed onto
* the first.  If a key occurs in more than one map, the mapping(s)
* from the latter (left-to-right) will be combined with the mapping in
* the result by calling (f val-in-result val-in-latter).
* @param {...*} var_args
*/
cljs.core.merge_with = (function() { 
var merge_with__delegate = function (f,maps){
if(cljs.core.truth_(cljs.core.some(cljs.core.identity,maps))){
var merge_entry = (function (m,e){
var k = cljs.core.first(e);
var v = cljs.core.second(e);
if(cljs.core.contains_QMARK_(m,k)){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__32170 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__32171 = v;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__32170,G__32171) : f.call(null,G__32170,G__32171));
})());
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,v);
}
});
var merge2 = ((function (merge_entry){
return (function (m1,m2){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(merge_entry,(function (){var or__24274__auto__ = m1;
if(cljs.core.truth_(or__24274__auto__)){
return or__24274__auto__;
} else {
return cljs.core.PersistentArrayMap.EMPTY;
}
})(),cljs.core.seq(m2));
});})(merge_entry))
;
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$2(merge2,maps);
} else {
return null;
}
};
var merge_with = function (f,var_args){
var maps = null;
if (arguments.length > 1) {
var G__32172__i = 0, G__32172__a = new Array(arguments.length -  1);
while (G__32172__i < G__32172__a.length) {G__32172__a[G__32172__i] = arguments[G__32172__i + 1]; ++G__32172__i;}
  maps = new cljs.core.IndexedSeq(G__32172__a,0);
} 
return merge_with__delegate.call(this,f,maps);};
merge_with.cljs$lang$maxFixedArity = 1;
merge_with.cljs$lang$applyTo = (function (arglist__32173){
var f = cljs.core.first(arglist__32173);
var maps = cljs.core.rest(arglist__32173);
return merge_with__delegate(f,maps);
});
merge_with.cljs$core$IFn$_invoke$arity$variadic = merge_with__delegate;
return merge_with;
})()
;
/**
* Returns a map containing only those entries in map whose key is in keys
*/
cljs.core.select_keys = (function select_keys(map,keyseq){
var ret = cljs.core.PersistentArrayMap.EMPTY;
var keys = cljs.core.seq(keyseq);
while(true){
if(keys){
var key = cljs.core.first(keys);
var entry = cljs.core.get.cljs$core$IFn$_invoke$arity$3(map,key,new cljs.core.Keyword("cljs.core","not-found","cljs.core/not-found",-1572889185));
var G__32174 = ((cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2(entry,new cljs.core.Keyword("cljs.core","not-found","cljs.core/not-found",-1572889185)))?cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(ret,key,entry):ret);
var G__32175 = cljs.core.next(keys);
ret = G__32174;
keys = G__32175;
continue;
} else {
return cljs.core.with_meta(ret,cljs.core.meta(map));
}
break;
}
});

/**
* @constructor
*/
cljs.core.PersistentHashSet = (function (meta,hash_map,__hash){
this.meta = meta;
this.hash_map = hash_map;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 15077647;
this.cljs$lang$protocol_mask$partition1$ = 8196;
})
cljs.core.PersistentHashSet.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentHashSet.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentHashSet.prototype.keys = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentHashSet.prototype.entries = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_set_entries_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentHashSet.prototype.values = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentHashSet.prototype.has = (function (k){
var self__ = this;
var coll = this;
return cljs.core.contains_QMARK_(coll,k);
});

cljs.core.PersistentHashSet.prototype.forEach = (function (f){
var self__ = this;
var coll = this;
var seq__32178 = cljs.core.seq(coll);
var chunk__32179 = null;
var count__32180 = (0);
var i__32181 = (0);
while(true){
if((i__32181 < count__32180)){
var vec__32182 = chunk__32179.cljs$core$IIndexed$_nth$arity$2(null,i__32181);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__32182,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__32182,(1),null);
var G__32183_32188 = v;
var G__32184_32189 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__32183_32188,G__32184_32189) : f.call(null,G__32183_32188,G__32184_32189));

var G__32190 = seq__32178;
var G__32191 = chunk__32179;
var G__32192 = count__32180;
var G__32193 = (i__32181 + (1));
seq__32178 = G__32190;
chunk__32179 = G__32191;
count__32180 = G__32192;
i__32181 = G__32193;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__32178);
if(temp__4126__auto__){
var seq__32178__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__32178__$1)){
var c__25061__auto__ = cljs.core.chunk_first(seq__32178__$1);
var G__32194 = cljs.core.chunk_rest(seq__32178__$1);
var G__32195 = c__25061__auto__;
var G__32196 = cljs.core.count(c__25061__auto__);
var G__32197 = (0);
seq__32178 = G__32194;
chunk__32179 = G__32195;
count__32180 = G__32196;
i__32181 = G__32197;
continue;
} else {
var vec__32185 = cljs.core.first(seq__32178__$1);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__32185,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__32185,(1),null);
var G__32186_32198 = v;
var G__32187_32199 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__32186_32198,G__32187_32199) : f.call(null,G__32186_32198,G__32187_32199));

var G__32200 = cljs.core.next(seq__32178__$1);
var G__32201 = null;
var G__32202 = (0);
var G__32203 = (0);
seq__32178 = G__32200;
chunk__32179 = G__32201;
count__32180 = G__32202;
i__32181 = G__32203;
continue;
}
} else {
return null;
}
}
break;
}
});

cljs.core.PersistentHashSet.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,v){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,v,null);
});

cljs.core.PersistentHashSet.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,v,not_found){
var self__ = this;
var coll__$1 = this;
if(cljs.core._contains_key_QMARK_(self__.hash_map,v)){
return v;
} else {
return not_found;
}
});

cljs.core.PersistentHashSet.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentHashSet.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.PersistentHashSet(self__.meta,self__.hash_map,self__.__hash));
});

cljs.core.PersistentHashSet.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._count(self__.hash_map);
});

cljs.core.PersistentHashSet.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__24695__auto__ = self__.__hash;
if(!((h__24695__auto__ == null))){
return h__24695__auto__;
} else {
var h__24695__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
self__.__hash = h__24695__auto____$1;

return h__24695__auto____$1;
}
});

cljs.core.PersistentHashSet.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return (cljs.core.set_QMARK_(other)) && ((cljs.core.count(coll__$1) === cljs.core.count(other))) && (cljs.core.every_QMARK_(((function (coll__$1){
return (function (p1__32176_SHARP_){
return cljs.core.contains_QMARK_(coll__$1,p1__32176_SHARP_);
});})(coll__$1))
,other));
});

cljs.core.PersistentHashSet.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.TransientHashSet(cljs.core._as_transient(self__.hash_map)));
});

cljs.core.PersistentHashSet.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.PersistentHashSet.EMPTY,self__.meta);
});

cljs.core.PersistentHashSet.prototype.cljs$core$ISet$_disjoin$arity$2 = (function (coll,v){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentHashSet(self__.meta,cljs.core._dissoc(self__.hash_map,v),null));
});

cljs.core.PersistentHashSet.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.keys(self__.hash_map);
});

cljs.core.PersistentHashSet.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentHashSet(meta__$1,self__.hash_map,self__.__hash));
});

cljs.core.PersistentHashSet.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentHashSet(self__.meta,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.hash_map,o,null),null));
});

cljs.core.PersistentHashSet.prototype.call = (function() {
var G__32204 = null;
var G__32204__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__32204__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__32204 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__32204__2.call(this,self__,k);
case 3:
return G__32204__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__32204.cljs$core$IFn$_invoke$arity$2 = G__32204__2;
G__32204.cljs$core$IFn$_invoke$arity$3 = G__32204__3;
return G__32204;
})()
;

cljs.core.PersistentHashSet.prototype.apply = (function (self__,args32177){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args32177)));
});

cljs.core.PersistentHashSet.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentHashSet.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.PersistentHashSet.cljs$lang$type = true;

cljs.core.PersistentHashSet.cljs$lang$ctorStr = "cljs.core/PersistentHashSet";

cljs.core.PersistentHashSet.cljs$lang$ctorPrWriter = (function (this__24861__auto__,writer__24862__auto__,opt__24863__auto__){
return cljs.core._write(writer__24862__auto__,"cljs.core/PersistentHashSet");
});

cljs.core.__GT_PersistentHashSet = (function __GT_PersistentHashSet(meta,hash_map,__hash){
return (new cljs.core.PersistentHashSet(meta,hash_map,__hash));
});

cljs.core.PersistentHashSet.EMPTY = (new cljs.core.PersistentHashSet(null,cljs.core.PersistentArrayMap.EMPTY,(0)));
cljs.core.PersistentHashSet.fromArray = (function (items,no_clone){
var len = items.length;
if((len <= cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD)){
var arr = ((no_clone)?items:cljs.core.aclone(items));
var i = (0);
var out = cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY);
while(true){
if((i < len)){
var G__32205 = (i + (1));
var G__32206 = cljs.core._assoc_BANG_(out,(items[i]),null);
i = G__32205;
out = G__32206;
continue;
} else {
return (new cljs.core.PersistentHashSet(null,cljs.core._persistent_BANG_(out),null));
}
break;
}
} else {
var i = (0);
var out = cljs.core.transient$(cljs.core.PersistentHashSet.EMPTY);
while(true){
if((i < len)){
var G__32207 = (i + (1));
var G__32208 = cljs.core._conj_BANG_(out,(items[i]));
i = G__32207;
out = G__32208;
continue;
} else {
return cljs.core._persistent_BANG_(out);
}
break;
}
}
});
(cljs.core.PersistentHashSet.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__25252__auto__ = this;
return cljs.core.es6_iterator(this__25252__auto__);
}));

/**
* @constructor
*/
cljs.core.TransientHashSet = (function (transient_map){
this.transient_map = transient_map;
this.cljs$lang$protocol_mask$partition0$ = 259;
this.cljs$lang$protocol_mask$partition1$ = 136;
})
cljs.core.TransientHashSet.prototype.call = (function() {
var G__32210 = null;
var G__32210__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var tcoll = self____$1;
if((cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map,k,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel)){
return null;
} else {
return k;
}
});
var G__32210__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var tcoll = self____$1;
if((cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map,k,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel)){
return not_found;
} else {
return k;
}
});
G__32210 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__32210__2.call(this,self__,k);
case 3:
return G__32210__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__32210.cljs$core$IFn$_invoke$arity$2 = G__32210__2;
G__32210.cljs$core$IFn$_invoke$arity$3 = G__32210__3;
return G__32210;
})()
;

cljs.core.TransientHashSet.prototype.apply = (function (self__,args32209){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args32209)));
});

cljs.core.TransientHashSet.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var tcoll = this;
if((cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map,k,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel)){
return null;
} else {
return k;
}
});

cljs.core.TransientHashSet.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var tcoll = this;
if((cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map,k,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel)){
return not_found;
} else {
return k;
}
});

cljs.core.TransientHashSet.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (tcoll,v){
var self__ = this;
var tcoll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(tcoll__$1,v,null);
});

cljs.core.TransientHashSet.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (tcoll,v,not_found){
var self__ = this;
var tcoll__$1 = this;
if((cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map,v,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel)){
return not_found;
} else {
return v;
}
});

cljs.core.TransientHashSet.prototype.cljs$core$ICounted$_count$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
return cljs.core.count(self__.transient_map);
});

cljs.core.TransientHashSet.prototype.cljs$core$ITransientSet$_disjoin_BANG_$arity$2 = (function (tcoll,v){
var self__ = this;
var tcoll__$1 = this;
self__.transient_map = cljs.core.dissoc_BANG_.cljs$core$IFn$_invoke$arity$2(self__.transient_map,v);

return tcoll__$1;
});

cljs.core.TransientHashSet.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = (function (tcoll,o){
var self__ = this;
var tcoll__$1 = this;
self__.transient_map = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(self__.transient_map,o,null);

return tcoll__$1;
});

cljs.core.TransientHashSet.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
return (new cljs.core.PersistentHashSet(null,cljs.core.persistent_BANG_(self__.transient_map),null));
});

cljs.core.TransientHashSet.cljs$lang$type = true;

cljs.core.TransientHashSet.cljs$lang$ctorStr = "cljs.core/TransientHashSet";

cljs.core.TransientHashSet.cljs$lang$ctorPrWriter = (function (this__24861__auto__,writer__24862__auto__,opt__24863__auto__){
return cljs.core._write(writer__24862__auto__,"cljs.core/TransientHashSet");
});

cljs.core.__GT_TransientHashSet = (function __GT_TransientHashSet(transient_map){
return (new cljs.core.TransientHashSet(transient_map));
});


/**
* @constructor
*/
cljs.core.PersistentTreeSet = (function (meta,tree_map,__hash){
this.meta = meta;
this.tree_map = tree_map;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 417730831;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.PersistentTreeSet.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentTreeSet.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentTreeSet.prototype.keys = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentTreeSet.prototype.entries = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_set_entries_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentTreeSet.prototype.values = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentTreeSet.prototype.has = (function (k){
var self__ = this;
var coll = this;
return cljs.core.contains_QMARK_(coll,k);
});

cljs.core.PersistentTreeSet.prototype.forEach = (function (f){
var self__ = this;
var coll = this;
var seq__32213 = cljs.core.seq(coll);
var chunk__32214 = null;
var count__32215 = (0);
var i__32216 = (0);
while(true){
if((i__32216 < count__32215)){
var vec__32217 = chunk__32214.cljs$core$IIndexed$_nth$arity$2(null,i__32216);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__32217,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__32217,(1),null);
var G__32218_32223 = v;
var G__32219_32224 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__32218_32223,G__32219_32224) : f.call(null,G__32218_32223,G__32219_32224));

var G__32225 = seq__32213;
var G__32226 = chunk__32214;
var G__32227 = count__32215;
var G__32228 = (i__32216 + (1));
seq__32213 = G__32225;
chunk__32214 = G__32226;
count__32215 = G__32227;
i__32216 = G__32228;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__32213);
if(temp__4126__auto__){
var seq__32213__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__32213__$1)){
var c__25061__auto__ = cljs.core.chunk_first(seq__32213__$1);
var G__32229 = cljs.core.chunk_rest(seq__32213__$1);
var G__32230 = c__25061__auto__;
var G__32231 = cljs.core.count(c__25061__auto__);
var G__32232 = (0);
seq__32213 = G__32229;
chunk__32214 = G__32230;
count__32215 = G__32231;
i__32216 = G__32232;
continue;
} else {
var vec__32220 = cljs.core.first(seq__32213__$1);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__32220,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__32220,(1),null);
var G__32221_32233 = v;
var G__32222_32234 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__32221_32233,G__32222_32234) : f.call(null,G__32221_32233,G__32222_32234));

var G__32235 = cljs.core.next(seq__32213__$1);
var G__32236 = null;
var G__32237 = (0);
var G__32238 = (0);
seq__32213 = G__32235;
chunk__32214 = G__32236;
count__32215 = G__32237;
i__32216 = G__32238;
continue;
}
} else {
return null;
}
}
break;
}
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,v){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,v,null);
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,v,not_found){
var self__ = this;
var coll__$1 = this;
var n = self__.tree_map.entry_at(v);
if(!((n == null))){
return n.key;
} else {
return not_found;
}
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.PersistentTreeSet(self__.meta,self__.tree_map,self__.__hash));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.count(self__.tree_map);
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IReversible$_rseq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((cljs.core.count(self__.tree_map) > (0))){
return cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.key,cljs.core.rseq(self__.tree_map));
} else {
return null;
}
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__24695__auto__ = self__.__hash;
if(!((h__24695__auto__ == null))){
return h__24695__auto__;
} else {
var h__24695__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
self__.__hash = h__24695__auto____$1;

return h__24695__auto____$1;
}
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return (cljs.core.set_QMARK_(other)) && ((cljs.core.count(coll__$1) === cljs.core.count(other))) && (cljs.core.every_QMARK_(((function (coll__$1){
return (function (p1__32211_SHARP_){
return cljs.core.contains_QMARK_(coll__$1,p1__32211_SHARP_);
});})(coll__$1))
,other));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeSet(self__.meta,cljs.core._empty(self__.tree_map),(0)));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ISet$_disjoin$arity$2 = (function (coll,v){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeSet(self__.meta,cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(self__.tree_map,v),null));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.keys(self__.tree_map);
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeSet(meta__$1,self__.tree_map,self__.__hash));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeSet(self__.meta,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.tree_map,o,null),null));
});

cljs.core.PersistentTreeSet.prototype.call = (function() {
var G__32239 = null;
var G__32239__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__32239__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__32239 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__32239__2.call(this,self__,k);
case 3:
return G__32239__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__32239.cljs$core$IFn$_invoke$arity$2 = G__32239__2;
G__32239.cljs$core$IFn$_invoke$arity$3 = G__32239__3;
return G__32239;
})()
;

cljs.core.PersistentTreeSet.prototype.apply = (function (self__,args32212){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args32212)));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_sorted_seq$arity$2 = (function (coll,ascending_QMARK_){
var self__ = this;
var coll__$1 = this;
return cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.key,cljs.core._sorted_seq(self__.tree_map,ascending_QMARK_));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_sorted_seq_from$arity$3 = (function (coll,k,ascending_QMARK_){
var self__ = this;
var coll__$1 = this;
return cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.key,cljs.core._sorted_seq_from(self__.tree_map,k,ascending_QMARK_));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_entry_key$arity$2 = (function (coll,entry){
var self__ = this;
var coll__$1 = this;
return entry;
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_comparator$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._comparator(self__.tree_map);
});

cljs.core.PersistentTreeSet.cljs$lang$type = true;

cljs.core.PersistentTreeSet.cljs$lang$ctorStr = "cljs.core/PersistentTreeSet";

cljs.core.PersistentTreeSet.cljs$lang$ctorPrWriter = (function (this__24861__auto__,writer__24862__auto__,opt__24863__auto__){
return cljs.core._write(writer__24862__auto__,"cljs.core/PersistentTreeSet");
});

cljs.core.__GT_PersistentTreeSet = (function __GT_PersistentTreeSet(meta,tree_map,__hash){
return (new cljs.core.PersistentTreeSet(meta,tree_map,__hash));
});

cljs.core.PersistentTreeSet.EMPTY = (new cljs.core.PersistentTreeSet(null,cljs.core.PersistentTreeMap.EMPTY,(0)));
(cljs.core.PersistentTreeSet.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__25252__auto__ = this;
return cljs.core.es6_iterator(this__25252__auto__);
}));
cljs.core.set_from_indexed_seq = (function set_from_indexed_seq(iseq){
var arr = iseq.arr;
var ret = (function (){var a__25155__auto__ = arr;
var i = (0);
var res = cljs.core._as_transient(cljs.core.PersistentHashSet.EMPTY);
while(true){
if((i < a__25155__auto__.length)){
var G__32240 = (i + (1));
var G__32241 = res.cljs$core$ITransientCollection$_conj_BANG_$arity$2(null,(arr[i]));
i = G__32240;
res = G__32241;
continue;
} else {
return res;
}
break;
}
})();
return ret.cljs$core$ITransientCollection$_persistent_BANG_$arity$1(null);
});
/**
* Returns a set of the distinct elements of coll.
*/
cljs.core.set = (function set(coll){
var in$ = cljs.core.seq(coll);
if((in$ == null)){
return cljs.core.PersistentHashSet.EMPTY;
} else {
if(((in$ instanceof cljs.core.IndexedSeq)) && ((in$.i === (0)))){
return cljs.core.set_from_indexed_seq(in$);
} else {
var in$__$1 = in$;
var out = cljs.core._as_transient(cljs.core.PersistentHashSet.EMPTY);
while(true){
if(!((in$__$1 == null))){
var G__32242 = in$__$1.cljs$core$INext$_next$arity$1(null);
var G__32243 = out.cljs$core$ITransientCollection$_conj_BANG_$arity$2(null,in$__$1.cljs$core$ISeq$_first$arity$1(null));
in$__$1 = G__32242;
out = G__32243;
continue;
} else {
return out.cljs$core$ITransientCollection$_persistent_BANG_$arity$1(null);
}
break;
}

}
}
});
/**
* @param {...*} var_args
*/
cljs.core.hash_set = (function() {
var hash_set = null;
var hash_set__0 = (function (){
return cljs.core.PersistentHashSet.EMPTY;
});
var hash_set__1 = (function() { 
var G__32244__delegate = function (keys){
return cljs.core.set(keys);
};
var G__32244 = function (var_args){
var keys = null;
if (arguments.length > 0) {
var G__32245__i = 0, G__32245__a = new Array(arguments.length -  0);
while (G__32245__i < G__32245__a.length) {G__32245__a[G__32245__i] = arguments[G__32245__i + 0]; ++G__32245__i;}
  keys = new cljs.core.IndexedSeq(G__32245__a,0);
} 
return G__32244__delegate.call(this,keys);};
G__32244.cljs$lang$maxFixedArity = 0;
G__32244.cljs$lang$applyTo = (function (arglist__32246){
var keys = cljs.core.seq(arglist__32246);
return G__32244__delegate(keys);
});
G__32244.cljs$core$IFn$_invoke$arity$variadic = G__32244__delegate;
return G__32244;
})()
;
hash_set = function(var_args){
var keys = var_args;
switch(arguments.length){
case 0:
return hash_set__0.call(this);
default:
var G__32247 = null;
if (arguments.length > 0) {
var G__32248__i = 0, G__32248__a = new Array(arguments.length -  0);
while (G__32248__i < G__32248__a.length) {G__32248__a[G__32248__i] = arguments[G__32248__i + 0]; ++G__32248__i;}
G__32247 = new cljs.core.IndexedSeq(G__32248__a,0);
}
return hash_set__1.cljs$core$IFn$_invoke$arity$variadic(G__32247);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
hash_set.cljs$lang$maxFixedArity = 0;
hash_set.cljs$lang$applyTo = hash_set__1.cljs$lang$applyTo;
hash_set.cljs$core$IFn$_invoke$arity$0 = hash_set__0;
hash_set.cljs$core$IFn$_invoke$arity$variadic = hash_set__1.cljs$core$IFn$_invoke$arity$variadic;
return hash_set;
})()
;
/**
* Returns a new sorted set with supplied keys.
* @param {...*} var_args
*/
cljs.core.sorted_set = (function() { 
var sorted_set__delegate = function (keys){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj,cljs.core.PersistentTreeSet.EMPTY,keys);
};
var sorted_set = function (var_args){
var keys = null;
if (arguments.length > 0) {
var G__32249__i = 0, G__32249__a = new Array(arguments.length -  0);
while (G__32249__i < G__32249__a.length) {G__32249__a[G__32249__i] = arguments[G__32249__i + 0]; ++G__32249__i;}
  keys = new cljs.core.IndexedSeq(G__32249__a,0);
} 
return sorted_set__delegate.call(this,keys);};
sorted_set.cljs$lang$maxFixedArity = 0;
sorted_set.cljs$lang$applyTo = (function (arglist__32250){
var keys = cljs.core.seq(arglist__32250);
return sorted_set__delegate(keys);
});
sorted_set.cljs$core$IFn$_invoke$arity$variadic = sorted_set__delegate;
return sorted_set;
})()
;
/**
* Returns a new sorted set with supplied keys, using the supplied comparator.
* @param {...*} var_args
*/
cljs.core.sorted_set_by = (function() { 
var sorted_set_by__delegate = function (comparator,keys){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj,(new cljs.core.PersistentTreeSet(null,cljs.core.sorted_map_by(comparator),(0))),keys);
};
var sorted_set_by = function (comparator,var_args){
var keys = null;
if (arguments.length > 1) {
var G__32251__i = 0, G__32251__a = new Array(arguments.length -  1);
while (G__32251__i < G__32251__a.length) {G__32251__a[G__32251__i] = arguments[G__32251__i + 1]; ++G__32251__i;}
  keys = new cljs.core.IndexedSeq(G__32251__a,0);
} 
return sorted_set_by__delegate.call(this,comparator,keys);};
sorted_set_by.cljs$lang$maxFixedArity = 1;
sorted_set_by.cljs$lang$applyTo = (function (arglist__32252){
var comparator = cljs.core.first(arglist__32252);
var keys = cljs.core.rest(arglist__32252);
return sorted_set_by__delegate(comparator,keys);
});
sorted_set_by.cljs$core$IFn$_invoke$arity$variadic = sorted_set_by__delegate;
return sorted_set_by;
})()
;
/**
* Given a map of replacement pairs and a vector/collection, returns a
* vector/seq with any elements = a key in smap replaced with the
* corresponding val in smap.  Returns a transducer when no collection
* is provided.
*/
cljs.core.replace = (function() {
var replace = null;
var replace__1 = (function (smap){
return cljs.core.map.cljs$core$IFn$_invoke$arity$1((function (p1__32253_SHARP_){
var temp__4124__auto__ = cljs.core.find(smap,p1__32253_SHARP_);
if(cljs.core.truth_(temp__4124__auto__)){
var e = temp__4124__auto__;
return cljs.core.val(e);
} else {
return p1__32253_SHARP_;
}
}));
});
var replace__2 = (function (smap,coll){
if(cljs.core.vector_QMARK_(coll)){
var n = cljs.core.count(coll);
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (n){
return (function (v,i){
var temp__4124__auto__ = cljs.core.find(smap,cljs.core.nth.cljs$core$IFn$_invoke$arity$2(v,i));
if(cljs.core.truth_(temp__4124__auto__)){
var e = temp__4124__auto__;
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(v,i,cljs.core.second(e));
} else {
return v;
}
});})(n))
,coll,cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,cljs.core.iterate(cljs.core.inc,(0))));
} else {
return cljs.core.map.cljs$core$IFn$_invoke$arity$2((function (p1__32254_SHARP_){
var temp__4124__auto__ = cljs.core.find(smap,p1__32254_SHARP_);
if(cljs.core.truth_(temp__4124__auto__)){
var e = temp__4124__auto__;
return cljs.core.second(e);
} else {
return p1__32254_SHARP_;
}
}),coll);
}
});
replace = function(smap,coll){
switch(arguments.length){
case 1:
return replace__1.call(this,smap);
case 2:
return replace__2.call(this,smap,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
replace.cljs$core$IFn$_invoke$arity$1 = replace__1;
replace.cljs$core$IFn$_invoke$arity$2 = replace__2;
return replace;
})()
;
/**
* Returns a lazy sequence of the elements of coll with duplicates removed
*/
cljs.core.distinct = (function distinct(coll){
var step = (function step(xs,seen){
return (new cljs.core.LazySeq(null,(function (){
return (function (p__32265,seen__$1){
while(true){
var vec__32266 = p__32265;
var f = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__32266,(0),null);
var xs__$1 = vec__32266;
var temp__4126__auto__ = cljs.core.seq(xs__$1);
if(temp__4126__auto__){
var s = temp__4126__auto__;
if(cljs.core.contains_QMARK_(seen__$1,f)){
var G__32267 = cljs.core.rest(s);
var G__32268 = seen__$1;
p__32265 = G__32267;
seen__$1 = G__32268;
continue;
} else {
return cljs.core.cons(f,step(cljs.core.rest(s),cljs.core.conj.cljs$core$IFn$_invoke$arity$2(seen__$1,f)));
}
} else {
return null;
}
break;
}
}).call(null,xs,seen);
}),null,null));
});
return step(coll,cljs.core.PersistentHashSet.EMPTY);
});
cljs.core.butlast = (function butlast(s){
var ret = cljs.core.PersistentVector.EMPTY;
var s__$1 = s;
while(true){
if(cljs.core.next(s__$1)){
var G__32269 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(ret,cljs.core.first(s__$1));
var G__32270 = cljs.core.next(s__$1);
ret = G__32269;
s__$1 = G__32270;
continue;
} else {
return cljs.core.seq(ret);
}
break;
}
});
/**
* Returns the name String of a string, symbol or keyword.
*/
cljs.core.name = (function name(x){
if((function (){var G__32272 = x;
if(G__32272){
var bit__24948__auto__ = (G__32272.cljs$lang$protocol_mask$partition1$ & (4096));
if((bit__24948__auto__) || (G__32272.cljs$core$INamed$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return x.cljs$core$INamed$_name$arity$1(null);
} else {
if(typeof x === 'string'){
return x;
} else {
throw (new Error([cljs.core.str("Doesn't support name: "),cljs.core.str(x)].join('')));
}
}
});
/**
* Returns a map with the keys mapped to the corresponding vals.
*/
cljs.core.zipmap = (function zipmap(keys,vals){
var map = cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY);
var ks = cljs.core.seq(keys);
var vs = cljs.core.seq(vals);
while(true){
if((ks) && (vs)){
var G__32273 = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(map,cljs.core.first(ks),cljs.core.first(vs));
var G__32274 = cljs.core.next(ks);
var G__32275 = cljs.core.next(vs);
map = G__32273;
ks = G__32274;
vs = G__32275;
continue;
} else {
return cljs.core.persistent_BANG_(map);
}
break;
}
});
/**
* Returns the x for which (k x), a number, is greatest.
* @param {...*} var_args
*/
cljs.core.max_key = (function() {
var max_key = null;
var max_key__2 = (function (k,x){
return x;
});
var max_key__3 = (function (k,x,y){
if(((function (){var G__32286 = x;
return (k.cljs$core$IFn$_invoke$arity$1 ? k.cljs$core$IFn$_invoke$arity$1(G__32286) : k.call(null,G__32286));
})() > (function (){var G__32287 = y;
return (k.cljs$core$IFn$_invoke$arity$1 ? k.cljs$core$IFn$_invoke$arity$1(G__32287) : k.call(null,G__32287));
})())){
return x;
} else {
return y;
}
});
var max_key__4 = (function() { 
var G__32288__delegate = function (k,x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (p1__32276_SHARP_,p2__32277_SHARP_){
return max_key.cljs$core$IFn$_invoke$arity$3(k,p1__32276_SHARP_,p2__32277_SHARP_);
}),max_key.cljs$core$IFn$_invoke$arity$3(k,x,y),more);
};
var G__32288 = function (k,x,y,var_args){
var more = null;
if (arguments.length > 3) {
var G__32289__i = 0, G__32289__a = new Array(arguments.length -  3);
while (G__32289__i < G__32289__a.length) {G__32289__a[G__32289__i] = arguments[G__32289__i + 3]; ++G__32289__i;}
  more = new cljs.core.IndexedSeq(G__32289__a,0);
} 
return G__32288__delegate.call(this,k,x,y,more);};
G__32288.cljs$lang$maxFixedArity = 3;
G__32288.cljs$lang$applyTo = (function (arglist__32290){
var k = cljs.core.first(arglist__32290);
arglist__32290 = cljs.core.next(arglist__32290);
var x = cljs.core.first(arglist__32290);
arglist__32290 = cljs.core.next(arglist__32290);
var y = cljs.core.first(arglist__32290);
var more = cljs.core.rest(arglist__32290);
return G__32288__delegate(k,x,y,more);
});
G__32288.cljs$core$IFn$_invoke$arity$variadic = G__32288__delegate;
return G__32288;
})()
;
max_key = function(k,x,y,var_args){
var more = var_args;
switch(arguments.length){
case 2:
return max_key__2.call(this,k,x);
case 3:
return max_key__3.call(this,k,x,y);
default:
var G__32291 = null;
if (arguments.length > 3) {
var G__32292__i = 0, G__32292__a = new Array(arguments.length -  3);
while (G__32292__i < G__32292__a.length) {G__32292__a[G__32292__i] = arguments[G__32292__i + 3]; ++G__32292__i;}
G__32291 = new cljs.core.IndexedSeq(G__32292__a,0);
}
return max_key__4.cljs$core$IFn$_invoke$arity$variadic(k,x,y, G__32291);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
max_key.cljs$lang$maxFixedArity = 3;
max_key.cljs$lang$applyTo = max_key__4.cljs$lang$applyTo;
max_key.cljs$core$IFn$_invoke$arity$2 = max_key__2;
max_key.cljs$core$IFn$_invoke$arity$3 = max_key__3;
max_key.cljs$core$IFn$_invoke$arity$variadic = max_key__4.cljs$core$IFn$_invoke$arity$variadic;
return max_key;
})()
;
/**
* Returns the x for which (k x), a number, is least.
* @param {...*} var_args
*/
cljs.core.min_key = (function() {
var min_key = null;
var min_key__2 = (function (k,x){
return x;
});
var min_key__3 = (function (k,x,y){
if(((function (){var G__32303 = x;
return (k.cljs$core$IFn$_invoke$arity$1 ? k.cljs$core$IFn$_invoke$arity$1(G__32303) : k.call(null,G__32303));
})() < (function (){var G__32304 = y;
return (k.cljs$core$IFn$_invoke$arity$1 ? k.cljs$core$IFn$_invoke$arity$1(G__32304) : k.call(null,G__32304));
})())){
return x;
} else {
return y;
}
});
var min_key__4 = (function() { 
var G__32305__delegate = function (k,x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (p1__32293_SHARP_,p2__32294_SHARP_){
return min_key.cljs$core$IFn$_invoke$arity$3(k,p1__32293_SHARP_,p2__32294_SHARP_);
}),min_key.cljs$core$IFn$_invoke$arity$3(k,x,y),more);
};
var G__32305 = function (k,x,y,var_args){
var more = null;
if (arguments.length > 3) {
var G__32306__i = 0, G__32306__a = new Array(arguments.length -  3);
while (G__32306__i < G__32306__a.length) {G__32306__a[G__32306__i] = arguments[G__32306__i + 3]; ++G__32306__i;}
  more = new cljs.core.IndexedSeq(G__32306__a,0);
} 
return G__32305__delegate.call(this,k,x,y,more);};
G__32305.cljs$lang$maxFixedArity = 3;
G__32305.cljs$lang$applyTo = (function (arglist__32307){
var k = cljs.core.first(arglist__32307);
arglist__32307 = cljs.core.next(arglist__32307);
var x = cljs.core.first(arglist__32307);
arglist__32307 = cljs.core.next(arglist__32307);
var y = cljs.core.first(arglist__32307);
var more = cljs.core.rest(arglist__32307);
return G__32305__delegate(k,x,y,more);
});
G__32305.cljs$core$IFn$_invoke$arity$variadic = G__32305__delegate;
return G__32305;
})()
;
min_key = function(k,x,y,var_args){
var more = var_args;
switch(arguments.length){
case 2:
return min_key__2.call(this,k,x);
case 3:
return min_key__3.call(this,k,x,y);
default:
var G__32308 = null;
if (arguments.length > 3) {
var G__32309__i = 0, G__32309__a = new Array(arguments.length -  3);
while (G__32309__i < G__32309__a.length) {G__32309__a[G__32309__i] = arguments[G__32309__i + 3]; ++G__32309__i;}
G__32308 = new cljs.core.IndexedSeq(G__32309__a,0);
}
return min_key__4.cljs$core$IFn$_invoke$arity$variadic(k,x,y, G__32308);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
min_key.cljs$lang$maxFixedArity = 3;
min_key.cljs$lang$applyTo = min_key__4.cljs$lang$applyTo;
min_key.cljs$core$IFn$_invoke$arity$2 = min_key__2;
min_key.cljs$core$IFn$_invoke$arity$3 = min_key__3;
min_key.cljs$core$IFn$_invoke$arity$variadic = min_key__4.cljs$core$IFn$_invoke$arity$variadic;
return min_key;
})()
;

/**
* @constructor
*/
cljs.core.ArrayList = (function (arr){
this.arr = arr;
})
cljs.core.ArrayList.prototype.add = (function (x){
var self__ = this;
var _ = this;
return self__.arr.push(x);
});

cljs.core.ArrayList.prototype.size = (function (){
var self__ = this;
var _ = this;
return self__.arr.length;
});

cljs.core.ArrayList.prototype.clear = (function (){
var self__ = this;
var _ = this;
return self__.arr = [];
});

cljs.core.ArrayList.prototype.isEmpty = (function (){
var self__ = this;
var _ = this;
return (self__.arr.length === (0));
});

cljs.core.ArrayList.prototype.toArray = (function (){
var self__ = this;
var _ = this;
return self__.arr;
});

cljs.core.ArrayList.cljs$lang$type = true;

cljs.core.ArrayList.cljs$lang$ctorStr = "cljs.core/ArrayList";

cljs.core.ArrayList.cljs$lang$ctorPrWriter = (function (this__24861__auto__,writer__24862__auto__,opt__24863__auto__){
return cljs.core._write(writer__24862__auto__,"cljs.core/ArrayList");
});

cljs.core.__GT_ArrayList = (function __GT_ArrayList(arr){
return (new cljs.core.ArrayList(arr));
});

cljs.core.array_list = (function array_list(){
return (new cljs.core.ArrayList([]));
});
/**
* Returns a lazy sequence of lists like partition, but may include
* partitions with fewer than n items at the end.  Returns a stateful
* transducer when no collection is provided.
*/
cljs.core.partition_all = (function() {
var partition_all = null;
var partition_all__1 = (function (n){
return (function (rf){
var a = cljs.core.array_list();
return ((function (a){
return (function() {
var G__32326 = null;
var G__32326__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__32326__1 = (function (result){
var result__$1 = (cljs.core.truth_(a.isEmpty())?result:(function (){var v = cljs.core.vec(a.toArray());
a.clear();

return cljs.core.unreduced((function (){var G__32321 = result;
var G__32322 = v;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__32321,G__32322) : rf.call(null,G__32321,G__32322));
})());
})());
var G__32323 = result__$1;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__32323) : rf.call(null,G__32323));
});
var G__32326__2 = (function (result,input){
a.add(input);

if((n === a.size())){
var v = cljs.core.vec(a.toArray());
a.clear();

var G__32324 = result;
var G__32325 = v;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__32324,G__32325) : rf.call(null,G__32324,G__32325));
} else {
return result;
}
});
G__32326 = function(result,input){
switch(arguments.length){
case 0:
return G__32326__0.call(this);
case 1:
return G__32326__1.call(this,result);
case 2:
return G__32326__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__32326.cljs$core$IFn$_invoke$arity$0 = G__32326__0;
G__32326.cljs$core$IFn$_invoke$arity$1 = G__32326__1;
G__32326.cljs$core$IFn$_invoke$arity$2 = G__32326__2;
return G__32326;
})()
;})(a))
});
});
var partition_all__2 = (function (n,coll){
return partition_all.cljs$core$IFn$_invoke$arity$3(n,n,coll);
});
var partition_all__3 = (function (n,step,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
return cljs.core.cons(cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,s),partition_all.cljs$core$IFn$_invoke$arity$3(n,step,cljs.core.drop.cljs$core$IFn$_invoke$arity$2(step,s)));
} else {
return null;
}
}),null,null));
});
partition_all = function(n,step,coll){
switch(arguments.length){
case 1:
return partition_all__1.call(this,n);
case 2:
return partition_all__2.call(this,n,step);
case 3:
return partition_all__3.call(this,n,step,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
partition_all.cljs$core$IFn$_invoke$arity$1 = partition_all__1;
partition_all.cljs$core$IFn$_invoke$arity$2 = partition_all__2;
partition_all.cljs$core$IFn$_invoke$arity$3 = partition_all__3;
return partition_all;
})()
;
/**
* Returns a lazy sequence of successive items from coll while
* (pred item) returns true. pred must be free of side-effects.
* Returns a transducer when no collection is provided.
*/
cljs.core.take_while = (function() {
var take_while = null;
var take_while__1 = (function (pred){
return (function (rf){
return (function() {
var G__32339 = null;
var G__32339__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__32339__1 = (function (result){
var G__32334 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__32334) : rf.call(null,G__32334));
});
var G__32339__2 = (function (result,input){
if(cljs.core.truth_((function (){var G__32335 = input;
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__32335) : pred.call(null,G__32335));
})())){
var G__32336 = result;
var G__32337 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__32336,G__32337) : rf.call(null,G__32336,G__32337));
} else {
return cljs.core.reduced(result);
}
});
G__32339 = function(result,input){
switch(arguments.length){
case 0:
return G__32339__0.call(this);
case 1:
return G__32339__1.call(this,result);
case 2:
return G__32339__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__32339.cljs$core$IFn$_invoke$arity$0 = G__32339__0;
G__32339.cljs$core$IFn$_invoke$arity$1 = G__32339__1;
G__32339.cljs$core$IFn$_invoke$arity$2 = G__32339__2;
return G__32339;
})()
});
});
var take_while__2 = (function (pred,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
if(cljs.core.truth_((function (){var G__32338 = cljs.core.first(s);
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__32338) : pred.call(null,G__32338));
})())){
return cljs.core.cons(cljs.core.first(s),take_while.cljs$core$IFn$_invoke$arity$2(pred,cljs.core.rest(s)));
} else {
return null;
}
} else {
return null;
}
}),null,null));
});
take_while = function(pred,coll){
switch(arguments.length){
case 1:
return take_while__1.call(this,pred);
case 2:
return take_while__2.call(this,pred,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
take_while.cljs$core$IFn$_invoke$arity$1 = take_while__1;
take_while.cljs$core$IFn$_invoke$arity$2 = take_while__2;
return take_while;
})()
;
cljs.core.mk_bound_fn = (function mk_bound_fn(sc,test,key){
return (function (e){
var comp = cljs.core._comparator(sc);
var G__32344 = (function (){var G__32346 = cljs.core._entry_key(sc,e);
var G__32347 = key;
return (comp.cljs$core$IFn$_invoke$arity$2 ? comp.cljs$core$IFn$_invoke$arity$2(G__32346,G__32347) : comp.call(null,G__32346,G__32347));
})();
var G__32345 = (0);
return (test.cljs$core$IFn$_invoke$arity$2 ? test.cljs$core$IFn$_invoke$arity$2(G__32344,G__32345) : test.call(null,G__32344,G__32345));
});
});
/**
* sc must be a sorted collection, test(s) one of <, <=, > or
* >=. Returns a seq of those entries with keys ek for
* which (test (.. sc comparator (compare ek key)) 0) is true
*/
cljs.core.subseq = (function() {
var subseq = null;
var subseq__3 = (function (sc,test,key){
var include = cljs.core.mk_bound_fn(sc,test,key);
if(cljs.core.truth_(cljs.core.PersistentHashSet.fromArray([cljs.core._GT_,cljs.core._GT__EQ_], true).call(null,test))){
var temp__4126__auto__ = cljs.core._sorted_seq_from(sc,key,true);
if(cljs.core.truth_(temp__4126__auto__)){
var vec__32351 = temp__4126__auto__;
var e = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__32351,(0),null);
var s = vec__32351;
if(cljs.core.truth_((function (){var G__32352 = e;
return (include.cljs$core$IFn$_invoke$arity$1 ? include.cljs$core$IFn$_invoke$arity$1(G__32352) : include.call(null,G__32352));
})())){
return s;
} else {
return cljs.core.next(s);
}
} else {
return null;
}
} else {
return cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(include,cljs.core._sorted_seq(sc,true));
}
});
var subseq__5 = (function (sc,start_test,start_key,end_test,end_key){
var temp__4126__auto__ = cljs.core._sorted_seq_from(sc,start_key,true);
if(cljs.core.truth_(temp__4126__auto__)){
var vec__32353 = temp__4126__auto__;
var e = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__32353,(0),null);
var s = vec__32353;
return cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(cljs.core.mk_bound_fn(sc,end_test,end_key),(cljs.core.truth_(cljs.core.mk_bound_fn(sc,start_test,start_key).call(null,e))?s:cljs.core.next(s)));
} else {
return null;
}
});
subseq = function(sc,start_test,start_key,end_test,end_key){
switch(arguments.length){
case 3:
return subseq__3.call(this,sc,start_test,start_key);
case 5:
return subseq__5.call(this,sc,start_test,start_key,end_test,end_key);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
subseq.cljs$core$IFn$_invoke$arity$3 = subseq__3;
subseq.cljs$core$IFn$_invoke$arity$5 = subseq__5;
return subseq;
})()
;
/**
* sc must be a sorted collection, test(s) one of <, <=, > or
* >=. Returns a reverse seq of those entries with keys ek for
* which (test (.. sc comparator (compare ek key)) 0) is true
*/
cljs.core.rsubseq = (function() {
var rsubseq = null;
var rsubseq__3 = (function (sc,test,key){
var include = cljs.core.mk_bound_fn(sc,test,key);
if(cljs.core.truth_(cljs.core.PersistentHashSet.fromArray([cljs.core._LT_,cljs.core._LT__EQ_], true).call(null,test))){
var temp__4126__auto__ = cljs.core._sorted_seq_from(sc,key,false);
if(cljs.core.truth_(temp__4126__auto__)){
var vec__32357 = temp__4126__auto__;
var e = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__32357,(0),null);
var s = vec__32357;
if(cljs.core.truth_((function (){var G__32358 = e;
return (include.cljs$core$IFn$_invoke$arity$1 ? include.cljs$core$IFn$_invoke$arity$1(G__32358) : include.call(null,G__32358));
})())){
return s;
} else {
return cljs.core.next(s);
}
} else {
return null;
}
} else {
return cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(include,cljs.core._sorted_seq(sc,false));
}
});
var rsubseq__5 = (function (sc,start_test,start_key,end_test,end_key){
var temp__4126__auto__ = cljs.core._sorted_seq_from(sc,end_key,false);
if(cljs.core.truth_(temp__4126__auto__)){
var vec__32359 = temp__4126__auto__;
var e = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__32359,(0),null);
var s = vec__32359;
return cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(cljs.core.mk_bound_fn(sc,start_test,start_key),(cljs.core.truth_(cljs.core.mk_bound_fn(sc,end_test,end_key).call(null,e))?s:cljs.core.next(s)));
} else {
return null;
}
});
rsubseq = function(sc,start_test,start_key,end_test,end_key){
switch(arguments.length){
case 3:
return rsubseq__3.call(this,sc,start_test,start_key);
case 5:
return rsubseq__5.call(this,sc,start_test,start_key,end_test,end_key);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
rsubseq.cljs$core$IFn$_invoke$arity$3 = rsubseq__3;
rsubseq.cljs$core$IFn$_invoke$arity$5 = rsubseq__5;
return rsubseq;
})()
;

/**
* @constructor
*/
cljs.core.RangeIterator = (function (i,end,step){
this.i = i;
this.end = end;
this.step = step;
})
cljs.core.RangeIterator.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
if((self__.step > (0))){
return (self__.i < self__.end);
} else {
return (self__.i > self__.end);
}
});

cljs.core.RangeIterator.prototype.next = (function (){
var self__ = this;
var _ = this;
var ret = self__.i;
self__.i = (self__.i + self__.step);

return ret;
});

cljs.core.RangeIterator.cljs$lang$type = true;

cljs.core.RangeIterator.cljs$lang$ctorStr = "cljs.core/RangeIterator";

cljs.core.RangeIterator.cljs$lang$ctorPrWriter = (function (this__24861__auto__,writer__24862__auto__,opt__24863__auto__){
return cljs.core._write(writer__24862__auto__,"cljs.core/RangeIterator");
});

cljs.core.__GT_RangeIterator = (function __GT_RangeIterator(i,end,step){
return (new cljs.core.RangeIterator(i,end,step));
});


/**
* @constructor
*/
cljs.core.Range = (function (meta,start,end,step,__hash){
this.meta = meta;
this.start = start;
this.end = end;
this.step = step;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 32375006;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.Range.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.Range.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.Range.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (rng,n){
var self__ = this;
var rng__$1 = this;
if((n < cljs.core._count(rng__$1))){
return (self__.start + (n * self__.step));
} else {
if(((self__.start > self__.end)) && ((self__.step === (0)))){
return self__.start;
} else {
throw (new Error("Index out of bounds"));
}
}
});

cljs.core.Range.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (rng,n,not_found){
var self__ = this;
var rng__$1 = this;
if((n < cljs.core._count(rng__$1))){
return (self__.start + (n * self__.step));
} else {
if(((self__.start > self__.end)) && ((self__.step === (0)))){
return self__.start;
} else {
return not_found;
}
}
});

cljs.core.Range.prototype.cljs$core$IIterable$ = true;

cljs.core.Range.prototype.cljs$core$IIterable$_iterator$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.RangeIterator(self__.start,self__.end,self__.step));
});

cljs.core.Range.prototype.cljs$core$IMeta$_meta$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
return self__.meta;
});

cljs.core.Range.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.Range(self__.meta,self__.start,self__.end,self__.step,self__.__hash));
});

cljs.core.Range.prototype.cljs$core$INext$_next$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
if((self__.step > (0))){
if(((self__.start + self__.step) < self__.end)){
return (new cljs.core.Range(self__.meta,(self__.start + self__.step),self__.end,self__.step,null));
} else {
return null;
}
} else {
if(((self__.start + self__.step) > self__.end)){
return (new cljs.core.Range(self__.meta,(self__.start + self__.step),self__.end,self__.step,null));
} else {
return null;
}
}
});

cljs.core.Range.prototype.cljs$core$ICounted$_count$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
if(cljs.core.not(cljs.core._seq(rng__$1))){
return (0);
} else {
var G__32360 = ((self__.end - self__.start) / self__.step);
return (Math.ceil.cljs$core$IFn$_invoke$arity$1 ? Math.ceil.cljs$core$IFn$_invoke$arity$1(G__32360) : Math.ceil.call(null,G__32360));
}
});

cljs.core.Range.prototype.cljs$core$IHash$_hash$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
var h__24695__auto__ = self__.__hash;
if(!((h__24695__auto__ == null))){
return h__24695__auto__;
} else {
var h__24695__auto____$1 = cljs.core.hash_ordered_coll(rng__$1);
self__.__hash = h__24695__auto____$1;

return h__24695__auto____$1;
}
});

cljs.core.Range.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (rng,other){
var self__ = this;
var rng__$1 = this;
return cljs.core.equiv_sequential(rng__$1,other);
});

cljs.core.Range.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.Range.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (rng,f){
var self__ = this;
var rng__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(rng__$1,f);
});

cljs.core.Range.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (rng,f,init){
var self__ = this;
var rng__$1 = this;
var i = self__.start;
var ret = init;
while(true){
if((((self__.step > (0)))?(i < self__.end):(i > self__.end))){
var ret__$1 = (function (){var G__32361 = ret;
var G__32362 = i;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__32361,G__32362) : f.call(null,G__32361,G__32362));
})();
if(cljs.core.reduced_QMARK_(ret__$1)){
var G__32363 = ret__$1;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__32363) : cljs.core.deref.call(null,G__32363));
} else {
var G__32364 = (i + self__.step);
var G__32365 = ret__$1;
i = G__32364;
ret = G__32365;
continue;
}
} else {
return ret;
}
break;
}
});

cljs.core.Range.prototype.cljs$core$ISeq$_first$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
if((cljs.core._seq(rng__$1) == null)){
return null;
} else {
return self__.start;
}
});

cljs.core.Range.prototype.cljs$core$ISeq$_rest$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
if(!((cljs.core._seq(rng__$1) == null))){
return (new cljs.core.Range(self__.meta,(self__.start + self__.step),self__.end,self__.step,null));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.Range.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
if((self__.step > (0))){
if((self__.start < self__.end)){
return rng__$1;
} else {
return null;
}
} else {
if((self__.start > self__.end)){
return rng__$1;
} else {
return null;
}
}
});

cljs.core.Range.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (rng,meta__$1){
var self__ = this;
var rng__$1 = this;
return (new cljs.core.Range(meta__$1,self__.start,self__.end,self__.step,self__.__hash));
});

cljs.core.Range.prototype.cljs$core$ICollection$_conj$arity$2 = (function (rng,o){
var self__ = this;
var rng__$1 = this;
return cljs.core.cons(o,rng__$1);
});

cljs.core.Range.cljs$lang$type = true;

cljs.core.Range.cljs$lang$ctorStr = "cljs.core/Range";

cljs.core.Range.cljs$lang$ctorPrWriter = (function (this__24861__auto__,writer__24862__auto__,opt__24863__auto__){
return cljs.core._write(writer__24862__auto__,"cljs.core/Range");
});

cljs.core.__GT_Range = (function __GT_Range(meta,start,end,step,__hash){
return (new cljs.core.Range(meta,start,end,step,__hash));
});

(cljs.core.Range.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__25252__auto__ = this;
return cljs.core.es6_iterator(this__25252__auto__);
}));
/**
* Returns a lazy seq of nums from start (inclusive) to end
* (exclusive), by step, where start defaults to 0, step to 1,
* and end to infinity.
*/
cljs.core.range = (function() {
var range = null;
var range__0 = (function (){
return range.cljs$core$IFn$_invoke$arity$3((0),Number.MAX_VALUE,(1));
});
var range__1 = (function (end){
return range.cljs$core$IFn$_invoke$arity$3((0),end,(1));
});
var range__2 = (function (start,end){
return range.cljs$core$IFn$_invoke$arity$3(start,end,(1));
});
var range__3 = (function (start,end,step){
return (new cljs.core.Range(null,start,end,step,null));
});
range = function(start,end,step){
switch(arguments.length){
case 0:
return range__0.call(this);
case 1:
return range__1.call(this,start);
case 2:
return range__2.call(this,start,end);
case 3:
return range__3.call(this,start,end,step);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
range.cljs$core$IFn$_invoke$arity$0 = range__0;
range.cljs$core$IFn$_invoke$arity$1 = range__1;
range.cljs$core$IFn$_invoke$arity$2 = range__2;
range.cljs$core$IFn$_invoke$arity$3 = range__3;
return range;
})()
;
/**
* Returns a lazy seq of every nth item in coll.  Returns a stateful
* transducer when no collection is provided.
*/
cljs.core.take_nth = (function() {
var take_nth = null;
var take_nth__1 = (function (n){
return (function (rf){
var ia = cljs.core.volatile_BANG_((-1));
return ((function (ia){
return (function() {
var G__32383 = null;
var G__32383__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__32383__1 = (function (result){
var G__32380 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__32380) : rf.call(null,G__32380));
});
var G__32383__2 = (function (result,input){
var i = ia.cljs$core$IVolatile$_vreset_BANG_$arity$2(null,(ia.cljs$core$IDeref$_deref$arity$1(null) + (1)));
if((cljs.core.rem(i,n) === (0))){
var G__32381 = result;
var G__32382 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__32381,G__32382) : rf.call(null,G__32381,G__32382));
} else {
return result;
}
});
G__32383 = function(result,input){
switch(arguments.length){
case 0:
return G__32383__0.call(this);
case 1:
return G__32383__1.call(this,result);
case 2:
return G__32383__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__32383.cljs$core$IFn$_invoke$arity$0 = G__32383__0;
G__32383.cljs$core$IFn$_invoke$arity$1 = G__32383__1;
G__32383.cljs$core$IFn$_invoke$arity$2 = G__32383__2;
return G__32383;
})()
;})(ia))
});
});
var take_nth__2 = (function (n,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
return cljs.core.cons(cljs.core.first(s),take_nth.cljs$core$IFn$_invoke$arity$2(n,cljs.core.drop.cljs$core$IFn$_invoke$arity$2(n,s)));
} else {
return null;
}
}),null,null));
});
take_nth = function(n,coll){
switch(arguments.length){
case 1:
return take_nth__1.call(this,n);
case 2:
return take_nth__2.call(this,n,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
take_nth.cljs$core$IFn$_invoke$arity$1 = take_nth__1;
take_nth.cljs$core$IFn$_invoke$arity$2 = take_nth__2;
return take_nth;
})()
;
/**
* Returns a vector of [(take-while pred coll) (drop-while pred coll)]
*/
cljs.core.split_with = (function split_with(pred,coll){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(pred,coll),cljs.core.drop_while.cljs$core$IFn$_invoke$arity$2(pred,coll)], null);
});
/**
* Applies f to each value in coll, splitting it each time f returns a
* new value.  Returns a lazy seq of partitions.  Returns a stateful
* transducer when no collection is provided.
*/
cljs.core.partition_by = (function() {
var partition_by = null;
var partition_by__1 = (function (f){
return (function (rf){
var a = cljs.core.array_list();
var pa = cljs.core.volatile_BANG_(new cljs.core.Keyword("cljs.core","none","cljs.core/none",926646439));
return ((function (a,pa){
return (function() {
var G__32405 = null;
var G__32405__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__32405__1 = (function (result){
var result__$1 = (cljs.core.truth_(a.isEmpty())?result:(function (){var v = cljs.core.vec(a.toArray());
a.clear();

return cljs.core.unreduced((function (){var G__32396 = result;
var G__32397 = v;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__32396,G__32397) : rf.call(null,G__32396,G__32397));
})());
})());
var G__32398 = result__$1;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__32398) : rf.call(null,G__32398));
});
var G__32405__2 = (function (result,input){
var pval = (function (){var G__32399 = pa;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__32399) : cljs.core.deref.call(null,G__32399));
})();
var val = (function (){var G__32400 = input;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__32400) : f.call(null,G__32400));
})();
cljs.core.vreset_BANG_(pa,val);

if((cljs.core.keyword_identical_QMARK_(pval,new cljs.core.Keyword("cljs.core","none","cljs.core/none",926646439))) || (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(val,pval))){
a.add(input);

return result;
} else {
var v = cljs.core.vec(a.toArray());
a.clear();

var ret = (function (){var G__32401 = result;
var G__32402 = v;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__32401,G__32402) : rf.call(null,G__32401,G__32402));
})();
if(cljs.core.reduced_QMARK_(ret)){
} else {
a.add(input);
}

return ret;
}
});
G__32405 = function(result,input){
switch(arguments.length){
case 0:
return G__32405__0.call(this);
case 1:
return G__32405__1.call(this,result);
case 2:
return G__32405__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__32405.cljs$core$IFn$_invoke$arity$0 = G__32405__0;
G__32405.cljs$core$IFn$_invoke$arity$1 = G__32405__1;
G__32405.cljs$core$IFn$_invoke$arity$2 = G__32405__2;
return G__32405;
})()
;})(a,pa))
});
});
var partition_by__2 = (function (f,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
var fst = cljs.core.first(s);
var fv = (function (){var G__32403 = fst;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__32403) : f.call(null,G__32403));
})();
var run = cljs.core.cons(fst,cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(((function (fst,fv,s,temp__4126__auto__){
return (function (p1__32384_SHARP_){
return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(fv,(function (){var G__32404 = p1__32384_SHARP_;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__32404) : f.call(null,G__32404));
})());
});})(fst,fv,s,temp__4126__auto__))
,cljs.core.next(s)));
return cljs.core.cons(run,partition_by.cljs$core$IFn$_invoke$arity$2(f,cljs.core.seq(cljs.core.drop.cljs$core$IFn$_invoke$arity$2(cljs.core.count(run),s))));
} else {
return null;
}
}),null,null));
});
partition_by = function(f,coll){
switch(arguments.length){
case 1:
return partition_by__1.call(this,f);
case 2:
return partition_by__2.call(this,f,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
partition_by.cljs$core$IFn$_invoke$arity$1 = partition_by__1;
partition_by.cljs$core$IFn$_invoke$arity$2 = partition_by__2;
return partition_by;
})()
;
/**
* Returns a map from distinct items in coll to the number of times
* they appear.
*/
cljs.core.frequencies = (function frequencies(coll){
return cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (counts,x){
return cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(counts,x,(cljs.core.get.cljs$core$IFn$_invoke$arity$3(counts,x,(0)) + (1)));
}),cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY),coll));
});
/**
* Returns a lazy seq of the intermediate values of the reduction (as
* per reduce) of coll by f, starting with init.
*/
cljs.core.reductions = (function() {
var reductions = null;
var reductions__2 = (function (f,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4124__auto__ = cljs.core.seq(coll);
if(temp__4124__auto__){
var s = temp__4124__auto__;
return reductions.cljs$core$IFn$_invoke$arity$3(f,cljs.core.first(s),cljs.core.rest(s));
} else {
return cljs.core._conj(cljs.core.List.EMPTY,(function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})());
}
}),null,null));
});
var reductions__3 = (function (f,init,coll){
return cljs.core.cons(init,(new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
return reductions.cljs$core$IFn$_invoke$arity$3(f,(function (){var G__32414 = init;
var G__32415 = cljs.core.first(s);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__32414,G__32415) : f.call(null,G__32414,G__32415));
})(),cljs.core.rest(s));
} else {
return null;
}
}),null,null)));
});
reductions = function(f,init,coll){
switch(arguments.length){
case 2:
return reductions__2.call(this,f,init);
case 3:
return reductions__3.call(this,f,init,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
reductions.cljs$core$IFn$_invoke$arity$2 = reductions__2;
reductions.cljs$core$IFn$_invoke$arity$3 = reductions__3;
return reductions;
})()
;
/**
* Takes a set of functions and returns a fn that is the juxtaposition
* of those fns.  The returned fn takes a variable number of args, and
* returns a vector containing the result of applying each fn to the
* args (left-to-right).
* ((juxt a b c) x) => [(a x) (b x) (c x)]
* @param {...*} var_args
*/
cljs.core.juxt = (function() {
var juxt = null;
var juxt__1 = (function (f){
return (function() {
var G__32510 = null;
var G__32510__0 = (function (){
return (new cljs.core.PersistentVector(null,1,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})()],null));
});
var G__32510__1 = (function (x){
return (new cljs.core.PersistentVector(null,1,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__32468 = x;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__32468) : f.call(null,G__32468));
})()],null));
});
var G__32510__2 = (function (x,y){
return (new cljs.core.PersistentVector(null,1,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__32469 = x;
var G__32470 = y;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__32469,G__32470) : f.call(null,G__32469,G__32470));
})()],null));
});
var G__32510__3 = (function (x,y,z){
return (new cljs.core.PersistentVector(null,1,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__32471 = x;
var G__32472 = y;
var G__32473 = z;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__32471,G__32472,G__32473) : f.call(null,G__32471,G__32472,G__32473));
})()],null));
});
var G__32510__4 = (function() { 
var G__32511__delegate = function (x,y,z,args){
return (new cljs.core.PersistentVector(null,1,(5),cljs.core.PersistentVector.EMPTY_NODE,[cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,x,y,z,args)],null));
};
var G__32511 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__32512__i = 0, G__32512__a = new Array(arguments.length -  3);
while (G__32512__i < G__32512__a.length) {G__32512__a[G__32512__i] = arguments[G__32512__i + 3]; ++G__32512__i;}
  args = new cljs.core.IndexedSeq(G__32512__a,0);
} 
return G__32511__delegate.call(this,x,y,z,args);};
G__32511.cljs$lang$maxFixedArity = 3;
G__32511.cljs$lang$applyTo = (function (arglist__32513){
var x = cljs.core.first(arglist__32513);
arglist__32513 = cljs.core.next(arglist__32513);
var y = cljs.core.first(arglist__32513);
arglist__32513 = cljs.core.next(arglist__32513);
var z = cljs.core.first(arglist__32513);
var args = cljs.core.rest(arglist__32513);
return G__32511__delegate(x,y,z,args);
});
G__32511.cljs$core$IFn$_invoke$arity$variadic = G__32511__delegate;
return G__32511;
})()
;
G__32510 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__32510__0.call(this);
case 1:
return G__32510__1.call(this,x);
case 2:
return G__32510__2.call(this,x,y);
case 3:
return G__32510__3.call(this,x,y,z);
default:
var G__32514 = null;
if (arguments.length > 3) {
var G__32515__i = 0, G__32515__a = new Array(arguments.length -  3);
while (G__32515__i < G__32515__a.length) {G__32515__a[G__32515__i] = arguments[G__32515__i + 3]; ++G__32515__i;}
G__32514 = new cljs.core.IndexedSeq(G__32515__a,0);
}
return G__32510__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__32514);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__32510.cljs$lang$maxFixedArity = 3;
G__32510.cljs$lang$applyTo = G__32510__4.cljs$lang$applyTo;
G__32510.cljs$core$IFn$_invoke$arity$0 = G__32510__0;
G__32510.cljs$core$IFn$_invoke$arity$1 = G__32510__1;
G__32510.cljs$core$IFn$_invoke$arity$2 = G__32510__2;
G__32510.cljs$core$IFn$_invoke$arity$3 = G__32510__3;
G__32510.cljs$core$IFn$_invoke$arity$variadic = G__32510__4.cljs$core$IFn$_invoke$arity$variadic;
return G__32510;
})()
});
var juxt__2 = (function (f,g){
return (function() {
var G__32516 = null;
var G__32516__0 = (function (){
return (new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})(),(function (){return (g.cljs$core$IFn$_invoke$arity$0 ? g.cljs$core$IFn$_invoke$arity$0() : g.call(null));
})()],null));
});
var G__32516__1 = (function (x){
return (new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__32474 = x;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__32474) : f.call(null,G__32474));
})(),(function (){var G__32475 = x;
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__32475) : g.call(null,G__32475));
})()],null));
});
var G__32516__2 = (function (x,y){
return (new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__32476 = x;
var G__32477 = y;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__32476,G__32477) : f.call(null,G__32476,G__32477));
})(),(function (){var G__32478 = x;
var G__32479 = y;
return (g.cljs$core$IFn$_invoke$arity$2 ? g.cljs$core$IFn$_invoke$arity$2(G__32478,G__32479) : g.call(null,G__32478,G__32479));
})()],null));
});
var G__32516__3 = (function (x,y,z){
return (new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__32480 = x;
var G__32481 = y;
var G__32482 = z;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__32480,G__32481,G__32482) : f.call(null,G__32480,G__32481,G__32482));
})(),(function (){var G__32483 = x;
var G__32484 = y;
var G__32485 = z;
return (g.cljs$core$IFn$_invoke$arity$3 ? g.cljs$core$IFn$_invoke$arity$3(G__32483,G__32484,G__32485) : g.call(null,G__32483,G__32484,G__32485));
})()],null));
});
var G__32516__4 = (function() { 
var G__32517__delegate = function (x,y,z,args){
return (new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,x,y,z,args),cljs.core.apply.cljs$core$IFn$_invoke$arity$5(g,x,y,z,args)],null));
};
var G__32517 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__32518__i = 0, G__32518__a = new Array(arguments.length -  3);
while (G__32518__i < G__32518__a.length) {G__32518__a[G__32518__i] = arguments[G__32518__i + 3]; ++G__32518__i;}
  args = new cljs.core.IndexedSeq(G__32518__a,0);
} 
return G__32517__delegate.call(this,x,y,z,args);};
G__32517.cljs$lang$maxFixedArity = 3;
G__32517.cljs$lang$applyTo = (function (arglist__32519){
var x = cljs.core.first(arglist__32519);
arglist__32519 = cljs.core.next(arglist__32519);
var y = cljs.core.first(arglist__32519);
arglist__32519 = cljs.core.next(arglist__32519);
var z = cljs.core.first(arglist__32519);
var args = cljs.core.rest(arglist__32519);
return G__32517__delegate(x,y,z,args);
});
G__32517.cljs$core$IFn$_invoke$arity$variadic = G__32517__delegate;
return G__32517;
})()
;
G__32516 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__32516__0.call(this);
case 1:
return G__32516__1.call(this,x);
case 2:
return G__32516__2.call(this,x,y);
case 3:
return G__32516__3.call(this,x,y,z);
default:
var G__32520 = null;
if (arguments.length > 3) {
var G__32521__i = 0, G__32521__a = new Array(arguments.length -  3);
while (G__32521__i < G__32521__a.length) {G__32521__a[G__32521__i] = arguments[G__32521__i + 3]; ++G__32521__i;}
G__32520 = new cljs.core.IndexedSeq(G__32521__a,0);
}
return G__32516__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__32520);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__32516.cljs$lang$maxFixedArity = 3;
G__32516.cljs$lang$applyTo = G__32516__4.cljs$lang$applyTo;
G__32516.cljs$core$IFn$_invoke$arity$0 = G__32516__0;
G__32516.cljs$core$IFn$_invoke$arity$1 = G__32516__1;
G__32516.cljs$core$IFn$_invoke$arity$2 = G__32516__2;
G__32516.cljs$core$IFn$_invoke$arity$3 = G__32516__3;
G__32516.cljs$core$IFn$_invoke$arity$variadic = G__32516__4.cljs$core$IFn$_invoke$arity$variadic;
return G__32516;
})()
});
var juxt__3 = (function (f,g,h){
return (function() {
var G__32522 = null;
var G__32522__0 = (function (){
return (new cljs.core.PersistentVector(null,3,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})(),(function (){return (g.cljs$core$IFn$_invoke$arity$0 ? g.cljs$core$IFn$_invoke$arity$0() : g.call(null));
})(),(function (){return (h.cljs$core$IFn$_invoke$arity$0 ? h.cljs$core$IFn$_invoke$arity$0() : h.call(null));
})()],null));
});
var G__32522__1 = (function (x){
return (new cljs.core.PersistentVector(null,3,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__32486 = x;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__32486) : f.call(null,G__32486));
})(),(function (){var G__32487 = x;
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__32487) : g.call(null,G__32487));
})(),(function (){var G__32488 = x;
return (h.cljs$core$IFn$_invoke$arity$1 ? h.cljs$core$IFn$_invoke$arity$1(G__32488) : h.call(null,G__32488));
})()],null));
});
var G__32522__2 = (function (x,y){
return (new cljs.core.PersistentVector(null,3,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__32489 = x;
var G__32490 = y;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__32489,G__32490) : f.call(null,G__32489,G__32490));
})(),(function (){var G__32491 = x;
var G__32492 = y;
return (g.cljs$core$IFn$_invoke$arity$2 ? g.cljs$core$IFn$_invoke$arity$2(G__32491,G__32492) : g.call(null,G__32491,G__32492));
})(),(function (){var G__32493 = x;
var G__32494 = y;
return (h.cljs$core$IFn$_invoke$arity$2 ? h.cljs$core$IFn$_invoke$arity$2(G__32493,G__32494) : h.call(null,G__32493,G__32494));
})()],null));
});
var G__32522__3 = (function (x,y,z){
return (new cljs.core.PersistentVector(null,3,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__32495 = x;
var G__32496 = y;
var G__32497 = z;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__32495,G__32496,G__32497) : f.call(null,G__32495,G__32496,G__32497));
})(),(function (){var G__32498 = x;
var G__32499 = y;
var G__32500 = z;
return (g.cljs$core$IFn$_invoke$arity$3 ? g.cljs$core$IFn$_invoke$arity$3(G__32498,G__32499,G__32500) : g.call(null,G__32498,G__32499,G__32500));
})(),(function (){var G__32501 = x;
var G__32502 = y;
var G__32503 = z;
return (h.cljs$core$IFn$_invoke$arity$3 ? h.cljs$core$IFn$_invoke$arity$3(G__32501,G__32502,G__32503) : h.call(null,G__32501,G__32502,G__32503));
})()],null));
});
var G__32522__4 = (function() { 
var G__32523__delegate = function (x,y,z,args){
return (new cljs.core.PersistentVector(null,3,(5),cljs.core.PersistentVector.EMPTY_NODE,[cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,x,y,z,args),cljs.core.apply.cljs$core$IFn$_invoke$arity$5(g,x,y,z,args),cljs.core.apply.cljs$core$IFn$_invoke$arity$5(h,x,y,z,args)],null));
};
var G__32523 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__32524__i = 0, G__32524__a = new Array(arguments.length -  3);
while (G__32524__i < G__32524__a.length) {G__32524__a[G__32524__i] = arguments[G__32524__i + 3]; ++G__32524__i;}
  args = new cljs.core.IndexedSeq(G__32524__a,0);
} 
return G__32523__delegate.call(this,x,y,z,args);};
G__32523.cljs$lang$maxFixedArity = 3;
G__32523.cljs$lang$applyTo = (function (arglist__32525){
var x = cljs.core.first(arglist__32525);
arglist__32525 = cljs.core.next(arglist__32525);
var y = cljs.core.first(arglist__32525);
arglist__32525 = cljs.core.next(arglist__32525);
var z = cljs.core.first(arglist__32525);
var args = cljs.core.rest(arglist__32525);
return G__32523__delegate(x,y,z,args);
});
G__32523.cljs$core$IFn$_invoke$arity$variadic = G__32523__delegate;
return G__32523;
})()
;
G__32522 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__32522__0.call(this);
case 1:
return G__32522__1.call(this,x);
case 2:
return G__32522__2.call(this,x,y);
case 3:
return G__32522__3.call(this,x,y,z);
default:
var G__32526 = null;
if (arguments.length > 3) {
var G__32527__i = 0, G__32527__a = new Array(arguments.length -  3);
while (G__32527__i < G__32527__a.length) {G__32527__a[G__32527__i] = arguments[G__32527__i + 3]; ++G__32527__i;}
G__32526 = new cljs.core.IndexedSeq(G__32527__a,0);
}
return G__32522__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__32526);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__32522.cljs$lang$maxFixedArity = 3;
G__32522.cljs$lang$applyTo = G__32522__4.cljs$lang$applyTo;
G__32522.cljs$core$IFn$_invoke$arity$0 = G__32522__0;
G__32522.cljs$core$IFn$_invoke$arity$1 = G__32522__1;
G__32522.cljs$core$IFn$_invoke$arity$2 = G__32522__2;
G__32522.cljs$core$IFn$_invoke$arity$3 = G__32522__3;
G__32522.cljs$core$IFn$_invoke$arity$variadic = G__32522__4.cljs$core$IFn$_invoke$arity$variadic;
return G__32522;
})()
});
var juxt__4 = (function() { 
var G__32528__delegate = function (f,g,h,fs){
var fs__$1 = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(f,g,h,fs);
return ((function (fs__$1){
return (function() {
var G__32529 = null;
var G__32529__0 = (function (){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (fs__$1){
return (function (p1__32416_SHARP_,p2__32417_SHARP_){
return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__32416_SHARP_,(function (){return (p2__32417_SHARP_.cljs$core$IFn$_invoke$arity$0 ? p2__32417_SHARP_.cljs$core$IFn$_invoke$arity$0() : p2__32417_SHARP_.call(null));
})());
});})(fs__$1))
,cljs.core.PersistentVector.EMPTY,fs__$1);
});
var G__32529__1 = (function (x){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (fs__$1){
return (function (p1__32418_SHARP_,p2__32419_SHARP_){
return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__32418_SHARP_,(function (){var G__32504 = x;
return (p2__32419_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p2__32419_SHARP_.cljs$core$IFn$_invoke$arity$1(G__32504) : p2__32419_SHARP_.call(null,G__32504));
})());
});})(fs__$1))
,cljs.core.PersistentVector.EMPTY,fs__$1);
});
var G__32529__2 = (function (x,y){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (fs__$1){
return (function (p1__32420_SHARP_,p2__32421_SHARP_){
return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__32420_SHARP_,(function (){var G__32505 = x;
var G__32506 = y;
return (p2__32421_SHARP_.cljs$core$IFn$_invoke$arity$2 ? p2__32421_SHARP_.cljs$core$IFn$_invoke$arity$2(G__32505,G__32506) : p2__32421_SHARP_.call(null,G__32505,G__32506));
})());
});})(fs__$1))
,cljs.core.PersistentVector.EMPTY,fs__$1);
});
var G__32529__3 = (function (x,y,z){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (fs__$1){
return (function (p1__32422_SHARP_,p2__32423_SHARP_){
return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__32422_SHARP_,(function (){var G__32507 = x;
var G__32508 = y;
var G__32509 = z;
return (p2__32423_SHARP_.cljs$core$IFn$_invoke$arity$3 ? p2__32423_SHARP_.cljs$core$IFn$_invoke$arity$3(G__32507,G__32508,G__32509) : p2__32423_SHARP_.call(null,G__32507,G__32508,G__32509));
})());
});})(fs__$1))
,cljs.core.PersistentVector.EMPTY,fs__$1);
});
var G__32529__4 = (function() { 
var G__32530__delegate = function (x,y,z,args){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (fs__$1){
return (function (p1__32424_SHARP_,p2__32425_SHARP_){
return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__32424_SHARP_,cljs.core.apply.cljs$core$IFn$_invoke$arity$5(p2__32425_SHARP_,x,y,z,args));
});})(fs__$1))
,cljs.core.PersistentVector.EMPTY,fs__$1);
};
var G__32530 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__32531__i = 0, G__32531__a = new Array(arguments.length -  3);
while (G__32531__i < G__32531__a.length) {G__32531__a[G__32531__i] = arguments[G__32531__i + 3]; ++G__32531__i;}
  args = new cljs.core.IndexedSeq(G__32531__a,0);
} 
return G__32530__delegate.call(this,x,y,z,args);};
G__32530.cljs$lang$maxFixedArity = 3;
G__32530.cljs$lang$applyTo = (function (arglist__32532){
var x = cljs.core.first(arglist__32532);
arglist__32532 = cljs.core.next(arglist__32532);
var y = cljs.core.first(arglist__32532);
arglist__32532 = cljs.core.next(arglist__32532);
var z = cljs.core.first(arglist__32532);
var args = cljs.core.rest(arglist__32532);
return G__32530__delegate(x,y,z,args);
});
G__32530.cljs$core$IFn$_invoke$arity$variadic = G__32530__delegate;
return G__32530;
})()
;
G__32529 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__32529__0.call(this);
case 1:
return G__32529__1.call(this,x);
case 2:
return G__32529__2.call(this,x,y);
case 3:
return G__32529__3.call(this,x,y,z);
default:
var G__32533 = null;
if (arguments.length > 3) {
var G__32534__i = 0, G__32534__a = new Array(arguments.length -  3);
while (G__32534__i < G__32534__a.length) {G__32534__a[G__32534__i] = arguments[G__32534__i + 3]; ++G__32534__i;}
G__32533 = new cljs.core.IndexedSeq(G__32534__a,0);
}
return G__32529__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__32533);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__32529.cljs$lang$maxFixedArity = 3;
G__32529.cljs$lang$applyTo = G__32529__4.cljs$lang$applyTo;
G__32529.cljs$core$IFn$_invoke$arity$0 = G__32529__0;
G__32529.cljs$core$IFn$_invoke$arity$1 = G__32529__1;
G__32529.cljs$core$IFn$_invoke$arity$2 = G__32529__2;
G__32529.cljs$core$IFn$_invoke$arity$3 = G__32529__3;
G__32529.cljs$core$IFn$_invoke$arity$variadic = G__32529__4.cljs$core$IFn$_invoke$arity$variadic;
return G__32529;
})()
;})(fs__$1))
};
var G__32528 = function (f,g,h,var_args){
var fs = null;
if (arguments.length > 3) {
var G__32535__i = 0, G__32535__a = new Array(arguments.length -  3);
while (G__32535__i < G__32535__a.length) {G__32535__a[G__32535__i] = arguments[G__32535__i + 3]; ++G__32535__i;}
  fs = new cljs.core.IndexedSeq(G__32535__a,0);
} 
return G__32528__delegate.call(this,f,g,h,fs);};
G__32528.cljs$lang$maxFixedArity = 3;
G__32528.cljs$lang$applyTo = (function (arglist__32536){
var f = cljs.core.first(arglist__32536);
arglist__32536 = cljs.core.next(arglist__32536);
var g = cljs.core.first(arglist__32536);
arglist__32536 = cljs.core.next(arglist__32536);
var h = cljs.core.first(arglist__32536);
var fs = cljs.core.rest(arglist__32536);
return G__32528__delegate(f,g,h,fs);
});
G__32528.cljs$core$IFn$_invoke$arity$variadic = G__32528__delegate;
return G__32528;
})()
;
juxt = function(f,g,h,var_args){
var fs = var_args;
switch(arguments.length){
case 1:
return juxt__1.call(this,f);
case 2:
return juxt__2.call(this,f,g);
case 3:
return juxt__3.call(this,f,g,h);
default:
var G__32537 = null;
if (arguments.length > 3) {
var G__32538__i = 0, G__32538__a = new Array(arguments.length -  3);
while (G__32538__i < G__32538__a.length) {G__32538__a[G__32538__i] = arguments[G__32538__i + 3]; ++G__32538__i;}
G__32537 = new cljs.core.IndexedSeq(G__32538__a,0);
}
return juxt__4.cljs$core$IFn$_invoke$arity$variadic(f,g,h, G__32537);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
juxt.cljs$lang$maxFixedArity = 3;
juxt.cljs$lang$applyTo = juxt__4.cljs$lang$applyTo;
juxt.cljs$core$IFn$_invoke$arity$1 = juxt__1;
juxt.cljs$core$IFn$_invoke$arity$2 = juxt__2;
juxt.cljs$core$IFn$_invoke$arity$3 = juxt__3;
juxt.cljs$core$IFn$_invoke$arity$variadic = juxt__4.cljs$core$IFn$_invoke$arity$variadic;
return juxt;
})()
;
/**
* When lazy sequences are produced via functions that have side
* effects, any effects other than those needed to produce the first
* element in the seq do not occur until the seq is consumed. dorun can
* be used to force any effects. Walks through the successive nexts of
* the seq, does not retain the head and returns nil.
*/
cljs.core.dorun = (function() {
var dorun = null;
var dorun__1 = (function (coll){
while(true){
if(cljs.core.seq(coll)){
var G__32539 = cljs.core.next(coll);
coll = G__32539;
continue;
} else {
return null;
}
break;
}
});
var dorun__2 = (function (n,coll){
while(true){
if((cljs.core.seq(coll)) && ((n > (0)))){
var G__32540 = (n - (1));
var G__32541 = cljs.core.next(coll);
n = G__32540;
coll = G__32541;
continue;
} else {
return null;
}
break;
}
});
dorun = function(n,coll){
switch(arguments.length){
case 1:
return dorun__1.call(this,n);
case 2:
return dorun__2.call(this,n,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
dorun.cljs$core$IFn$_invoke$arity$1 = dorun__1;
dorun.cljs$core$IFn$_invoke$arity$2 = dorun__2;
return dorun;
})()
;
/**
* When lazy sequences are produced via functions that have side
* effects, any effects other than those needed to produce the first
* element in the seq do not occur until the seq is consumed. doall can
* be used to force any effects. Walks through the successive nexts of
* the seq, retains the head and returns it, thus causing the entire
* seq to reside in memory at one time.
*/
cljs.core.doall = (function() {
var doall = null;
var doall__1 = (function (coll){
cljs.core.dorun.cljs$core$IFn$_invoke$arity$1(coll);

return coll;
});
var doall__2 = (function (n,coll){
cljs.core.dorun.cljs$core$IFn$_invoke$arity$2(n,coll);

return coll;
});
doall = function(n,coll){
switch(arguments.length){
case 1:
return doall__1.call(this,n);
case 2:
return doall__2.call(this,n,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
doall.cljs$core$IFn$_invoke$arity$1 = doall__1;
doall.cljs$core$IFn$_invoke$arity$2 = doall__2;
return doall;
})()
;
cljs.core.regexp_QMARK_ = (function regexp_QMARK_(o){
return (o instanceof RegExp);
});
/**
* Returns the result of (re-find re s) if re fully matches s.
*/
cljs.core.re_matches = (function re_matches(re,s){
if(typeof s === 'string'){
var matches = re.exec(s);
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.first(matches),s)){
if((cljs.core.count(matches) === (1))){
return cljs.core.first(matches);
} else {
return cljs.core.vec(matches);
}
} else {
return null;
}
} else {
throw (new TypeError("re-matches must match against a string."));
}
});
/**
* Returns the first regex match, if any, of s to re, using
* re.exec(s). Returns a vector, containing first the matching
* substring, then any capturing groups if the regular expression contains
* capturing groups.
*/
cljs.core.re_find = (function re_find(re,s){
if(typeof s === 'string'){
var matches = re.exec(s);
if((matches == null)){
return null;
} else {
if((cljs.core.count(matches) === (1))){
return cljs.core.first(matches);
} else {
return cljs.core.vec(matches);
}
}
} else {
throw (new TypeError("re-find must match against a string."));
}
});
/**
* Returns a lazy sequence of successive matches of re in s.
*/
cljs.core.re_seq = (function re_seq(re,s){
var match_data = cljs.core.re_find(re,s);
var match_idx = s.search(re);
var match_str = ((cljs.core.coll_QMARK_(match_data))?cljs.core.first(match_data):match_data);
var post_match = cljs.core.subs.cljs$core$IFn$_invoke$arity$2(s,(match_idx + cljs.core.count(match_str)));
if(cljs.core.truth_(match_data)){
return (new cljs.core.LazySeq(null,((function (match_data,match_idx,match_str,post_match){
return (function (){
return cljs.core.cons(match_data,((cljs.core.seq(post_match))?re_seq(re,post_match):null));
});})(match_data,match_idx,match_str,post_match))
,null,null));
} else {
return null;
}
});
/**
* Returns an instance of RegExp which has compiled the provided string.
*/
cljs.core.re_pattern = (function re_pattern(s){
if((s instanceof RegExp)){
return s;
} else {
var vec__32545 = cljs.core.re_find(/^(?:\(\?([idmsux]*)\))?(.*)/,s);
var _ = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__32545,(0),null);
var flags = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__32545,(1),null);
var pattern = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__32545,(2),null);
return (new RegExp(pattern,flags));
}
});
cljs.core.pr_sequential_writer = (function pr_sequential_writer(writer,print_one,begin,sep,end,opts,coll){
var _STAR_print_level_STAR_32553 = cljs.core._STAR_print_level_STAR_;
try{cljs.core._STAR_print_level_STAR_ = (((cljs.core._STAR_print_level_STAR_ == null))?null:(cljs.core._STAR_print_level_STAR_ - (1)));

if((!((cljs.core._STAR_print_level_STAR_ == null))) && ((cljs.core._STAR_print_level_STAR_ < (0)))){
return cljs.core._write(writer,"#");
} else {
cljs.core._write(writer,begin);

if(cljs.core.seq(coll)){
var G__32554_32560 = cljs.core.first(coll);
var G__32555_32561 = writer;
var G__32556_32562 = opts;
(print_one.cljs$core$IFn$_invoke$arity$3 ? print_one.cljs$core$IFn$_invoke$arity$3(G__32554_32560,G__32555_32561,G__32556_32562) : print_one.call(null,G__32554_32560,G__32555_32561,G__32556_32562));
} else {
}

var coll_32563__$1 = cljs.core.next(coll);
var n_32564 = (new cljs.core.Keyword(null,"print-length","print-length",1931866356).cljs$core$IFn$_invoke$arity$1(opts) - (1));
while(true){
if((coll_32563__$1) && (((n_32564 == null)) || (!((n_32564 === (0)))))){
cljs.core._write(writer,sep);

var G__32557_32565 = cljs.core.first(coll_32563__$1);
var G__32558_32566 = writer;
var G__32559_32567 = opts;
(print_one.cljs$core$IFn$_invoke$arity$3 ? print_one.cljs$core$IFn$_invoke$arity$3(G__32557_32565,G__32558_32566,G__32559_32567) : print_one.call(null,G__32557_32565,G__32558_32566,G__32559_32567));

var G__32568 = cljs.core.next(coll_32563__$1);
var G__32569 = (n_32564 - (1));
coll_32563__$1 = G__32568;
n_32564 = G__32569;
continue;
} else {
if((cljs.core.seq(coll_32563__$1)) && ((n_32564 === (0)))){
cljs.core._write(writer,sep);

cljs.core._write(writer,"...");
} else {
}
}
break;
}

return cljs.core._write(writer,end);
}
}finally {cljs.core._STAR_print_level_STAR_ = _STAR_print_level_STAR_32553;
}});
/**
* @param {...*} var_args
*/
cljs.core.write_all = (function() { 
var write_all__delegate = function (writer,ss){
var seq__32574 = cljs.core.seq(ss);
var chunk__32575 = null;
var count__32576 = (0);
var i__32577 = (0);
while(true){
if((i__32577 < count__32576)){
var s = chunk__32575.cljs$core$IIndexed$_nth$arity$2(null,i__32577);
cljs.core._write(writer,s);

var G__32578 = seq__32574;
var G__32579 = chunk__32575;
var G__32580 = count__32576;
var G__32581 = (i__32577 + (1));
seq__32574 = G__32578;
chunk__32575 = G__32579;
count__32576 = G__32580;
i__32577 = G__32581;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__32574);
if(temp__4126__auto__){
var seq__32574__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__32574__$1)){
var c__25061__auto__ = cljs.core.chunk_first(seq__32574__$1);
var G__32582 = cljs.core.chunk_rest(seq__32574__$1);
var G__32583 = c__25061__auto__;
var G__32584 = cljs.core.count(c__25061__auto__);
var G__32585 = (0);
seq__32574 = G__32582;
chunk__32575 = G__32583;
count__32576 = G__32584;
i__32577 = G__32585;
continue;
} else {
var s = cljs.core.first(seq__32574__$1);
cljs.core._write(writer,s);

var G__32586 = cljs.core.next(seq__32574__$1);
var G__32587 = null;
var G__32588 = (0);
var G__32589 = (0);
seq__32574 = G__32586;
chunk__32575 = G__32587;
count__32576 = G__32588;
i__32577 = G__32589;
continue;
}
} else {
return null;
}
}
break;
}
};
var write_all = function (writer,var_args){
var ss = null;
if (arguments.length > 1) {
var G__32590__i = 0, G__32590__a = new Array(arguments.length -  1);
while (G__32590__i < G__32590__a.length) {G__32590__a[G__32590__i] = arguments[G__32590__i + 1]; ++G__32590__i;}
  ss = new cljs.core.IndexedSeq(G__32590__a,0);
} 
return write_all__delegate.call(this,writer,ss);};
write_all.cljs$lang$maxFixedArity = 1;
write_all.cljs$lang$applyTo = (function (arglist__32591){
var writer = cljs.core.first(arglist__32591);
var ss = cljs.core.rest(arglist__32591);
return write_all__delegate(writer,ss);
});
write_all.cljs$core$IFn$_invoke$arity$variadic = write_all__delegate;
return write_all;
})()
;
cljs.core.string_print = (function string_print(x){
(cljs.core._STAR_print_fn_STAR_.cljs$core$IFn$_invoke$arity$1 ? cljs.core._STAR_print_fn_STAR_.cljs$core$IFn$_invoke$arity$1(x) : cljs.core._STAR_print_fn_STAR_.call(null,x));

return null;
});
cljs.core.flush = (function flush(){
return null;
});
cljs.core.char_escapes = (function (){var obj32593 = {"\"":"\\\"","\\":"\\\\","\b":"\\b","\f":"\\f","\n":"\\n","\r":"\\r","\t":"\\t"};
return obj32593;
})();
cljs.core.quote_string = (function quote_string(s){
return [cljs.core.str("\""),cljs.core.str(s.replace((function (){var G__32596 = "[\\\\\"\b\f\n\r\t]";
var G__32597 = "g";
return RegExp(G__32596,G__32597);
})(),(function (match){
return (cljs.core.char_escapes[match]);
}))),cljs.core.str("\"")].join('');
});
/**
* Prefer this to pr-seq, because it makes the printing function
* configurable, allowing efficient implementations such as appending
* to a StringBuffer.
*/
cljs.core.pr_writer = (function pr_writer(obj,writer,opts){
if((obj == null)){
return cljs.core._write(writer,"nil");
} else {
if((void 0 === obj)){
return cljs.core._write(writer,"#<undefined>");
} else {
if(cljs.core.truth_((function (){var and__24262__auto__ = cljs.core.get.cljs$core$IFn$_invoke$arity$2(opts,new cljs.core.Keyword(null,"meta","meta",1499536964));
if(cljs.core.truth_(and__24262__auto__)){
var and__24262__auto____$1 = (function (){var G__32611 = obj;
if(G__32611){
var bit__24955__auto__ = (G__32611.cljs$lang$protocol_mask$partition0$ & (131072));
if((bit__24955__auto__) || (G__32611.cljs$core$IMeta$)){
return true;
} else {
if((!G__32611.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IMeta,G__32611);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IMeta,G__32611);
}
})();
if(and__24262__auto____$1){
return cljs.core.meta(obj);
} else {
return and__24262__auto____$1;
}
} else {
return and__24262__auto__;
}
})())){
cljs.core._write(writer,"^");

pr_writer(cljs.core.meta(obj),writer,opts);

cljs.core._write(writer," ");
} else {
}

if((obj == null)){
return cljs.core._write(writer,"nil");
} else {
if(obj.cljs$lang$type){
return obj.cljs$lang$ctorPrWriter(obj,writer,opts);
} else {
if((function (){var G__32612 = obj;
if(G__32612){
var bit__24948__auto__ = (G__32612.cljs$lang$protocol_mask$partition0$ & (2147483648));
if((bit__24948__auto__) || (G__32612.cljs$core$IPrintWithWriter$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return obj.cljs$core$IPrintWithWriter$_pr_writer$arity$3(null,writer,opts);
} else {
if(((cljs.core.type(obj) === Boolean)) || (typeof obj === 'number')){
return cljs.core._write(writer,[cljs.core.str(obj)].join(''));
} else {
if(cljs.core.object_QMARK_(obj)){
cljs.core._write(writer,"#js ");

var G__32613 = cljs.core.map.cljs$core$IFn$_invoke$arity$2((function (k){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.keyword.cljs$core$IFn$_invoke$arity$1(k),(obj[k])], null);
}),cljs.core.js_keys(obj));
var G__32614 = pr_writer;
var G__32615 = writer;
var G__32616 = opts;
return (cljs.core.print_map.cljs$core$IFn$_invoke$arity$4 ? cljs.core.print_map.cljs$core$IFn$_invoke$arity$4(G__32613,G__32614,G__32615,G__32616) : cljs.core.print_map.call(null,G__32613,G__32614,G__32615,G__32616));
} else {
if(obj instanceof Array){
return cljs.core.pr_sequential_writer(writer,pr_writer,"#js ["," ","]",opts,obj);
} else {
if(cljs.core.truth_((function (){var G__32617 = obj;
return goog.isString(G__32617);
})())){
if(cljs.core.truth_(new cljs.core.Keyword(null,"readably","readably",1129599760).cljs$core$IFn$_invoke$arity$1(opts))){
return cljs.core._write(writer,cljs.core.quote_string(obj));
} else {
return cljs.core._write(writer,obj);
}
} else {
if(cljs.core.fn_QMARK_(obj)){
return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(writer,cljs.core.array_seq(["#<",[cljs.core.str(obj)].join(''),">"], 0));
} else {
if((obj instanceof Date)){
var normalize = (function (n,len){
var ns = [cljs.core.str(n)].join('');
while(true){
if((cljs.core.count(ns) < len)){
var G__32619 = [cljs.core.str("0"),cljs.core.str(ns)].join('');
ns = G__32619;
continue;
} else {
return ns;
}
break;
}
});
return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(writer,cljs.core.array_seq(["#inst \"",[cljs.core.str(obj.getUTCFullYear())].join(''),"-",normalize((obj.getUTCMonth() + (1)),(2)),"-",normalize(obj.getUTCDate(),(2)),"T",normalize(obj.getUTCHours(),(2)),":",normalize(obj.getUTCMinutes(),(2)),":",normalize(obj.getUTCSeconds(),(2)),".",normalize(obj.getUTCMilliseconds(),(3)),"-","00:00\""], 0));
} else {
if(cljs.core.regexp_QMARK_(obj)){
return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(writer,cljs.core.array_seq(["#\"",obj.source,"\""], 0));
} else {
if((function (){var G__32618 = obj;
if(G__32618){
var bit__24955__auto__ = (G__32618.cljs$lang$protocol_mask$partition0$ & (2147483648));
if((bit__24955__auto__) || (G__32618.cljs$core$IPrintWithWriter$)){
return true;
} else {
if((!G__32618.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IPrintWithWriter,G__32618);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IPrintWithWriter,G__32618);
}
})()){
return cljs.core._pr_writer(obj,writer,opts);
} else {
return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(writer,cljs.core.array_seq(["#<",[cljs.core.str(obj)].join(''),">"], 0));

}
}
}
}
}
}
}
}
}
}
}

}
}
});
cljs.core.pr_seq_writer = (function pr_seq_writer(objs,writer,opts){
cljs.core.pr_writer(cljs.core.first(objs),writer,opts);

var seq__32624 = cljs.core.seq(cljs.core.next(objs));
var chunk__32625 = null;
var count__32626 = (0);
var i__32627 = (0);
while(true){
if((i__32627 < count__32626)){
var obj = chunk__32625.cljs$core$IIndexed$_nth$arity$2(null,i__32627);
cljs.core._write(writer," ");

cljs.core.pr_writer(obj,writer,opts);

var G__32628 = seq__32624;
var G__32629 = chunk__32625;
var G__32630 = count__32626;
var G__32631 = (i__32627 + (1));
seq__32624 = G__32628;
chunk__32625 = G__32629;
count__32626 = G__32630;
i__32627 = G__32631;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__32624);
if(temp__4126__auto__){
var seq__32624__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__32624__$1)){
var c__25061__auto__ = cljs.core.chunk_first(seq__32624__$1);
var G__32632 = cljs.core.chunk_rest(seq__32624__$1);
var G__32633 = c__25061__auto__;
var G__32634 = cljs.core.count(c__25061__auto__);
var G__32635 = (0);
seq__32624 = G__32632;
chunk__32625 = G__32633;
count__32626 = G__32634;
i__32627 = G__32635;
continue;
} else {
var obj = cljs.core.first(seq__32624__$1);
cljs.core._write(writer," ");

cljs.core.pr_writer(obj,writer,opts);

var G__32636 = cljs.core.next(seq__32624__$1);
var G__32637 = null;
var G__32638 = (0);
var G__32639 = (0);
seq__32624 = G__32636;
chunk__32625 = G__32637;
count__32626 = G__32638;
i__32627 = G__32639;
continue;
}
} else {
return null;
}
}
break;
}
});
cljs.core.pr_sb_with_opts = (function pr_sb_with_opts(objs,opts){
var sb = (new goog.string.StringBuffer());
var writer = (new cljs.core.StringBufferWriter(sb));
cljs.core.pr_seq_writer(objs,writer,opts);

writer.cljs$core$IWriter$_flush$arity$1(null);

return sb;
});
/**
* Prints a sequence of objects to a string, observing all the
* options given in opts
*/
cljs.core.pr_str_with_opts = (function pr_str_with_opts(objs,opts){
if(cljs.core.empty_QMARK_(objs)){
return "";
} else {
return [cljs.core.str(cljs.core.pr_sb_with_opts(objs,opts))].join('');
}
});
/**
* Same as pr-str-with-opts followed by (newline)
*/
cljs.core.prn_str_with_opts = (function prn_str_with_opts(objs,opts){
if(cljs.core.empty_QMARK_(objs)){
return "\n";
} else {
var sb = cljs.core.pr_sb_with_opts(objs,opts);
sb.append("\n");

return [cljs.core.str(sb)].join('');
}
});
/**
* Prints a sequence of objects using string-print, observing all
* the options given in opts
*/
cljs.core.pr_with_opts = (function pr_with_opts(objs,opts){
return cljs.core.string_print(cljs.core.pr_str_with_opts(objs,opts));
});
cljs.core.newline = (function newline(opts){
cljs.core.string_print("\n");

if(cljs.core.truth_(cljs.core.get.cljs$core$IFn$_invoke$arity$2(opts,new cljs.core.Keyword(null,"flush-on-newline","flush-on-newline",-151457939)))){
return cljs.core.flush();
} else {
return null;
}
});
/**
* pr to a string, returning it. Fundamental entrypoint to IPrintWithWriter.
* @param {...*} var_args
*/
cljs.core.pr_str = (function() { 
var pr_str__delegate = function (objs){
return cljs.core.pr_str_with_opts(objs,cljs.core.pr_opts());
};
var pr_str = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__32640__i = 0, G__32640__a = new Array(arguments.length -  0);
while (G__32640__i < G__32640__a.length) {G__32640__a[G__32640__i] = arguments[G__32640__i + 0]; ++G__32640__i;}
  objs = new cljs.core.IndexedSeq(G__32640__a,0);
} 
return pr_str__delegate.call(this,objs);};
pr_str.cljs$lang$maxFixedArity = 0;
pr_str.cljs$lang$applyTo = (function (arglist__32641){
var objs = cljs.core.seq(arglist__32641);
return pr_str__delegate(objs);
});
pr_str.cljs$core$IFn$_invoke$arity$variadic = pr_str__delegate;
return pr_str;
})()
;
/**
* Same as pr-str followed by (newline)
* @param {...*} var_args
*/
cljs.core.prn_str = (function() { 
var prn_str__delegate = function (objs){
return cljs.core.prn_str_with_opts(objs,cljs.core.pr_opts());
};
var prn_str = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__32642__i = 0, G__32642__a = new Array(arguments.length -  0);
while (G__32642__i < G__32642__a.length) {G__32642__a[G__32642__i] = arguments[G__32642__i + 0]; ++G__32642__i;}
  objs = new cljs.core.IndexedSeq(G__32642__a,0);
} 
return prn_str__delegate.call(this,objs);};
prn_str.cljs$lang$maxFixedArity = 0;
prn_str.cljs$lang$applyTo = (function (arglist__32643){
var objs = cljs.core.seq(arglist__32643);
return prn_str__delegate(objs);
});
prn_str.cljs$core$IFn$_invoke$arity$variadic = prn_str__delegate;
return prn_str;
})()
;
/**
* Prints the object(s) using string-print.  Prints the
* object(s), separated by spaces if there is more than one.
* By default, pr and prn print in a way that objects can be
* read by the reader
* @param {...*} var_args
*/
cljs.core.pr = (function() { 
var pr__delegate = function (objs){
return cljs.core.pr_with_opts(objs,cljs.core.pr_opts());
};
var pr = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__32644__i = 0, G__32644__a = new Array(arguments.length -  0);
while (G__32644__i < G__32644__a.length) {G__32644__a[G__32644__i] = arguments[G__32644__i + 0]; ++G__32644__i;}
  objs = new cljs.core.IndexedSeq(G__32644__a,0);
} 
return pr__delegate.call(this,objs);};
pr.cljs$lang$maxFixedArity = 0;
pr.cljs$lang$applyTo = (function (arglist__32645){
var objs = cljs.core.seq(arglist__32645);
return pr__delegate(objs);
});
pr.cljs$core$IFn$_invoke$arity$variadic = pr__delegate;
return pr;
})()
;
/**
* Prints the object(s) using string-print.
* print and println produce output for human consumption.
* @param {...*} var_args
*/
cljs.core.print = (function() { 
var cljs_core_print__delegate = function (objs){
return cljs.core.pr_with_opts(objs,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.pr_opts(),new cljs.core.Keyword(null,"readably","readably",1129599760),false));
};
var cljs_core_print = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__32646__i = 0, G__32646__a = new Array(arguments.length -  0);
while (G__32646__i < G__32646__a.length) {G__32646__a[G__32646__i] = arguments[G__32646__i + 0]; ++G__32646__i;}
  objs = new cljs.core.IndexedSeq(G__32646__a,0);
} 
return cljs_core_print__delegate.call(this,objs);};
cljs_core_print.cljs$lang$maxFixedArity = 0;
cljs_core_print.cljs$lang$applyTo = (function (arglist__32647){
var objs = cljs.core.seq(arglist__32647);
return cljs_core_print__delegate(objs);
});
cljs_core_print.cljs$core$IFn$_invoke$arity$variadic = cljs_core_print__delegate;
return cljs_core_print;
})()
;
/**
* print to a string, returning it
* @param {...*} var_args
*/
cljs.core.print_str = (function() { 
var print_str__delegate = function (objs){
return cljs.core.pr_str_with_opts(objs,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.pr_opts(),new cljs.core.Keyword(null,"readably","readably",1129599760),false));
};
var print_str = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__32648__i = 0, G__32648__a = new Array(arguments.length -  0);
while (G__32648__i < G__32648__a.length) {G__32648__a[G__32648__i] = arguments[G__32648__i + 0]; ++G__32648__i;}
  objs = new cljs.core.IndexedSeq(G__32648__a,0);
} 
return print_str__delegate.call(this,objs);};
print_str.cljs$lang$maxFixedArity = 0;
print_str.cljs$lang$applyTo = (function (arglist__32649){
var objs = cljs.core.seq(arglist__32649);
return print_str__delegate(objs);
});
print_str.cljs$core$IFn$_invoke$arity$variadic = print_str__delegate;
return print_str;
})()
;
/**
* Same as print followed by (newline)
* @param {...*} var_args
*/
cljs.core.println = (function() { 
var println__delegate = function (objs){
cljs.core.pr_with_opts(objs,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.pr_opts(),new cljs.core.Keyword(null,"readably","readably",1129599760),false));

if(cljs.core.truth_(cljs.core._STAR_print_newline_STAR_)){
return cljs.core.newline(cljs.core.pr_opts());
} else {
return null;
}
};
var println = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__32650__i = 0, G__32650__a = new Array(arguments.length -  0);
while (G__32650__i < G__32650__a.length) {G__32650__a[G__32650__i] = arguments[G__32650__i + 0]; ++G__32650__i;}
  objs = new cljs.core.IndexedSeq(G__32650__a,0);
} 
return println__delegate.call(this,objs);};
println.cljs$lang$maxFixedArity = 0;
println.cljs$lang$applyTo = (function (arglist__32651){
var objs = cljs.core.seq(arglist__32651);
return println__delegate(objs);
});
println.cljs$core$IFn$_invoke$arity$variadic = println__delegate;
return println;
})()
;
/**
* println to a string, returning it
* @param {...*} var_args
*/
cljs.core.println_str = (function() { 
var println_str__delegate = function (objs){
return cljs.core.prn_str_with_opts(objs,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.pr_opts(),new cljs.core.Keyword(null,"readably","readably",1129599760),false));
};
var println_str = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__32652__i = 0, G__32652__a = new Array(arguments.length -  0);
while (G__32652__i < G__32652__a.length) {G__32652__a[G__32652__i] = arguments[G__32652__i + 0]; ++G__32652__i;}
  objs = new cljs.core.IndexedSeq(G__32652__a,0);
} 
return println_str__delegate.call(this,objs);};
println_str.cljs$lang$maxFixedArity = 0;
println_str.cljs$lang$applyTo = (function (arglist__32653){
var objs = cljs.core.seq(arglist__32653);
return println_str__delegate(objs);
});
println_str.cljs$core$IFn$_invoke$arity$variadic = println_str__delegate;
return println_str;
})()
;
/**
* Same as pr followed by (newline).
* @param {...*} var_args
*/
cljs.core.prn = (function() { 
var prn__delegate = function (objs){
cljs.core.pr_with_opts(objs,cljs.core.pr_opts());

if(cljs.core.truth_(cljs.core._STAR_print_newline_STAR_)){
return cljs.core.newline(cljs.core.pr_opts());
} else {
return null;
}
};
var prn = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__32654__i = 0, G__32654__a = new Array(arguments.length -  0);
while (G__32654__i < G__32654__a.length) {G__32654__a[G__32654__i] = arguments[G__32654__i + 0]; ++G__32654__i;}
  objs = new cljs.core.IndexedSeq(G__32654__a,0);
} 
return prn__delegate.call(this,objs);};
prn.cljs$lang$maxFixedArity = 0;
prn.cljs$lang$applyTo = (function (arglist__32655){
var objs = cljs.core.seq(arglist__32655);
return prn__delegate(objs);
});
prn.cljs$core$IFn$_invoke$arity$variadic = prn__delegate;
return prn;
})()
;
cljs.core.print_map = (function print_map(m,print_one,writer,opts){
return cljs.core.pr_sequential_writer(writer,(function (e,w,opts__$1){
var G__32662_32668 = cljs.core.key(e);
var G__32663_32669 = w;
var G__32664_32670 = opts__$1;
(print_one.cljs$core$IFn$_invoke$arity$3 ? print_one.cljs$core$IFn$_invoke$arity$3(G__32662_32668,G__32663_32669,G__32664_32670) : print_one.call(null,G__32662_32668,G__32663_32669,G__32664_32670));

cljs.core._write(w," ");

var G__32665 = cljs.core.val(e);
var G__32666 = w;
var G__32667 = opts__$1;
return (print_one.cljs$core$IFn$_invoke$arity$3 ? print_one.cljs$core$IFn$_invoke$arity$3(G__32665,G__32666,G__32667) : print_one.call(null,G__32665,G__32666,G__32667));
}),"{",", ","}",opts,cljs.core.seq(m));
});
cljs.core.Volatile.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.Volatile.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (a,writer,opts){
var a__$1 = this;
cljs.core._write(writer,"#<Volatile: ");

cljs.core.pr_writer(a__$1.state,writer,opts);

return cljs.core._write(writer,">");
});

cljs.core.Var.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.Var.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (a,writer,opts){
var a__$1 = this;
cljs.core._write(writer,"#'");

return cljs.core.pr_writer(a__$1.sym,writer,opts);
});

cljs.core.IndexedSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.IndexedSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.LazySeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.LazySeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.NodeSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.NodeSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.BlackNode.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.BlackNode.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"["," ","]",opts,coll__$1);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.ES6IteratorSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ES6IteratorSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentTreeSet.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"#{"," ","}",opts,coll__$1);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ChunkedSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.ObjMap.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ObjMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.print_map(coll__$1,cljs.core.pr_writer,writer,opts);
});

cljs.core.Cons.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.Cons.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.RSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.RSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.PersistentHashMap.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentHashMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.print_map(coll__$1,cljs.core.pr_writer,writer,opts);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ArrayNodeSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.Subvec.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.Subvec.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"["," ","]",opts,coll__$1);
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentTreeMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.print_map(coll__$1,cljs.core.pr_writer,writer,opts);
});

cljs.core.PersistentHashSet.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentHashSet.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"#{"," ","}",opts,coll__$1);
});

cljs.core.ChunkedCons.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ChunkedCons.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.Atom.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.Atom.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (a,writer,opts){
var a__$1 = this;
cljs.core._write(writer,"#<Atom: ");

cljs.core.pr_writer(a__$1.state,writer,opts);

return cljs.core._write(writer,">");
});

cljs.core.ValSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ValSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.RedNode.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.RedNode.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"["," ","]",opts,coll__$1);
});

cljs.core.PersistentVector.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentVector.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"["," ","]",opts,coll__$1);
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentQueueSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.EmptyList.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.EmptyList.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core._write(writer,"()");
});

cljs.core.LazyTransformer.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.LazyTransformer.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.PersistentQueue.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentQueue.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"#queue ["," ","]",opts,cljs.core.seq(coll__$1));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentArrayMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.print_map(coll__$1,cljs.core.pr_writer,writer,opts);
});

cljs.core.Range.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.Range.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.KeySeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.KeySeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.List.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.List.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});
cljs.core.PersistentVector.prototype.cljs$core$IComparable$ = true;

cljs.core.PersistentVector.prototype.cljs$core$IComparable$_compare$arity$2 = (function (x,y){
var x__$1 = this;
return cljs.core.compare_indexed.cljs$core$IFn$_invoke$arity$2(x__$1,y);
});

cljs.core.Subvec.prototype.cljs$core$IComparable$ = true;

cljs.core.Subvec.prototype.cljs$core$IComparable$_compare$arity$2 = (function (x,y){
var x__$1 = this;
return cljs.core.compare_indexed.cljs$core$IFn$_invoke$arity$2(x__$1,y);
});

cljs.core.Keyword.prototype.cljs$core$IComparable$ = true;

cljs.core.Keyword.prototype.cljs$core$IComparable$_compare$arity$2 = (function (x,y){
var x__$1 = this;
return cljs.core.compare_keywords(x__$1,y);
});

cljs.core.Symbol.prototype.cljs$core$IComparable$ = true;

cljs.core.Symbol.prototype.cljs$core$IComparable$_compare$arity$2 = (function (x,y){
var x__$1 = this;
return cljs.core.compare_symbols(x__$1,y);
});
/**
* Atomically sets the metadata for a namespace/var/ref/agent/atom to be:
* 
* (apply f its-current-meta args)
* 
* f must be free of side-effects
* @param {...*} var_args
*/
cljs.core.alter_meta_BANG_ = (function() { 
var alter_meta_BANG___delegate = function (iref,f,args){
return iref.meta = cljs.core.apply.cljs$core$IFn$_invoke$arity$3(f,iref.meta,args);
};
var alter_meta_BANG_ = function (iref,f,var_args){
var args = null;
if (arguments.length > 2) {
var G__32671__i = 0, G__32671__a = new Array(arguments.length -  2);
while (G__32671__i < G__32671__a.length) {G__32671__a[G__32671__i] = arguments[G__32671__i + 2]; ++G__32671__i;}
  args = new cljs.core.IndexedSeq(G__32671__a,0);
} 
return alter_meta_BANG___delegate.call(this,iref,f,args);};
alter_meta_BANG_.cljs$lang$maxFixedArity = 2;
alter_meta_BANG_.cljs$lang$applyTo = (function (arglist__32672){
var iref = cljs.core.first(arglist__32672);
arglist__32672 = cljs.core.next(arglist__32672);
var f = cljs.core.first(arglist__32672);
var args = cljs.core.rest(arglist__32672);
return alter_meta_BANG___delegate(iref,f,args);
});
alter_meta_BANG_.cljs$core$IFn$_invoke$arity$variadic = alter_meta_BANG___delegate;
return alter_meta_BANG_;
})()
;
/**
* Atomically resets the metadata for an atom
*/
cljs.core.reset_meta_BANG_ = (function reset_meta_BANG_(iref,m){
return iref.meta = m;
});
/**
* Alpha - subject to change.
* 
* Adds a watch function to an atom reference. The watch fn must be a
* fn of 4 args: a key, the reference, its old-state, its
* new-state. Whenever the reference's state might have been changed,
* any registered watches will have their functions called. The watch
* fn will be called synchronously. Note that an atom's state
* may have changed again prior to the fn call, so use old/new-state
* rather than derefing the reference. Keys must be unique per
* reference, and can be used to remove the watch with remove-watch,
* but are otherwise considered opaque by the watch mechanism.  Bear in
* mind that regardless of the result or action of the watch fns the
* atom's value will change.  Example:
* 
* (def a (atom 0))
* (add-watch a :inc (fn [k r o n] (assert (== 0 n))))
* (swap! a inc)
* ;; Assertion Error
* (deref a)
* ;=> 1
*/
cljs.core.add_watch = (function add_watch(iref,key,f){
cljs.core._add_watch(iref,key,f);

return iref;
});
/**
* Alpha - subject to change.
* 
* Removes a watch (set by add-watch) from a reference
*/
cljs.core.remove_watch = (function remove_watch(iref,key){
cljs.core._remove_watch(iref,key);

return iref;
});
cljs.core.gensym_counter = null;
/**
* Returns a new symbol with a unique name. If a prefix string is
* supplied, the name is prefix# where # is some unique number. If
* prefix is not supplied, the prefix is 'G__'.
*/
cljs.core.gensym = (function() {
var gensym = null;
var gensym__0 = (function (){
return gensym.cljs$core$IFn$_invoke$arity$1("G__");
});
var gensym__1 = (function (prefix_string){
if((cljs.core.gensym_counter == null)){
cljs.core.gensym_counter = (function (){var G__32675 = (0);
return (cljs.core.atom.cljs$core$IFn$_invoke$arity$1 ? cljs.core.atom.cljs$core$IFn$_invoke$arity$1(G__32675) : cljs.core.atom.call(null,G__32675));
})();
} else {
}

return cljs.core.symbol.cljs$core$IFn$_invoke$arity$1([cljs.core.str(prefix_string),cljs.core.str(cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(cljs.core.gensym_counter,cljs.core.inc))].join(''));
});
gensym = function(prefix_string){
switch(arguments.length){
case 0:
return gensym__0.call(this);
case 1:
return gensym__1.call(this,prefix_string);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
gensym.cljs$core$IFn$_invoke$arity$0 = gensym__0;
gensym.cljs$core$IFn$_invoke$arity$1 = gensym__1;
return gensym;
})()
;
cljs.core.fixture1 = (1);
cljs.core.fixture2 = (2);

/**
* @constructor
*/
cljs.core.Delay = (function (f,value){
this.f = f;
this.value = value;
this.cljs$lang$protocol_mask$partition1$ = 1;
this.cljs$lang$protocol_mask$partition0$ = 32768;
})
cljs.core.Delay.prototype.cljs$core$IPending$_realized_QMARK_$arity$1 = (function (d){
var self__ = this;
var d__$1 = this;
return cljs.core.not(self__.f);
});

cljs.core.Delay.prototype.cljs$core$IDeref$_deref$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
if(cljs.core.truth_(self__.f)){
self__.value = (function (){return (self__.f.cljs$core$IFn$_invoke$arity$0 ? self__.f.cljs$core$IFn$_invoke$arity$0() : self__.f.call(null));
})();

self__.f = null;
} else {
}

return self__.value;
});

cljs.core.Delay.cljs$lang$type = true;

cljs.core.Delay.cljs$lang$ctorStr = "cljs.core/Delay";

cljs.core.Delay.cljs$lang$ctorPrWriter = (function (this__24861__auto__,writer__24862__auto__,opt__24863__auto__){
return cljs.core._write(writer__24862__auto__,"cljs.core/Delay");
});

cljs.core.__GT_Delay = (function __GT_Delay(f,value){
return (new cljs.core.Delay(f,value));
});

/**
* returns true if x is a Delay created with delay
*/
cljs.core.delay_QMARK_ = (function delay_QMARK_(x){
return (x instanceof cljs.core.Delay);
});
/**
* If x is a Delay, returns the (possibly cached) value of its expression, else returns x
*/
cljs.core.force = (function force(x){
if(cljs.core.delay_QMARK_(x)){
var G__32677 = x;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__32677) : cljs.core.deref.call(null,G__32677));
} else {
return x;
}
});
/**
* Returns true if a value has been produced for a promise, delay, future or lazy sequence.
*/
cljs.core.realized_QMARK_ = (function realized_QMARK_(d){
return cljs.core._realized_QMARK_(d);
});
cljs.core.preserving_reduced = (function preserving_reduced(rf){
return (function (p1__32678_SHARP_,p2__32679_SHARP_){
var ret = (function (){var G__32682 = p1__32678_SHARP_;
var G__32683 = p2__32679_SHARP_;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__32682,G__32683) : rf.call(null,G__32682,G__32683));
})();
if(cljs.core.reduced_QMARK_(ret)){
return cljs.core.reduced(ret);
} else {
return ret;
}
});
});
/**
* A transducer which concatenates the contents of each input, which must be a
* collection, into the reduction.
*/
cljs.core.cat = (function cat(rf){
var rf1 = cljs.core.preserving_reduced(rf);
return ((function (rf1){
return (function() {
var G__32686 = null;
var G__32686__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__32686__1 = (function (result){
var G__32685 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__32685) : rf.call(null,G__32685));
});
var G__32686__2 = (function (result,input){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(rf1,result,input);
});
G__32686 = function(result,input){
switch(arguments.length){
case 0:
return G__32686__0.call(this);
case 1:
return G__32686__1.call(this,result);
case 2:
return G__32686__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__32686.cljs$core$IFn$_invoke$arity$0 = G__32686__0;
G__32686.cljs$core$IFn$_invoke$arity$1 = G__32686__1;
G__32686.cljs$core$IFn$_invoke$arity$2 = G__32686__2;
return G__32686;
})()
;})(rf1))
});
/**
* Returns a lazy sequence removing consecutive duplicates in coll.
* Returns a transducer when no collection is provided.
*/
cljs.core.dedupe = (function() {
var dedupe = null;
var dedupe__0 = (function (){
return (function (rf){
var pa = cljs.core.volatile_BANG_(new cljs.core.Keyword("cljs.core","none","cljs.core/none",926646439));
return ((function (pa){
return (function() {
var G__32695 = null;
var G__32695__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__32695__1 = (function (result){
var G__32691 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__32691) : rf.call(null,G__32691));
});
var G__32695__2 = (function (result,input){
var prior = (function (){var G__32692 = pa;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__32692) : cljs.core.deref.call(null,G__32692));
})();
cljs.core.vreset_BANG_(pa,input);

if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(prior,input)){
return result;
} else {
var G__32693 = result;
var G__32694 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__32693,G__32694) : rf.call(null,G__32693,G__32694));
}
});
G__32695 = function(result,input){
switch(arguments.length){
case 0:
return G__32695__0.call(this);
case 1:
return G__32695__1.call(this,result);
case 2:
return G__32695__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__32695.cljs$core$IFn$_invoke$arity$0 = G__32695__0;
G__32695.cljs$core$IFn$_invoke$arity$1 = G__32695__1;
G__32695.cljs$core$IFn$_invoke$arity$2 = G__32695__2;
return G__32695;
})()
;})(pa))
});
});
var dedupe__1 = (function (coll){
return cljs.core.sequence.cljs$core$IFn$_invoke$arity$2(dedupe.cljs$core$IFn$_invoke$arity$0(),coll);
});
dedupe = function(coll){
switch(arguments.length){
case 0:
return dedupe__0.call(this);
case 1:
return dedupe__1.call(this,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
dedupe.cljs$core$IFn$_invoke$arity$0 = dedupe__0;
dedupe.cljs$core$IFn$_invoke$arity$1 = dedupe__1;
return dedupe;
})()
;
/**
* Returns items from coll with random probability of prob (0.0 -
* 1.0).  Returns a transducer when no collection is provided.
*/
cljs.core.random_sample = (function() {
var random_sample = null;
var random_sample__1 = (function (prob){
return cljs.core.filter.cljs$core$IFn$_invoke$arity$1((function (_){
return ((function (){return (cljs.core.rand.cljs$core$IFn$_invoke$arity$0 ? cljs.core.rand.cljs$core$IFn$_invoke$arity$0() : cljs.core.rand.call(null));
})() < prob);
}));
});
var random_sample__2 = (function (prob,coll){
return cljs.core.filter.cljs$core$IFn$_invoke$arity$2((function (_){
return ((function (){return (cljs.core.rand.cljs$core$IFn$_invoke$arity$0 ? cljs.core.rand.cljs$core$IFn$_invoke$arity$0() : cljs.core.rand.call(null));
})() < prob);
}),coll);
});
random_sample = function(prob,coll){
switch(arguments.length){
case 1:
return random_sample__1.call(this,prob);
case 2:
return random_sample__2.call(this,prob,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
random_sample.cljs$core$IFn$_invoke$arity$1 = random_sample__1;
random_sample.cljs$core$IFn$_invoke$arity$2 = random_sample__2;
return random_sample;
})()
;

/**
* @constructor
*/
cljs.core.Eduction = (function (xform,coll){
this.xform = xform;
this.coll = coll;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 2173173760;
})
cljs.core.Eduction.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll__$1,writer,opts){
var self__ = this;
var coll__$2 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$2);
});

cljs.core.Eduction.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (_,f,init){
var self__ = this;
var ___$1 = this;
return cljs.core.transduce.cljs$core$IFn$_invoke$arity$4(self__.xform,f,init,self__.coll);
});

cljs.core.Eduction.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return cljs.core.seq(cljs.core.sequence.cljs$core$IFn$_invoke$arity$2(self__.xform,self__.coll));
});

cljs.core.Eduction.cljs$lang$type = true;

cljs.core.Eduction.cljs$lang$ctorStr = "cljs.core/Eduction";

cljs.core.Eduction.cljs$lang$ctorPrWriter = (function (this__24861__auto__,writer__24862__auto__,opt__24863__auto__){
return cljs.core._write(writer__24862__auto__,"cljs.core/Eduction");
});

cljs.core.__GT_Eduction = (function __GT_Eduction(xform,coll){
return (new cljs.core.Eduction(xform,coll));
});

(cljs.core.Eduction.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__25252__auto__ = this;
return cljs.core.es6_iterator(this__25252__auto__);
}));
/**
* Returns a reducible/iterable/seqable application of
* the transducer to the items in coll. Note that these applications
* will be performed every time iterator/seq/reduce is called.
*/
cljs.core.eduction = (function eduction(xform,coll){
return (new cljs.core.Eduction(xform,coll));
});
/**
* Runs the supplied procedure (via reduce), for purposes of side
* effects, on successive items in the collection. Returns nil
*/
cljs.core.run_BANG_ = (function run_BANG_(proc,coll){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (p1__32697_SHARP_,p2__32696_SHARP_){
var G__32699 = p2__32696_SHARP_;
return (proc.cljs$core$IFn$_invoke$arity$1 ? proc.cljs$core$IFn$_invoke$arity$1(G__32699) : proc.call(null,G__32699));
}),null,coll);
});

cljs.core.IEncodeJS = (function (){var obj32701 = {};
return obj32701;
})();

cljs.core._clj__GT_js = (function _clj__GT_js(x){
if((function (){var and__24262__auto__ = x;
if(and__24262__auto__){
return x.cljs$core$IEncodeJS$_clj__GT_js$arity$1;
} else {
return and__24262__auto__;
}
})()){
return x.cljs$core$IEncodeJS$_clj__GT_js$arity$1(x);
} else {
var x__24918__auto__ = (((x == null))?null:x);
return (function (){var or__24274__auto__ = (cljs.core._clj__GT_js[(function (){var G__32705 = x__24918__auto__;
return goog.typeOf(G__32705);
})()]);
if(or__24274__auto__){
return or__24274__auto__;
} else {
var or__24274__auto____$1 = (cljs.core._clj__GT_js["_"]);
if(or__24274__auto____$1){
return or__24274__auto____$1;
} else {
throw cljs.core.missing_protocol("IEncodeJS.-clj->js",x);
}
}
})().call(null,x);
}
});

cljs.core._key__GT_js = (function _key__GT_js(x){
if((function (){var and__24262__auto__ = x;
if(and__24262__auto__){
return x.cljs$core$IEncodeJS$_key__GT_js$arity$1;
} else {
return and__24262__auto__;
}
})()){
return x.cljs$core$IEncodeJS$_key__GT_js$arity$1(x);
} else {
var x__24918__auto__ = (((x == null))?null:x);
return (function (){var or__24274__auto__ = (cljs.core._key__GT_js[(function (){var G__32709 = x__24918__auto__;
return goog.typeOf(G__32709);
})()]);
if(or__24274__auto__){
return or__24274__auto__;
} else {
var or__24274__auto____$1 = (cljs.core._key__GT_js["_"]);
if(or__24274__auto____$1){
return or__24274__auto____$1;
} else {
throw cljs.core.missing_protocol("IEncodeJS.-key->js",x);
}
}
})().call(null,x);
}
});

cljs.core.key__GT_js = (function key__GT_js(k){
if((function (){var G__32712 = k;
if(G__32712){
var bit__24955__auto__ = null;
if(cljs.core.truth_((function (){var or__24274__auto__ = bit__24955__auto__;
if(cljs.core.truth_(or__24274__auto__)){
return or__24274__auto__;
} else {
return G__32712.cljs$core$IEncodeJS$;
}
})())){
return true;
} else {
if((!G__32712.cljs$lang$protocol_mask$partition$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeJS,G__32712);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeJS,G__32712);
}
})()){
return cljs.core._clj__GT_js(k);
} else {
if((typeof k === 'string') || (typeof k === 'number') || ((k instanceof cljs.core.Keyword)) || ((k instanceof cljs.core.Symbol))){
var G__32713 = k;
return (cljs.core.clj__GT_js.cljs$core$IFn$_invoke$arity$1 ? cljs.core.clj__GT_js.cljs$core$IFn$_invoke$arity$1(G__32713) : cljs.core.clj__GT_js.call(null,G__32713));
} else {
return cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([k], 0));
}
}
});
/**
* Recursively transforms ClojureScript values to JavaScript.
* sets/vectors/lists become Arrays, Keywords and Symbol become Strings,
* Maps become Objects. Arbitrary keys are encoded to by key->js.
*/
cljs.core.clj__GT_js = (function clj__GT_js(x){
if((x == null)){
return null;
} else {
if((function (){var G__32729 = x;
if(G__32729){
var bit__24955__auto__ = null;
if(cljs.core.truth_((function (){var or__24274__auto__ = bit__24955__auto__;
if(cljs.core.truth_(or__24274__auto__)){
return or__24274__auto__;
} else {
return G__32729.cljs$core$IEncodeJS$;
}
})())){
return true;
} else {
if((!G__32729.cljs$lang$protocol_mask$partition$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeJS,G__32729);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeJS,G__32729);
}
})()){
return cljs.core._clj__GT_js(x);
} else {
if((x instanceof cljs.core.Keyword)){
return cljs.core.name(x);
} else {
if((x instanceof cljs.core.Symbol)){
return [cljs.core.str(x)].join('');
} else {
if(cljs.core.map_QMARK_(x)){
var m = (function (){var obj32731 = {};
return obj32731;
})();
var seq__32732_32742 = cljs.core.seq(x);
var chunk__32733_32743 = null;
var count__32734_32744 = (0);
var i__32735_32745 = (0);
while(true){
if((i__32735_32745 < count__32734_32744)){
var vec__32736_32746 = chunk__32733_32743.cljs$core$IIndexed$_nth$arity$2(null,i__32735_32745);
var k_32747 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__32736_32746,(0),null);
var v_32748 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__32736_32746,(1),null);
(m[cljs.core.key__GT_js(k_32747)] = clj__GT_js(v_32748));

var G__32749 = seq__32732_32742;
var G__32750 = chunk__32733_32743;
var G__32751 = count__32734_32744;
var G__32752 = (i__32735_32745 + (1));
seq__32732_32742 = G__32749;
chunk__32733_32743 = G__32750;
count__32734_32744 = G__32751;
i__32735_32745 = G__32752;
continue;
} else {
var temp__4126__auto___32753 = cljs.core.seq(seq__32732_32742);
if(temp__4126__auto___32753){
var seq__32732_32754__$1 = temp__4126__auto___32753;
if(cljs.core.chunked_seq_QMARK_(seq__32732_32754__$1)){
var c__25061__auto___32755 = cljs.core.chunk_first(seq__32732_32754__$1);
var G__32756 = cljs.core.chunk_rest(seq__32732_32754__$1);
var G__32757 = c__25061__auto___32755;
var G__32758 = cljs.core.count(c__25061__auto___32755);
var G__32759 = (0);
seq__32732_32742 = G__32756;
chunk__32733_32743 = G__32757;
count__32734_32744 = G__32758;
i__32735_32745 = G__32759;
continue;
} else {
var vec__32737_32760 = cljs.core.first(seq__32732_32754__$1);
var k_32761 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__32737_32760,(0),null);
var v_32762 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__32737_32760,(1),null);
(m[cljs.core.key__GT_js(k_32761)] = clj__GT_js(v_32762));

var G__32763 = cljs.core.next(seq__32732_32754__$1);
var G__32764 = null;
var G__32765 = (0);
var G__32766 = (0);
seq__32732_32742 = G__32763;
chunk__32733_32743 = G__32764;
count__32734_32744 = G__32765;
i__32735_32745 = G__32766;
continue;
}
} else {
}
}
break;
}

return m;
} else {
if(cljs.core.coll_QMARK_(x)){
var arr = [];
var seq__32738_32767 = cljs.core.seq(cljs.core.map.cljs$core$IFn$_invoke$arity$2(clj__GT_js,x));
var chunk__32739_32768 = null;
var count__32740_32769 = (0);
var i__32741_32770 = (0);
while(true){
if((i__32741_32770 < count__32740_32769)){
var x_32771__$1 = chunk__32739_32768.cljs$core$IIndexed$_nth$arity$2(null,i__32741_32770);
arr.push(x_32771__$1);

var G__32772 = seq__32738_32767;
var G__32773 = chunk__32739_32768;
var G__32774 = count__32740_32769;
var G__32775 = (i__32741_32770 + (1));
seq__32738_32767 = G__32772;
chunk__32739_32768 = G__32773;
count__32740_32769 = G__32774;
i__32741_32770 = G__32775;
continue;
} else {
var temp__4126__auto___32776 = cljs.core.seq(seq__32738_32767);
if(temp__4126__auto___32776){
var seq__32738_32777__$1 = temp__4126__auto___32776;
if(cljs.core.chunked_seq_QMARK_(seq__32738_32777__$1)){
var c__25061__auto___32778 = cljs.core.chunk_first(seq__32738_32777__$1);
var G__32779 = cljs.core.chunk_rest(seq__32738_32777__$1);
var G__32780 = c__25061__auto___32778;
var G__32781 = cljs.core.count(c__25061__auto___32778);
var G__32782 = (0);
seq__32738_32767 = G__32779;
chunk__32739_32768 = G__32780;
count__32740_32769 = G__32781;
i__32741_32770 = G__32782;
continue;
} else {
var x_32783__$1 = cljs.core.first(seq__32738_32777__$1);
arr.push(x_32783__$1);

var G__32784 = cljs.core.next(seq__32738_32777__$1);
var G__32785 = null;
var G__32786 = (0);
var G__32787 = (0);
seq__32738_32767 = G__32784;
chunk__32739_32768 = G__32785;
count__32740_32769 = G__32786;
i__32741_32770 = G__32787;
continue;
}
} else {
}
}
break;
}

return arr;
} else {
return x;

}
}
}
}
}
}
});

cljs.core.IEncodeClojure = (function (){var obj32789 = {};
return obj32789;
})();

cljs.core._js__GT_clj = (function _js__GT_clj(x,options){
if((function (){var and__24262__auto__ = x;
if(and__24262__auto__){
return x.cljs$core$IEncodeClojure$_js__GT_clj$arity$2;
} else {
return and__24262__auto__;
}
})()){
return x.cljs$core$IEncodeClojure$_js__GT_clj$arity$2(x,options);
} else {
var x__24918__auto__ = (((x == null))?null:x);
return (function (){var or__24274__auto__ = (cljs.core._js__GT_clj[(function (){var G__32793 = x__24918__auto__;
return goog.typeOf(G__32793);
})()]);
if(or__24274__auto__){
return or__24274__auto__;
} else {
var or__24274__auto____$1 = (cljs.core._js__GT_clj["_"]);
if(or__24274__auto____$1){
return or__24274__auto____$1;
} else {
throw cljs.core.missing_protocol("IEncodeClojure.-js->clj",x);
}
}
})().call(null,x,options);
}
});

/**
* Recursively transforms JavaScript arrays into ClojureScript
* vectors, and JavaScript objects into ClojureScript maps.  With
* option ':keywordize-keys true' will convert object fields from
* strings to keywords.
* @param {...*} var_args
*/
cljs.core.js__GT_clj = (function() {
var js__GT_clj = null;
var js__GT_clj__1 = (function (x){
return js__GT_clj.cljs$core$IFn$_invoke$arity$variadic(x,cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,"keywordize-keys","keywordize-keys",1310784252),false], null)], 0));
});
var js__GT_clj__2 = (function() { 
var G__32850__delegate = function (x,opts){
var map__32823 = opts;
var map__32823__$1 = ((cljs.core.seq_QMARK_(map__32823))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__32823):map__32823);
var keywordize_keys = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__32823__$1,new cljs.core.Keyword(null,"keywordize-keys","keywordize-keys",1310784252));
var keyfn = (cljs.core.truth_(keywordize_keys)?cljs.core.keyword:cljs.core.str);
var f = ((function (map__32823,map__32823__$1,keywordize_keys,keyfn){
return (function thisfn(x__$1){
if((function (){var G__32839 = x__$1;
if(G__32839){
var bit__24955__auto__ = null;
if(cljs.core.truth_((function (){var or__24274__auto__ = bit__24955__auto__;
if(cljs.core.truth_(or__24274__auto__)){
return or__24274__auto__;
} else {
return G__32839.cljs$core$IEncodeClojure$;
}
})())){
return true;
} else {
if((!G__32839.cljs$lang$protocol_mask$partition$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeClojure,G__32839);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeClojure,G__32839);
}
})()){
return cljs.core._js__GT_clj(x__$1,cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.array_map,opts));
} else {
if(cljs.core.seq_QMARK_(x__$1)){
return cljs.core.doall.cljs$core$IFn$_invoke$arity$1(cljs.core.map.cljs$core$IFn$_invoke$arity$2(thisfn,x__$1));
} else {
if(cljs.core.coll_QMARK_(x__$1)){
return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.empty(x__$1),cljs.core.map.cljs$core$IFn$_invoke$arity$2(thisfn,x__$1));
} else {
if(x__$1 instanceof Array){
return cljs.core.vec(cljs.core.map.cljs$core$IFn$_invoke$arity$2(thisfn,x__$1));
} else {
if((cljs.core.type(x__$1) === Object)){
return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentArrayMap.EMPTY,(function (){var iter__25030__auto__ = ((function (map__32823,map__32823__$1,keywordize_keys,keyfn){
return (function iter__32840(s__32841){
return (new cljs.core.LazySeq(null,((function (map__32823,map__32823__$1,keywordize_keys,keyfn){
return (function (){
var s__32841__$1 = s__32841;
while(true){
var temp__4126__auto__ = cljs.core.seq(s__32841__$1);
if(temp__4126__auto__){
var s__32841__$2 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(s__32841__$2)){
var c__25028__auto__ = cljs.core.chunk_first(s__32841__$2);
var size__25029__auto__ = cljs.core.count(c__25028__auto__);
var b__32843 = cljs.core.chunk_buffer(size__25029__auto__);
if((function (){var i__32842 = (0);
while(true){
if((i__32842 < size__25029__auto__)){
var k = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c__25028__auto__,i__32842);
cljs.core.chunk_append(b__32843,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__32848 = k;
return (keyfn.cljs$core$IFn$_invoke$arity$1 ? keyfn.cljs$core$IFn$_invoke$arity$1(G__32848) : keyfn.call(null,G__32848));
})(),thisfn((x__$1[k]))], null));

var G__32851 = (i__32842 + (1));
i__32842 = G__32851;
continue;
} else {
return true;
}
break;
}
})()){
return cljs.core.chunk_cons(cljs.core.chunk(b__32843),iter__32840(cljs.core.chunk_rest(s__32841__$2)));
} else {
return cljs.core.chunk_cons(cljs.core.chunk(b__32843),null);
}
} else {
var k = cljs.core.first(s__32841__$2);
return cljs.core.cons(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__32849 = k;
return (keyfn.cljs$core$IFn$_invoke$arity$1 ? keyfn.cljs$core$IFn$_invoke$arity$1(G__32849) : keyfn.call(null,G__32849));
})(),thisfn((x__$1[k]))], null),iter__32840(cljs.core.rest(s__32841__$2)));
}
} else {
return null;
}
break;
}
});})(map__32823,map__32823__$1,keywordize_keys,keyfn))
,null,null));
});})(map__32823,map__32823__$1,keywordize_keys,keyfn))
;
return iter__25030__auto__(cljs.core.js_keys(x__$1));
})());
} else {
return x__$1;

}
}
}
}
}
});})(map__32823,map__32823__$1,keywordize_keys,keyfn))
;
return f(x);
};
var G__32850 = function (x,var_args){
var opts = null;
if (arguments.length > 1) {
var G__32852__i = 0, G__32852__a = new Array(arguments.length -  1);
while (G__32852__i < G__32852__a.length) {G__32852__a[G__32852__i] = arguments[G__32852__i + 1]; ++G__32852__i;}
  opts = new cljs.core.IndexedSeq(G__32852__a,0);
} 
return G__32850__delegate.call(this,x,opts);};
G__32850.cljs$lang$maxFixedArity = 1;
G__32850.cljs$lang$applyTo = (function (arglist__32853){
var x = cljs.core.first(arglist__32853);
var opts = cljs.core.rest(arglist__32853);
return G__32850__delegate(x,opts);
});
G__32850.cljs$core$IFn$_invoke$arity$variadic = G__32850__delegate;
return G__32850;
})()
;
js__GT_clj = function(x,var_args){
var opts = var_args;
switch(arguments.length){
case 1:
return js__GT_clj__1.call(this,x);
default:
var G__32854 = null;
if (arguments.length > 1) {
var G__32855__i = 0, G__32855__a = new Array(arguments.length -  1);
while (G__32855__i < G__32855__a.length) {G__32855__a[G__32855__i] = arguments[G__32855__i + 1]; ++G__32855__i;}
G__32854 = new cljs.core.IndexedSeq(G__32855__a,0);
}
return js__GT_clj__2.cljs$core$IFn$_invoke$arity$variadic(x, G__32854);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
js__GT_clj.cljs$lang$maxFixedArity = 1;
js__GT_clj.cljs$lang$applyTo = js__GT_clj__2.cljs$lang$applyTo;
js__GT_clj.cljs$core$IFn$_invoke$arity$1 = js__GT_clj__1;
js__GT_clj.cljs$core$IFn$_invoke$arity$variadic = js__GT_clj__2.cljs$core$IFn$_invoke$arity$variadic;
return js__GT_clj;
})()
;
/**
* Returns a memoized version of a referentially transparent function. The
* memoized version of the function keeps a cache of the mapping from arguments
* to results and, when calls with the same arguments are repeated often, has
* higher performance at the expense of higher memory use.
*/
cljs.core.memoize = (function memoize(f){
var mem = (function (){var G__32858 = cljs.core.PersistentArrayMap.EMPTY;
return (cljs.core.atom.cljs$core$IFn$_invoke$arity$1 ? cljs.core.atom.cljs$core$IFn$_invoke$arity$1(G__32858) : cljs.core.atom.call(null,G__32858));
})();
return ((function (mem){
return (function() { 
var G__32860__delegate = function (args){
var v = cljs.core.get.cljs$core$IFn$_invoke$arity$3((function (){var G__32859 = mem;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__32859) : cljs.core.deref.call(null,G__32859));
})(),args,cljs.core.lookup_sentinel);
if((v === cljs.core.lookup_sentinel)){
var ret = cljs.core.apply.cljs$core$IFn$_invoke$arity$2(f,args);
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(mem,cljs.core.assoc,args,ret);

return ret;
} else {
return v;
}
};
var G__32860 = function (var_args){
var args = null;
if (arguments.length > 0) {
var G__32861__i = 0, G__32861__a = new Array(arguments.length -  0);
while (G__32861__i < G__32861__a.length) {G__32861__a[G__32861__i] = arguments[G__32861__i + 0]; ++G__32861__i;}
  args = new cljs.core.IndexedSeq(G__32861__a,0);
} 
return G__32860__delegate.call(this,args);};
G__32860.cljs$lang$maxFixedArity = 0;
G__32860.cljs$lang$applyTo = (function (arglist__32862){
var args = cljs.core.seq(arglist__32862);
return G__32860__delegate(args);
});
G__32860.cljs$core$IFn$_invoke$arity$variadic = G__32860__delegate;
return G__32860;
})()
;
;})(mem))
});
/**
* trampoline can be used to convert algorithms requiring mutual
* recursion without stack consumption. Calls f with supplied args, if
* any. If f returns a fn, calls that fn with no arguments, and
* continues to repeat, until the return value is not a fn, then
* returns that non-fn value. Note that if you want to return a fn as a
* final value, you must wrap it in some data structure and unpack it
* after trampoline returns.
* @param {...*} var_args
*/
cljs.core.trampoline = (function() {
var trampoline = null;
var trampoline__1 = (function (f){
while(true){
var ret = (function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})();
if(cljs.core.fn_QMARK_(ret)){
var G__32864 = ret;
f = G__32864;
continue;
} else {
return ret;
}
break;
}
});
var trampoline__2 = (function() { 
var G__32865__delegate = function (f,args){
return trampoline.cljs$core$IFn$_invoke$arity$1((function (){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$2(f,args);
}));
};
var G__32865 = function (f,var_args){
var args = null;
if (arguments.length > 1) {
var G__32866__i = 0, G__32866__a = new Array(arguments.length -  1);
while (G__32866__i < G__32866__a.length) {G__32866__a[G__32866__i] = arguments[G__32866__i + 1]; ++G__32866__i;}
  args = new cljs.core.IndexedSeq(G__32866__a,0);
} 
return G__32865__delegate.call(this,f,args);};
G__32865.cljs$lang$maxFixedArity = 1;
G__32865.cljs$lang$applyTo = (function (arglist__32867){
var f = cljs.core.first(arglist__32867);
var args = cljs.core.rest(arglist__32867);
return G__32865__delegate(f,args);
});
G__32865.cljs$core$IFn$_invoke$arity$variadic = G__32865__delegate;
return G__32865;
})()
;
trampoline = function(f,var_args){
var args = var_args;
switch(arguments.length){
case 1:
return trampoline__1.call(this,f);
default:
var G__32868 = null;
if (arguments.length > 1) {
var G__32869__i = 0, G__32869__a = new Array(arguments.length -  1);
while (G__32869__i < G__32869__a.length) {G__32869__a[G__32869__i] = arguments[G__32869__i + 1]; ++G__32869__i;}
G__32868 = new cljs.core.IndexedSeq(G__32869__a,0);
}
return trampoline__2.cljs$core$IFn$_invoke$arity$variadic(f, G__32868);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
trampoline.cljs$lang$maxFixedArity = 1;
trampoline.cljs$lang$applyTo = trampoline__2.cljs$lang$applyTo;
trampoline.cljs$core$IFn$_invoke$arity$1 = trampoline__1;
trampoline.cljs$core$IFn$_invoke$arity$variadic = trampoline__2.cljs$core$IFn$_invoke$arity$variadic;
return trampoline;
})()
;
/**
* Returns a random floating point number between 0 (inclusive) and
* n (default 1) (exclusive).
*/
cljs.core.rand = (function() {
var rand = null;
var rand__0 = (function (){
return rand.cljs$core$IFn$_invoke$arity$1((1));
});
var rand__1 = (function (n){
return ((function (){return (Math.random.cljs$core$IFn$_invoke$arity$0 ? Math.random.cljs$core$IFn$_invoke$arity$0() : Math.random.call(null));
})() * n);
});
rand = function(n){
switch(arguments.length){
case 0:
return rand__0.call(this);
case 1:
return rand__1.call(this,n);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
rand.cljs$core$IFn$_invoke$arity$0 = rand__0;
rand.cljs$core$IFn$_invoke$arity$1 = rand__1;
return rand;
})()
;
/**
* Returns a random integer between 0 (inclusive) and n (exclusive).
*/
cljs.core.rand_int = (function rand_int(n){
var G__32872 = ((function (){return (Math.random.cljs$core$IFn$_invoke$arity$0 ? Math.random.cljs$core$IFn$_invoke$arity$0() : Math.random.call(null));
})() * n);
return (Math.floor.cljs$core$IFn$_invoke$arity$1 ? Math.floor.cljs$core$IFn$_invoke$arity$1(G__32872) : Math.floor.call(null,G__32872));
});
/**
* Return a random element of the (sequential) collection. Will have
* the same performance characteristics as nth for the given
* collection.
*/
cljs.core.rand_nth = (function rand_nth(coll){
return cljs.core.nth.cljs$core$IFn$_invoke$arity$2(coll,cljs.core.rand_int(cljs.core.count(coll)));
});
/**
* Returns a map of the elements of coll keyed by the result of
* f on each element. The value at each key will be a vector of the
* corresponding elements, in the order they appeared in coll.
*/
cljs.core.group_by = (function group_by(f,coll){
return cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (ret,x){
var k = (function (){var G__32874 = x;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__32874) : f.call(null,G__32874));
})();
return cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(ret,k,cljs.core.conj.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$3(ret,k,cljs.core.PersistentVector.EMPTY),x));
}),cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY),coll));
});
/**
* Creates a hierarchy object for use with derive, isa? etc.
*/
cljs.core.make_hierarchy = (function make_hierarchy(){
return new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,"parents","parents",-2027538891),cljs.core.PersistentArrayMap.EMPTY,new cljs.core.Keyword(null,"descendants","descendants",1824886031),cljs.core.PersistentArrayMap.EMPTY,new cljs.core.Keyword(null,"ancestors","ancestors",-776045424),cljs.core.PersistentArrayMap.EMPTY], null);
});
cljs.core._global_hierarchy = null;
cljs.core.get_global_hierarchy = (function get_global_hierarchy(){
if((cljs.core._global_hierarchy == null)){
cljs.core._global_hierarchy = (function (){var G__32876 = cljs.core.make_hierarchy();
return (cljs.core.atom.cljs$core$IFn$_invoke$arity$1 ? cljs.core.atom.cljs$core$IFn$_invoke$arity$1(G__32876) : cljs.core.atom.call(null,G__32876));
})();
} else {
}

return cljs.core._global_hierarchy;
});
/**
* @param {...*} var_args
*/
cljs.core.swap_global_hierarchy_BANG_ = (function() { 
var swap_global_hierarchy_BANG___delegate = function (f,args){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$4(cljs.core.swap_BANG_,cljs.core.get_global_hierarchy(),f,args);
};
var swap_global_hierarchy_BANG_ = function (f,var_args){
var args = null;
if (arguments.length > 1) {
var G__32877__i = 0, G__32877__a = new Array(arguments.length -  1);
while (G__32877__i < G__32877__a.length) {G__32877__a[G__32877__i] = arguments[G__32877__i + 1]; ++G__32877__i;}
  args = new cljs.core.IndexedSeq(G__32877__a,0);
} 
return swap_global_hierarchy_BANG___delegate.call(this,f,args);};
swap_global_hierarchy_BANG_.cljs$lang$maxFixedArity = 1;
swap_global_hierarchy_BANG_.cljs$lang$applyTo = (function (arglist__32878){
var f = cljs.core.first(arglist__32878);
var args = cljs.core.rest(arglist__32878);
return swap_global_hierarchy_BANG___delegate(f,args);
});
swap_global_hierarchy_BANG_.cljs$core$IFn$_invoke$arity$variadic = swap_global_hierarchy_BANG___delegate;
return swap_global_hierarchy_BANG_;
})()
;
/**
* Returns true if (= child parent), or child is directly or indirectly derived from
* parent, either via a JavaScript type inheritance relationship or a
* relationship established via derive. h must be a hierarchy obtained
* from make-hierarchy, if not supplied defaults to the global
* hierarchy
*/
cljs.core.isa_QMARK_ = (function() {
var isa_QMARK_ = null;
var isa_QMARK___2 = (function (child,parent){
return isa_QMARK_.cljs$core$IFn$_invoke$arity$3((function (){var G__32943 = cljs.core.get_global_hierarchy();
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__32943) : cljs.core.deref.call(null,G__32943));
})(),child,parent);
});
var isa_QMARK___3 = (function (h,child,parent){
var or__24274__auto__ = cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(child,parent);
if(or__24274__auto__){
return or__24274__auto__;
} else {
var or__24274__auto____$1 = cljs.core.contains_QMARK_(new cljs.core.Keyword(null,"ancestors","ancestors",-776045424).cljs$core$IFn$_invoke$arity$1(h).call(null,child),parent);
if(or__24274__auto____$1){
return or__24274__auto____$1;
} else {
var and__24262__auto__ = cljs.core.vector_QMARK_(parent);
if(and__24262__auto__){
var and__24262__auto____$1 = cljs.core.vector_QMARK_(child);
if(and__24262__auto____$1){
var and__24262__auto____$2 = (cljs.core.count(parent) === cljs.core.count(child));
if(and__24262__auto____$2){
var ret = true;
var i = (0);
while(true){
if((!(ret)) || ((i === cljs.core.count(parent)))){
return ret;
} else {
var G__32968 = isa_QMARK_.cljs$core$IFn$_invoke$arity$3(h,(function (){var G__32966 = i;
return (child.cljs$core$IFn$_invoke$arity$1 ? child.cljs$core$IFn$_invoke$arity$1(G__32966) : child.call(null,G__32966));
})(),(function (){var G__32967 = i;
return (parent.cljs$core$IFn$_invoke$arity$1 ? parent.cljs$core$IFn$_invoke$arity$1(G__32967) : parent.call(null,G__32967));
})());
var G__32969 = (i + (1));
ret = G__32968;
i = G__32969;
continue;
}
break;
}
} else {
return and__24262__auto____$2;
}
} else {
return and__24262__auto____$1;
}
} else {
return and__24262__auto__;
}
}
}
});
isa_QMARK_ = function(h,child,parent){
switch(arguments.length){
case 2:
return isa_QMARK___2.call(this,h,child);
case 3:
return isa_QMARK___3.call(this,h,child,parent);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
isa_QMARK_.cljs$core$IFn$_invoke$arity$2 = isa_QMARK___2;
isa_QMARK_.cljs$core$IFn$_invoke$arity$3 = isa_QMARK___3;
return isa_QMARK_;
})()
;
/**
* Returns the immediate parents of tag, either via a JavaScript type
* inheritance relationship or a relationship established via derive. h
* must be a hierarchy obtained from make-hierarchy, if not supplied
* defaults to the global hierarchy
*/
cljs.core.parents = (function() {
var parents = null;
var parents__1 = (function (tag){
return parents.cljs$core$IFn$_invoke$arity$2((function (){var G__32973 = cljs.core.get_global_hierarchy();
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__32973) : cljs.core.deref.call(null,G__32973));
})(),tag);
});
var parents__2 = (function (h,tag){
return cljs.core.not_empty(cljs.core.get.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,"parents","parents",-2027538891).cljs$core$IFn$_invoke$arity$1(h),tag));
});
parents = function(h,tag){
switch(arguments.length){
case 1:
return parents__1.call(this,h);
case 2:
return parents__2.call(this,h,tag);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
parents.cljs$core$IFn$_invoke$arity$1 = parents__1;
parents.cljs$core$IFn$_invoke$arity$2 = parents__2;
return parents;
})()
;
/**
* Returns the immediate and indirect parents of tag, either via a JavaScript type
* inheritance relationship or a relationship established via derive. h
* must be a hierarchy obtained from make-hierarchy, if not supplied
* defaults to the global hierarchy
*/
cljs.core.ancestors = (function() {
var ancestors = null;
var ancestors__1 = (function (tag){
return ancestors.cljs$core$IFn$_invoke$arity$2((function (){var G__32977 = cljs.core.get_global_hierarchy();
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__32977) : cljs.core.deref.call(null,G__32977));
})(),tag);
});
var ancestors__2 = (function (h,tag){
return cljs.core.not_empty(cljs.core.get.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,"ancestors","ancestors",-776045424).cljs$core$IFn$_invoke$arity$1(h),tag));
});
ancestors = function(h,tag){
switch(arguments.length){
case 1:
return ancestors__1.call(this,h);
case 2:
return ancestors__2.call(this,h,tag);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
ancestors.cljs$core$IFn$_invoke$arity$1 = ancestors__1;
ancestors.cljs$core$IFn$_invoke$arity$2 = ancestors__2;
return ancestors;
})()
;
/**
* Returns the immediate and indirect children of tag, through a
* relationship established via derive. h must be a hierarchy obtained
* from make-hierarchy, if not supplied defaults to the global
* hierarchy. Note: does not work on JavaScript type inheritance
* relationships.
*/
cljs.core.descendants = (function() {
var descendants = null;
var descendants__1 = (function (tag){
return descendants.cljs$core$IFn$_invoke$arity$2((function (){var G__32981 = cljs.core.get_global_hierarchy();
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__32981) : cljs.core.deref.call(null,G__32981));
})(),tag);
});
var descendants__2 = (function (h,tag){
return cljs.core.not_empty(cljs.core.get.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,"descendants","descendants",1824886031).cljs$core$IFn$_invoke$arity$1(h),tag));
});
descendants = function(h,tag){
switch(arguments.length){
case 1:
return descendants__1.call(this,h);
case 2:
return descendants__2.call(this,h,tag);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
descendants.cljs$core$IFn$_invoke$arity$1 = descendants__1;
descendants.cljs$core$IFn$_invoke$arity$2 = descendants__2;
return descendants;
})()
;
/**
* Establishes a parent/child relationship between parent and
* tag. Parent must be a namespace-qualified symbol or keyword and
* child can be either a namespace-qualified symbol or keyword or a
* class. h must be a hierarchy obtained from make-hierarchy, if not
* supplied defaults to, and modifies, the global hierarchy.
*/
cljs.core.derive = (function() {
var derive = null;
var derive__2 = (function (tag,parent){
if(cljs.core.truth_(cljs.core.namespace(parent))){
} else {
throw (new Error([cljs.core.str("Assert failed: "),cljs.core.str(cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.list(new cljs.core.Symbol(null,"namespace","namespace",1263021155,null),new cljs.core.Symbol(null,"parent","parent",761652748,null))], 0)))].join('')));
}

cljs.core.swap_global_hierarchy_BANG_.cljs$core$IFn$_invoke$arity$variadic(derive,cljs.core.array_seq([tag,parent], 0));

return null;
});
var derive__3 = (function (h,tag,parent){
if(cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2(tag,parent)){
} else {
throw (new Error([cljs.core.str("Assert failed: "),cljs.core.str(cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.list(new cljs.core.Symbol(null,"not=","not=",1466536204,null),new cljs.core.Symbol(null,"tag","tag",350170304,null),new cljs.core.Symbol(null,"parent","parent",761652748,null))], 0)))].join('')));
}

var tp = new cljs.core.Keyword(null,"parents","parents",-2027538891).cljs$core$IFn$_invoke$arity$1(h);
var td = new cljs.core.Keyword(null,"descendants","descendants",1824886031).cljs$core$IFn$_invoke$arity$1(h);
var ta = new cljs.core.Keyword(null,"ancestors","ancestors",-776045424).cljs$core$IFn$_invoke$arity$1(h);
var tf = ((function (tp,td,ta){
return (function (m,source,sources,target,targets){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (tp,td,ta){
return (function (ret,k){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(ret,k,cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.conj,cljs.core.get.cljs$core$IFn$_invoke$arity$3(targets,k,cljs.core.PersistentHashSet.EMPTY),cljs.core.cons(target,(function (){var G__32990 = target;
return (targets.cljs$core$IFn$_invoke$arity$1 ? targets.cljs$core$IFn$_invoke$arity$1(G__32990) : targets.call(null,G__32990));
})())));
});})(tp,td,ta))
,m,cljs.core.cons(source,(function (){var G__32991 = source;
return (sources.cljs$core$IFn$_invoke$arity$1 ? sources.cljs$core$IFn$_invoke$arity$1(G__32991) : sources.call(null,G__32991));
})()));
});})(tp,td,ta))
;
var or__24274__auto__ = ((cljs.core.contains_QMARK_((function (){var G__32995 = tag;
return (tp.cljs$core$IFn$_invoke$arity$1 ? tp.cljs$core$IFn$_invoke$arity$1(G__32995) : tp.call(null,G__32995));
})(),parent))?null:(function (){
if(cljs.core.contains_QMARK_((function (){var G__32996 = tag;
return (ta.cljs$core$IFn$_invoke$arity$1 ? ta.cljs$core$IFn$_invoke$arity$1(G__32996) : ta.call(null,G__32996));
})(),parent)){
throw (new Error([cljs.core.str(tag),cljs.core.str("already has"),cljs.core.str(parent),cljs.core.str("as ancestor")].join('')));
} else {
}

if(cljs.core.contains_QMARK_((function (){var G__32997 = parent;
return (ta.cljs$core$IFn$_invoke$arity$1 ? ta.cljs$core$IFn$_invoke$arity$1(G__32997) : ta.call(null,G__32997));
})(),tag)){
throw (new Error([cljs.core.str("Cyclic derivation:"),cljs.core.str(parent),cljs.core.str("has"),cljs.core.str(tag),cljs.core.str("as ancestor")].join('')));
} else {
}

return new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,"parents","parents",-2027538891),cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(new cljs.core.Keyword(null,"parents","parents",-2027538891).cljs$core$IFn$_invoke$arity$1(h),tag,cljs.core.conj.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$3(tp,tag,cljs.core.PersistentHashSet.EMPTY),parent)),new cljs.core.Keyword(null,"ancestors","ancestors",-776045424),tf(new cljs.core.Keyword(null,"ancestors","ancestors",-776045424).cljs$core$IFn$_invoke$arity$1(h),tag,td,parent,ta),new cljs.core.Keyword(null,"descendants","descendants",1824886031),tf(new cljs.core.Keyword(null,"descendants","descendants",1824886031).cljs$core$IFn$_invoke$arity$1(h),parent,ta,tag,td)], null);
})()
);
if(cljs.core.truth_(or__24274__auto__)){
return or__24274__auto__;
} else {
return h;
}
});
derive = function(h,tag,parent){
switch(arguments.length){
case 2:
return derive__2.call(this,h,tag);
case 3:
return derive__3.call(this,h,tag,parent);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
derive.cljs$core$IFn$_invoke$arity$2 = derive__2;
derive.cljs$core$IFn$_invoke$arity$3 = derive__3;
return derive;
})()
;
/**
* Removes a parent/child relationship between parent and
* tag. h must be a hierarchy obtained from make-hierarchy, if not
* supplied defaults to, and modifies, the global hierarchy.
*/
cljs.core.underive = (function() {
var underive = null;
var underive__2 = (function (tag,parent){
cljs.core.swap_global_hierarchy_BANG_.cljs$core$IFn$_invoke$arity$variadic(underive,cljs.core.array_seq([tag,parent], 0));

return null;
});
var underive__3 = (function (h,tag,parent){
var parentMap = new cljs.core.Keyword(null,"parents","parents",-2027538891).cljs$core$IFn$_invoke$arity$1(h);
var childsParents = (cljs.core.truth_((function (){var G__33004 = tag;
return (parentMap.cljs$core$IFn$_invoke$arity$1 ? parentMap.cljs$core$IFn$_invoke$arity$1(G__33004) : parentMap.call(null,G__33004));
})())?cljs.core.disj.cljs$core$IFn$_invoke$arity$2((function (){var G__33005 = tag;
return (parentMap.cljs$core$IFn$_invoke$arity$1 ? parentMap.cljs$core$IFn$_invoke$arity$1(G__33005) : parentMap.call(null,G__33005));
})(),parent):cljs.core.PersistentHashSet.EMPTY);
var newParents = (cljs.core.truth_(cljs.core.not_empty(childsParents))?cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(parentMap,tag,childsParents):cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(parentMap,tag));
var deriv_seq = cljs.core.flatten(cljs.core.map.cljs$core$IFn$_invoke$arity$2(((function (parentMap,childsParents,newParents){
return (function (p1__32998_SHARP_){
return cljs.core.cons(cljs.core.first(p1__32998_SHARP_),cljs.core.interpose(cljs.core.first(p1__32998_SHARP_),cljs.core.second(p1__32998_SHARP_)));
});})(parentMap,childsParents,newParents))
,cljs.core.seq(newParents)));
if(cljs.core.contains_QMARK_((function (){var G__33006 = tag;
return (parentMap.cljs$core$IFn$_invoke$arity$1 ? parentMap.cljs$core$IFn$_invoke$arity$1(G__33006) : parentMap.call(null,G__33006));
})(),parent)){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (parentMap,childsParents,newParents,deriv_seq){
return (function (p1__32999_SHARP_,p2__33000_SHARP_){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$3(cljs.core.derive,p1__32999_SHARP_,p2__33000_SHARP_);
});})(parentMap,childsParents,newParents,deriv_seq))
,cljs.core.make_hierarchy(),cljs.core.partition.cljs$core$IFn$_invoke$arity$2((2),deriv_seq));
} else {
return h;
}
});
underive = function(h,tag,parent){
switch(arguments.length){
case 2:
return underive__2.call(this,h,tag);
case 3:
return underive__3.call(this,h,tag,parent);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
underive.cljs$core$IFn$_invoke$arity$2 = underive__2;
underive.cljs$core$IFn$_invoke$arity$3 = underive__3;
return underive;
})()
;
cljs.core.reset_cache = (function reset_cache(method_cache,method_table,cached_hierarchy,hierarchy){
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(method_cache,(function (_){
var G__33009 = method_table;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__33009) : cljs.core.deref.call(null,G__33009));
}));

return cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(cached_hierarchy,(function (_){
var G__33010 = hierarchy;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__33010) : cljs.core.deref.call(null,G__33010));
}));
});
cljs.core.prefers_STAR_ = (function prefers_STAR_(x,y,prefer_table){
var xprefs = (function (){var G__33026 = prefer_table;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__33026) : cljs.core.deref.call(null,G__33026));
})().call(null,x);
var or__24274__auto__ = (cljs.core.truth_((function (){var and__24262__auto__ = xprefs;
if(cljs.core.truth_(and__24262__auto__)){
var G__33028 = y;
return (xprefs.cljs$core$IFn$_invoke$arity$1 ? xprefs.cljs$core$IFn$_invoke$arity$1(G__33028) : xprefs.call(null,G__33028));
} else {
return and__24262__auto__;
}
})())?true:null);
if(cljs.core.truth_(or__24274__auto__)){
return or__24274__auto__;
} else {
var or__24274__auto____$1 = (function (){var ps = cljs.core.parents.cljs$core$IFn$_invoke$arity$1(y);
while(true){
if((cljs.core.count(ps) > (0))){
if(cljs.core.truth_(prefers_STAR_(x,cljs.core.first(ps),prefer_table))){
} else {
}

var G__33029 = cljs.core.rest(ps);
ps = G__33029;
continue;
} else {
return null;
}
break;
}
})();
if(cljs.core.truth_(or__24274__auto____$1)){
return or__24274__auto____$1;
} else {
var or__24274__auto____$2 = (function (){var ps = cljs.core.parents.cljs$core$IFn$_invoke$arity$1(x);
while(true){
if((cljs.core.count(ps) > (0))){
if(cljs.core.truth_(prefers_STAR_(cljs.core.first(ps),y,prefer_table))){
} else {
}

var G__33030 = cljs.core.rest(ps);
ps = G__33030;
continue;
} else {
return null;
}
break;
}
})();
if(cljs.core.truth_(or__24274__auto____$2)){
return or__24274__auto____$2;
} else {
return false;
}
}
}
});
cljs.core.dominates = (function dominates(x,y,prefer_table){
var or__24274__auto__ = cljs.core.prefers_STAR_(x,y,prefer_table);
if(cljs.core.truth_(or__24274__auto__)){
return or__24274__auto__;
} else {
return cljs.core.isa_QMARK_.cljs$core$IFn$_invoke$arity$2(x,y);
}
});
cljs.core.find_and_cache_best_method = (function find_and_cache_best_method(name,dispatch_val,hierarchy,method_table,prefer_table,method_cache,cached_hierarchy){
var best_entry = cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (be,p__33044){
var vec__33045 = p__33044;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__33045,(0),null);
var _ = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__33045,(1),null);
var e = vec__33045;
if(cljs.core.isa_QMARK_.cljs$core$IFn$_invoke$arity$3((function (){var G__33046 = hierarchy;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__33046) : cljs.core.deref.call(null,G__33046));
})(),dispatch_val,k)){
var be2 = (cljs.core.truth_((function (){var or__24274__auto__ = (be == null);
if(or__24274__auto__){
return or__24274__auto__;
} else {
return cljs.core.dominates(k,cljs.core.first(be),prefer_table);
}
})())?e:be);
if(cljs.core.truth_(cljs.core.dominates(cljs.core.first(be2),k,prefer_table))){
} else {
throw (new Error([cljs.core.str("Multiple methods in multimethod '"),cljs.core.str(name),cljs.core.str("' match dispatch value: "),cljs.core.str(dispatch_val),cljs.core.str(" -> "),cljs.core.str(k),cljs.core.str(" and "),cljs.core.str(cljs.core.first(be2)),cljs.core.str(", and neither is preferred")].join('')));
}

return be2;
} else {
return be;
}
}),null,(function (){var G__33047 = method_table;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__33047) : cljs.core.deref.call(null,G__33047));
})());
if(cljs.core.truth_(best_entry)){
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2((function (){var G__33048 = cached_hierarchy;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__33048) : cljs.core.deref.call(null,G__33048));
})(),(function (){var G__33049 = hierarchy;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__33049) : cljs.core.deref.call(null,G__33049));
})())){
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(method_cache,cljs.core.assoc,dispatch_val,cljs.core.second(best_entry));

return cljs.core.second(best_entry);
} else {
cljs.core.reset_cache(method_cache,method_table,cached_hierarchy,hierarchy);

return find_and_cache_best_method(name,dispatch_val,hierarchy,method_table,prefer_table,method_cache,cached_hierarchy);
}
} else {
return null;
}
});

cljs.core.IMultiFn = (function (){var obj33051 = {};
return obj33051;
})();

cljs.core._reset = (function _reset(mf){
if((function (){var and__24262__auto__ = mf;
if(and__24262__auto__){
return mf.cljs$core$IMultiFn$_reset$arity$1;
} else {
return and__24262__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_reset$arity$1(mf);
} else {
var x__24918__auto__ = (((mf == null))?null:mf);
return (function (){var or__24274__auto__ = (cljs.core._reset[(function (){var G__33055 = x__24918__auto__;
return goog.typeOf(G__33055);
})()]);
if(or__24274__auto__){
return or__24274__auto__;
} else {
var or__24274__auto____$1 = (cljs.core._reset["_"]);
if(or__24274__auto____$1){
return or__24274__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-reset",mf);
}
}
})().call(null,mf);
}
});

cljs.core._add_method = (function _add_method(mf,dispatch_val,method){
if((function (){var and__24262__auto__ = mf;
if(and__24262__auto__){
return mf.cljs$core$IMultiFn$_add_method$arity$3;
} else {
return and__24262__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_add_method$arity$3(mf,dispatch_val,method);
} else {
var x__24918__auto__ = (((mf == null))?null:mf);
return (function (){var or__24274__auto__ = (cljs.core._add_method[(function (){var G__33059 = x__24918__auto__;
return goog.typeOf(G__33059);
})()]);
if(or__24274__auto__){
return or__24274__auto__;
} else {
var or__24274__auto____$1 = (cljs.core._add_method["_"]);
if(or__24274__auto____$1){
return or__24274__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-add-method",mf);
}
}
})().call(null,mf,dispatch_val,method);
}
});

cljs.core._remove_method = (function _remove_method(mf,dispatch_val){
if((function (){var and__24262__auto__ = mf;
if(and__24262__auto__){
return mf.cljs$core$IMultiFn$_remove_method$arity$2;
} else {
return and__24262__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_remove_method$arity$2(mf,dispatch_val);
} else {
var x__24918__auto__ = (((mf == null))?null:mf);
return (function (){var or__24274__auto__ = (cljs.core._remove_method[(function (){var G__33063 = x__24918__auto__;
return goog.typeOf(G__33063);
})()]);
if(or__24274__auto__){
return or__24274__auto__;
} else {
var or__24274__auto____$1 = (cljs.core._remove_method["_"]);
if(or__24274__auto____$1){
return or__24274__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-remove-method",mf);
}
}
})().call(null,mf,dispatch_val);
}
});

cljs.core._prefer_method = (function _prefer_method(mf,dispatch_val,dispatch_val_y){
if((function (){var and__24262__auto__ = mf;
if(and__24262__auto__){
return mf.cljs$core$IMultiFn$_prefer_method$arity$3;
} else {
return and__24262__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_prefer_method$arity$3(mf,dispatch_val,dispatch_val_y);
} else {
var x__24918__auto__ = (((mf == null))?null:mf);
return (function (){var or__24274__auto__ = (cljs.core._prefer_method[(function (){var G__33067 = x__24918__auto__;
return goog.typeOf(G__33067);
})()]);
if(or__24274__auto__){
return or__24274__auto__;
} else {
var or__24274__auto____$1 = (cljs.core._prefer_method["_"]);
if(or__24274__auto____$1){
return or__24274__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-prefer-method",mf);
}
}
})().call(null,mf,dispatch_val,dispatch_val_y);
}
});

cljs.core._get_method = (function _get_method(mf,dispatch_val){
if((function (){var and__24262__auto__ = mf;
if(and__24262__auto__){
return mf.cljs$core$IMultiFn$_get_method$arity$2;
} else {
return and__24262__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_get_method$arity$2(mf,dispatch_val);
} else {
var x__24918__auto__ = (((mf == null))?null:mf);
return (function (){var or__24274__auto__ = (cljs.core._get_method[(function (){var G__33071 = x__24918__auto__;
return goog.typeOf(G__33071);
})()]);
if(or__24274__auto__){
return or__24274__auto__;
} else {
var or__24274__auto____$1 = (cljs.core._get_method["_"]);
if(or__24274__auto____$1){
return or__24274__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-get-method",mf);
}
}
})().call(null,mf,dispatch_val);
}
});

cljs.core._methods = (function _methods(mf){
if((function (){var and__24262__auto__ = mf;
if(and__24262__auto__){
return mf.cljs$core$IMultiFn$_methods$arity$1;
} else {
return and__24262__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_methods$arity$1(mf);
} else {
var x__24918__auto__ = (((mf == null))?null:mf);
return (function (){var or__24274__auto__ = (cljs.core._methods[(function (){var G__33075 = x__24918__auto__;
return goog.typeOf(G__33075);
})()]);
if(or__24274__auto__){
return or__24274__auto__;
} else {
var or__24274__auto____$1 = (cljs.core._methods["_"]);
if(or__24274__auto____$1){
return or__24274__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-methods",mf);
}
}
})().call(null,mf);
}
});

cljs.core._prefers = (function _prefers(mf){
if((function (){var and__24262__auto__ = mf;
if(and__24262__auto__){
return mf.cljs$core$IMultiFn$_prefers$arity$1;
} else {
return and__24262__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_prefers$arity$1(mf);
} else {
var x__24918__auto__ = (((mf == null))?null:mf);
return (function (){var or__24274__auto__ = (cljs.core._prefers[(function (){var G__33079 = x__24918__auto__;
return goog.typeOf(G__33079);
})()]);
if(or__24274__auto__){
return or__24274__auto__;
} else {
var or__24274__auto____$1 = (cljs.core._prefers["_"]);
if(or__24274__auto____$1){
return or__24274__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-prefers",mf);
}
}
})().call(null,mf);
}
});

cljs.core.throw_no_method_error = (function throw_no_method_error(name,dispatch_val){
throw (new Error([cljs.core.str("No method in multimethod '"),cljs.core.str(name),cljs.core.str("' for dispatch value: "),cljs.core.str(dispatch_val)].join('')));
});

/**
* @constructor
*/
cljs.core.MultiFn = (function (name,dispatch_fn,default_dispatch_val,hierarchy,method_table,prefer_table,method_cache,cached_hierarchy){
this.name = name;
this.dispatch_fn = dispatch_fn;
this.default_dispatch_val = default_dispatch_val;
this.hierarchy = hierarchy;
this.method_table = method_table;
this.prefer_table = prefer_table;
this.method_cache = method_cache;
this.cached_hierarchy = cached_hierarchy;
this.cljs$lang$protocol_mask$partition0$ = 4194305;
this.cljs$lang$protocol_mask$partition1$ = 4352;
})
cljs.core.MultiFn.prototype.cljs$core$IHash$_hash$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
var G__33081 = this$__$1;
return goog.getUid(G__33081);
});

cljs.core.MultiFn.prototype.cljs$core$INamed$_name$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return cljs.core._name(self__.name);
});

cljs.core.MultiFn.prototype.cljs$core$INamed$_namespace$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return cljs.core._namespace(self__.name);
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_reset$arity$1 = (function (mf){
var self__ = this;
var mf__$1 = this;
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.method_table,((function (mf__$1){
return (function (mf__$2){
return cljs.core.PersistentArrayMap.EMPTY;
});})(mf__$1))
);

cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.method_cache,((function (mf__$1){
return (function (mf__$2){
return cljs.core.PersistentArrayMap.EMPTY;
});})(mf__$1))
);

cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.prefer_table,((function (mf__$1){
return (function (mf__$2){
return cljs.core.PersistentArrayMap.EMPTY;
});})(mf__$1))
);

cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.cached_hierarchy,((function (mf__$1){
return (function (mf__$2){
return null;
});})(mf__$1))
);

return mf__$1;
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_add_method$arity$3 = (function (mf,dispatch_val,method){
var self__ = this;
var mf__$1 = this;
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(self__.method_table,cljs.core.assoc,dispatch_val,method);

cljs.core.reset_cache(self__.method_cache,self__.method_table,self__.cached_hierarchy,self__.hierarchy);

return mf__$1;
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_remove_method$arity$2 = (function (mf,dispatch_val){
var self__ = this;
var mf__$1 = this;
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$3(self__.method_table,cljs.core.dissoc,dispatch_val);

cljs.core.reset_cache(self__.method_cache,self__.method_table,self__.cached_hierarchy,self__.hierarchy);

return mf__$1;
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_get_method$arity$2 = (function (mf,dispatch_val){
var self__ = this;
var mf__$1 = this;
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2((function (){var G__33082 = self__.cached_hierarchy;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__33082) : cljs.core.deref.call(null,G__33082));
})(),(function (){var G__33083 = self__.hierarchy;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__33083) : cljs.core.deref.call(null,G__33083));
})())){
} else {
cljs.core.reset_cache(self__.method_cache,self__.method_table,self__.cached_hierarchy,self__.hierarchy);
}

var temp__4124__auto__ = (function (){var G__33084 = self__.method_cache;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__33084) : cljs.core.deref.call(null,G__33084));
})().call(null,dispatch_val);
if(cljs.core.truth_(temp__4124__auto__)){
var target_fn = temp__4124__auto__;
return target_fn;
} else {
var temp__4124__auto____$1 = cljs.core.find_and_cache_best_method(self__.name,dispatch_val,self__.hierarchy,self__.method_table,self__.prefer_table,self__.method_cache,self__.cached_hierarchy);
if(cljs.core.truth_(temp__4124__auto____$1)){
var target_fn = temp__4124__auto____$1;
return target_fn;
} else {
return (function (){var G__33085 = self__.method_table;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__33085) : cljs.core.deref.call(null,G__33085));
})().call(null,self__.default_dispatch_val);
}
}
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_prefer_method$arity$3 = (function (mf,dispatch_val_x,dispatch_val_y){
var self__ = this;
var mf__$1 = this;
if(cljs.core.truth_(cljs.core.prefers_STAR_(dispatch_val_x,dispatch_val_y,self__.prefer_table))){
throw (new Error([cljs.core.str("Preference conflict in multimethod '"),cljs.core.str(self__.name),cljs.core.str("': "),cljs.core.str(dispatch_val_y),cljs.core.str(" is already preferred to "),cljs.core.str(dispatch_val_x)].join('')));
} else {
}

cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.prefer_table,((function (mf__$1){
return (function (old){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(old,dispatch_val_x,cljs.core.conj.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$3(old,dispatch_val_x,cljs.core.PersistentHashSet.EMPTY),dispatch_val_y));
});})(mf__$1))
);

return cljs.core.reset_cache(self__.method_cache,self__.method_table,self__.cached_hierarchy,self__.hierarchy);
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_methods$arity$1 = (function (mf){
var self__ = this;
var mf__$1 = this;
var G__33086 = self__.method_table;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__33086) : cljs.core.deref.call(null,G__33086));
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_prefers$arity$1 = (function (mf){
var self__ = this;
var mf__$1 = this;
var G__33087 = self__.prefer_table;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__33087) : cljs.core.deref.call(null,G__33087));
});

cljs.core.MultiFn.prototype.call = (function() {
var G__33928 = null;
var G__33928__1 = (function (self__){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$0 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$0() : self__.dispatch_fn.call(null));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

return (target_fn.cljs$core$IFn$_invoke$arity$0 ? target_fn.cljs$core$IFn$_invoke$arity$0() : target_fn.call(null));
});
var G__33928__2 = (function (self__,a){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__33088 = a;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$1 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$1(G__33088) : self__.dispatch_fn.call(null,G__33088));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__33089 = a;
return (target_fn.cljs$core$IFn$_invoke$arity$1 ? target_fn.cljs$core$IFn$_invoke$arity$1(G__33089) : target_fn.call(null,G__33089));
});
var G__33928__3 = (function (self__,a,b){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__33090 = a;
var G__33091 = b;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$2 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$2(G__33090,G__33091) : self__.dispatch_fn.call(null,G__33090,G__33091));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__33092 = a;
var G__33093 = b;
return (target_fn.cljs$core$IFn$_invoke$arity$2 ? target_fn.cljs$core$IFn$_invoke$arity$2(G__33092,G__33093) : target_fn.call(null,G__33092,G__33093));
});
var G__33928__4 = (function (self__,a,b,c){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__33094 = a;
var G__33095 = b;
var G__33096 = c;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$3 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$3(G__33094,G__33095,G__33096) : self__.dispatch_fn.call(null,G__33094,G__33095,G__33096));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__33097 = a;
var G__33098 = b;
var G__33099 = c;
return (target_fn.cljs$core$IFn$_invoke$arity$3 ? target_fn.cljs$core$IFn$_invoke$arity$3(G__33097,G__33098,G__33099) : target_fn.call(null,G__33097,G__33098,G__33099));
});
var G__33928__5 = (function (self__,a,b,c,d){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__33100 = a;
var G__33101 = b;
var G__33102 = c;
var G__33103 = d;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$4 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$4(G__33100,G__33101,G__33102,G__33103) : self__.dispatch_fn.call(null,G__33100,G__33101,G__33102,G__33103));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__33104 = a;
var G__33105 = b;
var G__33106 = c;
var G__33107 = d;
return (target_fn.cljs$core$IFn$_invoke$arity$4 ? target_fn.cljs$core$IFn$_invoke$arity$4(G__33104,G__33105,G__33106,G__33107) : target_fn.call(null,G__33104,G__33105,G__33106,G__33107));
});
var G__33928__6 = (function (self__,a,b,c,d,e){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__33108 = a;
var G__33109 = b;
var G__33110 = c;
var G__33111 = d;
var G__33112 = e;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$5 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$5(G__33108,G__33109,G__33110,G__33111,G__33112) : self__.dispatch_fn.call(null,G__33108,G__33109,G__33110,G__33111,G__33112));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__33113 = a;
var G__33114 = b;
var G__33115 = c;
var G__33116 = d;
var G__33117 = e;
return (target_fn.cljs$core$IFn$_invoke$arity$5 ? target_fn.cljs$core$IFn$_invoke$arity$5(G__33113,G__33114,G__33115,G__33116,G__33117) : target_fn.call(null,G__33113,G__33114,G__33115,G__33116,G__33117));
});
var G__33928__7 = (function (self__,a,b,c,d,e,f){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__33118 = a;
var G__33119 = b;
var G__33120 = c;
var G__33121 = d;
var G__33122 = e;
var G__33123 = f;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$6 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$6(G__33118,G__33119,G__33120,G__33121,G__33122,G__33123) : self__.dispatch_fn.call(null,G__33118,G__33119,G__33120,G__33121,G__33122,G__33123));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__33124 = a;
var G__33125 = b;
var G__33126 = c;
var G__33127 = d;
var G__33128 = e;
var G__33129 = f;
return (target_fn.cljs$core$IFn$_invoke$arity$6 ? target_fn.cljs$core$IFn$_invoke$arity$6(G__33124,G__33125,G__33126,G__33127,G__33128,G__33129) : target_fn.call(null,G__33124,G__33125,G__33126,G__33127,G__33128,G__33129));
});
var G__33928__8 = (function (self__,a,b,c,d,e,f,g){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__33130 = a;
var G__33131 = b;
var G__33132 = c;
var G__33133 = d;
var G__33134 = e;
var G__33135 = f;
var G__33136 = g;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$7 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$7(G__33130,G__33131,G__33132,G__33133,G__33134,G__33135,G__33136) : self__.dispatch_fn.call(null,G__33130,G__33131,G__33132,G__33133,G__33134,G__33135,G__33136));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__33137 = a;
var G__33138 = b;
var G__33139 = c;
var G__33140 = d;
var G__33141 = e;
var G__33142 = f;
var G__33143 = g;
return (target_fn.cljs$core$IFn$_invoke$arity$7 ? target_fn.cljs$core$IFn$_invoke$arity$7(G__33137,G__33138,G__33139,G__33140,G__33141,G__33142,G__33143) : target_fn.call(null,G__33137,G__33138,G__33139,G__33140,G__33141,G__33142,G__33143));
});
var G__33928__9 = (function (self__,a,b,c,d,e,f,g,h){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__33144 = a;
var G__33145 = b;
var G__33146 = c;
var G__33147 = d;
var G__33148 = e;
var G__33149 = f;
var G__33150 = g;
var G__33151 = h;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$8 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$8(G__33144,G__33145,G__33146,G__33147,G__33148,G__33149,G__33150,G__33151) : self__.dispatch_fn.call(null,G__33144,G__33145,G__33146,G__33147,G__33148,G__33149,G__33150,G__33151));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__33152 = a;
var G__33153 = b;
var G__33154 = c;
var G__33155 = d;
var G__33156 = e;
var G__33157 = f;
var G__33158 = g;
var G__33159 = h;
return (target_fn.cljs$core$IFn$_invoke$arity$8 ? target_fn.cljs$core$IFn$_invoke$arity$8(G__33152,G__33153,G__33154,G__33155,G__33156,G__33157,G__33158,G__33159) : target_fn.call(null,G__33152,G__33153,G__33154,G__33155,G__33156,G__33157,G__33158,G__33159));
});
var G__33928__10 = (function (self__,a,b,c,d,e,f,g,h,i){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__33160 = a;
var G__33161 = b;
var G__33162 = c;
var G__33163 = d;
var G__33164 = e;
var G__33165 = f;
var G__33166 = g;
var G__33167 = h;
var G__33168 = i;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$9 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$9(G__33160,G__33161,G__33162,G__33163,G__33164,G__33165,G__33166,G__33167,G__33168) : self__.dispatch_fn.call(null,G__33160,G__33161,G__33162,G__33163,G__33164,G__33165,G__33166,G__33167,G__33168));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__33169 = a;
var G__33170 = b;
var G__33171 = c;
var G__33172 = d;
var G__33173 = e;
var G__33174 = f;
var G__33175 = g;
var G__33176 = h;
var G__33177 = i;
return (target_fn.cljs$core$IFn$_invoke$arity$9 ? target_fn.cljs$core$IFn$_invoke$arity$9(G__33169,G__33170,G__33171,G__33172,G__33173,G__33174,G__33175,G__33176,G__33177) : target_fn.call(null,G__33169,G__33170,G__33171,G__33172,G__33173,G__33174,G__33175,G__33176,G__33177));
});
var G__33928__11 = (function (self__,a,b,c,d,e,f,g,h,i,j){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__33178 = a;
var G__33179 = b;
var G__33180 = c;
var G__33181 = d;
var G__33182 = e;
var G__33183 = f;
var G__33184 = g;
var G__33185 = h;
var G__33186 = i;
var G__33187 = j;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$10 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$10(G__33178,G__33179,G__33180,G__33181,G__33182,G__33183,G__33184,G__33185,G__33186,G__33187) : self__.dispatch_fn.call(null,G__33178,G__33179,G__33180,G__33181,G__33182,G__33183,G__33184,G__33185,G__33186,G__33187));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__33188 = a;
var G__33189 = b;
var G__33190 = c;
var G__33191 = d;
var G__33192 = e;
var G__33193 = f;
var G__33194 = g;
var G__33195 = h;
var G__33196 = i;
var G__33197 = j;
return (target_fn.cljs$core$IFn$_invoke$arity$10 ? target_fn.cljs$core$IFn$_invoke$arity$10(G__33188,G__33189,G__33190,G__33191,G__33192,G__33193,G__33194,G__33195,G__33196,G__33197) : target_fn.call(null,G__33188,G__33189,G__33190,G__33191,G__33192,G__33193,G__33194,G__33195,G__33196,G__33197));
});
var G__33928__12 = (function (self__,a,b,c,d,e,f,g,h,i,j,k){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__33198 = a;
var G__33199 = b;
var G__33200 = c;
var G__33201 = d;
var G__33202 = e;
var G__33203 = f;
var G__33204 = g;
var G__33205 = h;
var G__33206 = i;
var G__33207 = j;
var G__33208 = k;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$11 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$11(G__33198,G__33199,G__33200,G__33201,G__33202,G__33203,G__33204,G__33205,G__33206,G__33207,G__33208) : self__.dispatch_fn.call(null,G__33198,G__33199,G__33200,G__33201,G__33202,G__33203,G__33204,G__33205,G__33206,G__33207,G__33208));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__33209 = a;
var G__33210 = b;
var G__33211 = c;
var G__33212 = d;
var G__33213 = e;
var G__33214 = f;
var G__33215 = g;
var G__33216 = h;
var G__33217 = i;
var G__33218 = j;
var G__33219 = k;
return (target_fn.cljs$core$IFn$_invoke$arity$11 ? target_fn.cljs$core$IFn$_invoke$arity$11(G__33209,G__33210,G__33211,G__33212,G__33213,G__33214,G__33215,G__33216,G__33217,G__33218,G__33219) : target_fn.call(null,G__33209,G__33210,G__33211,G__33212,G__33213,G__33214,G__33215,G__33216,G__33217,G__33218,G__33219));
});
var G__33928__13 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__33220 = a;
var G__33221 = b;
var G__33222 = c;
var G__33223 = d;
var G__33224 = e;
var G__33225 = f;
var G__33226 = g;
var G__33227 = h;
var G__33228 = i;
var G__33229 = j;
var G__33230 = k;
var G__33231 = l;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$12 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$12(G__33220,G__33221,G__33222,G__33223,G__33224,G__33225,G__33226,G__33227,G__33228,G__33229,G__33230,G__33231) : self__.dispatch_fn.call(null,G__33220,G__33221,G__33222,G__33223,G__33224,G__33225,G__33226,G__33227,G__33228,G__33229,G__33230,G__33231));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__33232 = a;
var G__33233 = b;
var G__33234 = c;
var G__33235 = d;
var G__33236 = e;
var G__33237 = f;
var G__33238 = g;
var G__33239 = h;
var G__33240 = i;
var G__33241 = j;
var G__33242 = k;
var G__33243 = l;
return (target_fn.cljs$core$IFn$_invoke$arity$12 ? target_fn.cljs$core$IFn$_invoke$arity$12(G__33232,G__33233,G__33234,G__33235,G__33236,G__33237,G__33238,G__33239,G__33240,G__33241,G__33242,G__33243) : target_fn.call(null,G__33232,G__33233,G__33234,G__33235,G__33236,G__33237,G__33238,G__33239,G__33240,G__33241,G__33242,G__33243));
});
var G__33928__14 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__33244 = a;
var G__33245 = b;
var G__33246 = c;
var G__33247 = d;
var G__33248 = e;
var G__33249 = f;
var G__33250 = g;
var G__33251 = h;
var G__33252 = i;
var G__33253 = j;
var G__33254 = k;
var G__33255 = l;
var G__33256 = m;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$13 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$13(G__33244,G__33245,G__33246,G__33247,G__33248,G__33249,G__33250,G__33251,G__33252,G__33253,G__33254,G__33255,G__33256) : self__.dispatch_fn.call(null,G__33244,G__33245,G__33246,G__33247,G__33248,G__33249,G__33250,G__33251,G__33252,G__33253,G__33254,G__33255,G__33256));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__33257 = a;
var G__33258 = b;
var G__33259 = c;
var G__33260 = d;
var G__33261 = e;
var G__33262 = f;
var G__33263 = g;
var G__33264 = h;
var G__33265 = i;
var G__33266 = j;
var G__33267 = k;
var G__33268 = l;
var G__33269 = m;
return (target_fn.cljs$core$IFn$_invoke$arity$13 ? target_fn.cljs$core$IFn$_invoke$arity$13(G__33257,G__33258,G__33259,G__33260,G__33261,G__33262,G__33263,G__33264,G__33265,G__33266,G__33267,G__33268,G__33269) : target_fn.call(null,G__33257,G__33258,G__33259,G__33260,G__33261,G__33262,G__33263,G__33264,G__33265,G__33266,G__33267,G__33268,G__33269));
});
var G__33928__15 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__33270 = a;
var G__33271 = b;
var G__33272 = c;
var G__33273 = d;
var G__33274 = e;
var G__33275 = f;
var G__33276 = g;
var G__33277 = h;
var G__33278 = i;
var G__33279 = j;
var G__33280 = k;
var G__33281 = l;
var G__33282 = m;
var G__33283 = n;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$14 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$14(G__33270,G__33271,G__33272,G__33273,G__33274,G__33275,G__33276,G__33277,G__33278,G__33279,G__33280,G__33281,G__33282,G__33283) : self__.dispatch_fn.call(null,G__33270,G__33271,G__33272,G__33273,G__33274,G__33275,G__33276,G__33277,G__33278,G__33279,G__33280,G__33281,G__33282,G__33283));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__33284 = a;
var G__33285 = b;
var G__33286 = c;
var G__33287 = d;
var G__33288 = e;
var G__33289 = f;
var G__33290 = g;
var G__33291 = h;
var G__33292 = i;
var G__33293 = j;
var G__33294 = k;
var G__33295 = l;
var G__33296 = m;
var G__33297 = n;
return (target_fn.cljs$core$IFn$_invoke$arity$14 ? target_fn.cljs$core$IFn$_invoke$arity$14(G__33284,G__33285,G__33286,G__33287,G__33288,G__33289,G__33290,G__33291,G__33292,G__33293,G__33294,G__33295,G__33296,G__33297) : target_fn.call(null,G__33284,G__33285,G__33286,G__33287,G__33288,G__33289,G__33290,G__33291,G__33292,G__33293,G__33294,G__33295,G__33296,G__33297));
});
var G__33928__16 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__33298 = a;
var G__33299 = b;
var G__33300 = c;
var G__33301 = d;
var G__33302 = e;
var G__33303 = f;
var G__33304 = g;
var G__33305 = h;
var G__33306 = i;
var G__33307 = j;
var G__33308 = k;
var G__33309 = l;
var G__33310 = m;
var G__33311 = n;
var G__33312 = o;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$15 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$15(G__33298,G__33299,G__33300,G__33301,G__33302,G__33303,G__33304,G__33305,G__33306,G__33307,G__33308,G__33309,G__33310,G__33311,G__33312) : self__.dispatch_fn.call(null,G__33298,G__33299,G__33300,G__33301,G__33302,G__33303,G__33304,G__33305,G__33306,G__33307,G__33308,G__33309,G__33310,G__33311,G__33312));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__33313 = a;
var G__33314 = b;
var G__33315 = c;
var G__33316 = d;
var G__33317 = e;
var G__33318 = f;
var G__33319 = g;
var G__33320 = h;
var G__33321 = i;
var G__33322 = j;
var G__33323 = k;
var G__33324 = l;
var G__33325 = m;
var G__33326 = n;
var G__33327 = o;
return (target_fn.cljs$core$IFn$_invoke$arity$15 ? target_fn.cljs$core$IFn$_invoke$arity$15(G__33313,G__33314,G__33315,G__33316,G__33317,G__33318,G__33319,G__33320,G__33321,G__33322,G__33323,G__33324,G__33325,G__33326,G__33327) : target_fn.call(null,G__33313,G__33314,G__33315,G__33316,G__33317,G__33318,G__33319,G__33320,G__33321,G__33322,G__33323,G__33324,G__33325,G__33326,G__33327));
});
var G__33928__17 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__33328 = a;
var G__33329 = b;
var G__33330 = c;
var G__33331 = d;
var G__33332 = e;
var G__33333 = f;
var G__33334 = g;
var G__33335 = h;
var G__33336 = i;
var G__33337 = j;
var G__33338 = k;
var G__33339 = l;
var G__33340 = m;
var G__33341 = n;
var G__33342 = o;
var G__33343 = p;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$16 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$16(G__33328,G__33329,G__33330,G__33331,G__33332,G__33333,G__33334,G__33335,G__33336,G__33337,G__33338,G__33339,G__33340,G__33341,G__33342,G__33343) : self__.dispatch_fn.call(null,G__33328,G__33329,G__33330,G__33331,G__33332,G__33333,G__33334,G__33335,G__33336,G__33337,G__33338,G__33339,G__33340,G__33341,G__33342,G__33343));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__33344 = a;
var G__33345 = b;
var G__33346 = c;
var G__33347 = d;
var G__33348 = e;
var G__33349 = f;
var G__33350 = g;
var G__33351 = h;
var G__33352 = i;
var G__33353 = j;
var G__33354 = k;
var G__33355 = l;
var G__33356 = m;
var G__33357 = n;
var G__33358 = o;
var G__33359 = p;
return (target_fn.cljs$core$IFn$_invoke$arity$16 ? target_fn.cljs$core$IFn$_invoke$arity$16(G__33344,G__33345,G__33346,G__33347,G__33348,G__33349,G__33350,G__33351,G__33352,G__33353,G__33354,G__33355,G__33356,G__33357,G__33358,G__33359) : target_fn.call(null,G__33344,G__33345,G__33346,G__33347,G__33348,G__33349,G__33350,G__33351,G__33352,G__33353,G__33354,G__33355,G__33356,G__33357,G__33358,G__33359));
});
var G__33928__18 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__33360 = a;
var G__33361 = b;
var G__33362 = c;
var G__33363 = d;
var G__33364 = e;
var G__33365 = f;
var G__33366 = g;
var G__33367 = h;
var G__33368 = i;
var G__33369 = j;
var G__33370 = k;
var G__33371 = l;
var G__33372 = m;
var G__33373 = n;
var G__33374 = o;
var G__33375 = p;
var G__33376 = q;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$17 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$17(G__33360,G__33361,G__33362,G__33363,G__33364,G__33365,G__33366,G__33367,G__33368,G__33369,G__33370,G__33371,G__33372,G__33373,G__33374,G__33375,G__33376) : self__.dispatch_fn.call(null,G__33360,G__33361,G__33362,G__33363,G__33364,G__33365,G__33366,G__33367,G__33368,G__33369,G__33370,G__33371,G__33372,G__33373,G__33374,G__33375,G__33376));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__33377 = a;
var G__33378 = b;
var G__33379 = c;
var G__33380 = d;
var G__33381 = e;
var G__33382 = f;
var G__33383 = g;
var G__33384 = h;
var G__33385 = i;
var G__33386 = j;
var G__33387 = k;
var G__33388 = l;
var G__33389 = m;
var G__33390 = n;
var G__33391 = o;
var G__33392 = p;
var G__33393 = q;
return (target_fn.cljs$core$IFn$_invoke$arity$17 ? target_fn.cljs$core$IFn$_invoke$arity$17(G__33377,G__33378,G__33379,G__33380,G__33381,G__33382,G__33383,G__33384,G__33385,G__33386,G__33387,G__33388,G__33389,G__33390,G__33391,G__33392,G__33393) : target_fn.call(null,G__33377,G__33378,G__33379,G__33380,G__33381,G__33382,G__33383,G__33384,G__33385,G__33386,G__33387,G__33388,G__33389,G__33390,G__33391,G__33392,G__33393));
});
var G__33928__19 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__33394 = a;
var G__33395 = b;
var G__33396 = c;
var G__33397 = d;
var G__33398 = e;
var G__33399 = f;
var G__33400 = g;
var G__33401 = h;
var G__33402 = i;
var G__33403 = j;
var G__33404 = k;
var G__33405 = l;
var G__33406 = m;
var G__33407 = n;
var G__33408 = o;
var G__33409 = p;
var G__33410 = q;
var G__33411 = r;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$18 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$18(G__33394,G__33395,G__33396,G__33397,G__33398,G__33399,G__33400,G__33401,G__33402,G__33403,G__33404,G__33405,G__33406,G__33407,G__33408,G__33409,G__33410,G__33411) : self__.dispatch_fn.call(null,G__33394,G__33395,G__33396,G__33397,G__33398,G__33399,G__33400,G__33401,G__33402,G__33403,G__33404,G__33405,G__33406,G__33407,G__33408,G__33409,G__33410,G__33411));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__33412 = a;
var G__33413 = b;
var G__33414 = c;
var G__33415 = d;
var G__33416 = e;
var G__33417 = f;
var G__33418 = g;
var G__33419 = h;
var G__33420 = i;
var G__33421 = j;
var G__33422 = k;
var G__33423 = l;
var G__33424 = m;
var G__33425 = n;
var G__33426 = o;
var G__33427 = p;
var G__33428 = q;
var G__33429 = r;
return (target_fn.cljs$core$IFn$_invoke$arity$18 ? target_fn.cljs$core$IFn$_invoke$arity$18(G__33412,G__33413,G__33414,G__33415,G__33416,G__33417,G__33418,G__33419,G__33420,G__33421,G__33422,G__33423,G__33424,G__33425,G__33426,G__33427,G__33428,G__33429) : target_fn.call(null,G__33412,G__33413,G__33414,G__33415,G__33416,G__33417,G__33418,G__33419,G__33420,G__33421,G__33422,G__33423,G__33424,G__33425,G__33426,G__33427,G__33428,G__33429));
});
var G__33928__20 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__33430 = a;
var G__33431 = b;
var G__33432 = c;
var G__33433 = d;
var G__33434 = e;
var G__33435 = f;
var G__33436 = g;
var G__33437 = h;
var G__33438 = i;
var G__33439 = j;
var G__33440 = k;
var G__33441 = l;
var G__33442 = m;
var G__33443 = n;
var G__33444 = o;
var G__33445 = p;
var G__33446 = q;
var G__33447 = r;
var G__33448 = s;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$19 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$19(G__33430,G__33431,G__33432,G__33433,G__33434,G__33435,G__33436,G__33437,G__33438,G__33439,G__33440,G__33441,G__33442,G__33443,G__33444,G__33445,G__33446,G__33447,G__33448) : self__.dispatch_fn.call(null,G__33430,G__33431,G__33432,G__33433,G__33434,G__33435,G__33436,G__33437,G__33438,G__33439,G__33440,G__33441,G__33442,G__33443,G__33444,G__33445,G__33446,G__33447,G__33448));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__33449 = a;
var G__33450 = b;
var G__33451 = c;
var G__33452 = d;
var G__33453 = e;
var G__33454 = f;
var G__33455 = g;
var G__33456 = h;
var G__33457 = i;
var G__33458 = j;
var G__33459 = k;
var G__33460 = l;
var G__33461 = m;
var G__33462 = n;
var G__33463 = o;
var G__33464 = p;
var G__33465 = q;
var G__33466 = r;
var G__33467 = s;
return (target_fn.cljs$core$IFn$_invoke$arity$19 ? target_fn.cljs$core$IFn$_invoke$arity$19(G__33449,G__33450,G__33451,G__33452,G__33453,G__33454,G__33455,G__33456,G__33457,G__33458,G__33459,G__33460,G__33461,G__33462,G__33463,G__33464,G__33465,G__33466,G__33467) : target_fn.call(null,G__33449,G__33450,G__33451,G__33452,G__33453,G__33454,G__33455,G__33456,G__33457,G__33458,G__33459,G__33460,G__33461,G__33462,G__33463,G__33464,G__33465,G__33466,G__33467));
});
var G__33928__21 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__33468 = a;
var G__33469 = b;
var G__33470 = c;
var G__33471 = d;
var G__33472 = e;
var G__33473 = f;
var G__33474 = g;
var G__33475 = h;
var G__33476 = i;
var G__33477 = j;
var G__33478 = k;
var G__33479 = l;
var G__33480 = m;
var G__33481 = n;
var G__33482 = o;
var G__33483 = p;
var G__33484 = q;
var G__33485 = r;
var G__33486 = s;
var G__33487 = t;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$20 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$20(G__33468,G__33469,G__33470,G__33471,G__33472,G__33473,G__33474,G__33475,G__33476,G__33477,G__33478,G__33479,G__33480,G__33481,G__33482,G__33483,G__33484,G__33485,G__33486,G__33487) : self__.dispatch_fn.call(null,G__33468,G__33469,G__33470,G__33471,G__33472,G__33473,G__33474,G__33475,G__33476,G__33477,G__33478,G__33479,G__33480,G__33481,G__33482,G__33483,G__33484,G__33485,G__33486,G__33487));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__33488 = a;
var G__33489 = b;
var G__33490 = c;
var G__33491 = d;
var G__33492 = e;
var G__33493 = f;
var G__33494 = g;
var G__33495 = h;
var G__33496 = i;
var G__33497 = j;
var G__33498 = k;
var G__33499 = l;
var G__33500 = m;
var G__33501 = n;
var G__33502 = o;
var G__33503 = p;
var G__33504 = q;
var G__33505 = r;
var G__33506 = s;
var G__33507 = t;
return (target_fn.cljs$core$IFn$_invoke$arity$20 ? target_fn.cljs$core$IFn$_invoke$arity$20(G__33488,G__33489,G__33490,G__33491,G__33492,G__33493,G__33494,G__33495,G__33496,G__33497,G__33498,G__33499,G__33500,G__33501,G__33502,G__33503,G__33504,G__33505,G__33506,G__33507) : target_fn.call(null,G__33488,G__33489,G__33490,G__33491,G__33492,G__33493,G__33494,G__33495,G__33496,G__33497,G__33498,G__33499,G__33500,G__33501,G__33502,G__33503,G__33504,G__33505,G__33506,G__33507));
});
var G__33928__22 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(self__.dispatch_fn,a,b,c,d,cljs.core.array_seq([e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest], 0));
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(target_fn,a,b,c,d,cljs.core.array_seq([e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest], 0));
});
G__33928 = function(self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
switch(arguments.length){
case 1:
return G__33928__1.call(this,self__);
case 2:
return G__33928__2.call(this,self__,a);
case 3:
return G__33928__3.call(this,self__,a,b);
case 4:
return G__33928__4.call(this,self__,a,b,c);
case 5:
return G__33928__5.call(this,self__,a,b,c,d);
case 6:
return G__33928__6.call(this,self__,a,b,c,d,e);
case 7:
return G__33928__7.call(this,self__,a,b,c,d,e,f);
case 8:
return G__33928__8.call(this,self__,a,b,c,d,e,f,g);
case 9:
return G__33928__9.call(this,self__,a,b,c,d,e,f,g,h);
case 10:
return G__33928__10.call(this,self__,a,b,c,d,e,f,g,h,i);
case 11:
return G__33928__11.call(this,self__,a,b,c,d,e,f,g,h,i,j);
case 12:
return G__33928__12.call(this,self__,a,b,c,d,e,f,g,h,i,j,k);
case 13:
return G__33928__13.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l);
case 14:
return G__33928__14.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m);
case 15:
return G__33928__15.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
case 16:
return G__33928__16.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
case 17:
return G__33928__17.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
case 18:
return G__33928__18.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
case 19:
return G__33928__19.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
case 20:
return G__33928__20.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
case 21:
return G__33928__21.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
case 22:
return G__33928__22.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__33928.cljs$core$IFn$_invoke$arity$1 = G__33928__1;
G__33928.cljs$core$IFn$_invoke$arity$2 = G__33928__2;
G__33928.cljs$core$IFn$_invoke$arity$3 = G__33928__3;
G__33928.cljs$core$IFn$_invoke$arity$4 = G__33928__4;
G__33928.cljs$core$IFn$_invoke$arity$5 = G__33928__5;
G__33928.cljs$core$IFn$_invoke$arity$6 = G__33928__6;
G__33928.cljs$core$IFn$_invoke$arity$7 = G__33928__7;
G__33928.cljs$core$IFn$_invoke$arity$8 = G__33928__8;
G__33928.cljs$core$IFn$_invoke$arity$9 = G__33928__9;
G__33928.cljs$core$IFn$_invoke$arity$10 = G__33928__10;
G__33928.cljs$core$IFn$_invoke$arity$11 = G__33928__11;
G__33928.cljs$core$IFn$_invoke$arity$12 = G__33928__12;
G__33928.cljs$core$IFn$_invoke$arity$13 = G__33928__13;
G__33928.cljs$core$IFn$_invoke$arity$14 = G__33928__14;
G__33928.cljs$core$IFn$_invoke$arity$15 = G__33928__15;
G__33928.cljs$core$IFn$_invoke$arity$16 = G__33928__16;
G__33928.cljs$core$IFn$_invoke$arity$17 = G__33928__17;
G__33928.cljs$core$IFn$_invoke$arity$18 = G__33928__18;
G__33928.cljs$core$IFn$_invoke$arity$19 = G__33928__19;
G__33928.cljs$core$IFn$_invoke$arity$20 = G__33928__20;
G__33928.cljs$core$IFn$_invoke$arity$21 = G__33928__21;
G__33928.cljs$core$IFn$_invoke$arity$22 = G__33928__22;
return G__33928;
})()
;

cljs.core.MultiFn.prototype.apply = (function (self__,args33080){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args33080)));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$0 = (function (){
var self__ = this;
var mf = this;
var dispatch_val = (function (){return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$0 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$0() : self__.dispatch_fn.call(null));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

return (target_fn.cljs$core$IFn$_invoke$arity$0 ? target_fn.cljs$core$IFn$_invoke$arity$0() : target_fn.call(null));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$1 = (function (a){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__33508 = a;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$1 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$1(G__33508) : self__.dispatch_fn.call(null,G__33508));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__33509 = a;
return (target_fn.cljs$core$IFn$_invoke$arity$1 ? target_fn.cljs$core$IFn$_invoke$arity$1(G__33509) : target_fn.call(null,G__33509));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$2 = (function (a,b){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__33510 = a;
var G__33511 = b;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$2 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$2(G__33510,G__33511) : self__.dispatch_fn.call(null,G__33510,G__33511));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__33512 = a;
var G__33513 = b;
return (target_fn.cljs$core$IFn$_invoke$arity$2 ? target_fn.cljs$core$IFn$_invoke$arity$2(G__33512,G__33513) : target_fn.call(null,G__33512,G__33513));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$3 = (function (a,b,c){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__33514 = a;
var G__33515 = b;
var G__33516 = c;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$3 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$3(G__33514,G__33515,G__33516) : self__.dispatch_fn.call(null,G__33514,G__33515,G__33516));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__33517 = a;
var G__33518 = b;
var G__33519 = c;
return (target_fn.cljs$core$IFn$_invoke$arity$3 ? target_fn.cljs$core$IFn$_invoke$arity$3(G__33517,G__33518,G__33519) : target_fn.call(null,G__33517,G__33518,G__33519));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$4 = (function (a,b,c,d){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__33520 = a;
var G__33521 = b;
var G__33522 = c;
var G__33523 = d;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$4 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$4(G__33520,G__33521,G__33522,G__33523) : self__.dispatch_fn.call(null,G__33520,G__33521,G__33522,G__33523));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__33524 = a;
var G__33525 = b;
var G__33526 = c;
var G__33527 = d;
return (target_fn.cljs$core$IFn$_invoke$arity$4 ? target_fn.cljs$core$IFn$_invoke$arity$4(G__33524,G__33525,G__33526,G__33527) : target_fn.call(null,G__33524,G__33525,G__33526,G__33527));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$5 = (function (a,b,c,d,e){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__33528 = a;
var G__33529 = b;
var G__33530 = c;
var G__33531 = d;
var G__33532 = e;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$5 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$5(G__33528,G__33529,G__33530,G__33531,G__33532) : self__.dispatch_fn.call(null,G__33528,G__33529,G__33530,G__33531,G__33532));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__33533 = a;
var G__33534 = b;
var G__33535 = c;
var G__33536 = d;
var G__33537 = e;
return (target_fn.cljs$core$IFn$_invoke$arity$5 ? target_fn.cljs$core$IFn$_invoke$arity$5(G__33533,G__33534,G__33535,G__33536,G__33537) : target_fn.call(null,G__33533,G__33534,G__33535,G__33536,G__33537));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$6 = (function (a,b,c,d,e,f){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__33538 = a;
var G__33539 = b;
var G__33540 = c;
var G__33541 = d;
var G__33542 = e;
var G__33543 = f;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$6 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$6(G__33538,G__33539,G__33540,G__33541,G__33542,G__33543) : self__.dispatch_fn.call(null,G__33538,G__33539,G__33540,G__33541,G__33542,G__33543));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__33544 = a;
var G__33545 = b;
var G__33546 = c;
var G__33547 = d;
var G__33548 = e;
var G__33549 = f;
return (target_fn.cljs$core$IFn$_invoke$arity$6 ? target_fn.cljs$core$IFn$_invoke$arity$6(G__33544,G__33545,G__33546,G__33547,G__33548,G__33549) : target_fn.call(null,G__33544,G__33545,G__33546,G__33547,G__33548,G__33549));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$7 = (function (a,b,c,d,e,f,g){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__33550 = a;
var G__33551 = b;
var G__33552 = c;
var G__33553 = d;
var G__33554 = e;
var G__33555 = f;
var G__33556 = g;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$7 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$7(G__33550,G__33551,G__33552,G__33553,G__33554,G__33555,G__33556) : self__.dispatch_fn.call(null,G__33550,G__33551,G__33552,G__33553,G__33554,G__33555,G__33556));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__33557 = a;
var G__33558 = b;
var G__33559 = c;
var G__33560 = d;
var G__33561 = e;
var G__33562 = f;
var G__33563 = g;
return (target_fn.cljs$core$IFn$_invoke$arity$7 ? target_fn.cljs$core$IFn$_invoke$arity$7(G__33557,G__33558,G__33559,G__33560,G__33561,G__33562,G__33563) : target_fn.call(null,G__33557,G__33558,G__33559,G__33560,G__33561,G__33562,G__33563));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$8 = (function (a,b,c,d,e,f,g,h){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__33564 = a;
var G__33565 = b;
var G__33566 = c;
var G__33567 = d;
var G__33568 = e;
var G__33569 = f;
var G__33570 = g;
var G__33571 = h;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$8 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$8(G__33564,G__33565,G__33566,G__33567,G__33568,G__33569,G__33570,G__33571) : self__.dispatch_fn.call(null,G__33564,G__33565,G__33566,G__33567,G__33568,G__33569,G__33570,G__33571));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__33572 = a;
var G__33573 = b;
var G__33574 = c;
var G__33575 = d;
var G__33576 = e;
var G__33577 = f;
var G__33578 = g;
var G__33579 = h;
return (target_fn.cljs$core$IFn$_invoke$arity$8 ? target_fn.cljs$core$IFn$_invoke$arity$8(G__33572,G__33573,G__33574,G__33575,G__33576,G__33577,G__33578,G__33579) : target_fn.call(null,G__33572,G__33573,G__33574,G__33575,G__33576,G__33577,G__33578,G__33579));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$9 = (function (a,b,c,d,e,f,g,h,i){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__33580 = a;
var G__33581 = b;
var G__33582 = c;
var G__33583 = d;
var G__33584 = e;
var G__33585 = f;
var G__33586 = g;
var G__33587 = h;
var G__33588 = i;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$9 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$9(G__33580,G__33581,G__33582,G__33583,G__33584,G__33585,G__33586,G__33587,G__33588) : self__.dispatch_fn.call(null,G__33580,G__33581,G__33582,G__33583,G__33584,G__33585,G__33586,G__33587,G__33588));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__33589 = a;
var G__33590 = b;
var G__33591 = c;
var G__33592 = d;
var G__33593 = e;
var G__33594 = f;
var G__33595 = g;
var G__33596 = h;
var G__33597 = i;
return (target_fn.cljs$core$IFn$_invoke$arity$9 ? target_fn.cljs$core$IFn$_invoke$arity$9(G__33589,G__33590,G__33591,G__33592,G__33593,G__33594,G__33595,G__33596,G__33597) : target_fn.call(null,G__33589,G__33590,G__33591,G__33592,G__33593,G__33594,G__33595,G__33596,G__33597));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$10 = (function (a,b,c,d,e,f,g,h,i,j){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__33598 = a;
var G__33599 = b;
var G__33600 = c;
var G__33601 = d;
var G__33602 = e;
var G__33603 = f;
var G__33604 = g;
var G__33605 = h;
var G__33606 = i;
var G__33607 = j;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$10 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$10(G__33598,G__33599,G__33600,G__33601,G__33602,G__33603,G__33604,G__33605,G__33606,G__33607) : self__.dispatch_fn.call(null,G__33598,G__33599,G__33600,G__33601,G__33602,G__33603,G__33604,G__33605,G__33606,G__33607));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__33608 = a;
var G__33609 = b;
var G__33610 = c;
var G__33611 = d;
var G__33612 = e;
var G__33613 = f;
var G__33614 = g;
var G__33615 = h;
var G__33616 = i;
var G__33617 = j;
return (target_fn.cljs$core$IFn$_invoke$arity$10 ? target_fn.cljs$core$IFn$_invoke$arity$10(G__33608,G__33609,G__33610,G__33611,G__33612,G__33613,G__33614,G__33615,G__33616,G__33617) : target_fn.call(null,G__33608,G__33609,G__33610,G__33611,G__33612,G__33613,G__33614,G__33615,G__33616,G__33617));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$11 = (function (a,b,c,d,e,f,g,h,i,j,k){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__33618 = a;
var G__33619 = b;
var G__33620 = c;
var G__33621 = d;
var G__33622 = e;
var G__33623 = f;
var G__33624 = g;
var G__33625 = h;
var G__33626 = i;
var G__33627 = j;
var G__33628 = k;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$11 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$11(G__33618,G__33619,G__33620,G__33621,G__33622,G__33623,G__33624,G__33625,G__33626,G__33627,G__33628) : self__.dispatch_fn.call(null,G__33618,G__33619,G__33620,G__33621,G__33622,G__33623,G__33624,G__33625,G__33626,G__33627,G__33628));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__33629 = a;
var G__33630 = b;
var G__33631 = c;
var G__33632 = d;
var G__33633 = e;
var G__33634 = f;
var G__33635 = g;
var G__33636 = h;
var G__33637 = i;
var G__33638 = j;
var G__33639 = k;
return (target_fn.cljs$core$IFn$_invoke$arity$11 ? target_fn.cljs$core$IFn$_invoke$arity$11(G__33629,G__33630,G__33631,G__33632,G__33633,G__33634,G__33635,G__33636,G__33637,G__33638,G__33639) : target_fn.call(null,G__33629,G__33630,G__33631,G__33632,G__33633,G__33634,G__33635,G__33636,G__33637,G__33638,G__33639));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$12 = (function (a,b,c,d,e,f,g,h,i,j,k,l){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__33640 = a;
var G__33641 = b;
var G__33642 = c;
var G__33643 = d;
var G__33644 = e;
var G__33645 = f;
var G__33646 = g;
var G__33647 = h;
var G__33648 = i;
var G__33649 = j;
var G__33650 = k;
var G__33651 = l;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$12 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$12(G__33640,G__33641,G__33642,G__33643,G__33644,G__33645,G__33646,G__33647,G__33648,G__33649,G__33650,G__33651) : self__.dispatch_fn.call(null,G__33640,G__33641,G__33642,G__33643,G__33644,G__33645,G__33646,G__33647,G__33648,G__33649,G__33650,G__33651));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__33652 = a;
var G__33653 = b;
var G__33654 = c;
var G__33655 = d;
var G__33656 = e;
var G__33657 = f;
var G__33658 = g;
var G__33659 = h;
var G__33660 = i;
var G__33661 = j;
var G__33662 = k;
var G__33663 = l;
return (target_fn.cljs$core$IFn$_invoke$arity$12 ? target_fn.cljs$core$IFn$_invoke$arity$12(G__33652,G__33653,G__33654,G__33655,G__33656,G__33657,G__33658,G__33659,G__33660,G__33661,G__33662,G__33663) : target_fn.call(null,G__33652,G__33653,G__33654,G__33655,G__33656,G__33657,G__33658,G__33659,G__33660,G__33661,G__33662,G__33663));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$13 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__33664 = a;
var G__33665 = b;
var G__33666 = c;
var G__33667 = d;
var G__33668 = e;
var G__33669 = f;
var G__33670 = g;
var G__33671 = h;
var G__33672 = i;
var G__33673 = j;
var G__33674 = k;
var G__33675 = l;
var G__33676 = m;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$13 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$13(G__33664,G__33665,G__33666,G__33667,G__33668,G__33669,G__33670,G__33671,G__33672,G__33673,G__33674,G__33675,G__33676) : self__.dispatch_fn.call(null,G__33664,G__33665,G__33666,G__33667,G__33668,G__33669,G__33670,G__33671,G__33672,G__33673,G__33674,G__33675,G__33676));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__33677 = a;
var G__33678 = b;
var G__33679 = c;
var G__33680 = d;
var G__33681 = e;
var G__33682 = f;
var G__33683 = g;
var G__33684 = h;
var G__33685 = i;
var G__33686 = j;
var G__33687 = k;
var G__33688 = l;
var G__33689 = m;
return (target_fn.cljs$core$IFn$_invoke$arity$13 ? target_fn.cljs$core$IFn$_invoke$arity$13(G__33677,G__33678,G__33679,G__33680,G__33681,G__33682,G__33683,G__33684,G__33685,G__33686,G__33687,G__33688,G__33689) : target_fn.call(null,G__33677,G__33678,G__33679,G__33680,G__33681,G__33682,G__33683,G__33684,G__33685,G__33686,G__33687,G__33688,G__33689));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$14 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__33690 = a;
var G__33691 = b;
var G__33692 = c;
var G__33693 = d;
var G__33694 = e;
var G__33695 = f;
var G__33696 = g;
var G__33697 = h;
var G__33698 = i;
var G__33699 = j;
var G__33700 = k;
var G__33701 = l;
var G__33702 = m;
var G__33703 = n;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$14 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$14(G__33690,G__33691,G__33692,G__33693,G__33694,G__33695,G__33696,G__33697,G__33698,G__33699,G__33700,G__33701,G__33702,G__33703) : self__.dispatch_fn.call(null,G__33690,G__33691,G__33692,G__33693,G__33694,G__33695,G__33696,G__33697,G__33698,G__33699,G__33700,G__33701,G__33702,G__33703));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__33704 = a;
var G__33705 = b;
var G__33706 = c;
var G__33707 = d;
var G__33708 = e;
var G__33709 = f;
var G__33710 = g;
var G__33711 = h;
var G__33712 = i;
var G__33713 = j;
var G__33714 = k;
var G__33715 = l;
var G__33716 = m;
var G__33717 = n;
return (target_fn.cljs$core$IFn$_invoke$arity$14 ? target_fn.cljs$core$IFn$_invoke$arity$14(G__33704,G__33705,G__33706,G__33707,G__33708,G__33709,G__33710,G__33711,G__33712,G__33713,G__33714,G__33715,G__33716,G__33717) : target_fn.call(null,G__33704,G__33705,G__33706,G__33707,G__33708,G__33709,G__33710,G__33711,G__33712,G__33713,G__33714,G__33715,G__33716,G__33717));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$15 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__33718 = a;
var G__33719 = b;
var G__33720 = c;
var G__33721 = d;
var G__33722 = e;
var G__33723 = f;
var G__33724 = g;
var G__33725 = h;
var G__33726 = i;
var G__33727 = j;
var G__33728 = k;
var G__33729 = l;
var G__33730 = m;
var G__33731 = n;
var G__33732 = o;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$15 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$15(G__33718,G__33719,G__33720,G__33721,G__33722,G__33723,G__33724,G__33725,G__33726,G__33727,G__33728,G__33729,G__33730,G__33731,G__33732) : self__.dispatch_fn.call(null,G__33718,G__33719,G__33720,G__33721,G__33722,G__33723,G__33724,G__33725,G__33726,G__33727,G__33728,G__33729,G__33730,G__33731,G__33732));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__33733 = a;
var G__33734 = b;
var G__33735 = c;
var G__33736 = d;
var G__33737 = e;
var G__33738 = f;
var G__33739 = g;
var G__33740 = h;
var G__33741 = i;
var G__33742 = j;
var G__33743 = k;
var G__33744 = l;
var G__33745 = m;
var G__33746 = n;
var G__33747 = o;
return (target_fn.cljs$core$IFn$_invoke$arity$15 ? target_fn.cljs$core$IFn$_invoke$arity$15(G__33733,G__33734,G__33735,G__33736,G__33737,G__33738,G__33739,G__33740,G__33741,G__33742,G__33743,G__33744,G__33745,G__33746,G__33747) : target_fn.call(null,G__33733,G__33734,G__33735,G__33736,G__33737,G__33738,G__33739,G__33740,G__33741,G__33742,G__33743,G__33744,G__33745,G__33746,G__33747));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$16 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__33748 = a;
var G__33749 = b;
var G__33750 = c;
var G__33751 = d;
var G__33752 = e;
var G__33753 = f;
var G__33754 = g;
var G__33755 = h;
var G__33756 = i;
var G__33757 = j;
var G__33758 = k;
var G__33759 = l;
var G__33760 = m;
var G__33761 = n;
var G__33762 = o;
var G__33763 = p;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$16 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$16(G__33748,G__33749,G__33750,G__33751,G__33752,G__33753,G__33754,G__33755,G__33756,G__33757,G__33758,G__33759,G__33760,G__33761,G__33762,G__33763) : self__.dispatch_fn.call(null,G__33748,G__33749,G__33750,G__33751,G__33752,G__33753,G__33754,G__33755,G__33756,G__33757,G__33758,G__33759,G__33760,G__33761,G__33762,G__33763));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__33764 = a;
var G__33765 = b;
var G__33766 = c;
var G__33767 = d;
var G__33768 = e;
var G__33769 = f;
var G__33770 = g;
var G__33771 = h;
var G__33772 = i;
var G__33773 = j;
var G__33774 = k;
var G__33775 = l;
var G__33776 = m;
var G__33777 = n;
var G__33778 = o;
var G__33779 = p;
return (target_fn.cljs$core$IFn$_invoke$arity$16 ? target_fn.cljs$core$IFn$_invoke$arity$16(G__33764,G__33765,G__33766,G__33767,G__33768,G__33769,G__33770,G__33771,G__33772,G__33773,G__33774,G__33775,G__33776,G__33777,G__33778,G__33779) : target_fn.call(null,G__33764,G__33765,G__33766,G__33767,G__33768,G__33769,G__33770,G__33771,G__33772,G__33773,G__33774,G__33775,G__33776,G__33777,G__33778,G__33779));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$17 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__33780 = a;
var G__33781 = b;
var G__33782 = c;
var G__33783 = d;
var G__33784 = e;
var G__33785 = f;
var G__33786 = g;
var G__33787 = h;
var G__33788 = i;
var G__33789 = j;
var G__33790 = k;
var G__33791 = l;
var G__33792 = m;
var G__33793 = n;
var G__33794 = o;
var G__33795 = p;
var G__33796 = q;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$17 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$17(G__33780,G__33781,G__33782,G__33783,G__33784,G__33785,G__33786,G__33787,G__33788,G__33789,G__33790,G__33791,G__33792,G__33793,G__33794,G__33795,G__33796) : self__.dispatch_fn.call(null,G__33780,G__33781,G__33782,G__33783,G__33784,G__33785,G__33786,G__33787,G__33788,G__33789,G__33790,G__33791,G__33792,G__33793,G__33794,G__33795,G__33796));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__33797 = a;
var G__33798 = b;
var G__33799 = c;
var G__33800 = d;
var G__33801 = e;
var G__33802 = f;
var G__33803 = g;
var G__33804 = h;
var G__33805 = i;
var G__33806 = j;
var G__33807 = k;
var G__33808 = l;
var G__33809 = m;
var G__33810 = n;
var G__33811 = o;
var G__33812 = p;
var G__33813 = q;
return (target_fn.cljs$core$IFn$_invoke$arity$17 ? target_fn.cljs$core$IFn$_invoke$arity$17(G__33797,G__33798,G__33799,G__33800,G__33801,G__33802,G__33803,G__33804,G__33805,G__33806,G__33807,G__33808,G__33809,G__33810,G__33811,G__33812,G__33813) : target_fn.call(null,G__33797,G__33798,G__33799,G__33800,G__33801,G__33802,G__33803,G__33804,G__33805,G__33806,G__33807,G__33808,G__33809,G__33810,G__33811,G__33812,G__33813));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$18 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__33814 = a;
var G__33815 = b;
var G__33816 = c;
var G__33817 = d;
var G__33818 = e;
var G__33819 = f;
var G__33820 = g;
var G__33821 = h;
var G__33822 = i;
var G__33823 = j;
var G__33824 = k;
var G__33825 = l;
var G__33826 = m;
var G__33827 = n;
var G__33828 = o;
var G__33829 = p;
var G__33830 = q;
var G__33831 = r;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$18 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$18(G__33814,G__33815,G__33816,G__33817,G__33818,G__33819,G__33820,G__33821,G__33822,G__33823,G__33824,G__33825,G__33826,G__33827,G__33828,G__33829,G__33830,G__33831) : self__.dispatch_fn.call(null,G__33814,G__33815,G__33816,G__33817,G__33818,G__33819,G__33820,G__33821,G__33822,G__33823,G__33824,G__33825,G__33826,G__33827,G__33828,G__33829,G__33830,G__33831));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__33832 = a;
var G__33833 = b;
var G__33834 = c;
var G__33835 = d;
var G__33836 = e;
var G__33837 = f;
var G__33838 = g;
var G__33839 = h;
var G__33840 = i;
var G__33841 = j;
var G__33842 = k;
var G__33843 = l;
var G__33844 = m;
var G__33845 = n;
var G__33846 = o;
var G__33847 = p;
var G__33848 = q;
var G__33849 = r;
return (target_fn.cljs$core$IFn$_invoke$arity$18 ? target_fn.cljs$core$IFn$_invoke$arity$18(G__33832,G__33833,G__33834,G__33835,G__33836,G__33837,G__33838,G__33839,G__33840,G__33841,G__33842,G__33843,G__33844,G__33845,G__33846,G__33847,G__33848,G__33849) : target_fn.call(null,G__33832,G__33833,G__33834,G__33835,G__33836,G__33837,G__33838,G__33839,G__33840,G__33841,G__33842,G__33843,G__33844,G__33845,G__33846,G__33847,G__33848,G__33849));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$19 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__33850 = a;
var G__33851 = b;
var G__33852 = c;
var G__33853 = d;
var G__33854 = e;
var G__33855 = f;
var G__33856 = g;
var G__33857 = h;
var G__33858 = i;
var G__33859 = j;
var G__33860 = k;
var G__33861 = l;
var G__33862 = m;
var G__33863 = n;
var G__33864 = o;
var G__33865 = p;
var G__33866 = q;
var G__33867 = r;
var G__33868 = s;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$19 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$19(G__33850,G__33851,G__33852,G__33853,G__33854,G__33855,G__33856,G__33857,G__33858,G__33859,G__33860,G__33861,G__33862,G__33863,G__33864,G__33865,G__33866,G__33867,G__33868) : self__.dispatch_fn.call(null,G__33850,G__33851,G__33852,G__33853,G__33854,G__33855,G__33856,G__33857,G__33858,G__33859,G__33860,G__33861,G__33862,G__33863,G__33864,G__33865,G__33866,G__33867,G__33868));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__33869 = a;
var G__33870 = b;
var G__33871 = c;
var G__33872 = d;
var G__33873 = e;
var G__33874 = f;
var G__33875 = g;
var G__33876 = h;
var G__33877 = i;
var G__33878 = j;
var G__33879 = k;
var G__33880 = l;
var G__33881 = m;
var G__33882 = n;
var G__33883 = o;
var G__33884 = p;
var G__33885 = q;
var G__33886 = r;
var G__33887 = s;
return (target_fn.cljs$core$IFn$_invoke$arity$19 ? target_fn.cljs$core$IFn$_invoke$arity$19(G__33869,G__33870,G__33871,G__33872,G__33873,G__33874,G__33875,G__33876,G__33877,G__33878,G__33879,G__33880,G__33881,G__33882,G__33883,G__33884,G__33885,G__33886,G__33887) : target_fn.call(null,G__33869,G__33870,G__33871,G__33872,G__33873,G__33874,G__33875,G__33876,G__33877,G__33878,G__33879,G__33880,G__33881,G__33882,G__33883,G__33884,G__33885,G__33886,G__33887));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$20 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__33888 = a;
var G__33889 = b;
var G__33890 = c;
var G__33891 = d;
var G__33892 = e;
var G__33893 = f;
var G__33894 = g;
var G__33895 = h;
var G__33896 = i;
var G__33897 = j;
var G__33898 = k;
var G__33899 = l;
var G__33900 = m;
var G__33901 = n;
var G__33902 = o;
var G__33903 = p;
var G__33904 = q;
var G__33905 = r;
var G__33906 = s;
var G__33907 = t;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$20 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$20(G__33888,G__33889,G__33890,G__33891,G__33892,G__33893,G__33894,G__33895,G__33896,G__33897,G__33898,G__33899,G__33900,G__33901,G__33902,G__33903,G__33904,G__33905,G__33906,G__33907) : self__.dispatch_fn.call(null,G__33888,G__33889,G__33890,G__33891,G__33892,G__33893,G__33894,G__33895,G__33896,G__33897,G__33898,G__33899,G__33900,G__33901,G__33902,G__33903,G__33904,G__33905,G__33906,G__33907));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__33908 = a;
var G__33909 = b;
var G__33910 = c;
var G__33911 = d;
var G__33912 = e;
var G__33913 = f;
var G__33914 = g;
var G__33915 = h;
var G__33916 = i;
var G__33917 = j;
var G__33918 = k;
var G__33919 = l;
var G__33920 = m;
var G__33921 = n;
var G__33922 = o;
var G__33923 = p;
var G__33924 = q;
var G__33925 = r;
var G__33926 = s;
var G__33927 = t;
return (target_fn.cljs$core$IFn$_invoke$arity$20 ? target_fn.cljs$core$IFn$_invoke$arity$20(G__33908,G__33909,G__33910,G__33911,G__33912,G__33913,G__33914,G__33915,G__33916,G__33917,G__33918,G__33919,G__33920,G__33921,G__33922,G__33923,G__33924,G__33925,G__33926,G__33927) : target_fn.call(null,G__33908,G__33909,G__33910,G__33911,G__33912,G__33913,G__33914,G__33915,G__33916,G__33917,G__33918,G__33919,G__33920,G__33921,G__33922,G__33923,G__33924,G__33925,G__33926,G__33927));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$21 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
var self__ = this;
var mf = this;
var dispatch_val = cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(self__.dispatch_fn,a,b,c,d,cljs.core.array_seq([e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest], 0));
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(target_fn,a,b,c,d,cljs.core.array_seq([e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest], 0));
});

cljs.core.MultiFn.cljs$lang$type = true;

cljs.core.MultiFn.cljs$lang$ctorStr = "cljs.core/MultiFn";

cljs.core.MultiFn.cljs$lang$ctorPrWriter = (function (this__24861__auto__,writer__24862__auto__,opt__24863__auto__){
return cljs.core._write(writer__24862__auto__,"cljs.core/MultiFn");
});

cljs.core.__GT_MultiFn = (function __GT_MultiFn(name,dispatch_fn,default_dispatch_val,hierarchy,method_table,prefer_table,method_cache,cached_hierarchy){
return (new cljs.core.MultiFn(name,dispatch_fn,default_dispatch_val,hierarchy,method_table,prefer_table,method_cache,cached_hierarchy));
});

/**
* Removes all of the methods of multimethod.
*/
cljs.core.remove_all_methods = (function remove_all_methods(multifn){
return cljs.core._reset(multifn);
});
/**
* Removes the method of multimethod associated with dispatch-value.
*/
cljs.core.remove_method = (function remove_method(multifn,dispatch_val){
return cljs.core._remove_method(multifn,dispatch_val);
});
/**
* Causes the multimethod to prefer matches of dispatch-val-x over dispatch-val-y
* when there is a conflict
*/
cljs.core.prefer_method = (function prefer_method(multifn,dispatch_val_x,dispatch_val_y){
return cljs.core._prefer_method(multifn,dispatch_val_x,dispatch_val_y);
});
/**
* Given a multimethod, returns a map of dispatch values -> dispatch fns
*/
cljs.core.methods$ = (function methods$(multifn){
return cljs.core._methods(multifn);
});
/**
* Given a multimethod and a dispatch value, returns the dispatch fn
* that would apply to that value, or nil if none apply and no default
*/
cljs.core.get_method = (function get_method(multifn,dispatch_val){
return cljs.core._get_method(multifn,dispatch_val);
});
/**
* Given a multimethod, returns a map of preferred value -> set of other values
*/
cljs.core.prefers = (function prefers(multifn){
return cljs.core._prefers(multifn);
});

/**
* @constructor
*/
cljs.core.UUID = (function (uuid){
this.uuid = uuid;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 2153775104;
})
cljs.core.UUID.prototype.cljs$core$IHash$_hash$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
var G__33929 = cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([this$__$1], 0));
return goog.string.hashCode(G__33929);
});

cljs.core.UUID.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (_,writer,___$1){
var self__ = this;
var ___$2 = this;
return cljs.core._write(writer,[cljs.core.str("#uuid \""),cljs.core.str(self__.uuid),cljs.core.str("\"")].join(''));
});

cljs.core.UUID.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (_,other){
var self__ = this;
var ___$1 = this;
return ((other instanceof cljs.core.UUID)) && ((self__.uuid === other.uuid));
});

cljs.core.UUID.prototype.toString = (function (){
var self__ = this;
var _ = this;
return self__.uuid;
});

cljs.core.UUID.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.UUID.cljs$lang$type = true;

cljs.core.UUID.cljs$lang$ctorStr = "cljs.core/UUID";

cljs.core.UUID.cljs$lang$ctorPrWriter = (function (this__24861__auto__,writer__24862__auto__,opt__24863__auto__){
return cljs.core._write(writer__24862__auto__,"cljs.core/UUID");
});

cljs.core.__GT_UUID = (function __GT_UUID(uuid){
return (new cljs.core.UUID(uuid));
});


/**
* @constructor
*/
cljs.core.ExceptionInfo = (function (message,data,cause){
this.message = message;
this.data = data;
this.cause = cause;
})

cljs.core.ExceptionInfo.cljs$lang$type = true;

cljs.core.ExceptionInfo.cljs$lang$ctorStr = "cljs.core/ExceptionInfo";

cljs.core.ExceptionInfo.cljs$lang$ctorPrWriter = (function (this__24861__auto__,writer__24862__auto__,opt__24863__auto__){
return cljs.core._write(writer__24862__auto__,"cljs.core/ExceptionInfo");
});

cljs.core.__GT_ExceptionInfo = (function __GT_ExceptionInfo(message,data,cause){
return (new cljs.core.ExceptionInfo(message,data,cause));
});

cljs.core.ExceptionInfo.prototype = (new Error());
cljs.core.ExceptionInfo.prototype.constructor = cljs.core.ExceptionInfo;
/**
* Alpha - subject to change.
* Create an instance of ExceptionInfo, an Error type that carries a
* map of additional data.
*/
cljs.core.ex_info = (function() {
var ex_info = null;
var ex_info__2 = (function (msg,map){
return (new cljs.core.ExceptionInfo(msg,map,null));
});
var ex_info__3 = (function (msg,map,cause){
return (new cljs.core.ExceptionInfo(msg,map,cause));
});
ex_info = function(msg,map,cause){
switch(arguments.length){
case 2:
return ex_info__2.call(this,msg,map);
case 3:
return ex_info__3.call(this,msg,map,cause);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
ex_info.cljs$core$IFn$_invoke$arity$2 = ex_info__2;
ex_info.cljs$core$IFn$_invoke$arity$3 = ex_info__3;
return ex_info;
})()
;
/**
* Alpha - subject to change.
* Returns exception data (a map) if ex is an ExceptionInfo.
* Otherwise returns nil.
*/
cljs.core.ex_data = (function ex_data(ex){
if((ex instanceof cljs.core.ExceptionInfo)){
return ex.data;
} else {
return null;
}
});
/**
* Alpha - subject to change.
* Returns the message attached to the given Error / ExceptionInfo object.
* For non-Errors returns nil.
*/
cljs.core.ex_message = (function ex_message(ex){
if((ex instanceof Error)){
return ex.message;
} else {
return null;
}
});
/**
* Alpha - subject to change.
* Returns exception cause (an Error / ExceptionInfo) if ex is an
* ExceptionInfo.
* Otherwise returns nil.
*/
cljs.core.ex_cause = (function ex_cause(ex){
if((ex instanceof cljs.core.ExceptionInfo)){
return ex.cause;
} else {
return null;
}
});
/**
* Returns an JavaScript compatible comparator based upon pred.
*/
cljs.core.comparator = (function comparator(pred){
return (function (x,y){
if(cljs.core.truth_((function (){var G__33934 = x;
var G__33935 = y;
return (pred.cljs$core$IFn$_invoke$arity$2 ? pred.cljs$core$IFn$_invoke$arity$2(G__33934,G__33935) : pred.call(null,G__33934,G__33935));
})())){
return (-1);
} else {
if(cljs.core.truth_((function (){var G__33936 = y;
var G__33937 = x;
return (pred.cljs$core$IFn$_invoke$arity$2 ? pred.cljs$core$IFn$_invoke$arity$2(G__33936,G__33937) : pred.call(null,G__33936,G__33937));
})())){
return (1);
} else {
return (0);

}
}
});
});
cljs.core.special_symbol_QMARK_ = (function special_symbol_QMARK_(x){
return cljs.core.contains_QMARK_(new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 19, [new cljs.core.Symbol(null,"&","&",-2144855648,null),null,new cljs.core.Symbol(null,"defrecord*","defrecord*",-1936366207,null),null,new cljs.core.Symbol(null,"try","try",-1273693247,null),null,new cljs.core.Symbol(null,"loop*","loop*",615029416,null),null,new cljs.core.Symbol(null,"do","do",1686842252,null),null,new cljs.core.Symbol(null,"letfn*","letfn*",-110097810,null),null,new cljs.core.Symbol(null,"if","if",1181717262,null),null,new cljs.core.Symbol(null,"new","new",-444906321,null),null,new cljs.core.Symbol(null,"ns","ns",2082130287,null),null,new cljs.core.Symbol(null,"deftype*","deftype*",962659890,null),null,new cljs.core.Symbol(null,"let*","let*",1920721458,null),null,new cljs.core.Symbol(null,"js*","js*",-1134233646,null),null,new cljs.core.Symbol(null,"fn*","fn*",-752876845,null),null,new cljs.core.Symbol(null,"recur","recur",1202958259,null),null,new cljs.core.Symbol(null,"set!","set!",250714521,null),null,new cljs.core.Symbol(null,".",".",1975675962,null),null,new cljs.core.Symbol(null,"quote","quote",1377916282,null),null,new cljs.core.Symbol(null,"throw","throw",595905694,null),null,new cljs.core.Symbol(null,"def","def",597100991,null),null], null), null),x);
});
/**
* test [v] finds fn at key :test in var metadata and calls it,
* presuming failure will throw exception
*/
cljs.core.test = (function test(v){
var f = v.cljs$lang$test;
if(cljs.core.truth_(f)){
(f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));

return new cljs.core.Keyword(null,"ok","ok",967785236);
} else {
return new cljs.core.Keyword(null,"no-test","no-test",-1679482642);
}
});
