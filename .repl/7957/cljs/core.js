// Compiled by ClojureScript 0.0-2665 {:static-fns true}
goog.provide('cljs.core');
goog.require('goog.string.StringBuffer');
goog.require('goog.array');
goog.require('goog.object');
goog.require('goog.string');
cljs.core._STAR_clojurescript_version_STAR_ = "0.0-2665";
cljs.core._STAR_unchecked_if_STAR_ = false;
if(typeof cljs.core._STAR_print_fn_STAR_ !== 'undefined'){
} else {
/**
* Each runtime environment provides a different way to print output.
* Whatever function *print-fn* is bound to will be passed any
* Strings which should be printed.
*/
cljs.core._STAR_print_fn_STAR_ = (function _STAR_print_fn_STAR_(_){
throw (new Error("No *print-fn* fn set for evaluation environment"));
});
}
/**
* Set *print-fn* to f.
*/
cljs.core.set_print_fn_BANG_ = (function set_print_fn_BANG_(f){
return cljs.core._STAR_print_fn_STAR_ = f;
});
cljs.core._STAR_flush_on_newline_STAR_ = true;
cljs.core._STAR_print_newline_STAR_ = true;
cljs.core._STAR_print_readably_STAR_ = true;
cljs.core._STAR_print_meta_STAR_ = false;
cljs.core._STAR_print_dup_STAR_ = false;
cljs.core._STAR_print_length_STAR_ = null;
cljs.core._STAR_print_level_STAR_ = null;
if(typeof cljs.core._STAR_loaded_libs_STAR_ !== 'undefined'){
} else {
cljs.core._STAR_loaded_libs_STAR_ = null;
}
cljs.core.pr_opts = (function pr_opts(){
return new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null,"flush-on-newline","flush-on-newline",-151457939),cljs.core._STAR_flush_on_newline_STAR_,new cljs.core.Keyword(null,"readably","readably",1129599760),cljs.core._STAR_print_readably_STAR_,new cljs.core.Keyword(null,"meta","meta",1499536964),cljs.core._STAR_print_meta_STAR_,new cljs.core.Keyword(null,"dup","dup",556298533),cljs.core._STAR_print_dup_STAR_,new cljs.core.Keyword(null,"print-length","print-length",1931866356),cljs.core._STAR_print_length_STAR_], null);
});
/**
* Set *print-fn* to console.log
*/
cljs.core.enable_console_print_BANG_ = (function enable_console_print_BANG_(){
cljs.core._STAR_print_newline_STAR_ = false;

return cljs.core._STAR_print_fn_STAR_ = (function() { 
var G__31830__delegate = function (args){
return console.log.apply(console,(function (){var G__31829 = args;
return (cljs.core.into_array.cljs$core$IFn$_invoke$arity$1 ? cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(G__31829) : cljs.core.into_array.call(null,G__31829));
})());
};
var G__31830 = function (var_args){
var args = null;
if (arguments.length > 0) {
var G__31831__i = 0, G__31831__a = new Array(arguments.length -  0);
while (G__31831__i < G__31831__a.length) {G__31831__a[G__31831__i] = arguments[G__31831__i + 0]; ++G__31831__i;}
  args = new cljs.core.IndexedSeq(G__31831__a,0);
} 
return G__31830__delegate.call(this,args);};
G__31830.cljs$lang$maxFixedArity = 0;
G__31830.cljs$lang$applyTo = (function (arglist__31832){
var args = cljs.core.seq(arglist__31832);
return G__31830__delegate(args);
});
G__31830.cljs$core$IFn$_invoke$arity$variadic = G__31830__delegate;
return G__31830;
})()
;
});
/**
* Internal - do not use!
*/
cljs.core.truth_ = (function truth_(x){
return (x != null && x !== false);
});
cljs.core.not_native = null;

/**
* Tests if 2 arguments are the same object
*/
cljs.core.identical_QMARK_ = (function identical_QMARK_(x,y){
return (x === y);
});
/**
* Returns true if x is nil, false otherwise.
*/
cljs.core.nil_QMARK_ = (function nil_QMARK_(x){
return (x == null);
});
cljs.core.array_QMARK_ = (function array_QMARK_(x){
return x instanceof Array;
});
cljs.core.number_QMARK_ = (function number_QMARK_(n){
return typeof n === 'number';
});
/**
* Returns true if x is logical false, false otherwise.
*/
cljs.core.not = (function not(x){
if(cljs.core.truth_(x)){
return false;
} else {
return true;
}
});
/**
* Returns true if x is not nil, false otherwise.
*/
cljs.core.some_QMARK_ = (function some_QMARK_(x){
return !((x == null));
});
cljs.core.object_QMARK_ = (function object_QMARK_(x){
if(!((x == null))){
return (x.constructor === Object);
} else {
return false;
}
});
cljs.core.string_QMARK_ = (function string_QMARK_(x){
var G__31834 = x;
return goog.isString(G__31834);
});
/**
* Internal - do not use!
*/
cljs.core.native_satisfies_QMARK_ = (function native_satisfies_QMARK_(p,x){
var x__$1 = (((x == null))?null:x);
if((p[(function (){var G__31836 = x__$1;
return goog.typeOf(G__31836);
})()])){
return true;
} else {
if((p["_"])){
return true;
} else {
return false;

}
}
});
cljs.core.is_proto_ = (function is_proto_(x){
return (x.constructor.prototype === x);
});
/**
* When compiled for a command-line target, whatever
* function *main-fn* is set to will be called with the command-line
* argv as arguments
*/
cljs.core._STAR_main_cli_fn_STAR_ = null;
cljs.core.type = (function type(x){
if((x == null)){
return null;
} else {
return x.constructor;
}
});
cljs.core.missing_protocol = (function missing_protocol(proto,obj){
var ty = cljs.core.type(obj);
var ty__$1 = (cljs.core.truth_((function (){var and__24260__auto__ = ty;
if(cljs.core.truth_(and__24260__auto__)){
return ty.cljs$lang$type;
} else {
return and__24260__auto__;
}
})())?ty.cljs$lang$ctorStr:(function (){var G__31838 = obj;
return goog.typeOf(G__31838);
})());
return (new Error(["No protocol method ",proto," defined for type ",ty__$1,": ",obj].join("")));
});
cljs.core.type__GT_str = (function type__GT_str(ty){
var temp__4124__auto__ = ty.cljs$lang$ctorStr;
if(cljs.core.truth_(temp__4124__auto__)){
var s = temp__4124__auto__;
return s;
} else {
return [cljs.core.str(ty)].join('');
}
});
if((typeof Symbol !== 'undefined') && (((function (){var G__31840 = Symbol;
return goog.typeOf(G__31840);
})() === "function"))){
cljs.core.ITER_SYMBOL = Symbol.iterator;
} else {
cljs.core.ITER_SYMBOL = "@@iterator";
}
cljs.core.make_array = (function() {
var make_array = null;
var make_array__1 = (function (size){
return (new Array(size));
});
var make_array__2 = (function (type,size){
return make_array.cljs$core$IFn$_invoke$arity$1(size);
});
make_array = function(type,size){
switch(arguments.length){
case 1:
return make_array__1.call(this,type);
case 2:
return make_array__2.call(this,type,size);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
make_array.cljs$core$IFn$_invoke$arity$1 = make_array__1;
make_array.cljs$core$IFn$_invoke$arity$2 = make_array__2;
return make_array;
})()
;
/**
* Returns a javascript array, cloned from the passed in array
*/
cljs.core.aclone = (function aclone(arr){
var len = arr.length;
var new_arr = (new Array(len));
var n__25159__auto___31842 = len;
var i_31843 = (0);
while(true){
if((i_31843 < n__25159__auto___31842)){
(new_arr[i_31843] = (arr[i_31843]));

var G__31844 = (i_31843 + (1));
i_31843 = G__31844;
continue;
} else {
}
break;
}

return new_arr;
});
/**
* Creates a new javascript array.
* @param {...*} var_args
*/
cljs.core.array = (function array(var_args){
var a = (new Array(arguments.length));
var i = (0);
while(true){
if((i < a.length)){
(a[i] = (arguments[i]));

var G__31845 = (i + (1));
i = G__31845;
continue;
} else {
return a;
}
break;
}
});
/**
* Returns the value at the index.
* @param {...*} var_args
*/
cljs.core.aget = (function() {
var aget = null;
var aget__2 = (function (array,i){
return (array[i]);
});
var aget__3 = (function() { 
var G__31854__delegate = function (array,i,idxs){
var G__31851 = aget;
var G__31852 = aget.cljs$core$IFn$_invoke$arity$2(array,i);
var G__31853 = idxs;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$3 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$3(G__31851,G__31852,G__31853) : cljs.core.apply.call(null,G__31851,G__31852,G__31853));
};
var G__31854 = function (array,i,var_args){
var idxs = null;
if (arguments.length > 2) {
var G__31855__i = 0, G__31855__a = new Array(arguments.length -  2);
while (G__31855__i < G__31855__a.length) {G__31855__a[G__31855__i] = arguments[G__31855__i + 2]; ++G__31855__i;}
  idxs = new cljs.core.IndexedSeq(G__31855__a,0);
} 
return G__31854__delegate.call(this,array,i,idxs);};
G__31854.cljs$lang$maxFixedArity = 2;
G__31854.cljs$lang$applyTo = (function (arglist__31856){
var array = cljs.core.first(arglist__31856);
arglist__31856 = cljs.core.next(arglist__31856);
var i = cljs.core.first(arglist__31856);
var idxs = cljs.core.rest(arglist__31856);
return G__31854__delegate(array,i,idxs);
});
G__31854.cljs$core$IFn$_invoke$arity$variadic = G__31854__delegate;
return G__31854;
})()
;
aget = function(array,i,var_args){
var idxs = var_args;
switch(arguments.length){
case 2:
return aget__2.call(this,array,i);
default:
var G__31857 = null;
if (arguments.length > 2) {
var G__31858__i = 0, G__31858__a = new Array(arguments.length -  2);
while (G__31858__i < G__31858__a.length) {G__31858__a[G__31858__i] = arguments[G__31858__i + 2]; ++G__31858__i;}
G__31857 = new cljs.core.IndexedSeq(G__31858__a,0);
}
return aget__3.cljs$core$IFn$_invoke$arity$variadic(array,i, G__31857);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
aget.cljs$lang$maxFixedArity = 2;
aget.cljs$lang$applyTo = aget__3.cljs$lang$applyTo;
aget.cljs$core$IFn$_invoke$arity$2 = aget__2;
aget.cljs$core$IFn$_invoke$arity$variadic = aget__3.cljs$core$IFn$_invoke$arity$variadic;
return aget;
})()
;
/**
* Sets the value at the index.
* @param {...*} var_args
*/
cljs.core.aset = (function() {
var aset = null;
var aset__3 = (function (array,i,val){
return (array[i] = val);
});
var aset__4 = (function() { 
var G__31867__delegate = function (array,idx,idx2,idxv){
var G__31863 = aset;
var G__31864 = (array[idx]);
var G__31865 = idx2;
var G__31866 = idxv;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$4 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$4(G__31863,G__31864,G__31865,G__31866) : cljs.core.apply.call(null,G__31863,G__31864,G__31865,G__31866));
};
var G__31867 = function (array,idx,idx2,var_args){
var idxv = null;
if (arguments.length > 3) {
var G__31868__i = 0, G__31868__a = new Array(arguments.length -  3);
while (G__31868__i < G__31868__a.length) {G__31868__a[G__31868__i] = arguments[G__31868__i + 3]; ++G__31868__i;}
  idxv = new cljs.core.IndexedSeq(G__31868__a,0);
} 
return G__31867__delegate.call(this,array,idx,idx2,idxv);};
G__31867.cljs$lang$maxFixedArity = 3;
G__31867.cljs$lang$applyTo = (function (arglist__31869){
var array = cljs.core.first(arglist__31869);
arglist__31869 = cljs.core.next(arglist__31869);
var idx = cljs.core.first(arglist__31869);
arglist__31869 = cljs.core.next(arglist__31869);
var idx2 = cljs.core.first(arglist__31869);
var idxv = cljs.core.rest(arglist__31869);
return G__31867__delegate(array,idx,idx2,idxv);
});
G__31867.cljs$core$IFn$_invoke$arity$variadic = G__31867__delegate;
return G__31867;
})()
;
aset = function(array,idx,idx2,var_args){
var idxv = var_args;
switch(arguments.length){
case 3:
return aset__3.call(this,array,idx,idx2);
default:
var G__31870 = null;
if (arguments.length > 3) {
var G__31871__i = 0, G__31871__a = new Array(arguments.length -  3);
while (G__31871__i < G__31871__a.length) {G__31871__a[G__31871__i] = arguments[G__31871__i + 3]; ++G__31871__i;}
G__31870 = new cljs.core.IndexedSeq(G__31871__a,0);
}
return aset__4.cljs$core$IFn$_invoke$arity$variadic(array,idx,idx2, G__31870);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
aset.cljs$lang$maxFixedArity = 3;
aset.cljs$lang$applyTo = aset__4.cljs$lang$applyTo;
aset.cljs$core$IFn$_invoke$arity$3 = aset__3;
aset.cljs$core$IFn$_invoke$arity$variadic = aset__4.cljs$core$IFn$_invoke$arity$variadic;
return aset;
})()
;
/**
* Returns the length of the array. Works on arrays of all types.
*/
cljs.core.alength = (function alength(array){
return array.length;
});
cljs.core.into_array = (function() {
var into_array = null;
var into_array__1 = (function (aseq){
return into_array.cljs$core$IFn$_invoke$arity$2(null,aseq);
});
var into_array__2 = (function (type,aseq){
var G__31877 = (function (a,x){
a.push(x);

return a;
});
var G__31878 = [];
var G__31879 = aseq;
return (cljs.core.reduce.cljs$core$IFn$_invoke$arity$3 ? cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(G__31877,G__31878,G__31879) : cljs.core.reduce.call(null,G__31877,G__31878,G__31879));
});
into_array = function(type,aseq){
switch(arguments.length){
case 1:
return into_array__1.call(this,type);
case 2:
return into_array__2.call(this,type,aseq);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
into_array.cljs$core$IFn$_invoke$arity$1 = into_array__1;
into_array.cljs$core$IFn$_invoke$arity$2 = into_array__2;
return into_array;
})()
;
/**
* Invoke JavaScript object method via string. Needed when the
* string is not a valid unquoted property name.
* @param {...*} var_args
*/
cljs.core.js_invoke = (function() { 
var js_invoke__delegate = function (obj,s,args){
return (obj[s]).apply(obj,cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(args));
};
var js_invoke = function (obj,s,var_args){
var args = null;
if (arguments.length > 2) {
var G__31880__i = 0, G__31880__a = new Array(arguments.length -  2);
while (G__31880__i < G__31880__a.length) {G__31880__a[G__31880__i] = arguments[G__31880__i + 2]; ++G__31880__i;}
  args = new cljs.core.IndexedSeq(G__31880__a,0);
} 
return js_invoke__delegate.call(this,obj,s,args);};
js_invoke.cljs$lang$maxFixedArity = 2;
js_invoke.cljs$lang$applyTo = (function (arglist__31881){
var obj = cljs.core.first(arglist__31881);
arglist__31881 = cljs.core.next(arglist__31881);
var s = cljs.core.first(arglist__31881);
var args = cljs.core.rest(arglist__31881);
return js_invoke__delegate(obj,s,args);
});
js_invoke.cljs$core$IFn$_invoke$arity$variadic = js_invoke__delegate;
return js_invoke;
})()
;

cljs.core.Fn = (function (){var obj31883 = {};
return obj31883;
})();


cljs.core.IFn = (function (){var obj31885 = {};
return obj31885;
})();

cljs.core._invoke = (function() {
var _invoke = null;
var _invoke__1 = (function (this$){
if((function (){var and__24260__auto__ = this$;
if(and__24260__auto__){
return this$.cljs$core$IFn$_invoke$arity$1;
} else {
return and__24260__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$1(this$);
} else {
var x__24916__auto__ = (((this$ == null))?null:this$);
return (function (){var or__24272__auto__ = (cljs.core._invoke[(function (){var G__31931 = x__24916__auto__;
return goog.typeOf(G__31931);
})()]);
if(or__24272__auto__){
return or__24272__auto__;
} else {
var or__24272__auto____$1 = (cljs.core._invoke["_"]);
if(or__24272__auto____$1){
return or__24272__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$);
}
});
var _invoke__2 = (function (this$,a){
if((function (){var and__24260__auto__ = this$;
if(and__24260__auto__){
return this$.cljs$core$IFn$_invoke$arity$2;
} else {
return and__24260__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$2(this$,a);
} else {
var x__24916__auto__ = (((this$ == null))?null:this$);
return (function (){var or__24272__auto__ = (cljs.core._invoke[(function (){var G__31933 = x__24916__auto__;
return goog.typeOf(G__31933);
})()]);
if(or__24272__auto__){
return or__24272__auto__;
} else {
var or__24272__auto____$1 = (cljs.core._invoke["_"]);
if(or__24272__auto____$1){
return or__24272__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a);
}
});
var _invoke__3 = (function (this$,a,b){
if((function (){var and__24260__auto__ = this$;
if(and__24260__auto__){
return this$.cljs$core$IFn$_invoke$arity$3;
} else {
return and__24260__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$3(this$,a,b);
} else {
var x__24916__auto__ = (((this$ == null))?null:this$);
return (function (){var or__24272__auto__ = (cljs.core._invoke[(function (){var G__31935 = x__24916__auto__;
return goog.typeOf(G__31935);
})()]);
if(or__24272__auto__){
return or__24272__auto__;
} else {
var or__24272__auto____$1 = (cljs.core._invoke["_"]);
if(or__24272__auto____$1){
return or__24272__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b);
}
});
var _invoke__4 = (function (this$,a,b,c){
if((function (){var and__24260__auto__ = this$;
if(and__24260__auto__){
return this$.cljs$core$IFn$_invoke$arity$4;
} else {
return and__24260__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$4(this$,a,b,c);
} else {
var x__24916__auto__ = (((this$ == null))?null:this$);
return (function (){var or__24272__auto__ = (cljs.core._invoke[(function (){var G__31937 = x__24916__auto__;
return goog.typeOf(G__31937);
})()]);
if(or__24272__auto__){
return or__24272__auto__;
} else {
var or__24272__auto____$1 = (cljs.core._invoke["_"]);
if(or__24272__auto____$1){
return or__24272__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c);
}
});
var _invoke__5 = (function (this$,a,b,c,d){
if((function (){var and__24260__auto__ = this$;
if(and__24260__auto__){
return this$.cljs$core$IFn$_invoke$arity$5;
} else {
return and__24260__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$5(this$,a,b,c,d);
} else {
var x__24916__auto__ = (((this$ == null))?null:this$);
return (function (){var or__24272__auto__ = (cljs.core._invoke[(function (){var G__31939 = x__24916__auto__;
return goog.typeOf(G__31939);
})()]);
if(or__24272__auto__){
return or__24272__auto__;
} else {
var or__24272__auto____$1 = (cljs.core._invoke["_"]);
if(or__24272__auto____$1){
return or__24272__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d);
}
});
var _invoke__6 = (function (this$,a,b,c,d,e){
if((function (){var and__24260__auto__ = this$;
if(and__24260__auto__){
return this$.cljs$core$IFn$_invoke$arity$6;
} else {
return and__24260__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$6(this$,a,b,c,d,e);
} else {
var x__24916__auto__ = (((this$ == null))?null:this$);
return (function (){var or__24272__auto__ = (cljs.core._invoke[(function (){var G__31941 = x__24916__auto__;
return goog.typeOf(G__31941);
})()]);
if(or__24272__auto__){
return or__24272__auto__;
} else {
var or__24272__auto____$1 = (cljs.core._invoke["_"]);
if(or__24272__auto____$1){
return or__24272__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e);
}
});
var _invoke__7 = (function (this$,a,b,c,d,e,f){
if((function (){var and__24260__auto__ = this$;
if(and__24260__auto__){
return this$.cljs$core$IFn$_invoke$arity$7;
} else {
return and__24260__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$7(this$,a,b,c,d,e,f);
} else {
var x__24916__auto__ = (((this$ == null))?null:this$);
return (function (){var or__24272__auto__ = (cljs.core._invoke[(function (){var G__31943 = x__24916__auto__;
return goog.typeOf(G__31943);
})()]);
if(or__24272__auto__){
return or__24272__auto__;
} else {
var or__24272__auto____$1 = (cljs.core._invoke["_"]);
if(or__24272__auto____$1){
return or__24272__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f);
}
});
var _invoke__8 = (function (this$,a,b,c,d,e,f,g){
if((function (){var and__24260__auto__ = this$;
if(and__24260__auto__){
return this$.cljs$core$IFn$_invoke$arity$8;
} else {
return and__24260__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$8(this$,a,b,c,d,e,f,g);
} else {
var x__24916__auto__ = (((this$ == null))?null:this$);
return (function (){var or__24272__auto__ = (cljs.core._invoke[(function (){var G__31945 = x__24916__auto__;
return goog.typeOf(G__31945);
})()]);
if(or__24272__auto__){
return or__24272__auto__;
} else {
var or__24272__auto____$1 = (cljs.core._invoke["_"]);
if(or__24272__auto____$1){
return or__24272__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g);
}
});
var _invoke__9 = (function (this$,a,b,c,d,e,f,g,h){
if((function (){var and__24260__auto__ = this$;
if(and__24260__auto__){
return this$.cljs$core$IFn$_invoke$arity$9;
} else {
return and__24260__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$9(this$,a,b,c,d,e,f,g,h);
} else {
var x__24916__auto__ = (((this$ == null))?null:this$);
return (function (){var or__24272__auto__ = (cljs.core._invoke[(function (){var G__31947 = x__24916__auto__;
return goog.typeOf(G__31947);
})()]);
if(or__24272__auto__){
return or__24272__auto__;
} else {
var or__24272__auto____$1 = (cljs.core._invoke["_"]);
if(or__24272__auto____$1){
return or__24272__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h);
}
});
var _invoke__10 = (function (this$,a,b,c,d,e,f,g,h,i){
if((function (){var and__24260__auto__ = this$;
if(and__24260__auto__){
return this$.cljs$core$IFn$_invoke$arity$10;
} else {
return and__24260__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$10(this$,a,b,c,d,e,f,g,h,i);
} else {
var x__24916__auto__ = (((this$ == null))?null:this$);
return (function (){var or__24272__auto__ = (cljs.core._invoke[(function (){var G__31949 = x__24916__auto__;
return goog.typeOf(G__31949);
})()]);
if(or__24272__auto__){
return or__24272__auto__;
} else {
var or__24272__auto____$1 = (cljs.core._invoke["_"]);
if(or__24272__auto____$1){
return or__24272__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i);
}
});
var _invoke__11 = (function (this$,a,b,c,d,e,f,g,h,i,j){
if((function (){var and__24260__auto__ = this$;
if(and__24260__auto__){
return this$.cljs$core$IFn$_invoke$arity$11;
} else {
return and__24260__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$11(this$,a,b,c,d,e,f,g,h,i,j);
} else {
var x__24916__auto__ = (((this$ == null))?null:this$);
return (function (){var or__24272__auto__ = (cljs.core._invoke[(function (){var G__31951 = x__24916__auto__;
return goog.typeOf(G__31951);
})()]);
if(or__24272__auto__){
return or__24272__auto__;
} else {
var or__24272__auto____$1 = (cljs.core._invoke["_"]);
if(or__24272__auto____$1){
return or__24272__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j);
}
});
var _invoke__12 = (function (this$,a,b,c,d,e,f,g,h,i,j,k){
if((function (){var and__24260__auto__ = this$;
if(and__24260__auto__){
return this$.cljs$core$IFn$_invoke$arity$12;
} else {
return and__24260__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$12(this$,a,b,c,d,e,f,g,h,i,j,k);
} else {
var x__24916__auto__ = (((this$ == null))?null:this$);
return (function (){var or__24272__auto__ = (cljs.core._invoke[(function (){var G__31953 = x__24916__auto__;
return goog.typeOf(G__31953);
})()]);
if(or__24272__auto__){
return or__24272__auto__;
} else {
var or__24272__auto____$1 = (cljs.core._invoke["_"]);
if(or__24272__auto____$1){
return or__24272__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k);
}
});
var _invoke__13 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l){
if((function (){var and__24260__auto__ = this$;
if(and__24260__auto__){
return this$.cljs$core$IFn$_invoke$arity$13;
} else {
return and__24260__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$13(this$,a,b,c,d,e,f,g,h,i,j,k,l);
} else {
var x__24916__auto__ = (((this$ == null))?null:this$);
return (function (){var or__24272__auto__ = (cljs.core._invoke[(function (){var G__31955 = x__24916__auto__;
return goog.typeOf(G__31955);
})()]);
if(or__24272__auto__){
return or__24272__auto__;
} else {
var or__24272__auto____$1 = (cljs.core._invoke["_"]);
if(or__24272__auto____$1){
return or__24272__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l);
}
});
var _invoke__14 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m){
if((function (){var and__24260__auto__ = this$;
if(and__24260__auto__){
return this$.cljs$core$IFn$_invoke$arity$14;
} else {
return and__24260__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$14(this$,a,b,c,d,e,f,g,h,i,j,k,l,m);
} else {
var x__24916__auto__ = (((this$ == null))?null:this$);
return (function (){var or__24272__auto__ = (cljs.core._invoke[(function (){var G__31957 = x__24916__auto__;
return goog.typeOf(G__31957);
})()]);
if(or__24272__auto__){
return or__24272__auto__;
} else {
var or__24272__auto____$1 = (cljs.core._invoke["_"]);
if(or__24272__auto____$1){
return or__24272__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m);
}
});
var _invoke__15 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n){
if((function (){var and__24260__auto__ = this$;
if(and__24260__auto__){
return this$.cljs$core$IFn$_invoke$arity$15;
} else {
return and__24260__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$15(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
} else {
var x__24916__auto__ = (((this$ == null))?null:this$);
return (function (){var or__24272__auto__ = (cljs.core._invoke[(function (){var G__31959 = x__24916__auto__;
return goog.typeOf(G__31959);
})()]);
if(or__24272__auto__){
return or__24272__auto__;
} else {
var or__24272__auto____$1 = (cljs.core._invoke["_"]);
if(or__24272__auto____$1){
return or__24272__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
}
});
var _invoke__16 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
if((function (){var and__24260__auto__ = this$;
if(and__24260__auto__){
return this$.cljs$core$IFn$_invoke$arity$16;
} else {
return and__24260__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$16(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
} else {
var x__24916__auto__ = (((this$ == null))?null:this$);
return (function (){var or__24272__auto__ = (cljs.core._invoke[(function (){var G__31961 = x__24916__auto__;
return goog.typeOf(G__31961);
})()]);
if(or__24272__auto__){
return or__24272__auto__;
} else {
var or__24272__auto____$1 = (cljs.core._invoke["_"]);
if(or__24272__auto____$1){
return or__24272__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
}
});
var _invoke__17 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
if((function (){var and__24260__auto__ = this$;
if(and__24260__auto__){
return this$.cljs$core$IFn$_invoke$arity$17;
} else {
return and__24260__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$17(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
} else {
var x__24916__auto__ = (((this$ == null))?null:this$);
return (function (){var or__24272__auto__ = (cljs.core._invoke[(function (){var G__31963 = x__24916__auto__;
return goog.typeOf(G__31963);
})()]);
if(or__24272__auto__){
return or__24272__auto__;
} else {
var or__24272__auto____$1 = (cljs.core._invoke["_"]);
if(or__24272__auto____$1){
return or__24272__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
}
});
var _invoke__18 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
if((function (){var and__24260__auto__ = this$;
if(and__24260__auto__){
return this$.cljs$core$IFn$_invoke$arity$18;
} else {
return and__24260__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$18(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
} else {
var x__24916__auto__ = (((this$ == null))?null:this$);
return (function (){var or__24272__auto__ = (cljs.core._invoke[(function (){var G__31965 = x__24916__auto__;
return goog.typeOf(G__31965);
})()]);
if(or__24272__auto__){
return or__24272__auto__;
} else {
var or__24272__auto____$1 = (cljs.core._invoke["_"]);
if(or__24272__auto____$1){
return or__24272__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
}
});
var _invoke__19 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
if((function (){var and__24260__auto__ = this$;
if(and__24260__auto__){
return this$.cljs$core$IFn$_invoke$arity$19;
} else {
return and__24260__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$19(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
} else {
var x__24916__auto__ = (((this$ == null))?null:this$);
return (function (){var or__24272__auto__ = (cljs.core._invoke[(function (){var G__31967 = x__24916__auto__;
return goog.typeOf(G__31967);
})()]);
if(or__24272__auto__){
return or__24272__auto__;
} else {
var or__24272__auto____$1 = (cljs.core._invoke["_"]);
if(or__24272__auto____$1){
return or__24272__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
}
});
var _invoke__20 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
if((function (){var and__24260__auto__ = this$;
if(and__24260__auto__){
return this$.cljs$core$IFn$_invoke$arity$20;
} else {
return and__24260__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$20(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
} else {
var x__24916__auto__ = (((this$ == null))?null:this$);
return (function (){var or__24272__auto__ = (cljs.core._invoke[(function (){var G__31969 = x__24916__auto__;
return goog.typeOf(G__31969);
})()]);
if(or__24272__auto__){
return or__24272__auto__;
} else {
var or__24272__auto____$1 = (cljs.core._invoke["_"]);
if(or__24272__auto____$1){
return or__24272__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
}
});
var _invoke__21 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
if((function (){var and__24260__auto__ = this$;
if(and__24260__auto__){
return this$.cljs$core$IFn$_invoke$arity$21;
} else {
return and__24260__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$21(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
} else {
var x__24916__auto__ = (((this$ == null))?null:this$);
return (function (){var or__24272__auto__ = (cljs.core._invoke[(function (){var G__31971 = x__24916__auto__;
return goog.typeOf(G__31971);
})()]);
if(or__24272__auto__){
return or__24272__auto__;
} else {
var or__24272__auto____$1 = (cljs.core._invoke["_"]);
if(or__24272__auto____$1){
return or__24272__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
}
});
var _invoke__22 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
if((function (){var and__24260__auto__ = this$;
if(and__24260__auto__){
return this$.cljs$core$IFn$_invoke$arity$22;
} else {
return and__24260__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$22(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest);
} else {
var x__24916__auto__ = (((this$ == null))?null:this$);
return (function (){var or__24272__auto__ = (cljs.core._invoke[(function (){var G__31973 = x__24916__auto__;
return goog.typeOf(G__31973);
})()]);
if(or__24272__auto__){
return or__24272__auto__;
} else {
var or__24272__auto____$1 = (cljs.core._invoke["_"]);
if(or__24272__auto____$1){
return or__24272__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest);
}
});
_invoke = function(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
switch(arguments.length){
case 1:
return _invoke__1.call(this,this$);
case 2:
return _invoke__2.call(this,this$,a);
case 3:
return _invoke__3.call(this,this$,a,b);
case 4:
return _invoke__4.call(this,this$,a,b,c);
case 5:
return _invoke__5.call(this,this$,a,b,c,d);
case 6:
return _invoke__6.call(this,this$,a,b,c,d,e);
case 7:
return _invoke__7.call(this,this$,a,b,c,d,e,f);
case 8:
return _invoke__8.call(this,this$,a,b,c,d,e,f,g);
case 9:
return _invoke__9.call(this,this$,a,b,c,d,e,f,g,h);
case 10:
return _invoke__10.call(this,this$,a,b,c,d,e,f,g,h,i);
case 11:
return _invoke__11.call(this,this$,a,b,c,d,e,f,g,h,i,j);
case 12:
return _invoke__12.call(this,this$,a,b,c,d,e,f,g,h,i,j,k);
case 13:
return _invoke__13.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l);
case 14:
return _invoke__14.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m);
case 15:
return _invoke__15.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
case 16:
return _invoke__16.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
case 17:
return _invoke__17.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
case 18:
return _invoke__18.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
case 19:
return _invoke__19.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
case 20:
return _invoke__20.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
case 21:
return _invoke__21.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
case 22:
return _invoke__22.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_invoke.cljs$core$IFn$_invoke$arity$1 = _invoke__1;
_invoke.cljs$core$IFn$_invoke$arity$2 = _invoke__2;
_invoke.cljs$core$IFn$_invoke$arity$3 = _invoke__3;
_invoke.cljs$core$IFn$_invoke$arity$4 = _invoke__4;
_invoke.cljs$core$IFn$_invoke$arity$5 = _invoke__5;
_invoke.cljs$core$IFn$_invoke$arity$6 = _invoke__6;
_invoke.cljs$core$IFn$_invoke$arity$7 = _invoke__7;
_invoke.cljs$core$IFn$_invoke$arity$8 = _invoke__8;
_invoke.cljs$core$IFn$_invoke$arity$9 = _invoke__9;
_invoke.cljs$core$IFn$_invoke$arity$10 = _invoke__10;
_invoke.cljs$core$IFn$_invoke$arity$11 = _invoke__11;
_invoke.cljs$core$IFn$_invoke$arity$12 = _invoke__12;
_invoke.cljs$core$IFn$_invoke$arity$13 = _invoke__13;
_invoke.cljs$core$IFn$_invoke$arity$14 = _invoke__14;
_invoke.cljs$core$IFn$_invoke$arity$15 = _invoke__15;
_invoke.cljs$core$IFn$_invoke$arity$16 = _invoke__16;
_invoke.cljs$core$IFn$_invoke$arity$17 = _invoke__17;
_invoke.cljs$core$IFn$_invoke$arity$18 = _invoke__18;
_invoke.cljs$core$IFn$_invoke$arity$19 = _invoke__19;
_invoke.cljs$core$IFn$_invoke$arity$20 = _invoke__20;
_invoke.cljs$core$IFn$_invoke$arity$21 = _invoke__21;
_invoke.cljs$core$IFn$_invoke$arity$22 = _invoke__22;
return _invoke;
})()
;


cljs.core.ICloneable = (function (){var obj31975 = {};
return obj31975;
})();

cljs.core._clone = (function _clone(value){
if((function (){var and__24260__auto__ = value;
if(and__24260__auto__){
return value.cljs$core$ICloneable$_clone$arity$1;
} else {
return and__24260__auto__;
}
})()){
return value.cljs$core$ICloneable$_clone$arity$1(value);
} else {
var x__24916__auto__ = (((value == null))?null:value);
return (function (){var or__24272__auto__ = (cljs.core._clone[(function (){var G__31979 = x__24916__auto__;
return goog.typeOf(G__31979);
})()]);
if(or__24272__auto__){
return or__24272__auto__;
} else {
var or__24272__auto____$1 = (cljs.core._clone["_"]);
if(or__24272__auto____$1){
return or__24272__auto____$1;
} else {
throw cljs.core.missing_protocol("ICloneable.-clone",value);
}
}
})().call(null,value);
}
});


cljs.core.ICounted = (function (){var obj31981 = {};
return obj31981;
})();

cljs.core._count = (function _count(coll){
if((function (){var and__24260__auto__ = coll;
if(and__24260__auto__){
return coll.cljs$core$ICounted$_count$arity$1;
} else {
return and__24260__auto__;
}
})()){
return coll.cljs$core$ICounted$_count$arity$1(coll);
} else {
var x__24916__auto__ = (((coll == null))?null:coll);
return (function (){var or__24272__auto__ = (cljs.core._count[(function (){var G__31985 = x__24916__auto__;
return goog.typeOf(G__31985);
})()]);
if(or__24272__auto__){
return or__24272__auto__;
} else {
var or__24272__auto____$1 = (cljs.core._count["_"]);
if(or__24272__auto____$1){
return or__24272__auto____$1;
} else {
throw cljs.core.missing_protocol("ICounted.-count",coll);
}
}
})().call(null,coll);
}
});


cljs.core.IEmptyableCollection = (function (){var obj31987 = {};
return obj31987;
})();

cljs.core._empty = (function _empty(coll){
if((function (){var and__24260__auto__ = coll;
if(and__24260__auto__){
return coll.cljs$core$IEmptyableCollection$_empty$arity$1;
} else {
return and__24260__auto__;
}
})()){
return coll.cljs$core$IEmptyableCollection$_empty$arity$1(coll);
} else {
var x__24916__auto__ = (((coll == null))?null:coll);
return (function (){var or__24272__auto__ = (cljs.core._empty[(function (){var G__31991 = x__24916__auto__;
return goog.typeOf(G__31991);
})()]);
if(or__24272__auto__){
return or__24272__auto__;
} else {
var or__24272__auto____$1 = (cljs.core._empty["_"]);
if(or__24272__auto____$1){
return or__24272__auto____$1;
} else {
throw cljs.core.missing_protocol("IEmptyableCollection.-empty",coll);
}
}
})().call(null,coll);
}
});


cljs.core.ICollection = (function (){var obj31993 = {};
return obj31993;
})();

cljs.core._conj = (function _conj(coll,o){
if((function (){var and__24260__auto__ = coll;
if(and__24260__auto__){
return coll.cljs$core$ICollection$_conj$arity$2;
} else {
return and__24260__auto__;
}
})()){
return coll.cljs$core$ICollection$_conj$arity$2(coll,o);
} else {
var x__24916__auto__ = (((coll == null))?null:coll);
return (function (){var or__24272__auto__ = (cljs.core._conj[(function (){var G__31997 = x__24916__auto__;
return goog.typeOf(G__31997);
})()]);
if(or__24272__auto__){
return or__24272__auto__;
} else {
var or__24272__auto____$1 = (cljs.core._conj["_"]);
if(or__24272__auto____$1){
return or__24272__auto____$1;
} else {
throw cljs.core.missing_protocol("ICollection.-conj",coll);
}
}
})().call(null,coll,o);
}
});


cljs.core.IIndexed = (function (){var obj31999 = {};
return obj31999;
})();

cljs.core._nth = (function() {
var _nth = null;
var _nth__2 = (function (coll,n){
if((function (){var and__24260__auto__ = coll;
if(and__24260__auto__){
return coll.cljs$core$IIndexed$_nth$arity$2;
} else {
return and__24260__auto__;
}
})()){
return coll.cljs$core$IIndexed$_nth$arity$2(coll,n);
} else {
var x__24916__auto__ = (((coll == null))?null:coll);
return (function (){var or__24272__auto__ = (cljs.core._nth[(function (){var G__32005 = x__24916__auto__;
return goog.typeOf(G__32005);
})()]);
if(or__24272__auto__){
return or__24272__auto__;
} else {
var or__24272__auto____$1 = (cljs.core._nth["_"]);
if(or__24272__auto____$1){
return or__24272__auto____$1;
} else {
throw cljs.core.missing_protocol("IIndexed.-nth",coll);
}
}
})().call(null,coll,n);
}
});
var _nth__3 = (function (coll,n,not_found){
if((function (){var and__24260__auto__ = coll;
if(and__24260__auto__){
return coll.cljs$core$IIndexed$_nth$arity$3;
} else {
return and__24260__auto__;
}
})()){
return coll.cljs$core$IIndexed$_nth$arity$3(coll,n,not_found);
} else {
var x__24916__auto__ = (((coll == null))?null:coll);
return (function (){var or__24272__auto__ = (cljs.core._nth[(function (){var G__32007 = x__24916__auto__;
return goog.typeOf(G__32007);
})()]);
if(or__24272__auto__){
return or__24272__auto__;
} else {
var or__24272__auto____$1 = (cljs.core._nth["_"]);
if(or__24272__auto____$1){
return or__24272__auto____$1;
} else {
throw cljs.core.missing_protocol("IIndexed.-nth",coll);
}
}
})().call(null,coll,n,not_found);
}
});
_nth = function(coll,n,not_found){
switch(arguments.length){
case 2:
return _nth__2.call(this,coll,n);
case 3:
return _nth__3.call(this,coll,n,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_nth.cljs$core$IFn$_invoke$arity$2 = _nth__2;
_nth.cljs$core$IFn$_invoke$arity$3 = _nth__3;
return _nth;
})()
;


cljs.core.ASeq = (function (){var obj32009 = {};
return obj32009;
})();


cljs.core.ISeq = (function (){var obj32011 = {};
return obj32011;
})();

cljs.core._first = (function _first(coll){
if((function (){var and__24260__auto__ = coll;
if(and__24260__auto__){
return coll.cljs$core$ISeq$_first$arity$1;
} else {
return and__24260__auto__;
}
})()){
return coll.cljs$core$ISeq$_first$arity$1(coll);
} else {
var x__24916__auto__ = (((coll == null))?null:coll);
return (function (){var or__24272__auto__ = (cljs.core._first[(function (){var G__32015 = x__24916__auto__;
return goog.typeOf(G__32015);
})()]);
if(or__24272__auto__){
return or__24272__auto__;
} else {
var or__24272__auto____$1 = (cljs.core._first["_"]);
if(or__24272__auto____$1){
return or__24272__auto____$1;
} else {
throw cljs.core.missing_protocol("ISeq.-first",coll);
}
}
})().call(null,coll);
}
});

cljs.core._rest = (function _rest(coll){
if((function (){var and__24260__auto__ = coll;
if(and__24260__auto__){
return coll.cljs$core$ISeq$_rest$arity$1;
} else {
return and__24260__auto__;
}
})()){
return coll.cljs$core$ISeq$_rest$arity$1(coll);
} else {
var x__24916__auto__ = (((coll == null))?null:coll);
return (function (){var or__24272__auto__ = (cljs.core._rest[(function (){var G__32019 = x__24916__auto__;
return goog.typeOf(G__32019);
})()]);
if(or__24272__auto__){
return or__24272__auto__;
} else {
var or__24272__auto____$1 = (cljs.core._rest["_"]);
if(or__24272__auto____$1){
return or__24272__auto____$1;
} else {
throw cljs.core.missing_protocol("ISeq.-rest",coll);
}
}
})().call(null,coll);
}
});


cljs.core.INext = (function (){var obj32021 = {};
return obj32021;
})();

cljs.core._next = (function _next(coll){
if((function (){var and__24260__auto__ = coll;
if(and__24260__auto__){
return coll.cljs$core$INext$_next$arity$1;
} else {
return and__24260__auto__;
}
})()){
return coll.cljs$core$INext$_next$arity$1(coll);
} else {
var x__24916__auto__ = (((coll == null))?null:coll);
return (function (){var or__24272__auto__ = (cljs.core._next[(function (){var G__32025 = x__24916__auto__;
return goog.typeOf(G__32025);
})()]);
if(or__24272__auto__){
return or__24272__auto__;
} else {
var or__24272__auto____$1 = (cljs.core._next["_"]);
if(or__24272__auto____$1){
return or__24272__auto____$1;
} else {
throw cljs.core.missing_protocol("INext.-next",coll);
}
}
})().call(null,coll);
}
});


cljs.core.ILookup = (function (){var obj32027 = {};
return obj32027;
})();

cljs.core._lookup = (function() {
var _lookup = null;
var _lookup__2 = (function (o,k){
if((function (){var and__24260__auto__ = o;
if(and__24260__auto__){
return o.cljs$core$ILookup$_lookup$arity$2;
} else {
return and__24260__auto__;
}
})()){
return o.cljs$core$ILookup$_lookup$arity$2(o,k);
} else {
var x__24916__auto__ = (((o == null))?null:o);
return (function (){var or__24272__auto__ = (cljs.core._lookup[(function (){var G__32033 = x__24916__auto__;
return goog.typeOf(G__32033);
})()]);
if(or__24272__auto__){
return or__24272__auto__;
} else {
var or__24272__auto____$1 = (cljs.core._lookup["_"]);
if(or__24272__auto____$1){
return or__24272__auto____$1;
} else {
throw cljs.core.missing_protocol("ILookup.-lookup",o);
}
}
})().call(null,o,k);
}
});
var _lookup__3 = (function (o,k,not_found){
if((function (){var and__24260__auto__ = o;
if(and__24260__auto__){
return o.cljs$core$ILookup$_lookup$arity$3;
} else {
return and__24260__auto__;
}
})()){
return o.cljs$core$ILookup$_lookup$arity$3(o,k,not_found);
} else {
var x__24916__auto__ = (((o == null))?null:o);
return (function (){var or__24272__auto__ = (cljs.core._lookup[(function (){var G__32035 = x__24916__auto__;
return goog.typeOf(G__32035);
})()]);
if(or__24272__auto__){
return or__24272__auto__;
} else {
var or__24272__auto____$1 = (cljs.core._lookup["_"]);
if(or__24272__auto____$1){
return or__24272__auto____$1;
} else {
throw cljs.core.missing_protocol("ILookup.-lookup",o);
}
}
})().call(null,o,k,not_found);
}
});
_lookup = function(o,k,not_found){
switch(arguments.length){
case 2:
return _lookup__2.call(this,o,k);
case 3:
return _lookup__3.call(this,o,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_lookup.cljs$core$IFn$_invoke$arity$2 = _lookup__2;
_lookup.cljs$core$IFn$_invoke$arity$3 = _lookup__3;
return _lookup;
})()
;


cljs.core.IAssociative = (function (){var obj32037 = {};
return obj32037;
})();

cljs.core._contains_key_QMARK_ = (function _contains_key_QMARK_(coll,k){
if((function (){var and__24260__auto__ = coll;
if(and__24260__auto__){
return coll.cljs$core$IAssociative$_contains_key_QMARK_$arity$2;
} else {
return and__24260__auto__;
}
})()){
return coll.cljs$core$IAssociative$_contains_key_QMARK_$arity$2(coll,k);
} else {
var x__24916__auto__ = (((coll == null))?null:coll);
return (function (){var or__24272__auto__ = (cljs.core._contains_key_QMARK_[(function (){var G__32041 = x__24916__auto__;
return goog.typeOf(G__32041);
})()]);
if(or__24272__auto__){
return or__24272__auto__;
} else {
var or__24272__auto____$1 = (cljs.core._contains_key_QMARK_["_"]);
if(or__24272__auto____$1){
return or__24272__auto____$1;
} else {
throw cljs.core.missing_protocol("IAssociative.-contains-key?",coll);
}
}
})().call(null,coll,k);
}
});

cljs.core._assoc = (function _assoc(coll,k,v){
if((function (){var and__24260__auto__ = coll;
if(and__24260__auto__){
return coll.cljs$core$IAssociative$_assoc$arity$3;
} else {
return and__24260__auto__;
}
})()){
return coll.cljs$core$IAssociative$_assoc$arity$3(coll,k,v);
} else {
var x__24916__auto__ = (((coll == null))?null:coll);
return (function (){var or__24272__auto__ = (cljs.core._assoc[(function (){var G__32045 = x__24916__auto__;
return goog.typeOf(G__32045);
})()]);
if(or__24272__auto__){
return or__24272__auto__;
} else {
var or__24272__auto____$1 = (cljs.core._assoc["_"]);
if(or__24272__auto____$1){
return or__24272__auto____$1;
} else {
throw cljs.core.missing_protocol("IAssociative.-assoc",coll);
}
}
})().call(null,coll,k,v);
}
});


cljs.core.IMap = (function (){var obj32047 = {};
return obj32047;
})();

cljs.core._dissoc = (function _dissoc(coll,k){
if((function (){var and__24260__auto__ = coll;
if(and__24260__auto__){
return coll.cljs$core$IMap$_dissoc$arity$2;
} else {
return and__24260__auto__;
}
})()){
return coll.cljs$core$IMap$_dissoc$arity$2(coll,k);
} else {
var x__24916__auto__ = (((coll == null))?null:coll);
return (function (){var or__24272__auto__ = (cljs.core._dissoc[(function (){var G__32051 = x__24916__auto__;
return goog.typeOf(G__32051);
})()]);
if(or__24272__auto__){
return or__24272__auto__;
} else {
var or__24272__auto____$1 = (cljs.core._dissoc["_"]);
if(or__24272__auto____$1){
return or__24272__auto____$1;
} else {
throw cljs.core.missing_protocol("IMap.-dissoc",coll);
}
}
})().call(null,coll,k);
}
});


cljs.core.IMapEntry = (function (){var obj32053 = {};
return obj32053;
})();

cljs.core._key = (function _key(coll){
if((function (){var and__24260__auto__ = coll;
if(and__24260__auto__){
return coll.cljs$core$IMapEntry$_key$arity$1;
} else {
return and__24260__auto__;
}
})()){
return coll.cljs$core$IMapEntry$_key$arity$1(coll);
} else {
var x__24916__auto__ = (((coll == null))?null:coll);
return (function (){var or__24272__auto__ = (cljs.core._key[(function (){var G__32057 = x__24916__auto__;
return goog.typeOf(G__32057);
})()]);
if(or__24272__auto__){
return or__24272__auto__;
} else {
var or__24272__auto____$1 = (cljs.core._key["_"]);
if(or__24272__auto____$1){
return or__24272__auto____$1;
} else {
throw cljs.core.missing_protocol("IMapEntry.-key",coll);
}
}
})().call(null,coll);
}
});

cljs.core._val = (function _val(coll){
if((function (){var and__24260__auto__ = coll;
if(and__24260__auto__){
return coll.cljs$core$IMapEntry$_val$arity$1;
} else {
return and__24260__auto__;
}
})()){
return coll.cljs$core$IMapEntry$_val$arity$1(coll);
} else {
var x__24916__auto__ = (((coll == null))?null:coll);
return (function (){var or__24272__auto__ = (cljs.core._val[(function (){var G__32061 = x__24916__auto__;
return goog.typeOf(G__32061);
})()]);
if(or__24272__auto__){
return or__24272__auto__;
} else {
var or__24272__auto____$1 = (cljs.core._val["_"]);
if(or__24272__auto____$1){
return or__24272__auto____$1;
} else {
throw cljs.core.missing_protocol("IMapEntry.-val",coll);
}
}
})().call(null,coll);
}
});


cljs.core.ISet = (function (){var obj32063 = {};
return obj32063;
})();

cljs.core._disjoin = (function _disjoin(coll,v){
if((function (){var and__24260__auto__ = coll;
if(and__24260__auto__){
return coll.cljs$core$ISet$_disjoin$arity$2;
} else {
return and__24260__auto__;
}
})()){
return coll.cljs$core$ISet$_disjoin$arity$2(coll,v);
} else {
var x__24916__auto__ = (((coll == null))?null:coll);
return (function (){var or__24272__auto__ = (cljs.core._disjoin[(function (){var G__32067 = x__24916__auto__;
return goog.typeOf(G__32067);
})()]);
if(or__24272__auto__){
return or__24272__auto__;
} else {
var or__24272__auto____$1 = (cljs.core._disjoin["_"]);
if(or__24272__auto____$1){
return or__24272__auto____$1;
} else {
throw cljs.core.missing_protocol("ISet.-disjoin",coll);
}
}
})().call(null,coll,v);
}
});


cljs.core.IStack = (function (){var obj32069 = {};
return obj32069;
})();

cljs.core._peek = (function _peek(coll){
if((function (){var and__24260__auto__ = coll;
if(and__24260__auto__){
return coll.cljs$core$IStack$_peek$arity$1;
} else {
return and__24260__auto__;
}
})()){
return coll.cljs$core$IStack$_peek$arity$1(coll);
} else {
var x__24916__auto__ = (((coll == null))?null:coll);
return (function (){var or__24272__auto__ = (cljs.core._peek[(function (){var G__32073 = x__24916__auto__;
return goog.typeOf(G__32073);
})()]);
if(or__24272__auto__){
return or__24272__auto__;
} else {
var or__24272__auto____$1 = (cljs.core._peek["_"]);
if(or__24272__auto____$1){
return or__24272__auto____$1;
} else {
throw cljs.core.missing_protocol("IStack.-peek",coll);
}
}
})().call(null,coll);
}
});

cljs.core._pop = (function _pop(coll){
if((function (){var and__24260__auto__ = coll;
if(and__24260__auto__){
return coll.cljs$core$IStack$_pop$arity$1;
} else {
return and__24260__auto__;
}
})()){
return coll.cljs$core$IStack$_pop$arity$1(coll);
} else {
var x__24916__auto__ = (((coll == null))?null:coll);
return (function (){var or__24272__auto__ = (cljs.core._pop[(function (){var G__32077 = x__24916__auto__;
return goog.typeOf(G__32077);
})()]);
if(or__24272__auto__){
return or__24272__auto__;
} else {
var or__24272__auto____$1 = (cljs.core._pop["_"]);
if(or__24272__auto____$1){
return or__24272__auto____$1;
} else {
throw cljs.core.missing_protocol("IStack.-pop",coll);
}
}
})().call(null,coll);
}
});


cljs.core.IVector = (function (){var obj32079 = {};
return obj32079;
})();

cljs.core._assoc_n = (function _assoc_n(coll,n,val){
if((function (){var and__24260__auto__ = coll;
if(and__24260__auto__){
return coll.cljs$core$IVector$_assoc_n$arity$3;
} else {
return and__24260__auto__;
}
})()){
return coll.cljs$core$IVector$_assoc_n$arity$3(coll,n,val);
} else {
var x__24916__auto__ = (((coll == null))?null:coll);
return (function (){var or__24272__auto__ = (cljs.core._assoc_n[(function (){var G__32083 = x__24916__auto__;
return goog.typeOf(G__32083);
})()]);
if(or__24272__auto__){
return or__24272__auto__;
} else {
var or__24272__auto____$1 = (cljs.core._assoc_n["_"]);
if(or__24272__auto____$1){
return or__24272__auto____$1;
} else {
throw cljs.core.missing_protocol("IVector.-assoc-n",coll);
}
}
})().call(null,coll,n,val);
}
});


cljs.core.IDeref = (function (){var obj32085 = {};
return obj32085;
})();

cljs.core._deref = (function _deref(o){
if((function (){var and__24260__auto__ = o;
if(and__24260__auto__){
return o.cljs$core$IDeref$_deref$arity$1;
} else {
return and__24260__auto__;
}
})()){
return o.cljs$core$IDeref$_deref$arity$1(o);
} else {
var x__24916__auto__ = (((o == null))?null:o);
return (function (){var or__24272__auto__ = (cljs.core._deref[(function (){var G__32089 = x__24916__auto__;
return goog.typeOf(G__32089);
})()]);
if(or__24272__auto__){
return or__24272__auto__;
} else {
var or__24272__auto____$1 = (cljs.core._deref["_"]);
if(or__24272__auto____$1){
return or__24272__auto____$1;
} else {
throw cljs.core.missing_protocol("IDeref.-deref",o);
}
}
})().call(null,o);
}
});


cljs.core.IDerefWithTimeout = (function (){var obj32091 = {};
return obj32091;
})();

cljs.core._deref_with_timeout = (function _deref_with_timeout(o,msec,timeout_val){
if((function (){var and__24260__auto__ = o;
if(and__24260__auto__){
return o.cljs$core$IDerefWithTimeout$_deref_with_timeout$arity$3;
} else {
return and__24260__auto__;
}
})()){
return o.cljs$core$IDerefWithTimeout$_deref_with_timeout$arity$3(o,msec,timeout_val);
} else {
var x__24916__auto__ = (((o == null))?null:o);
return (function (){var or__24272__auto__ = (cljs.core._deref_with_timeout[(function (){var G__32095 = x__24916__auto__;
return goog.typeOf(G__32095);
})()]);
if(or__24272__auto__){
return or__24272__auto__;
} else {
var or__24272__auto____$1 = (cljs.core._deref_with_timeout["_"]);
if(or__24272__auto____$1){
return or__24272__auto____$1;
} else {
throw cljs.core.missing_protocol("IDerefWithTimeout.-deref-with-timeout",o);
}
}
})().call(null,o,msec,timeout_val);
}
});


cljs.core.IMeta = (function (){var obj32097 = {};
return obj32097;
})();

cljs.core._meta = (function _meta(o){
if((function (){var and__24260__auto__ = o;
if(and__24260__auto__){
return o.cljs$core$IMeta$_meta$arity$1;
} else {
return and__24260__auto__;
}
})()){
return o.cljs$core$IMeta$_meta$arity$1(o);
} else {
var x__24916__auto__ = (((o == null))?null:o);
return (function (){var or__24272__auto__ = (cljs.core._meta[(function (){var G__32101 = x__24916__auto__;
return goog.typeOf(G__32101);
})()]);
if(or__24272__auto__){
return or__24272__auto__;
} else {
var or__24272__auto____$1 = (cljs.core._meta["_"]);
if(or__24272__auto____$1){
return or__24272__auto____$1;
} else {
throw cljs.core.missing_protocol("IMeta.-meta",o);
}
}
})().call(null,o);
}
});


cljs.core.IWithMeta = (function (){var obj32103 = {};
return obj32103;
})();

cljs.core._with_meta = (function _with_meta(o,meta){
if((function (){var and__24260__auto__ = o;
if(and__24260__auto__){
return o.cljs$core$IWithMeta$_with_meta$arity$2;
} else {
return and__24260__auto__;
}
})()){
return o.cljs$core$IWithMeta$_with_meta$arity$2(o,meta);
} else {
var x__24916__auto__ = (((o == null))?null:o);
return (function (){var or__24272__auto__ = (cljs.core._with_meta[(function (){var G__32107 = x__24916__auto__;
return goog.typeOf(G__32107);
})()]);
if(or__24272__auto__){
return or__24272__auto__;
} else {
var or__24272__auto____$1 = (cljs.core._with_meta["_"]);
if(or__24272__auto____$1){
return or__24272__auto____$1;
} else {
throw cljs.core.missing_protocol("IWithMeta.-with-meta",o);
}
}
})().call(null,o,meta);
}
});


cljs.core.IReduce = (function (){var obj32109 = {};
return obj32109;
})();

cljs.core._reduce = (function() {
var _reduce = null;
var _reduce__2 = (function (coll,f){
if((function (){var and__24260__auto__ = coll;
if(and__24260__auto__){
return coll.cljs$core$IReduce$_reduce$arity$2;
} else {
return and__24260__auto__;
}
})()){
return coll.cljs$core$IReduce$_reduce$arity$2(coll,f);
} else {
var x__24916__auto__ = (((coll == null))?null:coll);
return (function (){var or__24272__auto__ = (cljs.core._reduce[(function (){var G__32115 = x__24916__auto__;
return goog.typeOf(G__32115);
})()]);
if(or__24272__auto__){
return or__24272__auto__;
} else {
var or__24272__auto____$1 = (cljs.core._reduce["_"]);
if(or__24272__auto____$1){
return or__24272__auto____$1;
} else {
throw cljs.core.missing_protocol("IReduce.-reduce",coll);
}
}
})().call(null,coll,f);
}
});
var _reduce__3 = (function (coll,f,start){
if((function (){var and__24260__auto__ = coll;
if(and__24260__auto__){
return coll.cljs$core$IReduce$_reduce$arity$3;
} else {
return and__24260__auto__;
}
})()){
return coll.cljs$core$IReduce$_reduce$arity$3(coll,f,start);
} else {
var x__24916__auto__ = (((coll == null))?null:coll);
return (function (){var or__24272__auto__ = (cljs.core._reduce[(function (){var G__32117 = x__24916__auto__;
return goog.typeOf(G__32117);
})()]);
if(or__24272__auto__){
return or__24272__auto__;
} else {
var or__24272__auto____$1 = (cljs.core._reduce["_"]);
if(or__24272__auto____$1){
return or__24272__auto____$1;
} else {
throw cljs.core.missing_protocol("IReduce.-reduce",coll);
}
}
})().call(null,coll,f,start);
}
});
_reduce = function(coll,f,start){
switch(arguments.length){
case 2:
return _reduce__2.call(this,coll,f);
case 3:
return _reduce__3.call(this,coll,f,start);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_reduce.cljs$core$IFn$_invoke$arity$2 = _reduce__2;
_reduce.cljs$core$IFn$_invoke$arity$3 = _reduce__3;
return _reduce;
})()
;


cljs.core.IKVReduce = (function (){var obj32119 = {};
return obj32119;
})();

cljs.core._kv_reduce = (function _kv_reduce(coll,f,init){
if((function (){var and__24260__auto__ = coll;
if(and__24260__auto__){
return coll.cljs$core$IKVReduce$_kv_reduce$arity$3;
} else {
return and__24260__auto__;
}
})()){
return coll.cljs$core$IKVReduce$_kv_reduce$arity$3(coll,f,init);
} else {
var x__24916__auto__ = (((coll == null))?null:coll);
return (function (){var or__24272__auto__ = (cljs.core._kv_reduce[(function (){var G__32123 = x__24916__auto__;
return goog.typeOf(G__32123);
})()]);
if(or__24272__auto__){
return or__24272__auto__;
} else {
var or__24272__auto____$1 = (cljs.core._kv_reduce["_"]);
if(or__24272__auto____$1){
return or__24272__auto____$1;
} else {
throw cljs.core.missing_protocol("IKVReduce.-kv-reduce",coll);
}
}
})().call(null,coll,f,init);
}
});


cljs.core.IEquiv = (function (){var obj32125 = {};
return obj32125;
})();

cljs.core._equiv = (function _equiv(o,other){
if((function (){var and__24260__auto__ = o;
if(and__24260__auto__){
return o.cljs$core$IEquiv$_equiv$arity$2;
} else {
return and__24260__auto__;
}
})()){
return o.cljs$core$IEquiv$_equiv$arity$2(o,other);
} else {
var x__24916__auto__ = (((o == null))?null:o);
return (function (){var or__24272__auto__ = (cljs.core._equiv[(function (){var G__32129 = x__24916__auto__;
return goog.typeOf(G__32129);
})()]);
if(or__24272__auto__){
return or__24272__auto__;
} else {
var or__24272__auto____$1 = (cljs.core._equiv["_"]);
if(or__24272__auto____$1){
return or__24272__auto____$1;
} else {
throw cljs.core.missing_protocol("IEquiv.-equiv",o);
}
}
})().call(null,o,other);
}
});


cljs.core.IHash = (function (){var obj32131 = {};
return obj32131;
})();

cljs.core._hash = (function _hash(o){
if((function (){var and__24260__auto__ = o;
if(and__24260__auto__){
return o.cljs$core$IHash$_hash$arity$1;
} else {
return and__24260__auto__;
}
})()){
return o.cljs$core$IHash$_hash$arity$1(o);
} else {
var x__24916__auto__ = (((o == null))?null:o);
return (function (){var or__24272__auto__ = (cljs.core._hash[(function (){var G__32135 = x__24916__auto__;
return goog.typeOf(G__32135);
})()]);
if(or__24272__auto__){
return or__24272__auto__;
} else {
var or__24272__auto____$1 = (cljs.core._hash["_"]);
if(or__24272__auto____$1){
return or__24272__auto____$1;
} else {
throw cljs.core.missing_protocol("IHash.-hash",o);
}
}
})().call(null,o);
}
});


cljs.core.ISeqable = (function (){var obj32137 = {};
return obj32137;
})();

cljs.core._seq = (function _seq(o){
if((function (){var and__24260__auto__ = o;
if(and__24260__auto__){
return o.cljs$core$ISeqable$_seq$arity$1;
} else {
return and__24260__auto__;
}
})()){
return o.cljs$core$ISeqable$_seq$arity$1(o);
} else {
var x__24916__auto__ = (((o == null))?null:o);
return (function (){var or__24272__auto__ = (cljs.core._seq[(function (){var G__32141 = x__24916__auto__;
return goog.typeOf(G__32141);
})()]);
if(or__24272__auto__){
return or__24272__auto__;
} else {
var or__24272__auto____$1 = (cljs.core._seq["_"]);
if(or__24272__auto____$1){
return or__24272__auto____$1;
} else {
throw cljs.core.missing_protocol("ISeqable.-seq",o);
}
}
})().call(null,o);
}
});


cljs.core.ISequential = (function (){var obj32143 = {};
return obj32143;
})();


cljs.core.IList = (function (){var obj32145 = {};
return obj32145;
})();


cljs.core.IRecord = (function (){var obj32147 = {};
return obj32147;
})();


cljs.core.IReversible = (function (){var obj32149 = {};
return obj32149;
})();

cljs.core._rseq = (function _rseq(coll){
if((function (){var and__24260__auto__ = coll;
if(and__24260__auto__){
return coll.cljs$core$IReversible$_rseq$arity$1;
} else {
return and__24260__auto__;
}
})()){
return coll.cljs$core$IReversible$_rseq$arity$1(coll);
} else {
var x__24916__auto__ = (((coll == null))?null:coll);
return (function (){var or__24272__auto__ = (cljs.core._rseq[(function (){var G__32153 = x__24916__auto__;
return goog.typeOf(G__32153);
})()]);
if(or__24272__auto__){
return or__24272__auto__;
} else {
var or__24272__auto____$1 = (cljs.core._rseq["_"]);
if(or__24272__auto____$1){
return or__24272__auto____$1;
} else {
throw cljs.core.missing_protocol("IReversible.-rseq",coll);
}
}
})().call(null,coll);
}
});


cljs.core.ISorted = (function (){var obj32155 = {};
return obj32155;
})();

cljs.core._sorted_seq = (function _sorted_seq(coll,ascending_QMARK_){
if((function (){var and__24260__auto__ = coll;
if(and__24260__auto__){
return coll.cljs$core$ISorted$_sorted_seq$arity$2;
} else {
return and__24260__auto__;
}
})()){
return coll.cljs$core$ISorted$_sorted_seq$arity$2(coll,ascending_QMARK_);
} else {
var x__24916__auto__ = (((coll == null))?null:coll);
return (function (){var or__24272__auto__ = (cljs.core._sorted_seq[(function (){var G__32159 = x__24916__auto__;
return goog.typeOf(G__32159);
})()]);
if(or__24272__auto__){
return or__24272__auto__;
} else {
var or__24272__auto____$1 = (cljs.core._sorted_seq["_"]);
if(or__24272__auto____$1){
return or__24272__auto____$1;
} else {
throw cljs.core.missing_protocol("ISorted.-sorted-seq",coll);
}
}
})().call(null,coll,ascending_QMARK_);
}
});

cljs.core._sorted_seq_from = (function _sorted_seq_from(coll,k,ascending_QMARK_){
if((function (){var and__24260__auto__ = coll;
if(and__24260__auto__){
return coll.cljs$core$ISorted$_sorted_seq_from$arity$3;
} else {
return and__24260__auto__;
}
})()){
return coll.cljs$core$ISorted$_sorted_seq_from$arity$3(coll,k,ascending_QMARK_);
} else {
var x__24916__auto__ = (((coll == null))?null:coll);
return (function (){var or__24272__auto__ = (cljs.core._sorted_seq_from[(function (){var G__32163 = x__24916__auto__;
return goog.typeOf(G__32163);
})()]);
if(or__24272__auto__){
return or__24272__auto__;
} else {
var or__24272__auto____$1 = (cljs.core._sorted_seq_from["_"]);
if(or__24272__auto____$1){
return or__24272__auto____$1;
} else {
throw cljs.core.missing_protocol("ISorted.-sorted-seq-from",coll);
}
}
})().call(null,coll,k,ascending_QMARK_);
}
});

cljs.core._entry_key = (function _entry_key(coll,entry){
if((function (){var and__24260__auto__ = coll;
if(and__24260__auto__){
return coll.cljs$core$ISorted$_entry_key$arity$2;
} else {
return and__24260__auto__;
}
})()){
return coll.cljs$core$ISorted$_entry_key$arity$2(coll,entry);
} else {
var x__24916__auto__ = (((coll == null))?null:coll);
return (function (){var or__24272__auto__ = (cljs.core._entry_key[(function (){var G__32167 = x__24916__auto__;
return goog.typeOf(G__32167);
})()]);
if(or__24272__auto__){
return or__24272__auto__;
} else {
var or__24272__auto____$1 = (cljs.core._entry_key["_"]);
if(or__24272__auto____$1){
return or__24272__auto____$1;
} else {
throw cljs.core.missing_protocol("ISorted.-entry-key",coll);
}
}
})().call(null,coll,entry);
}
});

cljs.core._comparator = (function _comparator(coll){
if((function (){var and__24260__auto__ = coll;
if(and__24260__auto__){
return coll.cljs$core$ISorted$_comparator$arity$1;
} else {
return and__24260__auto__;
}
})()){
return coll.cljs$core$ISorted$_comparator$arity$1(coll);
} else {
var x__24916__auto__ = (((coll == null))?null:coll);
return (function (){var or__24272__auto__ = (cljs.core._comparator[(function (){var G__32171 = x__24916__auto__;
return goog.typeOf(G__32171);
})()]);
if(or__24272__auto__){
return or__24272__auto__;
} else {
var or__24272__auto____$1 = (cljs.core._comparator["_"]);
if(or__24272__auto____$1){
return or__24272__auto____$1;
} else {
throw cljs.core.missing_protocol("ISorted.-comparator",coll);
}
}
})().call(null,coll);
}
});


cljs.core.IWriter = (function (){var obj32173 = {};
return obj32173;
})();

cljs.core._write = (function _write(writer,s){
if((function (){var and__24260__auto__ = writer;
if(and__24260__auto__){
return writer.cljs$core$IWriter$_write$arity$2;
} else {
return and__24260__auto__;
}
})()){
return writer.cljs$core$IWriter$_write$arity$2(writer,s);
} else {
var x__24916__auto__ = (((writer == null))?null:writer);
return (function (){var or__24272__auto__ = (cljs.core._write[(function (){var G__32177 = x__24916__auto__;
return goog.typeOf(G__32177);
})()]);
if(or__24272__auto__){
return or__24272__auto__;
} else {
var or__24272__auto____$1 = (cljs.core._write["_"]);
if(or__24272__auto____$1){
return or__24272__auto____$1;
} else {
throw cljs.core.missing_protocol("IWriter.-write",writer);
}
}
})().call(null,writer,s);
}
});

cljs.core._flush = (function _flush(writer){
if((function (){var and__24260__auto__ = writer;
if(and__24260__auto__){
return writer.cljs$core$IWriter$_flush$arity$1;
} else {
return and__24260__auto__;
}
})()){
return writer.cljs$core$IWriter$_flush$arity$1(writer);
} else {
var x__24916__auto__ = (((writer == null))?null:writer);
return (function (){var or__24272__auto__ = (cljs.core._flush[(function (){var G__32181 = x__24916__auto__;
return goog.typeOf(G__32181);
})()]);
if(or__24272__auto__){
return or__24272__auto__;
} else {
var or__24272__auto____$1 = (cljs.core._flush["_"]);
if(or__24272__auto____$1){
return or__24272__auto____$1;
} else {
throw cljs.core.missing_protocol("IWriter.-flush",writer);
}
}
})().call(null,writer);
}
});


cljs.core.IPrintWithWriter = (function (){var obj32183 = {};
return obj32183;
})();

cljs.core._pr_writer = (function _pr_writer(o,writer,opts){
if((function (){var and__24260__auto__ = o;
if(and__24260__auto__){
return o.cljs$core$IPrintWithWriter$_pr_writer$arity$3;
} else {
return and__24260__auto__;
}
})()){
return o.cljs$core$IPrintWithWriter$_pr_writer$arity$3(o,writer,opts);
} else {
var x__24916__auto__ = (((o == null))?null:o);
return (function (){var or__24272__auto__ = (cljs.core._pr_writer[(function (){var G__32187 = x__24916__auto__;
return goog.typeOf(G__32187);
})()]);
if(or__24272__auto__){
return or__24272__auto__;
} else {
var or__24272__auto____$1 = (cljs.core._pr_writer["_"]);
if(or__24272__auto____$1){
return or__24272__auto____$1;
} else {
throw cljs.core.missing_protocol("IPrintWithWriter.-pr-writer",o);
}
}
})().call(null,o,writer,opts);
}
});


cljs.core.IPending = (function (){var obj32189 = {};
return obj32189;
})();

cljs.core._realized_QMARK_ = (function _realized_QMARK_(d){
if((function (){var and__24260__auto__ = d;
if(and__24260__auto__){
return d.cljs$core$IPending$_realized_QMARK_$arity$1;
} else {
return and__24260__auto__;
}
})()){
return d.cljs$core$IPending$_realized_QMARK_$arity$1(d);
} else {
var x__24916__auto__ = (((d == null))?null:d);
return (function (){var or__24272__auto__ = (cljs.core._realized_QMARK_[(function (){var G__32193 = x__24916__auto__;
return goog.typeOf(G__32193);
})()]);
if(or__24272__auto__){
return or__24272__auto__;
} else {
var or__24272__auto____$1 = (cljs.core._realized_QMARK_["_"]);
if(or__24272__auto____$1){
return or__24272__auto____$1;
} else {
throw cljs.core.missing_protocol("IPending.-realized?",d);
}
}
})().call(null,d);
}
});


cljs.core.IWatchable = (function (){var obj32195 = {};
return obj32195;
})();

cljs.core._notify_watches = (function _notify_watches(this$,oldval,newval){
if((function (){var and__24260__auto__ = this$;
if(and__24260__auto__){
return this$.cljs$core$IWatchable$_notify_watches$arity$3;
} else {
return and__24260__auto__;
}
})()){
return this$.cljs$core$IWatchable$_notify_watches$arity$3(this$,oldval,newval);
} else {
var x__24916__auto__ = (((this$ == null))?null:this$);
return (function (){var or__24272__auto__ = (cljs.core._notify_watches[(function (){var G__32199 = x__24916__auto__;
return goog.typeOf(G__32199);
})()]);
if(or__24272__auto__){
return or__24272__auto__;
} else {
var or__24272__auto____$1 = (cljs.core._notify_watches["_"]);
if(or__24272__auto____$1){
return or__24272__auto____$1;
} else {
throw cljs.core.missing_protocol("IWatchable.-notify-watches",this$);
}
}
})().call(null,this$,oldval,newval);
}
});

cljs.core._add_watch = (function _add_watch(this$,key,f){
if((function (){var and__24260__auto__ = this$;
if(and__24260__auto__){
return this$.cljs$core$IWatchable$_add_watch$arity$3;
} else {
return and__24260__auto__;
}
})()){
return this$.cljs$core$IWatchable$_add_watch$arity$3(this$,key,f);
} else {
var x__24916__auto__ = (((this$ == null))?null:this$);
return (function (){var or__24272__auto__ = (cljs.core._add_watch[(function (){var G__32203 = x__24916__auto__;
return goog.typeOf(G__32203);
})()]);
if(or__24272__auto__){
return or__24272__auto__;
} else {
var or__24272__auto____$1 = (cljs.core._add_watch["_"]);
if(or__24272__auto____$1){
return or__24272__auto____$1;
} else {
throw cljs.core.missing_protocol("IWatchable.-add-watch",this$);
}
}
})().call(null,this$,key,f);
}
});

cljs.core._remove_watch = (function _remove_watch(this$,key){
if((function (){var and__24260__auto__ = this$;
if(and__24260__auto__){
return this$.cljs$core$IWatchable$_remove_watch$arity$2;
} else {
return and__24260__auto__;
}
})()){
return this$.cljs$core$IWatchable$_remove_watch$arity$2(this$,key);
} else {
var x__24916__auto__ = (((this$ == null))?null:this$);
return (function (){var or__24272__auto__ = (cljs.core._remove_watch[(function (){var G__32207 = x__24916__auto__;
return goog.typeOf(G__32207);
})()]);
if(or__24272__auto__){
return or__24272__auto__;
} else {
var or__24272__auto____$1 = (cljs.core._remove_watch["_"]);
if(or__24272__auto____$1){
return or__24272__auto____$1;
} else {
throw cljs.core.missing_protocol("IWatchable.-remove-watch",this$);
}
}
})().call(null,this$,key);
}
});


cljs.core.IEditableCollection = (function (){var obj32209 = {};
return obj32209;
})();

cljs.core._as_transient = (function _as_transient(coll){
if((function (){var and__24260__auto__ = coll;
if(and__24260__auto__){
return coll.cljs$core$IEditableCollection$_as_transient$arity$1;
} else {
return and__24260__auto__;
}
})()){
return coll.cljs$core$IEditableCollection$_as_transient$arity$1(coll);
} else {
var x__24916__auto__ = (((coll == null))?null:coll);
return (function (){var or__24272__auto__ = (cljs.core._as_transient[(function (){var G__32213 = x__24916__auto__;
return goog.typeOf(G__32213);
})()]);
if(or__24272__auto__){
return or__24272__auto__;
} else {
var or__24272__auto____$1 = (cljs.core._as_transient["_"]);
if(or__24272__auto____$1){
return or__24272__auto____$1;
} else {
throw cljs.core.missing_protocol("IEditableCollection.-as-transient",coll);
}
}
})().call(null,coll);
}
});


cljs.core.ITransientCollection = (function (){var obj32215 = {};
return obj32215;
})();

cljs.core._conj_BANG_ = (function _conj_BANG_(tcoll,val){
if((function (){var and__24260__auto__ = tcoll;
if(and__24260__auto__){
return tcoll.cljs$core$ITransientCollection$_conj_BANG_$arity$2;
} else {
return and__24260__auto__;
}
})()){
return tcoll.cljs$core$ITransientCollection$_conj_BANG_$arity$2(tcoll,val);
} else {
var x__24916__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__24272__auto__ = (cljs.core._conj_BANG_[(function (){var G__32219 = x__24916__auto__;
return goog.typeOf(G__32219);
})()]);
if(or__24272__auto__){
return or__24272__auto__;
} else {
var or__24272__auto____$1 = (cljs.core._conj_BANG_["_"]);
if(or__24272__auto____$1){
return or__24272__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientCollection.-conj!",tcoll);
}
}
})().call(null,tcoll,val);
}
});

cljs.core._persistent_BANG_ = (function _persistent_BANG_(tcoll){
if((function (){var and__24260__auto__ = tcoll;
if(and__24260__auto__){
return tcoll.cljs$core$ITransientCollection$_persistent_BANG_$arity$1;
} else {
return and__24260__auto__;
}
})()){
return tcoll.cljs$core$ITransientCollection$_persistent_BANG_$arity$1(tcoll);
} else {
var x__24916__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__24272__auto__ = (cljs.core._persistent_BANG_[(function (){var G__32223 = x__24916__auto__;
return goog.typeOf(G__32223);
})()]);
if(or__24272__auto__){
return or__24272__auto__;
} else {
var or__24272__auto____$1 = (cljs.core._persistent_BANG_["_"]);
if(or__24272__auto____$1){
return or__24272__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientCollection.-persistent!",tcoll);
}
}
})().call(null,tcoll);
}
});


cljs.core.ITransientAssociative = (function (){var obj32225 = {};
return obj32225;
})();

cljs.core._assoc_BANG_ = (function _assoc_BANG_(tcoll,key,val){
if((function (){var and__24260__auto__ = tcoll;
if(and__24260__auto__){
return tcoll.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3;
} else {
return and__24260__auto__;
}
})()){
return tcoll.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3(tcoll,key,val);
} else {
var x__24916__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__24272__auto__ = (cljs.core._assoc_BANG_[(function (){var G__32229 = x__24916__auto__;
return goog.typeOf(G__32229);
})()]);
if(or__24272__auto__){
return or__24272__auto__;
} else {
var or__24272__auto____$1 = (cljs.core._assoc_BANG_["_"]);
if(or__24272__auto____$1){
return or__24272__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientAssociative.-assoc!",tcoll);
}
}
})().call(null,tcoll,key,val);
}
});


cljs.core.ITransientMap = (function (){var obj32231 = {};
return obj32231;
})();

cljs.core._dissoc_BANG_ = (function _dissoc_BANG_(tcoll,key){
if((function (){var and__24260__auto__ = tcoll;
if(and__24260__auto__){
return tcoll.cljs$core$ITransientMap$_dissoc_BANG_$arity$2;
} else {
return and__24260__auto__;
}
})()){
return tcoll.cljs$core$ITransientMap$_dissoc_BANG_$arity$2(tcoll,key);
} else {
var x__24916__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__24272__auto__ = (cljs.core._dissoc_BANG_[(function (){var G__32235 = x__24916__auto__;
return goog.typeOf(G__32235);
})()]);
if(or__24272__auto__){
return or__24272__auto__;
} else {
var or__24272__auto____$1 = (cljs.core._dissoc_BANG_["_"]);
if(or__24272__auto____$1){
return or__24272__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientMap.-dissoc!",tcoll);
}
}
})().call(null,tcoll,key);
}
});


cljs.core.ITransientVector = (function (){var obj32237 = {};
return obj32237;
})();

cljs.core._assoc_n_BANG_ = (function _assoc_n_BANG_(tcoll,n,val){
if((function (){var and__24260__auto__ = tcoll;
if(and__24260__auto__){
return tcoll.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3;
} else {
return and__24260__auto__;
}
})()){
return tcoll.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3(tcoll,n,val);
} else {
var x__24916__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__24272__auto__ = (cljs.core._assoc_n_BANG_[(function (){var G__32241 = x__24916__auto__;
return goog.typeOf(G__32241);
})()]);
if(or__24272__auto__){
return or__24272__auto__;
} else {
var or__24272__auto____$1 = (cljs.core._assoc_n_BANG_["_"]);
if(or__24272__auto____$1){
return or__24272__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientVector.-assoc-n!",tcoll);
}
}
})().call(null,tcoll,n,val);
}
});

cljs.core._pop_BANG_ = (function _pop_BANG_(tcoll){
if((function (){var and__24260__auto__ = tcoll;
if(and__24260__auto__){
return tcoll.cljs$core$ITransientVector$_pop_BANG_$arity$1;
} else {
return and__24260__auto__;
}
})()){
return tcoll.cljs$core$ITransientVector$_pop_BANG_$arity$1(tcoll);
} else {
var x__24916__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__24272__auto__ = (cljs.core._pop_BANG_[(function (){var G__32245 = x__24916__auto__;
return goog.typeOf(G__32245);
})()]);
if(or__24272__auto__){
return or__24272__auto__;
} else {
var or__24272__auto____$1 = (cljs.core._pop_BANG_["_"]);
if(or__24272__auto____$1){
return or__24272__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientVector.-pop!",tcoll);
}
}
})().call(null,tcoll);
}
});


cljs.core.ITransientSet = (function (){var obj32247 = {};
return obj32247;
})();

cljs.core._disjoin_BANG_ = (function _disjoin_BANG_(tcoll,v){
if((function (){var and__24260__auto__ = tcoll;
if(and__24260__auto__){
return tcoll.cljs$core$ITransientSet$_disjoin_BANG_$arity$2;
} else {
return and__24260__auto__;
}
})()){
return tcoll.cljs$core$ITransientSet$_disjoin_BANG_$arity$2(tcoll,v);
} else {
var x__24916__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__24272__auto__ = (cljs.core._disjoin_BANG_[(function (){var G__32251 = x__24916__auto__;
return goog.typeOf(G__32251);
})()]);
if(or__24272__auto__){
return or__24272__auto__;
} else {
var or__24272__auto____$1 = (cljs.core._disjoin_BANG_["_"]);
if(or__24272__auto____$1){
return or__24272__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientSet.-disjoin!",tcoll);
}
}
})().call(null,tcoll,v);
}
});


cljs.core.IComparable = (function (){var obj32253 = {};
return obj32253;
})();

cljs.core._compare = (function _compare(x,y){
if((function (){var and__24260__auto__ = x;
if(and__24260__auto__){
return x.cljs$core$IComparable$_compare$arity$2;
} else {
return and__24260__auto__;
}
})()){
return x.cljs$core$IComparable$_compare$arity$2(x,y);
} else {
var x__24916__auto__ = (((x == null))?null:x);
return (function (){var or__24272__auto__ = (cljs.core._compare[(function (){var G__32257 = x__24916__auto__;
return goog.typeOf(G__32257);
})()]);
if(or__24272__auto__){
return or__24272__auto__;
} else {
var or__24272__auto____$1 = (cljs.core._compare["_"]);
if(or__24272__auto____$1){
return or__24272__auto____$1;
} else {
throw cljs.core.missing_protocol("IComparable.-compare",x);
}
}
})().call(null,x,y);
}
});


cljs.core.IChunk = (function (){var obj32259 = {};
return obj32259;
})();

cljs.core._drop_first = (function _drop_first(coll){
if((function (){var and__24260__auto__ = coll;
if(and__24260__auto__){
return coll.cljs$core$IChunk$_drop_first$arity$1;
} else {
return and__24260__auto__;
}
})()){
return coll.cljs$core$IChunk$_drop_first$arity$1(coll);
} else {
var x__24916__auto__ = (((coll == null))?null:coll);
return (function (){var or__24272__auto__ = (cljs.core._drop_first[(function (){var G__32263 = x__24916__auto__;
return goog.typeOf(G__32263);
})()]);
if(or__24272__auto__){
return or__24272__auto__;
} else {
var or__24272__auto____$1 = (cljs.core._drop_first["_"]);
if(or__24272__auto____$1){
return or__24272__auto____$1;
} else {
throw cljs.core.missing_protocol("IChunk.-drop-first",coll);
}
}
})().call(null,coll);
}
});


cljs.core.IChunkedSeq = (function (){var obj32265 = {};
return obj32265;
})();

cljs.core._chunked_first = (function _chunked_first(coll){
if((function (){var and__24260__auto__ = coll;
if(and__24260__auto__){
return coll.cljs$core$IChunkedSeq$_chunked_first$arity$1;
} else {
return and__24260__auto__;
}
})()){
return coll.cljs$core$IChunkedSeq$_chunked_first$arity$1(coll);
} else {
var x__24916__auto__ = (((coll == null))?null:coll);
return (function (){var or__24272__auto__ = (cljs.core._chunked_first[(function (){var G__32269 = x__24916__auto__;
return goog.typeOf(G__32269);
})()]);
if(or__24272__auto__){
return or__24272__auto__;
} else {
var or__24272__auto____$1 = (cljs.core._chunked_first["_"]);
if(or__24272__auto____$1){
return or__24272__auto____$1;
} else {
throw cljs.core.missing_protocol("IChunkedSeq.-chunked-first",coll);
}
}
})().call(null,coll);
}
});

cljs.core._chunked_rest = (function _chunked_rest(coll){
if((function (){var and__24260__auto__ = coll;
if(and__24260__auto__){
return coll.cljs$core$IChunkedSeq$_chunked_rest$arity$1;
} else {
return and__24260__auto__;
}
})()){
return coll.cljs$core$IChunkedSeq$_chunked_rest$arity$1(coll);
} else {
var x__24916__auto__ = (((coll == null))?null:coll);
return (function (){var or__24272__auto__ = (cljs.core._chunked_rest[(function (){var G__32273 = x__24916__auto__;
return goog.typeOf(G__32273);
})()]);
if(or__24272__auto__){
return or__24272__auto__;
} else {
var or__24272__auto____$1 = (cljs.core._chunked_rest["_"]);
if(or__24272__auto____$1){
return or__24272__auto____$1;
} else {
throw cljs.core.missing_protocol("IChunkedSeq.-chunked-rest",coll);
}
}
})().call(null,coll);
}
});


cljs.core.IChunkedNext = (function (){var obj32275 = {};
return obj32275;
})();

cljs.core._chunked_next = (function _chunked_next(coll){
if((function (){var and__24260__auto__ = coll;
if(and__24260__auto__){
return coll.cljs$core$IChunkedNext$_chunked_next$arity$1;
} else {
return and__24260__auto__;
}
})()){
return coll.cljs$core$IChunkedNext$_chunked_next$arity$1(coll);
} else {
var x__24916__auto__ = (((coll == null))?null:coll);
return (function (){var or__24272__auto__ = (cljs.core._chunked_next[(function (){var G__32279 = x__24916__auto__;
return goog.typeOf(G__32279);
})()]);
if(or__24272__auto__){
return or__24272__auto__;
} else {
var or__24272__auto____$1 = (cljs.core._chunked_next["_"]);
if(or__24272__auto____$1){
return or__24272__auto____$1;
} else {
throw cljs.core.missing_protocol("IChunkedNext.-chunked-next",coll);
}
}
})().call(null,coll);
}
});


cljs.core.INamed = (function (){var obj32281 = {};
return obj32281;
})();

cljs.core._name = (function _name(x){
if((function (){var and__24260__auto__ = x;
if(and__24260__auto__){
return x.cljs$core$INamed$_name$arity$1;
} else {
return and__24260__auto__;
}
})()){
return x.cljs$core$INamed$_name$arity$1(x);
} else {
var x__24916__auto__ = (((x == null))?null:x);
return (function (){var or__24272__auto__ = (cljs.core._name[(function (){var G__32285 = x__24916__auto__;
return goog.typeOf(G__32285);
})()]);
if(or__24272__auto__){
return or__24272__auto__;
} else {
var or__24272__auto____$1 = (cljs.core._name["_"]);
if(or__24272__auto____$1){
return or__24272__auto____$1;
} else {
throw cljs.core.missing_protocol("INamed.-name",x);
}
}
})().call(null,x);
}
});

cljs.core._namespace = (function _namespace(x){
if((function (){var and__24260__auto__ = x;
if(and__24260__auto__){
return x.cljs$core$INamed$_namespace$arity$1;
} else {
return and__24260__auto__;
}
})()){
return x.cljs$core$INamed$_namespace$arity$1(x);
} else {
var x__24916__auto__ = (((x == null))?null:x);
return (function (){var or__24272__auto__ = (cljs.core._namespace[(function (){var G__32289 = x__24916__auto__;
return goog.typeOf(G__32289);
})()]);
if(or__24272__auto__){
return or__24272__auto__;
} else {
var or__24272__auto____$1 = (cljs.core._namespace["_"]);
if(or__24272__auto____$1){
return or__24272__auto____$1;
} else {
throw cljs.core.missing_protocol("INamed.-namespace",x);
}
}
})().call(null,x);
}
});


cljs.core.IAtom = (function (){var obj32291 = {};
return obj32291;
})();


cljs.core.IReset = (function (){var obj32293 = {};
return obj32293;
})();

cljs.core._reset_BANG_ = (function _reset_BANG_(o,new_value){
if((function (){var and__24260__auto__ = o;
if(and__24260__auto__){
return o.cljs$core$IReset$_reset_BANG_$arity$2;
} else {
return and__24260__auto__;
}
})()){
return o.cljs$core$IReset$_reset_BANG_$arity$2(o,new_value);
} else {
var x__24916__auto__ = (((o == null))?null:o);
return (function (){var or__24272__auto__ = (cljs.core._reset_BANG_[(function (){var G__32297 = x__24916__auto__;
return goog.typeOf(G__32297);
})()]);
if(or__24272__auto__){
return or__24272__auto__;
} else {
var or__24272__auto____$1 = (cljs.core._reset_BANG_["_"]);
if(or__24272__auto____$1){
return or__24272__auto____$1;
} else {
throw cljs.core.missing_protocol("IReset.-reset!",o);
}
}
})().call(null,o,new_value);
}
});


cljs.core.ISwap = (function (){var obj32299 = {};
return obj32299;
})();

cljs.core._swap_BANG_ = (function() {
var _swap_BANG_ = null;
var _swap_BANG___2 = (function (o,f){
if((function (){var and__24260__auto__ = o;
if(and__24260__auto__){
return o.cljs$core$ISwap$_swap_BANG_$arity$2;
} else {
return and__24260__auto__;
}
})()){
return o.cljs$core$ISwap$_swap_BANG_$arity$2(o,f);
} else {
var x__24916__auto__ = (((o == null))?null:o);
return (function (){var or__24272__auto__ = (cljs.core._swap_BANG_[(function (){var G__32309 = x__24916__auto__;
return goog.typeOf(G__32309);
})()]);
if(or__24272__auto__){
return or__24272__auto__;
} else {
var or__24272__auto____$1 = (cljs.core._swap_BANG_["_"]);
if(or__24272__auto____$1){
return or__24272__auto____$1;
} else {
throw cljs.core.missing_protocol("ISwap.-swap!",o);
}
}
})().call(null,o,f);
}
});
var _swap_BANG___3 = (function (o,f,a){
if((function (){var and__24260__auto__ = o;
if(and__24260__auto__){
return o.cljs$core$ISwap$_swap_BANG_$arity$3;
} else {
return and__24260__auto__;
}
})()){
return o.cljs$core$ISwap$_swap_BANG_$arity$3(o,f,a);
} else {
var x__24916__auto__ = (((o == null))?null:o);
return (function (){var or__24272__auto__ = (cljs.core._swap_BANG_[(function (){var G__32311 = x__24916__auto__;
return goog.typeOf(G__32311);
})()]);
if(or__24272__auto__){
return or__24272__auto__;
} else {
var or__24272__auto____$1 = (cljs.core._swap_BANG_["_"]);
if(or__24272__auto____$1){
return or__24272__auto____$1;
} else {
throw cljs.core.missing_protocol("ISwap.-swap!",o);
}
}
})().call(null,o,f,a);
}
});
var _swap_BANG___4 = (function (o,f,a,b){
if((function (){var and__24260__auto__ = o;
if(and__24260__auto__){
return o.cljs$core$ISwap$_swap_BANG_$arity$4;
} else {
return and__24260__auto__;
}
})()){
return o.cljs$core$ISwap$_swap_BANG_$arity$4(o,f,a,b);
} else {
var x__24916__auto__ = (((o == null))?null:o);
return (function (){var or__24272__auto__ = (cljs.core._swap_BANG_[(function (){var G__32313 = x__24916__auto__;
return goog.typeOf(G__32313);
})()]);
if(or__24272__auto__){
return or__24272__auto__;
} else {
var or__24272__auto____$1 = (cljs.core._swap_BANG_["_"]);
if(or__24272__auto____$1){
return or__24272__auto____$1;
} else {
throw cljs.core.missing_protocol("ISwap.-swap!",o);
}
}
})().call(null,o,f,a,b);
}
});
var _swap_BANG___5 = (function (o,f,a,b,xs){
if((function (){var and__24260__auto__ = o;
if(and__24260__auto__){
return o.cljs$core$ISwap$_swap_BANG_$arity$5;
} else {
return and__24260__auto__;
}
})()){
return o.cljs$core$ISwap$_swap_BANG_$arity$5(o,f,a,b,xs);
} else {
var x__24916__auto__ = (((o == null))?null:o);
return (function (){var or__24272__auto__ = (cljs.core._swap_BANG_[(function (){var G__32315 = x__24916__auto__;
return goog.typeOf(G__32315);
})()]);
if(or__24272__auto__){
return or__24272__auto__;
} else {
var or__24272__auto____$1 = (cljs.core._swap_BANG_["_"]);
if(or__24272__auto____$1){
return or__24272__auto____$1;
} else {
throw cljs.core.missing_protocol("ISwap.-swap!",o);
}
}
})().call(null,o,f,a,b,xs);
}
});
_swap_BANG_ = function(o,f,a,b,xs){
switch(arguments.length){
case 2:
return _swap_BANG___2.call(this,o,f);
case 3:
return _swap_BANG___3.call(this,o,f,a);
case 4:
return _swap_BANG___4.call(this,o,f,a,b);
case 5:
return _swap_BANG___5.call(this,o,f,a,b,xs);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_swap_BANG_.cljs$core$IFn$_invoke$arity$2 = _swap_BANG___2;
_swap_BANG_.cljs$core$IFn$_invoke$arity$3 = _swap_BANG___3;
_swap_BANG_.cljs$core$IFn$_invoke$arity$4 = _swap_BANG___4;
_swap_BANG_.cljs$core$IFn$_invoke$arity$5 = _swap_BANG___5;
return _swap_BANG_;
})()
;


cljs.core.IVolatile = (function (){var obj32317 = {};
return obj32317;
})();

cljs.core._vreset_BANG_ = (function _vreset_BANG_(o,new_value){
if((function (){var and__24260__auto__ = o;
if(and__24260__auto__){
return o.cljs$core$IVolatile$_vreset_BANG_$arity$2;
} else {
return and__24260__auto__;
}
})()){
return o.cljs$core$IVolatile$_vreset_BANG_$arity$2(o,new_value);
} else {
var x__24916__auto__ = (((o == null))?null:o);
return (function (){var or__24272__auto__ = (cljs.core._vreset_BANG_[(function (){var G__32321 = x__24916__auto__;
return goog.typeOf(G__32321);
})()]);
if(or__24272__auto__){
return or__24272__auto__;
} else {
var or__24272__auto____$1 = (cljs.core._vreset_BANG_["_"]);
if(or__24272__auto____$1){
return or__24272__auto____$1;
} else {
throw cljs.core.missing_protocol("IVolatile.-vreset!",o);
}
}
})().call(null,o,new_value);
}
});


cljs.core.IIterable = (function (){var obj32323 = {};
return obj32323;
})();

cljs.core._iterator = (function _iterator(coll){
if((function (){var and__24260__auto__ = coll;
if(and__24260__auto__){
return coll.cljs$core$IIterable$_iterator$arity$1;
} else {
return and__24260__auto__;
}
})()){
return coll.cljs$core$IIterable$_iterator$arity$1(coll);
} else {
var x__24916__auto__ = (((coll == null))?null:coll);
return (function (){var or__24272__auto__ = (cljs.core._iterator[(function (){var G__32327 = x__24916__auto__;
return goog.typeOf(G__32327);
})()]);
if(or__24272__auto__){
return or__24272__auto__;
} else {
var or__24272__auto____$1 = (cljs.core._iterator["_"]);
if(or__24272__auto____$1){
return or__24272__auto____$1;
} else {
throw cljs.core.missing_protocol("IIterable.-iterator",coll);
}
}
})().call(null,coll);
}
});


/**
* @constructor
*/
cljs.core.StringBufferWriter = (function (sb){
this.sb = sb;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 1073741824;
})
cljs.core.StringBufferWriter.prototype.cljs$core$IWriter$_write$arity$2 = (function (_,s){
var self__ = this;
var ___$1 = this;
return self__.sb.append(s);
});

cljs.core.StringBufferWriter.prototype.cljs$core$IWriter$_flush$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return null;
});

cljs.core.StringBufferWriter.cljs$lang$type = true;

cljs.core.StringBufferWriter.cljs$lang$ctorStr = "cljs.core/StringBufferWriter";

cljs.core.StringBufferWriter.cljs$lang$ctorPrWriter = (function (this__24859__auto__,writer__24860__auto__,opt__24861__auto__){
return cljs.core._write(writer__24860__auto__,"cljs.core/StringBufferWriter");
});

cljs.core.__GT_StringBufferWriter = (function __GT_StringBufferWriter(sb){
return (new cljs.core.StringBufferWriter(sb));
});

/**
* Support so that collections can implement toString without
* loading all the printing machinery.
*/
cljs.core.pr_str_STAR_ = (function pr_str_STAR_(obj){
var sb = (new goog.string.StringBuffer());
var writer = (new cljs.core.StringBufferWriter(sb));
obj.cljs$core$IPrintWithWriter$_pr_writer$arity$3(null,writer,cljs.core.pr_opts());

writer.cljs$core$IWriter$_flush$arity$1(null);

return [cljs.core.str(sb)].join('');
});
cljs.core.int_rotate_left = (function int_rotate_left(x,n){
return ((x << n) | (x >>> (- n)));
});
if((typeof Math.imul !== 'undefined') && (!(((function (){var G__32330 = (4294967295);
var G__32331 = (5);
return (Math.imul.cljs$core$IFn$_invoke$arity$2 ? Math.imul.cljs$core$IFn$_invoke$arity$2(G__32330,G__32331) : Math.imul.call(null,G__32330,G__32331));
})() === (0))))){
cljs.core.imul = (function imul(a,b){
var G__32334 = a;
var G__32335 = b;
return (Math.imul.cljs$core$IFn$_invoke$arity$2 ? Math.imul.cljs$core$IFn$_invoke$arity$2(G__32334,G__32335) : Math.imul.call(null,G__32334,G__32335));
});
} else {
cljs.core.imul = (function imul(a,b){
var ah = ((a >>> (16)) & (65535));
var al = (a & (65535));
var bh = ((b >>> (16)) & (65535));
var bl = (b & (65535));
return (((al * bl) + ((((ah * bl) + (al * bh)) << (16)) >>> (0))) | (0));
});
}
cljs.core.m3_seed = (0);
cljs.core.m3_C1 = (3432918353);
cljs.core.m3_C2 = (461845907);
cljs.core.m3_mix_K1 = (function m3_mix_K1(k1){
return cljs.core.imul(cljs.core.int_rotate_left(cljs.core.imul(k1,cljs.core.m3_C1),(15)),cljs.core.m3_C2);
});
cljs.core.m3_mix_H1 = (function m3_mix_H1(h1,k1){
return (cljs.core.imul(cljs.core.int_rotate_left((h1 ^ k1),(13)),(5)) + (3864292196));
});
cljs.core.m3_fmix = (function m3_fmix(h1,len){
var h1__$1 = h1;
var h1__$2 = (h1__$1 ^ len);
var h1__$3 = (h1__$2 ^ (h1__$2 >>> (16)));
var h1__$4 = cljs.core.imul(h1__$3,(2246822507));
var h1__$5 = (h1__$4 ^ (h1__$4 >>> (13)));
var h1__$6 = cljs.core.imul(h1__$5,(3266489909));
var h1__$7 = (h1__$6 ^ (h1__$6 >>> (16)));
return h1__$7;
});
cljs.core.m3_hash_int = (function m3_hash_int(in$){
if((in$ === (0))){
return in$;
} else {
var k1 = cljs.core.m3_mix_K1(in$);
var h1 = cljs.core.m3_mix_H1(cljs.core.m3_seed,k1);
return cljs.core.m3_fmix(h1,(4));
}
});
cljs.core.m3_hash_unencoded_chars = (function m3_hash_unencoded_chars(in$){
var h1 = (function (){var i = (1);
var h1 = cljs.core.m3_seed;
while(true){
if((i < in$.length)){
var G__32336 = (i + (2));
var G__32337 = cljs.core.m3_mix_H1(h1,cljs.core.m3_mix_K1((in$.charCodeAt((i - (1))) | (in$.charCodeAt(i) << (16)))));
i = G__32336;
h1 = G__32337;
continue;
} else {
return h1;
}
break;
}
})();
var h1__$1 = ((((in$.length & (1)) === (1)))?(h1 ^ cljs.core.m3_mix_K1(in$.charCodeAt((in$.length - (1))))):h1);
return cljs.core.m3_fmix(h1__$1,cljs.core.imul((2),in$.length));
});



cljs.core.string_hash_cache = (function (){var obj32339 = {};
return obj32339;
})();
cljs.core.string_hash_cache_count = (0);
cljs.core.hash_string_STAR_ = (function hash_string_STAR_(s){
if(!((s == null))){
var len = s.length;
if((len > (0))){
var i = (0);
var hash = (0);
while(true){
if((i < len)){
var G__32340 = (i + (1));
var G__32341 = (cljs.core.imul((31),hash) + s.charCodeAt(i));
i = G__32340;
hash = G__32341;
continue;
} else {
return hash;
}
break;
}
} else {
return (0);
}
} else {
return (0);
}
});
cljs.core.add_to_string_hash_cache = (function add_to_string_hash_cache(k){
var h = cljs.core.hash_string_STAR_(k);
(cljs.core.string_hash_cache[k] = h);

cljs.core.string_hash_cache_count = (cljs.core.string_hash_cache_count + (1));

return h;
});
cljs.core.hash_string = (function hash_string(k){
if((cljs.core.string_hash_cache_count > (255))){
cljs.core.string_hash_cache = (function (){var obj32345 = {};
return obj32345;
})();

cljs.core.string_hash_cache_count = (0);
} else {
}

var h = (cljs.core.string_hash_cache[k]);
if(typeof h === 'number'){
return h;
} else {
return cljs.core.add_to_string_hash_cache(k);
}
});
cljs.core.hash = (function hash(o){
if((function (){var G__32348 = o;
if(G__32348){
var bit__24946__auto__ = (G__32348.cljs$lang$protocol_mask$partition0$ & (4194304));
if((bit__24946__auto__) || (G__32348.cljs$core$IHash$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return o.cljs$core$IHash$_hash$arity$1(null);
} else {
if(typeof o === 'number'){
return ((function (){var G__32349 = o;
return (Math.floor.cljs$core$IFn$_invoke$arity$1 ? Math.floor.cljs$core$IFn$_invoke$arity$1(G__32349) : Math.floor.call(null,G__32349));
})() % (2147483647));
} else {
if(o === true){
return (1);
} else {
if(o === false){
return (0);
} else {
if(typeof o === 'string'){
return cljs.core.m3_hash_int(cljs.core.hash_string(o));
} else {
if((o instanceof Date)){
return o.valueOf();
} else {
if((o == null)){
return (0);
} else {
return cljs.core._hash(o);

}
}
}
}
}
}
}
});
cljs.core.hash_combine = (function hash_combine(seed,hash){
return (seed ^ (((hash + (2654435769)) + (seed << (6))) + (seed >> (2))));
});
cljs.core.instance_QMARK_ = (function instance_QMARK_(t,o){
return (o instanceof t);
});
cljs.core.symbol_QMARK_ = (function symbol_QMARK_(x){
return (x instanceof cljs.core.Symbol);
});
cljs.core.hash_symbol = (function hash_symbol(sym){
return cljs.core.hash_combine(cljs.core.m3_hash_unencoded_chars(sym.name),cljs.core.hash_string(sym.ns));
});
cljs.core.compare_symbols = (function compare_symbols(a,b){
if((a.str === b.str)){
return (0);
} else {
if(cljs.core.truth_((function (){var and__24260__auto__ = cljs.core.not(a.ns);
if(and__24260__auto__){
return b.ns;
} else {
return and__24260__auto__;
}
})())){
return (-1);
} else {
if(cljs.core.truth_(a.ns)){
if(cljs.core.not(b.ns)){
return (1);
} else {
var nsc = (function (){var G__32356 = a.ns;
var G__32357 = b.ns;
return goog.array.defaultCompare(G__32356,G__32357);
})();
if(((0) === nsc)){
var G__32358 = a.name;
var G__32359 = b.name;
return goog.array.defaultCompare(G__32358,G__32359);
} else {
return nsc;
}
}
} else {
var G__32360 = a.name;
var G__32361 = b.name;
return goog.array.defaultCompare(G__32360,G__32361);

}
}
}
});

/**
* @constructor
*/
cljs.core.Symbol = (function (ns,name,str,_hash,_meta){
this.ns = ns;
this.name = name;
this.str = str;
this._hash = _hash;
this._meta = _meta;
this.cljs$lang$protocol_mask$partition0$ = 2154168321;
this.cljs$lang$protocol_mask$partition1$ = 4096;
})
cljs.core.Symbol.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (o,writer,_){
var self__ = this;
var o__$1 = this;
return cljs.core._write(writer,self__.str);
});

cljs.core.Symbol.prototype.cljs$core$INamed$_name$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.name;
});

cljs.core.Symbol.prototype.cljs$core$INamed$_namespace$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.ns;
});

cljs.core.Symbol.prototype.cljs$core$IHash$_hash$arity$1 = (function (sym){
var self__ = this;
var sym__$1 = this;
var h__24693__auto__ = self__._hash;
if(!((h__24693__auto__ == null))){
return h__24693__auto__;
} else {
var h__24693__auto____$1 = cljs.core.hash_symbol(sym__$1);
self__._hash = h__24693__auto____$1;

return h__24693__auto____$1;
}
});

cljs.core.Symbol.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (_,new_meta){
var self__ = this;
var ___$1 = this;
return (new cljs.core.Symbol(self__.ns,self__.name,self__.str,self__._hash,new_meta));
});

cljs.core.Symbol.prototype.cljs$core$IMeta$_meta$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__._meta;
});

cljs.core.Symbol.prototype.call = (function() {
var G__32363 = null;
var G__32363__2 = (function (self__,coll){
var self__ = this;
var self____$1 = this;
var sym = self____$1;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll,sym,null);
});
var G__32363__3 = (function (self__,coll,not_found){
var self__ = this;
var self____$1 = this;
var sym = self____$1;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll,sym,not_found);
});
G__32363 = function(self__,coll,not_found){
switch(arguments.length){
case 2:
return G__32363__2.call(this,self__,coll);
case 3:
return G__32363__3.call(this,self__,coll,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__32363.cljs$core$IFn$_invoke$arity$2 = G__32363__2;
G__32363.cljs$core$IFn$_invoke$arity$3 = G__32363__3;
return G__32363;
})()
;

cljs.core.Symbol.prototype.apply = (function (self__,args32362){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args32362)));
});

cljs.core.Symbol.prototype.cljs$core$IFn$_invoke$arity$1 = (function (coll){
var self__ = this;
var sym = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll,sym,null);
});

cljs.core.Symbol.prototype.cljs$core$IFn$_invoke$arity$2 = (function (coll,not_found){
var self__ = this;
var sym = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll,sym,not_found);
});

cljs.core.Symbol.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (_,other){
var self__ = this;
var ___$1 = this;
if((other instanceof cljs.core.Symbol)){
return (self__.str === other.str);
} else {
return false;
}
});

cljs.core.Symbol.prototype.toString = (function (){
var self__ = this;
var _ = this;
return self__.str;
});

cljs.core.Symbol.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.Symbol.cljs$lang$type = true;

cljs.core.Symbol.cljs$lang$ctorStr = "cljs.core/Symbol";

cljs.core.Symbol.cljs$lang$ctorPrWriter = (function (this__24859__auto__,writer__24860__auto__,opt__24861__auto__){
return cljs.core._write(writer__24860__auto__,"cljs.core/Symbol");
});

cljs.core.__GT_Symbol = (function __GT_Symbol(ns,name,str,_hash,_meta){
return (new cljs.core.Symbol(ns,name,str,_hash,_meta));
});

cljs.core.symbol = (function() {
var symbol = null;
var symbol__1 = (function (name){
if((name instanceof cljs.core.Symbol)){
return name;
} else {
return symbol.cljs$core$IFn$_invoke$arity$2(null,name);
}
});
var symbol__2 = (function (ns,name){
var sym_str = ((!((ns == null)))?[cljs.core.str(ns),cljs.core.str("/"),cljs.core.str(name)].join(''):name);
return (new cljs.core.Symbol(ns,name,sym_str,null,null));
});
symbol = function(ns,name){
switch(arguments.length){
case 1:
return symbol__1.call(this,ns);
case 2:
return symbol__2.call(this,ns,name);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
symbol.cljs$core$IFn$_invoke$arity$1 = symbol__1;
symbol.cljs$core$IFn$_invoke$arity$2 = symbol__2;
return symbol;
})()
;

/**
* @constructor
*/
cljs.core.Var = (function (val,sym,_meta){
this.val = val;
this.sym = sym;
this._meta = _meta;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 163840;
})
cljs.core.Var.prototype.cljs$core$IMeta$_meta$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__._meta;
});

cljs.core.Var.prototype.cljs$core$IDeref$_deref$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.val;
});

cljs.core.Var.cljs$lang$type = true;

cljs.core.Var.cljs$lang$ctorStr = "cljs.core/Var";

cljs.core.Var.cljs$lang$ctorPrWriter = (function (this__24859__auto__,writer__24860__auto__,opt__24861__auto__){
return cljs.core._write(writer__24860__auto__,"cljs.core/Var");
});

cljs.core.__GT_Var = (function __GT_Var(val,sym,_meta){
return (new cljs.core.Var(val,sym,_meta));
});



cljs.core.iterable_QMARK_ = (function iterable_QMARK_(x){
var G__32367 = x;
if(G__32367){
var bit__24953__auto__ = null;
if(cljs.core.truth_((function (){var or__24272__auto__ = bit__24953__auto__;
if(cljs.core.truth_(or__24272__auto__)){
return or__24272__auto__;
} else {
return G__32367.cljs$core$IIterable$;
}
})())){
return true;
} else {
if((!G__32367.cljs$lang$protocol_mask$partition$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IIterable,G__32367);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IIterable,G__32367);
}
});
cljs.core.clone = (function clone(value){
return cljs.core._clone(value);
});
cljs.core.cloneable_QMARK_ = (function cloneable_QMARK_(value){
var G__32369 = value;
if(G__32369){
var bit__24953__auto__ = (G__32369.cljs$lang$protocol_mask$partition1$ & (8192));
if((bit__24953__auto__) || (G__32369.cljs$core$ICloneable$)){
return true;
} else {
if((!G__32369.cljs$lang$protocol_mask$partition1$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ICloneable,G__32369);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ICloneable,G__32369);
}
});
/**
* Returns a seq on the collection. If the collection is
* empty, returns nil.  (seq nil) returns nil. seq also works on
* Strings.
*/
cljs.core.seq = (function seq(coll){
if((coll == null)){
return null;
} else {
if((function (){var G__32371 = coll;
if(G__32371){
var bit__24946__auto__ = (G__32371.cljs$lang$protocol_mask$partition0$ & (8388608));
if((bit__24946__auto__) || (G__32371.cljs$core$ISeqable$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$ISeqable$_seq$arity$1(null);
} else {
if(coll instanceof Array){
if((coll.length === (0))){
return null;
} else {
return (new cljs.core.IndexedSeq(coll,(0)));
}
} else {
if(typeof coll === 'string'){
if((coll.length === (0))){
return null;
} else {
return (new cljs.core.IndexedSeq(coll,(0)));
}
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.ISeqable,coll)){
return cljs.core._seq(coll);
} else {
throw (new Error([cljs.core.str(coll),cljs.core.str(" is not ISeqable")].join('')));

}
}
}
}
}
});
/**
* Returns the first item in the collection. Calls seq on its
* argument. If coll is nil, returns nil.
*/
cljs.core.first = (function first(coll){
if((coll == null)){
return null;
} else {
if((function (){var G__32373 = coll;
if(G__32373){
var bit__24946__auto__ = (G__32373.cljs$lang$protocol_mask$partition0$ & (64));
if((bit__24946__auto__) || (G__32373.cljs$core$ISeq$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$ISeq$_first$arity$1(null);
} else {
var s = cljs.core.seq(coll);
if((s == null)){
return null;
} else {
return cljs.core._first(s);
}
}
}
});
/**
* Returns a possibly empty seq of the items after the first. Calls seq on its
* argument.
*/
cljs.core.rest = (function rest(coll){
if(!((coll == null))){
if((function (){var G__32375 = coll;
if(G__32375){
var bit__24946__auto__ = (G__32375.cljs$lang$protocol_mask$partition0$ & (64));
if((bit__24946__auto__) || (G__32375.cljs$core$ISeq$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$ISeq$_rest$arity$1(null);
} else {
var s = cljs.core.seq(coll);
if(s){
return cljs.core._rest(s);
} else {
return cljs.core.List.EMPTY;
}
}
} else {
return cljs.core.List.EMPTY;
}
});
/**
* Returns a seq of the items after the first. Calls seq on its
* argument.  If there are no more items, returns nil
*/
cljs.core.next = (function next(coll){
if((coll == null)){
return null;
} else {
if((function (){var G__32377 = coll;
if(G__32377){
var bit__24946__auto__ = (G__32377.cljs$lang$protocol_mask$partition0$ & (128));
if((bit__24946__auto__) || (G__32377.cljs$core$INext$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$INext$_next$arity$1(null);
} else {
return cljs.core.seq(cljs.core.rest(coll));
}
}
});
/**
* Equality. Returns true if x equals y, false if not. Compares
* numbers and collections in a type-independent manner.  Clojure's immutable data
* structures define -equiv (and thus =) as a value, not an identity,
* comparison.
* @param {...*} var_args
*/
cljs.core._EQ_ = (function() {
var _EQ_ = null;
var _EQ___1 = (function (x){
return true;
});
var _EQ___2 = (function (x,y){
if((x == null)){
return (y == null);
} else {
return ((x === y)) || (cljs.core._equiv(x,y));
}
});
var _EQ___3 = (function() { 
var G__32382__delegate = function (x,y,more){
while(true){
if(_EQ_.cljs$core$IFn$_invoke$arity$2(x,y)){
if(cljs.core.next(more)){
var G__32383 = y;
var G__32384 = cljs.core.first(more);
var G__32385 = cljs.core.next(more);
x = G__32383;
y = G__32384;
more = G__32385;
continue;
} else {
return _EQ_.cljs$core$IFn$_invoke$arity$2(y,cljs.core.first(more));
}
} else {
return false;
}
break;
}
};
var G__32382 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__32386__i = 0, G__32386__a = new Array(arguments.length -  2);
while (G__32386__i < G__32386__a.length) {G__32386__a[G__32386__i] = arguments[G__32386__i + 2]; ++G__32386__i;}
  more = new cljs.core.IndexedSeq(G__32386__a,0);
} 
return G__32382__delegate.call(this,x,y,more);};
G__32382.cljs$lang$maxFixedArity = 2;
G__32382.cljs$lang$applyTo = (function (arglist__32387){
var x = cljs.core.first(arglist__32387);
arglist__32387 = cljs.core.next(arglist__32387);
var y = cljs.core.first(arglist__32387);
var more = cljs.core.rest(arglist__32387);
return G__32382__delegate(x,y,more);
});
G__32382.cljs$core$IFn$_invoke$arity$variadic = G__32382__delegate;
return G__32382;
})()
;
_EQ_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return _EQ___1.call(this,x);
case 2:
return _EQ___2.call(this,x,y);
default:
var G__32388 = null;
if (arguments.length > 2) {
var G__32389__i = 0, G__32389__a = new Array(arguments.length -  2);
while (G__32389__i < G__32389__a.length) {G__32389__a[G__32389__i] = arguments[G__32389__i + 2]; ++G__32389__i;}
G__32388 = new cljs.core.IndexedSeq(G__32389__a,0);
}
return _EQ___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__32388);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_EQ_.cljs$lang$maxFixedArity = 2;
_EQ_.cljs$lang$applyTo = _EQ___3.cljs$lang$applyTo;
_EQ_.cljs$core$IFn$_invoke$arity$1 = _EQ___1;
_EQ_.cljs$core$IFn$_invoke$arity$2 = _EQ___2;
_EQ_.cljs$core$IFn$_invoke$arity$variadic = _EQ___3.cljs$core$IFn$_invoke$arity$variadic;
return _EQ_;
})()
;

/**
* @constructor
*/
cljs.core.ES6Iterator = (function (s){
this.s = s;
})
cljs.core.ES6Iterator.prototype.next = (function (){
var self__ = this;
var _ = this;
if(!((self__.s == null))){
var x = cljs.core.first(self__.s);
self__.s = cljs.core.next(self__.s);

return {"done": false, "value": x};
} else {
return {"done": true, "value": null};
}
});

cljs.core.ES6Iterator.cljs$lang$type = true;

cljs.core.ES6Iterator.cljs$lang$ctorStr = "cljs.core/ES6Iterator";

cljs.core.ES6Iterator.cljs$lang$ctorPrWriter = (function (this__24859__auto__,writer__24860__auto__,opt__24861__auto__){
return cljs.core._write(writer__24860__auto__,"cljs.core/ES6Iterator");
});

cljs.core.__GT_ES6Iterator = (function __GT_ES6Iterator(s){
return (new cljs.core.ES6Iterator(s));
});

cljs.core.es6_iterator = (function es6_iterator(coll){
return (new cljs.core.ES6Iterator(cljs.core.seq(coll)));
});

/**
* @constructor
*/
cljs.core.ES6IteratorSeq = (function (value,iter,_rest){
this.value = value;
this.iter = iter;
this._rest = _rest;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 8388672;
})
cljs.core.ES6IteratorSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.value;
});

cljs.core.ES6IteratorSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
if((self__._rest == null)){
self__._rest = (function (){var G__32390 = self__.iter;
return (cljs.core.es6_iterator_seq.cljs$core$IFn$_invoke$arity$1 ? cljs.core.es6_iterator_seq.cljs$core$IFn$_invoke$arity$1(G__32390) : cljs.core.es6_iterator_seq.call(null,G__32390));
})();
} else {
}

return self__._rest;
});

cljs.core.ES6IteratorSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return this$__$1;
});

cljs.core.ES6IteratorSeq.cljs$lang$type = true;

cljs.core.ES6IteratorSeq.cljs$lang$ctorStr = "cljs.core/ES6IteratorSeq";

cljs.core.ES6IteratorSeq.cljs$lang$ctorPrWriter = (function (this__24859__auto__,writer__24860__auto__,opt__24861__auto__){
return cljs.core._write(writer__24860__auto__,"cljs.core/ES6IteratorSeq");
});

cljs.core.__GT_ES6IteratorSeq = (function __GT_ES6IteratorSeq(value,iter,_rest){
return (new cljs.core.ES6IteratorSeq(value,iter,_rest));
});

cljs.core.es6_iterator_seq = (function es6_iterator_seq(iter){
var v = iter.next();
if(cljs.core.truth_(v.done)){
return cljs.core.List.EMPTY;
} else {
return (new cljs.core.ES6IteratorSeq(v.value,iter,null));
}
});
/**
* Mix final collection hash for ordered or unordered collections.
* hash-basis is the combined collection hash, count is the number
* of elements included in the basis. Note this is the hash code
* consistent with =, different from .hashCode.
* See http://clojure.org/data_structures#hash for full algorithms.
*/
cljs.core.mix_collection_hash = (function mix_collection_hash(hash_basis,count){
var h1 = cljs.core.m3_seed;
var k1 = cljs.core.m3_mix_K1(hash_basis);
var h1__$1 = cljs.core.m3_mix_H1(h1,k1);
return cljs.core.m3_fmix(h1__$1,count);
});
/**
* Returns the hash code, consistent with =, for an external ordered
* collection implementing Iterable.
* See http://clojure.org/data_structures#hash for full algorithms.
*/
cljs.core.hash_ordered_coll = (function hash_ordered_coll(coll){
var n = (0);
var hash_code = (1);
var coll__$1 = cljs.core.seq(coll);
while(true){
if(!((coll__$1 == null))){
var G__32391 = (n + (1));
var G__32392 = ((cljs.core.imul((31),hash_code) + cljs.core.hash(cljs.core.first(coll__$1))) | (0));
var G__32393 = cljs.core.next(coll__$1);
n = G__32391;
hash_code = G__32392;
coll__$1 = G__32393;
continue;
} else {
return cljs.core.mix_collection_hash(hash_code,n);
}
break;
}
});
/**
* Returns the hash code, consistent with =, for an external unordered
* collection implementing Iterable. For maps, the iterator should
* return map entries whose hash is computed as
* (hash-ordered-coll [k v]).
* See http://clojure.org/data_structures#hash for full algorithms.
*/
cljs.core.hash_unordered_coll = (function hash_unordered_coll(coll){
var n = (0);
var hash_code = (0);
var coll__$1 = cljs.core.seq(coll);
while(true){
if(!((coll__$1 == null))){
var G__32394 = (n + (1));
var G__32395 = ((hash_code + cljs.core.hash(cljs.core.first(coll__$1))) | (0));
var G__32396 = cljs.core.next(coll__$1);
n = G__32394;
hash_code = G__32395;
coll__$1 = G__32396;
continue;
} else {
return cljs.core.mix_collection_hash(hash_code,n);
}
break;
}
});


(cljs.core.ICounted["null"] = true);

(cljs.core._count["null"] = (function (_){
return (0);
}));
Date.prototype.cljs$core$IEquiv$ = true;

Date.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (o,other){
var o__$1 = this;
return ((other instanceof Date)) && ((o__$1.toString() === other.toString()));
});
(cljs.core.IEquiv["number"] = true);

(cljs.core._equiv["number"] = (function (x,o){
return (x === o);
}));
(cljs.core.IMeta["function"] = true);

(cljs.core._meta["function"] = (function (_){
return null;
}));

(cljs.core.Fn["function"] = true);
(cljs.core.IHash["_"] = true);

(cljs.core._hash["_"] = (function (o){
var G__32397 = o;
return goog.getUid(G__32397);
}));
/**
* Returns a number one greater than num.
*/
cljs.core.inc = (function inc(x){
return (x + (1));
});

/**
* @constructor
*/
cljs.core.Reduced = (function (val){
this.val = val;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32768;
})
cljs.core.Reduced.prototype.cljs$core$IDeref$_deref$arity$1 = (function (o){
var self__ = this;
var o__$1 = this;
return self__.val;
});

cljs.core.Reduced.cljs$lang$type = true;

cljs.core.Reduced.cljs$lang$ctorStr = "cljs.core/Reduced";

cljs.core.Reduced.cljs$lang$ctorPrWriter = (function (this__24859__auto__,writer__24860__auto__,opt__24861__auto__){
return cljs.core._write(writer__24860__auto__,"cljs.core/Reduced");
});

cljs.core.__GT_Reduced = (function __GT_Reduced(val){
return (new cljs.core.Reduced(val));
});

/**
* Wraps x in a way such that a reduce will terminate with the value x
*/
cljs.core.reduced = (function reduced(x){
return (new cljs.core.Reduced(x));
});
/**
* Returns true if x is the result of a call to reduced
*/
cljs.core.reduced_QMARK_ = (function reduced_QMARK_(r){
return (r instanceof cljs.core.Reduced);
});
/**
* If x is already reduced?, returns it, else returns (reduced x)
*/
cljs.core.ensure_reduced = (function ensure_reduced(x){
if(cljs.core.reduced_QMARK_(x)){
return x;
} else {
return cljs.core.reduced(x);
}
});
/**
* If x is reduced?, returns (deref x), else returns x
*/
cljs.core.unreduced = (function unreduced(x){
if(cljs.core.reduced_QMARK_(x)){
var G__32399 = x;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__32399) : cljs.core.deref.call(null,G__32399));
} else {
return x;
}
});
cljs.core.deref = (function deref(o){
return cljs.core._deref(o);
});
/**
* Accepts any collection which satisfies the ICount and IIndexed protocols and
* reduces them without incurring seq initialization
*/
cljs.core.ci_reduce = (function() {
var ci_reduce = null;
var ci_reduce__2 = (function (cicoll,f){
var cnt = cljs.core._count(cicoll);
if((cnt === (0))){
return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
} else {
var val = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(cicoll,(0));
var n = (1);
while(true){
if((n < cnt)){
var nval = (function (){var G__32406 = val;
var G__32407 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(cicoll,n);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__32406,G__32407) : f.call(null,G__32406,G__32407));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__32412 = nval;
var G__32413 = (n + (1));
val = G__32412;
n = G__32413;
continue;
}
} else {
return val;
}
break;
}
}
});
var ci_reduce__3 = (function (cicoll,f,val){
var cnt = cljs.core._count(cicoll);
var val__$1 = val;
var n = (0);
while(true){
if((n < cnt)){
var nval = (function (){var G__32408 = val__$1;
var G__32409 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(cicoll,n);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__32408,G__32409) : f.call(null,G__32408,G__32409));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__32414 = nval;
var G__32415 = (n + (1));
val__$1 = G__32414;
n = G__32415;
continue;
}
} else {
return val__$1;
}
break;
}
});
var ci_reduce__4 = (function (cicoll,f,val,idx){
var cnt = cljs.core._count(cicoll);
var val__$1 = val;
var n = idx;
while(true){
if((n < cnt)){
var nval = (function (){var G__32410 = val__$1;
var G__32411 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(cicoll,n);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__32410,G__32411) : f.call(null,G__32410,G__32411));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__32416 = nval;
var G__32417 = (n + (1));
val__$1 = G__32416;
n = G__32417;
continue;
}
} else {
return val__$1;
}
break;
}
});
ci_reduce = function(cicoll,f,val,idx){
switch(arguments.length){
case 2:
return ci_reduce__2.call(this,cicoll,f);
case 3:
return ci_reduce__3.call(this,cicoll,f,val);
case 4:
return ci_reduce__4.call(this,cicoll,f,val,idx);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
ci_reduce.cljs$core$IFn$_invoke$arity$2 = ci_reduce__2;
ci_reduce.cljs$core$IFn$_invoke$arity$3 = ci_reduce__3;
ci_reduce.cljs$core$IFn$_invoke$arity$4 = ci_reduce__4;
return ci_reduce;
})()
;
cljs.core.array_reduce = (function() {
var array_reduce = null;
var array_reduce__2 = (function (arr,f){
var cnt = arr.length;
if((arr.length === (0))){
return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
} else {
var val = (arr[(0)]);
var n = (1);
while(true){
if((n < cnt)){
var nval = (function (){var G__32424 = val;
var G__32425 = (arr[n]);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__32424,G__32425) : f.call(null,G__32424,G__32425));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__32430 = nval;
var G__32431 = (n + (1));
val = G__32430;
n = G__32431;
continue;
}
} else {
return val;
}
break;
}
}
});
var array_reduce__3 = (function (arr,f,val){
var cnt = arr.length;
var val__$1 = val;
var n = (0);
while(true){
if((n < cnt)){
var nval = (function (){var G__32426 = val__$1;
var G__32427 = (arr[n]);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__32426,G__32427) : f.call(null,G__32426,G__32427));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__32432 = nval;
var G__32433 = (n + (1));
val__$1 = G__32432;
n = G__32433;
continue;
}
} else {
return val__$1;
}
break;
}
});
var array_reduce__4 = (function (arr,f,val,idx){
var cnt = arr.length;
var val__$1 = val;
var n = idx;
while(true){
if((n < cnt)){
var nval = (function (){var G__32428 = val__$1;
var G__32429 = (arr[n]);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__32428,G__32429) : f.call(null,G__32428,G__32429));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__32434 = nval;
var G__32435 = (n + (1));
val__$1 = G__32434;
n = G__32435;
continue;
}
} else {
return val__$1;
}
break;
}
});
array_reduce = function(arr,f,val,idx){
switch(arguments.length){
case 2:
return array_reduce__2.call(this,arr,f);
case 3:
return array_reduce__3.call(this,arr,f,val);
case 4:
return array_reduce__4.call(this,arr,f,val,idx);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
array_reduce.cljs$core$IFn$_invoke$arity$2 = array_reduce__2;
array_reduce.cljs$core$IFn$_invoke$arity$3 = array_reduce__3;
array_reduce.cljs$core$IFn$_invoke$arity$4 = array_reduce__4;
return array_reduce;
})()
;



/**
* Returns true if coll implements count in constant time
*/
cljs.core.counted_QMARK_ = (function counted_QMARK_(x){
var G__32437 = x;
if(G__32437){
var bit__24953__auto__ = (G__32437.cljs$lang$protocol_mask$partition0$ & (2));
if((bit__24953__auto__) || (G__32437.cljs$core$ICounted$)){
return true;
} else {
if((!G__32437.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ICounted,G__32437);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ICounted,G__32437);
}
});
/**
* Returns true if coll implements nth in constant time
*/
cljs.core.indexed_QMARK_ = (function indexed_QMARK_(x){
var G__32439 = x;
if(G__32439){
var bit__24953__auto__ = (G__32439.cljs$lang$protocol_mask$partition0$ & (16));
if((bit__24953__auto__) || (G__32439.cljs$core$IIndexed$)){
return true;
} else {
if((!G__32439.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IIndexed,G__32439);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IIndexed,G__32439);
}
});

/**
* @constructor
*/
cljs.core.IndexedSeqIterator = (function (arr,i){
this.arr = arr;
this.i = i;
})
cljs.core.IndexedSeqIterator.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
return (self__.i < self__.arr.length);
});

cljs.core.IndexedSeqIterator.prototype.next = (function (){
var self__ = this;
var _ = this;
var ret = (self__.arr[self__.i]);
self__.i = (self__.i + (1));

return ret;
});

cljs.core.IndexedSeqIterator.cljs$lang$type = true;

cljs.core.IndexedSeqIterator.cljs$lang$ctorStr = "cljs.core/IndexedSeqIterator";

cljs.core.IndexedSeqIterator.cljs$lang$ctorPrWriter = (function (this__24859__auto__,writer__24860__auto__,opt__24861__auto__){
return cljs.core._write(writer__24860__auto__,"cljs.core/IndexedSeqIterator");
});

cljs.core.__GT_IndexedSeqIterator = (function __GT_IndexedSeqIterator(arr,i){
return (new cljs.core.IndexedSeqIterator(arr,i));
});


/**
* @constructor
*/
cljs.core.IndexedSeq = (function (arr,i){
this.arr = arr;
this.i = i;
this.cljs$lang$protocol_mask$partition0$ = 166199550;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.IndexedSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.IndexedSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.IndexedSeq.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (coll,n){
var self__ = this;
var coll__$1 = this;
var i__$1 = (n + self__.i);
if((i__$1 < self__.arr.length)){
return (self__.arr[i__$1]);
} else {
return null;
}
});

cljs.core.IndexedSeq.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (coll,n,not_found){
var self__ = this;
var coll__$1 = this;
var i__$1 = (n + self__.i);
if((i__$1 < self__.arr.length)){
return (self__.arr[i__$1]);
} else {
return not_found;
}
});

cljs.core.IndexedSeq.prototype.cljs$core$IIterable$ = true;

cljs.core.IndexedSeq.prototype.cljs$core$IIterable$_iterator$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.IndexedSeqIterator(self__.arr,self__.i));
});

cljs.core.IndexedSeq.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.IndexedSeq(self__.arr,self__.i));
});

cljs.core.IndexedSeq.prototype.cljs$core$INext$_next$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
if(((self__.i + (1)) < self__.arr.length)){
return (new cljs.core.IndexedSeq(self__.arr,(self__.i + (1))));
} else {
return null;
}
});

cljs.core.IndexedSeq.prototype.cljs$core$ICounted$_count$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (self__.arr.length - self__.i);
});

cljs.core.IndexedSeq.prototype.cljs$core$IReversible$_rseq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var c = cljs.core._count(coll__$1);
if((c > (0))){
return (new cljs.core.RSeq(coll__$1,(c - (1)),null));
} else {
return null;
}
});

cljs.core.IndexedSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.hash_ordered_coll(coll__$1);
});

cljs.core.IndexedSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
var G__32440 = coll__$1;
var G__32441 = other;
return (cljs.core.equiv_sequential.cljs$core$IFn$_invoke$arity$2 ? cljs.core.equiv_sequential.cljs$core$IFn$_invoke$arity$2(G__32440,G__32441) : cljs.core.equiv_sequential.call(null,G__32440,G__32441));
});

cljs.core.IndexedSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.List.EMPTY;
});

cljs.core.IndexedSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4(self__.arr,f,(self__.arr[self__.i]),(self__.i + (1)));
});

cljs.core.IndexedSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4(self__.arr,f,start,self__.i);
});

cljs.core.IndexedSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (self__.arr[self__.i]);
});

cljs.core.IndexedSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
if(((self__.i + (1)) < self__.arr.length)){
return (new cljs.core.IndexedSeq(self__.arr,(self__.i + (1))));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.IndexedSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return this$__$1;
});

cljs.core.IndexedSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
var G__32442 = o;
var G__32443 = coll__$1;
return (cljs.core.cons.cljs$core$IFn$_invoke$arity$2 ? cljs.core.cons.cljs$core$IFn$_invoke$arity$2(G__32442,G__32443) : cljs.core.cons.call(null,G__32442,G__32443));
});

cljs.core.IndexedSeq.cljs$lang$type = true;

cljs.core.IndexedSeq.cljs$lang$ctorStr = "cljs.core/IndexedSeq";

cljs.core.IndexedSeq.cljs$lang$ctorPrWriter = (function (this__24859__auto__,writer__24860__auto__,opt__24861__auto__){
return cljs.core._write(writer__24860__auto__,"cljs.core/IndexedSeq");
});

cljs.core.__GT_IndexedSeq = (function __GT_IndexedSeq(arr,i){
return (new cljs.core.IndexedSeq(arr,i));
});

(cljs.core.IndexedSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__25250__auto__ = this;
return cljs.core.es6_iterator(this__25250__auto__);
}));
cljs.core.prim_seq = (function() {
var prim_seq = null;
var prim_seq__1 = (function (prim){
return prim_seq.cljs$core$IFn$_invoke$arity$2(prim,(0));
});
var prim_seq__2 = (function (prim,i){
if((i < prim.length)){
return (new cljs.core.IndexedSeq(prim,i));
} else {
return null;
}
});
prim_seq = function(prim,i){
switch(arguments.length){
case 1:
return prim_seq__1.call(this,prim);
case 2:
return prim_seq__2.call(this,prim,i);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
prim_seq.cljs$core$IFn$_invoke$arity$1 = prim_seq__1;
prim_seq.cljs$core$IFn$_invoke$arity$2 = prim_seq__2;
return prim_seq;
})()
;
cljs.core.array_seq = (function() {
var array_seq = null;
var array_seq__1 = (function (array){
return cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(array,(0));
});
var array_seq__2 = (function (array,i){
return cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(array,i);
});
array_seq = function(array,i){
switch(arguments.length){
case 1:
return array_seq__1.call(this,array);
case 2:
return array_seq__2.call(this,array,i);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
array_seq.cljs$core$IFn$_invoke$arity$1 = array_seq__1;
array_seq.cljs$core$IFn$_invoke$arity$2 = array_seq__2;
return array_seq;
})()
;


/**
* @constructor
*/
cljs.core.RSeq = (function (ci,i,meta){
this.ci = ci;
this.i = i;
this.meta = meta;
this.cljs$lang$protocol_mask$partition0$ = 32374990;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.RSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.RSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.RSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.RSeq.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.RSeq(self__.ci,self__.i,self__.meta));
});

cljs.core.RSeq.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.i > (0))){
return (new cljs.core.RSeq(self__.ci,(self__.i - (1)),null));
} else {
return null;
}
});

cljs.core.RSeq.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (self__.i + (1));
});

cljs.core.RSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.hash_ordered_coll(coll__$1);
});

cljs.core.RSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
var G__32446 = coll__$1;
var G__32447 = other;
return (cljs.core.equiv_sequential.cljs$core$IFn$_invoke$arity$2 ? cljs.core.equiv_sequential.cljs$core$IFn$_invoke$arity$2(G__32446,G__32447) : cljs.core.equiv_sequential.call(null,G__32446,G__32447));
});

cljs.core.RSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var G__32448 = cljs.core.List.EMPTY;
var G__32449 = self__.meta;
return (cljs.core.with_meta.cljs$core$IFn$_invoke$arity$2 ? cljs.core.with_meta.cljs$core$IFn$_invoke$arity$2(G__32448,G__32449) : cljs.core.with_meta.call(null,G__32448,G__32449));
});

cljs.core.RSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (col,f){
var self__ = this;
var col__$1 = this;
var G__32450 = f;
var G__32451 = col__$1;
return (cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2 ? cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(G__32450,G__32451) : cljs.core.seq_reduce.call(null,G__32450,G__32451));
});

cljs.core.RSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (col,f,start){
var self__ = this;
var col__$1 = this;
var G__32452 = f;
var G__32453 = start;
var G__32454 = col__$1;
return (cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3 ? cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(G__32452,G__32453,G__32454) : cljs.core.seq_reduce.call(null,G__32452,G__32453,G__32454));
});

cljs.core.RSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.ci,self__.i);
});

cljs.core.RSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.i > (0))){
return (new cljs.core.RSeq(self__.ci,(self__.i - (1)),null));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.RSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.RSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,new_meta){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.RSeq(self__.ci,self__.i,new_meta));
});

cljs.core.RSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
var G__32455 = o;
var G__32456 = coll__$1;
return (cljs.core.cons.cljs$core$IFn$_invoke$arity$2 ? cljs.core.cons.cljs$core$IFn$_invoke$arity$2(G__32455,G__32456) : cljs.core.cons.call(null,G__32455,G__32456));
});

cljs.core.RSeq.cljs$lang$type = true;

cljs.core.RSeq.cljs$lang$ctorStr = "cljs.core/RSeq";

cljs.core.RSeq.cljs$lang$ctorPrWriter = (function (this__24859__auto__,writer__24860__auto__,opt__24861__auto__){
return cljs.core._write(writer__24860__auto__,"cljs.core/RSeq");
});

cljs.core.__GT_RSeq = (function __GT_RSeq(ci,i,meta){
return (new cljs.core.RSeq(ci,i,meta));
});

(cljs.core.RSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__25250__auto__ = this;
return cljs.core.es6_iterator(this__25250__auto__);
}));
/**
* Same as (first (next x))
*/
cljs.core.second = (function second(coll){
return cljs.core.first(cljs.core.next(coll));
});
/**
* Same as (first (first x))
*/
cljs.core.ffirst = (function ffirst(coll){
return cljs.core.first(cljs.core.first(coll));
});
/**
* Same as (next (first x))
*/
cljs.core.nfirst = (function nfirst(coll){
return cljs.core.next(cljs.core.first(coll));
});
/**
* Same as (first (next x))
*/
cljs.core.fnext = (function fnext(coll){
return cljs.core.first(cljs.core.next(coll));
});
/**
* Same as (next (next x))
*/
cljs.core.nnext = (function nnext(coll){
return cljs.core.next(cljs.core.next(coll));
});
/**
* Return the last item in coll, in linear time
*/
cljs.core.last = (function last(s){
while(true){
var sn = cljs.core.next(s);
if(!((sn == null))){
var G__32457 = sn;
s = G__32457;
continue;
} else {
return cljs.core.first(s);
}
break;
}
});
(cljs.core.IEquiv["_"] = true);

(cljs.core._equiv["_"] = (function (x,o){
return (x === o);
}));
/**
* conj[oin]. Returns a new collection with the xs
* 'added'. (conj nil item) returns (item).  The 'addition' may
* happen at different 'places' depending on the concrete type.
* @param {...*} var_args
*/
cljs.core.conj = (function() {
var conj = null;
var conj__0 = (function (){
return cljs.core.PersistentVector.EMPTY;
});
var conj__1 = (function (coll){
return coll;
});
var conj__2 = (function (coll,x){
if(!((coll == null))){
return cljs.core._conj(coll,x);
} else {
return cljs.core._conj(cljs.core.List.EMPTY,x);
}
});
var conj__3 = (function() { 
var G__32462__delegate = function (coll,x,xs){
while(true){
if(cljs.core.truth_(xs)){
var G__32463 = conj.cljs$core$IFn$_invoke$arity$2(coll,x);
var G__32464 = cljs.core.first(xs);
var G__32465 = cljs.core.next(xs);
coll = G__32463;
x = G__32464;
xs = G__32465;
continue;
} else {
return conj.cljs$core$IFn$_invoke$arity$2(coll,x);
}
break;
}
};
var G__32462 = function (coll,x,var_args){
var xs = null;
if (arguments.length > 2) {
var G__32466__i = 0, G__32466__a = new Array(arguments.length -  2);
while (G__32466__i < G__32466__a.length) {G__32466__a[G__32466__i] = arguments[G__32466__i + 2]; ++G__32466__i;}
  xs = new cljs.core.IndexedSeq(G__32466__a,0);
} 
return G__32462__delegate.call(this,coll,x,xs);};
G__32462.cljs$lang$maxFixedArity = 2;
G__32462.cljs$lang$applyTo = (function (arglist__32467){
var coll = cljs.core.first(arglist__32467);
arglist__32467 = cljs.core.next(arglist__32467);
var x = cljs.core.first(arglist__32467);
var xs = cljs.core.rest(arglist__32467);
return G__32462__delegate(coll,x,xs);
});
G__32462.cljs$core$IFn$_invoke$arity$variadic = G__32462__delegate;
return G__32462;
})()
;
conj = function(coll,x,var_args){
var xs = var_args;
switch(arguments.length){
case 0:
return conj__0.call(this);
case 1:
return conj__1.call(this,coll);
case 2:
return conj__2.call(this,coll,x);
default:
var G__32468 = null;
if (arguments.length > 2) {
var G__32469__i = 0, G__32469__a = new Array(arguments.length -  2);
while (G__32469__i < G__32469__a.length) {G__32469__a[G__32469__i] = arguments[G__32469__i + 2]; ++G__32469__i;}
G__32468 = new cljs.core.IndexedSeq(G__32469__a,0);
}
return conj__3.cljs$core$IFn$_invoke$arity$variadic(coll,x, G__32468);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
conj.cljs$lang$maxFixedArity = 2;
conj.cljs$lang$applyTo = conj__3.cljs$lang$applyTo;
conj.cljs$core$IFn$_invoke$arity$0 = conj__0;
conj.cljs$core$IFn$_invoke$arity$1 = conj__1;
conj.cljs$core$IFn$_invoke$arity$2 = conj__2;
conj.cljs$core$IFn$_invoke$arity$variadic = conj__3.cljs$core$IFn$_invoke$arity$variadic;
return conj;
})()
;
/**
* Returns an empty collection of the same category as coll, or nil
*/
cljs.core.empty = (function empty(coll){
if((coll == null)){
return null;
} else {
return cljs.core._empty(coll);
}
});
cljs.core.accumulating_seq_count = (function accumulating_seq_count(coll){
var s = cljs.core.seq(coll);
var acc = (0);
while(true){
if(cljs.core.counted_QMARK_(s)){
return (acc + cljs.core._count(s));
} else {
var G__32470 = cljs.core.next(s);
var G__32471 = (acc + (1));
s = G__32470;
acc = G__32471;
continue;
}
break;
}
});
/**
* Returns the number of items in the collection. (count nil) returns
* 0.  Also works on strings, arrays, and Maps
*/
cljs.core.count = (function count(coll){
if(!((coll == null))){
if((function (){var G__32473 = coll;
if(G__32473){
var bit__24946__auto__ = (G__32473.cljs$lang$protocol_mask$partition0$ & (2));
if((bit__24946__auto__) || (G__32473.cljs$core$ICounted$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$ICounted$_count$arity$1(null);
} else {
if(coll instanceof Array){
return coll.length;
} else {
if(typeof coll === 'string'){
return coll.length;
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.ICounted,coll)){
return cljs.core._count(coll);
} else {
return cljs.core.accumulating_seq_count(coll);

}
}
}
}
} else {
return (0);
}
});
cljs.core.linear_traversal_nth = (function() {
var linear_traversal_nth = null;
var linear_traversal_nth__2 = (function (coll,n){
while(true){
if((coll == null)){
throw (new Error("Index out of bounds"));
} else {
if((n === (0))){
if(cljs.core.seq(coll)){
return cljs.core.first(coll);
} else {
throw (new Error("Index out of bounds"));
}
} else {
if(cljs.core.indexed_QMARK_(coll)){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll,n);
} else {
if(cljs.core.seq(coll)){
var G__32474 = cljs.core.next(coll);
var G__32475 = (n - (1));
coll = G__32474;
n = G__32475;
continue;
} else {
throw (new Error("Index out of bounds"));

}
}
}
}
break;
}
});
var linear_traversal_nth__3 = (function (coll,n,not_found){
while(true){
if((coll == null)){
return not_found;
} else {
if((n === (0))){
if(cljs.core.seq(coll)){
return cljs.core.first(coll);
} else {
return not_found;
}
} else {
if(cljs.core.indexed_QMARK_(coll)){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(coll,n,not_found);
} else {
if(cljs.core.seq(coll)){
var G__32476 = cljs.core.next(coll);
var G__32477 = (n - (1));
var G__32478 = not_found;
coll = G__32476;
n = G__32477;
not_found = G__32478;
continue;
} else {
return not_found;

}
}
}
}
break;
}
});
linear_traversal_nth = function(coll,n,not_found){
switch(arguments.length){
case 2:
return linear_traversal_nth__2.call(this,coll,n);
case 3:
return linear_traversal_nth__3.call(this,coll,n,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
linear_traversal_nth.cljs$core$IFn$_invoke$arity$2 = linear_traversal_nth__2;
linear_traversal_nth.cljs$core$IFn$_invoke$arity$3 = linear_traversal_nth__3;
return linear_traversal_nth;
})()
;
/**
* Returns the value at the index. get returns nil if index out of
* bounds, nth throws an exception unless not-found is supplied.  nth
* also works for strings, arrays, regex Matchers and Lists, and,
* in O(n) time, for sequences.
*/
cljs.core.nth = (function() {
var nth = null;
var nth__2 = (function (coll,n){
if(!(typeof n === 'number')){
throw (new Error("index argument to nth must be a number"));
} else {
if((coll == null)){
return coll;
} else {
if((function (){var G__32483 = coll;
if(G__32483){
var bit__24946__auto__ = (G__32483.cljs$lang$protocol_mask$partition0$ & (16));
if((bit__24946__auto__) || (G__32483.cljs$core$IIndexed$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$IIndexed$_nth$arity$2(null,n);
} else {
if(coll instanceof Array){
if((n < coll.length)){
return (coll[n]);
} else {
return null;
}
} else {
if(typeof coll === 'string'){
if((n < coll.length)){
return (coll[n]);
} else {
return null;
}
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.IIndexed,coll)){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll,n);
} else {
if((function (){var G__32484 = coll;
if(G__32484){
var bit__24953__auto__ = (G__32484.cljs$lang$protocol_mask$partition0$ & (64));
if((bit__24953__auto__) || (G__32484.cljs$core$ISeq$)){
return true;
} else {
if((!G__32484.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq,G__32484);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq,G__32484);
}
})()){
return cljs.core.linear_traversal_nth.cljs$core$IFn$_invoke$arity$2(coll,n);
} else {
throw (new Error([cljs.core.str("nth not supported on this type "),cljs.core.str(cljs.core.type__GT_str(cljs.core.type(coll)))].join('')));

}
}
}
}
}
}
}
});
var nth__3 = (function (coll,n,not_found){
if(!(typeof n === 'number')){
throw (new Error("index argument to nth must be a number."));
} else {
if((coll == null)){
return not_found;
} else {
if((function (){var G__32485 = coll;
if(G__32485){
var bit__24946__auto__ = (G__32485.cljs$lang$protocol_mask$partition0$ & (16));
if((bit__24946__auto__) || (G__32485.cljs$core$IIndexed$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$IIndexed$_nth$arity$3(null,n,not_found);
} else {
if(coll instanceof Array){
if((n < coll.length)){
return (coll[n]);
} else {
return not_found;
}
} else {
if(typeof coll === 'string'){
if((n < coll.length)){
return (coll[n]);
} else {
return not_found;
}
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.IIndexed,coll)){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll,n);
} else {
if((function (){var G__32486 = coll;
if(G__32486){
var bit__24953__auto__ = (G__32486.cljs$lang$protocol_mask$partition0$ & (64));
if((bit__24953__auto__) || (G__32486.cljs$core$ISeq$)){
return true;
} else {
if((!G__32486.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq,G__32486);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq,G__32486);
}
})()){
return cljs.core.linear_traversal_nth.cljs$core$IFn$_invoke$arity$3(coll,n,not_found);
} else {
throw (new Error([cljs.core.str("nth not supported on this type "),cljs.core.str(cljs.core.type__GT_str(cljs.core.type(coll)))].join('')));

}
}
}
}
}
}
}
});
nth = function(coll,n,not_found){
switch(arguments.length){
case 2:
return nth__2.call(this,coll,n);
case 3:
return nth__3.call(this,coll,n,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
nth.cljs$core$IFn$_invoke$arity$2 = nth__2;
nth.cljs$core$IFn$_invoke$arity$3 = nth__3;
return nth;
})()
;
/**
* Returns the nth rest of coll, coll when n is 0.
*/
cljs.core.nthrest = (function nthrest(coll,n){
var n__$1 = n;
var xs = coll;
while(true){
if(((n__$1 > (0))) && (cljs.core.seq(xs))){
var G__32487 = (n__$1 - (1));
var G__32488 = cljs.core.rest(xs);
n__$1 = G__32487;
xs = G__32488;
continue;
} else {
return xs;
}
break;
}
});
/**
* Returns the value mapped to key, not-found or nil if key not present.
*/
cljs.core.get = (function() {
var get = null;
var get__2 = (function (o,k){
if((o == null)){
return null;
} else {
if((function (){var G__32491 = o;
if(G__32491){
var bit__24946__auto__ = (G__32491.cljs$lang$protocol_mask$partition0$ & (256));
if((bit__24946__auto__) || (G__32491.cljs$core$ILookup$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return o.cljs$core$ILookup$_lookup$arity$2(null,k);
} else {
if(o instanceof Array){
if((k < o.length)){
return (o[k]);
} else {
return null;
}
} else {
if(typeof o === 'string'){
if((k < o.length)){
return (o[k]);
} else {
return null;
}
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.ILookup,o)){
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$2(o,k);
} else {
return null;

}
}
}
}
}
});
var get__3 = (function (o,k,not_found){
if(!((o == null))){
if((function (){var G__32492 = o;
if(G__32492){
var bit__24946__auto__ = (G__32492.cljs$lang$protocol_mask$partition0$ & (256));
if((bit__24946__auto__) || (G__32492.cljs$core$ILookup$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return o.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
} else {
if(o instanceof Array){
if((k < o.length)){
return (o[k]);
} else {
return not_found;
}
} else {
if(typeof o === 'string'){
if((k < o.length)){
return (o[k]);
} else {
return not_found;
}
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.ILookup,o)){
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(o,k,not_found);
} else {
return not_found;

}
}
}
}
} else {
return not_found;
}
});
get = function(o,k,not_found){
switch(arguments.length){
case 2:
return get__2.call(this,o,k);
case 3:
return get__3.call(this,o,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
get.cljs$core$IFn$_invoke$arity$2 = get__2;
get.cljs$core$IFn$_invoke$arity$3 = get__3;
return get;
})()
;
/**
* assoc[iate]. When applied to a map, returns a new map of the
* same (hashed/sorted) type, that contains the mapping of key(s) to
* val(s). When applied to a vector, returns a new vector that
* contains val at index.
* @param {...*} var_args
*/
cljs.core.assoc = (function() {
var assoc = null;
var assoc__3 = (function (coll,k,v){
if(!((coll == null))){
return cljs.core._assoc(coll,k,v);
} else {
return cljs.core.PersistentHashMap.fromArrays([k],[v]);
}
});
var assoc__4 = (function() { 
var G__32496__delegate = function (coll,k,v,kvs){
while(true){
var ret = assoc.cljs$core$IFn$_invoke$arity$3(coll,k,v);
if(cljs.core.truth_(kvs)){
var G__32497 = ret;
var G__32498 = cljs.core.first(kvs);
var G__32499 = cljs.core.second(kvs);
var G__32500 = cljs.core.nnext(kvs);
coll = G__32497;
k = G__32498;
v = G__32499;
kvs = G__32500;
continue;
} else {
return ret;
}
break;
}
};
var G__32496 = function (coll,k,v,var_args){
var kvs = null;
if (arguments.length > 3) {
var G__32501__i = 0, G__32501__a = new Array(arguments.length -  3);
while (G__32501__i < G__32501__a.length) {G__32501__a[G__32501__i] = arguments[G__32501__i + 3]; ++G__32501__i;}
  kvs = new cljs.core.IndexedSeq(G__32501__a,0);
} 
return G__32496__delegate.call(this,coll,k,v,kvs);};
G__32496.cljs$lang$maxFixedArity = 3;
G__32496.cljs$lang$applyTo = (function (arglist__32502){
var coll = cljs.core.first(arglist__32502);
arglist__32502 = cljs.core.next(arglist__32502);
var k = cljs.core.first(arglist__32502);
arglist__32502 = cljs.core.next(arglist__32502);
var v = cljs.core.first(arglist__32502);
var kvs = cljs.core.rest(arglist__32502);
return G__32496__delegate(coll,k,v,kvs);
});
G__32496.cljs$core$IFn$_invoke$arity$variadic = G__32496__delegate;
return G__32496;
})()
;
assoc = function(coll,k,v,var_args){
var kvs = var_args;
switch(arguments.length){
case 3:
return assoc__3.call(this,coll,k,v);
default:
var G__32503 = null;
if (arguments.length > 3) {
var G__32504__i = 0, G__32504__a = new Array(arguments.length -  3);
while (G__32504__i < G__32504__a.length) {G__32504__a[G__32504__i] = arguments[G__32504__i + 3]; ++G__32504__i;}
G__32503 = new cljs.core.IndexedSeq(G__32504__a,0);
}
return assoc__4.cljs$core$IFn$_invoke$arity$variadic(coll,k,v, G__32503);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
assoc.cljs$lang$maxFixedArity = 3;
assoc.cljs$lang$applyTo = assoc__4.cljs$lang$applyTo;
assoc.cljs$core$IFn$_invoke$arity$3 = assoc__3;
assoc.cljs$core$IFn$_invoke$arity$variadic = assoc__4.cljs$core$IFn$_invoke$arity$variadic;
return assoc;
})()
;
/**
* dissoc[iate]. Returns a new map of the same (hashed/sorted) type,
* that does not contain a mapping for key(s).
* @param {...*} var_args
*/
cljs.core.dissoc = (function() {
var dissoc = null;
var dissoc__1 = (function (coll){
return coll;
});
var dissoc__2 = (function (coll,k){
if((coll == null)){
return null;
} else {
return cljs.core._dissoc(coll,k);
}
});
var dissoc__3 = (function() { 
var G__32507__delegate = function (coll,k,ks){
while(true){
if((coll == null)){
return null;
} else {
var ret = dissoc.cljs$core$IFn$_invoke$arity$2(coll,k);
if(cljs.core.truth_(ks)){
var G__32508 = ret;
var G__32509 = cljs.core.first(ks);
var G__32510 = cljs.core.next(ks);
coll = G__32508;
k = G__32509;
ks = G__32510;
continue;
} else {
return ret;
}
}
break;
}
};
var G__32507 = function (coll,k,var_args){
var ks = null;
if (arguments.length > 2) {
var G__32511__i = 0, G__32511__a = new Array(arguments.length -  2);
while (G__32511__i < G__32511__a.length) {G__32511__a[G__32511__i] = arguments[G__32511__i + 2]; ++G__32511__i;}
  ks = new cljs.core.IndexedSeq(G__32511__a,0);
} 
return G__32507__delegate.call(this,coll,k,ks);};
G__32507.cljs$lang$maxFixedArity = 2;
G__32507.cljs$lang$applyTo = (function (arglist__32512){
var coll = cljs.core.first(arglist__32512);
arglist__32512 = cljs.core.next(arglist__32512);
var k = cljs.core.first(arglist__32512);
var ks = cljs.core.rest(arglist__32512);
return G__32507__delegate(coll,k,ks);
});
G__32507.cljs$core$IFn$_invoke$arity$variadic = G__32507__delegate;
return G__32507;
})()
;
dissoc = function(coll,k,var_args){
var ks = var_args;
switch(arguments.length){
case 1:
return dissoc__1.call(this,coll);
case 2:
return dissoc__2.call(this,coll,k);
default:
var G__32513 = null;
if (arguments.length > 2) {
var G__32514__i = 0, G__32514__a = new Array(arguments.length -  2);
while (G__32514__i < G__32514__a.length) {G__32514__a[G__32514__i] = arguments[G__32514__i + 2]; ++G__32514__i;}
G__32513 = new cljs.core.IndexedSeq(G__32514__a,0);
}
return dissoc__3.cljs$core$IFn$_invoke$arity$variadic(coll,k, G__32513);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
dissoc.cljs$lang$maxFixedArity = 2;
dissoc.cljs$lang$applyTo = dissoc__3.cljs$lang$applyTo;
dissoc.cljs$core$IFn$_invoke$arity$1 = dissoc__1;
dissoc.cljs$core$IFn$_invoke$arity$2 = dissoc__2;
dissoc.cljs$core$IFn$_invoke$arity$variadic = dissoc__3.cljs$core$IFn$_invoke$arity$variadic;
return dissoc;
})()
;
cljs.core.fn_QMARK_ = (function fn_QMARK_(f){
var or__24272__auto__ = (function (){var G__32519 = f;
return goog.isFunction(G__32519);
})();
if(cljs.core.truth_(or__24272__auto__)){
return or__24272__auto__;
} else {
var G__32520 = f;
if(G__32520){
var bit__24953__auto__ = null;
if(cljs.core.truth_((function (){var or__24272__auto____$1 = bit__24953__auto__;
if(cljs.core.truth_(or__24272__auto____$1)){
return or__24272__auto____$1;
} else {
return G__32520.cljs$core$Fn$;
}
})())){
return true;
} else {
if((!G__32520.cljs$lang$protocol_mask$partition$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.Fn,G__32520);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.Fn,G__32520);
}
}
});

/**
* @constructor
*/
cljs.core.MetaFn = (function (afn,meta){
this.afn = afn;
this.meta = meta;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 393217;
})
cljs.core.MetaFn.prototype.call = (function() {
var G__32986 = null;
var G__32986__1 = (function (self__){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (self__.afn.cljs$core$IFn$_invoke$arity$0 ? self__.afn.cljs$core$IFn$_invoke$arity$0() : self__.afn.call(null));
});
var G__32986__2 = (function (self__,a){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__32522 = a;
return (self__.afn.cljs$core$IFn$_invoke$arity$1 ? self__.afn.cljs$core$IFn$_invoke$arity$1(G__32522) : self__.afn.call(null,G__32522));
});
var G__32986__3 = (function (self__,a,b){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__32523 = a;
var G__32524 = b;
return (self__.afn.cljs$core$IFn$_invoke$arity$2 ? self__.afn.cljs$core$IFn$_invoke$arity$2(G__32523,G__32524) : self__.afn.call(null,G__32523,G__32524));
});
var G__32986__4 = (function (self__,a,b,c){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__32525 = a;
var G__32526 = b;
var G__32527 = c;
return (self__.afn.cljs$core$IFn$_invoke$arity$3 ? self__.afn.cljs$core$IFn$_invoke$arity$3(G__32525,G__32526,G__32527) : self__.afn.call(null,G__32525,G__32526,G__32527));
});
var G__32986__5 = (function (self__,a,b,c,d){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__32528 = a;
var G__32529 = b;
var G__32530 = c;
var G__32531 = d;
return (self__.afn.cljs$core$IFn$_invoke$arity$4 ? self__.afn.cljs$core$IFn$_invoke$arity$4(G__32528,G__32529,G__32530,G__32531) : self__.afn.call(null,G__32528,G__32529,G__32530,G__32531));
});
var G__32986__6 = (function (self__,a,b,c,d,e){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__32532 = a;
var G__32533 = b;
var G__32534 = c;
var G__32535 = d;
var G__32536 = e;
return (self__.afn.cljs$core$IFn$_invoke$arity$5 ? self__.afn.cljs$core$IFn$_invoke$arity$5(G__32532,G__32533,G__32534,G__32535,G__32536) : self__.afn.call(null,G__32532,G__32533,G__32534,G__32535,G__32536));
});
var G__32986__7 = (function (self__,a,b,c,d,e,f){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__32537 = a;
var G__32538 = b;
var G__32539 = c;
var G__32540 = d;
var G__32541 = e;
var G__32542 = f;
return (self__.afn.cljs$core$IFn$_invoke$arity$6 ? self__.afn.cljs$core$IFn$_invoke$arity$6(G__32537,G__32538,G__32539,G__32540,G__32541,G__32542) : self__.afn.call(null,G__32537,G__32538,G__32539,G__32540,G__32541,G__32542));
});
var G__32986__8 = (function (self__,a,b,c,d,e,f,g){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__32543 = a;
var G__32544 = b;
var G__32545 = c;
var G__32546 = d;
var G__32547 = e;
var G__32548 = f;
var G__32549 = g;
return (self__.afn.cljs$core$IFn$_invoke$arity$7 ? self__.afn.cljs$core$IFn$_invoke$arity$7(G__32543,G__32544,G__32545,G__32546,G__32547,G__32548,G__32549) : self__.afn.call(null,G__32543,G__32544,G__32545,G__32546,G__32547,G__32548,G__32549));
});
var G__32986__9 = (function (self__,a,b,c,d,e,f,g,h){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__32550 = a;
var G__32551 = b;
var G__32552 = c;
var G__32553 = d;
var G__32554 = e;
var G__32555 = f;
var G__32556 = g;
var G__32557 = h;
return (self__.afn.cljs$core$IFn$_invoke$arity$8 ? self__.afn.cljs$core$IFn$_invoke$arity$8(G__32550,G__32551,G__32552,G__32553,G__32554,G__32555,G__32556,G__32557) : self__.afn.call(null,G__32550,G__32551,G__32552,G__32553,G__32554,G__32555,G__32556,G__32557));
});
var G__32986__10 = (function (self__,a,b,c,d,e,f,g,h,i){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__32558 = a;
var G__32559 = b;
var G__32560 = c;
var G__32561 = d;
var G__32562 = e;
var G__32563 = f;
var G__32564 = g;
var G__32565 = h;
var G__32566 = i;
return (self__.afn.cljs$core$IFn$_invoke$arity$9 ? self__.afn.cljs$core$IFn$_invoke$arity$9(G__32558,G__32559,G__32560,G__32561,G__32562,G__32563,G__32564,G__32565,G__32566) : self__.afn.call(null,G__32558,G__32559,G__32560,G__32561,G__32562,G__32563,G__32564,G__32565,G__32566));
});
var G__32986__11 = (function (self__,a,b,c,d,e,f,g,h,i,j){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__32567 = a;
var G__32568 = b;
var G__32569 = c;
var G__32570 = d;
var G__32571 = e;
var G__32572 = f;
var G__32573 = g;
var G__32574 = h;
var G__32575 = i;
var G__32576 = j;
return (self__.afn.cljs$core$IFn$_invoke$arity$10 ? self__.afn.cljs$core$IFn$_invoke$arity$10(G__32567,G__32568,G__32569,G__32570,G__32571,G__32572,G__32573,G__32574,G__32575,G__32576) : self__.afn.call(null,G__32567,G__32568,G__32569,G__32570,G__32571,G__32572,G__32573,G__32574,G__32575,G__32576));
});
var G__32986__12 = (function (self__,a,b,c,d,e,f,g,h,i,j,k){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__32577 = a;
var G__32578 = b;
var G__32579 = c;
var G__32580 = d;
var G__32581 = e;
var G__32582 = f;
var G__32583 = g;
var G__32584 = h;
var G__32585 = i;
var G__32586 = j;
var G__32587 = k;
return (self__.afn.cljs$core$IFn$_invoke$arity$11 ? self__.afn.cljs$core$IFn$_invoke$arity$11(G__32577,G__32578,G__32579,G__32580,G__32581,G__32582,G__32583,G__32584,G__32585,G__32586,G__32587) : self__.afn.call(null,G__32577,G__32578,G__32579,G__32580,G__32581,G__32582,G__32583,G__32584,G__32585,G__32586,G__32587));
});
var G__32986__13 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__32588 = a;
var G__32589 = b;
var G__32590 = c;
var G__32591 = d;
var G__32592 = e;
var G__32593 = f;
var G__32594 = g;
var G__32595 = h;
var G__32596 = i;
var G__32597 = j;
var G__32598 = k;
var G__32599 = l;
return (self__.afn.cljs$core$IFn$_invoke$arity$12 ? self__.afn.cljs$core$IFn$_invoke$arity$12(G__32588,G__32589,G__32590,G__32591,G__32592,G__32593,G__32594,G__32595,G__32596,G__32597,G__32598,G__32599) : self__.afn.call(null,G__32588,G__32589,G__32590,G__32591,G__32592,G__32593,G__32594,G__32595,G__32596,G__32597,G__32598,G__32599));
});
var G__32986__14 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__32600 = a;
var G__32601 = b;
var G__32602 = c;
var G__32603 = d;
var G__32604 = e;
var G__32605 = f;
var G__32606 = g;
var G__32607 = h;
var G__32608 = i;
var G__32609 = j;
var G__32610 = k;
var G__32611 = l;
var G__32612 = m;
return (self__.afn.cljs$core$IFn$_invoke$arity$13 ? self__.afn.cljs$core$IFn$_invoke$arity$13(G__32600,G__32601,G__32602,G__32603,G__32604,G__32605,G__32606,G__32607,G__32608,G__32609,G__32610,G__32611,G__32612) : self__.afn.call(null,G__32600,G__32601,G__32602,G__32603,G__32604,G__32605,G__32606,G__32607,G__32608,G__32609,G__32610,G__32611,G__32612));
});
var G__32986__15 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__32613 = a;
var G__32614 = b;
var G__32615 = c;
var G__32616 = d;
var G__32617 = e;
var G__32618 = f;
var G__32619 = g;
var G__32620 = h;
var G__32621 = i;
var G__32622 = j;
var G__32623 = k;
var G__32624 = l;
var G__32625 = m;
var G__32626 = n;
return (self__.afn.cljs$core$IFn$_invoke$arity$14 ? self__.afn.cljs$core$IFn$_invoke$arity$14(G__32613,G__32614,G__32615,G__32616,G__32617,G__32618,G__32619,G__32620,G__32621,G__32622,G__32623,G__32624,G__32625,G__32626) : self__.afn.call(null,G__32613,G__32614,G__32615,G__32616,G__32617,G__32618,G__32619,G__32620,G__32621,G__32622,G__32623,G__32624,G__32625,G__32626));
});
var G__32986__16 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__32627 = a;
var G__32628 = b;
var G__32629 = c;
var G__32630 = d;
var G__32631 = e;
var G__32632 = f;
var G__32633 = g;
var G__32634 = h;
var G__32635 = i;
var G__32636 = j;
var G__32637 = k;
var G__32638 = l;
var G__32639 = m;
var G__32640 = n;
var G__32641 = o;
return (self__.afn.cljs$core$IFn$_invoke$arity$15 ? self__.afn.cljs$core$IFn$_invoke$arity$15(G__32627,G__32628,G__32629,G__32630,G__32631,G__32632,G__32633,G__32634,G__32635,G__32636,G__32637,G__32638,G__32639,G__32640,G__32641) : self__.afn.call(null,G__32627,G__32628,G__32629,G__32630,G__32631,G__32632,G__32633,G__32634,G__32635,G__32636,G__32637,G__32638,G__32639,G__32640,G__32641));
});
var G__32986__17 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__32642 = a;
var G__32643 = b;
var G__32644 = c;
var G__32645 = d;
var G__32646 = e;
var G__32647 = f;
var G__32648 = g;
var G__32649 = h;
var G__32650 = i;
var G__32651 = j;
var G__32652 = k;
var G__32653 = l;
var G__32654 = m;
var G__32655 = n;
var G__32656 = o;
var G__32657 = p;
return (self__.afn.cljs$core$IFn$_invoke$arity$16 ? self__.afn.cljs$core$IFn$_invoke$arity$16(G__32642,G__32643,G__32644,G__32645,G__32646,G__32647,G__32648,G__32649,G__32650,G__32651,G__32652,G__32653,G__32654,G__32655,G__32656,G__32657) : self__.afn.call(null,G__32642,G__32643,G__32644,G__32645,G__32646,G__32647,G__32648,G__32649,G__32650,G__32651,G__32652,G__32653,G__32654,G__32655,G__32656,G__32657));
});
var G__32986__18 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__32658 = a;
var G__32659 = b;
var G__32660 = c;
var G__32661 = d;
var G__32662 = e;
var G__32663 = f;
var G__32664 = g;
var G__32665 = h;
var G__32666 = i;
var G__32667 = j;
var G__32668 = k;
var G__32669 = l;
var G__32670 = m;
var G__32671 = n;
var G__32672 = o;
var G__32673 = p;
var G__32674 = q;
return (self__.afn.cljs$core$IFn$_invoke$arity$17 ? self__.afn.cljs$core$IFn$_invoke$arity$17(G__32658,G__32659,G__32660,G__32661,G__32662,G__32663,G__32664,G__32665,G__32666,G__32667,G__32668,G__32669,G__32670,G__32671,G__32672,G__32673,G__32674) : self__.afn.call(null,G__32658,G__32659,G__32660,G__32661,G__32662,G__32663,G__32664,G__32665,G__32666,G__32667,G__32668,G__32669,G__32670,G__32671,G__32672,G__32673,G__32674));
});
var G__32986__19 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__32675 = a;
var G__32676 = b;
var G__32677 = c;
var G__32678 = d;
var G__32679 = e;
var G__32680 = f;
var G__32681 = g;
var G__32682 = h;
var G__32683 = i;
var G__32684 = j;
var G__32685 = k;
var G__32686 = l;
var G__32687 = m;
var G__32688 = n;
var G__32689 = o;
var G__32690 = p;
var G__32691 = q;
var G__32692 = r;
return (self__.afn.cljs$core$IFn$_invoke$arity$18 ? self__.afn.cljs$core$IFn$_invoke$arity$18(G__32675,G__32676,G__32677,G__32678,G__32679,G__32680,G__32681,G__32682,G__32683,G__32684,G__32685,G__32686,G__32687,G__32688,G__32689,G__32690,G__32691,G__32692) : self__.afn.call(null,G__32675,G__32676,G__32677,G__32678,G__32679,G__32680,G__32681,G__32682,G__32683,G__32684,G__32685,G__32686,G__32687,G__32688,G__32689,G__32690,G__32691,G__32692));
});
var G__32986__20 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__32693 = a;
var G__32694 = b;
var G__32695 = c;
var G__32696 = d;
var G__32697 = e;
var G__32698 = f;
var G__32699 = g;
var G__32700 = h;
var G__32701 = i;
var G__32702 = j;
var G__32703 = k;
var G__32704 = l;
var G__32705 = m;
var G__32706 = n;
var G__32707 = o;
var G__32708 = p;
var G__32709 = q;
var G__32710 = r;
var G__32711 = s;
return (self__.afn.cljs$core$IFn$_invoke$arity$19 ? self__.afn.cljs$core$IFn$_invoke$arity$19(G__32693,G__32694,G__32695,G__32696,G__32697,G__32698,G__32699,G__32700,G__32701,G__32702,G__32703,G__32704,G__32705,G__32706,G__32707,G__32708,G__32709,G__32710,G__32711) : self__.afn.call(null,G__32693,G__32694,G__32695,G__32696,G__32697,G__32698,G__32699,G__32700,G__32701,G__32702,G__32703,G__32704,G__32705,G__32706,G__32707,G__32708,G__32709,G__32710,G__32711));
});
var G__32986__21 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__32712 = a;
var G__32713 = b;
var G__32714 = c;
var G__32715 = d;
var G__32716 = e;
var G__32717 = f;
var G__32718 = g;
var G__32719 = h;
var G__32720 = i;
var G__32721 = j;
var G__32722 = k;
var G__32723 = l;
var G__32724 = m;
var G__32725 = n;
var G__32726 = o;
var G__32727 = p;
var G__32728 = q;
var G__32729 = r;
var G__32730 = s;
var G__32731 = t;
return (self__.afn.cljs$core$IFn$_invoke$arity$20 ? self__.afn.cljs$core$IFn$_invoke$arity$20(G__32712,G__32713,G__32714,G__32715,G__32716,G__32717,G__32718,G__32719,G__32720,G__32721,G__32722,G__32723,G__32724,G__32725,G__32726,G__32727,G__32728,G__32729,G__32730,G__32731) : self__.afn.call(null,G__32712,G__32713,G__32714,G__32715,G__32716,G__32717,G__32718,G__32719,G__32720,G__32721,G__32722,G__32723,G__32724,G__32725,G__32726,G__32727,G__32728,G__32729,G__32730,G__32731));
});
var G__32986__22 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__32732 = self__.afn;
var G__32733 = a;
var G__32734 = b;
var G__32735 = c;
var G__32736 = d;
var G__32737 = e;
var G__32738 = f;
var G__32739 = g;
var G__32740 = h;
var G__32741 = i;
var G__32742 = j;
var G__32743 = k;
var G__32744 = l;
var G__32745 = m;
var G__32746 = n;
var G__32747 = o;
var G__32748 = p;
var G__32749 = q;
var G__32750 = r;
var G__32751 = s;
var G__32752 = t;
var G__32753 = rest;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$22 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$22(G__32732,G__32733,G__32734,G__32735,G__32736,G__32737,G__32738,G__32739,G__32740,G__32741,G__32742,G__32743,G__32744,G__32745,G__32746,G__32747,G__32748,G__32749,G__32750,G__32751,G__32752,G__32753) : cljs.core.apply.call(null,G__32732,G__32733,G__32734,G__32735,G__32736,G__32737,G__32738,G__32739,G__32740,G__32741,G__32742,G__32743,G__32744,G__32745,G__32746,G__32747,G__32748,G__32749,G__32750,G__32751,G__32752,G__32753));
});
G__32986 = function(self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
switch(arguments.length){
case 1:
return G__32986__1.call(this,self__);
case 2:
return G__32986__2.call(this,self__,a);
case 3:
return G__32986__3.call(this,self__,a,b);
case 4:
return G__32986__4.call(this,self__,a,b,c);
case 5:
return G__32986__5.call(this,self__,a,b,c,d);
case 6:
return G__32986__6.call(this,self__,a,b,c,d,e);
case 7:
return G__32986__7.call(this,self__,a,b,c,d,e,f);
case 8:
return G__32986__8.call(this,self__,a,b,c,d,e,f,g);
case 9:
return G__32986__9.call(this,self__,a,b,c,d,e,f,g,h);
case 10:
return G__32986__10.call(this,self__,a,b,c,d,e,f,g,h,i);
case 11:
return G__32986__11.call(this,self__,a,b,c,d,e,f,g,h,i,j);
case 12:
return G__32986__12.call(this,self__,a,b,c,d,e,f,g,h,i,j,k);
case 13:
return G__32986__13.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l);
case 14:
return G__32986__14.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m);
case 15:
return G__32986__15.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
case 16:
return G__32986__16.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
case 17:
return G__32986__17.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
case 18:
return G__32986__18.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
case 19:
return G__32986__19.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
case 20:
return G__32986__20.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
case 21:
return G__32986__21.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
case 22:
return G__32986__22.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__32986.cljs$core$IFn$_invoke$arity$1 = G__32986__1;
G__32986.cljs$core$IFn$_invoke$arity$2 = G__32986__2;
G__32986.cljs$core$IFn$_invoke$arity$3 = G__32986__3;
G__32986.cljs$core$IFn$_invoke$arity$4 = G__32986__4;
G__32986.cljs$core$IFn$_invoke$arity$5 = G__32986__5;
G__32986.cljs$core$IFn$_invoke$arity$6 = G__32986__6;
G__32986.cljs$core$IFn$_invoke$arity$7 = G__32986__7;
G__32986.cljs$core$IFn$_invoke$arity$8 = G__32986__8;
G__32986.cljs$core$IFn$_invoke$arity$9 = G__32986__9;
G__32986.cljs$core$IFn$_invoke$arity$10 = G__32986__10;
G__32986.cljs$core$IFn$_invoke$arity$11 = G__32986__11;
G__32986.cljs$core$IFn$_invoke$arity$12 = G__32986__12;
G__32986.cljs$core$IFn$_invoke$arity$13 = G__32986__13;
G__32986.cljs$core$IFn$_invoke$arity$14 = G__32986__14;
G__32986.cljs$core$IFn$_invoke$arity$15 = G__32986__15;
G__32986.cljs$core$IFn$_invoke$arity$16 = G__32986__16;
G__32986.cljs$core$IFn$_invoke$arity$17 = G__32986__17;
G__32986.cljs$core$IFn$_invoke$arity$18 = G__32986__18;
G__32986.cljs$core$IFn$_invoke$arity$19 = G__32986__19;
G__32986.cljs$core$IFn$_invoke$arity$20 = G__32986__20;
G__32986.cljs$core$IFn$_invoke$arity$21 = G__32986__21;
G__32986.cljs$core$IFn$_invoke$arity$22 = G__32986__22;
return G__32986;
})()
;

cljs.core.MetaFn.prototype.apply = (function (self__,args32521){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args32521)));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$0 = (function (){
var self__ = this;
var _ = this;
return (self__.afn.cljs$core$IFn$_invoke$arity$0 ? self__.afn.cljs$core$IFn$_invoke$arity$0() : self__.afn.call(null));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$1 = (function (a){
var self__ = this;
var _ = this;
var G__32754 = a;
return (self__.afn.cljs$core$IFn$_invoke$arity$1 ? self__.afn.cljs$core$IFn$_invoke$arity$1(G__32754) : self__.afn.call(null,G__32754));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$2 = (function (a,b){
var self__ = this;
var _ = this;
var G__32755 = a;
var G__32756 = b;
return (self__.afn.cljs$core$IFn$_invoke$arity$2 ? self__.afn.cljs$core$IFn$_invoke$arity$2(G__32755,G__32756) : self__.afn.call(null,G__32755,G__32756));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$3 = (function (a,b,c){
var self__ = this;
var _ = this;
var G__32757 = a;
var G__32758 = b;
var G__32759 = c;
return (self__.afn.cljs$core$IFn$_invoke$arity$3 ? self__.afn.cljs$core$IFn$_invoke$arity$3(G__32757,G__32758,G__32759) : self__.afn.call(null,G__32757,G__32758,G__32759));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$4 = (function (a,b,c,d){
var self__ = this;
var _ = this;
var G__32760 = a;
var G__32761 = b;
var G__32762 = c;
var G__32763 = d;
return (self__.afn.cljs$core$IFn$_invoke$arity$4 ? self__.afn.cljs$core$IFn$_invoke$arity$4(G__32760,G__32761,G__32762,G__32763) : self__.afn.call(null,G__32760,G__32761,G__32762,G__32763));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$5 = (function (a,b,c,d,e){
var self__ = this;
var _ = this;
var G__32764 = a;
var G__32765 = b;
var G__32766 = c;
var G__32767 = d;
var G__32768 = e;
return (self__.afn.cljs$core$IFn$_invoke$arity$5 ? self__.afn.cljs$core$IFn$_invoke$arity$5(G__32764,G__32765,G__32766,G__32767,G__32768) : self__.afn.call(null,G__32764,G__32765,G__32766,G__32767,G__32768));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$6 = (function (a,b,c,d,e,f){
var self__ = this;
var _ = this;
var G__32769 = a;
var G__32770 = b;
var G__32771 = c;
var G__32772 = d;
var G__32773 = e;
var G__32774 = f;
return (self__.afn.cljs$core$IFn$_invoke$arity$6 ? self__.afn.cljs$core$IFn$_invoke$arity$6(G__32769,G__32770,G__32771,G__32772,G__32773,G__32774) : self__.afn.call(null,G__32769,G__32770,G__32771,G__32772,G__32773,G__32774));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$7 = (function (a,b,c,d,e,f,g){
var self__ = this;
var _ = this;
var G__32775 = a;
var G__32776 = b;
var G__32777 = c;
var G__32778 = d;
var G__32779 = e;
var G__32780 = f;
var G__32781 = g;
return (self__.afn.cljs$core$IFn$_invoke$arity$7 ? self__.afn.cljs$core$IFn$_invoke$arity$7(G__32775,G__32776,G__32777,G__32778,G__32779,G__32780,G__32781) : self__.afn.call(null,G__32775,G__32776,G__32777,G__32778,G__32779,G__32780,G__32781));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$8 = (function (a,b,c,d,e,f,g,h){
var self__ = this;
var _ = this;
var G__32782 = a;
var G__32783 = b;
var G__32784 = c;
var G__32785 = d;
var G__32786 = e;
var G__32787 = f;
var G__32788 = g;
var G__32789 = h;
return (self__.afn.cljs$core$IFn$_invoke$arity$8 ? self__.afn.cljs$core$IFn$_invoke$arity$8(G__32782,G__32783,G__32784,G__32785,G__32786,G__32787,G__32788,G__32789) : self__.afn.call(null,G__32782,G__32783,G__32784,G__32785,G__32786,G__32787,G__32788,G__32789));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$9 = (function (a,b,c,d,e,f,g,h,i){
var self__ = this;
var _ = this;
var G__32790 = a;
var G__32791 = b;
var G__32792 = c;
var G__32793 = d;
var G__32794 = e;
var G__32795 = f;
var G__32796 = g;
var G__32797 = h;
var G__32798 = i;
return (self__.afn.cljs$core$IFn$_invoke$arity$9 ? self__.afn.cljs$core$IFn$_invoke$arity$9(G__32790,G__32791,G__32792,G__32793,G__32794,G__32795,G__32796,G__32797,G__32798) : self__.afn.call(null,G__32790,G__32791,G__32792,G__32793,G__32794,G__32795,G__32796,G__32797,G__32798));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$10 = (function (a,b,c,d,e,f,g,h,i,j){
var self__ = this;
var _ = this;
var G__32799 = a;
var G__32800 = b;
var G__32801 = c;
var G__32802 = d;
var G__32803 = e;
var G__32804 = f;
var G__32805 = g;
var G__32806 = h;
var G__32807 = i;
var G__32808 = j;
return (self__.afn.cljs$core$IFn$_invoke$arity$10 ? self__.afn.cljs$core$IFn$_invoke$arity$10(G__32799,G__32800,G__32801,G__32802,G__32803,G__32804,G__32805,G__32806,G__32807,G__32808) : self__.afn.call(null,G__32799,G__32800,G__32801,G__32802,G__32803,G__32804,G__32805,G__32806,G__32807,G__32808));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$11 = (function (a,b,c,d,e,f,g,h,i,j,k){
var self__ = this;
var _ = this;
var G__32809 = a;
var G__32810 = b;
var G__32811 = c;
var G__32812 = d;
var G__32813 = e;
var G__32814 = f;
var G__32815 = g;
var G__32816 = h;
var G__32817 = i;
var G__32818 = j;
var G__32819 = k;
return (self__.afn.cljs$core$IFn$_invoke$arity$11 ? self__.afn.cljs$core$IFn$_invoke$arity$11(G__32809,G__32810,G__32811,G__32812,G__32813,G__32814,G__32815,G__32816,G__32817,G__32818,G__32819) : self__.afn.call(null,G__32809,G__32810,G__32811,G__32812,G__32813,G__32814,G__32815,G__32816,G__32817,G__32818,G__32819));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$12 = (function (a,b,c,d,e,f,g,h,i,j,k,l){
var self__ = this;
var _ = this;
var G__32820 = a;
var G__32821 = b;
var G__32822 = c;
var G__32823 = d;
var G__32824 = e;
var G__32825 = f;
var G__32826 = g;
var G__32827 = h;
var G__32828 = i;
var G__32829 = j;
var G__32830 = k;
var G__32831 = l;
return (self__.afn.cljs$core$IFn$_invoke$arity$12 ? self__.afn.cljs$core$IFn$_invoke$arity$12(G__32820,G__32821,G__32822,G__32823,G__32824,G__32825,G__32826,G__32827,G__32828,G__32829,G__32830,G__32831) : self__.afn.call(null,G__32820,G__32821,G__32822,G__32823,G__32824,G__32825,G__32826,G__32827,G__32828,G__32829,G__32830,G__32831));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$13 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m){
var self__ = this;
var _ = this;
var G__32832 = a;
var G__32833 = b;
var G__32834 = c;
var G__32835 = d;
var G__32836 = e;
var G__32837 = f;
var G__32838 = g;
var G__32839 = h;
var G__32840 = i;
var G__32841 = j;
var G__32842 = k;
var G__32843 = l;
var G__32844 = m;
return (self__.afn.cljs$core$IFn$_invoke$arity$13 ? self__.afn.cljs$core$IFn$_invoke$arity$13(G__32832,G__32833,G__32834,G__32835,G__32836,G__32837,G__32838,G__32839,G__32840,G__32841,G__32842,G__32843,G__32844) : self__.afn.call(null,G__32832,G__32833,G__32834,G__32835,G__32836,G__32837,G__32838,G__32839,G__32840,G__32841,G__32842,G__32843,G__32844));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$14 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n){
var self__ = this;
var _ = this;
var G__32845 = a;
var G__32846 = b;
var G__32847 = c;
var G__32848 = d;
var G__32849 = e;
var G__32850 = f;
var G__32851 = g;
var G__32852 = h;
var G__32853 = i;
var G__32854 = j;
var G__32855 = k;
var G__32856 = l;
var G__32857 = m;
var G__32858 = n;
return (self__.afn.cljs$core$IFn$_invoke$arity$14 ? self__.afn.cljs$core$IFn$_invoke$arity$14(G__32845,G__32846,G__32847,G__32848,G__32849,G__32850,G__32851,G__32852,G__32853,G__32854,G__32855,G__32856,G__32857,G__32858) : self__.afn.call(null,G__32845,G__32846,G__32847,G__32848,G__32849,G__32850,G__32851,G__32852,G__32853,G__32854,G__32855,G__32856,G__32857,G__32858));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$15 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
var self__ = this;
var _ = this;
var G__32859 = a;
var G__32860 = b;
var G__32861 = c;
var G__32862 = d;
var G__32863 = e;
var G__32864 = f;
var G__32865 = g;
var G__32866 = h;
var G__32867 = i;
var G__32868 = j;
var G__32869 = k;
var G__32870 = l;
var G__32871 = m;
var G__32872 = n;
var G__32873 = o;
return (self__.afn.cljs$core$IFn$_invoke$arity$15 ? self__.afn.cljs$core$IFn$_invoke$arity$15(G__32859,G__32860,G__32861,G__32862,G__32863,G__32864,G__32865,G__32866,G__32867,G__32868,G__32869,G__32870,G__32871,G__32872,G__32873) : self__.afn.call(null,G__32859,G__32860,G__32861,G__32862,G__32863,G__32864,G__32865,G__32866,G__32867,G__32868,G__32869,G__32870,G__32871,G__32872,G__32873));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$16 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
var self__ = this;
var _ = this;
var G__32874 = a;
var G__32875 = b;
var G__32876 = c;
var G__32877 = d;
var G__32878 = e;
var G__32879 = f;
var G__32880 = g;
var G__32881 = h;
var G__32882 = i;
var G__32883 = j;
var G__32884 = k;
var G__32885 = l;
var G__32886 = m;
var G__32887 = n;
var G__32888 = o;
var G__32889 = p;
return (self__.afn.cljs$core$IFn$_invoke$arity$16 ? self__.afn.cljs$core$IFn$_invoke$arity$16(G__32874,G__32875,G__32876,G__32877,G__32878,G__32879,G__32880,G__32881,G__32882,G__32883,G__32884,G__32885,G__32886,G__32887,G__32888,G__32889) : self__.afn.call(null,G__32874,G__32875,G__32876,G__32877,G__32878,G__32879,G__32880,G__32881,G__32882,G__32883,G__32884,G__32885,G__32886,G__32887,G__32888,G__32889));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$17 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
var self__ = this;
var _ = this;
var G__32890 = a;
var G__32891 = b;
var G__32892 = c;
var G__32893 = d;
var G__32894 = e;
var G__32895 = f;
var G__32896 = g;
var G__32897 = h;
var G__32898 = i;
var G__32899 = j;
var G__32900 = k;
var G__32901 = l;
var G__32902 = m;
var G__32903 = n;
var G__32904 = o;
var G__32905 = p;
var G__32906 = q;
return (self__.afn.cljs$core$IFn$_invoke$arity$17 ? self__.afn.cljs$core$IFn$_invoke$arity$17(G__32890,G__32891,G__32892,G__32893,G__32894,G__32895,G__32896,G__32897,G__32898,G__32899,G__32900,G__32901,G__32902,G__32903,G__32904,G__32905,G__32906) : self__.afn.call(null,G__32890,G__32891,G__32892,G__32893,G__32894,G__32895,G__32896,G__32897,G__32898,G__32899,G__32900,G__32901,G__32902,G__32903,G__32904,G__32905,G__32906));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$18 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
var self__ = this;
var _ = this;
var G__32907 = a;
var G__32908 = b;
var G__32909 = c;
var G__32910 = d;
var G__32911 = e;
var G__32912 = f;
var G__32913 = g;
var G__32914 = h;
var G__32915 = i;
var G__32916 = j;
var G__32917 = k;
var G__32918 = l;
var G__32919 = m;
var G__32920 = n;
var G__32921 = o;
var G__32922 = p;
var G__32923 = q;
var G__32924 = r;
return (self__.afn.cljs$core$IFn$_invoke$arity$18 ? self__.afn.cljs$core$IFn$_invoke$arity$18(G__32907,G__32908,G__32909,G__32910,G__32911,G__32912,G__32913,G__32914,G__32915,G__32916,G__32917,G__32918,G__32919,G__32920,G__32921,G__32922,G__32923,G__32924) : self__.afn.call(null,G__32907,G__32908,G__32909,G__32910,G__32911,G__32912,G__32913,G__32914,G__32915,G__32916,G__32917,G__32918,G__32919,G__32920,G__32921,G__32922,G__32923,G__32924));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$19 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
var self__ = this;
var _ = this;
var G__32925 = a;
var G__32926 = b;
var G__32927 = c;
var G__32928 = d;
var G__32929 = e;
var G__32930 = f;
var G__32931 = g;
var G__32932 = h;
var G__32933 = i;
var G__32934 = j;
var G__32935 = k;
var G__32936 = l;
var G__32937 = m;
var G__32938 = n;
var G__32939 = o;
var G__32940 = p;
var G__32941 = q;
var G__32942 = r;
var G__32943 = s;
return (self__.afn.cljs$core$IFn$_invoke$arity$19 ? self__.afn.cljs$core$IFn$_invoke$arity$19(G__32925,G__32926,G__32927,G__32928,G__32929,G__32930,G__32931,G__32932,G__32933,G__32934,G__32935,G__32936,G__32937,G__32938,G__32939,G__32940,G__32941,G__32942,G__32943) : self__.afn.call(null,G__32925,G__32926,G__32927,G__32928,G__32929,G__32930,G__32931,G__32932,G__32933,G__32934,G__32935,G__32936,G__32937,G__32938,G__32939,G__32940,G__32941,G__32942,G__32943));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$20 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
var self__ = this;
var _ = this;
var G__32944 = a;
var G__32945 = b;
var G__32946 = c;
var G__32947 = d;
var G__32948 = e;
var G__32949 = f;
var G__32950 = g;
var G__32951 = h;
var G__32952 = i;
var G__32953 = j;
var G__32954 = k;
var G__32955 = l;
var G__32956 = m;
var G__32957 = n;
var G__32958 = o;
var G__32959 = p;
var G__32960 = q;
var G__32961 = r;
var G__32962 = s;
var G__32963 = t;
return (self__.afn.cljs$core$IFn$_invoke$arity$20 ? self__.afn.cljs$core$IFn$_invoke$arity$20(G__32944,G__32945,G__32946,G__32947,G__32948,G__32949,G__32950,G__32951,G__32952,G__32953,G__32954,G__32955,G__32956,G__32957,G__32958,G__32959,G__32960,G__32961,G__32962,G__32963) : self__.afn.call(null,G__32944,G__32945,G__32946,G__32947,G__32948,G__32949,G__32950,G__32951,G__32952,G__32953,G__32954,G__32955,G__32956,G__32957,G__32958,G__32959,G__32960,G__32961,G__32962,G__32963));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$21 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
var self__ = this;
var _ = this;
var G__32964 = self__.afn;
var G__32965 = a;
var G__32966 = b;
var G__32967 = c;
var G__32968 = d;
var G__32969 = e;
var G__32970 = f;
var G__32971 = g;
var G__32972 = h;
var G__32973 = i;
var G__32974 = j;
var G__32975 = k;
var G__32976 = l;
var G__32977 = m;
var G__32978 = n;
var G__32979 = o;
var G__32980 = p;
var G__32981 = q;
var G__32982 = r;
var G__32983 = s;
var G__32984 = t;
var G__32985 = rest;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$22 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$22(G__32964,G__32965,G__32966,G__32967,G__32968,G__32969,G__32970,G__32971,G__32972,G__32973,G__32974,G__32975,G__32976,G__32977,G__32978,G__32979,G__32980,G__32981,G__32982,G__32983,G__32984,G__32985) : cljs.core.apply.call(null,G__32964,G__32965,G__32966,G__32967,G__32968,G__32969,G__32970,G__32971,G__32972,G__32973,G__32974,G__32975,G__32976,G__32977,G__32978,G__32979,G__32980,G__32981,G__32982,G__32983,G__32984,G__32985));
});

cljs.core.MetaFn.prototype.cljs$core$Fn$ = true;

cljs.core.MetaFn.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (_,new_meta){
var self__ = this;
var ___$1 = this;
return (new cljs.core.MetaFn(self__.afn,new_meta));
});

cljs.core.MetaFn.prototype.cljs$core$IMeta$_meta$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.meta;
});

cljs.core.MetaFn.cljs$lang$type = true;

cljs.core.MetaFn.cljs$lang$ctorStr = "cljs.core/MetaFn";

cljs.core.MetaFn.cljs$lang$ctorPrWriter = (function (this__24859__auto__,writer__24860__auto__,opt__24861__auto__){
return cljs.core._write(writer__24860__auto__,"cljs.core/MetaFn");
});

cljs.core.__GT_MetaFn = (function __GT_MetaFn(afn,meta){
return (new cljs.core.MetaFn(afn,meta));
});

/**
* Returns an object of the same type and value as obj, with
* map m as its metadata.
*/
cljs.core.with_meta = (function with_meta(o,meta){
if((cljs.core.fn_QMARK_(o)) && (!((function (){var G__32990 = o;
if(G__32990){
var bit__24953__auto__ = (G__32990.cljs$lang$protocol_mask$partition0$ & (262144));
if((bit__24953__auto__) || (G__32990.cljs$core$IWithMeta$)){
return true;
} else {
if((!G__32990.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IWithMeta,G__32990);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IWithMeta,G__32990);
}
})()))){
return (new cljs.core.MetaFn(o,meta));
} else {
if((o == null)){
return null;
} else {
return cljs.core._with_meta(o,meta);
}
}
});
/**
* Returns the metadata of obj, returns nil if there is no metadata.
*/
cljs.core.meta = (function meta(o){
if((function (){var and__24260__auto__ = !((o == null));
if(and__24260__auto__){
var G__32994 = o;
if(G__32994){
var bit__24953__auto__ = (G__32994.cljs$lang$protocol_mask$partition0$ & (131072));
if((bit__24953__auto__) || (G__32994.cljs$core$IMeta$)){
return true;
} else {
if((!G__32994.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IMeta,G__32994);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IMeta,G__32994);
}
} else {
return and__24260__auto__;
}
})()){
return cljs.core._meta(o);
} else {
return null;
}
});
/**
* For a list or queue, same as first, for a vector, same as, but much
* more efficient than, last. If the collection is empty, returns nil.
*/
cljs.core.peek = (function peek(coll){
if((coll == null)){
return null;
} else {
return cljs.core._peek(coll);
}
});
/**
* For a list or queue, returns a new list/queue without the first
* item, for a vector, returns a new vector without the last item.
* Note - not the same as next/butlast.
*/
cljs.core.pop = (function pop(coll){
if((coll == null)){
return null;
} else {
return cljs.core._pop(coll);
}
});
/**
* disj[oin]. Returns a new set of the same (hashed/sorted) type, that
* does not contain key(s).
* @param {...*} var_args
*/
cljs.core.disj = (function() {
var disj = null;
var disj__1 = (function (coll){
return coll;
});
var disj__2 = (function (coll,k){
if((coll == null)){
return null;
} else {
return cljs.core._disjoin(coll,k);
}
});
var disj__3 = (function() { 
var G__32997__delegate = function (coll,k,ks){
while(true){
if((coll == null)){
return null;
} else {
var ret = disj.cljs$core$IFn$_invoke$arity$2(coll,k);
if(cljs.core.truth_(ks)){
var G__32998 = ret;
var G__32999 = cljs.core.first(ks);
var G__33000 = cljs.core.next(ks);
coll = G__32998;
k = G__32999;
ks = G__33000;
continue;
} else {
return ret;
}
}
break;
}
};
var G__32997 = function (coll,k,var_args){
var ks = null;
if (arguments.length > 2) {
var G__33001__i = 0, G__33001__a = new Array(arguments.length -  2);
while (G__33001__i < G__33001__a.length) {G__33001__a[G__33001__i] = arguments[G__33001__i + 2]; ++G__33001__i;}
  ks = new cljs.core.IndexedSeq(G__33001__a,0);
} 
return G__32997__delegate.call(this,coll,k,ks);};
G__32997.cljs$lang$maxFixedArity = 2;
G__32997.cljs$lang$applyTo = (function (arglist__33002){
var coll = cljs.core.first(arglist__33002);
arglist__33002 = cljs.core.next(arglist__33002);
var k = cljs.core.first(arglist__33002);
var ks = cljs.core.rest(arglist__33002);
return G__32997__delegate(coll,k,ks);
});
G__32997.cljs$core$IFn$_invoke$arity$variadic = G__32997__delegate;
return G__32997;
})()
;
disj = function(coll,k,var_args){
var ks = var_args;
switch(arguments.length){
case 1:
return disj__1.call(this,coll);
case 2:
return disj__2.call(this,coll,k);
default:
var G__33003 = null;
if (arguments.length > 2) {
var G__33004__i = 0, G__33004__a = new Array(arguments.length -  2);
while (G__33004__i < G__33004__a.length) {G__33004__a[G__33004__i] = arguments[G__33004__i + 2]; ++G__33004__i;}
G__33003 = new cljs.core.IndexedSeq(G__33004__a,0);
}
return disj__3.cljs$core$IFn$_invoke$arity$variadic(coll,k, G__33003);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
disj.cljs$lang$maxFixedArity = 2;
disj.cljs$lang$applyTo = disj__3.cljs$lang$applyTo;
disj.cljs$core$IFn$_invoke$arity$1 = disj__1;
disj.cljs$core$IFn$_invoke$arity$2 = disj__2;
disj.cljs$core$IFn$_invoke$arity$variadic = disj__3.cljs$core$IFn$_invoke$arity$variadic;
return disj;
})()
;
/**
* Returns true if coll has no items - same as (not (seq coll)).
* Please use the idiom (seq x) rather than (not (empty? x))
*/
cljs.core.empty_QMARK_ = (function empty_QMARK_(coll){
return ((coll == null)) || (cljs.core.not(cljs.core.seq(coll)));
});
/**
* Returns true if x satisfies ICollection
*/
cljs.core.coll_QMARK_ = (function coll_QMARK_(x){
if((x == null)){
return false;
} else {
var G__33006 = x;
if(G__33006){
var bit__24953__auto__ = (G__33006.cljs$lang$protocol_mask$partition0$ & (8));
if((bit__24953__auto__) || (G__33006.cljs$core$ICollection$)){
return true;
} else {
if((!G__33006.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ICollection,G__33006);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ICollection,G__33006);
}
}
});
/**
* Returns true if x satisfies ISet
*/
cljs.core.set_QMARK_ = (function set_QMARK_(x){
if((x == null)){
return false;
} else {
var G__33008 = x;
if(G__33008){
var bit__24953__auto__ = (G__33008.cljs$lang$protocol_mask$partition0$ & (4096));
if((bit__24953__auto__) || (G__33008.cljs$core$ISet$)){
return true;
} else {
if((!G__33008.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISet,G__33008);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISet,G__33008);
}
}
});
/**
* Returns true if coll implements Associative
*/
cljs.core.associative_QMARK_ = (function associative_QMARK_(x){
var G__33010 = x;
if(G__33010){
var bit__24953__auto__ = (G__33010.cljs$lang$protocol_mask$partition0$ & (512));
if((bit__24953__auto__) || (G__33010.cljs$core$IAssociative$)){
return true;
} else {
if((!G__33010.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IAssociative,G__33010);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IAssociative,G__33010);
}
});
/**
* Returns true if coll satisfies ISequential
*/
cljs.core.sequential_QMARK_ = (function sequential_QMARK_(x){
var G__33012 = x;
if(G__33012){
var bit__24953__auto__ = (G__33012.cljs$lang$protocol_mask$partition0$ & (16777216));
if((bit__24953__auto__) || (G__33012.cljs$core$ISequential$)){
return true;
} else {
if((!G__33012.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISequential,G__33012);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISequential,G__33012);
}
});
/**
* Returns true if coll satisfies ISorted
*/
cljs.core.sorted_QMARK_ = (function sorted_QMARK_(x){
var G__33014 = x;
if(G__33014){
var bit__24953__auto__ = (G__33014.cljs$lang$protocol_mask$partition0$ & (268435456));
if((bit__24953__auto__) || (G__33014.cljs$core$ISorted$)){
return true;
} else {
if((!G__33014.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISorted,G__33014);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISorted,G__33014);
}
});
/**
* Returns true if coll satisfies IReduce
*/
cljs.core.reduceable_QMARK_ = (function reduceable_QMARK_(x){
var G__33016 = x;
if(G__33016){
var bit__24953__auto__ = (G__33016.cljs$lang$protocol_mask$partition0$ & (524288));
if((bit__24953__auto__) || (G__33016.cljs$core$IReduce$)){
return true;
} else {
if((!G__33016.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IReduce,G__33016);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IReduce,G__33016);
}
});
/**
* Return true if x satisfies IMap
*/
cljs.core.map_QMARK_ = (function map_QMARK_(x){
if((x == null)){
return false;
} else {
var G__33018 = x;
if(G__33018){
var bit__24953__auto__ = (G__33018.cljs$lang$protocol_mask$partition0$ & (1024));
if((bit__24953__auto__) || (G__33018.cljs$core$IMap$)){
return true;
} else {
if((!G__33018.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IMap,G__33018);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IMap,G__33018);
}
}
});
/**
* Return true if x satisfies IVector
*/
cljs.core.vector_QMARK_ = (function vector_QMARK_(x){
var G__33020 = x;
if(G__33020){
var bit__24953__auto__ = (G__33020.cljs$lang$protocol_mask$partition0$ & (16384));
if((bit__24953__auto__) || (G__33020.cljs$core$IVector$)){
return true;
} else {
if((!G__33020.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IVector,G__33020);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IVector,G__33020);
}
});

cljs.core.chunked_seq_QMARK_ = (function chunked_seq_QMARK_(x){
var G__33022 = x;
if(G__33022){
var bit__24946__auto__ = (G__33022.cljs$lang$protocol_mask$partition1$ & (512));
if((bit__24946__auto__) || (G__33022.cljs$core$IChunkedSeq$)){
return true;
} else {
return false;
}
} else {
return false;
}
});
/**
* @param {...*} var_args
*/
cljs.core.js_obj = (function() {
var js_obj = null;
var js_obj__0 = (function (){
var obj33028 = {};
return obj33028;
});
var js_obj__1 = (function() { 
var G__33031__delegate = function (keyvals){
var G__33029 = goog.object.create;
var G__33030 = keyvals;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$2 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$2(G__33029,G__33030) : cljs.core.apply.call(null,G__33029,G__33030));
};
var G__33031 = function (var_args){
var keyvals = null;
if (arguments.length > 0) {
var G__33032__i = 0, G__33032__a = new Array(arguments.length -  0);
while (G__33032__i < G__33032__a.length) {G__33032__a[G__33032__i] = arguments[G__33032__i + 0]; ++G__33032__i;}
  keyvals = new cljs.core.IndexedSeq(G__33032__a,0);
} 
return G__33031__delegate.call(this,keyvals);};
G__33031.cljs$lang$maxFixedArity = 0;
G__33031.cljs$lang$applyTo = (function (arglist__33033){
var keyvals = cljs.core.seq(arglist__33033);
return G__33031__delegate(keyvals);
});
G__33031.cljs$core$IFn$_invoke$arity$variadic = G__33031__delegate;
return G__33031;
})()
;
js_obj = function(var_args){
var keyvals = var_args;
switch(arguments.length){
case 0:
return js_obj__0.call(this);
default:
var G__33034 = null;
if (arguments.length > 0) {
var G__33035__i = 0, G__33035__a = new Array(arguments.length -  0);
while (G__33035__i < G__33035__a.length) {G__33035__a[G__33035__i] = arguments[G__33035__i + 0]; ++G__33035__i;}
G__33034 = new cljs.core.IndexedSeq(G__33035__a,0);
}
return js_obj__1.cljs$core$IFn$_invoke$arity$variadic(G__33034);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
js_obj.cljs$lang$maxFixedArity = 0;
js_obj.cljs$lang$applyTo = js_obj__1.cljs$lang$applyTo;
js_obj.cljs$core$IFn$_invoke$arity$0 = js_obj__0;
js_obj.cljs$core$IFn$_invoke$arity$variadic = js_obj__1.cljs$core$IFn$_invoke$arity$variadic;
return js_obj;
})()
;
cljs.core.js_keys = (function js_keys(obj){
var keys = [];
var G__33038_33040 = obj;
var G__33039_33041 = ((function (G__33038_33040,keys){
return (function (val,key,obj__$1){
return keys.push(key);
});})(G__33038_33040,keys))
;
goog.object.forEach(G__33038_33040,G__33039_33041);

return keys;
});
cljs.core.js_delete = (function js_delete(obj,key){
return delete obj[key];
});
cljs.core.array_copy = (function array_copy(from,i,to,j,len){
var i__$1 = i;
var j__$1 = j;
var len__$1 = len;
while(true){
if((len__$1 === (0))){
return to;
} else {
(to[j__$1] = (from[i__$1]));

var G__33042 = (i__$1 + (1));
var G__33043 = (j__$1 + (1));
var G__33044 = (len__$1 - (1));
i__$1 = G__33042;
j__$1 = G__33043;
len__$1 = G__33044;
continue;
}
break;
}
});
cljs.core.array_copy_downward = (function array_copy_downward(from,i,to,j,len){
var i__$1 = (i + (len - (1)));
var j__$1 = (j + (len - (1)));
var len__$1 = len;
while(true){
if((len__$1 === (0))){
return to;
} else {
(to[j__$1] = (from[i__$1]));

var G__33045 = (i__$1 - (1));
var G__33046 = (j__$1 - (1));
var G__33047 = (len__$1 - (1));
i__$1 = G__33045;
j__$1 = G__33046;
len__$1 = G__33047;
continue;
}
break;
}
});
cljs.core.lookup_sentinel = (function (){var obj33049 = {};
return obj33049;
})();
/**
* Returns true if x is the value false, false otherwise.
*/
cljs.core.false_QMARK_ = (function false_QMARK_(x){
return x === false;
});
/**
* Returns true if x is the value true, false otherwise.
*/
cljs.core.true_QMARK_ = (function true_QMARK_(x){
return x === true;
});
cljs.core.undefined_QMARK_ = (function undefined_QMARK_(x){
return (void 0 === x);
});
/**
* Return true if s satisfies ISeq
*/
cljs.core.seq_QMARK_ = (function seq_QMARK_(s){
if((s == null)){
return false;
} else {
var G__33051 = s;
if(G__33051){
var bit__24953__auto__ = (G__33051.cljs$lang$protocol_mask$partition0$ & (64));
if((bit__24953__auto__) || (G__33051.cljs$core$ISeq$)){
return true;
} else {
if((!G__33051.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq,G__33051);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq,G__33051);
}
}
});
/**
* Return true if s satisfies ISeqable
*/
cljs.core.seqable_QMARK_ = (function seqable_QMARK_(s){
var G__33053 = s;
if(G__33053){
var bit__24953__auto__ = (G__33053.cljs$lang$protocol_mask$partition0$ & (8388608));
if((bit__24953__auto__) || (G__33053.cljs$core$ISeqable$)){
return true;
} else {
if((!G__33053.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeqable,G__33053);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeqable,G__33053);
}
});
cljs.core.boolean$ = (function boolean$(x){
if(cljs.core.truth_(x)){
return true;
} else {
return false;
}
});
cljs.core.ifn_QMARK_ = (function ifn_QMARK_(f){
var or__24272__auto__ = cljs.core.fn_QMARK_(f);
if(or__24272__auto__){
return or__24272__auto__;
} else {
var G__33057 = f;
if(G__33057){
var bit__24953__auto__ = (G__33057.cljs$lang$protocol_mask$partition0$ & (1));
if((bit__24953__auto__) || (G__33057.cljs$core$IFn$)){
return true;
} else {
if((!G__33057.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IFn,G__33057);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IFn,G__33057);
}
}
});
/**
* Returns true if n is an integer.
*/
cljs.core.integer_QMARK_ = (function integer_QMARK_(n){
return (typeof n === 'number') && (cljs.core.not((function (){var G__33070 = n;
return isNaN(G__33070);
})())) && (!((n === Infinity))) && (((function (){var G__33071 = n;
return parseFloat(G__33071);
})() === (function (){var G__33072 = n;
var G__33073 = (10);
return parseInt(G__33072,G__33073);
})()));
});
/**
* Returns true if key is present in the given collection, otherwise
* returns false.  Note that for numerically indexed collections like
* vectors and arrays, this tests if the numeric key is within the
* range of indexes. 'contains?' operates constant or logarithmic time;
* it will not perform a linear search for a value.  See also 'some'.
*/
cljs.core.contains_QMARK_ = (function contains_QMARK_(coll,v){
if((cljs.core.get.cljs$core$IFn$_invoke$arity$3(coll,v,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel)){
return false;
} else {
return true;
}
});
/**
* Returns the map entry for key, or nil if key not present.
*/
cljs.core.find = (function find(coll,k){
if((!((coll == null))) && (cljs.core.associative_QMARK_(coll)) && (cljs.core.contains_QMARK_(coll,k))){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [k,cljs.core.get.cljs$core$IFn$_invoke$arity$2(coll,k)], null);
} else {
return null;
}
});
/**
* Returns true if no two of the arguments are =
* @param {...*} var_args
*/
cljs.core.distinct_QMARK_ = (function() {
var distinct_QMARK_ = null;
var distinct_QMARK___1 = (function (x){
return true;
});
var distinct_QMARK___2 = (function (x,y){
return !(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x,y));
});
var distinct_QMARK___3 = (function() { 
var G__33074__delegate = function (x,y,more){
if(!(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x,y))){
var s = cljs.core.PersistentHashSet.fromArray([x,y], true);
var xs = more;
while(true){
var x__$1 = cljs.core.first(xs);
var etc = cljs.core.next(xs);
if(cljs.core.truth_(xs)){
if(cljs.core.contains_QMARK_(s,x__$1)){
return false;
} else {
var G__33075 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(s,x__$1);
var G__33076 = etc;
s = G__33075;
xs = G__33076;
continue;
}
} else {
return true;
}
break;
}
} else {
return false;
}
};
var G__33074 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__33077__i = 0, G__33077__a = new Array(arguments.length -  2);
while (G__33077__i < G__33077__a.length) {G__33077__a[G__33077__i] = arguments[G__33077__i + 2]; ++G__33077__i;}
  more = new cljs.core.IndexedSeq(G__33077__a,0);
} 
return G__33074__delegate.call(this,x,y,more);};
G__33074.cljs$lang$maxFixedArity = 2;
G__33074.cljs$lang$applyTo = (function (arglist__33078){
var x = cljs.core.first(arglist__33078);
arglist__33078 = cljs.core.next(arglist__33078);
var y = cljs.core.first(arglist__33078);
var more = cljs.core.rest(arglist__33078);
return G__33074__delegate(x,y,more);
});
G__33074.cljs$core$IFn$_invoke$arity$variadic = G__33074__delegate;
return G__33074;
})()
;
distinct_QMARK_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return distinct_QMARK___1.call(this,x);
case 2:
return distinct_QMARK___2.call(this,x,y);
default:
var G__33079 = null;
if (arguments.length > 2) {
var G__33080__i = 0, G__33080__a = new Array(arguments.length -  2);
while (G__33080__i < G__33080__a.length) {G__33080__a[G__33080__i] = arguments[G__33080__i + 2]; ++G__33080__i;}
G__33079 = new cljs.core.IndexedSeq(G__33080__a,0);
}
return distinct_QMARK___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__33079);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
distinct_QMARK_.cljs$lang$maxFixedArity = 2;
distinct_QMARK_.cljs$lang$applyTo = distinct_QMARK___3.cljs$lang$applyTo;
distinct_QMARK_.cljs$core$IFn$_invoke$arity$1 = distinct_QMARK___1;
distinct_QMARK_.cljs$core$IFn$_invoke$arity$2 = distinct_QMARK___2;
distinct_QMARK_.cljs$core$IFn$_invoke$arity$variadic = distinct_QMARK___3.cljs$core$IFn$_invoke$arity$variadic;
return distinct_QMARK_;
})()
;
/**
* Comparator. Returns a negative number, zero, or a positive number
* when x is logically 'less than', 'equal to', or 'greater than'
* y. Uses IComparable if available and google.array.defaultCompare for objects
* of the same type and special-cases nil to be less than any other object.
*/
cljs.core.compare = (function compare(x,y){
if((x === y)){
return (0);
} else {
if((x == null)){
return (-1);
} else {
if((y == null)){
return (1);
} else {
if((cljs.core.type(x) === cljs.core.type(y))){
if((function (){var G__33084 = x;
if(G__33084){
var bit__24946__auto__ = (G__33084.cljs$lang$protocol_mask$partition1$ & (2048));
if((bit__24946__auto__) || (G__33084.cljs$core$IComparable$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return x.cljs$core$IComparable$_compare$arity$2(null,y);
} else {
var G__33085 = x;
var G__33086 = y;
return goog.array.defaultCompare(G__33085,G__33086);
}
} else {
throw (new Error("compare on non-nil objects of different types"));

}
}
}
}
});
/**
* Compare indexed collection.
*/
cljs.core.compare_indexed = (function() {
var compare_indexed = null;
var compare_indexed__2 = (function (xs,ys){
var xl = cljs.core.count(xs);
var yl = cljs.core.count(ys);
if((xl < yl)){
return (-1);
} else {
if((xl > yl)){
return (1);
} else {
return compare_indexed.cljs$core$IFn$_invoke$arity$4(xs,ys,xl,(0));

}
}
});
var compare_indexed__4 = (function (xs,ys,len,n){
while(true){
var d = cljs.core.compare(cljs.core.nth.cljs$core$IFn$_invoke$arity$2(xs,n),cljs.core.nth.cljs$core$IFn$_invoke$arity$2(ys,n));
if(((d === (0))) && (((n + (1)) < len))){
var G__33091 = xs;
var G__33092 = ys;
var G__33093 = len;
var G__33094 = (n + (1));
xs = G__33091;
ys = G__33092;
len = G__33093;
n = G__33094;
continue;
} else {
return d;
}
break;
}
});
compare_indexed = function(xs,ys,len,n){
switch(arguments.length){
case 2:
return compare_indexed__2.call(this,xs,ys);
case 4:
return compare_indexed__4.call(this,xs,ys,len,n);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
compare_indexed.cljs$core$IFn$_invoke$arity$2 = compare_indexed__2;
compare_indexed.cljs$core$IFn$_invoke$arity$4 = compare_indexed__4;
return compare_indexed;
})()
;
/**
* Given a fn that might be boolean valued or a comparator,
* return a fn that is a comparator.
*/
cljs.core.fn__GT_comparator = (function fn__GT_comparator(f){
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(f,cljs.core.compare)){
return cljs.core.compare;
} else {
return (function (x,y){
var r = (function (){var G__33099 = x;
var G__33100 = y;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__33099,G__33100) : f.call(null,G__33099,G__33100));
})();
if(typeof r === 'number'){
return r;
} else {
if(cljs.core.truth_(r)){
return (-1);
} else {
if(cljs.core.truth_((function (){var G__33101 = y;
var G__33102 = x;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__33101,G__33102) : f.call(null,G__33101,G__33102));
})())){
return (1);
} else {
return (0);
}
}
}
});
}
});
/**
* Returns a sorted sequence of the items in coll. Comp can be
* boolean-valued comparison function, or a -/0/+ valued comparator.
* Comp defaults to compare.
*/
cljs.core.sort = (function() {
var sort = null;
var sort__1 = (function (coll){
return sort.cljs$core$IFn$_invoke$arity$2(cljs.core.compare,coll);
});
var sort__2 = (function (comp,coll){
if(cljs.core.seq(coll)){
var a = (function (){var G__33108 = coll;
return (cljs.core.to_array.cljs$core$IFn$_invoke$arity$1 ? cljs.core.to_array.cljs$core$IFn$_invoke$arity$1(G__33108) : cljs.core.to_array.call(null,G__33108));
})();
var G__33109_33111 = a;
var G__33110_33112 = cljs.core.fn__GT_comparator(comp);
goog.array.stableSort(G__33109_33111,G__33110_33112);

return cljs.core.seq(a);
} else {
return cljs.core.List.EMPTY;
}
});
sort = function(comp,coll){
switch(arguments.length){
case 1:
return sort__1.call(this,comp);
case 2:
return sort__2.call(this,comp,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
sort.cljs$core$IFn$_invoke$arity$1 = sort__1;
sort.cljs$core$IFn$_invoke$arity$2 = sort__2;
return sort;
})()
;
/**
* Returns a sorted sequence of the items in coll, where the sort
* order is determined by comparing (keyfn item).  Comp can be
* boolean-valued comparison funcion, or a -/0/+ valued comparator.
* Comp defaults to compare.
*/
cljs.core.sort_by = (function() {
var sort_by = null;
var sort_by__2 = (function (keyfn,coll){
return sort_by.cljs$core$IFn$_invoke$arity$3(keyfn,cljs.core.compare,coll);
});
var sort_by__3 = (function (keyfn,comp,coll){
return cljs.core.sort.cljs$core$IFn$_invoke$arity$2((function (x,y){
return cljs.core.fn__GT_comparator(comp).call(null,(function (){var G__33118 = x;
return (keyfn.cljs$core$IFn$_invoke$arity$1 ? keyfn.cljs$core$IFn$_invoke$arity$1(G__33118) : keyfn.call(null,G__33118));
})(),(function (){var G__33119 = y;
return (keyfn.cljs$core$IFn$_invoke$arity$1 ? keyfn.cljs$core$IFn$_invoke$arity$1(G__33119) : keyfn.call(null,G__33119));
})());
}),coll);
});
sort_by = function(keyfn,comp,coll){
switch(arguments.length){
case 2:
return sort_by__2.call(this,keyfn,comp);
case 3:
return sort_by__3.call(this,keyfn,comp,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
sort_by.cljs$core$IFn$_invoke$arity$2 = sort_by__2;
sort_by.cljs$core$IFn$_invoke$arity$3 = sort_by__3;
return sort_by;
})()
;
cljs.core.seq_reduce = (function() {
var seq_reduce = null;
var seq_reduce__2 = (function (f,coll){
var temp__4124__auto__ = cljs.core.seq(coll);
if(temp__4124__auto__){
var s = temp__4124__auto__;
var G__33125 = f;
var G__33126 = cljs.core.first(s);
var G__33127 = cljs.core.next(s);
return (cljs.core.reduce.cljs$core$IFn$_invoke$arity$3 ? cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(G__33125,G__33126,G__33127) : cljs.core.reduce.call(null,G__33125,G__33126,G__33127));
} else {
return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
}
});
var seq_reduce__3 = (function (f,val,coll){
var val__$1 = val;
var coll__$1 = cljs.core.seq(coll);
while(true){
if(coll__$1){
var nval = (function (){var G__33128 = val__$1;
var G__33129 = cljs.core.first(coll__$1);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__33128,G__33129) : f.call(null,G__33128,G__33129));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__33130 = nval;
var G__33131 = cljs.core.next(coll__$1);
val__$1 = G__33130;
coll__$1 = G__33131;
continue;
}
} else {
return val__$1;
}
break;
}
});
seq_reduce = function(f,val,coll){
switch(arguments.length){
case 2:
return seq_reduce__2.call(this,f,val);
case 3:
return seq_reduce__3.call(this,f,val,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
seq_reduce.cljs$core$IFn$_invoke$arity$2 = seq_reduce__2;
seq_reduce.cljs$core$IFn$_invoke$arity$3 = seq_reduce__3;
return seq_reduce;
})()
;
/**
* Return a random permutation of coll
*/
cljs.core.shuffle = (function shuffle(coll){
var a = (function (){var G__33135 = coll;
return (cljs.core.to_array.cljs$core$IFn$_invoke$arity$1 ? cljs.core.to_array.cljs$core$IFn$_invoke$arity$1(G__33135) : cljs.core.to_array.call(null,G__33135));
})();
var G__33136_33138 = a;
goog.array.shuffle(G__33136_33138);

var G__33137 = a;
return (cljs.core.vec.cljs$core$IFn$_invoke$arity$1 ? cljs.core.vec.cljs$core$IFn$_invoke$arity$1(G__33137) : cljs.core.vec.call(null,G__33137));
});
/**
* f should be a function of 2 arguments. If val is not supplied,
* returns the result of applying f to the first 2 items in coll, then
* applying f to that result and the 3rd item, etc. If coll contains no
* items, f must accept no arguments as well, and reduce returns the
* result of calling f with no arguments.  If coll has only 1 item, it
* is returned and f is not called.  If val is supplied, returns the
* result of applying f to val and the first item in coll, then
* applying f to that result and the 2nd item, etc. If coll contains no
* items, returns val and f is not called.
*/
cljs.core.reduce = (function() {
var reduce = null;
var reduce__2 = (function (f,coll){
if((function (){var G__33141 = coll;
if(G__33141){
var bit__24946__auto__ = (G__33141.cljs$lang$protocol_mask$partition0$ & (524288));
if((bit__24946__auto__) || (G__33141.cljs$core$IReduce$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$IReduce$_reduce$arity$2(null,f);
} else {
if(coll instanceof Array){
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$2(coll,f);
} else {
if(typeof coll === 'string'){
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$2(coll,f);
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.IReduce,coll)){
return cljs.core._reduce.cljs$core$IFn$_invoke$arity$2(coll,f);
} else {
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll);

}
}
}
}
});
var reduce__3 = (function (f,val,coll){
if((function (){var G__33142 = coll;
if(G__33142){
var bit__24946__auto__ = (G__33142.cljs$lang$protocol_mask$partition0$ & (524288));
if((bit__24946__auto__) || (G__33142.cljs$core$IReduce$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$IReduce$_reduce$arity$3(null,f,val);
} else {
if(coll instanceof Array){
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$3(coll,f,val);
} else {
if(typeof coll === 'string'){
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$3(coll,f,val);
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.IReduce,coll)){
return cljs.core._reduce.cljs$core$IFn$_invoke$arity$3(coll,f,val);
} else {
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,val,coll);

}
}
}
}
});
reduce = function(f,val,coll){
switch(arguments.length){
case 2:
return reduce__2.call(this,f,val);
case 3:
return reduce__3.call(this,f,val,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
reduce.cljs$core$IFn$_invoke$arity$2 = reduce__2;
reduce.cljs$core$IFn$_invoke$arity$3 = reduce__3;
return reduce;
})()
;
/**
* Reduces an associative collection. f should be a function of 3
* arguments. Returns the result of applying f to init, the first key
* and the first value in coll, then applying f to that result and the
* 2nd key and value, etc. If coll contains no entries, returns init
* and f is not called. Note that reduce-kv is supported on vectors,
* where the keys will be the ordinals.
*/
cljs.core.reduce_kv = (function reduce_kv(f,init,coll){
if(!((coll == null))){
return cljs.core._kv_reduce(coll,f,init);
} else {
return init;
}
});
cljs.core.identity = (function identity(x){
return x;
});
cljs.core.completing = (function() {
var completing = null;
var completing__1 = (function (f){
return completing.cljs$core$IFn$_invoke$arity$2(f,cljs.core.identity);
});
var completing__2 = (function (f,cf){
return (function() {
var G__33151 = null;
var G__33151__0 = (function (){
return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
});
var G__33151__1 = (function (x){
var G__33148 = x;
return (cf.cljs$core$IFn$_invoke$arity$1 ? cf.cljs$core$IFn$_invoke$arity$1(G__33148) : cf.call(null,G__33148));
});
var G__33151__2 = (function (x,y){
var G__33149 = x;
var G__33150 = y;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__33149,G__33150) : f.call(null,G__33149,G__33150));
});
G__33151 = function(x,y){
switch(arguments.length){
case 0:
return G__33151__0.call(this);
case 1:
return G__33151__1.call(this,x);
case 2:
return G__33151__2.call(this,x,y);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__33151.cljs$core$IFn$_invoke$arity$0 = G__33151__0;
G__33151.cljs$core$IFn$_invoke$arity$1 = G__33151__1;
G__33151.cljs$core$IFn$_invoke$arity$2 = G__33151__2;
return G__33151;
})()
});
completing = function(f,cf){
switch(arguments.length){
case 1:
return completing__1.call(this,f);
case 2:
return completing__2.call(this,f,cf);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
completing.cljs$core$IFn$_invoke$arity$1 = completing__1;
completing.cljs$core$IFn$_invoke$arity$2 = completing__2;
return completing;
})()
;
/**
* reduce with a transformation of f (xf). If init is not
* supplied, (f) will be called to produce it. f should be a reducing
* step function that accepts both 1 and 2 arguments, if it accepts
* only 2 you can add the arity-1 with 'completing'. Returns the result
* of applying (the transformed) xf to init and the first item in coll,
* then applying xf to that result and the 2nd item, etc. If coll
* contains no items, returns init and f is not called. Note that
* certain transforms may inject or skip items.
*/
cljs.core.transduce = (function() {
var transduce = null;
var transduce__3 = (function (xform,f,coll){
return transduce.cljs$core$IFn$_invoke$arity$4(xform,f,(function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})(),coll);
});
var transduce__4 = (function (xform,f,init,coll){
var f__$1 = (function (){var G__33158 = f;
return (xform.cljs$core$IFn$_invoke$arity$1 ? xform.cljs$core$IFn$_invoke$arity$1(G__33158) : xform.call(null,G__33158));
})();
var ret = cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(f__$1,init,coll);
var G__33159 = ret;
return (f__$1.cljs$core$IFn$_invoke$arity$1 ? f__$1.cljs$core$IFn$_invoke$arity$1(G__33159) : f__$1.call(null,G__33159));
});
transduce = function(xform,f,init,coll){
switch(arguments.length){
case 3:
return transduce__3.call(this,xform,f,init);
case 4:
return transduce__4.call(this,xform,f,init,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
transduce.cljs$core$IFn$_invoke$arity$3 = transduce__3;
transduce.cljs$core$IFn$_invoke$arity$4 = transduce__4;
return transduce;
})()
;
/**
* Returns the sum of nums. (+) returns 0.
* @param {...*} var_args
*/
cljs.core._PLUS_ = (function() {
var _PLUS_ = null;
var _PLUS___0 = (function (){
return (0);
});
var _PLUS___1 = (function (x){
return x;
});
var _PLUS___2 = (function (x,y){
return (x + y);
});
var _PLUS___3 = (function() { 
var G__33160__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(_PLUS_,(x + y),more);
};
var G__33160 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__33161__i = 0, G__33161__a = new Array(arguments.length -  2);
while (G__33161__i < G__33161__a.length) {G__33161__a[G__33161__i] = arguments[G__33161__i + 2]; ++G__33161__i;}
  more = new cljs.core.IndexedSeq(G__33161__a,0);
} 
return G__33160__delegate.call(this,x,y,more);};
G__33160.cljs$lang$maxFixedArity = 2;
G__33160.cljs$lang$applyTo = (function (arglist__33162){
var x = cljs.core.first(arglist__33162);
arglist__33162 = cljs.core.next(arglist__33162);
var y = cljs.core.first(arglist__33162);
var more = cljs.core.rest(arglist__33162);
return G__33160__delegate(x,y,more);
});
G__33160.cljs$core$IFn$_invoke$arity$variadic = G__33160__delegate;
return G__33160;
})()
;
_PLUS_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 0:
return _PLUS___0.call(this);
case 1:
return _PLUS___1.call(this,x);
case 2:
return _PLUS___2.call(this,x,y);
default:
var G__33163 = null;
if (arguments.length > 2) {
var G__33164__i = 0, G__33164__a = new Array(arguments.length -  2);
while (G__33164__i < G__33164__a.length) {G__33164__a[G__33164__i] = arguments[G__33164__i + 2]; ++G__33164__i;}
G__33163 = new cljs.core.IndexedSeq(G__33164__a,0);
}
return _PLUS___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__33163);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_PLUS_.cljs$lang$maxFixedArity = 2;
_PLUS_.cljs$lang$applyTo = _PLUS___3.cljs$lang$applyTo;
_PLUS_.cljs$core$IFn$_invoke$arity$0 = _PLUS___0;
_PLUS_.cljs$core$IFn$_invoke$arity$1 = _PLUS___1;
_PLUS_.cljs$core$IFn$_invoke$arity$2 = _PLUS___2;
_PLUS_.cljs$core$IFn$_invoke$arity$variadic = _PLUS___3.cljs$core$IFn$_invoke$arity$variadic;
return _PLUS_;
})()
;
/**
* If no ys are supplied, returns the negation of x, else subtracts
* the ys from x and returns the result.
* @param {...*} var_args
*/
cljs.core._ = (function() {
var _ = null;
var ___1 = (function (x){
return (- x);
});
var ___2 = (function (x,y){
return (x - y);
});
var ___3 = (function() { 
var G__33165__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(_,(x - y),more);
};
var G__33165 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__33166__i = 0, G__33166__a = new Array(arguments.length -  2);
while (G__33166__i < G__33166__a.length) {G__33166__a[G__33166__i] = arguments[G__33166__i + 2]; ++G__33166__i;}
  more = new cljs.core.IndexedSeq(G__33166__a,0);
} 
return G__33165__delegate.call(this,x,y,more);};
G__33165.cljs$lang$maxFixedArity = 2;
G__33165.cljs$lang$applyTo = (function (arglist__33167){
var x = cljs.core.first(arglist__33167);
arglist__33167 = cljs.core.next(arglist__33167);
var y = cljs.core.first(arglist__33167);
var more = cljs.core.rest(arglist__33167);
return G__33165__delegate(x,y,more);
});
G__33165.cljs$core$IFn$_invoke$arity$variadic = G__33165__delegate;
return G__33165;
})()
;
_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return ___1.call(this,x);
case 2:
return ___2.call(this,x,y);
default:
var G__33168 = null;
if (arguments.length > 2) {
var G__33169__i = 0, G__33169__a = new Array(arguments.length -  2);
while (G__33169__i < G__33169__a.length) {G__33169__a[G__33169__i] = arguments[G__33169__i + 2]; ++G__33169__i;}
G__33168 = new cljs.core.IndexedSeq(G__33169__a,0);
}
return ___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__33168);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_.cljs$lang$maxFixedArity = 2;
_.cljs$lang$applyTo = ___3.cljs$lang$applyTo;
_.cljs$core$IFn$_invoke$arity$1 = ___1;
_.cljs$core$IFn$_invoke$arity$2 = ___2;
_.cljs$core$IFn$_invoke$arity$variadic = ___3.cljs$core$IFn$_invoke$arity$variadic;
return _;
})()
;
/**
* Returns the product of nums. (*) returns 1.
* @param {...*} var_args
*/
cljs.core._STAR_ = (function() {
var _STAR_ = null;
var _STAR___0 = (function (){
return (1);
});
var _STAR___1 = (function (x){
return x;
});
var _STAR___2 = (function (x,y){
return (x * y);
});
var _STAR___3 = (function() { 
var G__33170__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(_STAR_,(x * y),more);
};
var G__33170 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__33171__i = 0, G__33171__a = new Array(arguments.length -  2);
while (G__33171__i < G__33171__a.length) {G__33171__a[G__33171__i] = arguments[G__33171__i + 2]; ++G__33171__i;}
  more = new cljs.core.IndexedSeq(G__33171__a,0);
} 
return G__33170__delegate.call(this,x,y,more);};
G__33170.cljs$lang$maxFixedArity = 2;
G__33170.cljs$lang$applyTo = (function (arglist__33172){
var x = cljs.core.first(arglist__33172);
arglist__33172 = cljs.core.next(arglist__33172);
var y = cljs.core.first(arglist__33172);
var more = cljs.core.rest(arglist__33172);
return G__33170__delegate(x,y,more);
});
G__33170.cljs$core$IFn$_invoke$arity$variadic = G__33170__delegate;
return G__33170;
})()
;
_STAR_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 0:
return _STAR___0.call(this);
case 1:
return _STAR___1.call(this,x);
case 2:
return _STAR___2.call(this,x,y);
default:
var G__33173 = null;
if (arguments.length > 2) {
var G__33174__i = 0, G__33174__a = new Array(arguments.length -  2);
while (G__33174__i < G__33174__a.length) {G__33174__a[G__33174__i] = arguments[G__33174__i + 2]; ++G__33174__i;}
G__33173 = new cljs.core.IndexedSeq(G__33174__a,0);
}
return _STAR___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__33173);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_STAR_.cljs$lang$maxFixedArity = 2;
_STAR_.cljs$lang$applyTo = _STAR___3.cljs$lang$applyTo;
_STAR_.cljs$core$IFn$_invoke$arity$0 = _STAR___0;
_STAR_.cljs$core$IFn$_invoke$arity$1 = _STAR___1;
_STAR_.cljs$core$IFn$_invoke$arity$2 = _STAR___2;
_STAR_.cljs$core$IFn$_invoke$arity$variadic = _STAR___3.cljs$core$IFn$_invoke$arity$variadic;
return _STAR_;
})()
;
/**
* If no denominators are supplied, returns 1/numerator,
* else returns numerator divided by all of the denominators.
* @param {...*} var_args
*/
cljs.core._SLASH_ = (function() {
var _SLASH_ = null;
var _SLASH___1 = (function (x){
return _SLASH_.cljs$core$IFn$_invoke$arity$2((1),x);
});
var _SLASH___2 = (function (x,y){
return (x / y);
});
var _SLASH___3 = (function() { 
var G__33179__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(_SLASH_,_SLASH_.cljs$core$IFn$_invoke$arity$2(x,y),more);
};
var G__33179 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__33180__i = 0, G__33180__a = new Array(arguments.length -  2);
while (G__33180__i < G__33180__a.length) {G__33180__a[G__33180__i] = arguments[G__33180__i + 2]; ++G__33180__i;}
  more = new cljs.core.IndexedSeq(G__33180__a,0);
} 
return G__33179__delegate.call(this,x,y,more);};
G__33179.cljs$lang$maxFixedArity = 2;
G__33179.cljs$lang$applyTo = (function (arglist__33181){
var x = cljs.core.first(arglist__33181);
arglist__33181 = cljs.core.next(arglist__33181);
var y = cljs.core.first(arglist__33181);
var more = cljs.core.rest(arglist__33181);
return G__33179__delegate(x,y,more);
});
G__33179.cljs$core$IFn$_invoke$arity$variadic = G__33179__delegate;
return G__33179;
})()
;
_SLASH_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return _SLASH___1.call(this,x);
case 2:
return _SLASH___2.call(this,x,y);
default:
var G__33182 = null;
if (arguments.length > 2) {
var G__33183__i = 0, G__33183__a = new Array(arguments.length -  2);
while (G__33183__i < G__33183__a.length) {G__33183__a[G__33183__i] = arguments[G__33183__i + 2]; ++G__33183__i;}
G__33182 = new cljs.core.IndexedSeq(G__33183__a,0);
}
return _SLASH___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__33182);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_SLASH_.cljs$lang$maxFixedArity = 2;
_SLASH_.cljs$lang$applyTo = _SLASH___3.cljs$lang$applyTo;
_SLASH_.cljs$core$IFn$_invoke$arity$1 = _SLASH___1;
_SLASH_.cljs$core$IFn$_invoke$arity$2 = _SLASH___2;
_SLASH_.cljs$core$IFn$_invoke$arity$variadic = _SLASH___3.cljs$core$IFn$_invoke$arity$variadic;
return _SLASH_;
})()
;
/**
* Returns non-nil if nums are in monotonically increasing order,
* otherwise false.
* @param {...*} var_args
*/
cljs.core._LT_ = (function() {
var _LT_ = null;
var _LT___1 = (function (x){
return true;
});
var _LT___2 = (function (x,y){
return (x < y);
});
var _LT___3 = (function() { 
var G__33184__delegate = function (x,y,more){
while(true){
if((x < y)){
if(cljs.core.next(more)){
var G__33185 = y;
var G__33186 = cljs.core.first(more);
var G__33187 = cljs.core.next(more);
x = G__33185;
y = G__33186;
more = G__33187;
continue;
} else {
return (y < cljs.core.first(more));
}
} else {
return false;
}
break;
}
};
var G__33184 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__33188__i = 0, G__33188__a = new Array(arguments.length -  2);
while (G__33188__i < G__33188__a.length) {G__33188__a[G__33188__i] = arguments[G__33188__i + 2]; ++G__33188__i;}
  more = new cljs.core.IndexedSeq(G__33188__a,0);
} 
return G__33184__delegate.call(this,x,y,more);};
G__33184.cljs$lang$maxFixedArity = 2;
G__33184.cljs$lang$applyTo = (function (arglist__33189){
var x = cljs.core.first(arglist__33189);
arglist__33189 = cljs.core.next(arglist__33189);
var y = cljs.core.first(arglist__33189);
var more = cljs.core.rest(arglist__33189);
return G__33184__delegate(x,y,more);
});
G__33184.cljs$core$IFn$_invoke$arity$variadic = G__33184__delegate;
return G__33184;
})()
;
_LT_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return _LT___1.call(this,x);
case 2:
return _LT___2.call(this,x,y);
default:
var G__33190 = null;
if (arguments.length > 2) {
var G__33191__i = 0, G__33191__a = new Array(arguments.length -  2);
while (G__33191__i < G__33191__a.length) {G__33191__a[G__33191__i] = arguments[G__33191__i + 2]; ++G__33191__i;}
G__33190 = new cljs.core.IndexedSeq(G__33191__a,0);
}
return _LT___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__33190);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_LT_.cljs$lang$maxFixedArity = 2;
_LT_.cljs$lang$applyTo = _LT___3.cljs$lang$applyTo;
_LT_.cljs$core$IFn$_invoke$arity$1 = _LT___1;
_LT_.cljs$core$IFn$_invoke$arity$2 = _LT___2;
_LT_.cljs$core$IFn$_invoke$arity$variadic = _LT___3.cljs$core$IFn$_invoke$arity$variadic;
return _LT_;
})()
;
/**
* Returns non-nil if nums are in monotonically non-decreasing order,
* otherwise false.
* @param {...*} var_args
*/
cljs.core._LT__EQ_ = (function() {
var _LT__EQ_ = null;
var _LT__EQ___1 = (function (x){
return true;
});
var _LT__EQ___2 = (function (x,y){
return (x <= y);
});
var _LT__EQ___3 = (function() { 
var G__33192__delegate = function (x,y,more){
while(true){
if((x <= y)){
if(cljs.core.next(more)){
var G__33193 = y;
var G__33194 = cljs.core.first(more);
var G__33195 = cljs.core.next(more);
x = G__33193;
y = G__33194;
more = G__33195;
continue;
} else {
return (y <= cljs.core.first(more));
}
} else {
return false;
}
break;
}
};
var G__33192 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__33196__i = 0, G__33196__a = new Array(arguments.length -  2);
while (G__33196__i < G__33196__a.length) {G__33196__a[G__33196__i] = arguments[G__33196__i + 2]; ++G__33196__i;}
  more = new cljs.core.IndexedSeq(G__33196__a,0);
} 
return G__33192__delegate.call(this,x,y,more);};
G__33192.cljs$lang$maxFixedArity = 2;
G__33192.cljs$lang$applyTo = (function (arglist__33197){
var x = cljs.core.first(arglist__33197);
arglist__33197 = cljs.core.next(arglist__33197);
var y = cljs.core.first(arglist__33197);
var more = cljs.core.rest(arglist__33197);
return G__33192__delegate(x,y,more);
});
G__33192.cljs$core$IFn$_invoke$arity$variadic = G__33192__delegate;
return G__33192;
})()
;
_LT__EQ_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return _LT__EQ___1.call(this,x);
case 2:
return _LT__EQ___2.call(this,x,y);
default:
var G__33198 = null;
if (arguments.length > 2) {
var G__33199__i = 0, G__33199__a = new Array(arguments.length -  2);
while (G__33199__i < G__33199__a.length) {G__33199__a[G__33199__i] = arguments[G__33199__i + 2]; ++G__33199__i;}
G__33198 = new cljs.core.IndexedSeq(G__33199__a,0);
}
return _LT__EQ___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__33198);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_LT__EQ_.cljs$lang$maxFixedArity = 2;
_LT__EQ_.cljs$lang$applyTo = _LT__EQ___3.cljs$lang$applyTo;
_LT__EQ_.cljs$core$IFn$_invoke$arity$1 = _LT__EQ___1;
_LT__EQ_.cljs$core$IFn$_invoke$arity$2 = _LT__EQ___2;
_LT__EQ_.cljs$core$IFn$_invoke$arity$variadic = _LT__EQ___3.cljs$core$IFn$_invoke$arity$variadic;
return _LT__EQ_;
})()
;
/**
* Returns non-nil if nums are in monotonically decreasing order,
* otherwise false.
* @param {...*} var_args
*/
cljs.core._GT_ = (function() {
var _GT_ = null;
var _GT___1 = (function (x){
return true;
});
var _GT___2 = (function (x,y){
return (x > y);
});
var _GT___3 = (function() { 
var G__33200__delegate = function (x,y,more){
while(true){
if((x > y)){
if(cljs.core.next(more)){
var G__33201 = y;
var G__33202 = cljs.core.first(more);
var G__33203 = cljs.core.next(more);
x = G__33201;
y = G__33202;
more = G__33203;
continue;
} else {
return (y > cljs.core.first(more));
}
} else {
return false;
}
break;
}
};
var G__33200 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__33204__i = 0, G__33204__a = new Array(arguments.length -  2);
while (G__33204__i < G__33204__a.length) {G__33204__a[G__33204__i] = arguments[G__33204__i + 2]; ++G__33204__i;}
  more = new cljs.core.IndexedSeq(G__33204__a,0);
} 
return G__33200__delegate.call(this,x,y,more);};
G__33200.cljs$lang$maxFixedArity = 2;
G__33200.cljs$lang$applyTo = (function (arglist__33205){
var x = cljs.core.first(arglist__33205);
arglist__33205 = cljs.core.next(arglist__33205);
var y = cljs.core.first(arglist__33205);
var more = cljs.core.rest(arglist__33205);
return G__33200__delegate(x,y,more);
});
G__33200.cljs$core$IFn$_invoke$arity$variadic = G__33200__delegate;
return G__33200;
})()
;
_GT_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return _GT___1.call(this,x);
case 2:
return _GT___2.call(this,x,y);
default:
var G__33206 = null;
if (arguments.length > 2) {
var G__33207__i = 0, G__33207__a = new Array(arguments.length -  2);
while (G__33207__i < G__33207__a.length) {G__33207__a[G__33207__i] = arguments[G__33207__i + 2]; ++G__33207__i;}
G__33206 = new cljs.core.IndexedSeq(G__33207__a,0);
}
return _GT___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__33206);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_GT_.cljs$lang$maxFixedArity = 2;
_GT_.cljs$lang$applyTo = _GT___3.cljs$lang$applyTo;
_GT_.cljs$core$IFn$_invoke$arity$1 = _GT___1;
_GT_.cljs$core$IFn$_invoke$arity$2 = _GT___2;
_GT_.cljs$core$IFn$_invoke$arity$variadic = _GT___3.cljs$core$IFn$_invoke$arity$variadic;
return _GT_;
})()
;
/**
* Returns non-nil if nums are in monotonically non-increasing order,
* otherwise false.
* @param {...*} var_args
*/
cljs.core._GT__EQ_ = (function() {
var _GT__EQ_ = null;
var _GT__EQ___1 = (function (x){
return true;
});
var _GT__EQ___2 = (function (x,y){
return (x >= y);
});
var _GT__EQ___3 = (function() { 
var G__33208__delegate = function (x,y,more){
while(true){
if((x >= y)){
if(cljs.core.next(more)){
var G__33209 = y;
var G__33210 = cljs.core.first(more);
var G__33211 = cljs.core.next(more);
x = G__33209;
y = G__33210;
more = G__33211;
continue;
} else {
return (y >= cljs.core.first(more));
}
} else {
return false;
}
break;
}
};
var G__33208 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__33212__i = 0, G__33212__a = new Array(arguments.length -  2);
while (G__33212__i < G__33212__a.length) {G__33212__a[G__33212__i] = arguments[G__33212__i + 2]; ++G__33212__i;}
  more = new cljs.core.IndexedSeq(G__33212__a,0);
} 
return G__33208__delegate.call(this,x,y,more);};
G__33208.cljs$lang$maxFixedArity = 2;
G__33208.cljs$lang$applyTo = (function (arglist__33213){
var x = cljs.core.first(arglist__33213);
arglist__33213 = cljs.core.next(arglist__33213);
var y = cljs.core.first(arglist__33213);
var more = cljs.core.rest(arglist__33213);
return G__33208__delegate(x,y,more);
});
G__33208.cljs$core$IFn$_invoke$arity$variadic = G__33208__delegate;
return G__33208;
})()
;
_GT__EQ_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return _GT__EQ___1.call(this,x);
case 2:
return _GT__EQ___2.call(this,x,y);
default:
var G__33214 = null;
if (arguments.length > 2) {
var G__33215__i = 0, G__33215__a = new Array(arguments.length -  2);
while (G__33215__i < G__33215__a.length) {G__33215__a[G__33215__i] = arguments[G__33215__i + 2]; ++G__33215__i;}
G__33214 = new cljs.core.IndexedSeq(G__33215__a,0);
}
return _GT__EQ___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__33214);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_GT__EQ_.cljs$lang$maxFixedArity = 2;
_GT__EQ_.cljs$lang$applyTo = _GT__EQ___3.cljs$lang$applyTo;
_GT__EQ_.cljs$core$IFn$_invoke$arity$1 = _GT__EQ___1;
_GT__EQ_.cljs$core$IFn$_invoke$arity$2 = _GT__EQ___2;
_GT__EQ_.cljs$core$IFn$_invoke$arity$variadic = _GT__EQ___3.cljs$core$IFn$_invoke$arity$variadic;
return _GT__EQ_;
})()
;
/**
* Returns a number one less than num.
*/
cljs.core.dec = (function dec(x){
return (x - (1));
});
/**
* Returns the greatest of the nums.
* @param {...*} var_args
*/
cljs.core.max = (function() {
var max = null;
var max__1 = (function (x){
return x;
});
var max__2 = (function (x,y){
var x__24589__auto__ = x;
var y__24590__auto__ = y;
return ((x__24589__auto__ > y__24590__auto__) ? x__24589__auto__ : y__24590__auto__);
});
var max__3 = (function() { 
var G__33216__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(max,(function (){var x__24589__auto__ = x;
var y__24590__auto__ = y;
return ((x__24589__auto__ > y__24590__auto__) ? x__24589__auto__ : y__24590__auto__);
})(),more);
};
var G__33216 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__33217__i = 0, G__33217__a = new Array(arguments.length -  2);
while (G__33217__i < G__33217__a.length) {G__33217__a[G__33217__i] = arguments[G__33217__i + 2]; ++G__33217__i;}
  more = new cljs.core.IndexedSeq(G__33217__a,0);
} 
return G__33216__delegate.call(this,x,y,more);};
G__33216.cljs$lang$maxFixedArity = 2;
G__33216.cljs$lang$applyTo = (function (arglist__33218){
var x = cljs.core.first(arglist__33218);
arglist__33218 = cljs.core.next(arglist__33218);
var y = cljs.core.first(arglist__33218);
var more = cljs.core.rest(arglist__33218);
return G__33216__delegate(x,y,more);
});
G__33216.cljs$core$IFn$_invoke$arity$variadic = G__33216__delegate;
return G__33216;
})()
;
max = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return max__1.call(this,x);
case 2:
return max__2.call(this,x,y);
default:
var G__33219 = null;
if (arguments.length > 2) {
var G__33220__i = 0, G__33220__a = new Array(arguments.length -  2);
while (G__33220__i < G__33220__a.length) {G__33220__a[G__33220__i] = arguments[G__33220__i + 2]; ++G__33220__i;}
G__33219 = new cljs.core.IndexedSeq(G__33220__a,0);
}
return max__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__33219);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
max.cljs$lang$maxFixedArity = 2;
max.cljs$lang$applyTo = max__3.cljs$lang$applyTo;
max.cljs$core$IFn$_invoke$arity$1 = max__1;
max.cljs$core$IFn$_invoke$arity$2 = max__2;
max.cljs$core$IFn$_invoke$arity$variadic = max__3.cljs$core$IFn$_invoke$arity$variadic;
return max;
})()
;
/**
* Returns the least of the nums.
* @param {...*} var_args
*/
cljs.core.min = (function() {
var min = null;
var min__1 = (function (x){
return x;
});
var min__2 = (function (x,y){
var x__24596__auto__ = x;
var y__24597__auto__ = y;
return ((x__24596__auto__ < y__24597__auto__) ? x__24596__auto__ : y__24597__auto__);
});
var min__3 = (function() { 
var G__33221__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(min,(function (){var x__24596__auto__ = x;
var y__24597__auto__ = y;
return ((x__24596__auto__ < y__24597__auto__) ? x__24596__auto__ : y__24597__auto__);
})(),more);
};
var G__33221 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__33222__i = 0, G__33222__a = new Array(arguments.length -  2);
while (G__33222__i < G__33222__a.length) {G__33222__a[G__33222__i] = arguments[G__33222__i + 2]; ++G__33222__i;}
  more = new cljs.core.IndexedSeq(G__33222__a,0);
} 
return G__33221__delegate.call(this,x,y,more);};
G__33221.cljs$lang$maxFixedArity = 2;
G__33221.cljs$lang$applyTo = (function (arglist__33223){
var x = cljs.core.first(arglist__33223);
arglist__33223 = cljs.core.next(arglist__33223);
var y = cljs.core.first(arglist__33223);
var more = cljs.core.rest(arglist__33223);
return G__33221__delegate(x,y,more);
});
G__33221.cljs$core$IFn$_invoke$arity$variadic = G__33221__delegate;
return G__33221;
})()
;
min = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return min__1.call(this,x);
case 2:
return min__2.call(this,x,y);
default:
var G__33224 = null;
if (arguments.length > 2) {
var G__33225__i = 0, G__33225__a = new Array(arguments.length -  2);
while (G__33225__i < G__33225__a.length) {G__33225__a[G__33225__i] = arguments[G__33225__i + 2]; ++G__33225__i;}
G__33224 = new cljs.core.IndexedSeq(G__33225__a,0);
}
return min__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__33224);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
min.cljs$lang$maxFixedArity = 2;
min.cljs$lang$applyTo = min__3.cljs$lang$applyTo;
min.cljs$core$IFn$_invoke$arity$1 = min__1;
min.cljs$core$IFn$_invoke$arity$2 = min__2;
min.cljs$core$IFn$_invoke$arity$variadic = min__3.cljs$core$IFn$_invoke$arity$variadic;
return min;
})()
;
cljs.core.byte$ = (function byte$(x){
return x;
});
/**
* Coerce to char
*/
cljs.core.char$ = (function char$(x){
if(typeof x === 'number'){
return String.fromCharCode(x);
} else {
if((typeof x === 'string') && ((x.length === (1)))){
return x;
} else {
throw (new Error("Argument to char must be a character or number"));

}
}
});
cljs.core.short$ = (function short$(x){
return x;
});
cljs.core.float$ = (function float$(x){
return x;
});
cljs.core.double$ = (function double$(x){
return x;
});
cljs.core.unchecked_byte = (function unchecked_byte(x){
return x;
});
cljs.core.unchecked_char = (function unchecked_char(x){
return x;
});
cljs.core.unchecked_short = (function unchecked_short(x){
return x;
});
cljs.core.unchecked_float = (function unchecked_float(x){
return x;
});
cljs.core.unchecked_double = (function unchecked_double(x){
return x;
});
/**
* Returns the sum of nums. (+) returns 0.
* @param {...*} var_args
*/
cljs.core.unchecked_add = (function() {
var unchecked_add = null;
var unchecked_add__0 = (function (){
return (0);
});
var unchecked_add__1 = (function (x){
return x;
});
var unchecked_add__2 = (function (x,y){
return (x + y);
});
var unchecked_add__3 = (function() { 
var G__33226__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_add,(x + y),more);
};
var G__33226 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__33227__i = 0, G__33227__a = new Array(arguments.length -  2);
while (G__33227__i < G__33227__a.length) {G__33227__a[G__33227__i] = arguments[G__33227__i + 2]; ++G__33227__i;}
  more = new cljs.core.IndexedSeq(G__33227__a,0);
} 
return G__33226__delegate.call(this,x,y,more);};
G__33226.cljs$lang$maxFixedArity = 2;
G__33226.cljs$lang$applyTo = (function (arglist__33228){
var x = cljs.core.first(arglist__33228);
arglist__33228 = cljs.core.next(arglist__33228);
var y = cljs.core.first(arglist__33228);
var more = cljs.core.rest(arglist__33228);
return G__33226__delegate(x,y,more);
});
G__33226.cljs$core$IFn$_invoke$arity$variadic = G__33226__delegate;
return G__33226;
})()
;
unchecked_add = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 0:
return unchecked_add__0.call(this);
case 1:
return unchecked_add__1.call(this,x);
case 2:
return unchecked_add__2.call(this,x,y);
default:
var G__33229 = null;
if (arguments.length > 2) {
var G__33230__i = 0, G__33230__a = new Array(arguments.length -  2);
while (G__33230__i < G__33230__a.length) {G__33230__a[G__33230__i] = arguments[G__33230__i + 2]; ++G__33230__i;}
G__33229 = new cljs.core.IndexedSeq(G__33230__a,0);
}
return unchecked_add__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__33229);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
unchecked_add.cljs$lang$maxFixedArity = 2;
unchecked_add.cljs$lang$applyTo = unchecked_add__3.cljs$lang$applyTo;
unchecked_add.cljs$core$IFn$_invoke$arity$0 = unchecked_add__0;
unchecked_add.cljs$core$IFn$_invoke$arity$1 = unchecked_add__1;
unchecked_add.cljs$core$IFn$_invoke$arity$2 = unchecked_add__2;
unchecked_add.cljs$core$IFn$_invoke$arity$variadic = unchecked_add__3.cljs$core$IFn$_invoke$arity$variadic;
return unchecked_add;
})()
;
/**
* Returns the sum of nums. (+) returns 0.
* @param {...*} var_args
*/
cljs.core.unchecked_add_int = (function() {
var unchecked_add_int = null;
var unchecked_add_int__0 = (function (){
return (0);
});
var unchecked_add_int__1 = (function (x){
return x;
});
var unchecked_add_int__2 = (function (x,y){
return (x + y);
});
var unchecked_add_int__3 = (function() { 
var G__33231__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_add_int,(x + y),more);
};
var G__33231 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__33232__i = 0, G__33232__a = new Array(arguments.length -  2);
while (G__33232__i < G__33232__a.length) {G__33232__a[G__33232__i] = arguments[G__33232__i + 2]; ++G__33232__i;}
  more = new cljs.core.IndexedSeq(G__33232__a,0);
} 
return G__33231__delegate.call(this,x,y,more);};
G__33231.cljs$lang$maxFixedArity = 2;
G__33231.cljs$lang$applyTo = (function (arglist__33233){
var x = cljs.core.first(arglist__33233);
arglist__33233 = cljs.core.next(arglist__33233);
var y = cljs.core.first(arglist__33233);
var more = cljs.core.rest(arglist__33233);
return G__33231__delegate(x,y,more);
});
G__33231.cljs$core$IFn$_invoke$arity$variadic = G__33231__delegate;
return G__33231;
})()
;
unchecked_add_int = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 0:
return unchecked_add_int__0.call(this);
case 1:
return unchecked_add_int__1.call(this,x);
case 2:
return unchecked_add_int__2.call(this,x,y);
default:
var G__33234 = null;
if (arguments.length > 2) {
var G__33235__i = 0, G__33235__a = new Array(arguments.length -  2);
while (G__33235__i < G__33235__a.length) {G__33235__a[G__33235__i] = arguments[G__33235__i + 2]; ++G__33235__i;}
G__33234 = new cljs.core.IndexedSeq(G__33235__a,0);
}
return unchecked_add_int__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__33234);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
unchecked_add_int.cljs$lang$maxFixedArity = 2;
unchecked_add_int.cljs$lang$applyTo = unchecked_add_int__3.cljs$lang$applyTo;
unchecked_add_int.cljs$core$IFn$_invoke$arity$0 = unchecked_add_int__0;
unchecked_add_int.cljs$core$IFn$_invoke$arity$1 = unchecked_add_int__1;
unchecked_add_int.cljs$core$IFn$_invoke$arity$2 = unchecked_add_int__2;
unchecked_add_int.cljs$core$IFn$_invoke$arity$variadic = unchecked_add_int__3.cljs$core$IFn$_invoke$arity$variadic;
return unchecked_add_int;
})()
;
cljs.core.unchecked_dec = (function unchecked_dec(x){
return (x - (1));
});
cljs.core.unchecked_dec_int = (function unchecked_dec_int(x){
return (x - (1));
});
/**
* If no denominators are supplied, returns 1/numerator,
* else returns numerator divided by all of the denominators.
* @param {...*} var_args
*/
cljs.core.unchecked_divide_int = (function() {
var unchecked_divide_int = null;
var unchecked_divide_int__1 = (function (x){
return unchecked_divide_int.cljs$core$IFn$_invoke$arity$2((1),x);
});
var unchecked_divide_int__2 = (function (x,y){
return (x / y);
});
var unchecked_divide_int__3 = (function() { 
var G__33240__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_divide_int,unchecked_divide_int.cljs$core$IFn$_invoke$arity$2(x,y),more);
};
var G__33240 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__33241__i = 0, G__33241__a = new Array(arguments.length -  2);
while (G__33241__i < G__33241__a.length) {G__33241__a[G__33241__i] = arguments[G__33241__i + 2]; ++G__33241__i;}
  more = new cljs.core.IndexedSeq(G__33241__a,0);
} 
return G__33240__delegate.call(this,x,y,more);};
G__33240.cljs$lang$maxFixedArity = 2;
G__33240.cljs$lang$applyTo = (function (arglist__33242){
var x = cljs.core.first(arglist__33242);
arglist__33242 = cljs.core.next(arglist__33242);
var y = cljs.core.first(arglist__33242);
var more = cljs.core.rest(arglist__33242);
return G__33240__delegate(x,y,more);
});
G__33240.cljs$core$IFn$_invoke$arity$variadic = G__33240__delegate;
return G__33240;
})()
;
unchecked_divide_int = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return unchecked_divide_int__1.call(this,x);
case 2:
return unchecked_divide_int__2.call(this,x,y);
default:
var G__33243 = null;
if (arguments.length > 2) {
var G__33244__i = 0, G__33244__a = new Array(arguments.length -  2);
while (G__33244__i < G__33244__a.length) {G__33244__a[G__33244__i] = arguments[G__33244__i + 2]; ++G__33244__i;}
G__33243 = new cljs.core.IndexedSeq(G__33244__a,0);
}
return unchecked_divide_int__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__33243);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
unchecked_divide_int.cljs$lang$maxFixedArity = 2;
unchecked_divide_int.cljs$lang$applyTo = unchecked_divide_int__3.cljs$lang$applyTo;
unchecked_divide_int.cljs$core$IFn$_invoke$arity$1 = unchecked_divide_int__1;
unchecked_divide_int.cljs$core$IFn$_invoke$arity$2 = unchecked_divide_int__2;
unchecked_divide_int.cljs$core$IFn$_invoke$arity$variadic = unchecked_divide_int__3.cljs$core$IFn$_invoke$arity$variadic;
return unchecked_divide_int;
})()
;
cljs.core.unchecked_inc = (function unchecked_inc(x){
return (x + (1));
});
cljs.core.unchecked_inc_int = (function unchecked_inc_int(x){
return (x + (1));
});
/**
* Returns the product of nums. (*) returns 1.
* @param {...*} var_args
*/
cljs.core.unchecked_multiply = (function() {
var unchecked_multiply = null;
var unchecked_multiply__0 = (function (){
return (1);
});
var unchecked_multiply__1 = (function (x){
return x;
});
var unchecked_multiply__2 = (function (x,y){
return (x * y);
});
var unchecked_multiply__3 = (function() { 
var G__33245__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_multiply,(x * y),more);
};
var G__33245 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__33246__i = 0, G__33246__a = new Array(arguments.length -  2);
while (G__33246__i < G__33246__a.length) {G__33246__a[G__33246__i] = arguments[G__33246__i + 2]; ++G__33246__i;}
  more = new cljs.core.IndexedSeq(G__33246__a,0);
} 
return G__33245__delegate.call(this,x,y,more);};
G__33245.cljs$lang$maxFixedArity = 2;
G__33245.cljs$lang$applyTo = (function (arglist__33247){
var x = cljs.core.first(arglist__33247);
arglist__33247 = cljs.core.next(arglist__33247);
var y = cljs.core.first(arglist__33247);
var more = cljs.core.rest(arglist__33247);
return G__33245__delegate(x,y,more);
});
G__33245.cljs$core$IFn$_invoke$arity$variadic = G__33245__delegate;
return G__33245;
})()
;
unchecked_multiply = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 0:
return unchecked_multiply__0.call(this);
case 1:
return unchecked_multiply__1.call(this,x);
case 2:
return unchecked_multiply__2.call(this,x,y);
default:
var G__33248 = null;
if (arguments.length > 2) {
var G__33249__i = 0, G__33249__a = new Array(arguments.length -  2);
while (G__33249__i < G__33249__a.length) {G__33249__a[G__33249__i] = arguments[G__33249__i + 2]; ++G__33249__i;}
G__33248 = new cljs.core.IndexedSeq(G__33249__a,0);
}
return unchecked_multiply__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__33248);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
unchecked_multiply.cljs$lang$maxFixedArity = 2;
unchecked_multiply.cljs$lang$applyTo = unchecked_multiply__3.cljs$lang$applyTo;
unchecked_multiply.cljs$core$IFn$_invoke$arity$0 = unchecked_multiply__0;
unchecked_multiply.cljs$core$IFn$_invoke$arity$1 = unchecked_multiply__1;
unchecked_multiply.cljs$core$IFn$_invoke$arity$2 = unchecked_multiply__2;
unchecked_multiply.cljs$core$IFn$_invoke$arity$variadic = unchecked_multiply__3.cljs$core$IFn$_invoke$arity$variadic;
return unchecked_multiply;
})()
;
/**
* Returns the product of nums. (*) returns 1.
* @param {...*} var_args
*/
cljs.core.unchecked_multiply_int = (function() {
var unchecked_multiply_int = null;
var unchecked_multiply_int__0 = (function (){
return (1);
});
var unchecked_multiply_int__1 = (function (x){
return x;
});
var unchecked_multiply_int__2 = (function (x,y){
return (x * y);
});
var unchecked_multiply_int__3 = (function() { 
var G__33250__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_multiply_int,(x * y),more);
};
var G__33250 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__33251__i = 0, G__33251__a = new Array(arguments.length -  2);
while (G__33251__i < G__33251__a.length) {G__33251__a[G__33251__i] = arguments[G__33251__i + 2]; ++G__33251__i;}
  more = new cljs.core.IndexedSeq(G__33251__a,0);
} 
return G__33250__delegate.call(this,x,y,more);};
G__33250.cljs$lang$maxFixedArity = 2;
G__33250.cljs$lang$applyTo = (function (arglist__33252){
var x = cljs.core.first(arglist__33252);
arglist__33252 = cljs.core.next(arglist__33252);
var y = cljs.core.first(arglist__33252);
var more = cljs.core.rest(arglist__33252);
return G__33250__delegate(x,y,more);
});
G__33250.cljs$core$IFn$_invoke$arity$variadic = G__33250__delegate;
return G__33250;
})()
;
unchecked_multiply_int = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 0:
return unchecked_multiply_int__0.call(this);
case 1:
return unchecked_multiply_int__1.call(this,x);
case 2:
return unchecked_multiply_int__2.call(this,x,y);
default:
var G__33253 = null;
if (arguments.length > 2) {
var G__33254__i = 0, G__33254__a = new Array(arguments.length -  2);
while (G__33254__i < G__33254__a.length) {G__33254__a[G__33254__i] = arguments[G__33254__i + 2]; ++G__33254__i;}
G__33253 = new cljs.core.IndexedSeq(G__33254__a,0);
}
return unchecked_multiply_int__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__33253);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
unchecked_multiply_int.cljs$lang$maxFixedArity = 2;
unchecked_multiply_int.cljs$lang$applyTo = unchecked_multiply_int__3.cljs$lang$applyTo;
unchecked_multiply_int.cljs$core$IFn$_invoke$arity$0 = unchecked_multiply_int__0;
unchecked_multiply_int.cljs$core$IFn$_invoke$arity$1 = unchecked_multiply_int__1;
unchecked_multiply_int.cljs$core$IFn$_invoke$arity$2 = unchecked_multiply_int__2;
unchecked_multiply_int.cljs$core$IFn$_invoke$arity$variadic = unchecked_multiply_int__3.cljs$core$IFn$_invoke$arity$variadic;
return unchecked_multiply_int;
})()
;
cljs.core.unchecked_negate = (function unchecked_negate(x){
return (- x);
});
cljs.core.unchecked_negate_int = (function unchecked_negate_int(x){
return (- x);
});
cljs.core.unchecked_remainder_int = (function unchecked_remainder_int(x,n){
var G__33257 = x;
var G__33258 = n;
return (cljs.core.mod.cljs$core$IFn$_invoke$arity$2 ? cljs.core.mod.cljs$core$IFn$_invoke$arity$2(G__33257,G__33258) : cljs.core.mod.call(null,G__33257,G__33258));
});
/**
* If no ys are supplied, returns the negation of x, else subtracts
* the ys from x and returns the result.
* @param {...*} var_args
*/
cljs.core.unchecked_subtract = (function() {
var unchecked_subtract = null;
var unchecked_subtract__1 = (function (x){
return (- x);
});
var unchecked_subtract__2 = (function (x,y){
return (x - y);
});
var unchecked_subtract__3 = (function() { 
var G__33259__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_subtract,(x - y),more);
};
var G__33259 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__33260__i = 0, G__33260__a = new Array(arguments.length -  2);
while (G__33260__i < G__33260__a.length) {G__33260__a[G__33260__i] = arguments[G__33260__i + 2]; ++G__33260__i;}
  more = new cljs.core.IndexedSeq(G__33260__a,0);
} 
return G__33259__delegate.call(this,x,y,more);};
G__33259.cljs$lang$maxFixedArity = 2;
G__33259.cljs$lang$applyTo = (function (arglist__33261){
var x = cljs.core.first(arglist__33261);
arglist__33261 = cljs.core.next(arglist__33261);
var y = cljs.core.first(arglist__33261);
var more = cljs.core.rest(arglist__33261);
return G__33259__delegate(x,y,more);
});
G__33259.cljs$core$IFn$_invoke$arity$variadic = G__33259__delegate;
return G__33259;
})()
;
unchecked_subtract = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return unchecked_subtract__1.call(this,x);
case 2:
return unchecked_subtract__2.call(this,x,y);
default:
var G__33262 = null;
if (arguments.length > 2) {
var G__33263__i = 0, G__33263__a = new Array(arguments.length -  2);
while (G__33263__i < G__33263__a.length) {G__33263__a[G__33263__i] = arguments[G__33263__i + 2]; ++G__33263__i;}
G__33262 = new cljs.core.IndexedSeq(G__33263__a,0);
}
return unchecked_subtract__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__33262);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
unchecked_subtract.cljs$lang$maxFixedArity = 2;
unchecked_subtract.cljs$lang$applyTo = unchecked_subtract__3.cljs$lang$applyTo;
unchecked_subtract.cljs$core$IFn$_invoke$arity$1 = unchecked_subtract__1;
unchecked_subtract.cljs$core$IFn$_invoke$arity$2 = unchecked_subtract__2;
unchecked_subtract.cljs$core$IFn$_invoke$arity$variadic = unchecked_subtract__3.cljs$core$IFn$_invoke$arity$variadic;
return unchecked_subtract;
})()
;
/**
* If no ys are supplied, returns the negation of x, else subtracts
* the ys from x and returns the result.
* @param {...*} var_args
*/
cljs.core.unchecked_subtract_int = (function() {
var unchecked_subtract_int = null;
var unchecked_subtract_int__1 = (function (x){
return (- x);
});
var unchecked_subtract_int__2 = (function (x,y){
return (x - y);
});
var unchecked_subtract_int__3 = (function() { 
var G__33264__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_subtract_int,(x - y),more);
};
var G__33264 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__33265__i = 0, G__33265__a = new Array(arguments.length -  2);
while (G__33265__i < G__33265__a.length) {G__33265__a[G__33265__i] = arguments[G__33265__i + 2]; ++G__33265__i;}
  more = new cljs.core.IndexedSeq(G__33265__a,0);
} 
return G__33264__delegate.call(this,x,y,more);};
G__33264.cljs$lang$maxFixedArity = 2;
G__33264.cljs$lang$applyTo = (function (arglist__33266){
var x = cljs.core.first(arglist__33266);
arglist__33266 = cljs.core.next(arglist__33266);
var y = cljs.core.first(arglist__33266);
var more = cljs.core.rest(arglist__33266);
return G__33264__delegate(x,y,more);
});
G__33264.cljs$core$IFn$_invoke$arity$variadic = G__33264__delegate;
return G__33264;
})()
;
unchecked_subtract_int = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return unchecked_subtract_int__1.call(this,x);
case 2:
return unchecked_subtract_int__2.call(this,x,y);
default:
var G__33267 = null;
if (arguments.length > 2) {
var G__33268__i = 0, G__33268__a = new Array(arguments.length -  2);
while (G__33268__i < G__33268__a.length) {G__33268__a[G__33268__i] = arguments[G__33268__i + 2]; ++G__33268__i;}
G__33267 = new cljs.core.IndexedSeq(G__33268__a,0);
}
return unchecked_subtract_int__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__33267);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
unchecked_subtract_int.cljs$lang$maxFixedArity = 2;
unchecked_subtract_int.cljs$lang$applyTo = unchecked_subtract_int__3.cljs$lang$applyTo;
unchecked_subtract_int.cljs$core$IFn$_invoke$arity$1 = unchecked_subtract_int__1;
unchecked_subtract_int.cljs$core$IFn$_invoke$arity$2 = unchecked_subtract_int__2;
unchecked_subtract_int.cljs$core$IFn$_invoke$arity$variadic = unchecked_subtract_int__3.cljs$core$IFn$_invoke$arity$variadic;
return unchecked_subtract_int;
})()
;
cljs.core.fix = (function fix(q){
if((q >= (0))){
var G__33271 = q;
return (Math.floor.cljs$core$IFn$_invoke$arity$1 ? Math.floor.cljs$core$IFn$_invoke$arity$1(G__33271) : Math.floor.call(null,G__33271));
} else {
var G__33272 = q;
return (Math.ceil.cljs$core$IFn$_invoke$arity$1 ? Math.ceil.cljs$core$IFn$_invoke$arity$1(G__33272) : Math.ceil.call(null,G__33272));
}
});
/**
* Coerce to int by stripping decimal places.
*/
cljs.core.int$ = (function int$(x){
return (x | (0));
});
/**
* Coerce to int by stripping decimal places.
*/
cljs.core.unchecked_int = (function unchecked_int(x){
return cljs.core.fix(x);
});
/**
* Coerce to long by stripping decimal places. Identical to `int'.
*/
cljs.core.long$ = (function long$(x){
return cljs.core.fix(x);
});
/**
* Coerce to long by stripping decimal places. Identical to `int'.
*/
cljs.core.unchecked_long = (function unchecked_long(x){
return cljs.core.fix(x);
});
cljs.core.booleans = (function booleans(x){
return x;
});
cljs.core.bytes = (function bytes(x){
return x;
});
cljs.core.chars = (function chars(x){
return x;
});
cljs.core.shorts = (function shorts(x){
return x;
});
cljs.core.ints = (function ints(x){
return x;
});
cljs.core.floats = (function floats(x){
return x;
});
cljs.core.doubles = (function doubles(x){
return x;
});
cljs.core.longs = (function longs(x){
return x;
});
/**
* Modulus of num and div with original javascript behavior. i.e. bug for negative numbers
*/
cljs.core.js_mod = (function js_mod(n,d){
return (n % d);
});
/**
* Modulus of num and div. Truncates toward negative infinity.
*/
cljs.core.mod = (function mod(n,d){
return (((n % d) + d) % d);
});
/**
* quot[ient] of dividing numerator by denominator.
*/
cljs.core.quot = (function quot(n,d){
var rem = (n % d);
return cljs.core.fix(((n - rem) / d));
});
/**
* remainder of dividing numerator by denominator.
*/
cljs.core.rem = (function rem(n,d){
var q = cljs.core.quot(n,d);
return (n - (d * q));
});
/**
* Bitwise exclusive or
*/
cljs.core.bit_xor = (function bit_xor(x,y){
return (x ^ y);
});
/**
* Bitwise and
*/
cljs.core.bit_and = (function bit_and(x,y){
return (x & y);
});
/**
* Bitwise or
*/
cljs.core.bit_or = (function bit_or(x,y){
return (x | y);
});
/**
* Bitwise and
*/
cljs.core.bit_and_not = (function bit_and_not(x,y){
return (x & ~y);
});
/**
* Clear bit at index n
*/
cljs.core.bit_clear = (function bit_clear(x,n){
return (x & ~(1 << n));
});
/**
* Flip bit at index n
*/
cljs.core.bit_flip = (function bit_flip(x,n){
return (x ^ (1 << n));
});
/**
* Bitwise complement
*/
cljs.core.bit_not = (function bit_not(x){
return (~ x);
});
/**
* Set bit at index n
*/
cljs.core.bit_set = (function bit_set(x,n){
return (x | (1 << n));
});
/**
* Test bit at index n
*/
cljs.core.bit_test = (function bit_test(x,n){
return ((x & (1 << n)) != 0);
});
/**
* Bitwise shift left
*/
cljs.core.bit_shift_left = (function bit_shift_left(x,n){
return (x << n);
});
/**
* Bitwise shift right
*/
cljs.core.bit_shift_right = (function bit_shift_right(x,n){
return (x >> n);
});
/**
* DEPRECATED: Bitwise shift right with zero fill
*/
cljs.core.bit_shift_right_zero_fill = (function bit_shift_right_zero_fill(x,n){
return (x >>> n);
});
/**
* Bitwise shift right with zero fill
*/
cljs.core.unsigned_bit_shift_right = (function unsigned_bit_shift_right(x,n){
return (x >>> n);
});
/**
* Counts the number of bits set in n
*/
cljs.core.bit_count = (function bit_count(v){
var v__$1 = (v - ((v >> (1)) & (1431655765)));
var v__$2 = ((v__$1 & (858993459)) + ((v__$1 >> (2)) & (858993459)));
return ((((v__$2 + (v__$2 >> (4))) & (252645135)) * (16843009)) >> (24));
});
/**
* Returns non-nil if nums all have the equivalent
* value, otherwise false. Behavior on non nums is
* undefined.
* @param {...*} var_args
*/
cljs.core._EQ__EQ_ = (function() {
var _EQ__EQ_ = null;
var _EQ__EQ___1 = (function (x){
return true;
});
var _EQ__EQ___2 = (function (x,y){
return cljs.core._equiv(x,y);
});
var _EQ__EQ___3 = (function() { 
var G__33277__delegate = function (x,y,more){
while(true){
if(_EQ__EQ_.cljs$core$IFn$_invoke$arity$2(x,y)){
if(cljs.core.next(more)){
var G__33278 = y;
var G__33279 = cljs.core.first(more);
var G__33280 = cljs.core.next(more);
x = G__33278;
y = G__33279;
more = G__33280;
continue;
} else {
return _EQ__EQ_.cljs$core$IFn$_invoke$arity$2(y,cljs.core.first(more));
}
} else {
return false;
}
break;
}
};
var G__33277 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__33281__i = 0, G__33281__a = new Array(arguments.length -  2);
while (G__33281__i < G__33281__a.length) {G__33281__a[G__33281__i] = arguments[G__33281__i + 2]; ++G__33281__i;}
  more = new cljs.core.IndexedSeq(G__33281__a,0);
} 
return G__33277__delegate.call(this,x,y,more);};
G__33277.cljs$lang$maxFixedArity = 2;
G__33277.cljs$lang$applyTo = (function (arglist__33282){
var x = cljs.core.first(arglist__33282);
arglist__33282 = cljs.core.next(arglist__33282);
var y = cljs.core.first(arglist__33282);
var more = cljs.core.rest(arglist__33282);
return G__33277__delegate(x,y,more);
});
G__33277.cljs$core$IFn$_invoke$arity$variadic = G__33277__delegate;
return G__33277;
})()
;
_EQ__EQ_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return _EQ__EQ___1.call(this,x);
case 2:
return _EQ__EQ___2.call(this,x,y);
default:
var G__33283 = null;
if (arguments.length > 2) {
var G__33284__i = 0, G__33284__a = new Array(arguments.length -  2);
while (G__33284__i < G__33284__a.length) {G__33284__a[G__33284__i] = arguments[G__33284__i + 2]; ++G__33284__i;}
G__33283 = new cljs.core.IndexedSeq(G__33284__a,0);
}
return _EQ__EQ___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__33283);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_EQ__EQ_.cljs$lang$maxFixedArity = 2;
_EQ__EQ_.cljs$lang$applyTo = _EQ__EQ___3.cljs$lang$applyTo;
_EQ__EQ_.cljs$core$IFn$_invoke$arity$1 = _EQ__EQ___1;
_EQ__EQ_.cljs$core$IFn$_invoke$arity$2 = _EQ__EQ___2;
_EQ__EQ_.cljs$core$IFn$_invoke$arity$variadic = _EQ__EQ___3.cljs$core$IFn$_invoke$arity$variadic;
return _EQ__EQ_;
})()
;
/**
* Returns true if num is greater than zero, else false
*/
cljs.core.pos_QMARK_ = (function pos_QMARK_(n){
return (n > (0));
});
cljs.core.zero_QMARK_ = (function zero_QMARK_(n){
return (n === (0));
});
/**
* Returns true if num is less than zero, else false
*/
cljs.core.neg_QMARK_ = (function neg_QMARK_(x){
return (x < (0));
});
/**
* Returns the nth next of coll, (seq coll) when n is 0.
*/
cljs.core.nthnext = (function nthnext(coll,n){
var n__$1 = n;
var xs = cljs.core.seq(coll);
while(true){
if((xs) && ((n__$1 > (0)))){
var G__33285 = (n__$1 - (1));
var G__33286 = cljs.core.next(xs);
n__$1 = G__33285;
xs = G__33286;
continue;
} else {
return xs;
}
break;
}
});
/**
* With no args, returns the empty string. With one arg x, returns
* x.toString().  (str nil) returns the empty string. With more than
* one arg, returns the concatenation of the str values of the args.
* @param {...*} var_args
*/
cljs.core.str = (function() {
var str = null;
var str__0 = (function (){
return "";
});
var str__1 = (function (x){
if((x == null)){
return "";
} else {
var G__33290 = x;
return goog.string.buildString(G__33290);
}
});
var str__2 = (function() { 
var G__33291__delegate = function (x,ys){
var sb = (new goog.string.StringBuffer(str.cljs$core$IFn$_invoke$arity$1(x)));
var more = ys;
while(true){
if(cljs.core.truth_(more)){
var G__33292 = sb.append(str.cljs$core$IFn$_invoke$arity$1(cljs.core.first(more)));
var G__33293 = cljs.core.next(more);
sb = G__33292;
more = G__33293;
continue;
} else {
return sb.toString();
}
break;
}
};
var G__33291 = function (x,var_args){
var ys = null;
if (arguments.length > 1) {
var G__33294__i = 0, G__33294__a = new Array(arguments.length -  1);
while (G__33294__i < G__33294__a.length) {G__33294__a[G__33294__i] = arguments[G__33294__i + 1]; ++G__33294__i;}
  ys = new cljs.core.IndexedSeq(G__33294__a,0);
} 
return G__33291__delegate.call(this,x,ys);};
G__33291.cljs$lang$maxFixedArity = 1;
G__33291.cljs$lang$applyTo = (function (arglist__33295){
var x = cljs.core.first(arglist__33295);
var ys = cljs.core.rest(arglist__33295);
return G__33291__delegate(x,ys);
});
G__33291.cljs$core$IFn$_invoke$arity$variadic = G__33291__delegate;
return G__33291;
})()
;
str = function(x,var_args){
var ys = var_args;
switch(arguments.length){
case 0:
return str__0.call(this);
case 1:
return str__1.call(this,x);
default:
var G__33296 = null;
if (arguments.length > 1) {
var G__33297__i = 0, G__33297__a = new Array(arguments.length -  1);
while (G__33297__i < G__33297__a.length) {G__33297__a[G__33297__i] = arguments[G__33297__i + 1]; ++G__33297__i;}
G__33296 = new cljs.core.IndexedSeq(G__33297__a,0);
}
return str__2.cljs$core$IFn$_invoke$arity$variadic(x, G__33296);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
str.cljs$lang$maxFixedArity = 1;
str.cljs$lang$applyTo = str__2.cljs$lang$applyTo;
str.cljs$core$IFn$_invoke$arity$0 = str__0;
str.cljs$core$IFn$_invoke$arity$1 = str__1;
str.cljs$core$IFn$_invoke$arity$variadic = str__2.cljs$core$IFn$_invoke$arity$variadic;
return str;
})()
;
/**
* Returns the substring of s beginning at start inclusive, and ending
* at end (defaults to length of string), exclusive.
*/
cljs.core.subs = (function() {
var subs = null;
var subs__2 = (function (s,start){
return s.substring(start);
});
var subs__3 = (function (s,start,end){
return s.substring(start,end);
});
subs = function(s,start,end){
switch(arguments.length){
case 2:
return subs__2.call(this,s,start);
case 3:
return subs__3.call(this,s,start,end);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
subs.cljs$core$IFn$_invoke$arity$2 = subs__2;
subs.cljs$core$IFn$_invoke$arity$3 = subs__3;
return subs;
})()
;

/**
* Assumes x is sequential. Returns true if x equals y, otherwise
* returns false.
*/
cljs.core.equiv_sequential = (function equiv_sequential(x,y){
return cljs.core.boolean$(((cljs.core.sequential_QMARK_(y))?(((cljs.core.counted_QMARK_(x)) && (cljs.core.counted_QMARK_(y)) && (!((cljs.core.count(x) === cljs.core.count(y)))))?false:(function (){var xs = cljs.core.seq(x);
var ys = cljs.core.seq(y);
while(true){
if((xs == null)){
return (ys == null);
} else {
if((ys == null)){
return false;
} else {
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.first(xs),cljs.core.first(ys))){
var G__33298 = cljs.core.next(xs);
var G__33299 = cljs.core.next(ys);
xs = G__33298;
ys = G__33299;
continue;
} else {
return false;

}
}
}
break;
}
})()):null));
});
cljs.core.hash_coll = (function hash_coll(coll){
if(cljs.core.seq(coll)){
var res = cljs.core.hash(cljs.core.first(coll));
var s = cljs.core.next(coll);
while(true){
if((s == null)){
return res;
} else {
var G__33300 = cljs.core.hash_combine(res,cljs.core.hash(cljs.core.first(s)));
var G__33301 = cljs.core.next(s);
res = G__33300;
s = G__33301;
continue;
}
break;
}
} else {
return (0);
}
});

cljs.core.hash_imap = (function hash_imap(m){
var h = (0);
var s = cljs.core.seq(m);
while(true){
if(s){
var e = cljs.core.first(s);
var G__33306 = ((h + (cljs.core.hash((function (){var G__33304 = e;
return (cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__33304) : cljs.core.key.call(null,G__33304));
})()) ^ cljs.core.hash((function (){var G__33305 = e;
return (cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(G__33305) : cljs.core.val.call(null,G__33305));
})()))) % (4503599627370496));
var G__33307 = cljs.core.next(s);
h = G__33306;
s = G__33307;
continue;
} else {
return h;
}
break;
}
});
cljs.core.hash_iset = (function hash_iset(s){
var h = (0);
var s__$1 = cljs.core.seq(s);
while(true){
if(s__$1){
var e = cljs.core.first(s__$1);
var G__33308 = ((h + cljs.core.hash(e)) % (4503599627370496));
var G__33309 = cljs.core.next(s__$1);
h = G__33308;
s__$1 = G__33309;
continue;
} else {
return h;
}
break;
}
});


/**
* Takes a JavaScript object and a map of names to functions and
* attaches said functions as methods on the object.  Any references to
* JavaScript's implicit this (via the this-as macro) will resolve to the
* object that the function is attached.
*/
cljs.core.extend_object_BANG_ = (function extend_object_BANG_(obj,fn_map){
var seq__33320_33330 = cljs.core.seq(fn_map);
var chunk__33321_33331 = null;
var count__33322_33332 = (0);
var i__33323_33333 = (0);
while(true){
if((i__33323_33333 < count__33322_33332)){
var vec__33324_33334 = chunk__33321_33331.cljs$core$IIndexed$_nth$arity$2(null,i__33323_33333);
var key_name_33335 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__33324_33334,(0),null);
var f_33336 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__33324_33334,(1),null);
var str_name_33337 = (function (){var G__33325 = key_name_33335;
return (cljs.core.name.cljs$core$IFn$_invoke$arity$1 ? cljs.core.name.cljs$core$IFn$_invoke$arity$1(G__33325) : cljs.core.name.call(null,G__33325));
})();
(obj[str_name_33337] = f_33336);

var G__33338 = seq__33320_33330;
var G__33339 = chunk__33321_33331;
var G__33340 = count__33322_33332;
var G__33341 = (i__33323_33333 + (1));
seq__33320_33330 = G__33338;
chunk__33321_33331 = G__33339;
count__33322_33332 = G__33340;
i__33323_33333 = G__33341;
continue;
} else {
var temp__4126__auto___33342 = cljs.core.seq(seq__33320_33330);
if(temp__4126__auto___33342){
var seq__33320_33343__$1 = temp__4126__auto___33342;
if(cljs.core.chunked_seq_QMARK_(seq__33320_33343__$1)){
var c__25059__auto___33344 = (function (){var G__33326 = seq__33320_33343__$1;
return (cljs.core.chunk_first.cljs$core$IFn$_invoke$arity$1 ? cljs.core.chunk_first.cljs$core$IFn$_invoke$arity$1(G__33326) : cljs.core.chunk_first.call(null,G__33326));
})();
var G__33345 = (function (){var G__33327 = seq__33320_33343__$1;
return (cljs.core.chunk_rest.cljs$core$IFn$_invoke$arity$1 ? cljs.core.chunk_rest.cljs$core$IFn$_invoke$arity$1(G__33327) : cljs.core.chunk_rest.call(null,G__33327));
})();
var G__33346 = c__25059__auto___33344;
var G__33347 = cljs.core.count(c__25059__auto___33344);
var G__33348 = (0);
seq__33320_33330 = G__33345;
chunk__33321_33331 = G__33346;
count__33322_33332 = G__33347;
i__33323_33333 = G__33348;
continue;
} else {
var vec__33328_33349 = cljs.core.first(seq__33320_33343__$1);
var key_name_33350 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__33328_33349,(0),null);
var f_33351 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__33328_33349,(1),null);
var str_name_33352 = (function (){var G__33329 = key_name_33350;
return (cljs.core.name.cljs$core$IFn$_invoke$arity$1 ? cljs.core.name.cljs$core$IFn$_invoke$arity$1(G__33329) : cljs.core.name.call(null,G__33329));
})();
(obj[str_name_33352] = f_33351);

var G__33353 = cljs.core.next(seq__33320_33343__$1);
var G__33354 = null;
var G__33355 = (0);
var G__33356 = (0);
seq__33320_33330 = G__33353;
chunk__33321_33331 = G__33354;
count__33322_33332 = G__33355;
i__33323_33333 = G__33356;
continue;
}
} else {
}
}
break;
}

return obj;
});

/**
* @constructor
*/
cljs.core.List = (function (meta,first,rest,count,__hash){
this.meta = meta;
this.first = first;
this.rest = rest;
this.count = count;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 65937646;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.List.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.List.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.List.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.List.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.List(self__.meta,self__.first,self__.rest,self__.count,self__.__hash));
});

cljs.core.List.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.count === (1))){
return null;
} else {
return self__.rest;
}
});

cljs.core.List.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.count;
});

cljs.core.List.prototype.cljs$core$IStack$_peek$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.first;
});

cljs.core.List.prototype.cljs$core$IStack$_pop$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._rest(coll__$1);
});

cljs.core.List.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__24693__auto__ = self__.__hash;
if(!((h__24693__auto__ == null))){
return h__24693__auto__;
} else {
var h__24693__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__24693__auto____$1;

return h__24693__auto____$1;
}
});

cljs.core.List.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.List.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.List.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.List.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.List.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.first;
});

cljs.core.List.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.count === (1))){
return cljs.core.List.EMPTY;
} else {
return self__.rest;
}
});

cljs.core.List.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.List.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.List(meta__$1,self__.first,self__.rest,self__.count,self__.__hash));
});

cljs.core.List.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.List(self__.meta,o,coll__$1,(self__.count + (1)),null));
});

cljs.core.List.cljs$lang$type = true;

cljs.core.List.cljs$lang$ctorStr = "cljs.core/List";

cljs.core.List.cljs$lang$ctorPrWriter = (function (this__24859__auto__,writer__24860__auto__,opt__24861__auto__){
return cljs.core._write(writer__24860__auto__,"cljs.core/List");
});

cljs.core.__GT_List = (function __GT_List(meta,first,rest,count,__hash){
return (new cljs.core.List(meta,first,rest,count,__hash));
});

(cljs.core.List.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__25250__auto__ = this;
return cljs.core.es6_iterator(this__25250__auto__);
}));

/**
* @constructor
*/
cljs.core.EmptyList = (function (meta){
this.meta = meta;
this.cljs$lang$protocol_mask$partition0$ = 65937614;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.EmptyList.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.EmptyList.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.EmptyList.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.EmptyList.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.EmptyList(self__.meta));
});

cljs.core.EmptyList.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return null;
});

cljs.core.EmptyList.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (0);
});

cljs.core.EmptyList.prototype.cljs$core$IStack$_peek$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return null;
});

cljs.core.EmptyList.prototype.cljs$core$IStack$_pop$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
throw (new Error("Can't pop empty list"));
});

cljs.core.EmptyList.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (0);
});

cljs.core.EmptyList.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.EmptyList.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.EmptyList.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.EmptyList.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.EmptyList.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return null;
});

cljs.core.EmptyList.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.List.EMPTY;
});

cljs.core.EmptyList.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return null;
});

cljs.core.EmptyList.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.EmptyList(meta__$1));
});

cljs.core.EmptyList.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.List(self__.meta,o,null,(1),null));
});

cljs.core.EmptyList.cljs$lang$type = true;

cljs.core.EmptyList.cljs$lang$ctorStr = "cljs.core/EmptyList";

cljs.core.EmptyList.cljs$lang$ctorPrWriter = (function (this__24859__auto__,writer__24860__auto__,opt__24861__auto__){
return cljs.core._write(writer__24860__auto__,"cljs.core/EmptyList");
});

cljs.core.__GT_EmptyList = (function __GT_EmptyList(meta){
return (new cljs.core.EmptyList(meta));
});

cljs.core.List.EMPTY = (new cljs.core.EmptyList(null));
(cljs.core.EmptyList.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__25250__auto__ = this;
return cljs.core.es6_iterator(this__25250__auto__);
}));
cljs.core.reversible_QMARK_ = (function reversible_QMARK_(coll){
var G__33358 = coll;
if(G__33358){
var bit__24953__auto__ = (G__33358.cljs$lang$protocol_mask$partition0$ & (134217728));
if((bit__24953__auto__) || (G__33358.cljs$core$IReversible$)){
return true;
} else {
if((!G__33358.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IReversible,G__33358);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IReversible,G__33358);
}
});
cljs.core.rseq = (function rseq(coll){
return cljs.core._rseq(coll);
});
/**
* Returns a seq of the items in coll in reverse order. Not lazy.
*/
cljs.core.reverse = (function reverse(coll){
if(cljs.core.reversible_QMARK_(coll)){
return cljs.core.rseq(coll);
} else {
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.conj,cljs.core.List.EMPTY,coll);
}
});
/**
* @param {...*} var_args
*/
cljs.core.list = (function() { 
var list__delegate = function (xs){
var arr = ((((xs instanceof cljs.core.IndexedSeq)) && ((xs.i === (0))))?xs.arr:(function (){var arr = [];
var xs__$1 = xs;
while(true){
if(!((xs__$1 == null))){
arr.push(xs__$1.cljs$core$ISeq$_first$arity$1(null));

var G__33359 = xs__$1.cljs$core$INext$_next$arity$1(null);
xs__$1 = G__33359;
continue;
} else {
return arr;
}
break;
}
})());
var i = arr.length;
var r = cljs.core.List.EMPTY;
while(true){
if((i > (0))){
var G__33360 = (i - (1));
var G__33361 = r.cljs$core$ICollection$_conj$arity$2(null,(arr[(i - (1))]));
i = G__33360;
r = G__33361;
continue;
} else {
return r;
}
break;
}
};
var list = function (var_args){
var xs = null;
if (arguments.length > 0) {
var G__33362__i = 0, G__33362__a = new Array(arguments.length -  0);
while (G__33362__i < G__33362__a.length) {G__33362__a[G__33362__i] = arguments[G__33362__i + 0]; ++G__33362__i;}
  xs = new cljs.core.IndexedSeq(G__33362__a,0);
} 
return list__delegate.call(this,xs);};
list.cljs$lang$maxFixedArity = 0;
list.cljs$lang$applyTo = (function (arglist__33363){
var xs = cljs.core.seq(arglist__33363);
return list__delegate(xs);
});
list.cljs$core$IFn$_invoke$arity$variadic = list__delegate;
return list;
})()
;

/**
* @constructor
*/
cljs.core.Cons = (function (meta,first,rest,__hash){
this.meta = meta;
this.first = first;
this.rest = rest;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 65929452;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.Cons.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.Cons.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.Cons.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.Cons.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.Cons(self__.meta,self__.first,self__.rest,self__.__hash));
});

cljs.core.Cons.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.rest == null)){
return null;
} else {
return cljs.core.seq(self__.rest);
}
});

cljs.core.Cons.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__24693__auto__ = self__.__hash;
if(!((h__24693__auto__ == null))){
return h__24693__auto__;
} else {
var h__24693__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__24693__auto____$1;

return h__24693__auto____$1;
}
});

cljs.core.Cons.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.Cons.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.Cons.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.Cons.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.Cons.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.first;
});

cljs.core.Cons.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.rest == null)){
return cljs.core.List.EMPTY;
} else {
return self__.rest;
}
});

cljs.core.Cons.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.Cons.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.Cons(meta__$1,self__.first,self__.rest,self__.__hash));
});

cljs.core.Cons.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.Cons(null,o,coll__$1,self__.__hash));
});

cljs.core.Cons.cljs$lang$type = true;

cljs.core.Cons.cljs$lang$ctorStr = "cljs.core/Cons";

cljs.core.Cons.cljs$lang$ctorPrWriter = (function (this__24859__auto__,writer__24860__auto__,opt__24861__auto__){
return cljs.core._write(writer__24860__auto__,"cljs.core/Cons");
});

cljs.core.__GT_Cons = (function __GT_Cons(meta,first,rest,__hash){
return (new cljs.core.Cons(meta,first,rest,__hash));
});

(cljs.core.Cons.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__25250__auto__ = this;
return cljs.core.es6_iterator(this__25250__auto__);
}));
/**
* Returns a new seq where x is the first element and seq is the rest.
*/
cljs.core.cons = (function cons(x,coll){
if((function (){var or__24272__auto__ = (coll == null);
if(or__24272__auto__){
return or__24272__auto__;
} else {
var G__33367 = coll;
if(G__33367){
var bit__24946__auto__ = (G__33367.cljs$lang$protocol_mask$partition0$ & (64));
if((bit__24946__auto__) || (G__33367.cljs$core$ISeq$)){
return true;
} else {
return false;
}
} else {
return false;
}
}
})()){
return (new cljs.core.Cons(null,x,coll,null));
} else {
return (new cljs.core.Cons(null,x,cljs.core.seq(coll),null));
}
});
cljs.core.list_QMARK_ = (function list_QMARK_(x){
var G__33369 = x;
if(G__33369){
var bit__24953__auto__ = (G__33369.cljs$lang$protocol_mask$partition0$ & (33554432));
if((bit__24953__auto__) || (G__33369.cljs$core$IList$)){
return true;
} else {
if((!G__33369.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IList,G__33369);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IList,G__33369);
}
});
cljs.core.hash_keyword = (function hash_keyword(k){
return ((cljs.core.hash_symbol(k) + (2654435769)) | (0));
});
cljs.core.compare_keywords = (function compare_keywords(a,b){
if((a.fqn === b.fqn)){
return (0);
} else {
if(cljs.core.truth_((function (){var and__24260__auto__ = cljs.core.not(a.ns);
if(and__24260__auto__){
return b.ns;
} else {
return and__24260__auto__;
}
})())){
return (-1);
} else {
if(cljs.core.truth_(a.ns)){
if(cljs.core.not(b.ns)){
return (1);
} else {
var nsc = (function (){var G__33376 = a.ns;
var G__33377 = b.ns;
return goog.array.defaultCompare(G__33376,G__33377);
})();
if(((0) === nsc)){
var G__33378 = a.name;
var G__33379 = b.name;
return goog.array.defaultCompare(G__33378,G__33379);
} else {
return nsc;
}
}
} else {
var G__33380 = a.name;
var G__33381 = b.name;
return goog.array.defaultCompare(G__33380,G__33381);

}
}
}
});

/**
* @constructor
*/
cljs.core.Keyword = (function (ns,name,fqn,_hash){
this.ns = ns;
this.name = name;
this.fqn = fqn;
this._hash = _hash;
this.cljs$lang$protocol_mask$partition0$ = 2153775105;
this.cljs$lang$protocol_mask$partition1$ = 4096;
})
cljs.core.Keyword.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (o,writer,_){
var self__ = this;
var o__$1 = this;
return cljs.core._write(writer,[cljs.core.str(":"),cljs.core.str(self__.fqn)].join(''));
});

cljs.core.Keyword.prototype.cljs$core$INamed$_name$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.name;
});

cljs.core.Keyword.prototype.cljs$core$INamed$_namespace$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.ns;
});

cljs.core.Keyword.prototype.cljs$core$IHash$_hash$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
var h__24693__auto__ = self__._hash;
if(!((h__24693__auto__ == null))){
return h__24693__auto__;
} else {
var h__24693__auto____$1 = cljs.core.hash_keyword(this$__$1);
self__._hash = h__24693__auto____$1;

return h__24693__auto____$1;
}
});

cljs.core.Keyword.prototype.call = (function() {
var G__33383 = null;
var G__33383__2 = (function (self__,coll){
var self__ = this;
var self____$1 = this;
var kw = self____$1;
return cljs.core.get.cljs$core$IFn$_invoke$arity$2(coll,kw);
});
var G__33383__3 = (function (self__,coll,not_found){
var self__ = this;
var self____$1 = this;
var kw = self____$1;
return cljs.core.get.cljs$core$IFn$_invoke$arity$3(coll,kw,not_found);
});
G__33383 = function(self__,coll,not_found){
switch(arguments.length){
case 2:
return G__33383__2.call(this,self__,coll);
case 3:
return G__33383__3.call(this,self__,coll,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__33383.cljs$core$IFn$_invoke$arity$2 = G__33383__2;
G__33383.cljs$core$IFn$_invoke$arity$3 = G__33383__3;
return G__33383;
})()
;

cljs.core.Keyword.prototype.apply = (function (self__,args33382){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args33382)));
});

cljs.core.Keyword.prototype.cljs$core$IFn$_invoke$arity$1 = (function (coll){
var self__ = this;
var kw = this;
return cljs.core.get.cljs$core$IFn$_invoke$arity$2(coll,kw);
});

cljs.core.Keyword.prototype.cljs$core$IFn$_invoke$arity$2 = (function (coll,not_found){
var self__ = this;
var kw = this;
return cljs.core.get.cljs$core$IFn$_invoke$arity$3(coll,kw,not_found);
});

cljs.core.Keyword.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (_,other){
var self__ = this;
var ___$1 = this;
if((other instanceof cljs.core.Keyword)){
return (self__.fqn === other.fqn);
} else {
return false;
}
});

cljs.core.Keyword.prototype.toString = (function (){
var self__ = this;
var _ = this;
return [cljs.core.str(":"),cljs.core.str(self__.fqn)].join('');
});

cljs.core.Keyword.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.Keyword.cljs$lang$type = true;

cljs.core.Keyword.cljs$lang$ctorStr = "cljs.core/Keyword";

cljs.core.Keyword.cljs$lang$ctorPrWriter = (function (this__24859__auto__,writer__24860__auto__,opt__24861__auto__){
return cljs.core._write(writer__24860__auto__,"cljs.core/Keyword");
});

cljs.core.__GT_Keyword = (function __GT_Keyword(ns,name,fqn,_hash){
return (new cljs.core.Keyword(ns,name,fqn,_hash));
});

cljs.core.keyword_QMARK_ = (function keyword_QMARK_(x){
return (x instanceof cljs.core.Keyword);
});
cljs.core.keyword_identical_QMARK_ = (function keyword_identical_QMARK_(x,y){
if((x === y)){
return true;
} else {
if(((x instanceof cljs.core.Keyword)) && ((y instanceof cljs.core.Keyword))){
return (x.fqn === y.fqn);
} else {
return false;
}
}
});
/**
* Returns the namespace String of a symbol or keyword, or nil if not present.
*/
cljs.core.namespace = (function namespace(x){
if((function (){var G__33385 = x;
if(G__33385){
var bit__24946__auto__ = (G__33385.cljs$lang$protocol_mask$partition1$ & (4096));
if((bit__24946__auto__) || (G__33385.cljs$core$INamed$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return x.cljs$core$INamed$_namespace$arity$1(null);
} else {
throw (new Error([cljs.core.str("Doesn't support namespace: "),cljs.core.str(x)].join('')));
}
});
/**
* Returns a Keyword with the given namespace and name.  Do not use :
* in the keyword strings, it will be added automatically.
*/
cljs.core.keyword = (function() {
var keyword = null;
var keyword__1 = (function (name){
if((name instanceof cljs.core.Keyword)){
return name;
} else {
if((name instanceof cljs.core.Symbol)){
return (new cljs.core.Keyword(cljs.core.namespace(name),(function (){var G__33387 = name;
return (cljs.core.name.cljs$core$IFn$_invoke$arity$1 ? cljs.core.name.cljs$core$IFn$_invoke$arity$1(G__33387) : cljs.core.name.call(null,G__33387));
})(),name.str,null));
} else {
if(typeof name === 'string'){
var parts = name.split("/");
if((parts.length === (2))){
return (new cljs.core.Keyword((parts[(0)]),(parts[(1)]),name,null));
} else {
return (new cljs.core.Keyword(null,(parts[(0)]),name,null));
}
} else {
return null;
}
}
}
});
var keyword__2 = (function (ns,name){
return (new cljs.core.Keyword(ns,name,[cljs.core.str((cljs.core.truth_(ns)?[cljs.core.str(ns),cljs.core.str("/")].join(''):null)),cljs.core.str(name)].join(''),null));
});
keyword = function(ns,name){
switch(arguments.length){
case 1:
return keyword__1.call(this,ns);
case 2:
return keyword__2.call(this,ns,name);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
keyword.cljs$core$IFn$_invoke$arity$1 = keyword__1;
keyword.cljs$core$IFn$_invoke$arity$2 = keyword__2;
return keyword;
})()
;

/**
* @constructor
*/
cljs.core.LazySeq = (function (meta,fn,s,__hash){
this.meta = meta;
this.fn = fn;
this.s = s;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32374988;
})
cljs.core.LazySeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.LazySeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.LazySeq.prototype.sval = (function (){
var self__ = this;
var coll = this;
if((self__.fn == null)){
return self__.s;
} else {
self__.s = (function (){return (self__.fn.cljs$core$IFn$_invoke$arity$0 ? self__.fn.cljs$core$IFn$_invoke$arity$0() : self__.fn.call(null));
})();

self__.fn = null;

return self__.s;
}
});

cljs.core.LazySeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.LazySeq.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
cljs.core._seq(coll__$1);

if((self__.s == null)){
return null;
} else {
return cljs.core.next(self__.s);
}
});

cljs.core.LazySeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__24693__auto__ = self__.__hash;
if(!((h__24693__auto__ == null))){
return h__24693__auto__;
} else {
var h__24693__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__24693__auto____$1;

return h__24693__auto____$1;
}
});

cljs.core.LazySeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.LazySeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.LazySeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.LazySeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.LazySeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
cljs.core._seq(coll__$1);

if((self__.s == null)){
return null;
} else {
return cljs.core.first(self__.s);
}
});

cljs.core.LazySeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
cljs.core._seq(coll__$1);

if(!((self__.s == null))){
return cljs.core.rest(self__.s);
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.LazySeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
coll__$1.sval();

if((self__.s == null)){
return null;
} else {
var ls = self__.s;
while(true){
if((ls instanceof cljs.core.LazySeq)){
var G__33388 = ls.sval();
ls = G__33388;
continue;
} else {
self__.s = ls;

return cljs.core.seq(self__.s);
}
break;
}
}
});

cljs.core.LazySeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.LazySeq(meta__$1,self__.fn,self__.s,self__.__hash));
});

cljs.core.LazySeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.LazySeq.cljs$lang$type = true;

cljs.core.LazySeq.cljs$lang$ctorStr = "cljs.core/LazySeq";

cljs.core.LazySeq.cljs$lang$ctorPrWriter = (function (this__24859__auto__,writer__24860__auto__,opt__24861__auto__){
return cljs.core._write(writer__24860__auto__,"cljs.core/LazySeq");
});

cljs.core.__GT_LazySeq = (function __GT_LazySeq(meta,fn,s,__hash){
return (new cljs.core.LazySeq(meta,fn,s,__hash));
});

(cljs.core.LazySeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__25250__auto__ = this;
return cljs.core.es6_iterator(this__25250__auto__);
}));

/**
* @constructor
*/
cljs.core.ChunkBuffer = (function (buf,end){
this.buf = buf;
this.end = end;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 2;
})
cljs.core.ChunkBuffer.prototype.cljs$core$ICounted$_count$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.end;
});

cljs.core.ChunkBuffer.prototype.add = (function (o){
var self__ = this;
var _ = this;
(self__.buf[self__.end] = o);

return self__.end = (self__.end + (1));
});

cljs.core.ChunkBuffer.prototype.chunk = (function (o){
var self__ = this;
var _ = this;
var ret = (new cljs.core.ArrayChunk(self__.buf,(0),self__.end));
self__.buf = null;

return ret;
});

cljs.core.ChunkBuffer.cljs$lang$type = true;

cljs.core.ChunkBuffer.cljs$lang$ctorStr = "cljs.core/ChunkBuffer";

cljs.core.ChunkBuffer.cljs$lang$ctorPrWriter = (function (this__24859__auto__,writer__24860__auto__,opt__24861__auto__){
return cljs.core._write(writer__24860__auto__,"cljs.core/ChunkBuffer");
});

cljs.core.__GT_ChunkBuffer = (function __GT_ChunkBuffer(buf,end){
return (new cljs.core.ChunkBuffer(buf,end));
});

cljs.core.chunk_buffer = (function chunk_buffer(capacity){
return (new cljs.core.ChunkBuffer((new Array(capacity)),(0)));
});

/**
* @constructor
*/
cljs.core.ArrayChunk = (function (arr,off,end){
this.arr = arr;
this.off = off;
this.end = end;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 524306;
})
cljs.core.ArrayChunk.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4(self__.arr,f,(self__.arr[self__.off]),(self__.off + (1)));
});

cljs.core.ArrayChunk.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4(self__.arr,f,start,self__.off);
});

cljs.core.ArrayChunk.prototype.cljs$core$IChunk$ = true;

cljs.core.ArrayChunk.prototype.cljs$core$IChunk$_drop_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.off === self__.end)){
throw (new Error("-drop-first of empty chunk"));
} else {
return (new cljs.core.ArrayChunk(self__.arr,(self__.off + (1)),self__.end));
}
});

cljs.core.ArrayChunk.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (coll,i){
var self__ = this;
var coll__$1 = this;
return (self__.arr[(self__.off + i)]);
});

cljs.core.ArrayChunk.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (coll,i,not_found){
var self__ = this;
var coll__$1 = this;
if(((i >= (0))) && ((i < (self__.end - self__.off)))){
return (self__.arr[(self__.off + i)]);
} else {
return not_found;
}
});

cljs.core.ArrayChunk.prototype.cljs$core$ICounted$_count$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (self__.end - self__.off);
});

cljs.core.ArrayChunk.cljs$lang$type = true;

cljs.core.ArrayChunk.cljs$lang$ctorStr = "cljs.core/ArrayChunk";

cljs.core.ArrayChunk.cljs$lang$ctorPrWriter = (function (this__24859__auto__,writer__24860__auto__,opt__24861__auto__){
return cljs.core._write(writer__24860__auto__,"cljs.core/ArrayChunk");
});

cljs.core.__GT_ArrayChunk = (function __GT_ArrayChunk(arr,off,end){
return (new cljs.core.ArrayChunk(arr,off,end));
});

cljs.core.array_chunk = (function() {
var array_chunk = null;
var array_chunk__1 = (function (arr){
return (new cljs.core.ArrayChunk(arr,(0),arr.length));
});
var array_chunk__2 = (function (arr,off){
return (new cljs.core.ArrayChunk(arr,off,arr.length));
});
var array_chunk__3 = (function (arr,off,end){
return (new cljs.core.ArrayChunk(arr,off,end));
});
array_chunk = function(arr,off,end){
switch(arguments.length){
case 1:
return array_chunk__1.call(this,arr);
case 2:
return array_chunk__2.call(this,arr,off);
case 3:
return array_chunk__3.call(this,arr,off,end);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
array_chunk.cljs$core$IFn$_invoke$arity$1 = array_chunk__1;
array_chunk.cljs$core$IFn$_invoke$arity$2 = array_chunk__2;
array_chunk.cljs$core$IFn$_invoke$arity$3 = array_chunk__3;
return array_chunk;
})()
;

/**
* @constructor
*/
cljs.core.ChunkedCons = (function (chunk,more,meta,__hash){
this.chunk = chunk;
this.more = more;
this.meta = meta;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 31850732;
this.cljs$lang$protocol_mask$partition1$ = 1536;
})
cljs.core.ChunkedCons.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.ChunkedCons.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.ChunkedCons.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.ChunkedCons.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((cljs.core._count(self__.chunk) > (1))){
return (new cljs.core.ChunkedCons(cljs.core._drop_first(self__.chunk),self__.more,self__.meta,null));
} else {
var more__$1 = cljs.core._seq(self__.more);
if((more__$1 == null)){
return null;
} else {
return more__$1;
}
}
});

cljs.core.ChunkedCons.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__24693__auto__ = self__.__hash;
if(!((h__24693__auto__ == null))){
return h__24693__auto__;
} else {
var h__24693__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__24693__auto____$1;

return h__24693__auto____$1;
}
});

cljs.core.ChunkedCons.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.ChunkedCons.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.ChunkedCons.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.chunk,(0));
});

cljs.core.ChunkedCons.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((cljs.core._count(self__.chunk) > (1))){
return (new cljs.core.ChunkedCons(cljs.core._drop_first(self__.chunk),self__.more,self__.meta,null));
} else {
if((self__.more == null)){
return cljs.core.List.EMPTY;
} else {
return self__.more;
}
}
});

cljs.core.ChunkedCons.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.ChunkedCons.prototype.cljs$core$IChunkedSeq$_chunked_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.chunk;
});

cljs.core.ChunkedCons.prototype.cljs$core$IChunkedSeq$_chunked_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.more == null)){
return cljs.core.List.EMPTY;
} else {
return self__.more;
}
});

cljs.core.ChunkedCons.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,m){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.ChunkedCons(self__.chunk,self__.more,m,self__.__hash));
});

cljs.core.ChunkedCons.prototype.cljs$core$ICollection$_conj$arity$2 = (function (this$,o){
var self__ = this;
var this$__$1 = this;
return cljs.core.cons(o,this$__$1);
});

cljs.core.ChunkedCons.prototype.cljs$core$IChunkedNext$_chunked_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.more == null)){
return null;
} else {
return self__.more;
}
});

cljs.core.ChunkedCons.cljs$lang$type = true;

cljs.core.ChunkedCons.cljs$lang$ctorStr = "cljs.core/ChunkedCons";

cljs.core.ChunkedCons.cljs$lang$ctorPrWriter = (function (this__24859__auto__,writer__24860__auto__,opt__24861__auto__){
return cljs.core._write(writer__24860__auto__,"cljs.core/ChunkedCons");
});

cljs.core.__GT_ChunkedCons = (function __GT_ChunkedCons(chunk,more,meta,__hash){
return (new cljs.core.ChunkedCons(chunk,more,meta,__hash));
});

(cljs.core.ChunkedCons.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__25250__auto__ = this;
return cljs.core.es6_iterator(this__25250__auto__);
}));
cljs.core.chunk_cons = (function chunk_cons(chunk,rest){
if((cljs.core._count(chunk) === (0))){
return rest;
} else {
return (new cljs.core.ChunkedCons(chunk,rest,null,null));
}
});
cljs.core.chunk_append = (function chunk_append(b,x){
return b.add(x);
});
cljs.core.chunk = (function chunk(b){
return b.chunk();
});
cljs.core.chunk_first = (function chunk_first(s){
return cljs.core._chunked_first(s);
});
cljs.core.chunk_rest = (function chunk_rest(s){
return cljs.core._chunked_rest(s);
});
cljs.core.chunk_next = (function chunk_next(s){
if((function (){var G__33390 = s;
if(G__33390){
var bit__24946__auto__ = (G__33390.cljs$lang$protocol_mask$partition1$ & (1024));
if((bit__24946__auto__) || (G__33390.cljs$core$IChunkedNext$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return cljs.core._chunked_next(s);
} else {
return cljs.core.seq(cljs.core._chunked_rest(s));
}
});
/**
* Naive impl of to-array as a start.
*/
cljs.core.to_array = (function to_array(s){
var ary = [];
var s__$1 = s;
while(true){
if(cljs.core.seq(s__$1)){
ary.push(cljs.core.first(s__$1));

var G__33391 = cljs.core.next(s__$1);
s__$1 = G__33391;
continue;
} else {
return ary;
}
break;
}
});
/**
* Returns a (potentially-ragged) 2-dimensional array
* containing the contents of coll.
*/
cljs.core.to_array_2d = (function to_array_2d(coll){
var ret = (new Array(cljs.core.count(coll)));
var i_33392 = (0);
var xs_33393 = cljs.core.seq(coll);
while(true){
if(xs_33393){
(ret[i_33392] = cljs.core.to_array(cljs.core.first(xs_33393)));

var G__33394 = (i_33392 + (1));
var G__33395 = cljs.core.next(xs_33393);
i_33392 = G__33394;
xs_33393 = G__33395;
continue;
} else {
}
break;
}

return ret;
});
cljs.core.int_array = (function() {
var int_array = null;
var int_array__1 = (function (size_or_seq){
if(typeof size_or_seq === 'number'){
return int_array.cljs$core$IFn$_invoke$arity$2(size_or_seq,null);
} else {
return cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(size_or_seq);
}
});
var int_array__2 = (function (size,init_val_or_seq){
var a = (new Array(size));
if(cljs.core.seq_QMARK_(init_val_or_seq)){
var s = cljs.core.seq(init_val_or_seq);
var i = (0);
var s__$1 = s;
while(true){
if((s__$1) && ((i < size))){
(a[i] = cljs.core.first(s__$1));

var G__33398 = (i + (1));
var G__33399 = cljs.core.next(s__$1);
i = G__33398;
s__$1 = G__33399;
continue;
} else {
return a;
}
break;
}
} else {
var n__25159__auto___33400 = size;
var i_33401 = (0);
while(true){
if((i_33401 < n__25159__auto___33400)){
(a[i_33401] = init_val_or_seq);

var G__33402 = (i_33401 + (1));
i_33401 = G__33402;
continue;
} else {
}
break;
}

return a;
}
});
int_array = function(size,init_val_or_seq){
switch(arguments.length){
case 1:
return int_array__1.call(this,size);
case 2:
return int_array__2.call(this,size,init_val_or_seq);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
int_array.cljs$core$IFn$_invoke$arity$1 = int_array__1;
int_array.cljs$core$IFn$_invoke$arity$2 = int_array__2;
return int_array;
})()
;
cljs.core.long_array = (function() {
var long_array = null;
var long_array__1 = (function (size_or_seq){
if(typeof size_or_seq === 'number'){
return long_array.cljs$core$IFn$_invoke$arity$2(size_or_seq,null);
} else {
return cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(size_or_seq);
}
});
var long_array__2 = (function (size,init_val_or_seq){
var a = (new Array(size));
if(cljs.core.seq_QMARK_(init_val_or_seq)){
var s = cljs.core.seq(init_val_or_seq);
var i = (0);
var s__$1 = s;
while(true){
if((s__$1) && ((i < size))){
(a[i] = cljs.core.first(s__$1));

var G__33405 = (i + (1));
var G__33406 = cljs.core.next(s__$1);
i = G__33405;
s__$1 = G__33406;
continue;
} else {
return a;
}
break;
}
} else {
var n__25159__auto___33407 = size;
var i_33408 = (0);
while(true){
if((i_33408 < n__25159__auto___33407)){
(a[i_33408] = init_val_or_seq);

var G__33409 = (i_33408 + (1));
i_33408 = G__33409;
continue;
} else {
}
break;
}

return a;
}
});
long_array = function(size,init_val_or_seq){
switch(arguments.length){
case 1:
return long_array__1.call(this,size);
case 2:
return long_array__2.call(this,size,init_val_or_seq);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
long_array.cljs$core$IFn$_invoke$arity$1 = long_array__1;
long_array.cljs$core$IFn$_invoke$arity$2 = long_array__2;
return long_array;
})()
;
cljs.core.double_array = (function() {
var double_array = null;
var double_array__1 = (function (size_or_seq){
if(typeof size_or_seq === 'number'){
return double_array.cljs$core$IFn$_invoke$arity$2(size_or_seq,null);
} else {
return cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(size_or_seq);
}
});
var double_array__2 = (function (size,init_val_or_seq){
var a = (new Array(size));
if(cljs.core.seq_QMARK_(init_val_or_seq)){
var s = cljs.core.seq(init_val_or_seq);
var i = (0);
var s__$1 = s;
while(true){
if((s__$1) && ((i < size))){
(a[i] = cljs.core.first(s__$1));

var G__33412 = (i + (1));
var G__33413 = cljs.core.next(s__$1);
i = G__33412;
s__$1 = G__33413;
continue;
} else {
return a;
}
break;
}
} else {
var n__25159__auto___33414 = size;
var i_33415 = (0);
while(true){
if((i_33415 < n__25159__auto___33414)){
(a[i_33415] = init_val_or_seq);

var G__33416 = (i_33415 + (1));
i_33415 = G__33416;
continue;
} else {
}
break;
}

return a;
}
});
double_array = function(size,init_val_or_seq){
switch(arguments.length){
case 1:
return double_array__1.call(this,size);
case 2:
return double_array__2.call(this,size,init_val_or_seq);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
double_array.cljs$core$IFn$_invoke$arity$1 = double_array__1;
double_array.cljs$core$IFn$_invoke$arity$2 = double_array__2;
return double_array;
})()
;
cljs.core.object_array = (function() {
var object_array = null;
var object_array__1 = (function (size_or_seq){
if(typeof size_or_seq === 'number'){
return object_array.cljs$core$IFn$_invoke$arity$2(size_or_seq,null);
} else {
return cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(size_or_seq);
}
});
var object_array__2 = (function (size,init_val_or_seq){
var a = (new Array(size));
if(cljs.core.seq_QMARK_(init_val_or_seq)){
var s = cljs.core.seq(init_val_or_seq);
var i = (0);
var s__$1 = s;
while(true){
if((s__$1) && ((i < size))){
(a[i] = cljs.core.first(s__$1));

var G__33419 = (i + (1));
var G__33420 = cljs.core.next(s__$1);
i = G__33419;
s__$1 = G__33420;
continue;
} else {
return a;
}
break;
}
} else {
var n__25159__auto___33421 = size;
var i_33422 = (0);
while(true){
if((i_33422 < n__25159__auto___33421)){
(a[i_33422] = init_val_or_seq);

var G__33423 = (i_33422 + (1));
i_33422 = G__33423;
continue;
} else {
}
break;
}

return a;
}
});
object_array = function(size,init_val_or_seq){
switch(arguments.length){
case 1:
return object_array__1.call(this,size);
case 2:
return object_array__2.call(this,size,init_val_or_seq);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
object_array.cljs$core$IFn$_invoke$arity$1 = object_array__1;
object_array.cljs$core$IFn$_invoke$arity$2 = object_array__2;
return object_array;
})()
;
cljs.core.bounded_count = (function bounded_count(s,n){
if(cljs.core.counted_QMARK_(s)){
return cljs.core.count(s);
} else {
var s__$1 = s;
var i = n;
var sum = (0);
while(true){
if(((i > (0))) && (cljs.core.seq(s__$1))){
var G__33424 = cljs.core.next(s__$1);
var G__33425 = (i - (1));
var G__33426 = (sum + (1));
s__$1 = G__33424;
i = G__33425;
sum = G__33426;
continue;
} else {
return sum;
}
break;
}
}
});
cljs.core.spread = (function spread(arglist){
if((arglist == null)){
return null;
} else {
if((cljs.core.next(arglist) == null)){
return cljs.core.seq(cljs.core.first(arglist));
} else {
return cljs.core.cons(cljs.core.first(arglist),spread(cljs.core.next(arglist)));

}
}
});
/**
* Returns a lazy seq representing the concatenation of the elements in the supplied colls.
* @param {...*} var_args
*/
cljs.core.concat = (function() {
var concat = null;
var concat__0 = (function (){
return (new cljs.core.LazySeq(null,(function (){
return null;
}),null,null));
});
var concat__1 = (function (x){
return (new cljs.core.LazySeq(null,(function (){
return x;
}),null,null));
});
var concat__2 = (function (x,y){
return (new cljs.core.LazySeq(null,(function (){
var s = cljs.core.seq(x);
if(s){
if(cljs.core.chunked_seq_QMARK_(s)){
return cljs.core.chunk_cons(cljs.core.chunk_first(s),concat.cljs$core$IFn$_invoke$arity$2(cljs.core.chunk_rest(s),y));
} else {
return cljs.core.cons(cljs.core.first(s),concat.cljs$core$IFn$_invoke$arity$2(cljs.core.rest(s),y));
}
} else {
return y;
}
}),null,null));
});
var concat__3 = (function() { 
var G__33446__delegate = function (x,y,zs){
var cat = (function cat(xys,zs__$1){
return (new cljs.core.LazySeq(null,(function (){
var xys__$1 = cljs.core.seq(xys);
if(xys__$1){
if(cljs.core.chunked_seq_QMARK_(xys__$1)){
return cljs.core.chunk_cons(cljs.core.chunk_first(xys__$1),cat(cljs.core.chunk_rest(xys__$1),zs__$1));
} else {
return cljs.core.cons(cljs.core.first(xys__$1),cat(cljs.core.rest(xys__$1),zs__$1));
}
} else {
if(cljs.core.truth_(zs__$1)){
return cat(cljs.core.first(zs__$1),cljs.core.next(zs__$1));
} else {
return null;
}
}
}),null,null));
});
return cat(concat.cljs$core$IFn$_invoke$arity$2(x,y),zs);
};
var G__33446 = function (x,y,var_args){
var zs = null;
if (arguments.length > 2) {
var G__33447__i = 0, G__33447__a = new Array(arguments.length -  2);
while (G__33447__i < G__33447__a.length) {G__33447__a[G__33447__i] = arguments[G__33447__i + 2]; ++G__33447__i;}
  zs = new cljs.core.IndexedSeq(G__33447__a,0);
} 
return G__33446__delegate.call(this,x,y,zs);};
G__33446.cljs$lang$maxFixedArity = 2;
G__33446.cljs$lang$applyTo = (function (arglist__33448){
var x = cljs.core.first(arglist__33448);
arglist__33448 = cljs.core.next(arglist__33448);
var y = cljs.core.first(arglist__33448);
var zs = cljs.core.rest(arglist__33448);
return G__33446__delegate(x,y,zs);
});
G__33446.cljs$core$IFn$_invoke$arity$variadic = G__33446__delegate;
return G__33446;
})()
;
concat = function(x,y,var_args){
var zs = var_args;
switch(arguments.length){
case 0:
return concat__0.call(this);
case 1:
return concat__1.call(this,x);
case 2:
return concat__2.call(this,x,y);
default:
var G__33449 = null;
if (arguments.length > 2) {
var G__33450__i = 0, G__33450__a = new Array(arguments.length -  2);
while (G__33450__i < G__33450__a.length) {G__33450__a[G__33450__i] = arguments[G__33450__i + 2]; ++G__33450__i;}
G__33449 = new cljs.core.IndexedSeq(G__33450__a,0);
}
return concat__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__33449);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
concat.cljs$lang$maxFixedArity = 2;
concat.cljs$lang$applyTo = concat__3.cljs$lang$applyTo;
concat.cljs$core$IFn$_invoke$arity$0 = concat__0;
concat.cljs$core$IFn$_invoke$arity$1 = concat__1;
concat.cljs$core$IFn$_invoke$arity$2 = concat__2;
concat.cljs$core$IFn$_invoke$arity$variadic = concat__3.cljs$core$IFn$_invoke$arity$variadic;
return concat;
})()
;
/**
* Creates a new list containing the items prepended to the rest, the
* last of which will be treated as a sequence.
* @param {...*} var_args
*/
cljs.core.list_STAR_ = (function() {
var list_STAR_ = null;
var list_STAR___1 = (function (args){
return cljs.core.seq(args);
});
var list_STAR___2 = (function (a,args){
return cljs.core.cons(a,args);
});
var list_STAR___3 = (function (a,b,args){
return cljs.core.cons(a,cljs.core.cons(b,args));
});
var list_STAR___4 = (function (a,b,c,args){
return cljs.core.cons(a,cljs.core.cons(b,cljs.core.cons(c,args)));
});
var list_STAR___5 = (function() { 
var G__33451__delegate = function (a,b,c,d,more){
return cljs.core.cons(a,cljs.core.cons(b,cljs.core.cons(c,cljs.core.cons(d,cljs.core.spread(more)))));
};
var G__33451 = function (a,b,c,d,var_args){
var more = null;
if (arguments.length > 4) {
var G__33452__i = 0, G__33452__a = new Array(arguments.length -  4);
while (G__33452__i < G__33452__a.length) {G__33452__a[G__33452__i] = arguments[G__33452__i + 4]; ++G__33452__i;}
  more = new cljs.core.IndexedSeq(G__33452__a,0);
} 
return G__33451__delegate.call(this,a,b,c,d,more);};
G__33451.cljs$lang$maxFixedArity = 4;
G__33451.cljs$lang$applyTo = (function (arglist__33453){
var a = cljs.core.first(arglist__33453);
arglist__33453 = cljs.core.next(arglist__33453);
var b = cljs.core.first(arglist__33453);
arglist__33453 = cljs.core.next(arglist__33453);
var c = cljs.core.first(arglist__33453);
arglist__33453 = cljs.core.next(arglist__33453);
var d = cljs.core.first(arglist__33453);
var more = cljs.core.rest(arglist__33453);
return G__33451__delegate(a,b,c,d,more);
});
G__33451.cljs$core$IFn$_invoke$arity$variadic = G__33451__delegate;
return G__33451;
})()
;
list_STAR_ = function(a,b,c,d,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return list_STAR___1.call(this,a);
case 2:
return list_STAR___2.call(this,a,b);
case 3:
return list_STAR___3.call(this,a,b,c);
case 4:
return list_STAR___4.call(this,a,b,c,d);
default:
var G__33454 = null;
if (arguments.length > 4) {
var G__33455__i = 0, G__33455__a = new Array(arguments.length -  4);
while (G__33455__i < G__33455__a.length) {G__33455__a[G__33455__i] = arguments[G__33455__i + 4]; ++G__33455__i;}
G__33454 = new cljs.core.IndexedSeq(G__33455__a,0);
}
return list_STAR___5.cljs$core$IFn$_invoke$arity$variadic(a,b,c,d, G__33454);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
list_STAR_.cljs$lang$maxFixedArity = 4;
list_STAR_.cljs$lang$applyTo = list_STAR___5.cljs$lang$applyTo;
list_STAR_.cljs$core$IFn$_invoke$arity$1 = list_STAR___1;
list_STAR_.cljs$core$IFn$_invoke$arity$2 = list_STAR___2;
list_STAR_.cljs$core$IFn$_invoke$arity$3 = list_STAR___3;
list_STAR_.cljs$core$IFn$_invoke$arity$4 = list_STAR___4;
list_STAR_.cljs$core$IFn$_invoke$arity$variadic = list_STAR___5.cljs$core$IFn$_invoke$arity$variadic;
return list_STAR_;
})()
;
/**
* Returns a new, transient version of the collection, in constant time.
*/
cljs.core.transient$ = (function transient$(coll){
return cljs.core._as_transient(coll);
});
/**
* Returns a new, persistent version of the transient collection, in
* constant time. The transient collection cannot be used after this
* call, any such use will throw an exception.
*/
cljs.core.persistent_BANG_ = (function persistent_BANG_(tcoll){
return cljs.core._persistent_BANG_(tcoll);
});
/**
* Adds x to the transient collection, and return coll. The 'addition'
* may happen at different 'places' depending on the concrete type.
* @param {...*} var_args
*/
cljs.core.conj_BANG_ = (function() {
var conj_BANG_ = null;
var conj_BANG___0 = (function (){
return cljs.core.transient$(cljs.core.PersistentVector.EMPTY);
});
var conj_BANG___1 = (function (coll){
return coll;
});
var conj_BANG___2 = (function (tcoll,val){
return cljs.core._conj_BANG_(tcoll,val);
});
var conj_BANG___3 = (function() { 
var G__33456__delegate = function (tcoll,val,vals){
while(true){
var ntcoll = cljs.core._conj_BANG_(tcoll,val);
if(cljs.core.truth_(vals)){
var G__33457 = ntcoll;
var G__33458 = cljs.core.first(vals);
var G__33459 = cljs.core.next(vals);
tcoll = G__33457;
val = G__33458;
vals = G__33459;
continue;
} else {
return ntcoll;
}
break;
}
};
var G__33456 = function (tcoll,val,var_args){
var vals = null;
if (arguments.length > 2) {
var G__33460__i = 0, G__33460__a = new Array(arguments.length -  2);
while (G__33460__i < G__33460__a.length) {G__33460__a[G__33460__i] = arguments[G__33460__i + 2]; ++G__33460__i;}
  vals = new cljs.core.IndexedSeq(G__33460__a,0);
} 
return G__33456__delegate.call(this,tcoll,val,vals);};
G__33456.cljs$lang$maxFixedArity = 2;
G__33456.cljs$lang$applyTo = (function (arglist__33461){
var tcoll = cljs.core.first(arglist__33461);
arglist__33461 = cljs.core.next(arglist__33461);
var val = cljs.core.first(arglist__33461);
var vals = cljs.core.rest(arglist__33461);
return G__33456__delegate(tcoll,val,vals);
});
G__33456.cljs$core$IFn$_invoke$arity$variadic = G__33456__delegate;
return G__33456;
})()
;
conj_BANG_ = function(tcoll,val,var_args){
var vals = var_args;
switch(arguments.length){
case 0:
return conj_BANG___0.call(this);
case 1:
return conj_BANG___1.call(this,tcoll);
case 2:
return conj_BANG___2.call(this,tcoll,val);
default:
var G__33462 = null;
if (arguments.length > 2) {
var G__33463__i = 0, G__33463__a = new Array(arguments.length -  2);
while (G__33463__i < G__33463__a.length) {G__33463__a[G__33463__i] = arguments[G__33463__i + 2]; ++G__33463__i;}
G__33462 = new cljs.core.IndexedSeq(G__33463__a,0);
}
return conj_BANG___3.cljs$core$IFn$_invoke$arity$variadic(tcoll,val, G__33462);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
conj_BANG_.cljs$lang$maxFixedArity = 2;
conj_BANG_.cljs$lang$applyTo = conj_BANG___3.cljs$lang$applyTo;
conj_BANG_.cljs$core$IFn$_invoke$arity$0 = conj_BANG___0;
conj_BANG_.cljs$core$IFn$_invoke$arity$1 = conj_BANG___1;
conj_BANG_.cljs$core$IFn$_invoke$arity$2 = conj_BANG___2;
conj_BANG_.cljs$core$IFn$_invoke$arity$variadic = conj_BANG___3.cljs$core$IFn$_invoke$arity$variadic;
return conj_BANG_;
})()
;
/**
* When applied to a transient map, adds mapping of key(s) to
* val(s). When applied to a transient vector, sets the val at index.
* Note - index must be <= (count vector). Returns coll.
* @param {...*} var_args
*/
cljs.core.assoc_BANG_ = (function() {
var assoc_BANG_ = null;
var assoc_BANG___3 = (function (tcoll,key,val){
return cljs.core._assoc_BANG_(tcoll,key,val);
});
var assoc_BANG___4 = (function() { 
var G__33464__delegate = function (tcoll,key,val,kvs){
while(true){
var ntcoll = cljs.core._assoc_BANG_(tcoll,key,val);
if(cljs.core.truth_(kvs)){
var G__33465 = ntcoll;
var G__33466 = cljs.core.first(kvs);
var G__33467 = cljs.core.second(kvs);
var G__33468 = cljs.core.nnext(kvs);
tcoll = G__33465;
key = G__33466;
val = G__33467;
kvs = G__33468;
continue;
} else {
return ntcoll;
}
break;
}
};
var G__33464 = function (tcoll,key,val,var_args){
var kvs = null;
if (arguments.length > 3) {
var G__33469__i = 0, G__33469__a = new Array(arguments.length -  3);
while (G__33469__i < G__33469__a.length) {G__33469__a[G__33469__i] = arguments[G__33469__i + 3]; ++G__33469__i;}
  kvs = new cljs.core.IndexedSeq(G__33469__a,0);
} 
return G__33464__delegate.call(this,tcoll,key,val,kvs);};
G__33464.cljs$lang$maxFixedArity = 3;
G__33464.cljs$lang$applyTo = (function (arglist__33470){
var tcoll = cljs.core.first(arglist__33470);
arglist__33470 = cljs.core.next(arglist__33470);
var key = cljs.core.first(arglist__33470);
arglist__33470 = cljs.core.next(arglist__33470);
var val = cljs.core.first(arglist__33470);
var kvs = cljs.core.rest(arglist__33470);
return G__33464__delegate(tcoll,key,val,kvs);
});
G__33464.cljs$core$IFn$_invoke$arity$variadic = G__33464__delegate;
return G__33464;
})()
;
assoc_BANG_ = function(tcoll,key,val,var_args){
var kvs = var_args;
switch(arguments.length){
case 3:
return assoc_BANG___3.call(this,tcoll,key,val);
default:
var G__33471 = null;
if (arguments.length > 3) {
var G__33472__i = 0, G__33472__a = new Array(arguments.length -  3);
while (G__33472__i < G__33472__a.length) {G__33472__a[G__33472__i] = arguments[G__33472__i + 3]; ++G__33472__i;}
G__33471 = new cljs.core.IndexedSeq(G__33472__a,0);
}
return assoc_BANG___4.cljs$core$IFn$_invoke$arity$variadic(tcoll,key,val, G__33471);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
assoc_BANG_.cljs$lang$maxFixedArity = 3;
assoc_BANG_.cljs$lang$applyTo = assoc_BANG___4.cljs$lang$applyTo;
assoc_BANG_.cljs$core$IFn$_invoke$arity$3 = assoc_BANG___3;
assoc_BANG_.cljs$core$IFn$_invoke$arity$variadic = assoc_BANG___4.cljs$core$IFn$_invoke$arity$variadic;
return assoc_BANG_;
})()
;
/**
* Returns a transient map that doesn't contain a mapping for key(s).
* @param {...*} var_args
*/
cljs.core.dissoc_BANG_ = (function() {
var dissoc_BANG_ = null;
var dissoc_BANG___2 = (function (tcoll,key){
return cljs.core._dissoc_BANG_(tcoll,key);
});
var dissoc_BANG___3 = (function() { 
var G__33473__delegate = function (tcoll,key,ks){
while(true){
var ntcoll = cljs.core._dissoc_BANG_(tcoll,key);
if(cljs.core.truth_(ks)){
var G__33474 = ntcoll;
var G__33475 = cljs.core.first(ks);
var G__33476 = cljs.core.next(ks);
tcoll = G__33474;
key = G__33475;
ks = G__33476;
continue;
} else {
return ntcoll;
}
break;
}
};
var G__33473 = function (tcoll,key,var_args){
var ks = null;
if (arguments.length > 2) {
var G__33477__i = 0, G__33477__a = new Array(arguments.length -  2);
while (G__33477__i < G__33477__a.length) {G__33477__a[G__33477__i] = arguments[G__33477__i + 2]; ++G__33477__i;}
  ks = new cljs.core.IndexedSeq(G__33477__a,0);
} 
return G__33473__delegate.call(this,tcoll,key,ks);};
G__33473.cljs$lang$maxFixedArity = 2;
G__33473.cljs$lang$applyTo = (function (arglist__33478){
var tcoll = cljs.core.first(arglist__33478);
arglist__33478 = cljs.core.next(arglist__33478);
var key = cljs.core.first(arglist__33478);
var ks = cljs.core.rest(arglist__33478);
return G__33473__delegate(tcoll,key,ks);
});
G__33473.cljs$core$IFn$_invoke$arity$variadic = G__33473__delegate;
return G__33473;
})()
;
dissoc_BANG_ = function(tcoll,key,var_args){
var ks = var_args;
switch(arguments.length){
case 2:
return dissoc_BANG___2.call(this,tcoll,key);
default:
var G__33479 = null;
if (arguments.length > 2) {
var G__33480__i = 0, G__33480__a = new Array(arguments.length -  2);
while (G__33480__i < G__33480__a.length) {G__33480__a[G__33480__i] = arguments[G__33480__i + 2]; ++G__33480__i;}
G__33479 = new cljs.core.IndexedSeq(G__33480__a,0);
}
return dissoc_BANG___3.cljs$core$IFn$_invoke$arity$variadic(tcoll,key, G__33479);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
dissoc_BANG_.cljs$lang$maxFixedArity = 2;
dissoc_BANG_.cljs$lang$applyTo = dissoc_BANG___3.cljs$lang$applyTo;
dissoc_BANG_.cljs$core$IFn$_invoke$arity$2 = dissoc_BANG___2;
dissoc_BANG_.cljs$core$IFn$_invoke$arity$variadic = dissoc_BANG___3.cljs$core$IFn$_invoke$arity$variadic;
return dissoc_BANG_;
})()
;
/**
* Removes the last item from a transient vector. If
* the collection is empty, throws an exception. Returns coll
*/
cljs.core.pop_BANG_ = (function pop_BANG_(tcoll){
return cljs.core._pop_BANG_(tcoll);
});
/**
* disj[oin]. Returns a transient set of the same (hashed/sorted) type, that
* does not contain key(s).
* @param {...*} var_args
*/
cljs.core.disj_BANG_ = (function() {
var disj_BANG_ = null;
var disj_BANG___2 = (function (tcoll,val){
return cljs.core._disjoin_BANG_(tcoll,val);
});
var disj_BANG___3 = (function() { 
var G__33481__delegate = function (tcoll,val,vals){
while(true){
var ntcoll = cljs.core._disjoin_BANG_(tcoll,val);
if(cljs.core.truth_(vals)){
var G__33482 = ntcoll;
var G__33483 = cljs.core.first(vals);
var G__33484 = cljs.core.next(vals);
tcoll = G__33482;
val = G__33483;
vals = G__33484;
continue;
} else {
return ntcoll;
}
break;
}
};
var G__33481 = function (tcoll,val,var_args){
var vals = null;
if (arguments.length > 2) {
var G__33485__i = 0, G__33485__a = new Array(arguments.length -  2);
while (G__33485__i < G__33485__a.length) {G__33485__a[G__33485__i] = arguments[G__33485__i + 2]; ++G__33485__i;}
  vals = new cljs.core.IndexedSeq(G__33485__a,0);
} 
return G__33481__delegate.call(this,tcoll,val,vals);};
G__33481.cljs$lang$maxFixedArity = 2;
G__33481.cljs$lang$applyTo = (function (arglist__33486){
var tcoll = cljs.core.first(arglist__33486);
arglist__33486 = cljs.core.next(arglist__33486);
var val = cljs.core.first(arglist__33486);
var vals = cljs.core.rest(arglist__33486);
return G__33481__delegate(tcoll,val,vals);
});
G__33481.cljs$core$IFn$_invoke$arity$variadic = G__33481__delegate;
return G__33481;
})()
;
disj_BANG_ = function(tcoll,val,var_args){
var vals = var_args;
switch(arguments.length){
case 2:
return disj_BANG___2.call(this,tcoll,val);
default:
var G__33487 = null;
if (arguments.length > 2) {
var G__33488__i = 0, G__33488__a = new Array(arguments.length -  2);
while (G__33488__i < G__33488__a.length) {G__33488__a[G__33488__i] = arguments[G__33488__i + 2]; ++G__33488__i;}
G__33487 = new cljs.core.IndexedSeq(G__33488__a,0);
}
return disj_BANG___3.cljs$core$IFn$_invoke$arity$variadic(tcoll,val, G__33487);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
disj_BANG_.cljs$lang$maxFixedArity = 2;
disj_BANG_.cljs$lang$applyTo = disj_BANG___3.cljs$lang$applyTo;
disj_BANG_.cljs$core$IFn$_invoke$arity$2 = disj_BANG___2;
disj_BANG_.cljs$core$IFn$_invoke$arity$variadic = disj_BANG___3.cljs$core$IFn$_invoke$arity$variadic;
return disj_BANG_;
})()
;

cljs.core.apply_to = (function apply_to(f,argc,args){
var args__$1 = cljs.core.seq(args);
if((argc === (0))){
return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
} else {
var a25203 = cljs.core._first(args__$1);
var args__$2 = cljs.core._rest(args__$1);
if((argc === (1))){
if(f.cljs$core$IFn$_invoke$arity$1){
return f.cljs$core$IFn$_invoke$arity$1(a25203);
} else {
var G__33699 = a25203;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__33699) : f.call(null,G__33699));
}
} else {
var b25204 = cljs.core._first(args__$2);
var args__$3 = cljs.core._rest(args__$2);
if((argc === (2))){
if(f.cljs$core$IFn$_invoke$arity$2){
return f.cljs$core$IFn$_invoke$arity$2(a25203,b25204);
} else {
var G__33700 = a25203;
var G__33701 = b25204;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__33700,G__33701) : f.call(null,G__33700,G__33701));
}
} else {
var c25205 = cljs.core._first(args__$3);
var args__$4 = cljs.core._rest(args__$3);
if((argc === (3))){
if(f.cljs$core$IFn$_invoke$arity$3){
return f.cljs$core$IFn$_invoke$arity$3(a25203,b25204,c25205);
} else {
var G__33702 = a25203;
var G__33703 = b25204;
var G__33704 = c25205;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__33702,G__33703,G__33704) : f.call(null,G__33702,G__33703,G__33704));
}
} else {
var d25206 = cljs.core._first(args__$4);
var args__$5 = cljs.core._rest(args__$4);
if((argc === (4))){
if(f.cljs$core$IFn$_invoke$arity$4){
return f.cljs$core$IFn$_invoke$arity$4(a25203,b25204,c25205,d25206);
} else {
var G__33705 = a25203;
var G__33706 = b25204;
var G__33707 = c25205;
var G__33708 = d25206;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__33705,G__33706,G__33707,G__33708) : f.call(null,G__33705,G__33706,G__33707,G__33708));
}
} else {
var e25207 = cljs.core._first(args__$5);
var args__$6 = cljs.core._rest(args__$5);
if((argc === (5))){
if(f.cljs$core$IFn$_invoke$arity$5){
return f.cljs$core$IFn$_invoke$arity$5(a25203,b25204,c25205,d25206,e25207);
} else {
var G__33709 = a25203;
var G__33710 = b25204;
var G__33711 = c25205;
var G__33712 = d25206;
var G__33713 = e25207;
return (f.cljs$core$IFn$_invoke$arity$5 ? f.cljs$core$IFn$_invoke$arity$5(G__33709,G__33710,G__33711,G__33712,G__33713) : f.call(null,G__33709,G__33710,G__33711,G__33712,G__33713));
}
} else {
var f25208 = cljs.core._first(args__$6);
var args__$7 = cljs.core._rest(args__$6);
if((argc === (6))){
if(f.cljs$core$IFn$_invoke$arity$6){
return f.cljs$core$IFn$_invoke$arity$6(a25203,b25204,c25205,d25206,e25207,f25208);
} else {
var G__33714 = a25203;
var G__33715 = b25204;
var G__33716 = c25205;
var G__33717 = d25206;
var G__33718 = e25207;
var G__33719 = f25208;
return (f.cljs$core$IFn$_invoke$arity$6 ? f.cljs$core$IFn$_invoke$arity$6(G__33714,G__33715,G__33716,G__33717,G__33718,G__33719) : f.call(null,G__33714,G__33715,G__33716,G__33717,G__33718,G__33719));
}
} else {
var g25209 = cljs.core._first(args__$7);
var args__$8 = cljs.core._rest(args__$7);
if((argc === (7))){
if(f.cljs$core$IFn$_invoke$arity$7){
return f.cljs$core$IFn$_invoke$arity$7(a25203,b25204,c25205,d25206,e25207,f25208,g25209);
} else {
var G__33720 = a25203;
var G__33721 = b25204;
var G__33722 = c25205;
var G__33723 = d25206;
var G__33724 = e25207;
var G__33725 = f25208;
var G__33726 = g25209;
return (f.cljs$core$IFn$_invoke$arity$7 ? f.cljs$core$IFn$_invoke$arity$7(G__33720,G__33721,G__33722,G__33723,G__33724,G__33725,G__33726) : f.call(null,G__33720,G__33721,G__33722,G__33723,G__33724,G__33725,G__33726));
}
} else {
var h25210 = cljs.core._first(args__$8);
var args__$9 = cljs.core._rest(args__$8);
if((argc === (8))){
if(f.cljs$core$IFn$_invoke$arity$8){
return f.cljs$core$IFn$_invoke$arity$8(a25203,b25204,c25205,d25206,e25207,f25208,g25209,h25210);
} else {
var G__33727 = a25203;
var G__33728 = b25204;
var G__33729 = c25205;
var G__33730 = d25206;
var G__33731 = e25207;
var G__33732 = f25208;
var G__33733 = g25209;
var G__33734 = h25210;
return (f.cljs$core$IFn$_invoke$arity$8 ? f.cljs$core$IFn$_invoke$arity$8(G__33727,G__33728,G__33729,G__33730,G__33731,G__33732,G__33733,G__33734) : f.call(null,G__33727,G__33728,G__33729,G__33730,G__33731,G__33732,G__33733,G__33734));
}
} else {
var i25211 = cljs.core._first(args__$9);
var args__$10 = cljs.core._rest(args__$9);
if((argc === (9))){
if(f.cljs$core$IFn$_invoke$arity$9){
return f.cljs$core$IFn$_invoke$arity$9(a25203,b25204,c25205,d25206,e25207,f25208,g25209,h25210,i25211);
} else {
var G__33735 = a25203;
var G__33736 = b25204;
var G__33737 = c25205;
var G__33738 = d25206;
var G__33739 = e25207;
var G__33740 = f25208;
var G__33741 = g25209;
var G__33742 = h25210;
var G__33743 = i25211;
return (f.cljs$core$IFn$_invoke$arity$9 ? f.cljs$core$IFn$_invoke$arity$9(G__33735,G__33736,G__33737,G__33738,G__33739,G__33740,G__33741,G__33742,G__33743) : f.call(null,G__33735,G__33736,G__33737,G__33738,G__33739,G__33740,G__33741,G__33742,G__33743));
}
} else {
var j25212 = cljs.core._first(args__$10);
var args__$11 = cljs.core._rest(args__$10);
if((argc === (10))){
if(f.cljs$core$IFn$_invoke$arity$10){
return f.cljs$core$IFn$_invoke$arity$10(a25203,b25204,c25205,d25206,e25207,f25208,g25209,h25210,i25211,j25212);
} else {
var G__33744 = a25203;
var G__33745 = b25204;
var G__33746 = c25205;
var G__33747 = d25206;
var G__33748 = e25207;
var G__33749 = f25208;
var G__33750 = g25209;
var G__33751 = h25210;
var G__33752 = i25211;
var G__33753 = j25212;
return (f.cljs$core$IFn$_invoke$arity$10 ? f.cljs$core$IFn$_invoke$arity$10(G__33744,G__33745,G__33746,G__33747,G__33748,G__33749,G__33750,G__33751,G__33752,G__33753) : f.call(null,G__33744,G__33745,G__33746,G__33747,G__33748,G__33749,G__33750,G__33751,G__33752,G__33753));
}
} else {
var k25213 = cljs.core._first(args__$11);
var args__$12 = cljs.core._rest(args__$11);
if((argc === (11))){
if(f.cljs$core$IFn$_invoke$arity$11){
return f.cljs$core$IFn$_invoke$arity$11(a25203,b25204,c25205,d25206,e25207,f25208,g25209,h25210,i25211,j25212,k25213);
} else {
var G__33754 = a25203;
var G__33755 = b25204;
var G__33756 = c25205;
var G__33757 = d25206;
var G__33758 = e25207;
var G__33759 = f25208;
var G__33760 = g25209;
var G__33761 = h25210;
var G__33762 = i25211;
var G__33763 = j25212;
var G__33764 = k25213;
return (f.cljs$core$IFn$_invoke$arity$11 ? f.cljs$core$IFn$_invoke$arity$11(G__33754,G__33755,G__33756,G__33757,G__33758,G__33759,G__33760,G__33761,G__33762,G__33763,G__33764) : f.call(null,G__33754,G__33755,G__33756,G__33757,G__33758,G__33759,G__33760,G__33761,G__33762,G__33763,G__33764));
}
} else {
var l25214 = cljs.core._first(args__$12);
var args__$13 = cljs.core._rest(args__$12);
if((argc === (12))){
if(f.cljs$core$IFn$_invoke$arity$12){
return f.cljs$core$IFn$_invoke$arity$12(a25203,b25204,c25205,d25206,e25207,f25208,g25209,h25210,i25211,j25212,k25213,l25214);
} else {
var G__33765 = a25203;
var G__33766 = b25204;
var G__33767 = c25205;
var G__33768 = d25206;
var G__33769 = e25207;
var G__33770 = f25208;
var G__33771 = g25209;
var G__33772 = h25210;
var G__33773 = i25211;
var G__33774 = j25212;
var G__33775 = k25213;
var G__33776 = l25214;
return (f.cljs$core$IFn$_invoke$arity$12 ? f.cljs$core$IFn$_invoke$arity$12(G__33765,G__33766,G__33767,G__33768,G__33769,G__33770,G__33771,G__33772,G__33773,G__33774,G__33775,G__33776) : f.call(null,G__33765,G__33766,G__33767,G__33768,G__33769,G__33770,G__33771,G__33772,G__33773,G__33774,G__33775,G__33776));
}
} else {
var m25215 = cljs.core._first(args__$13);
var args__$14 = cljs.core._rest(args__$13);
if((argc === (13))){
if(f.cljs$core$IFn$_invoke$arity$13){
return f.cljs$core$IFn$_invoke$arity$13(a25203,b25204,c25205,d25206,e25207,f25208,g25209,h25210,i25211,j25212,k25213,l25214,m25215);
} else {
var G__33777 = a25203;
var G__33778 = b25204;
var G__33779 = c25205;
var G__33780 = d25206;
var G__33781 = e25207;
var G__33782 = f25208;
var G__33783 = g25209;
var G__33784 = h25210;
var G__33785 = i25211;
var G__33786 = j25212;
var G__33787 = k25213;
var G__33788 = l25214;
var G__33789 = m25215;
return (f.cljs$core$IFn$_invoke$arity$13 ? f.cljs$core$IFn$_invoke$arity$13(G__33777,G__33778,G__33779,G__33780,G__33781,G__33782,G__33783,G__33784,G__33785,G__33786,G__33787,G__33788,G__33789) : f.call(null,G__33777,G__33778,G__33779,G__33780,G__33781,G__33782,G__33783,G__33784,G__33785,G__33786,G__33787,G__33788,G__33789));
}
} else {
var n25216 = cljs.core._first(args__$14);
var args__$15 = cljs.core._rest(args__$14);
if((argc === (14))){
if(f.cljs$core$IFn$_invoke$arity$14){
return f.cljs$core$IFn$_invoke$arity$14(a25203,b25204,c25205,d25206,e25207,f25208,g25209,h25210,i25211,j25212,k25213,l25214,m25215,n25216);
} else {
var G__33790 = a25203;
var G__33791 = b25204;
var G__33792 = c25205;
var G__33793 = d25206;
var G__33794 = e25207;
var G__33795 = f25208;
var G__33796 = g25209;
var G__33797 = h25210;
var G__33798 = i25211;
var G__33799 = j25212;
var G__33800 = k25213;
var G__33801 = l25214;
var G__33802 = m25215;
var G__33803 = n25216;
return (f.cljs$core$IFn$_invoke$arity$14 ? f.cljs$core$IFn$_invoke$arity$14(G__33790,G__33791,G__33792,G__33793,G__33794,G__33795,G__33796,G__33797,G__33798,G__33799,G__33800,G__33801,G__33802,G__33803) : f.call(null,G__33790,G__33791,G__33792,G__33793,G__33794,G__33795,G__33796,G__33797,G__33798,G__33799,G__33800,G__33801,G__33802,G__33803));
}
} else {
var o25217 = cljs.core._first(args__$15);
var args__$16 = cljs.core._rest(args__$15);
if((argc === (15))){
if(f.cljs$core$IFn$_invoke$arity$15){
return f.cljs$core$IFn$_invoke$arity$15(a25203,b25204,c25205,d25206,e25207,f25208,g25209,h25210,i25211,j25212,k25213,l25214,m25215,n25216,o25217);
} else {
var G__33804 = a25203;
var G__33805 = b25204;
var G__33806 = c25205;
var G__33807 = d25206;
var G__33808 = e25207;
var G__33809 = f25208;
var G__33810 = g25209;
var G__33811 = h25210;
var G__33812 = i25211;
var G__33813 = j25212;
var G__33814 = k25213;
var G__33815 = l25214;
var G__33816 = m25215;
var G__33817 = n25216;
var G__33818 = o25217;
return (f.cljs$core$IFn$_invoke$arity$15 ? f.cljs$core$IFn$_invoke$arity$15(G__33804,G__33805,G__33806,G__33807,G__33808,G__33809,G__33810,G__33811,G__33812,G__33813,G__33814,G__33815,G__33816,G__33817,G__33818) : f.call(null,G__33804,G__33805,G__33806,G__33807,G__33808,G__33809,G__33810,G__33811,G__33812,G__33813,G__33814,G__33815,G__33816,G__33817,G__33818));
}
} else {
var p25218 = cljs.core._first(args__$16);
var args__$17 = cljs.core._rest(args__$16);
if((argc === (16))){
if(f.cljs$core$IFn$_invoke$arity$16){
return f.cljs$core$IFn$_invoke$arity$16(a25203,b25204,c25205,d25206,e25207,f25208,g25209,h25210,i25211,j25212,k25213,l25214,m25215,n25216,o25217,p25218);
} else {
var G__33819 = a25203;
var G__33820 = b25204;
var G__33821 = c25205;
var G__33822 = d25206;
var G__33823 = e25207;
var G__33824 = f25208;
var G__33825 = g25209;
var G__33826 = h25210;
var G__33827 = i25211;
var G__33828 = j25212;
var G__33829 = k25213;
var G__33830 = l25214;
var G__33831 = m25215;
var G__33832 = n25216;
var G__33833 = o25217;
var G__33834 = p25218;
return (f.cljs$core$IFn$_invoke$arity$16 ? f.cljs$core$IFn$_invoke$arity$16(G__33819,G__33820,G__33821,G__33822,G__33823,G__33824,G__33825,G__33826,G__33827,G__33828,G__33829,G__33830,G__33831,G__33832,G__33833,G__33834) : f.call(null,G__33819,G__33820,G__33821,G__33822,G__33823,G__33824,G__33825,G__33826,G__33827,G__33828,G__33829,G__33830,G__33831,G__33832,G__33833,G__33834));
}
} else {
var q25219 = cljs.core._first(args__$17);
var args__$18 = cljs.core._rest(args__$17);
if((argc === (17))){
if(f.cljs$core$IFn$_invoke$arity$17){
return f.cljs$core$IFn$_invoke$arity$17(a25203,b25204,c25205,d25206,e25207,f25208,g25209,h25210,i25211,j25212,k25213,l25214,m25215,n25216,o25217,p25218,q25219);
} else {
var G__33835 = a25203;
var G__33836 = b25204;
var G__33837 = c25205;
var G__33838 = d25206;
var G__33839 = e25207;
var G__33840 = f25208;
var G__33841 = g25209;
var G__33842 = h25210;
var G__33843 = i25211;
var G__33844 = j25212;
var G__33845 = k25213;
var G__33846 = l25214;
var G__33847 = m25215;
var G__33848 = n25216;
var G__33849 = o25217;
var G__33850 = p25218;
var G__33851 = q25219;
return (f.cljs$core$IFn$_invoke$arity$17 ? f.cljs$core$IFn$_invoke$arity$17(G__33835,G__33836,G__33837,G__33838,G__33839,G__33840,G__33841,G__33842,G__33843,G__33844,G__33845,G__33846,G__33847,G__33848,G__33849,G__33850,G__33851) : f.call(null,G__33835,G__33836,G__33837,G__33838,G__33839,G__33840,G__33841,G__33842,G__33843,G__33844,G__33845,G__33846,G__33847,G__33848,G__33849,G__33850,G__33851));
}
} else {
var r25220 = cljs.core._first(args__$18);
var args__$19 = cljs.core._rest(args__$18);
if((argc === (18))){
if(f.cljs$core$IFn$_invoke$arity$18){
return f.cljs$core$IFn$_invoke$arity$18(a25203,b25204,c25205,d25206,e25207,f25208,g25209,h25210,i25211,j25212,k25213,l25214,m25215,n25216,o25217,p25218,q25219,r25220);
} else {
var G__33852 = a25203;
var G__33853 = b25204;
var G__33854 = c25205;
var G__33855 = d25206;
var G__33856 = e25207;
var G__33857 = f25208;
var G__33858 = g25209;
var G__33859 = h25210;
var G__33860 = i25211;
var G__33861 = j25212;
var G__33862 = k25213;
var G__33863 = l25214;
var G__33864 = m25215;
var G__33865 = n25216;
var G__33866 = o25217;
var G__33867 = p25218;
var G__33868 = q25219;
var G__33869 = r25220;
return (f.cljs$core$IFn$_invoke$arity$18 ? f.cljs$core$IFn$_invoke$arity$18(G__33852,G__33853,G__33854,G__33855,G__33856,G__33857,G__33858,G__33859,G__33860,G__33861,G__33862,G__33863,G__33864,G__33865,G__33866,G__33867,G__33868,G__33869) : f.call(null,G__33852,G__33853,G__33854,G__33855,G__33856,G__33857,G__33858,G__33859,G__33860,G__33861,G__33862,G__33863,G__33864,G__33865,G__33866,G__33867,G__33868,G__33869));
}
} else {
var s25221 = cljs.core._first(args__$19);
var args__$20 = cljs.core._rest(args__$19);
if((argc === (19))){
if(f.cljs$core$IFn$_invoke$arity$19){
return f.cljs$core$IFn$_invoke$arity$19(a25203,b25204,c25205,d25206,e25207,f25208,g25209,h25210,i25211,j25212,k25213,l25214,m25215,n25216,o25217,p25218,q25219,r25220,s25221);
} else {
var G__33870 = a25203;
var G__33871 = b25204;
var G__33872 = c25205;
var G__33873 = d25206;
var G__33874 = e25207;
var G__33875 = f25208;
var G__33876 = g25209;
var G__33877 = h25210;
var G__33878 = i25211;
var G__33879 = j25212;
var G__33880 = k25213;
var G__33881 = l25214;
var G__33882 = m25215;
var G__33883 = n25216;
var G__33884 = o25217;
var G__33885 = p25218;
var G__33886 = q25219;
var G__33887 = r25220;
var G__33888 = s25221;
return (f.cljs$core$IFn$_invoke$arity$19 ? f.cljs$core$IFn$_invoke$arity$19(G__33870,G__33871,G__33872,G__33873,G__33874,G__33875,G__33876,G__33877,G__33878,G__33879,G__33880,G__33881,G__33882,G__33883,G__33884,G__33885,G__33886,G__33887,G__33888) : f.call(null,G__33870,G__33871,G__33872,G__33873,G__33874,G__33875,G__33876,G__33877,G__33878,G__33879,G__33880,G__33881,G__33882,G__33883,G__33884,G__33885,G__33886,G__33887,G__33888));
}
} else {
var t25222 = cljs.core._first(args__$20);
var args__$21 = cljs.core._rest(args__$20);
if((argc === (20))){
if(f.cljs$core$IFn$_invoke$arity$20){
return f.cljs$core$IFn$_invoke$arity$20(a25203,b25204,c25205,d25206,e25207,f25208,g25209,h25210,i25211,j25212,k25213,l25214,m25215,n25216,o25217,p25218,q25219,r25220,s25221,t25222);
} else {
var G__33889 = a25203;
var G__33890 = b25204;
var G__33891 = c25205;
var G__33892 = d25206;
var G__33893 = e25207;
var G__33894 = f25208;
var G__33895 = g25209;
var G__33896 = h25210;
var G__33897 = i25211;
var G__33898 = j25212;
var G__33899 = k25213;
var G__33900 = l25214;
var G__33901 = m25215;
var G__33902 = n25216;
var G__33903 = o25217;
var G__33904 = p25218;
var G__33905 = q25219;
var G__33906 = r25220;
var G__33907 = s25221;
var G__33908 = t25222;
return (f.cljs$core$IFn$_invoke$arity$20 ? f.cljs$core$IFn$_invoke$arity$20(G__33889,G__33890,G__33891,G__33892,G__33893,G__33894,G__33895,G__33896,G__33897,G__33898,G__33899,G__33900,G__33901,G__33902,G__33903,G__33904,G__33905,G__33906,G__33907,G__33908) : f.call(null,G__33889,G__33890,G__33891,G__33892,G__33893,G__33894,G__33895,G__33896,G__33897,G__33898,G__33899,G__33900,G__33901,G__33902,G__33903,G__33904,G__33905,G__33906,G__33907,G__33908));
}
} else {
throw (new Error("Only up to 20 arguments supported on functions"));
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
});

/**
* Applies fn f to the argument list formed by prepending intervening arguments to args.
* First cut.  Not lazy.  Needs to use emitted toApply.
* @param {...*} var_args
*/
cljs.core.apply = (function() {
var apply = null;
var apply__2 = (function (f,args){
var fixed_arity = f.cljs$lang$maxFixedArity;
if(f.cljs$lang$applyTo){
var bc = cljs.core.bounded_count(args,(fixed_arity + (1)));
if((bc <= fixed_arity)){
return cljs.core.apply_to(f,bc,args);
} else {
return f.cljs$lang$applyTo(args);
}
} else {
return f.apply(f,cljs.core.to_array(args));
}
});
var apply__3 = (function (f,x,args){
var arglist = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$2(x,args);
var fixed_arity = f.cljs$lang$maxFixedArity;
if(f.cljs$lang$applyTo){
var bc = cljs.core.bounded_count(arglist,(fixed_arity + (1)));
if((bc <= fixed_arity)){
return cljs.core.apply_to(f,bc,arglist);
} else {
return f.cljs$lang$applyTo(arglist);
}
} else {
return f.apply(f,cljs.core.to_array(arglist));
}
});
var apply__4 = (function (f,x,y,args){
var arglist = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$3(x,y,args);
var fixed_arity = f.cljs$lang$maxFixedArity;
if(f.cljs$lang$applyTo){
var bc = cljs.core.bounded_count(arglist,(fixed_arity + (1)));
if((bc <= fixed_arity)){
return cljs.core.apply_to(f,bc,arglist);
} else {
return f.cljs$lang$applyTo(arglist);
}
} else {
return f.apply(f,cljs.core.to_array(arglist));
}
});
var apply__5 = (function (f,x,y,z,args){
var arglist = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(x,y,z,args);
var fixed_arity = f.cljs$lang$maxFixedArity;
if(f.cljs$lang$applyTo){
var bc = cljs.core.bounded_count(arglist,(fixed_arity + (1)));
if((bc <= fixed_arity)){
return cljs.core.apply_to(f,bc,arglist);
} else {
return f.cljs$lang$applyTo(arglist);
}
} else {
return f.apply(f,cljs.core.to_array(arglist));
}
});
var apply__6 = (function() { 
var G__33909__delegate = function (f,a,b,c,d,args){
var arglist = cljs.core.cons(a,cljs.core.cons(b,cljs.core.cons(c,cljs.core.cons(d,cljs.core.spread(args)))));
var fixed_arity = f.cljs$lang$maxFixedArity;
if(f.cljs$lang$applyTo){
var bc = cljs.core.bounded_count(arglist,(fixed_arity + (1)));
if((bc <= fixed_arity)){
return cljs.core.apply_to(f,bc,arglist);
} else {
return f.cljs$lang$applyTo(arglist);
}
} else {
return f.apply(f,cljs.core.to_array(arglist));
}
};
var G__33909 = function (f,a,b,c,d,var_args){
var args = null;
if (arguments.length > 5) {
var G__33910__i = 0, G__33910__a = new Array(arguments.length -  5);
while (G__33910__i < G__33910__a.length) {G__33910__a[G__33910__i] = arguments[G__33910__i + 5]; ++G__33910__i;}
  args = new cljs.core.IndexedSeq(G__33910__a,0);
} 
return G__33909__delegate.call(this,f,a,b,c,d,args);};
G__33909.cljs$lang$maxFixedArity = 5;
G__33909.cljs$lang$applyTo = (function (arglist__33911){
var f = cljs.core.first(arglist__33911);
arglist__33911 = cljs.core.next(arglist__33911);
var a = cljs.core.first(arglist__33911);
arglist__33911 = cljs.core.next(arglist__33911);
var b = cljs.core.first(arglist__33911);
arglist__33911 = cljs.core.next(arglist__33911);
var c = cljs.core.first(arglist__33911);
arglist__33911 = cljs.core.next(arglist__33911);
var d = cljs.core.first(arglist__33911);
var args = cljs.core.rest(arglist__33911);
return G__33909__delegate(f,a,b,c,d,args);
});
G__33909.cljs$core$IFn$_invoke$arity$variadic = G__33909__delegate;
return G__33909;
})()
;
apply = function(f,a,b,c,d,var_args){
var args = var_args;
switch(arguments.length){
case 2:
return apply__2.call(this,f,a);
case 3:
return apply__3.call(this,f,a,b);
case 4:
return apply__4.call(this,f,a,b,c);
case 5:
return apply__5.call(this,f,a,b,c,d);
default:
var G__33912 = null;
if (arguments.length > 5) {
var G__33913__i = 0, G__33913__a = new Array(arguments.length -  5);
while (G__33913__i < G__33913__a.length) {G__33913__a[G__33913__i] = arguments[G__33913__i + 5]; ++G__33913__i;}
G__33912 = new cljs.core.IndexedSeq(G__33913__a,0);
}
return apply__6.cljs$core$IFn$_invoke$arity$variadic(f,a,b,c,d, G__33912);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
apply.cljs$lang$maxFixedArity = 5;
apply.cljs$lang$applyTo = apply__6.cljs$lang$applyTo;
apply.cljs$core$IFn$_invoke$arity$2 = apply__2;
apply.cljs$core$IFn$_invoke$arity$3 = apply__3;
apply.cljs$core$IFn$_invoke$arity$4 = apply__4;
apply.cljs$core$IFn$_invoke$arity$5 = apply__5;
apply.cljs$core$IFn$_invoke$arity$variadic = apply__6.cljs$core$IFn$_invoke$arity$variadic;
return apply;
})()
;
/**
* Returns an object of the same type and value as obj, with
* (apply f (meta obj) args) as its metadata.
* @param {...*} var_args
*/
cljs.core.vary_meta = (function() {
var vary_meta = null;
var vary_meta__2 = (function (obj,f){
return cljs.core.with_meta(obj,(function (){var G__33929 = cljs.core.meta(obj);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__33929) : f.call(null,G__33929));
})());
});
var vary_meta__3 = (function (obj,f,a){
return cljs.core.with_meta(obj,(function (){var G__33930 = cljs.core.meta(obj);
var G__33931 = a;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__33930,G__33931) : f.call(null,G__33930,G__33931));
})());
});
var vary_meta__4 = (function (obj,f,a,b){
return cljs.core.with_meta(obj,(function (){var G__33932 = cljs.core.meta(obj);
var G__33933 = a;
var G__33934 = b;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__33932,G__33933,G__33934) : f.call(null,G__33932,G__33933,G__33934));
})());
});
var vary_meta__5 = (function (obj,f,a,b,c){
return cljs.core.with_meta(obj,(function (){var G__33935 = cljs.core.meta(obj);
var G__33936 = a;
var G__33937 = b;
var G__33938 = c;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__33935,G__33936,G__33937,G__33938) : f.call(null,G__33935,G__33936,G__33937,G__33938));
})());
});
var vary_meta__6 = (function (obj,f,a,b,c,d){
return cljs.core.with_meta(obj,(function (){var G__33939 = cljs.core.meta(obj);
var G__33940 = a;
var G__33941 = b;
var G__33942 = c;
var G__33943 = d;
return (f.cljs$core$IFn$_invoke$arity$5 ? f.cljs$core$IFn$_invoke$arity$5(G__33939,G__33940,G__33941,G__33942,G__33943) : f.call(null,G__33939,G__33940,G__33941,G__33942,G__33943));
})());
});
var vary_meta__7 = (function() { 
var G__33944__delegate = function (obj,f,a,b,c,d,args){
return cljs.core.with_meta(obj,cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f,cljs.core.meta(obj),a,b,c,cljs.core.array_seq([d,args], 0)));
};
var G__33944 = function (obj,f,a,b,c,d,var_args){
var args = null;
if (arguments.length > 6) {
var G__33945__i = 0, G__33945__a = new Array(arguments.length -  6);
while (G__33945__i < G__33945__a.length) {G__33945__a[G__33945__i] = arguments[G__33945__i + 6]; ++G__33945__i;}
  args = new cljs.core.IndexedSeq(G__33945__a,0);
} 
return G__33944__delegate.call(this,obj,f,a,b,c,d,args);};
G__33944.cljs$lang$maxFixedArity = 6;
G__33944.cljs$lang$applyTo = (function (arglist__33946){
var obj = cljs.core.first(arglist__33946);
arglist__33946 = cljs.core.next(arglist__33946);
var f = cljs.core.first(arglist__33946);
arglist__33946 = cljs.core.next(arglist__33946);
var a = cljs.core.first(arglist__33946);
arglist__33946 = cljs.core.next(arglist__33946);
var b = cljs.core.first(arglist__33946);
arglist__33946 = cljs.core.next(arglist__33946);
var c = cljs.core.first(arglist__33946);
arglist__33946 = cljs.core.next(arglist__33946);
var d = cljs.core.first(arglist__33946);
var args = cljs.core.rest(arglist__33946);
return G__33944__delegate(obj,f,a,b,c,d,args);
});
G__33944.cljs$core$IFn$_invoke$arity$variadic = G__33944__delegate;
return G__33944;
})()
;
vary_meta = function(obj,f,a,b,c,d,var_args){
var args = var_args;
switch(arguments.length){
case 2:
return vary_meta__2.call(this,obj,f);
case 3:
return vary_meta__3.call(this,obj,f,a);
case 4:
return vary_meta__4.call(this,obj,f,a,b);
case 5:
return vary_meta__5.call(this,obj,f,a,b,c);
case 6:
return vary_meta__6.call(this,obj,f,a,b,c,d);
default:
var G__33947 = null;
if (arguments.length > 6) {
var G__33948__i = 0, G__33948__a = new Array(arguments.length -  6);
while (G__33948__i < G__33948__a.length) {G__33948__a[G__33948__i] = arguments[G__33948__i + 6]; ++G__33948__i;}
G__33947 = new cljs.core.IndexedSeq(G__33948__a,0);
}
return vary_meta__7.cljs$core$IFn$_invoke$arity$variadic(obj,f,a,b,c,d, G__33947);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
vary_meta.cljs$lang$maxFixedArity = 6;
vary_meta.cljs$lang$applyTo = vary_meta__7.cljs$lang$applyTo;
vary_meta.cljs$core$IFn$_invoke$arity$2 = vary_meta__2;
vary_meta.cljs$core$IFn$_invoke$arity$3 = vary_meta__3;
vary_meta.cljs$core$IFn$_invoke$arity$4 = vary_meta__4;
vary_meta.cljs$core$IFn$_invoke$arity$5 = vary_meta__5;
vary_meta.cljs$core$IFn$_invoke$arity$6 = vary_meta__6;
vary_meta.cljs$core$IFn$_invoke$arity$variadic = vary_meta__7.cljs$core$IFn$_invoke$arity$variadic;
return vary_meta;
})()
;
/**
* Same as (not (= obj1 obj2))
* @param {...*} var_args
*/
cljs.core.not_EQ_ = (function() {
var not_EQ_ = null;
var not_EQ___1 = (function (x){
return false;
});
var not_EQ___2 = (function (x,y){
return !(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x,y));
});
var not_EQ___3 = (function() { 
var G__33949__delegate = function (x,y,more){
return cljs.core.not(cljs.core.apply.cljs$core$IFn$_invoke$arity$4(cljs.core._EQ_,x,y,more));
};
var G__33949 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__33950__i = 0, G__33950__a = new Array(arguments.length -  2);
while (G__33950__i < G__33950__a.length) {G__33950__a[G__33950__i] = arguments[G__33950__i + 2]; ++G__33950__i;}
  more = new cljs.core.IndexedSeq(G__33950__a,0);
} 
return G__33949__delegate.call(this,x,y,more);};
G__33949.cljs$lang$maxFixedArity = 2;
G__33949.cljs$lang$applyTo = (function (arglist__33951){
var x = cljs.core.first(arglist__33951);
arglist__33951 = cljs.core.next(arglist__33951);
var y = cljs.core.first(arglist__33951);
var more = cljs.core.rest(arglist__33951);
return G__33949__delegate(x,y,more);
});
G__33949.cljs$core$IFn$_invoke$arity$variadic = G__33949__delegate;
return G__33949;
})()
;
not_EQ_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return not_EQ___1.call(this,x);
case 2:
return not_EQ___2.call(this,x,y);
default:
var G__33952 = null;
if (arguments.length > 2) {
var G__33953__i = 0, G__33953__a = new Array(arguments.length -  2);
while (G__33953__i < G__33953__a.length) {G__33953__a[G__33953__i] = arguments[G__33953__i + 2]; ++G__33953__i;}
G__33952 = new cljs.core.IndexedSeq(G__33953__a,0);
}
return not_EQ___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__33952);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
not_EQ_.cljs$lang$maxFixedArity = 2;
not_EQ_.cljs$lang$applyTo = not_EQ___3.cljs$lang$applyTo;
not_EQ_.cljs$core$IFn$_invoke$arity$1 = not_EQ___1;
not_EQ_.cljs$core$IFn$_invoke$arity$2 = not_EQ___2;
not_EQ_.cljs$core$IFn$_invoke$arity$variadic = not_EQ___3.cljs$core$IFn$_invoke$arity$variadic;
return not_EQ_;
})()
;
/**
* If coll is empty, returns nil, else coll
*/
cljs.core.not_empty = (function not_empty(coll){
if(cljs.core.seq(coll)){
return coll;
} else {
return null;
}
});
cljs.core.nil_iter = (function nil_iter(){
if(typeof cljs.core.t33957 !== 'undefined'){
} else {

/**
* @constructor
*/
cljs.core.t33957 = (function (nil_iter,meta33958){
this.nil_iter = nil_iter;
this.meta33958 = meta33958;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 393216;
})
cljs.core.t33957.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
return false;
});

cljs.core.t33957.prototype.next = (function (){
var self__ = this;
var _ = this;
return (new Error("No such element"));
});

cljs.core.t33957.prototype.remove = (function (){
var self__ = this;
var _ = this;
return (new Error("Unsupported operation"));
});

cljs.core.t33957.prototype.cljs$core$IMeta$_meta$arity$1 = (function (_33959){
var self__ = this;
var _33959__$1 = this;
return self__.meta33958;
});

cljs.core.t33957.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (_33959,meta33958__$1){
var self__ = this;
var _33959__$1 = this;
return (new cljs.core.t33957(self__.nil_iter,meta33958__$1));
});

cljs.core.t33957.cljs$lang$type = true;

cljs.core.t33957.cljs$lang$ctorStr = "cljs.core/t33957";

cljs.core.t33957.cljs$lang$ctorPrWriter = (function (this__24859__auto__,writer__24860__auto__,opt__24861__auto__){
return cljs.core._write(writer__24860__auto__,"cljs.core/t33957");
});

cljs.core.__GT_t33957 = (function __GT_t33957(nil_iter__$1,meta33958){
return (new cljs.core.t33957(nil_iter__$1,meta33958));
});

}

return (new cljs.core.t33957(nil_iter,new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null,"end-column","end-column",1425389514),54,new cljs.core.Keyword(null,"end-line","end-line",1837326455),2998,new cljs.core.Keyword(null,"column","column",2078222095),3,new cljs.core.Keyword(null,"line","line",212345235),2994,new cljs.core.Keyword(null,"file","file",-1269645878),"/home/callum/projects/closso/.repl/7957/cljs/core.cljs"], null)));
});

/**
* @constructor
*/
cljs.core.StringIter = (function (s,i){
this.s = s;
this.i = i;
})
cljs.core.StringIter.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
return (self__.i < self__.s.length);
});

cljs.core.StringIter.prototype.next = (function (){
var self__ = this;
var _ = this;
var ret = self__.s.charAt(self__.i);
self__.i = (self__.i + (1));

return ret;
});

cljs.core.StringIter.prototype.remove = (function (){
var self__ = this;
var _ = this;
return (new Error("Unsupported operation"));
});

cljs.core.StringIter.cljs$lang$type = true;

cljs.core.StringIter.cljs$lang$ctorStr = "cljs.core/StringIter";

cljs.core.StringIter.cljs$lang$ctorPrWriter = (function (this__24859__auto__,writer__24860__auto__,opt__24861__auto__){
return cljs.core._write(writer__24860__auto__,"cljs.core/StringIter");
});

cljs.core.__GT_StringIter = (function __GT_StringIter(s,i){
return (new cljs.core.StringIter(s,i));
});

cljs.core.string_iter = (function string_iter(x){
return (new cljs.core.StringIter(x,(0)));
});

/**
* @constructor
*/
cljs.core.ArrayIter = (function (arr,i){
this.arr = arr;
this.i = i;
})
cljs.core.ArrayIter.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
return (self__.i < self__.arr.length);
});

cljs.core.ArrayIter.prototype.next = (function (){
var self__ = this;
var _ = this;
var ret = (self__.arr[self__.i]);
self__.i = (self__.i + (1));

return ret;
});

cljs.core.ArrayIter.prototype.remove = (function (){
var self__ = this;
var _ = this;
return (new Error("Unsupported operation"));
});

cljs.core.ArrayIter.cljs$lang$type = true;

cljs.core.ArrayIter.cljs$lang$ctorStr = "cljs.core/ArrayIter";

cljs.core.ArrayIter.cljs$lang$ctorPrWriter = (function (this__24859__auto__,writer__24860__auto__,opt__24861__auto__){
return cljs.core._write(writer__24860__auto__,"cljs.core/ArrayIter");
});

cljs.core.__GT_ArrayIter = (function __GT_ArrayIter(arr,i){
return (new cljs.core.ArrayIter(arr,i));
});

cljs.core.array_iter = (function array_iter(x){
return (new cljs.core.ArrayIter(x,(0)));
});
cljs.core.INIT = {};
cljs.core.START = {};

/**
* @constructor
*/
cljs.core.SeqIter = (function (_seq,_next){
this._seq = _seq;
this._next = _next;
})
cljs.core.SeqIter.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
if((self__._seq === cljs.core.INIT)){
self__._seq = cljs.core.START;

self__._next = cljs.core.seq(self__._next);
} else {
if((self__._seq === self__._next)){
self__._next = cljs.core.next(self__._seq);
} else {
}
}

return !((self__._next == null));
});

cljs.core.SeqIter.prototype.next = (function (){
var self__ = this;
var this$ = this;
if(cljs.core.not(this$.hasNext())){
throw (new Error("No such element"));
} else {
self__._seq = self__._next;

return cljs.core.first(self__._next);
}
});

cljs.core.SeqIter.prototype.remove = (function (){
var self__ = this;
var _ = this;
return (new Error("Unsupported operation"));
});

cljs.core.SeqIter.cljs$lang$type = true;

cljs.core.SeqIter.cljs$lang$ctorStr = "cljs.core/SeqIter";

cljs.core.SeqIter.cljs$lang$ctorPrWriter = (function (this__24859__auto__,writer__24860__auto__,opt__24861__auto__){
return cljs.core._write(writer__24860__auto__,"cljs.core/SeqIter");
});

cljs.core.__GT_SeqIter = (function __GT_SeqIter(_seq,_next){
return (new cljs.core.SeqIter(_seq,_next));
});

cljs.core.seq_iter = (function seq_iter(coll){
return (new cljs.core.SeqIter(cljs.core.INIT,coll));
});
cljs.core.iter = (function iter(coll){
if((coll == null)){
return cljs.core.nil_iter();
} else {
if(typeof coll === 'string'){
return cljs.core.string_iter(coll);
} else {
if(coll instanceof Array){
return cljs.core.array_iter(coll);
} else {
if(cljs.core.iterable_QMARK_(coll)){
return cljs.core._iterator(coll);
} else {
if(cljs.core.seqable_QMARK_(coll)){
return cljs.core.seq_iter(coll);
} else {
throw (new Error([cljs.core.str("Cannot create iterator from "),cljs.core.str(coll)].join('')));

}
}
}
}
}
});
cljs.core.lazy_transformer = (function lazy_transformer(stepper){
return (new cljs.core.LazyTransformer(stepper,null,null,null));
});

/**
* @constructor
*/
cljs.core.Stepper = (function (xform,iter){
this.xform = xform;
this.iter = iter;
})
cljs.core.Stepper.prototype.step = (function (lt){
var self__ = this;
var this$ = this;
while(true){
if(cljs.core.truth_((function (){var and__24260__auto__ = !((lt.stepper == null));
if(and__24260__auto__){
return self__.iter.hasNext();
} else {
return and__24260__auto__;
}
})())){
if(cljs.core.reduced_QMARK_((function (){var G__33960 = lt;
var G__33961 = self__.iter.next();
return (self__.xform.cljs$core$IFn$_invoke$arity$2 ? self__.xform.cljs$core$IFn$_invoke$arity$2(G__33960,G__33961) : self__.xform.call(null,G__33960,G__33961));
})())){
if((lt.rest == null)){
} else {
lt.rest.stepper = null;
}
} else {
continue;
}
} else {
}
break;
}

if((lt.stepper == null)){
return null;
} else {
var G__33962 = lt;
return (self__.xform.cljs$core$IFn$_invoke$arity$1 ? self__.xform.cljs$core$IFn$_invoke$arity$1(G__33962) : self__.xform.call(null,G__33962));
}
});

cljs.core.Stepper.cljs$lang$type = true;

cljs.core.Stepper.cljs$lang$ctorStr = "cljs.core/Stepper";

cljs.core.Stepper.cljs$lang$ctorPrWriter = (function (this__24859__auto__,writer__24860__auto__,opt__24861__auto__){
return cljs.core._write(writer__24860__auto__,"cljs.core/Stepper");
});

cljs.core.__GT_Stepper = (function __GT_Stepper(xform,iter){
return (new cljs.core.Stepper(xform,iter));
});

cljs.core.stepper = (function stepper(xform,iter){
var stepfn = (function() {
var stepfn = null;
var stepfn__1 = (function (result){
var lt = ((cljs.core.reduced_QMARK_(result))?cljs.core.deref(result):result);
lt.stepper = null;

return result;
});
var stepfn__2 = (function (result,input){
var lt = result;
lt.first = input;

lt.rest = cljs.core.lazy_transformer(lt.stepper);

lt.stepper = null;

return lt.rest;
});
stepfn = function(result,input){
switch(arguments.length){
case 1:
return stepfn__1.call(this,result);
case 2:
return stepfn__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
stepfn.cljs$core$IFn$_invoke$arity$1 = stepfn__1;
stepfn.cljs$core$IFn$_invoke$arity$2 = stepfn__2;
return stepfn;
})()
;
return (new cljs.core.Stepper((function (){var G__33964 = stepfn;
return (xform.cljs$core$IFn$_invoke$arity$1 ? xform.cljs$core$IFn$_invoke$arity$1(G__33964) : xform.call(null,G__33964));
})(),iter));
});

/**
* @constructor
*/
cljs.core.MultiStepper = (function (xform,iters,nexts){
this.xform = xform;
this.iters = iters;
this.nexts = nexts;
})
cljs.core.MultiStepper.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
var iters__$1 = cljs.core.seq(self__.iters);
while(true){
if(!((iters__$1 == null))){
var iter = cljs.core.first(iters__$1);
if(cljs.core.not(iter.hasNext())){
return false;
} else {
var G__33966 = cljs.core.next(iters__$1);
iters__$1 = G__33966;
continue;
}
} else {
return true;
}
break;
}
});

cljs.core.MultiStepper.prototype.next = (function (){
var self__ = this;
var _ = this;
var n__25159__auto___33967 = self__.iters.length;
var i_33968 = (0);
while(true){
if((i_33968 < n__25159__auto___33967)){
(self__.nexts[i_33968] = (self__.iters[i_33968]).next());

var G__33969 = (i_33968 + (1));
i_33968 = G__33969;
continue;
} else {
}
break;
}

return cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(self__.nexts,(0));
});

cljs.core.MultiStepper.prototype.step = (function (lt){
var self__ = this;
var this$ = this;
while(true){
if(cljs.core.truth_((function (){var and__24260__auto__ = !((lt.stepper == null));
if(and__24260__auto__){
return this$.hasNext();
} else {
return and__24260__auto__;
}
})())){
if(cljs.core.reduced_QMARK_(cljs.core.apply.cljs$core$IFn$_invoke$arity$2(self__.xform,cljs.core.cons(lt,this$.next())))){
if((lt.rest == null)){
} else {
lt.rest.stepper = null;
}
} else {
continue;
}
} else {
}
break;
}

if((lt.stepper == null)){
return null;
} else {
var G__33965 = lt;
return (self__.xform.cljs$core$IFn$_invoke$arity$1 ? self__.xform.cljs$core$IFn$_invoke$arity$1(G__33965) : self__.xform.call(null,G__33965));
}
});

cljs.core.MultiStepper.cljs$lang$type = true;

cljs.core.MultiStepper.cljs$lang$ctorStr = "cljs.core/MultiStepper";

cljs.core.MultiStepper.cljs$lang$ctorPrWriter = (function (this__24859__auto__,writer__24860__auto__,opt__24861__auto__){
return cljs.core._write(writer__24860__auto__,"cljs.core/MultiStepper");
});

cljs.core.__GT_MultiStepper = (function __GT_MultiStepper(xform,iters,nexts){
return (new cljs.core.MultiStepper(xform,iters,nexts));
});

cljs.core.multi_stepper = (function() {
var multi_stepper = null;
var multi_stepper__2 = (function (xform,iters){
return multi_stepper.cljs$core$IFn$_invoke$arity$3(xform,iters,(new Array(iters.length)));
});
var multi_stepper__3 = (function (xform,iters,nexts){
var stepfn = (function() {
var stepfn = null;
var stepfn__1 = (function (result){
var lt = ((cljs.core.reduced_QMARK_(result))?cljs.core.deref(result):result);
lt.stepper = null;

return lt;
});
var stepfn__2 = (function (result,input){
var lt = result;
lt.first = input;

lt.rest = cljs.core.lazy_transformer(lt.stepper);

lt.stepper = null;

return lt.rest;
});
stepfn = function(result,input){
switch(arguments.length){
case 1:
return stepfn__1.call(this,result);
case 2:
return stepfn__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
stepfn.cljs$core$IFn$_invoke$arity$1 = stepfn__1;
stepfn.cljs$core$IFn$_invoke$arity$2 = stepfn__2;
return stepfn;
})()
;
return (new cljs.core.MultiStepper((function (){var G__33974 = stepfn;
return (xform.cljs$core$IFn$_invoke$arity$1 ? xform.cljs$core$IFn$_invoke$arity$1(G__33974) : xform.call(null,G__33974));
})(),iters,nexts));
});
multi_stepper = function(xform,iters,nexts){
switch(arguments.length){
case 2:
return multi_stepper__2.call(this,xform,iters);
case 3:
return multi_stepper__3.call(this,xform,iters,nexts);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
multi_stepper.cljs$core$IFn$_invoke$arity$2 = multi_stepper__2;
multi_stepper.cljs$core$IFn$_invoke$arity$3 = multi_stepper__3;
return multi_stepper;
})()
;

/**
* @constructor
*/
cljs.core.LazyTransformer = (function (stepper,first,rest,meta){
this.stepper = stepper;
this.first = first;
this.rest = rest;
this.meta = meta;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 31719628;
})
cljs.core.LazyTransformer.prototype.cljs$core$INext$_next$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
if((self__.stepper == null)){
} else {
cljs.core._seq(this$__$1);
}

if((self__.rest == null)){
return null;
} else {
return cljs.core._seq(self__.rest);
}
});

cljs.core.LazyTransformer.prototype.cljs$core$ISeq$_first$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
if((self__.stepper == null)){
} else {
cljs.core._seq(this$__$1);
}

if((self__.rest == null)){
return null;
} else {
return self__.first;
}
});

cljs.core.LazyTransformer.prototype.cljs$core$ISeq$_rest$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
if((self__.stepper == null)){
} else {
cljs.core._seq(this$__$1);
}

if((self__.rest == null)){
return cljs.core.List.EMPTY;
} else {
return self__.rest;
}
});

cljs.core.LazyTransformer.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
if((self__.stepper == null)){
} else {
self__.stepper.step(this$__$1);
}

if((self__.rest == null)){
return null;
} else {
return this$__$1;
}
});

cljs.core.LazyTransformer.prototype.cljs$core$IHash$_hash$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return cljs.core.hash_ordered_coll(this$__$1);
});

cljs.core.LazyTransformer.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (this$,other){
var self__ = this;
var this$__$1 = this;
var s = cljs.core._seq(this$__$1);
if(!((s == null))){
return cljs.core.equiv_sequential(this$__$1,other);
} else {
return (cljs.core.sequential_QMARK_(other)) && ((cljs.core.seq(other) == null));
}
});

cljs.core.LazyTransformer.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return cljs.core.List.EMPTY;
});

cljs.core.LazyTransformer.prototype.cljs$core$ICollection$_conj$arity$2 = (function (this$,o){
var self__ = this;
var this$__$1 = this;
return cljs.core.cons(o,cljs.core._seq(this$__$1));
});

cljs.core.LazyTransformer.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (this$,new_meta){
var self__ = this;
var this$__$1 = this;
return (new cljs.core.LazyTransformer(self__.stepper,self__.first,self__.rest,new_meta));
});

cljs.core.LazyTransformer.cljs$lang$type = true;

cljs.core.LazyTransformer.cljs$lang$ctorStr = "cljs.core/LazyTransformer";

cljs.core.LazyTransformer.cljs$lang$ctorPrWriter = (function (this__24859__auto__,writer__24860__auto__,opt__24861__auto__){
return cljs.core._write(writer__24860__auto__,"cljs.core/LazyTransformer");
});

cljs.core.__GT_LazyTransformer = (function __GT_LazyTransformer(stepper,first,rest,meta){
return (new cljs.core.LazyTransformer(stepper,first,rest,meta));
});

(cljs.core.LazyTransformer.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__25250__auto__ = this;
return cljs.core.es6_iterator(this__25250__auto__);
}));
cljs.core.LazyTransformer.create = (function (xform,coll){
return (new cljs.core.LazyTransformer(cljs.core.stepper(xform,cljs.core.iter(coll)),null,null,null));
});
cljs.core.LazyTransformer.createMulti = (function (xform,colls){
var iters = [];
var seq__33975_33979 = cljs.core.seq(colls);
var chunk__33976_33980 = null;
var count__33977_33981 = (0);
var i__33978_33982 = (0);
while(true){
if((i__33978_33982 < count__33977_33981)){
var coll_33983 = chunk__33976_33980.cljs$core$IIndexed$_nth$arity$2(null,i__33978_33982);
iters.push(cljs.core.iter(coll_33983));

var G__33984 = seq__33975_33979;
var G__33985 = chunk__33976_33980;
var G__33986 = count__33977_33981;
var G__33987 = (i__33978_33982 + (1));
seq__33975_33979 = G__33984;
chunk__33976_33980 = G__33985;
count__33977_33981 = G__33986;
i__33978_33982 = G__33987;
continue;
} else {
var temp__4126__auto___33988 = cljs.core.seq(seq__33975_33979);
if(temp__4126__auto___33988){
var seq__33975_33989__$1 = temp__4126__auto___33988;
if(cljs.core.chunked_seq_QMARK_(seq__33975_33989__$1)){
var c__25059__auto___33990 = cljs.core.chunk_first(seq__33975_33989__$1);
var G__33991 = cljs.core.chunk_rest(seq__33975_33989__$1);
var G__33992 = c__25059__auto___33990;
var G__33993 = cljs.core.count(c__25059__auto___33990);
var G__33994 = (0);
seq__33975_33979 = G__33991;
chunk__33976_33980 = G__33992;
count__33977_33981 = G__33993;
i__33978_33982 = G__33994;
continue;
} else {
var coll_33995 = cljs.core.first(seq__33975_33989__$1);
iters.push(cljs.core.iter(coll_33995));

var G__33996 = cljs.core.next(seq__33975_33989__$1);
var G__33997 = null;
var G__33998 = (0);
var G__33999 = (0);
seq__33975_33979 = G__33996;
chunk__33976_33980 = G__33997;
count__33977_33981 = G__33998;
i__33978_33982 = G__33999;
continue;
}
} else {
}
}
break;
}

return (new cljs.core.LazyTransformer(cljs.core.multi_stepper.cljs$core$IFn$_invoke$arity$3(xform,iters,(new Array(iters.length))),null,null,null));
});
/**
* Coerces coll to a (possibly empty) sequence, if it is not already
* one. Will not force a lazy seq. (sequence nil) yields (), When a
* transducer is supplied, returns a lazy sequence of applications of
* the transform to the items in coll(s), i.e. to the set of first
* items of each coll, followed by the set of second
* items in each coll, until any one of the colls is exhausted.  Any
* remaining items in other colls are ignored. The transform should accept
* number-of-colls arguments
* @param {...*} var_args
*/
cljs.core.sequence = (function() {
var sequence = null;
var sequence__1 = (function (coll){
if(cljs.core.seq_QMARK_(coll)){
return coll;
} else {
var or__24272__auto__ = cljs.core.seq(coll);
if(or__24272__auto__){
return or__24272__auto__;
} else {
return cljs.core.List.EMPTY;
}
}
});
var sequence__2 = (function (xform,coll){
return cljs.core.LazyTransformer.create(xform,coll);
});
var sequence__3 = (function() { 
var G__34000__delegate = function (xform,coll,colls){
return cljs.core.LazyTransformer.createMulti(xform,cljs.core.to_array(cljs.core.cons(coll,colls)));
};
var G__34000 = function (xform,coll,var_args){
var colls = null;
if (arguments.length > 2) {
var G__34001__i = 0, G__34001__a = new Array(arguments.length -  2);
while (G__34001__i < G__34001__a.length) {G__34001__a[G__34001__i] = arguments[G__34001__i + 2]; ++G__34001__i;}
  colls = new cljs.core.IndexedSeq(G__34001__a,0);
} 
return G__34000__delegate.call(this,xform,coll,colls);};
G__34000.cljs$lang$maxFixedArity = 2;
G__34000.cljs$lang$applyTo = (function (arglist__34002){
var xform = cljs.core.first(arglist__34002);
arglist__34002 = cljs.core.next(arglist__34002);
var coll = cljs.core.first(arglist__34002);
var colls = cljs.core.rest(arglist__34002);
return G__34000__delegate(xform,coll,colls);
});
G__34000.cljs$core$IFn$_invoke$arity$variadic = G__34000__delegate;
return G__34000;
})()
;
sequence = function(xform,coll,var_args){
var colls = var_args;
switch(arguments.length){
case 1:
return sequence__1.call(this,xform);
case 2:
return sequence__2.call(this,xform,coll);
default:
var G__34003 = null;
if (arguments.length > 2) {
var G__34004__i = 0, G__34004__a = new Array(arguments.length -  2);
while (G__34004__i < G__34004__a.length) {G__34004__a[G__34004__i] = arguments[G__34004__i + 2]; ++G__34004__i;}
G__34003 = new cljs.core.IndexedSeq(G__34004__a,0);
}
return sequence__3.cljs$core$IFn$_invoke$arity$variadic(xform,coll, G__34003);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
sequence.cljs$lang$maxFixedArity = 2;
sequence.cljs$lang$applyTo = sequence__3.cljs$lang$applyTo;
sequence.cljs$core$IFn$_invoke$arity$1 = sequence__1;
sequence.cljs$core$IFn$_invoke$arity$2 = sequence__2;
sequence.cljs$core$IFn$_invoke$arity$variadic = sequence__3.cljs$core$IFn$_invoke$arity$variadic;
return sequence;
})()
;
/**
* Returns true if (pred x) is logical true for every x in coll, else
* false.
*/
cljs.core.every_QMARK_ = (function every_QMARK_(pred,coll){
while(true){
if((cljs.core.seq(coll) == null)){
return true;
} else {
if(cljs.core.truth_((function (){var G__34006 = cljs.core.first(coll);
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__34006) : pred.call(null,G__34006));
})())){
var G__34007 = pred;
var G__34008 = cljs.core.next(coll);
pred = G__34007;
coll = G__34008;
continue;
} else {
return false;

}
}
break;
}
});
/**
* Returns false if (pred x) is logical true for every x in
* coll, else true.
*/
cljs.core.not_every_QMARK_ = (function not_every_QMARK_(pred,coll){
return !(cljs.core.every_QMARK_(pred,coll));
});
/**
* Returns the first logical true value of (pred x) for any x in coll,
* else nil.  One common idiom is to use a set as pred, for example
* this will return :fred if :fred is in the sequence, otherwise nil:
* (some #{:fred} coll)
*/
cljs.core.some = (function some(pred,coll){
while(true){
if(cljs.core.seq(coll)){
var or__24272__auto__ = (function (){var G__34012 = cljs.core.first(coll);
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__34012) : pred.call(null,G__34012));
})();
if(cljs.core.truth_(or__24272__auto__)){
return or__24272__auto__;
} else {
var G__34013 = pred;
var G__34014 = cljs.core.next(coll);
pred = G__34013;
coll = G__34014;
continue;
}
} else {
return null;
}
break;
}
});
/**
* Returns false if (pred x) is logical true for any x in coll,
* else true.
*/
cljs.core.not_any_QMARK_ = (function not_any_QMARK_(pred,coll){
return cljs.core.not(cljs.core.some(pred,coll));
});
/**
* Returns true if n is even, throws an exception if n is not an integer
*/
cljs.core.even_QMARK_ = (function even_QMARK_(n){
if(cljs.core.integer_QMARK_(n)){
return ((n & (1)) === (0));
} else {
throw (new Error([cljs.core.str("Argument must be an integer: "),cljs.core.str(n)].join('')));
}
});
/**
* Returns true if n is odd, throws an exception if n is not an integer
*/
cljs.core.odd_QMARK_ = (function odd_QMARK_(n){
return !(cljs.core.even_QMARK_(n));
});
/**
* Takes a fn f and returns a fn that takes the same arguments as f,
* has the same effects, if any, and returns the opposite truth value.
*/
cljs.core.complement = (function complement(f){
return (function() {
var G__34021 = null;
var G__34021__0 = (function (){
return cljs.core.not((function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})());
});
var G__34021__1 = (function (x){
return cljs.core.not((function (){var G__34018 = x;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__34018) : f.call(null,G__34018));
})());
});
var G__34021__2 = (function (x,y){
return cljs.core.not((function (){var G__34019 = x;
var G__34020 = y;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__34019,G__34020) : f.call(null,G__34019,G__34020));
})());
});
var G__34021__3 = (function() { 
var G__34022__delegate = function (x,y,zs){
return cljs.core.not(cljs.core.apply.cljs$core$IFn$_invoke$arity$4(f,x,y,zs));
};
var G__34022 = function (x,y,var_args){
var zs = null;
if (arguments.length > 2) {
var G__34023__i = 0, G__34023__a = new Array(arguments.length -  2);
while (G__34023__i < G__34023__a.length) {G__34023__a[G__34023__i] = arguments[G__34023__i + 2]; ++G__34023__i;}
  zs = new cljs.core.IndexedSeq(G__34023__a,0);
} 
return G__34022__delegate.call(this,x,y,zs);};
G__34022.cljs$lang$maxFixedArity = 2;
G__34022.cljs$lang$applyTo = (function (arglist__34024){
var x = cljs.core.first(arglist__34024);
arglist__34024 = cljs.core.next(arglist__34024);
var y = cljs.core.first(arglist__34024);
var zs = cljs.core.rest(arglist__34024);
return G__34022__delegate(x,y,zs);
});
G__34022.cljs$core$IFn$_invoke$arity$variadic = G__34022__delegate;
return G__34022;
})()
;
G__34021 = function(x,y,var_args){
var zs = var_args;
switch(arguments.length){
case 0:
return G__34021__0.call(this);
case 1:
return G__34021__1.call(this,x);
case 2:
return G__34021__2.call(this,x,y);
default:
var G__34025 = null;
if (arguments.length > 2) {
var G__34026__i = 0, G__34026__a = new Array(arguments.length -  2);
while (G__34026__i < G__34026__a.length) {G__34026__a[G__34026__i] = arguments[G__34026__i + 2]; ++G__34026__i;}
G__34025 = new cljs.core.IndexedSeq(G__34026__a,0);
}
return G__34021__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__34025);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__34021.cljs$lang$maxFixedArity = 2;
G__34021.cljs$lang$applyTo = G__34021__3.cljs$lang$applyTo;
G__34021.cljs$core$IFn$_invoke$arity$0 = G__34021__0;
G__34021.cljs$core$IFn$_invoke$arity$1 = G__34021__1;
G__34021.cljs$core$IFn$_invoke$arity$2 = G__34021__2;
G__34021.cljs$core$IFn$_invoke$arity$variadic = G__34021__3.cljs$core$IFn$_invoke$arity$variadic;
return G__34021;
})()
});
/**
* Returns a function that takes any number of arguments and returns x.
*/
cljs.core.constantly = (function constantly(x){
return (function() { 
var G__34027__delegate = function (args){
return x;
};
var G__34027 = function (var_args){
var args = null;
if (arguments.length > 0) {
var G__34028__i = 0, G__34028__a = new Array(arguments.length -  0);
while (G__34028__i < G__34028__a.length) {G__34028__a[G__34028__i] = arguments[G__34028__i + 0]; ++G__34028__i;}
  args = new cljs.core.IndexedSeq(G__34028__a,0);
} 
return G__34027__delegate.call(this,args);};
G__34027.cljs$lang$maxFixedArity = 0;
G__34027.cljs$lang$applyTo = (function (arglist__34029){
var args = cljs.core.seq(arglist__34029);
return G__34027__delegate(args);
});
G__34027.cljs$core$IFn$_invoke$arity$variadic = G__34027__delegate;
return G__34027;
})()
;
});
/**
* Takes a set of functions and returns a fn that is the composition
* of those fns.  The returned fn takes a variable number of args,
* applies the rightmost of fns to the args, the next
* fn (right-to-left) to the result, etc.
* @param {...*} var_args
*/
cljs.core.comp = (function() {
var comp = null;
var comp__0 = (function (){
return cljs.core.identity;
});
var comp__1 = (function (f){
return f;
});
var comp__2 = (function (f,g){
return (function() {
var G__34084 = null;
var G__34084__0 = (function (){
var G__34057 = (function (){return (g.cljs$core$IFn$_invoke$arity$0 ? g.cljs$core$IFn$_invoke$arity$0() : g.call(null));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__34057) : f.call(null,G__34057));
});
var G__34084__1 = (function (x){
var G__34058 = (function (){var G__34059 = x;
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__34059) : g.call(null,G__34059));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__34058) : f.call(null,G__34058));
});
var G__34084__2 = (function (x,y){
var G__34060 = (function (){var G__34061 = x;
var G__34062 = y;
return (g.cljs$core$IFn$_invoke$arity$2 ? g.cljs$core$IFn$_invoke$arity$2(G__34061,G__34062) : g.call(null,G__34061,G__34062));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__34060) : f.call(null,G__34060));
});
var G__34084__3 = (function (x,y,z){
var G__34063 = (function (){var G__34064 = x;
var G__34065 = y;
var G__34066 = z;
return (g.cljs$core$IFn$_invoke$arity$3 ? g.cljs$core$IFn$_invoke$arity$3(G__34064,G__34065,G__34066) : g.call(null,G__34064,G__34065,G__34066));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__34063) : f.call(null,G__34063));
});
var G__34084__4 = (function() { 
var G__34085__delegate = function (x,y,z,args){
var G__34067 = cljs.core.apply.cljs$core$IFn$_invoke$arity$5(g,x,y,z,args);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__34067) : f.call(null,G__34067));
};
var G__34085 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__34086__i = 0, G__34086__a = new Array(arguments.length -  3);
while (G__34086__i < G__34086__a.length) {G__34086__a[G__34086__i] = arguments[G__34086__i + 3]; ++G__34086__i;}
  args = new cljs.core.IndexedSeq(G__34086__a,0);
} 
return G__34085__delegate.call(this,x,y,z,args);};
G__34085.cljs$lang$maxFixedArity = 3;
G__34085.cljs$lang$applyTo = (function (arglist__34087){
var x = cljs.core.first(arglist__34087);
arglist__34087 = cljs.core.next(arglist__34087);
var y = cljs.core.first(arglist__34087);
arglist__34087 = cljs.core.next(arglist__34087);
var z = cljs.core.first(arglist__34087);
var args = cljs.core.rest(arglist__34087);
return G__34085__delegate(x,y,z,args);
});
G__34085.cljs$core$IFn$_invoke$arity$variadic = G__34085__delegate;
return G__34085;
})()
;
G__34084 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__34084__0.call(this);
case 1:
return G__34084__1.call(this,x);
case 2:
return G__34084__2.call(this,x,y);
case 3:
return G__34084__3.call(this,x,y,z);
default:
var G__34088 = null;
if (arguments.length > 3) {
var G__34089__i = 0, G__34089__a = new Array(arguments.length -  3);
while (G__34089__i < G__34089__a.length) {G__34089__a[G__34089__i] = arguments[G__34089__i + 3]; ++G__34089__i;}
G__34088 = new cljs.core.IndexedSeq(G__34089__a,0);
}
return G__34084__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__34088);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__34084.cljs$lang$maxFixedArity = 3;
G__34084.cljs$lang$applyTo = G__34084__4.cljs$lang$applyTo;
G__34084.cljs$core$IFn$_invoke$arity$0 = G__34084__0;
G__34084.cljs$core$IFn$_invoke$arity$1 = G__34084__1;
G__34084.cljs$core$IFn$_invoke$arity$2 = G__34084__2;
G__34084.cljs$core$IFn$_invoke$arity$3 = G__34084__3;
G__34084.cljs$core$IFn$_invoke$arity$variadic = G__34084__4.cljs$core$IFn$_invoke$arity$variadic;
return G__34084;
})()
});
var comp__3 = (function (f,g,h){
return (function() {
var G__34090 = null;
var G__34090__0 = (function (){
var G__34068 = (function (){var G__34069 = (function (){return (h.cljs$core$IFn$_invoke$arity$0 ? h.cljs$core$IFn$_invoke$arity$0() : h.call(null));
})();
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__34069) : g.call(null,G__34069));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__34068) : f.call(null,G__34068));
});
var G__34090__1 = (function (x){
var G__34070 = (function (){var G__34071 = (function (){var G__34072 = x;
return (h.cljs$core$IFn$_invoke$arity$1 ? h.cljs$core$IFn$_invoke$arity$1(G__34072) : h.call(null,G__34072));
})();
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__34071) : g.call(null,G__34071));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__34070) : f.call(null,G__34070));
});
var G__34090__2 = (function (x,y){
var G__34073 = (function (){var G__34074 = (function (){var G__34075 = x;
var G__34076 = y;
return (h.cljs$core$IFn$_invoke$arity$2 ? h.cljs$core$IFn$_invoke$arity$2(G__34075,G__34076) : h.call(null,G__34075,G__34076));
})();
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__34074) : g.call(null,G__34074));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__34073) : f.call(null,G__34073));
});
var G__34090__3 = (function (x,y,z){
var G__34077 = (function (){var G__34078 = (function (){var G__34079 = x;
var G__34080 = y;
var G__34081 = z;
return (h.cljs$core$IFn$_invoke$arity$3 ? h.cljs$core$IFn$_invoke$arity$3(G__34079,G__34080,G__34081) : h.call(null,G__34079,G__34080,G__34081));
})();
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__34078) : g.call(null,G__34078));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__34077) : f.call(null,G__34077));
});
var G__34090__4 = (function() { 
var G__34091__delegate = function (x,y,z,args){
var G__34082 = (function (){var G__34083 = cljs.core.apply.cljs$core$IFn$_invoke$arity$5(h,x,y,z,args);
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__34083) : g.call(null,G__34083));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__34082) : f.call(null,G__34082));
};
var G__34091 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__34092__i = 0, G__34092__a = new Array(arguments.length -  3);
while (G__34092__i < G__34092__a.length) {G__34092__a[G__34092__i] = arguments[G__34092__i + 3]; ++G__34092__i;}
  args = new cljs.core.IndexedSeq(G__34092__a,0);
} 
return G__34091__delegate.call(this,x,y,z,args);};
G__34091.cljs$lang$maxFixedArity = 3;
G__34091.cljs$lang$applyTo = (function (arglist__34093){
var x = cljs.core.first(arglist__34093);
arglist__34093 = cljs.core.next(arglist__34093);
var y = cljs.core.first(arglist__34093);
arglist__34093 = cljs.core.next(arglist__34093);
var z = cljs.core.first(arglist__34093);
var args = cljs.core.rest(arglist__34093);
return G__34091__delegate(x,y,z,args);
});
G__34091.cljs$core$IFn$_invoke$arity$variadic = G__34091__delegate;
return G__34091;
})()
;
G__34090 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__34090__0.call(this);
case 1:
return G__34090__1.call(this,x);
case 2:
return G__34090__2.call(this,x,y);
case 3:
return G__34090__3.call(this,x,y,z);
default:
var G__34094 = null;
if (arguments.length > 3) {
var G__34095__i = 0, G__34095__a = new Array(arguments.length -  3);
while (G__34095__i < G__34095__a.length) {G__34095__a[G__34095__i] = arguments[G__34095__i + 3]; ++G__34095__i;}
G__34094 = new cljs.core.IndexedSeq(G__34095__a,0);
}
return G__34090__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__34094);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__34090.cljs$lang$maxFixedArity = 3;
G__34090.cljs$lang$applyTo = G__34090__4.cljs$lang$applyTo;
G__34090.cljs$core$IFn$_invoke$arity$0 = G__34090__0;
G__34090.cljs$core$IFn$_invoke$arity$1 = G__34090__1;
G__34090.cljs$core$IFn$_invoke$arity$2 = G__34090__2;
G__34090.cljs$core$IFn$_invoke$arity$3 = G__34090__3;
G__34090.cljs$core$IFn$_invoke$arity$variadic = G__34090__4.cljs$core$IFn$_invoke$arity$variadic;
return G__34090;
})()
});
var comp__4 = (function() { 
var G__34096__delegate = function (f1,f2,f3,fs){
var fs__$1 = cljs.core.reverse(cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(f1,f2,f3,fs));
return ((function (fs__$1){
return (function() { 
var G__34097__delegate = function (args){
var ret = cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.first(fs__$1),args);
var fs__$2 = cljs.core.next(fs__$1);
while(true){
if(fs__$2){
var G__34098 = cljs.core.first(fs__$2).call(null,ret);
var G__34099 = cljs.core.next(fs__$2);
ret = G__34098;
fs__$2 = G__34099;
continue;
} else {
return ret;
}
break;
}
};
var G__34097 = function (var_args){
var args = null;
if (arguments.length > 0) {
var G__34100__i = 0, G__34100__a = new Array(arguments.length -  0);
while (G__34100__i < G__34100__a.length) {G__34100__a[G__34100__i] = arguments[G__34100__i + 0]; ++G__34100__i;}
  args = new cljs.core.IndexedSeq(G__34100__a,0);
} 
return G__34097__delegate.call(this,args);};
G__34097.cljs$lang$maxFixedArity = 0;
G__34097.cljs$lang$applyTo = (function (arglist__34101){
var args = cljs.core.seq(arglist__34101);
return G__34097__delegate(args);
});
G__34097.cljs$core$IFn$_invoke$arity$variadic = G__34097__delegate;
return G__34097;
})()
;
;})(fs__$1))
};
var G__34096 = function (f1,f2,f3,var_args){
var fs = null;
if (arguments.length > 3) {
var G__34102__i = 0, G__34102__a = new Array(arguments.length -  3);
while (G__34102__i < G__34102__a.length) {G__34102__a[G__34102__i] = arguments[G__34102__i + 3]; ++G__34102__i;}
  fs = new cljs.core.IndexedSeq(G__34102__a,0);
} 
return G__34096__delegate.call(this,f1,f2,f3,fs);};
G__34096.cljs$lang$maxFixedArity = 3;
G__34096.cljs$lang$applyTo = (function (arglist__34103){
var f1 = cljs.core.first(arglist__34103);
arglist__34103 = cljs.core.next(arglist__34103);
var f2 = cljs.core.first(arglist__34103);
arglist__34103 = cljs.core.next(arglist__34103);
var f3 = cljs.core.first(arglist__34103);
var fs = cljs.core.rest(arglist__34103);
return G__34096__delegate(f1,f2,f3,fs);
});
G__34096.cljs$core$IFn$_invoke$arity$variadic = G__34096__delegate;
return G__34096;
})()
;
comp = function(f1,f2,f3,var_args){
var fs = var_args;
switch(arguments.length){
case 0:
return comp__0.call(this);
case 1:
return comp__1.call(this,f1);
case 2:
return comp__2.call(this,f1,f2);
case 3:
return comp__3.call(this,f1,f2,f3);
default:
var G__34104 = null;
if (arguments.length > 3) {
var G__34105__i = 0, G__34105__a = new Array(arguments.length -  3);
while (G__34105__i < G__34105__a.length) {G__34105__a[G__34105__i] = arguments[G__34105__i + 3]; ++G__34105__i;}
G__34104 = new cljs.core.IndexedSeq(G__34105__a,0);
}
return comp__4.cljs$core$IFn$_invoke$arity$variadic(f1,f2,f3, G__34104);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
comp.cljs$lang$maxFixedArity = 3;
comp.cljs$lang$applyTo = comp__4.cljs$lang$applyTo;
comp.cljs$core$IFn$_invoke$arity$0 = comp__0;
comp.cljs$core$IFn$_invoke$arity$1 = comp__1;
comp.cljs$core$IFn$_invoke$arity$2 = comp__2;
comp.cljs$core$IFn$_invoke$arity$3 = comp__3;
comp.cljs$core$IFn$_invoke$arity$variadic = comp__4.cljs$core$IFn$_invoke$arity$variadic;
return comp;
})()
;
/**
* Takes a function f and fewer than the normal arguments to f, and
* returns a fn that takes a variable number of additional args. When
* called, the returned function calls f with args + additional args.
* @param {...*} var_args
*/
cljs.core.partial = (function() {
var partial = null;
var partial__1 = (function (f){
return f;
});
var partial__2 = (function (f,arg1){
return (function() {
var G__34190 = null;
var G__34190__0 = (function (){
var G__34148 = arg1;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__34148) : f.call(null,G__34148));
});
var G__34190__1 = (function (x){
var G__34149 = arg1;
var G__34150 = x;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__34149,G__34150) : f.call(null,G__34149,G__34150));
});
var G__34190__2 = (function (x,y){
var G__34151 = arg1;
var G__34152 = x;
var G__34153 = y;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__34151,G__34152,G__34153) : f.call(null,G__34151,G__34152,G__34153));
});
var G__34190__3 = (function (x,y,z){
var G__34154 = arg1;
var G__34155 = x;
var G__34156 = y;
var G__34157 = z;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__34154,G__34155,G__34156,G__34157) : f.call(null,G__34154,G__34155,G__34156,G__34157));
});
var G__34190__4 = (function() { 
var G__34191__delegate = function (x,y,z,args){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f,arg1,x,y,z,cljs.core.array_seq([args], 0));
};
var G__34191 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__34192__i = 0, G__34192__a = new Array(arguments.length -  3);
while (G__34192__i < G__34192__a.length) {G__34192__a[G__34192__i] = arguments[G__34192__i + 3]; ++G__34192__i;}
  args = new cljs.core.IndexedSeq(G__34192__a,0);
} 
return G__34191__delegate.call(this,x,y,z,args);};
G__34191.cljs$lang$maxFixedArity = 3;
G__34191.cljs$lang$applyTo = (function (arglist__34193){
var x = cljs.core.first(arglist__34193);
arglist__34193 = cljs.core.next(arglist__34193);
var y = cljs.core.first(arglist__34193);
arglist__34193 = cljs.core.next(arglist__34193);
var z = cljs.core.first(arglist__34193);
var args = cljs.core.rest(arglist__34193);
return G__34191__delegate(x,y,z,args);
});
G__34191.cljs$core$IFn$_invoke$arity$variadic = G__34191__delegate;
return G__34191;
})()
;
G__34190 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__34190__0.call(this);
case 1:
return G__34190__1.call(this,x);
case 2:
return G__34190__2.call(this,x,y);
case 3:
return G__34190__3.call(this,x,y,z);
default:
var G__34194 = null;
if (arguments.length > 3) {
var G__34195__i = 0, G__34195__a = new Array(arguments.length -  3);
while (G__34195__i < G__34195__a.length) {G__34195__a[G__34195__i] = arguments[G__34195__i + 3]; ++G__34195__i;}
G__34194 = new cljs.core.IndexedSeq(G__34195__a,0);
}
return G__34190__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__34194);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__34190.cljs$lang$maxFixedArity = 3;
G__34190.cljs$lang$applyTo = G__34190__4.cljs$lang$applyTo;
G__34190.cljs$core$IFn$_invoke$arity$0 = G__34190__0;
G__34190.cljs$core$IFn$_invoke$arity$1 = G__34190__1;
G__34190.cljs$core$IFn$_invoke$arity$2 = G__34190__2;
G__34190.cljs$core$IFn$_invoke$arity$3 = G__34190__3;
G__34190.cljs$core$IFn$_invoke$arity$variadic = G__34190__4.cljs$core$IFn$_invoke$arity$variadic;
return G__34190;
})()
});
var partial__3 = (function (f,arg1,arg2){
return (function() {
var G__34196 = null;
var G__34196__0 = (function (){
var G__34158 = arg1;
var G__34159 = arg2;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__34158,G__34159) : f.call(null,G__34158,G__34159));
});
var G__34196__1 = (function (x){
var G__34160 = arg1;
var G__34161 = arg2;
var G__34162 = x;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__34160,G__34161,G__34162) : f.call(null,G__34160,G__34161,G__34162));
});
var G__34196__2 = (function (x,y){
var G__34163 = arg1;
var G__34164 = arg2;
var G__34165 = x;
var G__34166 = y;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__34163,G__34164,G__34165,G__34166) : f.call(null,G__34163,G__34164,G__34165,G__34166));
});
var G__34196__3 = (function (x,y,z){
var G__34167 = arg1;
var G__34168 = arg2;
var G__34169 = x;
var G__34170 = y;
var G__34171 = z;
return (f.cljs$core$IFn$_invoke$arity$5 ? f.cljs$core$IFn$_invoke$arity$5(G__34167,G__34168,G__34169,G__34170,G__34171) : f.call(null,G__34167,G__34168,G__34169,G__34170,G__34171));
});
var G__34196__4 = (function() { 
var G__34197__delegate = function (x,y,z,args){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f,arg1,arg2,x,y,cljs.core.array_seq([z,args], 0));
};
var G__34197 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__34198__i = 0, G__34198__a = new Array(arguments.length -  3);
while (G__34198__i < G__34198__a.length) {G__34198__a[G__34198__i] = arguments[G__34198__i + 3]; ++G__34198__i;}
  args = new cljs.core.IndexedSeq(G__34198__a,0);
} 
return G__34197__delegate.call(this,x,y,z,args);};
G__34197.cljs$lang$maxFixedArity = 3;
G__34197.cljs$lang$applyTo = (function (arglist__34199){
var x = cljs.core.first(arglist__34199);
arglist__34199 = cljs.core.next(arglist__34199);
var y = cljs.core.first(arglist__34199);
arglist__34199 = cljs.core.next(arglist__34199);
var z = cljs.core.first(arglist__34199);
var args = cljs.core.rest(arglist__34199);
return G__34197__delegate(x,y,z,args);
});
G__34197.cljs$core$IFn$_invoke$arity$variadic = G__34197__delegate;
return G__34197;
})()
;
G__34196 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__34196__0.call(this);
case 1:
return G__34196__1.call(this,x);
case 2:
return G__34196__2.call(this,x,y);
case 3:
return G__34196__3.call(this,x,y,z);
default:
var G__34200 = null;
if (arguments.length > 3) {
var G__34201__i = 0, G__34201__a = new Array(arguments.length -  3);
while (G__34201__i < G__34201__a.length) {G__34201__a[G__34201__i] = arguments[G__34201__i + 3]; ++G__34201__i;}
G__34200 = new cljs.core.IndexedSeq(G__34201__a,0);
}
return G__34196__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__34200);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__34196.cljs$lang$maxFixedArity = 3;
G__34196.cljs$lang$applyTo = G__34196__4.cljs$lang$applyTo;
G__34196.cljs$core$IFn$_invoke$arity$0 = G__34196__0;
G__34196.cljs$core$IFn$_invoke$arity$1 = G__34196__1;
G__34196.cljs$core$IFn$_invoke$arity$2 = G__34196__2;
G__34196.cljs$core$IFn$_invoke$arity$3 = G__34196__3;
G__34196.cljs$core$IFn$_invoke$arity$variadic = G__34196__4.cljs$core$IFn$_invoke$arity$variadic;
return G__34196;
})()
});
var partial__4 = (function (f,arg1,arg2,arg3){
return (function() {
var G__34202 = null;
var G__34202__0 = (function (){
var G__34172 = arg1;
var G__34173 = arg2;
var G__34174 = arg3;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__34172,G__34173,G__34174) : f.call(null,G__34172,G__34173,G__34174));
});
var G__34202__1 = (function (x){
var G__34175 = arg1;
var G__34176 = arg2;
var G__34177 = arg3;
var G__34178 = x;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__34175,G__34176,G__34177,G__34178) : f.call(null,G__34175,G__34176,G__34177,G__34178));
});
var G__34202__2 = (function (x,y){
var G__34179 = arg1;
var G__34180 = arg2;
var G__34181 = arg3;
var G__34182 = x;
var G__34183 = y;
return (f.cljs$core$IFn$_invoke$arity$5 ? f.cljs$core$IFn$_invoke$arity$5(G__34179,G__34180,G__34181,G__34182,G__34183) : f.call(null,G__34179,G__34180,G__34181,G__34182,G__34183));
});
var G__34202__3 = (function (x,y,z){
var G__34184 = arg1;
var G__34185 = arg2;
var G__34186 = arg3;
var G__34187 = x;
var G__34188 = y;
var G__34189 = z;
return (f.cljs$core$IFn$_invoke$arity$6 ? f.cljs$core$IFn$_invoke$arity$6(G__34184,G__34185,G__34186,G__34187,G__34188,G__34189) : f.call(null,G__34184,G__34185,G__34186,G__34187,G__34188,G__34189));
});
var G__34202__4 = (function() { 
var G__34203__delegate = function (x,y,z,args){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f,arg1,arg2,arg3,x,cljs.core.array_seq([y,z,args], 0));
};
var G__34203 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__34204__i = 0, G__34204__a = new Array(arguments.length -  3);
while (G__34204__i < G__34204__a.length) {G__34204__a[G__34204__i] = arguments[G__34204__i + 3]; ++G__34204__i;}
  args = new cljs.core.IndexedSeq(G__34204__a,0);
} 
return G__34203__delegate.call(this,x,y,z,args);};
G__34203.cljs$lang$maxFixedArity = 3;
G__34203.cljs$lang$applyTo = (function (arglist__34205){
var x = cljs.core.first(arglist__34205);
arglist__34205 = cljs.core.next(arglist__34205);
var y = cljs.core.first(arglist__34205);
arglist__34205 = cljs.core.next(arglist__34205);
var z = cljs.core.first(arglist__34205);
var args = cljs.core.rest(arglist__34205);
return G__34203__delegate(x,y,z,args);
});
G__34203.cljs$core$IFn$_invoke$arity$variadic = G__34203__delegate;
return G__34203;
})()
;
G__34202 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__34202__0.call(this);
case 1:
return G__34202__1.call(this,x);
case 2:
return G__34202__2.call(this,x,y);
case 3:
return G__34202__3.call(this,x,y,z);
default:
var G__34206 = null;
if (arguments.length > 3) {
var G__34207__i = 0, G__34207__a = new Array(arguments.length -  3);
while (G__34207__i < G__34207__a.length) {G__34207__a[G__34207__i] = arguments[G__34207__i + 3]; ++G__34207__i;}
G__34206 = new cljs.core.IndexedSeq(G__34207__a,0);
}
return G__34202__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__34206);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__34202.cljs$lang$maxFixedArity = 3;
G__34202.cljs$lang$applyTo = G__34202__4.cljs$lang$applyTo;
G__34202.cljs$core$IFn$_invoke$arity$0 = G__34202__0;
G__34202.cljs$core$IFn$_invoke$arity$1 = G__34202__1;
G__34202.cljs$core$IFn$_invoke$arity$2 = G__34202__2;
G__34202.cljs$core$IFn$_invoke$arity$3 = G__34202__3;
G__34202.cljs$core$IFn$_invoke$arity$variadic = G__34202__4.cljs$core$IFn$_invoke$arity$variadic;
return G__34202;
})()
});
var partial__5 = (function() { 
var G__34208__delegate = function (f,arg1,arg2,arg3,more){
return (function() { 
var G__34209__delegate = function (args){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,arg1,arg2,arg3,cljs.core.concat.cljs$core$IFn$_invoke$arity$2(more,args));
};
var G__34209 = function (var_args){
var args = null;
if (arguments.length > 0) {
var G__34210__i = 0, G__34210__a = new Array(arguments.length -  0);
while (G__34210__i < G__34210__a.length) {G__34210__a[G__34210__i] = arguments[G__34210__i + 0]; ++G__34210__i;}
  args = new cljs.core.IndexedSeq(G__34210__a,0);
} 
return G__34209__delegate.call(this,args);};
G__34209.cljs$lang$maxFixedArity = 0;
G__34209.cljs$lang$applyTo = (function (arglist__34211){
var args = cljs.core.seq(arglist__34211);
return G__34209__delegate(args);
});
G__34209.cljs$core$IFn$_invoke$arity$variadic = G__34209__delegate;
return G__34209;
})()
;
};
var G__34208 = function (f,arg1,arg2,arg3,var_args){
var more = null;
if (arguments.length > 4) {
var G__34212__i = 0, G__34212__a = new Array(arguments.length -  4);
while (G__34212__i < G__34212__a.length) {G__34212__a[G__34212__i] = arguments[G__34212__i + 4]; ++G__34212__i;}
  more = new cljs.core.IndexedSeq(G__34212__a,0);
} 
return G__34208__delegate.call(this,f,arg1,arg2,arg3,more);};
G__34208.cljs$lang$maxFixedArity = 4;
G__34208.cljs$lang$applyTo = (function (arglist__34213){
var f = cljs.core.first(arglist__34213);
arglist__34213 = cljs.core.next(arglist__34213);
var arg1 = cljs.core.first(arglist__34213);
arglist__34213 = cljs.core.next(arglist__34213);
var arg2 = cljs.core.first(arglist__34213);
arglist__34213 = cljs.core.next(arglist__34213);
var arg3 = cljs.core.first(arglist__34213);
var more = cljs.core.rest(arglist__34213);
return G__34208__delegate(f,arg1,arg2,arg3,more);
});
G__34208.cljs$core$IFn$_invoke$arity$variadic = G__34208__delegate;
return G__34208;
})()
;
partial = function(f,arg1,arg2,arg3,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return partial__1.call(this,f);
case 2:
return partial__2.call(this,f,arg1);
case 3:
return partial__3.call(this,f,arg1,arg2);
case 4:
return partial__4.call(this,f,arg1,arg2,arg3);
default:
var G__34214 = null;
if (arguments.length > 4) {
var G__34215__i = 0, G__34215__a = new Array(arguments.length -  4);
while (G__34215__i < G__34215__a.length) {G__34215__a[G__34215__i] = arguments[G__34215__i + 4]; ++G__34215__i;}
G__34214 = new cljs.core.IndexedSeq(G__34215__a,0);
}
return partial__5.cljs$core$IFn$_invoke$arity$variadic(f,arg1,arg2,arg3, G__34214);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
partial.cljs$lang$maxFixedArity = 4;
partial.cljs$lang$applyTo = partial__5.cljs$lang$applyTo;
partial.cljs$core$IFn$_invoke$arity$1 = partial__1;
partial.cljs$core$IFn$_invoke$arity$2 = partial__2;
partial.cljs$core$IFn$_invoke$arity$3 = partial__3;
partial.cljs$core$IFn$_invoke$arity$4 = partial__4;
partial.cljs$core$IFn$_invoke$arity$variadic = partial__5.cljs$core$IFn$_invoke$arity$variadic;
return partial;
})()
;
/**
* Takes a function f, and returns a function that calls f, replacing
* a nil first argument to f with the supplied value x. Higher arity
* versions can replace arguments in the second and third
* positions (y, z). Note that the function f can take any number of
* arguments, not just the one(s) being nil-patched.
*/
cljs.core.fnil = (function() {
var fnil = null;
var fnil__2 = (function (f,x){
return (function() {
var G__34248 = null;
var G__34248__1 = (function (a){
var G__34232 = (((a == null))?x:a);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__34232) : f.call(null,G__34232));
});
var G__34248__2 = (function (a,b){
var G__34233 = (((a == null))?x:a);
var G__34234 = b;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__34233,G__34234) : f.call(null,G__34233,G__34234));
});
var G__34248__3 = (function (a,b,c){
var G__34235 = (((a == null))?x:a);
var G__34236 = b;
var G__34237 = c;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__34235,G__34236,G__34237) : f.call(null,G__34235,G__34236,G__34237));
});
var G__34248__4 = (function() { 
var G__34249__delegate = function (a,b,c,ds){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,(((a == null))?x:a),b,c,ds);
};
var G__34249 = function (a,b,c,var_args){
var ds = null;
if (arguments.length > 3) {
var G__34250__i = 0, G__34250__a = new Array(arguments.length -  3);
while (G__34250__i < G__34250__a.length) {G__34250__a[G__34250__i] = arguments[G__34250__i + 3]; ++G__34250__i;}
  ds = new cljs.core.IndexedSeq(G__34250__a,0);
} 
return G__34249__delegate.call(this,a,b,c,ds);};
G__34249.cljs$lang$maxFixedArity = 3;
G__34249.cljs$lang$applyTo = (function (arglist__34251){
var a = cljs.core.first(arglist__34251);
arglist__34251 = cljs.core.next(arglist__34251);
var b = cljs.core.first(arglist__34251);
arglist__34251 = cljs.core.next(arglist__34251);
var c = cljs.core.first(arglist__34251);
var ds = cljs.core.rest(arglist__34251);
return G__34249__delegate(a,b,c,ds);
});
G__34249.cljs$core$IFn$_invoke$arity$variadic = G__34249__delegate;
return G__34249;
})()
;
G__34248 = function(a,b,c,var_args){
var ds = var_args;
switch(arguments.length){
case 1:
return G__34248__1.call(this,a);
case 2:
return G__34248__2.call(this,a,b);
case 3:
return G__34248__3.call(this,a,b,c);
default:
var G__34252 = null;
if (arguments.length > 3) {
var G__34253__i = 0, G__34253__a = new Array(arguments.length -  3);
while (G__34253__i < G__34253__a.length) {G__34253__a[G__34253__i] = arguments[G__34253__i + 3]; ++G__34253__i;}
G__34252 = new cljs.core.IndexedSeq(G__34253__a,0);
}
return G__34248__4.cljs$core$IFn$_invoke$arity$variadic(a,b,c, G__34252);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__34248.cljs$lang$maxFixedArity = 3;
G__34248.cljs$lang$applyTo = G__34248__4.cljs$lang$applyTo;
G__34248.cljs$core$IFn$_invoke$arity$1 = G__34248__1;
G__34248.cljs$core$IFn$_invoke$arity$2 = G__34248__2;
G__34248.cljs$core$IFn$_invoke$arity$3 = G__34248__3;
G__34248.cljs$core$IFn$_invoke$arity$variadic = G__34248__4.cljs$core$IFn$_invoke$arity$variadic;
return G__34248;
})()
});
var fnil__3 = (function (f,x,y){
return (function() {
var G__34254 = null;
var G__34254__2 = (function (a,b){
var G__34238 = (((a == null))?x:a);
var G__34239 = (((b == null))?y:b);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__34238,G__34239) : f.call(null,G__34238,G__34239));
});
var G__34254__3 = (function (a,b,c){
var G__34240 = (((a == null))?x:a);
var G__34241 = (((b == null))?y:b);
var G__34242 = c;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__34240,G__34241,G__34242) : f.call(null,G__34240,G__34241,G__34242));
});
var G__34254__4 = (function() { 
var G__34255__delegate = function (a,b,c,ds){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,(((a == null))?x:a),(((b == null))?y:b),c,ds);
};
var G__34255 = function (a,b,c,var_args){
var ds = null;
if (arguments.length > 3) {
var G__34256__i = 0, G__34256__a = new Array(arguments.length -  3);
while (G__34256__i < G__34256__a.length) {G__34256__a[G__34256__i] = arguments[G__34256__i + 3]; ++G__34256__i;}
  ds = new cljs.core.IndexedSeq(G__34256__a,0);
} 
return G__34255__delegate.call(this,a,b,c,ds);};
G__34255.cljs$lang$maxFixedArity = 3;
G__34255.cljs$lang$applyTo = (function (arglist__34257){
var a = cljs.core.first(arglist__34257);
arglist__34257 = cljs.core.next(arglist__34257);
var b = cljs.core.first(arglist__34257);
arglist__34257 = cljs.core.next(arglist__34257);
var c = cljs.core.first(arglist__34257);
var ds = cljs.core.rest(arglist__34257);
return G__34255__delegate(a,b,c,ds);
});
G__34255.cljs$core$IFn$_invoke$arity$variadic = G__34255__delegate;
return G__34255;
})()
;
G__34254 = function(a,b,c,var_args){
var ds = var_args;
switch(arguments.length){
case 2:
return G__34254__2.call(this,a,b);
case 3:
return G__34254__3.call(this,a,b,c);
default:
var G__34258 = null;
if (arguments.length > 3) {
var G__34259__i = 0, G__34259__a = new Array(arguments.length -  3);
while (G__34259__i < G__34259__a.length) {G__34259__a[G__34259__i] = arguments[G__34259__i + 3]; ++G__34259__i;}
G__34258 = new cljs.core.IndexedSeq(G__34259__a,0);
}
return G__34254__4.cljs$core$IFn$_invoke$arity$variadic(a,b,c, G__34258);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__34254.cljs$lang$maxFixedArity = 3;
G__34254.cljs$lang$applyTo = G__34254__4.cljs$lang$applyTo;
G__34254.cljs$core$IFn$_invoke$arity$2 = G__34254__2;
G__34254.cljs$core$IFn$_invoke$arity$3 = G__34254__3;
G__34254.cljs$core$IFn$_invoke$arity$variadic = G__34254__4.cljs$core$IFn$_invoke$arity$variadic;
return G__34254;
})()
});
var fnil__4 = (function (f,x,y,z){
return (function() {
var G__34260 = null;
var G__34260__2 = (function (a,b){
var G__34243 = (((a == null))?x:a);
var G__34244 = (((b == null))?y:b);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__34243,G__34244) : f.call(null,G__34243,G__34244));
});
var G__34260__3 = (function (a,b,c){
var G__34245 = (((a == null))?x:a);
var G__34246 = (((b == null))?y:b);
var G__34247 = (((c == null))?z:c);
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__34245,G__34246,G__34247) : f.call(null,G__34245,G__34246,G__34247));
});
var G__34260__4 = (function() { 
var G__34261__delegate = function (a,b,c,ds){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,(((a == null))?x:a),(((b == null))?y:b),(((c == null))?z:c),ds);
};
var G__34261 = function (a,b,c,var_args){
var ds = null;
if (arguments.length > 3) {
var G__34262__i = 0, G__34262__a = new Array(arguments.length -  3);
while (G__34262__i < G__34262__a.length) {G__34262__a[G__34262__i] = arguments[G__34262__i + 3]; ++G__34262__i;}
  ds = new cljs.core.IndexedSeq(G__34262__a,0);
} 
return G__34261__delegate.call(this,a,b,c,ds);};
G__34261.cljs$lang$maxFixedArity = 3;
G__34261.cljs$lang$applyTo = (function (arglist__34263){
var a = cljs.core.first(arglist__34263);
arglist__34263 = cljs.core.next(arglist__34263);
var b = cljs.core.first(arglist__34263);
arglist__34263 = cljs.core.next(arglist__34263);
var c = cljs.core.first(arglist__34263);
var ds = cljs.core.rest(arglist__34263);
return G__34261__delegate(a,b,c,ds);
});
G__34261.cljs$core$IFn$_invoke$arity$variadic = G__34261__delegate;
return G__34261;
})()
;
G__34260 = function(a,b,c,var_args){
var ds = var_args;
switch(arguments.length){
case 2:
return G__34260__2.call(this,a,b);
case 3:
return G__34260__3.call(this,a,b,c);
default:
var G__34264 = null;
if (arguments.length > 3) {
var G__34265__i = 0, G__34265__a = new Array(arguments.length -  3);
while (G__34265__i < G__34265__a.length) {G__34265__a[G__34265__i] = arguments[G__34265__i + 3]; ++G__34265__i;}
G__34264 = new cljs.core.IndexedSeq(G__34265__a,0);
}
return G__34260__4.cljs$core$IFn$_invoke$arity$variadic(a,b,c, G__34264);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__34260.cljs$lang$maxFixedArity = 3;
G__34260.cljs$lang$applyTo = G__34260__4.cljs$lang$applyTo;
G__34260.cljs$core$IFn$_invoke$arity$2 = G__34260__2;
G__34260.cljs$core$IFn$_invoke$arity$3 = G__34260__3;
G__34260.cljs$core$IFn$_invoke$arity$variadic = G__34260__4.cljs$core$IFn$_invoke$arity$variadic;
return G__34260;
})()
});
fnil = function(f,x,y,z){
switch(arguments.length){
case 2:
return fnil__2.call(this,f,x);
case 3:
return fnil__3.call(this,f,x,y);
case 4:
return fnil__4.call(this,f,x,y,z);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
fnil.cljs$core$IFn$_invoke$arity$2 = fnil__2;
fnil.cljs$core$IFn$_invoke$arity$3 = fnil__3;
fnil.cljs$core$IFn$_invoke$arity$4 = fnil__4;
return fnil;
})()
;
/**
* Returns a lazy sequence consisting of the result of applying f to 0
* and the first item of coll, followed by applying f to 1 and the second
* item in coll, etc, until coll is exhausted. Thus function f should
* accept 2 arguments, index and item.
*/
cljs.core.map_indexed = (function map_indexed(f,coll){
var mapi = (function mapi(idx,coll__$1){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll__$1);
if(temp__4126__auto__){
var s = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(s)){
var c = cljs.core.chunk_first(s);
var size = cljs.core.count(c);
var b = cljs.core.chunk_buffer(size);
var n__25159__auto___34314 = size;
var i_34315 = (0);
while(true){
if((i_34315 < n__25159__auto___34314)){
cljs.core.chunk_append(b,(function (){var G__34310 = (idx + i_34315);
var G__34311 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c,i_34315);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__34310,G__34311) : f.call(null,G__34310,G__34311));
})());

var G__34316 = (i_34315 + (1));
i_34315 = G__34316;
continue;
} else {
}
break;
}

return cljs.core.chunk_cons(cljs.core.chunk(b),mapi((idx + size),cljs.core.chunk_rest(s)));
} else {
return cljs.core.cons((function (){var G__34312 = idx;
var G__34313 = cljs.core.first(s);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__34312,G__34313) : f.call(null,G__34312,G__34313));
})(),mapi((idx + (1)),cljs.core.rest(s)));
}
} else {
return null;
}
}),null,null));
});
return mapi((0),coll);
});
/**
* Returns a lazy sequence of the non-nil results of (f item). Note,
* this means false return values will be included.  f must be free of
* side-effects.  Returns a transducer when no collection is provided.
*/
cljs.core.keep = (function() {
var keep = null;
var keep__1 = (function (f){
return (function (rf){
return (function() {
var G__34335 = null;
var G__34335__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__34335__1 = (function (result){
var G__34329 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__34329) : rf.call(null,G__34329));
});
var G__34335__2 = (function (result,input){
var v = (function (){var G__34330 = input;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__34330) : f.call(null,G__34330));
})();
if((v == null)){
return result;
} else {
var G__34331 = result;
var G__34332 = v;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__34331,G__34332) : rf.call(null,G__34331,G__34332));
}
});
G__34335 = function(result,input){
switch(arguments.length){
case 0:
return G__34335__0.call(this);
case 1:
return G__34335__1.call(this,result);
case 2:
return G__34335__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__34335.cljs$core$IFn$_invoke$arity$0 = G__34335__0;
G__34335.cljs$core$IFn$_invoke$arity$1 = G__34335__1;
G__34335.cljs$core$IFn$_invoke$arity$2 = G__34335__2;
return G__34335;
})()
});
});
var keep__2 = (function (f,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(s)){
var c = cljs.core.chunk_first(s);
var size = cljs.core.count(c);
var b = cljs.core.chunk_buffer(size);
var n__25159__auto___34336 = size;
var i_34337 = (0);
while(true){
if((i_34337 < n__25159__auto___34336)){
var x_34338 = (function (){var G__34333 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c,i_34337);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__34333) : f.call(null,G__34333));
})();
if((x_34338 == null)){
} else {
cljs.core.chunk_append(b,x_34338);
}

var G__34339 = (i_34337 + (1));
i_34337 = G__34339;
continue;
} else {
}
break;
}

return cljs.core.chunk_cons(cljs.core.chunk(b),keep.cljs$core$IFn$_invoke$arity$2(f,cljs.core.chunk_rest(s)));
} else {
var x = (function (){var G__34334 = cljs.core.first(s);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__34334) : f.call(null,G__34334));
})();
if((x == null)){
return keep.cljs$core$IFn$_invoke$arity$2(f,cljs.core.rest(s));
} else {
return cljs.core.cons(x,keep.cljs$core$IFn$_invoke$arity$2(f,cljs.core.rest(s)));
}
}
} else {
return null;
}
}),null,null));
});
keep = function(f,coll){
switch(arguments.length){
case 1:
return keep__1.call(this,f);
case 2:
return keep__2.call(this,f,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
keep.cljs$core$IFn$_invoke$arity$1 = keep__1;
keep.cljs$core$IFn$_invoke$arity$2 = keep__2;
return keep;
})()
;

/**
* @constructor
*/
cljs.core.Atom = (function (state,meta,validator,watches){
this.state = state;
this.meta = meta;
this.validator = validator;
this.watches = watches;
this.cljs$lang$protocol_mask$partition0$ = 6455296;
this.cljs$lang$protocol_mask$partition1$ = 16386;
})
cljs.core.Atom.prototype.cljs$core$IHash$_hash$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
var G__34340 = this$__$1;
return goog.getUid(G__34340);
});

cljs.core.Atom.prototype.cljs$core$IWatchable$_notify_watches$arity$3 = (function (this$,oldval,newval){
var self__ = this;
var this$__$1 = this;
var seq__34341 = cljs.core.seq(self__.watches);
var chunk__34342 = null;
var count__34343 = (0);
var i__34344 = (0);
while(true){
if((i__34344 < count__34343)){
var vec__34345 = chunk__34342.cljs$core$IIndexed$_nth$arity$2(null,i__34344);
var key = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__34345,(0),null);
var f = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__34345,(1),null);
var G__34346_34355 = key;
var G__34347_34356 = this$__$1;
var G__34348_34357 = oldval;
var G__34349_34358 = newval;
(f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__34346_34355,G__34347_34356,G__34348_34357,G__34349_34358) : f.call(null,G__34346_34355,G__34347_34356,G__34348_34357,G__34349_34358));

var G__34359 = seq__34341;
var G__34360 = chunk__34342;
var G__34361 = count__34343;
var G__34362 = (i__34344 + (1));
seq__34341 = G__34359;
chunk__34342 = G__34360;
count__34343 = G__34361;
i__34344 = G__34362;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__34341);
if(temp__4126__auto__){
var seq__34341__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__34341__$1)){
var c__25059__auto__ = cljs.core.chunk_first(seq__34341__$1);
var G__34363 = cljs.core.chunk_rest(seq__34341__$1);
var G__34364 = c__25059__auto__;
var G__34365 = cljs.core.count(c__25059__auto__);
var G__34366 = (0);
seq__34341 = G__34363;
chunk__34342 = G__34364;
count__34343 = G__34365;
i__34344 = G__34366;
continue;
} else {
var vec__34350 = cljs.core.first(seq__34341__$1);
var key = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__34350,(0),null);
var f = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__34350,(1),null);
var G__34351_34367 = key;
var G__34352_34368 = this$__$1;
var G__34353_34369 = oldval;
var G__34354_34370 = newval;
(f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__34351_34367,G__34352_34368,G__34353_34369,G__34354_34370) : f.call(null,G__34351_34367,G__34352_34368,G__34353_34369,G__34354_34370));

var G__34371 = cljs.core.next(seq__34341__$1);
var G__34372 = null;
var G__34373 = (0);
var G__34374 = (0);
seq__34341 = G__34371;
chunk__34342 = G__34372;
count__34343 = G__34373;
i__34344 = G__34374;
continue;
}
} else {
return null;
}
}
break;
}
});

cljs.core.Atom.prototype.cljs$core$IWatchable$_add_watch$arity$3 = (function (this$,key,f){
var self__ = this;
var this$__$1 = this;
this$__$1.watches = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.watches,key,f);

return this$__$1;
});

cljs.core.Atom.prototype.cljs$core$IWatchable$_remove_watch$arity$2 = (function (this$,key){
var self__ = this;
var this$__$1 = this;
return this$__$1.watches = cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(self__.watches,key);
});

cljs.core.Atom.prototype.cljs$core$IMeta$_meta$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.meta;
});

cljs.core.Atom.prototype.cljs$core$IDeref$_deref$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.state;
});

cljs.core.Atom.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (o,other){
var self__ = this;
var o__$1 = this;
return (o__$1 === other);
});

cljs.core.Atom.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.Atom.cljs$lang$type = true;

cljs.core.Atom.cljs$lang$ctorStr = "cljs.core/Atom";

cljs.core.Atom.cljs$lang$ctorPrWriter = (function (this__24859__auto__,writer__24860__auto__,opt__24861__auto__){
return cljs.core._write(writer__24860__auto__,"cljs.core/Atom");
});

cljs.core.__GT_Atom = (function __GT_Atom(state,meta,validator,watches){
return (new cljs.core.Atom(state,meta,validator,watches));
});

/**
* Creates and returns an Atom with an initial value of x and zero or
* more options (in any order):
* 
* :meta metadata-map
* 
* :validator validate-fn
* 
* If metadata-map is supplied, it will be come the metadata on the
* atom. validate-fn must be nil or a side-effect-free fn of one
* argument, which will be passed the intended new state on any state
* change. If the new state is unacceptable, the validate-fn should
* return false or throw an Error.  If either of these error conditions
* occur, then the value of the atom will not change.
* @param {...*} var_args
*/
cljs.core.atom = (function() {
var atom = null;
var atom__1 = (function (x){
return (new cljs.core.Atom(x,null,null,null));
});
var atom__2 = (function() { 
var G__34378__delegate = function (x,p__34375){
var map__34377 = p__34375;
var map__34377__$1 = ((cljs.core.seq_QMARK_(map__34377))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__34377):map__34377);
var validator = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__34377__$1,new cljs.core.Keyword(null,"validator","validator",-1966190681));
var meta = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__34377__$1,new cljs.core.Keyword(null,"meta","meta",1499536964));
return (new cljs.core.Atom(x,meta,validator,null));
};
var G__34378 = function (x,var_args){
var p__34375 = null;
if (arguments.length > 1) {
var G__34379__i = 0, G__34379__a = new Array(arguments.length -  1);
while (G__34379__i < G__34379__a.length) {G__34379__a[G__34379__i] = arguments[G__34379__i + 1]; ++G__34379__i;}
  p__34375 = new cljs.core.IndexedSeq(G__34379__a,0);
} 
return G__34378__delegate.call(this,x,p__34375);};
G__34378.cljs$lang$maxFixedArity = 1;
G__34378.cljs$lang$applyTo = (function (arglist__34380){
var x = cljs.core.first(arglist__34380);
var p__34375 = cljs.core.rest(arglist__34380);
return G__34378__delegate(x,p__34375);
});
G__34378.cljs$core$IFn$_invoke$arity$variadic = G__34378__delegate;
return G__34378;
})()
;
atom = function(x,var_args){
var p__34375 = var_args;
switch(arguments.length){
case 1:
return atom__1.call(this,x);
default:
var G__34381 = null;
if (arguments.length > 1) {
var G__34382__i = 0, G__34382__a = new Array(arguments.length -  1);
while (G__34382__i < G__34382__a.length) {G__34382__a[G__34382__i] = arguments[G__34382__i + 1]; ++G__34382__i;}
G__34381 = new cljs.core.IndexedSeq(G__34382__a,0);
}
return atom__2.cljs$core$IFn$_invoke$arity$variadic(x, G__34381);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
atom.cljs$lang$maxFixedArity = 1;
atom.cljs$lang$applyTo = atom__2.cljs$lang$applyTo;
atom.cljs$core$IFn$_invoke$arity$1 = atom__1;
atom.cljs$core$IFn$_invoke$arity$variadic = atom__2.cljs$core$IFn$_invoke$arity$variadic;
return atom;
})()
;
/**
* Sets the value of atom to newval without regard for the
* current value. Returns newval.
*/
cljs.core.reset_BANG_ = (function reset_BANG_(a,new_value){
if((a instanceof cljs.core.Atom)){
var validate = a.validator;
if((validate == null)){
} else {
if(cljs.core.truth_((function (){var G__34385 = new_value;
return (validate.cljs$core$IFn$_invoke$arity$1 ? validate.cljs$core$IFn$_invoke$arity$1(G__34385) : validate.call(null,G__34385));
})())){
} else {
throw (new Error([cljs.core.str("Assert failed: "),cljs.core.str("Validator rejected reference state"),cljs.core.str("\n"),cljs.core.str((function (){var G__34386 = cljs.core.list(new cljs.core.Symbol(null,"validate","validate",1439230700,null),new cljs.core.Symbol(null,"new-value","new-value",-1567397401,null));
return (cljs.core.pr_str.cljs$core$IFn$_invoke$arity$1 ? cljs.core.pr_str.cljs$core$IFn$_invoke$arity$1(G__34386) : cljs.core.pr_str.call(null,G__34386));
})())].join('')));
}
}

var old_value = a.state;
a.state = new_value;

if((a.watches == null)){
} else {
cljs.core._notify_watches(a,old_value,new_value);
}

return new_value;
} else {
return cljs.core._reset_BANG_(a,new_value);
}
});
/**
* Atomically swaps the value of atom to be:
* (apply f current-value-of-atom args). Note that f may be called
* multiple times, and thus should be free of side effects.  Returns
* the value that was swapped in.
* @param {...*} var_args
*/
cljs.core.swap_BANG_ = (function() {
var swap_BANG_ = null;
var swap_BANG___2 = (function (a,f){
if((a instanceof cljs.core.Atom)){
return cljs.core.reset_BANG_(a,(function (){var G__34393 = a.state;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__34393) : f.call(null,G__34393));
})());
} else {
return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$2(a,f);
}
});
var swap_BANG___3 = (function (a,f,x){
if((a instanceof cljs.core.Atom)){
return cljs.core.reset_BANG_(a,(function (){var G__34394 = a.state;
var G__34395 = x;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__34394,G__34395) : f.call(null,G__34394,G__34395));
})());
} else {
return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$3(a,f,x);
}
});
var swap_BANG___4 = (function (a,f,x,y){
if((a instanceof cljs.core.Atom)){
return cljs.core.reset_BANG_(a,(function (){var G__34396 = a.state;
var G__34397 = x;
var G__34398 = y;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__34396,G__34397,G__34398) : f.call(null,G__34396,G__34397,G__34398));
})());
} else {
return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$4(a,f,x,y);
}
});
var swap_BANG___5 = (function() { 
var G__34399__delegate = function (a,f,x,y,more){
if((a instanceof cljs.core.Atom)){
return cljs.core.reset_BANG_(a,cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,a.state,x,y,more));
} else {
return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$5(a,f,x,y,more);
}
};
var G__34399 = function (a,f,x,y,var_args){
var more = null;
if (arguments.length > 4) {
var G__34400__i = 0, G__34400__a = new Array(arguments.length -  4);
while (G__34400__i < G__34400__a.length) {G__34400__a[G__34400__i] = arguments[G__34400__i + 4]; ++G__34400__i;}
  more = new cljs.core.IndexedSeq(G__34400__a,0);
} 
return G__34399__delegate.call(this,a,f,x,y,more);};
G__34399.cljs$lang$maxFixedArity = 4;
G__34399.cljs$lang$applyTo = (function (arglist__34401){
var a = cljs.core.first(arglist__34401);
arglist__34401 = cljs.core.next(arglist__34401);
var f = cljs.core.first(arglist__34401);
arglist__34401 = cljs.core.next(arglist__34401);
var x = cljs.core.first(arglist__34401);
arglist__34401 = cljs.core.next(arglist__34401);
var y = cljs.core.first(arglist__34401);
var more = cljs.core.rest(arglist__34401);
return G__34399__delegate(a,f,x,y,more);
});
G__34399.cljs$core$IFn$_invoke$arity$variadic = G__34399__delegate;
return G__34399;
})()
;
swap_BANG_ = function(a,f,x,y,var_args){
var more = var_args;
switch(arguments.length){
case 2:
return swap_BANG___2.call(this,a,f);
case 3:
return swap_BANG___3.call(this,a,f,x);
case 4:
return swap_BANG___4.call(this,a,f,x,y);
default:
var G__34402 = null;
if (arguments.length > 4) {
var G__34403__i = 0, G__34403__a = new Array(arguments.length -  4);
while (G__34403__i < G__34403__a.length) {G__34403__a[G__34403__i] = arguments[G__34403__i + 4]; ++G__34403__i;}
G__34402 = new cljs.core.IndexedSeq(G__34403__a,0);
}
return swap_BANG___5.cljs$core$IFn$_invoke$arity$variadic(a,f,x,y, G__34402);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
swap_BANG_.cljs$lang$maxFixedArity = 4;
swap_BANG_.cljs$lang$applyTo = swap_BANG___5.cljs$lang$applyTo;
swap_BANG_.cljs$core$IFn$_invoke$arity$2 = swap_BANG___2;
swap_BANG_.cljs$core$IFn$_invoke$arity$3 = swap_BANG___3;
swap_BANG_.cljs$core$IFn$_invoke$arity$4 = swap_BANG___4;
swap_BANG_.cljs$core$IFn$_invoke$arity$variadic = swap_BANG___5.cljs$core$IFn$_invoke$arity$variadic;
return swap_BANG_;
})()
;
/**
* Atomically sets the value of atom to newval if and only if the
* current value of the atom is equal to oldval. Returns true if
* set happened, else false.
*/
cljs.core.compare_and_set_BANG_ = (function compare_and_set_BANG_(a,oldval,newval){
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(a.cljs$core$IDeref$_deref$arity$1(null),oldval)){
cljs.core.reset_BANG_(a,newval);

return true;
} else {
return false;
}
});
/**
* Sets the validator-fn for an atom. validator-fn must be nil or a
* side-effect-free fn of one argument, which will be passed the intended
* new state on any state change. If the new state is unacceptable, the
* validator-fn should return false or throw an Error. If the current state
* is not acceptable to the new validator, an Error will be thrown and the
* validator will not be changed.
*/
cljs.core.set_validator_BANG_ = (function set_validator_BANG_(iref,val){
return iref.validator = val;
});
/**
* Gets the validator-fn for a var/ref/agent/atom.
*/
cljs.core.get_validator = (function get_validator(iref){
return iref.validator;
});

/**
* @constructor
*/
cljs.core.Volatile = (function (state){
this.state = state;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32768;
})
cljs.core.Volatile.prototype.cljs$core$IDeref$_deref$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.state;
});

cljs.core.Volatile.prototype.cljs$core$IVolatile$ = true;

cljs.core.Volatile.prototype.cljs$core$IVolatile$_vreset_BANG_$arity$2 = (function (_,new_state){
var self__ = this;
var ___$1 = this;
return self__.state = new_state;
});

cljs.core.Volatile.cljs$lang$type = true;

cljs.core.Volatile.cljs$lang$ctorStr = "cljs.core/Volatile";

cljs.core.Volatile.cljs$lang$ctorPrWriter = (function (this__24859__auto__,writer__24860__auto__,opt__24861__auto__){
return cljs.core._write(writer__24860__auto__,"cljs.core/Volatile");
});

cljs.core.__GT_Volatile = (function __GT_Volatile(state){
return (new cljs.core.Volatile(state));
});

/**
* Creates and returns a Volatile with an initial value of val.
*/
cljs.core.volatile_BANG_ = (function volatile_BANG_(val){
return (new cljs.core.Volatile(val));
});
/**
* Returns true if x is a volatile.
*/
cljs.core.volatile_QMARK_ = (function volatile_QMARK_(x){
return (x instanceof cljs.core.Volatile);
});
/**
* Sets the value of volatile to newval without regard for the
* current value. Returns newval.
*/
cljs.core.vreset_BANG_ = (function vreset_BANG_(vol,newval){
return cljs.core._vreset_BANG_(vol,newval);
});
/**
* Returns a lazy sequence of the non-nil results of (f index item). Note,
* this means false return values will be included.  f must be free of
* side-effects.  Returns a stateful transducer when no collection is
* provided.
*/
cljs.core.keep_indexed = (function() {
var keep_indexed = null;
var keep_indexed__1 = (function (f){
return (function (rf){
var ia = cljs.core.volatile_BANG_((-1));
return ((function (ia){
return (function() {
var G__34470 = null;
var G__34470__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__34470__1 = (function (result){
var G__34437 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__34437) : rf.call(null,G__34437));
});
var G__34470__2 = (function (result,input){
var i = ia.cljs$core$IVolatile$_vreset_BANG_$arity$2(null,(ia.cljs$core$IDeref$_deref$arity$1(null) + (1)));
var v = (function (){var G__34438 = i;
var G__34439 = input;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__34438,G__34439) : f.call(null,G__34438,G__34439));
})();
if((v == null)){
return result;
} else {
var G__34440 = result;
var G__34441 = v;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__34440,G__34441) : rf.call(null,G__34440,G__34441));
}
});
G__34470 = function(result,input){
switch(arguments.length){
case 0:
return G__34470__0.call(this);
case 1:
return G__34470__1.call(this,result);
case 2:
return G__34470__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__34470.cljs$core$IFn$_invoke$arity$0 = G__34470__0;
G__34470.cljs$core$IFn$_invoke$arity$1 = G__34470__1;
G__34470.cljs$core$IFn$_invoke$arity$2 = G__34470__2;
return G__34470;
})()
;})(ia))
});
});
var keep_indexed__2 = (function (f,coll){
var keepi = (function keepi(idx,coll__$1){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll__$1);
if(temp__4126__auto__){
var s = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(s)){
var c = cljs.core.chunk_first(s);
var size = cljs.core.count(c);
var b = cljs.core.chunk_buffer(size);
var n__25159__auto___34471 = size;
var i_34472 = (0);
while(true){
if((i_34472 < n__25159__auto___34471)){
var x_34473 = (function (){var G__34466 = (idx + i_34472);
var G__34467 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c,i_34472);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__34466,G__34467) : f.call(null,G__34466,G__34467));
})();
if((x_34473 == null)){
} else {
cljs.core.chunk_append(b,x_34473);
}

var G__34474 = (i_34472 + (1));
i_34472 = G__34474;
continue;
} else {
}
break;
}

return cljs.core.chunk_cons(cljs.core.chunk(b),keepi((idx + size),cljs.core.chunk_rest(s)));
} else {
var x = (function (){var G__34468 = idx;
var G__34469 = cljs.core.first(s);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__34468,G__34469) : f.call(null,G__34468,G__34469));
})();
if((x == null)){
return keepi((idx + (1)),cljs.core.rest(s));
} else {
return cljs.core.cons(x,keepi((idx + (1)),cljs.core.rest(s)));
}
}
} else {
return null;
}
}),null,null));
});
return keepi((0),coll);
});
keep_indexed = function(f,coll){
switch(arguments.length){
case 1:
return keep_indexed__1.call(this,f);
case 2:
return keep_indexed__2.call(this,f,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
keep_indexed.cljs$core$IFn$_invoke$arity$1 = keep_indexed__1;
keep_indexed.cljs$core$IFn$_invoke$arity$2 = keep_indexed__2;
return keep_indexed;
})()
;
/**
* Takes a set of predicates and returns a function f that returns true if all of its
* composing predicates return a logical true value against all of its arguments, else it returns
* false. Note that f is short-circuiting in that it will stop execution on the first
* argument that triggers a logical false result against the original predicates.
* @param {...*} var_args
*/
cljs.core.every_pred = (function() {
var every_pred = null;
var every_pred__1 = (function (p){
return (function() {
var ep1 = null;
var ep1__0 = (function (){
return true;
});
var ep1__1 = (function (x){
return cljs.core.boolean$((function (){var G__34688 = x;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__34688) : p.call(null,G__34688));
})());
});
var ep1__2 = (function (x,y){
return cljs.core.boolean$((function (){var and__24260__auto__ = (function (){var G__34690 = x;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__34690) : p.call(null,G__34690));
})();
if(cljs.core.truth_(and__24260__auto__)){
var G__34691 = y;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__34691) : p.call(null,G__34691));
} else {
return and__24260__auto__;
}
})());
});
var ep1__3 = (function (x,y,z){
return cljs.core.boolean$((function (){var and__24260__auto__ = (function (){var G__34693 = x;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__34693) : p.call(null,G__34693));
})();
if(cljs.core.truth_(and__24260__auto__)){
var and__24260__auto____$1 = (function (){var G__34695 = y;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__34695) : p.call(null,G__34695));
})();
if(cljs.core.truth_(and__24260__auto____$1)){
var G__34696 = z;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__34696) : p.call(null,G__34696));
} else {
return and__24260__auto____$1;
}
} else {
return and__24260__auto__;
}
})());
});
var ep1__4 = (function() { 
var G__34865__delegate = function (x,y,z,args){
return cljs.core.boolean$((ep1.cljs$core$IFn$_invoke$arity$3(x,y,z)) && (cljs.core.every_QMARK_(p,args)));
};
var G__34865 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__34866__i = 0, G__34866__a = new Array(arguments.length -  3);
while (G__34866__i < G__34866__a.length) {G__34866__a[G__34866__i] = arguments[G__34866__i + 3]; ++G__34866__i;}
  args = new cljs.core.IndexedSeq(G__34866__a,0);
} 
return G__34865__delegate.call(this,x,y,z,args);};
G__34865.cljs$lang$maxFixedArity = 3;
G__34865.cljs$lang$applyTo = (function (arglist__34867){
var x = cljs.core.first(arglist__34867);
arglist__34867 = cljs.core.next(arglist__34867);
var y = cljs.core.first(arglist__34867);
arglist__34867 = cljs.core.next(arglist__34867);
var z = cljs.core.first(arglist__34867);
var args = cljs.core.rest(arglist__34867);
return G__34865__delegate(x,y,z,args);
});
G__34865.cljs$core$IFn$_invoke$arity$variadic = G__34865__delegate;
return G__34865;
})()
;
ep1 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return ep1__0.call(this);
case 1:
return ep1__1.call(this,x);
case 2:
return ep1__2.call(this,x,y);
case 3:
return ep1__3.call(this,x,y,z);
default:
var G__34868 = null;
if (arguments.length > 3) {
var G__34869__i = 0, G__34869__a = new Array(arguments.length -  3);
while (G__34869__i < G__34869__a.length) {G__34869__a[G__34869__i] = arguments[G__34869__i + 3]; ++G__34869__i;}
G__34868 = new cljs.core.IndexedSeq(G__34869__a,0);
}
return ep1__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__34868);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
ep1.cljs$lang$maxFixedArity = 3;
ep1.cljs$lang$applyTo = ep1__4.cljs$lang$applyTo;
ep1.cljs$core$IFn$_invoke$arity$0 = ep1__0;
ep1.cljs$core$IFn$_invoke$arity$1 = ep1__1;
ep1.cljs$core$IFn$_invoke$arity$2 = ep1__2;
ep1.cljs$core$IFn$_invoke$arity$3 = ep1__3;
ep1.cljs$core$IFn$_invoke$arity$variadic = ep1__4.cljs$core$IFn$_invoke$arity$variadic;
return ep1;
})()
});
var every_pred__2 = (function (p1,p2){
return (function() {
var ep2 = null;
var ep2__0 = (function (){
return true;
});
var ep2__1 = (function (x){
return cljs.core.boolean$((function (){var and__24260__auto__ = (function (){var G__34728 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__34728) : p1.call(null,G__34728));
})();
if(cljs.core.truth_(and__24260__auto__)){
var G__34729 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__34729) : p2.call(null,G__34729));
} else {
return and__24260__auto__;
}
})());
});
var ep2__2 = (function (x,y){
return cljs.core.boolean$((function (){var and__24260__auto__ = (function (){var G__34731 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__34731) : p1.call(null,G__34731));
})();
if(cljs.core.truth_(and__24260__auto__)){
var and__24260__auto____$1 = (function (){var G__34733 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__34733) : p1.call(null,G__34733));
})();
if(cljs.core.truth_(and__24260__auto____$1)){
var and__24260__auto____$2 = (function (){var G__34735 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__34735) : p2.call(null,G__34735));
})();
if(cljs.core.truth_(and__24260__auto____$2)){
var G__34736 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__34736) : p2.call(null,G__34736));
} else {
return and__24260__auto____$2;
}
} else {
return and__24260__auto____$1;
}
} else {
return and__24260__auto__;
}
})());
});
var ep2__3 = (function (x,y,z){
return cljs.core.boolean$((function (){var and__24260__auto__ = (function (){var G__34738 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__34738) : p1.call(null,G__34738));
})();
if(cljs.core.truth_(and__24260__auto__)){
var and__24260__auto____$1 = (function (){var G__34740 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__34740) : p1.call(null,G__34740));
})();
if(cljs.core.truth_(and__24260__auto____$1)){
var and__24260__auto____$2 = (function (){var G__34742 = z;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__34742) : p1.call(null,G__34742));
})();
if(cljs.core.truth_(and__24260__auto____$2)){
var and__24260__auto____$3 = (function (){var G__34744 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__34744) : p2.call(null,G__34744));
})();
if(cljs.core.truth_(and__24260__auto____$3)){
var and__24260__auto____$4 = (function (){var G__34746 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__34746) : p2.call(null,G__34746));
})();
if(cljs.core.truth_(and__24260__auto____$4)){
var G__34747 = z;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__34747) : p2.call(null,G__34747));
} else {
return and__24260__auto____$4;
}
} else {
return and__24260__auto____$3;
}
} else {
return and__24260__auto____$2;
}
} else {
return and__24260__auto____$1;
}
} else {
return and__24260__auto__;
}
})());
});
var ep2__4 = (function() { 
var G__34870__delegate = function (x,y,z,args){
return cljs.core.boolean$((ep2.cljs$core$IFn$_invoke$arity$3(x,y,z)) && (cljs.core.every_QMARK_((function (p1__34475_SHARP_){
var and__24260__auto__ = (function (){var G__34752 = p1__34475_SHARP_;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__34752) : p1.call(null,G__34752));
})();
if(cljs.core.truth_(and__24260__auto__)){
var G__34753 = p1__34475_SHARP_;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__34753) : p2.call(null,G__34753));
} else {
return and__24260__auto__;
}
}),args)));
};
var G__34870 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__34871__i = 0, G__34871__a = new Array(arguments.length -  3);
while (G__34871__i < G__34871__a.length) {G__34871__a[G__34871__i] = arguments[G__34871__i + 3]; ++G__34871__i;}
  args = new cljs.core.IndexedSeq(G__34871__a,0);
} 
return G__34870__delegate.call(this,x,y,z,args);};
G__34870.cljs$lang$maxFixedArity = 3;
G__34870.cljs$lang$applyTo = (function (arglist__34872){
var x = cljs.core.first(arglist__34872);
arglist__34872 = cljs.core.next(arglist__34872);
var y = cljs.core.first(arglist__34872);
arglist__34872 = cljs.core.next(arglist__34872);
var z = cljs.core.first(arglist__34872);
var args = cljs.core.rest(arglist__34872);
return G__34870__delegate(x,y,z,args);
});
G__34870.cljs$core$IFn$_invoke$arity$variadic = G__34870__delegate;
return G__34870;
})()
;
ep2 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return ep2__0.call(this);
case 1:
return ep2__1.call(this,x);
case 2:
return ep2__2.call(this,x,y);
case 3:
return ep2__3.call(this,x,y,z);
default:
var G__34873 = null;
if (arguments.length > 3) {
var G__34874__i = 0, G__34874__a = new Array(arguments.length -  3);
while (G__34874__i < G__34874__a.length) {G__34874__a[G__34874__i] = arguments[G__34874__i + 3]; ++G__34874__i;}
G__34873 = new cljs.core.IndexedSeq(G__34874__a,0);
}
return ep2__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__34873);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
ep2.cljs$lang$maxFixedArity = 3;
ep2.cljs$lang$applyTo = ep2__4.cljs$lang$applyTo;
ep2.cljs$core$IFn$_invoke$arity$0 = ep2__0;
ep2.cljs$core$IFn$_invoke$arity$1 = ep2__1;
ep2.cljs$core$IFn$_invoke$arity$2 = ep2__2;
ep2.cljs$core$IFn$_invoke$arity$3 = ep2__3;
ep2.cljs$core$IFn$_invoke$arity$variadic = ep2__4.cljs$core$IFn$_invoke$arity$variadic;
return ep2;
})()
});
var every_pred__3 = (function (p1,p2,p3){
return (function() {
var ep3 = null;
var ep3__0 = (function (){
return true;
});
var ep3__1 = (function (x){
return cljs.core.boolean$((function (){var and__24260__auto__ = (function (){var G__34799 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__34799) : p1.call(null,G__34799));
})();
if(cljs.core.truth_(and__24260__auto__)){
var and__24260__auto____$1 = (function (){var G__34801 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__34801) : p2.call(null,G__34801));
})();
if(cljs.core.truth_(and__24260__auto____$1)){
var G__34802 = x;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__34802) : p3.call(null,G__34802));
} else {
return and__24260__auto____$1;
}
} else {
return and__24260__auto__;
}
})());
});
var ep3__2 = (function (x,y){
return cljs.core.boolean$((function (){var and__24260__auto__ = (function (){var G__34804 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__34804) : p1.call(null,G__34804));
})();
if(cljs.core.truth_(and__24260__auto__)){
var and__24260__auto____$1 = (function (){var G__34806 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__34806) : p2.call(null,G__34806));
})();
if(cljs.core.truth_(and__24260__auto____$1)){
var and__24260__auto____$2 = (function (){var G__34808 = x;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__34808) : p3.call(null,G__34808));
})();
if(cljs.core.truth_(and__24260__auto____$2)){
var and__24260__auto____$3 = (function (){var G__34810 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__34810) : p1.call(null,G__34810));
})();
if(cljs.core.truth_(and__24260__auto____$3)){
var and__24260__auto____$4 = (function (){var G__34812 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__34812) : p2.call(null,G__34812));
})();
if(cljs.core.truth_(and__24260__auto____$4)){
var G__34813 = y;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__34813) : p3.call(null,G__34813));
} else {
return and__24260__auto____$4;
}
} else {
return and__24260__auto____$3;
}
} else {
return and__24260__auto____$2;
}
} else {
return and__24260__auto____$1;
}
} else {
return and__24260__auto__;
}
})());
});
var ep3__3 = (function (x,y,z){
return cljs.core.boolean$((function (){var and__24260__auto__ = (function (){var G__34815 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__34815) : p1.call(null,G__34815));
})();
if(cljs.core.truth_(and__24260__auto__)){
var and__24260__auto____$1 = (function (){var G__34817 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__34817) : p2.call(null,G__34817));
})();
if(cljs.core.truth_(and__24260__auto____$1)){
var and__24260__auto____$2 = (function (){var G__34819 = x;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__34819) : p3.call(null,G__34819));
})();
if(cljs.core.truth_(and__24260__auto____$2)){
var and__24260__auto____$3 = (function (){var G__34821 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__34821) : p1.call(null,G__34821));
})();
if(cljs.core.truth_(and__24260__auto____$3)){
var and__24260__auto____$4 = (function (){var G__34823 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__34823) : p2.call(null,G__34823));
})();
if(cljs.core.truth_(and__24260__auto____$4)){
var and__24260__auto____$5 = (function (){var G__34825 = y;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__34825) : p3.call(null,G__34825));
})();
if(cljs.core.truth_(and__24260__auto____$5)){
var and__24260__auto____$6 = (function (){var G__34827 = z;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__34827) : p1.call(null,G__34827));
})();
if(cljs.core.truth_(and__24260__auto____$6)){
var and__24260__auto____$7 = (function (){var G__34829 = z;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__34829) : p2.call(null,G__34829));
})();
if(cljs.core.truth_(and__24260__auto____$7)){
var G__34830 = z;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__34830) : p3.call(null,G__34830));
} else {
return and__24260__auto____$7;
}
} else {
return and__24260__auto____$6;
}
} else {
return and__24260__auto____$5;
}
} else {
return and__24260__auto____$4;
}
} else {
return and__24260__auto____$3;
}
} else {
return and__24260__auto____$2;
}
} else {
return and__24260__auto____$1;
}
} else {
return and__24260__auto__;
}
})());
});
var ep3__4 = (function() { 
var G__34875__delegate = function (x,y,z,args){
return cljs.core.boolean$((ep3.cljs$core$IFn$_invoke$arity$3(x,y,z)) && (cljs.core.every_QMARK_((function (p1__34476_SHARP_){
var and__24260__auto__ = (function (){var G__34837 = p1__34476_SHARP_;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__34837) : p1.call(null,G__34837));
})();
if(cljs.core.truth_(and__24260__auto__)){
var and__24260__auto____$1 = (function (){var G__34839 = p1__34476_SHARP_;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__34839) : p2.call(null,G__34839));
})();
if(cljs.core.truth_(and__24260__auto____$1)){
var G__34840 = p1__34476_SHARP_;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__34840) : p3.call(null,G__34840));
} else {
return and__24260__auto____$1;
}
} else {
return and__24260__auto__;
}
}),args)));
};
var G__34875 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__34876__i = 0, G__34876__a = new Array(arguments.length -  3);
while (G__34876__i < G__34876__a.length) {G__34876__a[G__34876__i] = arguments[G__34876__i + 3]; ++G__34876__i;}
  args = new cljs.core.IndexedSeq(G__34876__a,0);
} 
return G__34875__delegate.call(this,x,y,z,args);};
G__34875.cljs$lang$maxFixedArity = 3;
G__34875.cljs$lang$applyTo = (function (arglist__34877){
var x = cljs.core.first(arglist__34877);
arglist__34877 = cljs.core.next(arglist__34877);
var y = cljs.core.first(arglist__34877);
arglist__34877 = cljs.core.next(arglist__34877);
var z = cljs.core.first(arglist__34877);
var args = cljs.core.rest(arglist__34877);
return G__34875__delegate(x,y,z,args);
});
G__34875.cljs$core$IFn$_invoke$arity$variadic = G__34875__delegate;
return G__34875;
})()
;
ep3 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return ep3__0.call(this);
case 1:
return ep3__1.call(this,x);
case 2:
return ep3__2.call(this,x,y);
case 3:
return ep3__3.call(this,x,y,z);
default:
var G__34878 = null;
if (arguments.length > 3) {
var G__34879__i = 0, G__34879__a = new Array(arguments.length -  3);
while (G__34879__i < G__34879__a.length) {G__34879__a[G__34879__i] = arguments[G__34879__i + 3]; ++G__34879__i;}
G__34878 = new cljs.core.IndexedSeq(G__34879__a,0);
}
return ep3__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__34878);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
ep3.cljs$lang$maxFixedArity = 3;
ep3.cljs$lang$applyTo = ep3__4.cljs$lang$applyTo;
ep3.cljs$core$IFn$_invoke$arity$0 = ep3__0;
ep3.cljs$core$IFn$_invoke$arity$1 = ep3__1;
ep3.cljs$core$IFn$_invoke$arity$2 = ep3__2;
ep3.cljs$core$IFn$_invoke$arity$3 = ep3__3;
ep3.cljs$core$IFn$_invoke$arity$variadic = ep3__4.cljs$core$IFn$_invoke$arity$variadic;
return ep3;
})()
});
var every_pred__4 = (function() { 
var G__34880__delegate = function (p1,p2,p3,ps){
var ps__$1 = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(p1,p2,p3,ps);
return ((function (ps__$1){
return (function() {
var epn = null;
var epn__0 = (function (){
return true;
});
var epn__1 = (function (x){
return cljs.core.every_QMARK_(((function (ps__$1){
return (function (p1__34477_SHARP_){
var G__34856 = x;
return (p1__34477_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__34477_SHARP_.cljs$core$IFn$_invoke$arity$1(G__34856) : p1__34477_SHARP_.call(null,G__34856));
});})(ps__$1))
,ps__$1);
});
var epn__2 = (function (x,y){
return cljs.core.every_QMARK_(((function (ps__$1){
return (function (p1__34478_SHARP_){
var and__24260__auto__ = (function (){var G__34858 = x;
return (p1__34478_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__34478_SHARP_.cljs$core$IFn$_invoke$arity$1(G__34858) : p1__34478_SHARP_.call(null,G__34858));
})();
if(cljs.core.truth_(and__24260__auto__)){
var G__34859 = y;
return (p1__34478_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__34478_SHARP_.cljs$core$IFn$_invoke$arity$1(G__34859) : p1__34478_SHARP_.call(null,G__34859));
} else {
return and__24260__auto__;
}
});})(ps__$1))
,ps__$1);
});
var epn__3 = (function (x,y,z){
return cljs.core.every_QMARK_(((function (ps__$1){
return (function (p1__34479_SHARP_){
var and__24260__auto__ = (function (){var G__34861 = x;
return (p1__34479_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__34479_SHARP_.cljs$core$IFn$_invoke$arity$1(G__34861) : p1__34479_SHARP_.call(null,G__34861));
})();
if(cljs.core.truth_(and__24260__auto__)){
var and__24260__auto____$1 = (function (){var G__34863 = y;
return (p1__34479_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__34479_SHARP_.cljs$core$IFn$_invoke$arity$1(G__34863) : p1__34479_SHARP_.call(null,G__34863));
})();
if(cljs.core.truth_(and__24260__auto____$1)){
var G__34864 = z;
return (p1__34479_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__34479_SHARP_.cljs$core$IFn$_invoke$arity$1(G__34864) : p1__34479_SHARP_.call(null,G__34864));
} else {
return and__24260__auto____$1;
}
} else {
return and__24260__auto__;
}
});})(ps__$1))
,ps__$1);
});
var epn__4 = (function() { 
var G__34881__delegate = function (x,y,z,args){
return cljs.core.boolean$((epn.cljs$core$IFn$_invoke$arity$3(x,y,z)) && (cljs.core.every_QMARK_(((function (ps__$1){
return (function (p1__34480_SHARP_){
return cljs.core.every_QMARK_(p1__34480_SHARP_,args);
});})(ps__$1))
,ps__$1)));
};
var G__34881 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__34882__i = 0, G__34882__a = new Array(arguments.length -  3);
while (G__34882__i < G__34882__a.length) {G__34882__a[G__34882__i] = arguments[G__34882__i + 3]; ++G__34882__i;}
  args = new cljs.core.IndexedSeq(G__34882__a,0);
} 
return G__34881__delegate.call(this,x,y,z,args);};
G__34881.cljs$lang$maxFixedArity = 3;
G__34881.cljs$lang$applyTo = (function (arglist__34883){
var x = cljs.core.first(arglist__34883);
arglist__34883 = cljs.core.next(arglist__34883);
var y = cljs.core.first(arglist__34883);
arglist__34883 = cljs.core.next(arglist__34883);
var z = cljs.core.first(arglist__34883);
var args = cljs.core.rest(arglist__34883);
return G__34881__delegate(x,y,z,args);
});
G__34881.cljs$core$IFn$_invoke$arity$variadic = G__34881__delegate;
return G__34881;
})()
;
epn = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return epn__0.call(this);
case 1:
return epn__1.call(this,x);
case 2:
return epn__2.call(this,x,y);
case 3:
return epn__3.call(this,x,y,z);
default:
var G__34884 = null;
if (arguments.length > 3) {
var G__34885__i = 0, G__34885__a = new Array(arguments.length -  3);
while (G__34885__i < G__34885__a.length) {G__34885__a[G__34885__i] = arguments[G__34885__i + 3]; ++G__34885__i;}
G__34884 = new cljs.core.IndexedSeq(G__34885__a,0);
}
return epn__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__34884);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
epn.cljs$lang$maxFixedArity = 3;
epn.cljs$lang$applyTo = epn__4.cljs$lang$applyTo;
epn.cljs$core$IFn$_invoke$arity$0 = epn__0;
epn.cljs$core$IFn$_invoke$arity$1 = epn__1;
epn.cljs$core$IFn$_invoke$arity$2 = epn__2;
epn.cljs$core$IFn$_invoke$arity$3 = epn__3;
epn.cljs$core$IFn$_invoke$arity$variadic = epn__4.cljs$core$IFn$_invoke$arity$variadic;
return epn;
})()
;})(ps__$1))
};
var G__34880 = function (p1,p2,p3,var_args){
var ps = null;
if (arguments.length > 3) {
var G__34886__i = 0, G__34886__a = new Array(arguments.length -  3);
while (G__34886__i < G__34886__a.length) {G__34886__a[G__34886__i] = arguments[G__34886__i + 3]; ++G__34886__i;}
  ps = new cljs.core.IndexedSeq(G__34886__a,0);
} 
return G__34880__delegate.call(this,p1,p2,p3,ps);};
G__34880.cljs$lang$maxFixedArity = 3;
G__34880.cljs$lang$applyTo = (function (arglist__34887){
var p1 = cljs.core.first(arglist__34887);
arglist__34887 = cljs.core.next(arglist__34887);
var p2 = cljs.core.first(arglist__34887);
arglist__34887 = cljs.core.next(arglist__34887);
var p3 = cljs.core.first(arglist__34887);
var ps = cljs.core.rest(arglist__34887);
return G__34880__delegate(p1,p2,p3,ps);
});
G__34880.cljs$core$IFn$_invoke$arity$variadic = G__34880__delegate;
return G__34880;
})()
;
every_pred = function(p1,p2,p3,var_args){
var ps = var_args;
switch(arguments.length){
case 1:
return every_pred__1.call(this,p1);
case 2:
return every_pred__2.call(this,p1,p2);
case 3:
return every_pred__3.call(this,p1,p2,p3);
default:
var G__34888 = null;
if (arguments.length > 3) {
var G__34889__i = 0, G__34889__a = new Array(arguments.length -  3);
while (G__34889__i < G__34889__a.length) {G__34889__a[G__34889__i] = arguments[G__34889__i + 3]; ++G__34889__i;}
G__34888 = new cljs.core.IndexedSeq(G__34889__a,0);
}
return every_pred__4.cljs$core$IFn$_invoke$arity$variadic(p1,p2,p3, G__34888);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
every_pred.cljs$lang$maxFixedArity = 3;
every_pred.cljs$lang$applyTo = every_pred__4.cljs$lang$applyTo;
every_pred.cljs$core$IFn$_invoke$arity$1 = every_pred__1;
every_pred.cljs$core$IFn$_invoke$arity$2 = every_pred__2;
every_pred.cljs$core$IFn$_invoke$arity$3 = every_pred__3;
every_pred.cljs$core$IFn$_invoke$arity$variadic = every_pred__4.cljs$core$IFn$_invoke$arity$variadic;
return every_pred;
})()
;
/**
* Takes a set of predicates and returns a function f that returns the first logical true value
* returned by one of its composing predicates against any of its arguments, else it returns
* logical false. Note that f is short-circuiting in that it will stop execution on the first
* argument that triggers a logical true result against the original predicates.
* @param {...*} var_args
*/
cljs.core.some_fn = (function() {
var some_fn = null;
var some_fn__1 = (function (p){
return (function() {
var sp1 = null;
var sp1__0 = (function (){
return null;
});
var sp1__1 = (function (x){
var G__35095 = x;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__35095) : p.call(null,G__35095));
});
var sp1__2 = (function (x,y){
var or__24272__auto__ = (function (){var G__35097 = x;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__35097) : p.call(null,G__35097));
})();
if(cljs.core.truth_(or__24272__auto__)){
return or__24272__auto__;
} else {
var G__35098 = y;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__35098) : p.call(null,G__35098));
}
});
var sp1__3 = (function (x,y,z){
var or__24272__auto__ = (function (){var G__35100 = x;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__35100) : p.call(null,G__35100));
})();
if(cljs.core.truth_(or__24272__auto__)){
return or__24272__auto__;
} else {
var or__24272__auto____$1 = (function (){var G__35102 = y;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__35102) : p.call(null,G__35102));
})();
if(cljs.core.truth_(or__24272__auto____$1)){
return or__24272__auto____$1;
} else {
var G__35103 = z;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__35103) : p.call(null,G__35103));
}
}
});
var sp1__4 = (function() { 
var G__35264__delegate = function (x,y,z,args){
var or__24272__auto__ = sp1.cljs$core$IFn$_invoke$arity$3(x,y,z);
if(cljs.core.truth_(or__24272__auto__)){
return or__24272__auto__;
} else {
return cljs.core.some(p,args);
}
};
var G__35264 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__35265__i = 0, G__35265__a = new Array(arguments.length -  3);
while (G__35265__i < G__35265__a.length) {G__35265__a[G__35265__i] = arguments[G__35265__i + 3]; ++G__35265__i;}
  args = new cljs.core.IndexedSeq(G__35265__a,0);
} 
return G__35264__delegate.call(this,x,y,z,args);};
G__35264.cljs$lang$maxFixedArity = 3;
G__35264.cljs$lang$applyTo = (function (arglist__35266){
var x = cljs.core.first(arglist__35266);
arglist__35266 = cljs.core.next(arglist__35266);
var y = cljs.core.first(arglist__35266);
arglist__35266 = cljs.core.next(arglist__35266);
var z = cljs.core.first(arglist__35266);
var args = cljs.core.rest(arglist__35266);
return G__35264__delegate(x,y,z,args);
});
G__35264.cljs$core$IFn$_invoke$arity$variadic = G__35264__delegate;
return G__35264;
})()
;
sp1 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return sp1__0.call(this);
case 1:
return sp1__1.call(this,x);
case 2:
return sp1__2.call(this,x,y);
case 3:
return sp1__3.call(this,x,y,z);
default:
var G__35267 = null;
if (arguments.length > 3) {
var G__35268__i = 0, G__35268__a = new Array(arguments.length -  3);
while (G__35268__i < G__35268__a.length) {G__35268__a[G__35268__i] = arguments[G__35268__i + 3]; ++G__35268__i;}
G__35267 = new cljs.core.IndexedSeq(G__35268__a,0);
}
return sp1__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__35267);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
sp1.cljs$lang$maxFixedArity = 3;
sp1.cljs$lang$applyTo = sp1__4.cljs$lang$applyTo;
sp1.cljs$core$IFn$_invoke$arity$0 = sp1__0;
sp1.cljs$core$IFn$_invoke$arity$1 = sp1__1;
sp1.cljs$core$IFn$_invoke$arity$2 = sp1__2;
sp1.cljs$core$IFn$_invoke$arity$3 = sp1__3;
sp1.cljs$core$IFn$_invoke$arity$variadic = sp1__4.cljs$core$IFn$_invoke$arity$variadic;
return sp1;
})()
});
var some_fn__2 = (function (p1,p2){
return (function() {
var sp2 = null;
var sp2__0 = (function (){
return null;
});
var sp2__1 = (function (x){
var or__24272__auto__ = (function (){var G__35135 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__35135) : p1.call(null,G__35135));
})();
if(cljs.core.truth_(or__24272__auto__)){
return or__24272__auto__;
} else {
var G__35136 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__35136) : p2.call(null,G__35136));
}
});
var sp2__2 = (function (x,y){
var or__24272__auto__ = (function (){var G__35138 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__35138) : p1.call(null,G__35138));
})();
if(cljs.core.truth_(or__24272__auto__)){
return or__24272__auto__;
} else {
var or__24272__auto____$1 = (function (){var G__35140 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__35140) : p1.call(null,G__35140));
})();
if(cljs.core.truth_(or__24272__auto____$1)){
return or__24272__auto____$1;
} else {
var or__24272__auto____$2 = (function (){var G__35142 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__35142) : p2.call(null,G__35142));
})();
if(cljs.core.truth_(or__24272__auto____$2)){
return or__24272__auto____$2;
} else {
var G__35143 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__35143) : p2.call(null,G__35143));
}
}
}
});
var sp2__3 = (function (x,y,z){
var or__24272__auto__ = (function (){var G__35145 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__35145) : p1.call(null,G__35145));
})();
if(cljs.core.truth_(or__24272__auto__)){
return or__24272__auto__;
} else {
var or__24272__auto____$1 = (function (){var G__35147 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__35147) : p1.call(null,G__35147));
})();
if(cljs.core.truth_(or__24272__auto____$1)){
return or__24272__auto____$1;
} else {
var or__24272__auto____$2 = (function (){var G__35149 = z;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__35149) : p1.call(null,G__35149));
})();
if(cljs.core.truth_(or__24272__auto____$2)){
return or__24272__auto____$2;
} else {
var or__24272__auto____$3 = (function (){var G__35151 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__35151) : p2.call(null,G__35151));
})();
if(cljs.core.truth_(or__24272__auto____$3)){
return or__24272__auto____$3;
} else {
var or__24272__auto____$4 = (function (){var G__35153 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__35153) : p2.call(null,G__35153));
})();
if(cljs.core.truth_(or__24272__auto____$4)){
return or__24272__auto____$4;
} else {
var G__35154 = z;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__35154) : p2.call(null,G__35154));
}
}
}
}
}
});
var sp2__4 = (function() { 
var G__35269__delegate = function (x,y,z,args){
var or__24272__auto__ = sp2.cljs$core$IFn$_invoke$arity$3(x,y,z);
if(cljs.core.truth_(or__24272__auto__)){
return or__24272__auto__;
} else {
return cljs.core.some(((function (or__24272__auto__){
return (function (p1__34890_SHARP_){
var or__24272__auto____$1 = (function (){var G__35156 = p1__34890_SHARP_;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__35156) : p1.call(null,G__35156));
})();
if(cljs.core.truth_(or__24272__auto____$1)){
return or__24272__auto____$1;
} else {
var G__35157 = p1__34890_SHARP_;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__35157) : p2.call(null,G__35157));
}
});})(or__24272__auto__))
,args);
}
};
var G__35269 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__35270__i = 0, G__35270__a = new Array(arguments.length -  3);
while (G__35270__i < G__35270__a.length) {G__35270__a[G__35270__i] = arguments[G__35270__i + 3]; ++G__35270__i;}
  args = new cljs.core.IndexedSeq(G__35270__a,0);
} 
return G__35269__delegate.call(this,x,y,z,args);};
G__35269.cljs$lang$maxFixedArity = 3;
G__35269.cljs$lang$applyTo = (function (arglist__35271){
var x = cljs.core.first(arglist__35271);
arglist__35271 = cljs.core.next(arglist__35271);
var y = cljs.core.first(arglist__35271);
arglist__35271 = cljs.core.next(arglist__35271);
var z = cljs.core.first(arglist__35271);
var args = cljs.core.rest(arglist__35271);
return G__35269__delegate(x,y,z,args);
});
G__35269.cljs$core$IFn$_invoke$arity$variadic = G__35269__delegate;
return G__35269;
})()
;
sp2 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return sp2__0.call(this);
case 1:
return sp2__1.call(this,x);
case 2:
return sp2__2.call(this,x,y);
case 3:
return sp2__3.call(this,x,y,z);
default:
var G__35272 = null;
if (arguments.length > 3) {
var G__35273__i = 0, G__35273__a = new Array(arguments.length -  3);
while (G__35273__i < G__35273__a.length) {G__35273__a[G__35273__i] = arguments[G__35273__i + 3]; ++G__35273__i;}
G__35272 = new cljs.core.IndexedSeq(G__35273__a,0);
}
return sp2__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__35272);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
sp2.cljs$lang$maxFixedArity = 3;
sp2.cljs$lang$applyTo = sp2__4.cljs$lang$applyTo;
sp2.cljs$core$IFn$_invoke$arity$0 = sp2__0;
sp2.cljs$core$IFn$_invoke$arity$1 = sp2__1;
sp2.cljs$core$IFn$_invoke$arity$2 = sp2__2;
sp2.cljs$core$IFn$_invoke$arity$3 = sp2__3;
sp2.cljs$core$IFn$_invoke$arity$variadic = sp2__4.cljs$core$IFn$_invoke$arity$variadic;
return sp2;
})()
});
var some_fn__3 = (function (p1,p2,p3){
return (function() {
var sp3 = null;
var sp3__0 = (function (){
return null;
});
var sp3__1 = (function (x){
var or__24272__auto__ = (function (){var G__35203 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__35203) : p1.call(null,G__35203));
})();
if(cljs.core.truth_(or__24272__auto__)){
return or__24272__auto__;
} else {
var or__24272__auto____$1 = (function (){var G__35205 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__35205) : p2.call(null,G__35205));
})();
if(cljs.core.truth_(or__24272__auto____$1)){
return or__24272__auto____$1;
} else {
var G__35206 = x;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__35206) : p3.call(null,G__35206));
}
}
});
var sp3__2 = (function (x,y){
var or__24272__auto__ = (function (){var G__35208 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__35208) : p1.call(null,G__35208));
})();
if(cljs.core.truth_(or__24272__auto__)){
return or__24272__auto__;
} else {
var or__24272__auto____$1 = (function (){var G__35210 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__35210) : p2.call(null,G__35210));
})();
if(cljs.core.truth_(or__24272__auto____$1)){
return or__24272__auto____$1;
} else {
var or__24272__auto____$2 = (function (){var G__35212 = x;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__35212) : p3.call(null,G__35212));
})();
if(cljs.core.truth_(or__24272__auto____$2)){
return or__24272__auto____$2;
} else {
var or__24272__auto____$3 = (function (){var G__35214 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__35214) : p1.call(null,G__35214));
})();
if(cljs.core.truth_(or__24272__auto____$3)){
return or__24272__auto____$3;
} else {
var or__24272__auto____$4 = (function (){var G__35216 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__35216) : p2.call(null,G__35216));
})();
if(cljs.core.truth_(or__24272__auto____$4)){
return or__24272__auto____$4;
} else {
var G__35217 = y;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__35217) : p3.call(null,G__35217));
}
}
}
}
}
});
var sp3__3 = (function (x,y,z){
var or__24272__auto__ = (function (){var G__35219 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__35219) : p1.call(null,G__35219));
})();
if(cljs.core.truth_(or__24272__auto__)){
return or__24272__auto__;
} else {
var or__24272__auto____$1 = (function (){var G__35221 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__35221) : p2.call(null,G__35221));
})();
if(cljs.core.truth_(or__24272__auto____$1)){
return or__24272__auto____$1;
} else {
var or__24272__auto____$2 = (function (){var G__35223 = x;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__35223) : p3.call(null,G__35223));
})();
if(cljs.core.truth_(or__24272__auto____$2)){
return or__24272__auto____$2;
} else {
var or__24272__auto____$3 = (function (){var G__35225 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__35225) : p1.call(null,G__35225));
})();
if(cljs.core.truth_(or__24272__auto____$3)){
return or__24272__auto____$3;
} else {
var or__24272__auto____$4 = (function (){var G__35227 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__35227) : p2.call(null,G__35227));
})();
if(cljs.core.truth_(or__24272__auto____$4)){
return or__24272__auto____$4;
} else {
var or__24272__auto____$5 = (function (){var G__35229 = y;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__35229) : p3.call(null,G__35229));
})();
if(cljs.core.truth_(or__24272__auto____$5)){
return or__24272__auto____$5;
} else {
var or__24272__auto____$6 = (function (){var G__35231 = z;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__35231) : p1.call(null,G__35231));
})();
if(cljs.core.truth_(or__24272__auto____$6)){
return or__24272__auto____$6;
} else {
var or__24272__auto____$7 = (function (){var G__35233 = z;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__35233) : p2.call(null,G__35233));
})();
if(cljs.core.truth_(or__24272__auto____$7)){
return or__24272__auto____$7;
} else {
var G__35234 = z;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__35234) : p3.call(null,G__35234));
}
}
}
}
}
}
}
}
});
var sp3__4 = (function() { 
var G__35274__delegate = function (x,y,z,args){
var or__24272__auto__ = sp3.cljs$core$IFn$_invoke$arity$3(x,y,z);
if(cljs.core.truth_(or__24272__auto__)){
return or__24272__auto__;
} else {
return cljs.core.some(((function (or__24272__auto__){
return (function (p1__34891_SHARP_){
var or__24272__auto____$1 = (function (){var G__35236 = p1__34891_SHARP_;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__35236) : p1.call(null,G__35236));
})();
if(cljs.core.truth_(or__24272__auto____$1)){
return or__24272__auto____$1;
} else {
var or__24272__auto____$2 = (function (){var G__35238 = p1__34891_SHARP_;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__35238) : p2.call(null,G__35238));
})();
if(cljs.core.truth_(or__24272__auto____$2)){
return or__24272__auto____$2;
} else {
var G__35239 = p1__34891_SHARP_;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__35239) : p3.call(null,G__35239));
}
}
});})(or__24272__auto__))
,args);
}
};
var G__35274 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__35275__i = 0, G__35275__a = new Array(arguments.length -  3);
while (G__35275__i < G__35275__a.length) {G__35275__a[G__35275__i] = arguments[G__35275__i + 3]; ++G__35275__i;}
  args = new cljs.core.IndexedSeq(G__35275__a,0);
} 
return G__35274__delegate.call(this,x,y,z,args);};
G__35274.cljs$lang$maxFixedArity = 3;
G__35274.cljs$lang$applyTo = (function (arglist__35276){
var x = cljs.core.first(arglist__35276);
arglist__35276 = cljs.core.next(arglist__35276);
var y = cljs.core.first(arglist__35276);
arglist__35276 = cljs.core.next(arglist__35276);
var z = cljs.core.first(arglist__35276);
var args = cljs.core.rest(arglist__35276);
return G__35274__delegate(x,y,z,args);
});
G__35274.cljs$core$IFn$_invoke$arity$variadic = G__35274__delegate;
return G__35274;
})()
;
sp3 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return sp3__0.call(this);
case 1:
return sp3__1.call(this,x);
case 2:
return sp3__2.call(this,x,y);
case 3:
return sp3__3.call(this,x,y,z);
default:
var G__35277 = null;
if (arguments.length > 3) {
var G__35278__i = 0, G__35278__a = new Array(arguments.length -  3);
while (G__35278__i < G__35278__a.length) {G__35278__a[G__35278__i] = arguments[G__35278__i + 3]; ++G__35278__i;}
G__35277 = new cljs.core.IndexedSeq(G__35278__a,0);
}
return sp3__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__35277);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
sp3.cljs$lang$maxFixedArity = 3;
sp3.cljs$lang$applyTo = sp3__4.cljs$lang$applyTo;
sp3.cljs$core$IFn$_invoke$arity$0 = sp3__0;
sp3.cljs$core$IFn$_invoke$arity$1 = sp3__1;
sp3.cljs$core$IFn$_invoke$arity$2 = sp3__2;
sp3.cljs$core$IFn$_invoke$arity$3 = sp3__3;
sp3.cljs$core$IFn$_invoke$arity$variadic = sp3__4.cljs$core$IFn$_invoke$arity$variadic;
return sp3;
})()
});
var some_fn__4 = (function() { 
var G__35279__delegate = function (p1,p2,p3,ps){
var ps__$1 = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(p1,p2,p3,ps);
return ((function (ps__$1){
return (function() {
var spn = null;
var spn__0 = (function (){
return null;
});
var spn__1 = (function (x){
return cljs.core.some(((function (ps__$1){
return (function (p1__34892_SHARP_){
var G__35255 = x;
return (p1__34892_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__34892_SHARP_.cljs$core$IFn$_invoke$arity$1(G__35255) : p1__34892_SHARP_.call(null,G__35255));
});})(ps__$1))
,ps__$1);
});
var spn__2 = (function (x,y){
return cljs.core.some(((function (ps__$1){
return (function (p1__34893_SHARP_){
var or__24272__auto__ = (function (){var G__35257 = x;
return (p1__34893_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__34893_SHARP_.cljs$core$IFn$_invoke$arity$1(G__35257) : p1__34893_SHARP_.call(null,G__35257));
})();
if(cljs.core.truth_(or__24272__auto__)){
return or__24272__auto__;
} else {
var G__35258 = y;
return (p1__34893_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__34893_SHARP_.cljs$core$IFn$_invoke$arity$1(G__35258) : p1__34893_SHARP_.call(null,G__35258));
}
});})(ps__$1))
,ps__$1);
});
var spn__3 = (function (x,y,z){
return cljs.core.some(((function (ps__$1){
return (function (p1__34894_SHARP_){
var or__24272__auto__ = (function (){var G__35260 = x;
return (p1__34894_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__34894_SHARP_.cljs$core$IFn$_invoke$arity$1(G__35260) : p1__34894_SHARP_.call(null,G__35260));
})();
if(cljs.core.truth_(or__24272__auto__)){
return or__24272__auto__;
} else {
var or__24272__auto____$1 = (function (){var G__35262 = y;
return (p1__34894_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__34894_SHARP_.cljs$core$IFn$_invoke$arity$1(G__35262) : p1__34894_SHARP_.call(null,G__35262));
})();
if(cljs.core.truth_(or__24272__auto____$1)){
return or__24272__auto____$1;
} else {
var G__35263 = z;
return (p1__34894_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__34894_SHARP_.cljs$core$IFn$_invoke$arity$1(G__35263) : p1__34894_SHARP_.call(null,G__35263));
}
}
});})(ps__$1))
,ps__$1);
});
var spn__4 = (function() { 
var G__35280__delegate = function (x,y,z,args){
var or__24272__auto__ = spn.cljs$core$IFn$_invoke$arity$3(x,y,z);
if(cljs.core.truth_(or__24272__auto__)){
return or__24272__auto__;
} else {
return cljs.core.some(((function (or__24272__auto__,ps__$1){
return (function (p1__34895_SHARP_){
return cljs.core.some(p1__34895_SHARP_,args);
});})(or__24272__auto__,ps__$1))
,ps__$1);
}
};
var G__35280 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__35281__i = 0, G__35281__a = new Array(arguments.length -  3);
while (G__35281__i < G__35281__a.length) {G__35281__a[G__35281__i] = arguments[G__35281__i + 3]; ++G__35281__i;}
  args = new cljs.core.IndexedSeq(G__35281__a,0);
} 
return G__35280__delegate.call(this,x,y,z,args);};
G__35280.cljs$lang$maxFixedArity = 3;
G__35280.cljs$lang$applyTo = (function (arglist__35282){
var x = cljs.core.first(arglist__35282);
arglist__35282 = cljs.core.next(arglist__35282);
var y = cljs.core.first(arglist__35282);
arglist__35282 = cljs.core.next(arglist__35282);
var z = cljs.core.first(arglist__35282);
var args = cljs.core.rest(arglist__35282);
return G__35280__delegate(x,y,z,args);
});
G__35280.cljs$core$IFn$_invoke$arity$variadic = G__35280__delegate;
return G__35280;
})()
;
spn = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return spn__0.call(this);
case 1:
return spn__1.call(this,x);
case 2:
return spn__2.call(this,x,y);
case 3:
return spn__3.call(this,x,y,z);
default:
var G__35283 = null;
if (arguments.length > 3) {
var G__35284__i = 0, G__35284__a = new Array(arguments.length -  3);
while (G__35284__i < G__35284__a.length) {G__35284__a[G__35284__i] = arguments[G__35284__i + 3]; ++G__35284__i;}
G__35283 = new cljs.core.IndexedSeq(G__35284__a,0);
}
return spn__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__35283);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
spn.cljs$lang$maxFixedArity = 3;
spn.cljs$lang$applyTo = spn__4.cljs$lang$applyTo;
spn.cljs$core$IFn$_invoke$arity$0 = spn__0;
spn.cljs$core$IFn$_invoke$arity$1 = spn__1;
spn.cljs$core$IFn$_invoke$arity$2 = spn__2;
spn.cljs$core$IFn$_invoke$arity$3 = spn__3;
spn.cljs$core$IFn$_invoke$arity$variadic = spn__4.cljs$core$IFn$_invoke$arity$variadic;
return spn;
})()
;})(ps__$1))
};
var G__35279 = function (p1,p2,p3,var_args){
var ps = null;
if (arguments.length > 3) {
var G__35285__i = 0, G__35285__a = new Array(arguments.length -  3);
while (G__35285__i < G__35285__a.length) {G__35285__a[G__35285__i] = arguments[G__35285__i + 3]; ++G__35285__i;}
  ps = new cljs.core.IndexedSeq(G__35285__a,0);
} 
return G__35279__delegate.call(this,p1,p2,p3,ps);};
G__35279.cljs$lang$maxFixedArity = 3;
G__35279.cljs$lang$applyTo = (function (arglist__35286){
var p1 = cljs.core.first(arglist__35286);
arglist__35286 = cljs.core.next(arglist__35286);
var p2 = cljs.core.first(arglist__35286);
arglist__35286 = cljs.core.next(arglist__35286);
var p3 = cljs.core.first(arglist__35286);
var ps = cljs.core.rest(arglist__35286);
return G__35279__delegate(p1,p2,p3,ps);
});
G__35279.cljs$core$IFn$_invoke$arity$variadic = G__35279__delegate;
return G__35279;
})()
;
some_fn = function(p1,p2,p3,var_args){
var ps = var_args;
switch(arguments.length){
case 1:
return some_fn__1.call(this,p1);
case 2:
return some_fn__2.call(this,p1,p2);
case 3:
return some_fn__3.call(this,p1,p2,p3);
default:
var G__35287 = null;
if (arguments.length > 3) {
var G__35288__i = 0, G__35288__a = new Array(arguments.length -  3);
while (G__35288__i < G__35288__a.length) {G__35288__a[G__35288__i] = arguments[G__35288__i + 3]; ++G__35288__i;}
G__35287 = new cljs.core.IndexedSeq(G__35288__a,0);
}
return some_fn__4.cljs$core$IFn$_invoke$arity$variadic(p1,p2,p3, G__35287);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
some_fn.cljs$lang$maxFixedArity = 3;
some_fn.cljs$lang$applyTo = some_fn__4.cljs$lang$applyTo;
some_fn.cljs$core$IFn$_invoke$arity$1 = some_fn__1;
some_fn.cljs$core$IFn$_invoke$arity$2 = some_fn__2;
some_fn.cljs$core$IFn$_invoke$arity$3 = some_fn__3;
some_fn.cljs$core$IFn$_invoke$arity$variadic = some_fn__4.cljs$core$IFn$_invoke$arity$variadic;
return some_fn;
})()
;
/**
* Returns a lazy sequence consisting of the result of applying f to
* the set of first items of each coll, followed by applying f to the
* set of second items in each coll, until any one of the colls is
* exhausted.  Any remaining items in other colls are ignored. Function
* f should accept number-of-colls arguments. Returns a transducer when
* no collection is provided.
* @param {...*} var_args
*/
cljs.core.map = (function() {
var map = null;
var map__1 = (function (f){
return (function (rf){
return (function() {
var G__35343 = null;
var G__35343__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__35343__1 = (function (result){
var G__35329 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__35329) : rf.call(null,G__35329));
});
var G__35343__2 = (function (result,input){
var G__35330 = result;
var G__35331 = (function (){var G__35332 = input;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__35332) : f.call(null,G__35332));
})();
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__35330,G__35331) : rf.call(null,G__35330,G__35331));
});
var G__35343__3 = (function() { 
var G__35344__delegate = function (result,input,inputs){
var G__35333 = result;
var G__35334 = cljs.core.apply.cljs$core$IFn$_invoke$arity$3(f,input,inputs);
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__35333,G__35334) : rf.call(null,G__35333,G__35334));
};
var G__35344 = function (result,input,var_args){
var inputs = null;
if (arguments.length > 2) {
var G__35345__i = 0, G__35345__a = new Array(arguments.length -  2);
while (G__35345__i < G__35345__a.length) {G__35345__a[G__35345__i] = arguments[G__35345__i + 2]; ++G__35345__i;}
  inputs = new cljs.core.IndexedSeq(G__35345__a,0);
} 
return G__35344__delegate.call(this,result,input,inputs);};
G__35344.cljs$lang$maxFixedArity = 2;
G__35344.cljs$lang$applyTo = (function (arglist__35346){
var result = cljs.core.first(arglist__35346);
arglist__35346 = cljs.core.next(arglist__35346);
var input = cljs.core.first(arglist__35346);
var inputs = cljs.core.rest(arglist__35346);
return G__35344__delegate(result,input,inputs);
});
G__35344.cljs$core$IFn$_invoke$arity$variadic = G__35344__delegate;
return G__35344;
})()
;
G__35343 = function(result,input,var_args){
var inputs = var_args;
switch(arguments.length){
case 0:
return G__35343__0.call(this);
case 1:
return G__35343__1.call(this,result);
case 2:
return G__35343__2.call(this,result,input);
default:
var G__35347 = null;
if (arguments.length > 2) {
var G__35348__i = 0, G__35348__a = new Array(arguments.length -  2);
while (G__35348__i < G__35348__a.length) {G__35348__a[G__35348__i] = arguments[G__35348__i + 2]; ++G__35348__i;}
G__35347 = new cljs.core.IndexedSeq(G__35348__a,0);
}
return G__35343__3.cljs$core$IFn$_invoke$arity$variadic(result,input, G__35347);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__35343.cljs$lang$maxFixedArity = 2;
G__35343.cljs$lang$applyTo = G__35343__3.cljs$lang$applyTo;
G__35343.cljs$core$IFn$_invoke$arity$0 = G__35343__0;
G__35343.cljs$core$IFn$_invoke$arity$1 = G__35343__1;
G__35343.cljs$core$IFn$_invoke$arity$2 = G__35343__2;
G__35343.cljs$core$IFn$_invoke$arity$variadic = G__35343__3.cljs$core$IFn$_invoke$arity$variadic;
return G__35343;
})()
});
});
var map__2 = (function (f,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(s)){
var c = cljs.core.chunk_first(s);
var size = cljs.core.count(c);
var b = cljs.core.chunk_buffer(size);
var n__25159__auto___35349 = size;
var i_35350 = (0);
while(true){
if((i_35350 < n__25159__auto___35349)){
cljs.core.chunk_append(b,(function (){var G__35335 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c,i_35350);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__35335) : f.call(null,G__35335));
})());

var G__35351 = (i_35350 + (1));
i_35350 = G__35351;
continue;
} else {
}
break;
}

return cljs.core.chunk_cons(cljs.core.chunk(b),map.cljs$core$IFn$_invoke$arity$2(f,cljs.core.chunk_rest(s)));
} else {
return cljs.core.cons((function (){var G__35336 = cljs.core.first(s);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__35336) : f.call(null,G__35336));
})(),map.cljs$core$IFn$_invoke$arity$2(f,cljs.core.rest(s)));
}
} else {
return null;
}
}),null,null));
});
var map__3 = (function (f,c1,c2){
return (new cljs.core.LazySeq(null,(function (){
var s1 = cljs.core.seq(c1);
var s2 = cljs.core.seq(c2);
if((s1) && (s2)){
return cljs.core.cons((function (){var G__35337 = cljs.core.first(s1);
var G__35338 = cljs.core.first(s2);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__35337,G__35338) : f.call(null,G__35337,G__35338));
})(),map.cljs$core$IFn$_invoke$arity$3(f,cljs.core.rest(s1),cljs.core.rest(s2)));
} else {
return null;
}
}),null,null));
});
var map__4 = (function (f,c1,c2,c3){
return (new cljs.core.LazySeq(null,(function (){
var s1 = cljs.core.seq(c1);
var s2 = cljs.core.seq(c2);
var s3 = cljs.core.seq(c3);
if((s1) && (s2) && (s3)){
return cljs.core.cons((function (){var G__35339 = cljs.core.first(s1);
var G__35340 = cljs.core.first(s2);
var G__35341 = cljs.core.first(s3);
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__35339,G__35340,G__35341) : f.call(null,G__35339,G__35340,G__35341));
})(),map.cljs$core$IFn$_invoke$arity$4(f,cljs.core.rest(s1),cljs.core.rest(s2),cljs.core.rest(s3)));
} else {
return null;
}
}),null,null));
});
var map__5 = (function() { 
var G__35352__delegate = function (f,c1,c2,c3,colls){
var step = (function step(cs){
return (new cljs.core.LazySeq(null,(function (){
var ss = map.cljs$core$IFn$_invoke$arity$2(cljs.core.seq,cs);
if(cljs.core.every_QMARK_(cljs.core.identity,ss)){
return cljs.core.cons(map.cljs$core$IFn$_invoke$arity$2(cljs.core.first,ss),step(map.cljs$core$IFn$_invoke$arity$2(cljs.core.rest,ss)));
} else {
return null;
}
}),null,null));
});
return map.cljs$core$IFn$_invoke$arity$2(((function (step){
return (function (p1__35289_SHARP_){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$2(f,p1__35289_SHARP_);
});})(step))
,step(cljs.core.conj.cljs$core$IFn$_invoke$arity$variadic(colls,c3,cljs.core.array_seq([c2,c1], 0))));
};
var G__35352 = function (f,c1,c2,c3,var_args){
var colls = null;
if (arguments.length > 4) {
var G__35353__i = 0, G__35353__a = new Array(arguments.length -  4);
while (G__35353__i < G__35353__a.length) {G__35353__a[G__35353__i] = arguments[G__35353__i + 4]; ++G__35353__i;}
  colls = new cljs.core.IndexedSeq(G__35353__a,0);
} 
return G__35352__delegate.call(this,f,c1,c2,c3,colls);};
G__35352.cljs$lang$maxFixedArity = 4;
G__35352.cljs$lang$applyTo = (function (arglist__35354){
var f = cljs.core.first(arglist__35354);
arglist__35354 = cljs.core.next(arglist__35354);
var c1 = cljs.core.first(arglist__35354);
arglist__35354 = cljs.core.next(arglist__35354);
var c2 = cljs.core.first(arglist__35354);
arglist__35354 = cljs.core.next(arglist__35354);
var c3 = cljs.core.first(arglist__35354);
var colls = cljs.core.rest(arglist__35354);
return G__35352__delegate(f,c1,c2,c3,colls);
});
G__35352.cljs$core$IFn$_invoke$arity$variadic = G__35352__delegate;
return G__35352;
})()
;
map = function(f,c1,c2,c3,var_args){
var colls = var_args;
switch(arguments.length){
case 1:
return map__1.call(this,f);
case 2:
return map__2.call(this,f,c1);
case 3:
return map__3.call(this,f,c1,c2);
case 4:
return map__4.call(this,f,c1,c2,c3);
default:
var G__35355 = null;
if (arguments.length > 4) {
var G__35356__i = 0, G__35356__a = new Array(arguments.length -  4);
while (G__35356__i < G__35356__a.length) {G__35356__a[G__35356__i] = arguments[G__35356__i + 4]; ++G__35356__i;}
G__35355 = new cljs.core.IndexedSeq(G__35356__a,0);
}
return map__5.cljs$core$IFn$_invoke$arity$variadic(f,c1,c2,c3, G__35355);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
map.cljs$lang$maxFixedArity = 4;
map.cljs$lang$applyTo = map__5.cljs$lang$applyTo;
map.cljs$core$IFn$_invoke$arity$1 = map__1;
map.cljs$core$IFn$_invoke$arity$2 = map__2;
map.cljs$core$IFn$_invoke$arity$3 = map__3;
map.cljs$core$IFn$_invoke$arity$4 = map__4;
map.cljs$core$IFn$_invoke$arity$variadic = map__5.cljs$core$IFn$_invoke$arity$variadic;
return map;
})()
;
/**
* Returns a lazy sequence of the first n items in coll, or all items if
* there are fewer than n.  Returns a stateful transducer when
* no collection is provided.
*/
cljs.core.take = (function() {
var take = null;
var take__1 = (function (n){
return (function (rf){
var na = cljs.core.volatile_BANG_(n);
return ((function (na){
return (function() {
var G__35365 = null;
var G__35365__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__35365__1 = (function (result){
var G__35362 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__35362) : rf.call(null,G__35362));
});
var G__35365__2 = (function (result,input){
var n__$1 = cljs.core.deref(na);
var nn = na.cljs$core$IVolatile$_vreset_BANG_$arity$2(null,(na.cljs$core$IDeref$_deref$arity$1(null) - (1)));
var result__$1 = (((n__$1 > (0)))?(function (){var G__35363 = result;
var G__35364 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__35363,G__35364) : rf.call(null,G__35363,G__35364));
})():result);
if(!((nn > (0)))){
return cljs.core.ensure_reduced(result__$1);
} else {
return result__$1;
}
});
G__35365 = function(result,input){
switch(arguments.length){
case 0:
return G__35365__0.call(this);
case 1:
return G__35365__1.call(this,result);
case 2:
return G__35365__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__35365.cljs$core$IFn$_invoke$arity$0 = G__35365__0;
G__35365.cljs$core$IFn$_invoke$arity$1 = G__35365__1;
G__35365.cljs$core$IFn$_invoke$arity$2 = G__35365__2;
return G__35365;
})()
;})(na))
});
});
var take__2 = (function (n,coll){
return (new cljs.core.LazySeq(null,(function (){
if((n > (0))){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
return cljs.core.cons(cljs.core.first(s),take.cljs$core$IFn$_invoke$arity$2((n - (1)),cljs.core.rest(s)));
} else {
return null;
}
} else {
return null;
}
}),null,null));
});
take = function(n,coll){
switch(arguments.length){
case 1:
return take__1.call(this,n);
case 2:
return take__2.call(this,n,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
take.cljs$core$IFn$_invoke$arity$1 = take__1;
take.cljs$core$IFn$_invoke$arity$2 = take__2;
return take;
})()
;
/**
* Returns a lazy sequence of all but the first n items in coll.
* Returns a stateful transducer when no collection is provided.
*/
cljs.core.drop = (function() {
var drop = null;
var drop__1 = (function (n){
return (function (rf){
var na = cljs.core.volatile_BANG_(n);
return ((function (na){
return (function() {
var G__35372 = null;
var G__35372__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__35372__1 = (function (result){
var G__35369 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__35369) : rf.call(null,G__35369));
});
var G__35372__2 = (function (result,input){
var n__$1 = cljs.core.deref(na);
na.cljs$core$IVolatile$_vreset_BANG_$arity$2(null,(na.cljs$core$IDeref$_deref$arity$1(null) - (1)));

if((n__$1 > (0))){
return result;
} else {
var G__35370 = result;
var G__35371 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__35370,G__35371) : rf.call(null,G__35370,G__35371));
}
});
G__35372 = function(result,input){
switch(arguments.length){
case 0:
return G__35372__0.call(this);
case 1:
return G__35372__1.call(this,result);
case 2:
return G__35372__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__35372.cljs$core$IFn$_invoke$arity$0 = G__35372__0;
G__35372.cljs$core$IFn$_invoke$arity$1 = G__35372__1;
G__35372.cljs$core$IFn$_invoke$arity$2 = G__35372__2;
return G__35372;
})()
;})(na))
});
});
var drop__2 = (function (n,coll){
var step = (function (n__$1,coll__$1){
while(true){
var s = cljs.core.seq(coll__$1);
if(((n__$1 > (0))) && (s)){
var G__35373 = (n__$1 - (1));
var G__35374 = cljs.core.rest(s);
n__$1 = G__35373;
coll__$1 = G__35374;
continue;
} else {
return s;
}
break;
}
});
return (new cljs.core.LazySeq(null,((function (step){
return (function (){
return step(n,coll);
});})(step))
,null,null));
});
drop = function(n,coll){
switch(arguments.length){
case 1:
return drop__1.call(this,n);
case 2:
return drop__2.call(this,n,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
drop.cljs$core$IFn$_invoke$arity$1 = drop__1;
drop.cljs$core$IFn$_invoke$arity$2 = drop__2;
return drop;
})()
;
/**
* Return a lazy sequence of all but the last n (default 1) items in coll
*/
cljs.core.drop_last = (function() {
var drop_last = null;
var drop_last__1 = (function (s){
return drop_last.cljs$core$IFn$_invoke$arity$2((1),s);
});
var drop_last__2 = (function (n,s){
return cljs.core.map.cljs$core$IFn$_invoke$arity$3((function (x,_){
return x;
}),s,cljs.core.drop.cljs$core$IFn$_invoke$arity$2(n,s));
});
drop_last = function(n,s){
switch(arguments.length){
case 1:
return drop_last__1.call(this,n);
case 2:
return drop_last__2.call(this,n,s);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
drop_last.cljs$core$IFn$_invoke$arity$1 = drop_last__1;
drop_last.cljs$core$IFn$_invoke$arity$2 = drop_last__2;
return drop_last;
})()
;
/**
* Returns a seq of the last n items in coll.  Depending on the type
* of coll may be no better than linear time.  For vectors, see also subvec.
*/
cljs.core.take_last = (function take_last(n,coll){
var s = cljs.core.seq(coll);
var lead = cljs.core.seq(cljs.core.drop.cljs$core$IFn$_invoke$arity$2(n,coll));
while(true){
if(lead){
var G__35377 = cljs.core.next(s);
var G__35378 = cljs.core.next(lead);
s = G__35377;
lead = G__35378;
continue;
} else {
return s;
}
break;
}
});
/**
* Returns a lazy sequence of the items in coll starting from the
* first item for which (pred item) returns logical false.  Returns a
* stateful transducer when no collection is provided.
*/
cljs.core.drop_while = (function() {
var drop_while = null;
var drop_while__1 = (function (pred){
return (function (rf){
var da = cljs.core.volatile_BANG_(true);
return ((function (da){
return (function() {
var G__35391 = null;
var G__35391__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__35391__1 = (function (result){
var G__35385 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__35385) : rf.call(null,G__35385));
});
var G__35391__2 = (function (result,input){
var drop_QMARK_ = cljs.core.deref(da);
if(cljs.core.truth_((function (){var and__24260__auto__ = drop_QMARK_;
if(cljs.core.truth_(and__24260__auto__)){
var G__35386 = input;
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__35386) : pred.call(null,G__35386));
} else {
return and__24260__auto__;
}
})())){
return result;
} else {
cljs.core.vreset_BANG_(da,null);

var G__35387 = result;
var G__35388 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__35387,G__35388) : rf.call(null,G__35387,G__35388));
}
});
G__35391 = function(result,input){
switch(arguments.length){
case 0:
return G__35391__0.call(this);
case 1:
return G__35391__1.call(this,result);
case 2:
return G__35391__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__35391.cljs$core$IFn$_invoke$arity$0 = G__35391__0;
G__35391.cljs$core$IFn$_invoke$arity$1 = G__35391__1;
G__35391.cljs$core$IFn$_invoke$arity$2 = G__35391__2;
return G__35391;
})()
;})(da))
});
});
var drop_while__2 = (function (pred,coll){
var step = (function (pred__$1,coll__$1){
while(true){
var s = cljs.core.seq(coll__$1);
if(cljs.core.truth_((function (){var and__24260__auto__ = s;
if(and__24260__auto__){
var G__35390 = cljs.core.first(s);
return (pred__$1.cljs$core$IFn$_invoke$arity$1 ? pred__$1.cljs$core$IFn$_invoke$arity$1(G__35390) : pred__$1.call(null,G__35390));
} else {
return and__24260__auto__;
}
})())){
var G__35392 = pred__$1;
var G__35393 = cljs.core.rest(s);
pred__$1 = G__35392;
coll__$1 = G__35393;
continue;
} else {
return s;
}
break;
}
});
return (new cljs.core.LazySeq(null,((function (step){
return (function (){
return step(pred,coll);
});})(step))
,null,null));
});
drop_while = function(pred,coll){
switch(arguments.length){
case 1:
return drop_while__1.call(this,pred);
case 2:
return drop_while__2.call(this,pred,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
drop_while.cljs$core$IFn$_invoke$arity$1 = drop_while__1;
drop_while.cljs$core$IFn$_invoke$arity$2 = drop_while__2;
return drop_while;
})()
;
/**
* Returns a lazy (infinite!) sequence of repetitions of the items in coll.
*/
cljs.core.cycle = (function cycle(coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
return cljs.core.concat.cljs$core$IFn$_invoke$arity$2(s,cycle(s));
} else {
return null;
}
}),null,null));
});
/**
* Returns a vector of [(take n coll) (drop n coll)]
*/
cljs.core.split_at = (function split_at(n,coll){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,coll),cljs.core.drop.cljs$core$IFn$_invoke$arity$2(n,coll)], null);
});
/**
* Returns a lazy (infinite!, or length n if supplied) sequence of xs.
*/
cljs.core.repeat = (function() {
var repeat = null;
var repeat__1 = (function (x){
return (new cljs.core.LazySeq(null,(function (){
return cljs.core.cons(x,repeat.cljs$core$IFn$_invoke$arity$1(x));
}),null,null));
});
var repeat__2 = (function (n,x){
return cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,repeat.cljs$core$IFn$_invoke$arity$1(x));
});
repeat = function(n,x){
switch(arguments.length){
case 1:
return repeat__1.call(this,n);
case 2:
return repeat__2.call(this,n,x);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
repeat.cljs$core$IFn$_invoke$arity$1 = repeat__1;
repeat.cljs$core$IFn$_invoke$arity$2 = repeat__2;
return repeat;
})()
;
/**
* Returns a lazy seq of n xs.
*/
cljs.core.replicate = (function replicate(n,x){
return cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,cljs.core.repeat.cljs$core$IFn$_invoke$arity$1(x));
});
/**
* Takes a function of no args, presumably with side effects, and
* returns an infinite (or length n if supplied) lazy sequence of calls
* to it
*/
cljs.core.repeatedly = (function() {
var repeatedly = null;
var repeatedly__1 = (function (f){
return (new cljs.core.LazySeq(null,(function (){
return cljs.core.cons((function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})(),repeatedly.cljs$core$IFn$_invoke$arity$1(f));
}),null,null));
});
var repeatedly__2 = (function (n,f){
return cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,repeatedly.cljs$core$IFn$_invoke$arity$1(f));
});
repeatedly = function(n,f){
switch(arguments.length){
case 1:
return repeatedly__1.call(this,n);
case 2:
return repeatedly__2.call(this,n,f);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
repeatedly.cljs$core$IFn$_invoke$arity$1 = repeatedly__1;
repeatedly.cljs$core$IFn$_invoke$arity$2 = repeatedly__2;
return repeatedly;
})()
;
/**
* Returns a lazy sequence of x, (f x), (f (f x)) etc. f must be free of side-effects
*/
cljs.core.iterate = (function iterate(f,x){
return cljs.core.cons(x,(new cljs.core.LazySeq(null,(function (){
return iterate(f,(function (){var G__35402 = x;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__35402) : f.call(null,G__35402));
})());
}),null,null)));
});
/**
* Returns a lazy seq of the first item in each coll, then the second etc.
* @param {...*} var_args
*/
cljs.core.interleave = (function() {
var interleave = null;
var interleave__2 = (function (c1,c2){
return (new cljs.core.LazySeq(null,(function (){
var s1 = cljs.core.seq(c1);
var s2 = cljs.core.seq(c2);
if((s1) && (s2)){
return cljs.core.cons(cljs.core.first(s1),cljs.core.cons(cljs.core.first(s2),interleave.cljs$core$IFn$_invoke$arity$2(cljs.core.rest(s1),cljs.core.rest(s2))));
} else {
return null;
}
}),null,null));
});
var interleave__3 = (function() { 
var G__35405__delegate = function (c1,c2,colls){
return (new cljs.core.LazySeq(null,(function (){
var ss = cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.seq,cljs.core.conj.cljs$core$IFn$_invoke$arity$variadic(colls,c2,cljs.core.array_seq([c1], 0)));
if(cljs.core.every_QMARK_(cljs.core.identity,ss)){
return cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.first,ss),cljs.core.apply.cljs$core$IFn$_invoke$arity$2(interleave,cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.rest,ss)));
} else {
return null;
}
}),null,null));
};
var G__35405 = function (c1,c2,var_args){
var colls = null;
if (arguments.length > 2) {
var G__35406__i = 0, G__35406__a = new Array(arguments.length -  2);
while (G__35406__i < G__35406__a.length) {G__35406__a[G__35406__i] = arguments[G__35406__i + 2]; ++G__35406__i;}
  colls = new cljs.core.IndexedSeq(G__35406__a,0);
} 
return G__35405__delegate.call(this,c1,c2,colls);};
G__35405.cljs$lang$maxFixedArity = 2;
G__35405.cljs$lang$applyTo = (function (arglist__35407){
var c1 = cljs.core.first(arglist__35407);
arglist__35407 = cljs.core.next(arglist__35407);
var c2 = cljs.core.first(arglist__35407);
var colls = cljs.core.rest(arglist__35407);
return G__35405__delegate(c1,c2,colls);
});
G__35405.cljs$core$IFn$_invoke$arity$variadic = G__35405__delegate;
return G__35405;
})()
;
interleave = function(c1,c2,var_args){
var colls = var_args;
switch(arguments.length){
case 2:
return interleave__2.call(this,c1,c2);
default:
var G__35408 = null;
if (arguments.length > 2) {
var G__35409__i = 0, G__35409__a = new Array(arguments.length -  2);
while (G__35409__i < G__35409__a.length) {G__35409__a[G__35409__i] = arguments[G__35409__i + 2]; ++G__35409__i;}
G__35408 = new cljs.core.IndexedSeq(G__35409__a,0);
}
return interleave__3.cljs$core$IFn$_invoke$arity$variadic(c1,c2, G__35408);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
interleave.cljs$lang$maxFixedArity = 2;
interleave.cljs$lang$applyTo = interleave__3.cljs$lang$applyTo;
interleave.cljs$core$IFn$_invoke$arity$2 = interleave__2;
interleave.cljs$core$IFn$_invoke$arity$variadic = interleave__3.cljs$core$IFn$_invoke$arity$variadic;
return interleave;
})()
;
/**
* Returns a lazy seq of the elements of coll separated by sep
*/
cljs.core.interpose = (function interpose(sep,coll){
return cljs.core.drop.cljs$core$IFn$_invoke$arity$2((1),cljs.core.interleave.cljs$core$IFn$_invoke$arity$2(cljs.core.repeat.cljs$core$IFn$_invoke$arity$1(sep),coll));
});
/**
* Take a collection of collections, and return a lazy seq
* of items from the inner collection
*/
cljs.core.flatten1 = (function flatten1(colls){
var cat = (function cat(coll,colls__$1){
return (new cljs.core.LazySeq(null,(function (){
var temp__4124__auto__ = cljs.core.seq(coll);
if(temp__4124__auto__){
var coll__$1 = temp__4124__auto__;
return cljs.core.cons(cljs.core.first(coll__$1),cat(cljs.core.rest(coll__$1),colls__$1));
} else {
if(cljs.core.seq(colls__$1)){
return cat(cljs.core.first(colls__$1),cljs.core.rest(colls__$1));
} else {
return null;
}
}
}),null,null));
});
return cat(null,colls);
});
/**
* Returns the result of applying concat to the result of applying map
* to f and colls.  Thus function f should return a collection. Returns
* a transducer when no collections are provided
* @param {...*} var_args
*/
cljs.core.mapcat = (function() {
var mapcat = null;
var mapcat__1 = (function (f){
return cljs.core.comp.cljs$core$IFn$_invoke$arity$2(cljs.core.map.cljs$core$IFn$_invoke$arity$1(f),cljs.core.cat);
});
var mapcat__2 = (function() { 
var G__35418__delegate = function (f,colls){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.concat,cljs.core.apply.cljs$core$IFn$_invoke$arity$3(cljs.core.map,f,colls));
};
var G__35418 = function (f,var_args){
var colls = null;
if (arguments.length > 1) {
var G__35419__i = 0, G__35419__a = new Array(arguments.length -  1);
while (G__35419__i < G__35419__a.length) {G__35419__a[G__35419__i] = arguments[G__35419__i + 1]; ++G__35419__i;}
  colls = new cljs.core.IndexedSeq(G__35419__a,0);
} 
return G__35418__delegate.call(this,f,colls);};
G__35418.cljs$lang$maxFixedArity = 1;
G__35418.cljs$lang$applyTo = (function (arglist__35420){
var f = cljs.core.first(arglist__35420);
var colls = cljs.core.rest(arglist__35420);
return G__35418__delegate(f,colls);
});
G__35418.cljs$core$IFn$_invoke$arity$variadic = G__35418__delegate;
return G__35418;
})()
;
mapcat = function(f,var_args){
var colls = var_args;
switch(arguments.length){
case 1:
return mapcat__1.call(this,f);
default:
var G__35421 = null;
if (arguments.length > 1) {
var G__35422__i = 0, G__35422__a = new Array(arguments.length -  1);
while (G__35422__i < G__35422__a.length) {G__35422__a[G__35422__i] = arguments[G__35422__i + 1]; ++G__35422__i;}
G__35421 = new cljs.core.IndexedSeq(G__35422__a,0);
}
return mapcat__2.cljs$core$IFn$_invoke$arity$variadic(f, G__35421);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
mapcat.cljs$lang$maxFixedArity = 1;
mapcat.cljs$lang$applyTo = mapcat__2.cljs$lang$applyTo;
mapcat.cljs$core$IFn$_invoke$arity$1 = mapcat__1;
mapcat.cljs$core$IFn$_invoke$arity$variadic = mapcat__2.cljs$core$IFn$_invoke$arity$variadic;
return mapcat;
})()
;
/**
* Returns a lazy sequence of the items in coll for which
* (pred item) returns true. pred must be free of side-effects.
* Returns a transducer when no collection is provided.
*/
cljs.core.filter = (function() {
var filter = null;
var filter__1 = (function (pred){
return (function (rf){
return (function() {
var G__35441 = null;
var G__35441__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__35441__1 = (function (result){
var G__35435 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__35435) : rf.call(null,G__35435));
});
var G__35441__2 = (function (result,input){
if(cljs.core.truth_((function (){var G__35436 = input;
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__35436) : pred.call(null,G__35436));
})())){
var G__35437 = result;
var G__35438 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__35437,G__35438) : rf.call(null,G__35437,G__35438));
} else {
return result;
}
});
G__35441 = function(result,input){
switch(arguments.length){
case 0:
return G__35441__0.call(this);
case 1:
return G__35441__1.call(this,result);
case 2:
return G__35441__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__35441.cljs$core$IFn$_invoke$arity$0 = G__35441__0;
G__35441.cljs$core$IFn$_invoke$arity$1 = G__35441__1;
G__35441.cljs$core$IFn$_invoke$arity$2 = G__35441__2;
return G__35441;
})()
});
});
var filter__2 = (function (pred,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(s)){
var c = cljs.core.chunk_first(s);
var size = cljs.core.count(c);
var b = cljs.core.chunk_buffer(size);
var n__25159__auto___35442 = size;
var i_35443 = (0);
while(true){
if((i_35443 < n__25159__auto___35442)){
if(cljs.core.truth_((function (){var G__35439 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c,i_35443);
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__35439) : pred.call(null,G__35439));
})())){
cljs.core.chunk_append(b,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c,i_35443));
} else {
}

var G__35444 = (i_35443 + (1));
i_35443 = G__35444;
continue;
} else {
}
break;
}

return cljs.core.chunk_cons(cljs.core.chunk(b),filter.cljs$core$IFn$_invoke$arity$2(pred,cljs.core.chunk_rest(s)));
} else {
var f = cljs.core.first(s);
var r = cljs.core.rest(s);
if(cljs.core.truth_((function (){var G__35440 = f;
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__35440) : pred.call(null,G__35440));
})())){
return cljs.core.cons(f,filter.cljs$core$IFn$_invoke$arity$2(pred,r));
} else {
return filter.cljs$core$IFn$_invoke$arity$2(pred,r);
}
}
} else {
return null;
}
}),null,null));
});
filter = function(pred,coll){
switch(arguments.length){
case 1:
return filter__1.call(this,pred);
case 2:
return filter__2.call(this,pred,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
filter.cljs$core$IFn$_invoke$arity$1 = filter__1;
filter.cljs$core$IFn$_invoke$arity$2 = filter__2;
return filter;
})()
;
/**
* Returns a lazy sequence of the items in coll for which
* (pred item) returns false. pred must be free of side-effects.
* Returns a transducer when no collection is provided.
*/
cljs.core.remove = (function() {
var remove = null;
var remove__1 = (function (pred){
return cljs.core.filter.cljs$core$IFn$_invoke$arity$1(cljs.core.complement(pred));
});
var remove__2 = (function (pred,coll){
return cljs.core.filter.cljs$core$IFn$_invoke$arity$2(cljs.core.complement(pred),coll);
});
remove = function(pred,coll){
switch(arguments.length){
case 1:
return remove__1.call(this,pred);
case 2:
return remove__2.call(this,pred,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
remove.cljs$core$IFn$_invoke$arity$1 = remove__1;
remove.cljs$core$IFn$_invoke$arity$2 = remove__2;
return remove;
})()
;
/**
* Returns a lazy sequence of the nodes in a tree, via a depth-first walk.
* branch? must be a fn of one arg that returns true if passed a node
* that can have children (but may not).  children must be a fn of one
* arg that returns a sequence of the children. Will only be called on
* nodes for which branch? returns true. Root is the root node of the
* tree.
*/
cljs.core.tree_seq = (function tree_seq(branch_QMARK_,children,root){
var walk = (function walk(node){
return (new cljs.core.LazySeq(null,(function (){
return cljs.core.cons(node,(cljs.core.truth_((function (){var G__35451 = node;
return (branch_QMARK_.cljs$core$IFn$_invoke$arity$1 ? branch_QMARK_.cljs$core$IFn$_invoke$arity$1(G__35451) : branch_QMARK_.call(null,G__35451));
})())?cljs.core.mapcat.cljs$core$IFn$_invoke$arity$variadic(walk,cljs.core.array_seq([(function (){var G__35452 = node;
return (children.cljs$core$IFn$_invoke$arity$1 ? children.cljs$core$IFn$_invoke$arity$1(G__35452) : children.call(null,G__35452));
})()], 0)):null));
}),null,null));
});
return walk(root);
});
/**
* Takes any nested combination of sequential things (lists, vectors,
* etc.) and returns their contents as a single, flat sequence.
* (flatten nil) returns nil.
*/
cljs.core.flatten = (function flatten(x){
return cljs.core.filter.cljs$core$IFn$_invoke$arity$2((function (p1__35453_SHARP_){
return !(cljs.core.sequential_QMARK_(p1__35453_SHARP_));
}),cljs.core.rest(cljs.core.tree_seq(cljs.core.sequential_QMARK_,cljs.core.seq,x)));
});
/**
* Returns a new coll consisting of to-coll with all of the items of
* from-coll conjoined. A transducer may be supplied.
*/
cljs.core.into = (function() {
var into = null;
var into__2 = (function (to,from){
if(!((to == null))){
if((function (){var G__35456 = to;
if(G__35456){
var bit__24946__auto__ = (G__35456.cljs$lang$protocol_mask$partition1$ & (4));
if((bit__24946__auto__) || (G__35456.cljs$core$IEditableCollection$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return cljs.core.with_meta(cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj_BANG_,cljs.core.transient$(to),from)),cljs.core.meta(to));
} else {
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj,to,from);
}
} else {
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.conj,cljs.core.List.EMPTY,from);
}
});
var into__3 = (function (to,xform,from){
if((function (){var G__35457 = to;
if(G__35457){
var bit__24946__auto__ = (G__35457.cljs$lang$protocol_mask$partition1$ & (4));
if((bit__24946__auto__) || (G__35457.cljs$core$IEditableCollection$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return cljs.core.with_meta(cljs.core.persistent_BANG_(cljs.core.transduce.cljs$core$IFn$_invoke$arity$4(xform,cljs.core.conj_BANG_,cljs.core.transient$(to),from)),cljs.core.meta(to));
} else {
return cljs.core.transduce.cljs$core$IFn$_invoke$arity$4(xform,cljs.core.conj,to,from);
}
});
into = function(to,xform,from){
switch(arguments.length){
case 2:
return into__2.call(this,to,xform);
case 3:
return into__3.call(this,to,xform,from);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
into.cljs$core$IFn$_invoke$arity$2 = into__2;
into.cljs$core$IFn$_invoke$arity$3 = into__3;
return into;
})()
;
/**
* Returns a vector consisting of the result of applying f to the
* set of first items of each coll, followed by applying f to the set
* of second items in each coll, until any one of the colls is
* exhausted.  Any remaining items in other colls are ignored. Function
* f should accept number-of-colls arguments.
* @param {...*} var_args
*/
cljs.core.mapv = (function() {
var mapv = null;
var mapv__2 = (function (f,coll){
return cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (v,o){
return cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$2(v,(function (){var G__35459 = o;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__35459) : f.call(null,G__35459));
})());
}),cljs.core.transient$(cljs.core.PersistentVector.EMPTY),coll));
});
var mapv__3 = (function (f,c1,c2){
return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentVector.EMPTY,cljs.core.map.cljs$core$IFn$_invoke$arity$3(f,c1,c2));
});
var mapv__4 = (function (f,c1,c2,c3){
return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentVector.EMPTY,cljs.core.map.cljs$core$IFn$_invoke$arity$4(f,c1,c2,c3));
});
var mapv__5 = (function() { 
var G__35460__delegate = function (f,c1,c2,c3,colls){
return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentVector.EMPTY,cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(cljs.core.map,f,c1,c2,c3,cljs.core.array_seq([colls], 0)));
};
var G__35460 = function (f,c1,c2,c3,var_args){
var colls = null;
if (arguments.length > 4) {
var G__35461__i = 0, G__35461__a = new Array(arguments.length -  4);
while (G__35461__i < G__35461__a.length) {G__35461__a[G__35461__i] = arguments[G__35461__i + 4]; ++G__35461__i;}
  colls = new cljs.core.IndexedSeq(G__35461__a,0);
} 
return G__35460__delegate.call(this,f,c1,c2,c3,colls);};
G__35460.cljs$lang$maxFixedArity = 4;
G__35460.cljs$lang$applyTo = (function (arglist__35462){
var f = cljs.core.first(arglist__35462);
arglist__35462 = cljs.core.next(arglist__35462);
var c1 = cljs.core.first(arglist__35462);
arglist__35462 = cljs.core.next(arglist__35462);
var c2 = cljs.core.first(arglist__35462);
arglist__35462 = cljs.core.next(arglist__35462);
var c3 = cljs.core.first(arglist__35462);
var colls = cljs.core.rest(arglist__35462);
return G__35460__delegate(f,c1,c2,c3,colls);
});
G__35460.cljs$core$IFn$_invoke$arity$variadic = G__35460__delegate;
return G__35460;
})()
;
mapv = function(f,c1,c2,c3,var_args){
var colls = var_args;
switch(arguments.length){
case 2:
return mapv__2.call(this,f,c1);
case 3:
return mapv__3.call(this,f,c1,c2);
case 4:
return mapv__4.call(this,f,c1,c2,c3);
default:
var G__35463 = null;
if (arguments.length > 4) {
var G__35464__i = 0, G__35464__a = new Array(arguments.length -  4);
while (G__35464__i < G__35464__a.length) {G__35464__a[G__35464__i] = arguments[G__35464__i + 4]; ++G__35464__i;}
G__35463 = new cljs.core.IndexedSeq(G__35464__a,0);
}
return mapv__5.cljs$core$IFn$_invoke$arity$variadic(f,c1,c2,c3, G__35463);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
mapv.cljs$lang$maxFixedArity = 4;
mapv.cljs$lang$applyTo = mapv__5.cljs$lang$applyTo;
mapv.cljs$core$IFn$_invoke$arity$2 = mapv__2;
mapv.cljs$core$IFn$_invoke$arity$3 = mapv__3;
mapv.cljs$core$IFn$_invoke$arity$4 = mapv__4;
mapv.cljs$core$IFn$_invoke$arity$variadic = mapv__5.cljs$core$IFn$_invoke$arity$variadic;
return mapv;
})()
;
/**
* Returns a vector of the items in coll for which
* (pred item) returns true. pred must be free of side-effects.
*/
cljs.core.filterv = (function filterv(pred,coll){
return cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (v,o){
if(cljs.core.truth_((function (){var G__35466 = o;
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__35466) : pred.call(null,G__35466));
})())){
return cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$2(v,o);
} else {
return v;
}
}),cljs.core.transient$(cljs.core.PersistentVector.EMPTY),coll));
});
/**
* Returns a lazy sequence of lists of n items each, at offsets step
* apart. If step is not supplied, defaults to n, i.e. the partitions
* do not overlap. If a pad collection is supplied, use its elements as
* necessary to complete last partition up to n items. In case there are
* not enough padding elements, return a partition with less than n items.
*/
cljs.core.partition = (function() {
var partition = null;
var partition__2 = (function (n,coll){
return partition.cljs$core$IFn$_invoke$arity$3(n,n,coll);
});
var partition__3 = (function (n,step,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
var p = cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,s);
if((n === cljs.core.count(p))){
return cljs.core.cons(p,partition.cljs$core$IFn$_invoke$arity$3(n,step,cljs.core.drop.cljs$core$IFn$_invoke$arity$2(step,s)));
} else {
return null;
}
} else {
return null;
}
}),null,null));
});
var partition__4 = (function (n,step,pad,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
var p = cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,s);
if((n === cljs.core.count(p))){
return cljs.core.cons(p,partition.cljs$core$IFn$_invoke$arity$4(n,step,pad,cljs.core.drop.cljs$core$IFn$_invoke$arity$2(step,s)));
} else {
return cljs.core._conj(cljs.core.List.EMPTY,cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,cljs.core.concat.cljs$core$IFn$_invoke$arity$2(p,pad)));
}
} else {
return null;
}
}),null,null));
});
partition = function(n,step,pad,coll){
switch(arguments.length){
case 2:
return partition__2.call(this,n,step);
case 3:
return partition__3.call(this,n,step,pad);
case 4:
return partition__4.call(this,n,step,pad,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
partition.cljs$core$IFn$_invoke$arity$2 = partition__2;
partition.cljs$core$IFn$_invoke$arity$3 = partition__3;
partition.cljs$core$IFn$_invoke$arity$4 = partition__4;
return partition;
})()
;
/**
* Returns the value in a nested associative structure,
* where ks is a sequence of keys. Returns nil if the key is not present,
* or the not-found value if supplied.
*/
cljs.core.get_in = (function() {
var get_in = null;
var get_in__2 = (function (m,ks){
return get_in.cljs$core$IFn$_invoke$arity$3(m,ks,null);
});
var get_in__3 = (function (m,ks,not_found){
var sentinel = cljs.core.lookup_sentinel;
var m__$1 = m;
var ks__$1 = cljs.core.seq(ks);
while(true){
if(ks__$1){
if(!((function (){var G__35481 = m__$1;
if(G__35481){
var bit__24953__auto__ = (G__35481.cljs$lang$protocol_mask$partition0$ & (256));
if((bit__24953__auto__) || (G__35481.cljs$core$ILookup$)){
return true;
} else {
if((!G__35481.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ILookup,G__35481);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ILookup,G__35481);
}
})())){
return not_found;
} else {
var m__$2 = cljs.core.get.cljs$core$IFn$_invoke$arity$3(m__$1,cljs.core.first(ks__$1),sentinel);
if((sentinel === m__$2)){
return not_found;
} else {
var G__35482 = sentinel;
var G__35483 = m__$2;
var G__35484 = cljs.core.next(ks__$1);
sentinel = G__35482;
m__$1 = G__35483;
ks__$1 = G__35484;
continue;
}
}
} else {
return m__$1;
}
break;
}
});
get_in = function(m,ks,not_found){
switch(arguments.length){
case 2:
return get_in__2.call(this,m,ks);
case 3:
return get_in__3.call(this,m,ks,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
get_in.cljs$core$IFn$_invoke$arity$2 = get_in__2;
get_in.cljs$core$IFn$_invoke$arity$3 = get_in__3;
return get_in;
})()
;
/**
* Associates a value in a nested associative structure, where ks is a
* sequence of keys and v is the new value and returns a new nested structure.
* If any levels do not exist, hash-maps will be created.
*/
cljs.core.assoc_in = (function assoc_in(m,p__35485,v){
var vec__35490 = p__35485;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__35490,(0),null);
var ks = cljs.core.nthnext(vec__35490,(1));
if(ks){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,assoc_in(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),ks,v));
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,v);
}
});
/**
* 'Updates' a value in a nested associative structure, where ks is a
* sequence of keys and f is a function that will take the old value
* and any supplied args and return the new value, and returns a new
* nested structure.  If any levels do not exist, hash-maps will be
* created.
* @param {...*} var_args
*/
cljs.core.update_in = (function() {
var update_in = null;
var update_in__3 = (function (m,p__35491,f){
var vec__35529 = p__35491;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__35529,(0),null);
var ks = cljs.core.nthnext(vec__35529,(1));
if(ks){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,update_in.cljs$core$IFn$_invoke$arity$3(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),ks,f));
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__35530 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__35530) : f.call(null,G__35530));
})());
}
});
var update_in__4 = (function (m,p__35492,f,a){
var vec__35531 = p__35492;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__35531,(0),null);
var ks = cljs.core.nthnext(vec__35531,(1));
if(ks){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,update_in.cljs$core$IFn$_invoke$arity$4(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),ks,f,a));
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__35532 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__35533 = a;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__35532,G__35533) : f.call(null,G__35532,G__35533));
})());
}
});
var update_in__5 = (function (m,p__35493,f,a,b){
var vec__35534 = p__35493;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__35534,(0),null);
var ks = cljs.core.nthnext(vec__35534,(1));
if(ks){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,update_in.cljs$core$IFn$_invoke$arity$5(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),ks,f,a,b));
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__35535 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__35536 = a;
var G__35537 = b;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__35535,G__35536,G__35537) : f.call(null,G__35535,G__35536,G__35537));
})());
}
});
var update_in__6 = (function (m,p__35494,f,a,b,c){
var vec__35538 = p__35494;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__35538,(0),null);
var ks = cljs.core.nthnext(vec__35538,(1));
if(ks){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,update_in.cljs$core$IFn$_invoke$arity$6(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),ks,f,a,b,c));
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__35539 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__35540 = a;
var G__35541 = b;
var G__35542 = c;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__35539,G__35540,G__35541,G__35542) : f.call(null,G__35539,G__35540,G__35541,G__35542));
})());
}
});
var update_in__7 = (function() { 
var G__35544__delegate = function (m,p__35495,f,a,b,c,args){
var vec__35543 = p__35495;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__35543,(0),null);
var ks = cljs.core.nthnext(vec__35543,(1));
if(ks){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(update_in,cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),ks,f,a,cljs.core.array_seq([b,c,args], 0)));
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f,cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),a,b,c,cljs.core.array_seq([args], 0)));
}
};
var G__35544 = function (m,p__35495,f,a,b,c,var_args){
var args = null;
if (arguments.length > 6) {
var G__35545__i = 0, G__35545__a = new Array(arguments.length -  6);
while (G__35545__i < G__35545__a.length) {G__35545__a[G__35545__i] = arguments[G__35545__i + 6]; ++G__35545__i;}
  args = new cljs.core.IndexedSeq(G__35545__a,0);
} 
return G__35544__delegate.call(this,m,p__35495,f,a,b,c,args);};
G__35544.cljs$lang$maxFixedArity = 6;
G__35544.cljs$lang$applyTo = (function (arglist__35546){
var m = cljs.core.first(arglist__35546);
arglist__35546 = cljs.core.next(arglist__35546);
var p__35495 = cljs.core.first(arglist__35546);
arglist__35546 = cljs.core.next(arglist__35546);
var f = cljs.core.first(arglist__35546);
arglist__35546 = cljs.core.next(arglist__35546);
var a = cljs.core.first(arglist__35546);
arglist__35546 = cljs.core.next(arglist__35546);
var b = cljs.core.first(arglist__35546);
arglist__35546 = cljs.core.next(arglist__35546);
var c = cljs.core.first(arglist__35546);
var args = cljs.core.rest(arglist__35546);
return G__35544__delegate(m,p__35495,f,a,b,c,args);
});
G__35544.cljs$core$IFn$_invoke$arity$variadic = G__35544__delegate;
return G__35544;
})()
;
update_in = function(m,p__35495,f,a,b,c,var_args){
var args = var_args;
switch(arguments.length){
case 3:
return update_in__3.call(this,m,p__35495,f);
case 4:
return update_in__4.call(this,m,p__35495,f,a);
case 5:
return update_in__5.call(this,m,p__35495,f,a,b);
case 6:
return update_in__6.call(this,m,p__35495,f,a,b,c);
default:
var G__35547 = null;
if (arguments.length > 6) {
var G__35548__i = 0, G__35548__a = new Array(arguments.length -  6);
while (G__35548__i < G__35548__a.length) {G__35548__a[G__35548__i] = arguments[G__35548__i + 6]; ++G__35548__i;}
G__35547 = new cljs.core.IndexedSeq(G__35548__a,0);
}
return update_in__7.cljs$core$IFn$_invoke$arity$variadic(m,p__35495,f,a,b,c, G__35547);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
update_in.cljs$lang$maxFixedArity = 6;
update_in.cljs$lang$applyTo = update_in__7.cljs$lang$applyTo;
update_in.cljs$core$IFn$_invoke$arity$3 = update_in__3;
update_in.cljs$core$IFn$_invoke$arity$4 = update_in__4;
update_in.cljs$core$IFn$_invoke$arity$5 = update_in__5;
update_in.cljs$core$IFn$_invoke$arity$6 = update_in__6;
update_in.cljs$core$IFn$_invoke$arity$variadic = update_in__7.cljs$core$IFn$_invoke$arity$variadic;
return update_in;
})()
;
/**
* 'Updates' a value in an associative structure, where k is a
* key and f is a function that will take the old value
* and any supplied args and return the new value, and returns a new
* structure.  If the key does not exist, nil is passed as the old value.
* @param {...*} var_args
*/
cljs.core.update = (function() {
var update = null;
var update__3 = (function (m,k,f){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__35559 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__35559) : f.call(null,G__35559));
})());
});
var update__4 = (function (m,k,f,x){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__35560 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__35561 = x;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__35560,G__35561) : f.call(null,G__35560,G__35561));
})());
});
var update__5 = (function (m,k,f,x,y){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__35562 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__35563 = x;
var G__35564 = y;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__35562,G__35563,G__35564) : f.call(null,G__35562,G__35563,G__35564));
})());
});
var update__6 = (function (m,k,f,x,y,z){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__35565 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__35566 = x;
var G__35567 = y;
var G__35568 = z;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__35565,G__35566,G__35567,G__35568) : f.call(null,G__35565,G__35566,G__35567,G__35568));
})());
});
var update__7 = (function() { 
var G__35569__delegate = function (m,k,f,x,y,z,more){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f,cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),x,y,z,cljs.core.array_seq([more], 0)));
};
var G__35569 = function (m,k,f,x,y,z,var_args){
var more = null;
if (arguments.length > 6) {
var G__35570__i = 0, G__35570__a = new Array(arguments.length -  6);
while (G__35570__i < G__35570__a.length) {G__35570__a[G__35570__i] = arguments[G__35570__i + 6]; ++G__35570__i;}
  more = new cljs.core.IndexedSeq(G__35570__a,0);
} 
return G__35569__delegate.call(this,m,k,f,x,y,z,more);};
G__35569.cljs$lang$maxFixedArity = 6;
G__35569.cljs$lang$applyTo = (function (arglist__35571){
var m = cljs.core.first(arglist__35571);
arglist__35571 = cljs.core.next(arglist__35571);
var k = cljs.core.first(arglist__35571);
arglist__35571 = cljs.core.next(arglist__35571);
var f = cljs.core.first(arglist__35571);
arglist__35571 = cljs.core.next(arglist__35571);
var x = cljs.core.first(arglist__35571);
arglist__35571 = cljs.core.next(arglist__35571);
var y = cljs.core.first(arglist__35571);
arglist__35571 = cljs.core.next(arglist__35571);
var z = cljs.core.first(arglist__35571);
var more = cljs.core.rest(arglist__35571);
return G__35569__delegate(m,k,f,x,y,z,more);
});
G__35569.cljs$core$IFn$_invoke$arity$variadic = G__35569__delegate;
return G__35569;
})()
;
update = function(m,k,f,x,y,z,var_args){
var more = var_args;
switch(arguments.length){
case 3:
return update__3.call(this,m,k,f);
case 4:
return update__4.call(this,m,k,f,x);
case 5:
return update__5.call(this,m,k,f,x,y);
case 6:
return update__6.call(this,m,k,f,x,y,z);
default:
var G__35572 = null;
if (arguments.length > 6) {
var G__35573__i = 0, G__35573__a = new Array(arguments.length -  6);
while (G__35573__i < G__35573__a.length) {G__35573__a[G__35573__i] = arguments[G__35573__i + 6]; ++G__35573__i;}
G__35572 = new cljs.core.IndexedSeq(G__35573__a,0);
}
return update__7.cljs$core$IFn$_invoke$arity$variadic(m,k,f,x,y,z, G__35572);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
update.cljs$lang$maxFixedArity = 6;
update.cljs$lang$applyTo = update__7.cljs$lang$applyTo;
update.cljs$core$IFn$_invoke$arity$3 = update__3;
update.cljs$core$IFn$_invoke$arity$4 = update__4;
update.cljs$core$IFn$_invoke$arity$5 = update__5;
update.cljs$core$IFn$_invoke$arity$6 = update__6;
update.cljs$core$IFn$_invoke$arity$variadic = update__7.cljs$core$IFn$_invoke$arity$variadic;
return update;
})()
;

/**
* @constructor
*/
cljs.core.VectorNode = (function (edit,arr){
this.edit = edit;
this.arr = arr;
})

cljs.core.VectorNode.cljs$lang$type = true;

cljs.core.VectorNode.cljs$lang$ctorStr = "cljs.core/VectorNode";

cljs.core.VectorNode.cljs$lang$ctorPrWriter = (function (this__24859__auto__,writer__24860__auto__,opt__24861__auto__){
return cljs.core._write(writer__24860__auto__,"cljs.core/VectorNode");
});

cljs.core.__GT_VectorNode = (function __GT_VectorNode(edit,arr){
return (new cljs.core.VectorNode(edit,arr));
});

cljs.core.pv_fresh_node = (function pv_fresh_node(edit){
return (new cljs.core.VectorNode(edit,[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null]));
});
cljs.core.pv_aget = (function pv_aget(node,idx){
return (node.arr[idx]);
});
cljs.core.pv_aset = (function pv_aset(node,idx,val){
return (node.arr[idx] = val);
});
cljs.core.pv_clone_node = (function pv_clone_node(node){
return (new cljs.core.VectorNode(node.edit,cljs.core.aclone(node.arr)));
});
cljs.core.tail_off = (function tail_off(pv){
var cnt = pv.cnt;
if((cnt < (32))){
return (0);
} else {
return (((cnt - (1)) >>> (5)) << (5));
}
});
cljs.core.new_path = (function new_path(edit,level,node){
var ll = level;
var ret = node;
while(true){
if((ll === (0))){
return ret;
} else {
var embed = ret;
var r = cljs.core.pv_fresh_node(edit);
var _ = cljs.core.pv_aset(r,(0),embed);
var G__35574 = (ll - (5));
var G__35575 = r;
ll = G__35574;
ret = G__35575;
continue;
}
break;
}
});
cljs.core.push_tail = (function push_tail(pv,level,parent,tailnode){
var ret = cljs.core.pv_clone_node(parent);
var subidx = (((pv.cnt - (1)) >>> level) & (31));
if(((5) === level)){
cljs.core.pv_aset(ret,subidx,tailnode);

return ret;
} else {
var child = cljs.core.pv_aget(parent,subidx);
if(!((child == null))){
var node_to_insert = push_tail(pv,(level - (5)),child,tailnode);
cljs.core.pv_aset(ret,subidx,node_to_insert);

return ret;
} else {
var node_to_insert = cljs.core.new_path(null,(level - (5)),tailnode);
cljs.core.pv_aset(ret,subidx,node_to_insert);

return ret;
}
}
});
cljs.core.vector_index_out_of_bounds = (function vector_index_out_of_bounds(i,cnt){
throw (new Error([cljs.core.str("No item "),cljs.core.str(i),cljs.core.str(" in vector of length "),cljs.core.str(cnt)].join('')));
});
cljs.core.first_array_for_longvec = (function first_array_for_longvec(pv){
var node = pv.root;
var level = pv.shift;
while(true){
if((level > (0))){
var G__35580 = cljs.core.pv_aget(node,(0));
var G__35581 = (level - (5));
node = G__35580;
level = G__35581;
continue;
} else {
return node.arr;
}
break;
}
});
cljs.core.unchecked_array_for = (function unchecked_array_for(pv,i){
if((i >= cljs.core.tail_off(pv))){
return pv.tail;
} else {
var node = pv.root;
var level = pv.shift;
while(true){
if((level > (0))){
var G__35582 = cljs.core.pv_aget(node,((i >>> level) & (31)));
var G__35583 = (level - (5));
node = G__35582;
level = G__35583;
continue;
} else {
return node.arr;
}
break;
}
}
});
cljs.core.array_for = (function array_for(pv,i){
if((((0) <= i)) && ((i < pv.cnt))){
return cljs.core.unchecked_array_for(pv,i);
} else {
return cljs.core.vector_index_out_of_bounds(i,pv.cnt);
}
});
cljs.core.do_assoc = (function do_assoc(pv,level,node,i,val){
var ret = cljs.core.pv_clone_node(node);
if((level === (0))){
cljs.core.pv_aset(ret,(i & (31)),val);

return ret;
} else {
var subidx = ((i >>> level) & (31));
cljs.core.pv_aset(ret,subidx,do_assoc(pv,(level - (5)),cljs.core.pv_aget(node,subidx),i,val));

return ret;
}
});
cljs.core.pop_tail = (function pop_tail(pv,level,node){
var subidx = (((pv.cnt - (2)) >>> level) & (31));
if((level > (5))){
var new_child = pop_tail(pv,(level - (5)),cljs.core.pv_aget(node,subidx));
if(((new_child == null)) && ((subidx === (0)))){
return null;
} else {
var ret = cljs.core.pv_clone_node(node);
cljs.core.pv_aset(ret,subidx,new_child);

return ret;
}
} else {
if((subidx === (0))){
return null;
} else {
var ret = cljs.core.pv_clone_node(node);
cljs.core.pv_aset(ret,subidx,null);

return ret;

}
}
});

/**
* @constructor
*/
cljs.core.RangedIterator = (function (i,base,arr,v,start,end){
this.i = i;
this.base = base;
this.arr = arr;
this.v = v;
this.start = start;
this.end = end;
})
cljs.core.RangedIterator.prototype.hasNext = (function (){
var self__ = this;
var this$ = this;
return (self__.i < self__.end);
});

cljs.core.RangedIterator.prototype.next = (function (){
var self__ = this;
var this$ = this;
if(((self__.i - self__.base) === (32))){
self__.arr = cljs.core.unchecked_array_for(self__.v,self__.i);

self__.base = (self__.base + (32));
} else {
}

var ret = (self__.arr[(self__.i & (31))]);
self__.i = (self__.i + (1));

return ret;
});

cljs.core.RangedIterator.cljs$lang$type = true;

cljs.core.RangedIterator.cljs$lang$ctorStr = "cljs.core/RangedIterator";

cljs.core.RangedIterator.cljs$lang$ctorPrWriter = (function (this__24859__auto__,writer__24860__auto__,opt__24861__auto__){
return cljs.core._write(writer__24860__auto__,"cljs.core/RangedIterator");
});

cljs.core.__GT_RangedIterator = (function __GT_RangedIterator(i,base,arr,v,start,end){
return (new cljs.core.RangedIterator(i,base,arr,v,start,end));
});

cljs.core.ranged_iterator = (function ranged_iterator(v,start,end){
var i = start;
return (new cljs.core.RangedIterator(i,(i - (i % (32))),(((start < cljs.core.count(v)))?cljs.core.unchecked_array_for(v,i):null),v,start,end));
});







/**
* @constructor
*/
cljs.core.PersistentVector = (function (meta,cnt,shift,root,tail,__hash){
this.meta = meta;
this.cnt = cnt;
this.shift = shift;
this.root = root;
this.tail = tail;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 167668511;
this.cljs$lang$protocol_mask$partition1$ = 8196;
})
cljs.core.PersistentVector.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentVector.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentVector.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.PersistentVector.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
if(typeof k === 'number'){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(coll__$1,k,not_found);
} else {
return not_found;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = (function (v,f,init){
var self__ = this;
var v__$1 = this;
var i = (0);
var init__$1 = init;
while(true){
if((i < self__.cnt)){
var arr = cljs.core.unchecked_array_for(v__$1,i);
var len = arr.length;
var init__$2 = (function (){var j = (0);
var init__$2 = init__$1;
while(true){
if((j < len)){
var init__$3 = (function (){var G__35593 = init__$2;
var G__35594 = (j + i);
var G__35595 = (arr[j]);
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__35593,G__35594,G__35595) : f.call(null,G__35593,G__35594,G__35595));
})();
if(cljs.core.reduced_QMARK_(init__$3)){
return init__$3;
} else {
var G__35606 = (j + (1));
var G__35607 = init__$3;
j = G__35606;
init__$2 = G__35607;
continue;
}
} else {
return init__$2;
}
break;
}
})();
if(cljs.core.reduced_QMARK_(init__$2)){
var G__35596 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__35596) : cljs.core.deref.call(null,G__35596));
} else {
var G__35608 = (i + len);
var G__35609 = init__$2;
i = G__35608;
init__$1 = G__35609;
continue;
}
} else {
return init__$1;
}
break;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (coll,n){
var self__ = this;
var coll__$1 = this;
return (cljs.core.array_for(coll__$1,n)[(n & (31))]);
});

cljs.core.PersistentVector.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (coll,n,not_found){
var self__ = this;
var coll__$1 = this;
if((((0) <= n)) && ((n < self__.cnt))){
return (cljs.core.unchecked_array_for(coll__$1,n)[(n & (31))]);
} else {
return not_found;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IVector$_assoc_n$arity$3 = (function (coll,n,val){
var self__ = this;
var coll__$1 = this;
if((((0) <= n)) && ((n < self__.cnt))){
if((cljs.core.tail_off(coll__$1) <= n)){
var new_tail = cljs.core.aclone(self__.tail);
(new_tail[(n & (31))] = val);

return (new cljs.core.PersistentVector(self__.meta,self__.cnt,self__.shift,self__.root,new_tail,null));
} else {
return (new cljs.core.PersistentVector(self__.meta,self__.cnt,self__.shift,cljs.core.do_assoc(coll__$1,self__.shift,self__.root,n,val),self__.tail,null));
}
} else {
if((n === self__.cnt)){
return cljs.core._conj(coll__$1,val);
} else {
throw (new Error([cljs.core.str("Index "),cljs.core.str(n),cljs.core.str(" out of bounds  [0,"),cljs.core.str(self__.cnt),cljs.core.str("]")].join('')));

}
}
});

cljs.core.PersistentVector.prototype.cljs$core$IIterable$ = true;

cljs.core.PersistentVector.prototype.cljs$core$IIterable$_iterator$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return cljs.core.ranged_iterator(this$__$1,(0),self__.cnt);
});

cljs.core.PersistentVector.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentVector.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.PersistentVector(self__.meta,self__.cnt,self__.shift,self__.root,self__.tail,self__.__hash));
});

cljs.core.PersistentVector.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.cnt;
});

cljs.core.PersistentVector.prototype.cljs$core$IMapEntry$_key$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll__$1,(0));
});

cljs.core.PersistentVector.prototype.cljs$core$IMapEntry$_val$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll__$1,(1));
});

cljs.core.PersistentVector.prototype.cljs$core$IStack$_peek$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll__$1,(self__.cnt - (1)));
} else {
return null;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IStack$_pop$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt === (0))){
throw (new Error("Can't pop empty vector"));
} else {
if(((1) === self__.cnt)){
return cljs.core._with_meta(cljs.core.PersistentVector.EMPTY,self__.meta);
} else {
if(((1) < (self__.cnt - cljs.core.tail_off(coll__$1)))){
return (new cljs.core.PersistentVector(self__.meta,(self__.cnt - (1)),self__.shift,self__.root,self__.tail.slice((0),(-1)),null));
} else {
var new_tail = cljs.core.unchecked_array_for(coll__$1,(self__.cnt - (2)));
var nr = cljs.core.pop_tail(coll__$1,self__.shift,self__.root);
var new_root = (((nr == null))?cljs.core.PersistentVector.EMPTY_NODE:nr);
var cnt_1 = (self__.cnt - (1));
if((((5) < self__.shift)) && ((cljs.core.pv_aget(new_root,(1)) == null))){
return (new cljs.core.PersistentVector(self__.meta,cnt_1,(self__.shift - (5)),cljs.core.pv_aget(new_root,(0)),new_tail,null));
} else {
return (new cljs.core.PersistentVector(self__.meta,cnt_1,self__.shift,new_root,new_tail,null));
}

}
}
}
});

cljs.core.PersistentVector.prototype.cljs$core$IReversible$_rseq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
return (new cljs.core.RSeq(coll__$1,(self__.cnt - (1)),null));
} else {
return null;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__24693__auto__ = self__.__hash;
if(!((h__24693__auto__ == null))){
return h__24693__auto__;
} else {
var h__24693__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__24693__auto____$1;

return h__24693__auto____$1;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
if((other instanceof cljs.core.PersistentVector)){
if((self__.cnt === cljs.core.count(other))){
var me_iter = cljs.core._iterator(coll__$1);
var you_iter = cljs.core._iterator(other);
while(true){
if(cljs.core.truth_(me_iter.hasNext())){
var x = me_iter.next();
var y = you_iter.next();
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x,y)){
continue;
} else {
return false;
}
} else {
return true;
}
break;
}
} else {
return false;
}
} else {
return cljs.core.equiv_sequential(coll__$1,other);
}
});

cljs.core.PersistentVector.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.TransientVector(self__.cnt,self__.shift,(function (){var G__35597 = self__.root;
return (cljs.core.tv_editable_root.cljs$core$IFn$_invoke$arity$1 ? cljs.core.tv_editable_root.cljs$core$IFn$_invoke$arity$1(G__35597) : cljs.core.tv_editable_root.call(null,G__35597));
})(),(function (){var G__35598 = self__.tail;
return (cljs.core.tv_editable_tail.cljs$core$IFn$_invoke$arity$1 ? cljs.core.tv_editable_tail.cljs$core$IFn$_invoke$arity$1(G__35598) : cljs.core.tv_editable_tail.call(null,G__35598));
})()));
});

cljs.core.PersistentVector.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.PersistentVector.EMPTY,self__.meta);
});

cljs.core.PersistentVector.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (v,f){
var self__ = this;
var v__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(v__$1,f);
});

cljs.core.PersistentVector.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (v,f,init){
var self__ = this;
var v__$1 = this;
var i = (0);
var init__$1 = init;
while(true){
if((i < self__.cnt)){
var arr = cljs.core.unchecked_array_for(v__$1,i);
var len = arr.length;
var init__$2 = (function (){var j = (0);
var init__$2 = init__$1;
while(true){
if((j < len)){
var init__$3 = (function (){var G__35599 = init__$2;
var G__35600 = (arr[j]);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__35599,G__35600) : f.call(null,G__35599,G__35600));
})();
if(cljs.core.reduced_QMARK_(init__$3)){
return init__$3;
} else {
var G__35610 = (j + (1));
var G__35611 = init__$3;
j = G__35610;
init__$2 = G__35611;
continue;
}
} else {
return init__$2;
}
break;
}
})();
if(cljs.core.reduced_QMARK_(init__$2)){
var G__35601 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__35601) : cljs.core.deref.call(null,G__35601));
} else {
var G__35612 = (i + len);
var G__35613 = init__$2;
i = G__35612;
init__$1 = G__35613;
continue;
}
} else {
return init__$1;
}
break;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (coll,k,v){
var self__ = this;
var coll__$1 = this;
if(typeof k === 'number'){
return cljs.core._assoc_n(coll__$1,k,v);
} else {
throw (new Error("Vector's key for assoc must be a number."));
}
});

cljs.core.PersistentVector.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt === (0))){
return null;
} else {
if((self__.cnt <= (32))){
return (new cljs.core.IndexedSeq(self__.tail,(0)));
} else {
var G__35602 = coll__$1;
var G__35603 = cljs.core.first_array_for_longvec(coll__$1);
var G__35604 = (0);
var G__35605 = (0);
return (cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__35602,G__35603,G__35604,G__35605) : cljs.core.chunked_seq.call(null,G__35602,G__35603,G__35604,G__35605));

}
}
});

cljs.core.PersistentVector.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentVector(meta__$1,self__.cnt,self__.shift,self__.root,self__.tail,self__.__hash));
});

cljs.core.PersistentVector.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
if(((self__.cnt - cljs.core.tail_off(coll__$1)) < (32))){
var len = self__.tail.length;
var new_tail = (new Array((len + (1))));
var n__25159__auto___35614 = len;
var i_35615 = (0);
while(true){
if((i_35615 < n__25159__auto___35614)){
(new_tail[i_35615] = (self__.tail[i_35615]));

var G__35616 = (i_35615 + (1));
i_35615 = G__35616;
continue;
} else {
}
break;
}

(new_tail[len] = o);

return (new cljs.core.PersistentVector(self__.meta,(self__.cnt + (1)),self__.shift,self__.root,new_tail,null));
} else {
var root_overflow_QMARK_ = ((self__.cnt >>> (5)) > ((1) << self__.shift));
var new_shift = ((root_overflow_QMARK_)?(self__.shift + (5)):self__.shift);
var new_root = ((root_overflow_QMARK_)?(function (){var n_r = cljs.core.pv_fresh_node(null);
cljs.core.pv_aset(n_r,(0),self__.root);

cljs.core.pv_aset(n_r,(1),cljs.core.new_path(null,self__.shift,(new cljs.core.VectorNode(null,self__.tail))));

return n_r;
})():cljs.core.push_tail(coll__$1,self__.shift,self__.root,(new cljs.core.VectorNode(null,self__.tail))));
return (new cljs.core.PersistentVector(self__.meta,(self__.cnt + (1)),new_shift,new_root,[o],null));
}
});

cljs.core.PersistentVector.prototype.call = (function() {
var G__35617 = null;
var G__35617__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$IIndexed$_nth$arity$2(null,k);
});
var G__35617__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$IIndexed$_nth$arity$3(null,k,not_found);
});
G__35617 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__35617__2.call(this,self__,k);
case 3:
return G__35617__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__35617.cljs$core$IFn$_invoke$arity$2 = G__35617__2;
G__35617.cljs$core$IFn$_invoke$arity$3 = G__35617__3;
return G__35617;
})()
;

cljs.core.PersistentVector.prototype.apply = (function (self__,args35592){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args35592)));
});

cljs.core.PersistentVector.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$IIndexed$_nth$arity$2(null,k);
});

cljs.core.PersistentVector.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$IIndexed$_nth$arity$3(null,k,not_found);
});

cljs.core.PersistentVector.cljs$lang$type = true;

cljs.core.PersistentVector.cljs$lang$ctorStr = "cljs.core/PersistentVector";

cljs.core.PersistentVector.cljs$lang$ctorPrWriter = (function (this__24859__auto__,writer__24860__auto__,opt__24861__auto__){
return cljs.core._write(writer__24860__auto__,"cljs.core/PersistentVector");
});

cljs.core.__GT_PersistentVector = (function __GT_PersistentVector(meta,cnt,shift,root,tail,__hash){
return (new cljs.core.PersistentVector(meta,cnt,shift,root,tail,__hash));
});

cljs.core.PersistentVector.EMPTY_NODE = (new cljs.core.VectorNode(null,[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null]));
cljs.core.PersistentVector.EMPTY = (new cljs.core.PersistentVector(null,(0),(5),cljs.core.PersistentVector.EMPTY_NODE,[],(0)));
cljs.core.PersistentVector.fromArray = (function (xs,no_clone){
var l = xs.length;
var xs__$1 = ((no_clone)?xs:cljs.core.aclone(xs));
if((l < (32))){
return (new cljs.core.PersistentVector(null,l,(5),cljs.core.PersistentVector.EMPTY_NODE,xs__$1,null));
} else {
var node = xs__$1.slice((0),(32));
var v = (new cljs.core.PersistentVector(null,(32),(5),cljs.core.PersistentVector.EMPTY_NODE,node,null));
var i = (32);
var out = v.cljs$core$IEditableCollection$_as_transient$arity$1(null);
while(true){
if((i < l)){
var G__35618 = (i + (1));
var G__35619 = cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$2(out,(xs__$1[i]));
i = G__35618;
out = G__35619;
continue;
} else {
return cljs.core.persistent_BANG_(out);
}
break;
}
}
});
(cljs.core.PersistentVector.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__25250__auto__ = this;
return cljs.core.es6_iterator(this__25250__auto__);
}));
cljs.core.vec = (function vec(coll){
return cljs.core._persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj_BANG_,cljs.core._as_transient(cljs.core.PersistentVector.EMPTY),coll));
});
/**
* @param {...*} var_args
*/
cljs.core.vector = (function() { 
var vector__delegate = function (args){
if(((args instanceof cljs.core.IndexedSeq)) && ((args.i === (0)))){
return cljs.core.PersistentVector.fromArray(args.arr,true);
} else {
return cljs.core.vec(args);
}
};
var vector = function (var_args){
var args = null;
if (arguments.length > 0) {
var G__35620__i = 0, G__35620__a = new Array(arguments.length -  0);
while (G__35620__i < G__35620__a.length) {G__35620__a[G__35620__i] = arguments[G__35620__i + 0]; ++G__35620__i;}
  args = new cljs.core.IndexedSeq(G__35620__a,0);
} 
return vector__delegate.call(this,args);};
vector.cljs$lang$maxFixedArity = 0;
vector.cljs$lang$applyTo = (function (arglist__35621){
var args = cljs.core.seq(arglist__35621);
return vector__delegate(args);
});
vector.cljs$core$IFn$_invoke$arity$variadic = vector__delegate;
return vector;
})()
;

/**
* @constructor
*/
cljs.core.ChunkedSeq = (function (vec,node,i,off,meta,__hash){
this.vec = vec;
this.node = node;
this.i = i;
this.off = off;
this.meta = meta;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 32375020;
this.cljs$lang$protocol_mask$partition1$ = 1536;
})
cljs.core.ChunkedSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.ChunkedSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.ChunkedSeq.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if(((self__.off + (1)) < self__.node.length)){
var s = (function (){var G__35622 = self__.vec;
var G__35623 = self__.node;
var G__35624 = self__.i;
var G__35625 = (self__.off + (1));
return (cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__35622,G__35623,G__35624,G__35625) : cljs.core.chunked_seq.call(null,G__35622,G__35623,G__35624,G__35625));
})();
if((s == null)){
return null;
} else {
return s;
}
} else {
return cljs.core._chunked_next(coll__$1);
}
});

cljs.core.ChunkedSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__24693__auto__ = self__.__hash;
if(!((h__24693__auto__ == null))){
return h__24693__auto__;
} else {
var h__24693__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__24693__auto____$1;

return h__24693__auto____$1;
}
});

cljs.core.ChunkedSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.PersistentVector.EMPTY,self__.meta);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2((function (){var G__35626 = self__.vec;
var G__35627 = (self__.i + self__.off);
var G__35628 = cljs.core.count(self__.vec);
return (cljs.core.subvec.cljs$core$IFn$_invoke$arity$3 ? cljs.core.subvec.cljs$core$IFn$_invoke$arity$3(G__35626,G__35627,G__35628) : cljs.core.subvec.call(null,G__35626,G__35627,G__35628));
})(),f);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3((function (){var G__35629 = self__.vec;
var G__35630 = (self__.i + self__.off);
var G__35631 = cljs.core.count(self__.vec);
return (cljs.core.subvec.cljs$core$IFn$_invoke$arity$3 ? cljs.core.subvec.cljs$core$IFn$_invoke$arity$3(G__35629,G__35630,G__35631) : cljs.core.subvec.call(null,G__35629,G__35630,G__35631));
})(),f,start);
});

cljs.core.ChunkedSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (self__.node[self__.off]);
});

cljs.core.ChunkedSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if(((self__.off + (1)) < self__.node.length)){
var s = (function (){var G__35632 = self__.vec;
var G__35633 = self__.node;
var G__35634 = self__.i;
var G__35635 = (self__.off + (1));
return (cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__35632,G__35633,G__35634,G__35635) : cljs.core.chunked_seq.call(null,G__35632,G__35633,G__35634,G__35635));
})();
if((s == null)){
return cljs.core.List.EMPTY;
} else {
return s;
}
} else {
return cljs.core._chunked_rest(coll__$1);
}
});

cljs.core.ChunkedSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedSeq$_chunked_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.array_chunk.cljs$core$IFn$_invoke$arity$2(self__.node,self__.off);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedSeq$_chunked_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var end = (self__.i + self__.node.length);
if((end < cljs.core._count(self__.vec))){
var G__35636 = self__.vec;
var G__35637 = cljs.core.unchecked_array_for(self__.vec,end);
var G__35638 = end;
var G__35639 = (0);
return (cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__35636,G__35637,G__35638,G__35639) : cljs.core.chunked_seq.call(null,G__35636,G__35637,G__35638,G__35639));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.ChunkedSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,m){
var self__ = this;
var coll__$1 = this;
var G__35640 = self__.vec;
var G__35641 = self__.node;
var G__35642 = self__.i;
var G__35643 = self__.off;
var G__35644 = m;
return (cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$5 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$5(G__35640,G__35641,G__35642,G__35643,G__35644) : cljs.core.chunked_seq.call(null,G__35640,G__35641,G__35642,G__35643,G__35644));
});

cljs.core.ChunkedSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedNext$_chunked_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var end = (self__.i + self__.node.length);
if((end < cljs.core._count(self__.vec))){
var G__35645 = self__.vec;
var G__35646 = cljs.core.unchecked_array_for(self__.vec,end);
var G__35647 = end;
var G__35648 = (0);
return (cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__35645,G__35646,G__35647,G__35648) : cljs.core.chunked_seq.call(null,G__35645,G__35646,G__35647,G__35648));
} else {
return null;
}
});

cljs.core.ChunkedSeq.cljs$lang$type = true;

cljs.core.ChunkedSeq.cljs$lang$ctorStr = "cljs.core/ChunkedSeq";

cljs.core.ChunkedSeq.cljs$lang$ctorPrWriter = (function (this__24859__auto__,writer__24860__auto__,opt__24861__auto__){
return cljs.core._write(writer__24860__auto__,"cljs.core/ChunkedSeq");
});

cljs.core.__GT_ChunkedSeq = (function __GT_ChunkedSeq(vec,node,i,off,meta,__hash){
return (new cljs.core.ChunkedSeq(vec,node,i,off,meta,__hash));
});

(cljs.core.ChunkedSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__25250__auto__ = this;
return cljs.core.es6_iterator(this__25250__auto__);
}));
cljs.core.chunked_seq = (function() {
var chunked_seq = null;
var chunked_seq__3 = (function (vec,i,off){
return (new cljs.core.ChunkedSeq(vec,cljs.core.array_for(vec,i),i,off,null,null));
});
var chunked_seq__4 = (function (vec,node,i,off){
return (new cljs.core.ChunkedSeq(vec,node,i,off,null,null));
});
var chunked_seq__5 = (function (vec,node,i,off,meta){
return (new cljs.core.ChunkedSeq(vec,node,i,off,meta,null));
});
chunked_seq = function(vec,node,i,off,meta){
switch(arguments.length){
case 3:
return chunked_seq__3.call(this,vec,node,i);
case 4:
return chunked_seq__4.call(this,vec,node,i,off);
case 5:
return chunked_seq__5.call(this,vec,node,i,off,meta);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
chunked_seq.cljs$core$IFn$_invoke$arity$3 = chunked_seq__3;
chunked_seq.cljs$core$IFn$_invoke$arity$4 = chunked_seq__4;
chunked_seq.cljs$core$IFn$_invoke$arity$5 = chunked_seq__5;
return chunked_seq;
})()
;

/**
* @constructor
*/
cljs.core.Subvec = (function (meta,v,start,end,__hash){
this.meta = meta;
this.v = v;
this.start = start;
this.end = end;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 166617887;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.Subvec.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.Subvec.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.Subvec.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.Subvec.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
if(typeof k === 'number'){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(coll__$1,k,not_found);
} else {
return not_found;
}
});

cljs.core.Subvec.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (coll,n){
var self__ = this;
var coll__$1 = this;
if(((n < (0))) || ((self__.end <= (self__.start + n)))){
return cljs.core.vector_index_out_of_bounds(n,(self__.end - self__.start));
} else {
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.v,(self__.start + n));
}
});

cljs.core.Subvec.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (coll,n,not_found){
var self__ = this;
var coll__$1 = this;
if(((n < (0))) || ((self__.end <= (self__.start + n)))){
return not_found;
} else {
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(self__.v,(self__.start + n),not_found);
}
});

cljs.core.Subvec.prototype.cljs$core$IVector$_assoc_n$arity$3 = (function (coll,n,val){
var self__ = this;
var coll__$1 = this;
var v_pos = (self__.start + n);
var G__35650 = self__.meta;
var G__35651 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.v,v_pos,val);
var G__35652 = self__.start;
var G__35653 = (function (){var x__24589__auto__ = self__.end;
var y__24590__auto__ = (v_pos + (1));
return ((x__24589__auto__ > y__24590__auto__) ? x__24589__auto__ : y__24590__auto__);
})();
var G__35654 = null;
return (cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5 ? cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5(G__35650,G__35651,G__35652,G__35653,G__35654) : cljs.core.build_subvec.call(null,G__35650,G__35651,G__35652,G__35653,G__35654));
});

cljs.core.Subvec.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.Subvec.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.Subvec(self__.meta,self__.v,self__.start,self__.end,self__.__hash));
});

cljs.core.Subvec.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (self__.end - self__.start);
});

cljs.core.Subvec.prototype.cljs$core$IStack$_peek$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.v,(self__.end - (1)));
});

cljs.core.Subvec.prototype.cljs$core$IStack$_pop$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.start === self__.end)){
throw (new Error("Can't pop empty vector"));
} else {
var G__35655 = self__.meta;
var G__35656 = self__.v;
var G__35657 = self__.start;
var G__35658 = (self__.end - (1));
var G__35659 = null;
return (cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5 ? cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5(G__35655,G__35656,G__35657,G__35658,G__35659) : cljs.core.build_subvec.call(null,G__35655,G__35656,G__35657,G__35658,G__35659));
}
});

cljs.core.Subvec.prototype.cljs$core$IReversible$_rseq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if(!((self__.start === self__.end))){
return (new cljs.core.RSeq(coll__$1,((self__.end - self__.start) - (1)),null));
} else {
return null;
}
});

cljs.core.Subvec.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__24693__auto__ = self__.__hash;
if(!((h__24693__auto__ == null))){
return h__24693__auto__;
} else {
var h__24693__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__24693__auto____$1;

return h__24693__auto____$1;
}
});

cljs.core.Subvec.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.Subvec.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.PersistentVector.EMPTY,self__.meta);
});

cljs.core.Subvec.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(coll__$1,f);
});

cljs.core.Subvec.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start__$1){
var self__ = this;
var coll__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3(coll__$1,f,start__$1);
});

cljs.core.Subvec.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (coll,key,val){
var self__ = this;
var coll__$1 = this;
if(typeof key === 'number'){
return cljs.core._assoc_n(coll__$1,key,val);
} else {
throw (new Error("Subvec's key for assoc must be a number."));
}
});

cljs.core.Subvec.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var subvec_seq = ((function (coll__$1){
return (function subvec_seq(i){
if((i === self__.end)){
return null;
} else {
return cljs.core.cons(cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.v,i),(new cljs.core.LazySeq(null,((function (coll__$1){
return (function (){
return subvec_seq((i + (1)));
});})(coll__$1))
,null,null)));
}
});})(coll__$1))
;
return subvec_seq(self__.start);
});

cljs.core.Subvec.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
var G__35661 = meta__$1;
var G__35662 = self__.v;
var G__35663 = self__.start;
var G__35664 = self__.end;
var G__35665 = self__.__hash;
return (cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5 ? cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5(G__35661,G__35662,G__35663,G__35664,G__35665) : cljs.core.build_subvec.call(null,G__35661,G__35662,G__35663,G__35664,G__35665));
});

cljs.core.Subvec.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
var G__35666 = self__.meta;
var G__35667 = cljs.core._assoc_n(self__.v,self__.end,o);
var G__35668 = self__.start;
var G__35669 = (self__.end + (1));
var G__35670 = null;
return (cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5 ? cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5(G__35666,G__35667,G__35668,G__35669,G__35670) : cljs.core.build_subvec.call(null,G__35666,G__35667,G__35668,G__35669,G__35670));
});

cljs.core.Subvec.prototype.call = (function() {
var G__35671 = null;
var G__35671__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$IIndexed$_nth$arity$2(null,k);
});
var G__35671__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$IIndexed$_nth$arity$3(null,k,not_found);
});
G__35671 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__35671__2.call(this,self__,k);
case 3:
return G__35671__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__35671.cljs$core$IFn$_invoke$arity$2 = G__35671__2;
G__35671.cljs$core$IFn$_invoke$arity$3 = G__35671__3;
return G__35671;
})()
;

cljs.core.Subvec.prototype.apply = (function (self__,args35649){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args35649)));
});

cljs.core.Subvec.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$IIndexed$_nth$arity$2(null,k);
});

cljs.core.Subvec.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$IIndexed$_nth$arity$3(null,k,not_found);
});

cljs.core.Subvec.cljs$lang$type = true;

cljs.core.Subvec.cljs$lang$ctorStr = "cljs.core/Subvec";

cljs.core.Subvec.cljs$lang$ctorPrWriter = (function (this__24859__auto__,writer__24860__auto__,opt__24861__auto__){
return cljs.core._write(writer__24860__auto__,"cljs.core/Subvec");
});

cljs.core.__GT_Subvec = (function __GT_Subvec(meta,v,start,end,__hash){
return (new cljs.core.Subvec(meta,v,start,end,__hash));
});

(cljs.core.Subvec.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__25250__auto__ = this;
return cljs.core.es6_iterator(this__25250__auto__);
}));
cljs.core.build_subvec = (function build_subvec(meta,v,start,end,__hash){
while(true){
if((v instanceof cljs.core.Subvec)){
var G__35672 = meta;
var G__35673 = v.v;
var G__35674 = (v.start + start);
var G__35675 = (v.start + end);
var G__35676 = __hash;
meta = G__35672;
v = G__35673;
start = G__35674;
end = G__35675;
__hash = G__35676;
continue;
} else {
var c = cljs.core.count(v);
if(((start < (0))) || ((end < (0))) || ((start > c)) || ((end > c))){
throw (new Error("Index out of bounds"));
} else {
}

return (new cljs.core.Subvec(meta,v,start,end,__hash));
}
break;
}
});
/**
* Returns a persistent vector of the items in vector from
* start (inclusive) to end (exclusive).  If end is not supplied,
* defaults to (count vector). This operation is O(1) and very fast, as
* the resulting vector shares structure with the original and no
* trimming is done.
*/
cljs.core.subvec = (function() {
var subvec = null;
var subvec__2 = (function (v,start){
return subvec.cljs$core$IFn$_invoke$arity$3(v,start,cljs.core.count(v));
});
var subvec__3 = (function (v,start,end){
return cljs.core.build_subvec(null,v,start,end,null);
});
subvec = function(v,start,end){
switch(arguments.length){
case 2:
return subvec__2.call(this,v,start);
case 3:
return subvec__3.call(this,v,start,end);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
subvec.cljs$core$IFn$_invoke$arity$2 = subvec__2;
subvec.cljs$core$IFn$_invoke$arity$3 = subvec__3;
return subvec;
})()
;
cljs.core.tv_ensure_editable = (function tv_ensure_editable(edit,node){
if((edit === node.edit)){
return node;
} else {
return (new cljs.core.VectorNode(edit,cljs.core.aclone(node.arr)));
}
});
cljs.core.tv_editable_root = (function tv_editable_root(node){
return (new cljs.core.VectorNode((function (){var obj35683 = {};
return obj35683;
})(),cljs.core.aclone(node.arr)));
});
cljs.core.tv_editable_tail = (function tv_editable_tail(tl){
var ret = [null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null];
cljs.core.array_copy(tl,(0),ret,(0),tl.length);

return ret;
});
cljs.core.tv_push_tail = (function tv_push_tail(tv,level,parent,tail_node){
var ret = cljs.core.tv_ensure_editable(tv.root.edit,parent);
var subidx = (((tv.cnt - (1)) >>> level) & (31));
cljs.core.pv_aset(ret,subidx,(((level === (5)))?tail_node:(function (){var child = cljs.core.pv_aget(ret,subidx);
if(!((child == null))){
return tv_push_tail(tv,(level - (5)),child,tail_node);
} else {
return cljs.core.new_path(tv.root.edit,(level - (5)),tail_node);
}
})()));

return ret;
});
cljs.core.tv_pop_tail = (function tv_pop_tail(tv,level,node){
var node__$1 = cljs.core.tv_ensure_editable(tv.root.edit,node);
var subidx = (((tv.cnt - (2)) >>> level) & (31));
if((level > (5))){
var new_child = tv_pop_tail(tv,(level - (5)),cljs.core.pv_aget(node__$1,subidx));
if(((new_child == null)) && ((subidx === (0)))){
return null;
} else {
cljs.core.pv_aset(node__$1,subidx,new_child);

return node__$1;
}
} else {
if((subidx === (0))){
return null;
} else {
cljs.core.pv_aset(node__$1,subidx,null);

return node__$1;

}
}
});
cljs.core.unchecked_editable_array_for = (function unchecked_editable_array_for(tv,i){
if((i >= cljs.core.tail_off(tv))){
return tv.tail;
} else {
var root = tv.root;
var node = root;
var level = tv.shift;
while(true){
if((level > (0))){
var G__35691 = cljs.core.tv_ensure_editable(root.edit,cljs.core.pv_aget(node,((i >>> level) & (31))));
var G__35692 = (level - (5));
node = G__35691;
level = G__35692;
continue;
} else {
return node.arr;
}
break;
}
}
});

/**
* @constructor
*/
cljs.core.TransientVector = (function (cnt,shift,root,tail){
this.cnt = cnt;
this.shift = shift;
this.root = root;
this.tail = tail;
this.cljs$lang$protocol_mask$partition0$ = 275;
this.cljs$lang$protocol_mask$partition1$ = 88;
})
cljs.core.TransientVector.prototype.call = (function() {
var G__35696 = null;
var G__35696__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__35696__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__35696 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__35696__2.call(this,self__,k);
case 3:
return G__35696__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__35696.cljs$core$IFn$_invoke$arity$2 = G__35696__2;
G__35696.cljs$core$IFn$_invoke$arity$3 = G__35696__3;
return G__35696;
})()
;

cljs.core.TransientVector.prototype.apply = (function (self__,args35693){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args35693)));
});

cljs.core.TransientVector.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.TransientVector.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.TransientVector.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.TransientVector.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
if(typeof k === 'number'){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(coll__$1,k,not_found);
} else {
return not_found;
}
});

cljs.core.TransientVector.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (coll,n){
var self__ = this;
var coll__$1 = this;
if(self__.root.edit){
return (cljs.core.array_for(coll__$1,n)[(n & (31))]);
} else {
throw (new Error("nth after persistent!"));
}
});

cljs.core.TransientVector.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (coll,n,not_found){
var self__ = this;
var coll__$1 = this;
if((((0) <= n)) && ((n < self__.cnt))){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll__$1,n);
} else {
return not_found;
}
});

cljs.core.TransientVector.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if(self__.root.edit){
return self__.cnt;
} else {
throw (new Error("count after persistent!"));
}
});

cljs.core.TransientVector.prototype.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3 = (function (tcoll,n,val){
var self__ = this;
var tcoll__$1 = this;
if(self__.root.edit){
if((((0) <= n)) && ((n < self__.cnt))){
if((cljs.core.tail_off(tcoll__$1) <= n)){
(self__.tail[(n & (31))] = val);

return tcoll__$1;
} else {
var new_root = ((function (tcoll__$1){
return (function go(level,node){
var node__$1 = cljs.core.tv_ensure_editable(self__.root.edit,node);
if((level === (0))){
cljs.core.pv_aset(node__$1,(n & (31)),val);

return node__$1;
} else {
var subidx = ((n >>> level) & (31));
cljs.core.pv_aset(node__$1,subidx,go((level - (5)),cljs.core.pv_aget(node__$1,subidx)));

return node__$1;
}
});})(tcoll__$1))
.call(null,self__.shift,self__.root);
self__.root = new_root;

return tcoll__$1;
}
} else {
if((n === self__.cnt)){
return cljs.core._conj_BANG_(tcoll__$1,val);
} else {
throw (new Error([cljs.core.str("Index "),cljs.core.str(n),cljs.core.str(" out of bounds for TransientVector of length"),cljs.core.str(self__.cnt)].join('')));

}
}
} else {
throw (new Error("assoc! after persistent!"));
}
});

cljs.core.TransientVector.prototype.cljs$core$ITransientVector$_pop_BANG_$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
if(self__.root.edit){
if((self__.cnt === (0))){
throw (new Error("Can't pop empty vector"));
} else {
if(((1) === self__.cnt)){
self__.cnt = (0);

return tcoll__$1;
} else {
if((((self__.cnt - (1)) & (31)) > (0))){
self__.cnt = (self__.cnt - (1));

return tcoll__$1;
} else {
var new_tail = cljs.core.unchecked_editable_array_for(tcoll__$1,(self__.cnt - (2)));
var new_root = (function (){var nr = cljs.core.tv_pop_tail(tcoll__$1,self__.shift,self__.root);
if(!((nr == null))){
return nr;
} else {
return (new cljs.core.VectorNode(self__.root.edit,[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null]));
}
})();
if((((5) < self__.shift)) && ((cljs.core.pv_aget(new_root,(1)) == null))){
var new_root__$1 = cljs.core.tv_ensure_editable(self__.root.edit,cljs.core.pv_aget(new_root,(0)));
self__.root = new_root__$1;

self__.shift = (self__.shift - (5));

self__.cnt = (self__.cnt - (1));

self__.tail = new_tail;

return tcoll__$1;
} else {
self__.root = new_root;

self__.cnt = (self__.cnt - (1));

self__.tail = new_tail;

return tcoll__$1;
}

}
}
}
} else {
throw (new Error("pop! after persistent!"));
}
});

cljs.core.TransientVector.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = (function (tcoll,key,val){
var self__ = this;
var tcoll__$1 = this;
if(typeof key === 'number'){
return cljs.core._assoc_n_BANG_(tcoll__$1,key,val);
} else {
throw (new Error("TransientVector's key for assoc! must be a number."));
}
});

cljs.core.TransientVector.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = (function (tcoll,o){
var self__ = this;
var tcoll__$1 = this;
if(self__.root.edit){
if(((self__.cnt - cljs.core.tail_off(tcoll__$1)) < (32))){
(self__.tail[(self__.cnt & (31))] = o);

self__.cnt = (self__.cnt + (1));

return tcoll__$1;
} else {
var tail_node = (new cljs.core.VectorNode(self__.root.edit,self__.tail));
var new_tail = [null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null];
(new_tail[(0)] = o);

self__.tail = new_tail;

if(((self__.cnt >>> (5)) > ((1) << self__.shift))){
var new_root_array = [null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null];
var new_shift = (self__.shift + (5));
(new_root_array[(0)] = self__.root);

(new_root_array[(1)] = cljs.core.new_path(self__.root.edit,self__.shift,tail_node));

self__.root = (new cljs.core.VectorNode(self__.root.edit,new_root_array));

self__.shift = new_shift;

self__.cnt = (self__.cnt + (1));

return tcoll__$1;
} else {
var new_root = cljs.core.tv_push_tail(tcoll__$1,self__.shift,self__.root,tail_node);
self__.root = new_root;

self__.cnt = (self__.cnt + (1));

return tcoll__$1;
}
}
} else {
throw (new Error("conj! after persistent!"));
}
});

cljs.core.TransientVector.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
if(self__.root.edit){
self__.root.edit = null;

var len = (self__.cnt - cljs.core.tail_off(tcoll__$1));
var trimmed_tail = (new Array(len));
cljs.core.array_copy(self__.tail,(0),trimmed_tail,(0),len);

return (new cljs.core.PersistentVector(null,self__.cnt,self__.shift,self__.root,trimmed_tail,null));
} else {
throw (new Error("persistent! called twice"));
}
});

cljs.core.TransientVector.cljs$lang$type = true;

cljs.core.TransientVector.cljs$lang$ctorStr = "cljs.core/TransientVector";

cljs.core.TransientVector.cljs$lang$ctorPrWriter = (function (this__24859__auto__,writer__24860__auto__,opt__24861__auto__){
return cljs.core._write(writer__24860__auto__,"cljs.core/TransientVector");
});

cljs.core.__GT_TransientVector = (function __GT_TransientVector(cnt,shift,root,tail){
return (new cljs.core.TransientVector(cnt,shift,root,tail));
});


/**
* @constructor
*/
cljs.core.PersistentQueueSeq = (function (meta,front,rear,__hash){
this.meta = meta;
this.front = front;
this.rear = rear;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 31850572;
})
cljs.core.PersistentQueueSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentQueueSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__24693__auto__ = self__.__hash;
if(!((h__24693__auto__ == null))){
return h__24693__auto__;
} else {
var h__24693__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__24693__auto____$1;

return h__24693__auto____$1;
}
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.first(self__.front);
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var temp__4124__auto__ = cljs.core.next(self__.front);
if(temp__4124__auto__){
var f1 = temp__4124__auto__;
return (new cljs.core.PersistentQueueSeq(self__.meta,f1,self__.rear,null));
} else {
if((self__.rear == null)){
return cljs.core._empty(coll__$1);
} else {
return (new cljs.core.PersistentQueueSeq(self__.meta,self__.rear,null,null));
}
}
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentQueueSeq(meta__$1,self__.front,self__.rear,self__.__hash));
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.PersistentQueueSeq.cljs$lang$type = true;

cljs.core.PersistentQueueSeq.cljs$lang$ctorStr = "cljs.core/PersistentQueueSeq";

cljs.core.PersistentQueueSeq.cljs$lang$ctorPrWriter = (function (this__24859__auto__,writer__24860__auto__,opt__24861__auto__){
return cljs.core._write(writer__24860__auto__,"cljs.core/PersistentQueueSeq");
});

cljs.core.__GT_PersistentQueueSeq = (function __GT_PersistentQueueSeq(meta,front,rear,__hash){
return (new cljs.core.PersistentQueueSeq(meta,front,rear,__hash));
});

(cljs.core.PersistentQueueSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__25250__auto__ = this;
return cljs.core.es6_iterator(this__25250__auto__);
}));

/**
* @constructor
*/
cljs.core.PersistentQueue = (function (meta,count,front,rear,__hash){
this.meta = meta;
this.count = count;
this.front = front;
this.rear = rear;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 31858766;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.PersistentQueue.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentQueue.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentQueue.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentQueue.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentQueue(self__.meta,self__.count,self__.front,self__.rear,self__.__hash));
});

cljs.core.PersistentQueue.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.count;
});

cljs.core.PersistentQueue.prototype.cljs$core$IStack$_peek$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.first(self__.front);
});

cljs.core.PersistentQueue.prototype.cljs$core$IStack$_pop$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if(cljs.core.truth_(self__.front)){
var temp__4124__auto__ = cljs.core.next(self__.front);
if(temp__4124__auto__){
var f1 = temp__4124__auto__;
return (new cljs.core.PersistentQueue(self__.meta,(self__.count - (1)),f1,self__.rear,null));
} else {
return (new cljs.core.PersistentQueue(self__.meta,(self__.count - (1)),cljs.core.seq(self__.rear),cljs.core.PersistentVector.EMPTY,null));
}
} else {
return coll__$1;
}
});

cljs.core.PersistentQueue.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__24693__auto__ = self__.__hash;
if(!((h__24693__auto__ == null))){
return h__24693__auto__;
} else {
var h__24693__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__24693__auto____$1;

return h__24693__auto____$1;
}
});

cljs.core.PersistentQueue.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.PersistentQueue.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.PersistentQueue.EMPTY,self__.meta);
});

cljs.core.PersistentQueue.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.first(self__.front);
});

cljs.core.PersistentQueue.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.rest(cljs.core.seq(coll__$1));
});

cljs.core.PersistentQueue.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var rear__$1 = cljs.core.seq(self__.rear);
if(cljs.core.truth_((function (){var or__24272__auto__ = self__.front;
if(cljs.core.truth_(or__24272__auto__)){
return or__24272__auto__;
} else {
return rear__$1;
}
})())){
return (new cljs.core.PersistentQueueSeq(null,self__.front,cljs.core.seq(rear__$1),null));
} else {
return null;
}
});

cljs.core.PersistentQueue.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentQueue(meta__$1,self__.count,self__.front,self__.rear,self__.__hash));
});

cljs.core.PersistentQueue.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
if(cljs.core.truth_(self__.front)){
return (new cljs.core.PersistentQueue(self__.meta,(self__.count + (1)),self__.front,cljs.core.conj.cljs$core$IFn$_invoke$arity$2((function (){var or__24272__auto__ = self__.rear;
if(cljs.core.truth_(or__24272__auto__)){
return or__24272__auto__;
} else {
return cljs.core.PersistentVector.EMPTY;
}
})(),o),null));
} else {
return (new cljs.core.PersistentQueue(self__.meta,(self__.count + (1)),cljs.core.conj.cljs$core$IFn$_invoke$arity$2(self__.front,o),cljs.core.PersistentVector.EMPTY,null));
}
});

cljs.core.PersistentQueue.cljs$lang$type = true;

cljs.core.PersistentQueue.cljs$lang$ctorStr = "cljs.core/PersistentQueue";

cljs.core.PersistentQueue.cljs$lang$ctorPrWriter = (function (this__24859__auto__,writer__24860__auto__,opt__24861__auto__){
return cljs.core._write(writer__24860__auto__,"cljs.core/PersistentQueue");
});

cljs.core.__GT_PersistentQueue = (function __GT_PersistentQueue(meta,count,front,rear,__hash){
return (new cljs.core.PersistentQueue(meta,count,front,rear,__hash));
});

cljs.core.PersistentQueue.EMPTY = (new cljs.core.PersistentQueue(null,(0),null,cljs.core.PersistentVector.EMPTY,(0)));
(cljs.core.PersistentQueue.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__25250__auto__ = this;
return cljs.core.es6_iterator(this__25250__auto__);
}));

/**
* @constructor
*/
cljs.core.NeverEquiv = (function (){
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 2097152;
})
cljs.core.NeverEquiv.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (o,other){
var self__ = this;
var o__$1 = this;
return false;
});

cljs.core.NeverEquiv.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.NeverEquiv.cljs$lang$type = true;

cljs.core.NeverEquiv.cljs$lang$ctorStr = "cljs.core/NeverEquiv";

cljs.core.NeverEquiv.cljs$lang$ctorPrWriter = (function (this__24859__auto__,writer__24860__auto__,opt__24861__auto__){
return cljs.core._write(writer__24860__auto__,"cljs.core/NeverEquiv");
});

cljs.core.__GT_NeverEquiv = (function __GT_NeverEquiv(){
return (new cljs.core.NeverEquiv());
});

cljs.core.never_equiv = (new cljs.core.NeverEquiv());
/**
* Assumes y is a map. Returns true if x equals y, otherwise returns
* false.
*/
cljs.core.equiv_map = (function equiv_map(x,y){
return cljs.core.boolean$(((cljs.core.map_QMARK_(y))?(((cljs.core.count(x) === cljs.core.count(y)))?cljs.core.every_QMARK_(cljs.core.identity,cljs.core.map.cljs$core$IFn$_invoke$arity$2((function (xkv){
return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$3(y,cljs.core.first(xkv),cljs.core.never_equiv),cljs.core.second(xkv));
}),x)):null):null));
});
cljs.core.scan_array = (function scan_array(incr,k,array){
var len = array.length;
var i = (0);
while(true){
if((i < len)){
if((k === (array[i]))){
return i;
} else {
var G__35697 = (i + incr);
i = G__35697;
continue;
}
} else {
return null;
}
break;
}
});
cljs.core.obj_map_compare_keys = (function obj_map_compare_keys(a,b){
var a__$1 = cljs.core.hash(a);
var b__$1 = cljs.core.hash(b);
if((a__$1 < b__$1)){
return (-1);
} else {
if((a__$1 > b__$1)){
return (1);
} else {
return (0);

}
}
});
cljs.core.obj_map__GT_hash_map = (function obj_map__GT_hash_map(m,k,v){
var ks = m.keys;
var len = ks.length;
var so = m.strobj;
var mm = cljs.core.meta(m);
var i = (0);
var out = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
while(true){
if((i < len)){
var k__$1 = (ks[i]);
var G__35698 = (i + (1));
var G__35699 = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(out,k__$1,(so[k__$1]));
i = G__35698;
out = G__35699;
continue;
} else {
return cljs.core.with_meta(cljs.core.persistent_BANG_(cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(out,k,v)),mm);
}
break;
}
});
cljs.core.obj_clone = (function obj_clone(obj,ks){
var new_obj = (function (){var obj35703 = {};
return obj35703;
})();
var l = ks.length;
var i_35704 = (0);
while(true){
if((i_35704 < l)){
var k_35705 = (ks[i_35704]);
(new_obj[k_35705] = (obj[k_35705]));

var G__35706 = (i_35704 + (1));
i_35704 = G__35706;
continue;
} else {
}
break;
}

return new_obj;
});

/**
* @constructor
*/
cljs.core.ObjMap = (function (meta,keys,strobj,update_count,__hash){
this.meta = meta;
this.keys = keys;
this.strobj = strobj;
this.update_count = update_count;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 16123663;
this.cljs$lang$protocol_mask$partition1$ = 4;
})
cljs.core.ObjMap.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.ObjMap.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.ObjMap.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.ObjMap.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
if(cljs.core.truth_((function (){var and__24260__auto__ = (function (){var G__35710 = k;
return goog.isString(G__35710);
})();
if(cljs.core.truth_(and__24260__auto__)){
return !((cljs.core.scan_array((1),k,self__.keys) == null));
} else {
return and__24260__auto__;
}
})())){
return (self__.strobj[k]);
} else {
return not_found;
}
});

cljs.core.ObjMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = (function (coll,f,init){
var self__ = this;
var coll__$1 = this;
var len = self__.keys.length;
var keys__$1 = self__.keys.sort(cljs.core.obj_map_compare_keys);
var init__$1 = init;
while(true){
if(cljs.core.seq(keys__$1)){
var k = cljs.core.first(keys__$1);
var init__$2 = (function (){var G__35711 = init__$1;
var G__35712 = k;
var G__35713 = (self__.strobj[k]);
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__35711,G__35712,G__35713) : f.call(null,G__35711,G__35712,G__35713));
})();
if(cljs.core.reduced_QMARK_(init__$2)){
var G__35714 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__35714) : cljs.core.deref.call(null,G__35714));
} else {
var G__35720 = cljs.core.rest(keys__$1);
var G__35721 = init__$2;
keys__$1 = G__35720;
init__$1 = G__35721;
continue;
}
} else {
return init__$1;
}
break;
}
});

cljs.core.ObjMap.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.ObjMap.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.keys.length;
});

cljs.core.ObjMap.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__24693__auto__ = self__.__hash;
if(!((h__24693__auto__ == null))){
return h__24693__auto__;
} else {
var h__24693__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
self__.__hash = h__24693__auto____$1;

return h__24693__auto____$1;
}
});

cljs.core.ObjMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_map(coll__$1,other);
});

cljs.core.ObjMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.transient$(cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentHashMap.EMPTY,coll__$1));
});

cljs.core.ObjMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.ObjMap.EMPTY,self__.meta);
});

cljs.core.ObjMap.prototype.cljs$core$IMap$_dissoc$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
if(cljs.core.truth_((function (){var and__24260__auto__ = (function (){var G__35716 = k;
return goog.isString(G__35716);
})();
if(cljs.core.truth_(and__24260__auto__)){
return !((cljs.core.scan_array((1),k,self__.keys) == null));
} else {
return and__24260__auto__;
}
})())){
var new_keys = cljs.core.aclone(self__.keys);
var new_strobj = cljs.core.obj_clone(self__.strobj,self__.keys);
new_keys.splice(cljs.core.scan_array((1),k,new_keys),(1));

delete new_strobj[k];

return (new cljs.core.ObjMap(self__.meta,new_keys,new_strobj,(self__.update_count + (1)),null));
} else {
return coll__$1;
}
});

cljs.core.ObjMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (coll,k,v){
var self__ = this;
var coll__$1 = this;
if(cljs.core.truth_((function (){var G__35717 = k;
return goog.isString(G__35717);
})())){
if(((self__.update_count > cljs.core.ObjMap.HASHMAP_THRESHOLD)) || ((self__.keys.length >= cljs.core.ObjMap.HASHMAP_THRESHOLD))){
return cljs.core.obj_map__GT_hash_map(coll__$1,k,v);
} else {
if(!((cljs.core.scan_array((1),k,self__.keys) == null))){
var new_strobj = cljs.core.obj_clone(self__.strobj,self__.keys);
(new_strobj[k] = v);

return (new cljs.core.ObjMap(self__.meta,self__.keys,new_strobj,(self__.update_count + (1)),null));
} else {
var new_strobj = cljs.core.obj_clone(self__.strobj,self__.keys);
var new_keys = cljs.core.aclone(self__.keys);
(new_strobj[k] = v);

new_keys.push(k);

return (new cljs.core.ObjMap(self__.meta,new_keys,new_strobj,(self__.update_count + (1)),null));
}
}
} else {
return cljs.core.obj_map__GT_hash_map(coll__$1,k,v);
}
});

cljs.core.ObjMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
if(cljs.core.truth_((function (){var and__24260__auto__ = (function (){var G__35719 = k;
return goog.isString(G__35719);
})();
if(cljs.core.truth_(and__24260__auto__)){
return !((cljs.core.scan_array((1),k,self__.keys) == null));
} else {
return and__24260__auto__;
}
})())){
return true;
} else {
return false;
}
});

cljs.core.ObjMap.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.keys.length > (0))){
return cljs.core.map.cljs$core$IFn$_invoke$arity$2(((function (coll__$1){
return (function (p1__35707_SHARP_){
return (new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[p1__35707_SHARP_,(self__.strobj[p1__35707_SHARP_])],null));
});})(coll__$1))
,self__.keys.sort(cljs.core.obj_map_compare_keys));
} else {
return null;
}
});

cljs.core.ObjMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.ObjMap(meta__$1,self__.keys,self__.strobj,self__.update_count,self__.__hash));
});

cljs.core.ObjMap.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,entry){
var self__ = this;
var coll__$1 = this;
if(cljs.core.vector_QMARK_(entry)){
return cljs.core._assoc(coll__$1,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(1)));
} else {
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj,coll__$1,entry);
}
});

cljs.core.ObjMap.prototype.call = (function() {
var G__35722 = null;
var G__35722__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__35722__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__35722 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__35722__2.call(this,self__,k);
case 3:
return G__35722__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__35722.cljs$core$IFn$_invoke$arity$2 = G__35722__2;
G__35722.cljs$core$IFn$_invoke$arity$3 = G__35722__3;
return G__35722;
})()
;

cljs.core.ObjMap.prototype.apply = (function (self__,args35708){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args35708)));
});

cljs.core.ObjMap.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.ObjMap.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.ObjMap.cljs$lang$type = true;

cljs.core.ObjMap.cljs$lang$ctorStr = "cljs.core/ObjMap";

cljs.core.ObjMap.cljs$lang$ctorPrWriter = (function (this__24859__auto__,writer__24860__auto__,opt__24861__auto__){
return cljs.core._write(writer__24860__auto__,"cljs.core/ObjMap");
});

cljs.core.__GT_ObjMap = (function __GT_ObjMap(meta,keys,strobj,update_count,__hash){
return (new cljs.core.ObjMap(meta,keys,strobj,update_count,__hash));
});

cljs.core.ObjMap.EMPTY = (new cljs.core.ObjMap(null,[],(function (){var obj35724 = {};
return obj35724;
})(),(0),(0)));
cljs.core.ObjMap.HASHMAP_THRESHOLD = (8);
cljs.core.ObjMap.fromObject = (function (ks,obj){
return (new cljs.core.ObjMap(null,ks,obj,(0),null));
});

/**
* @constructor
*/
cljs.core.ES6EntriesIterator = (function (s){
this.s = s;
})
cljs.core.ES6EntriesIterator.prototype.next = (function (){
var self__ = this;
var _ = this;
if(!((self__.s == null))){
var vec__35725 = cljs.core.first(self__.s);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__35725,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__35725,(1),null);
self__.s = cljs.core.next(self__.s);

return {"done": false, "value": [k,v]};
} else {
return {"done": true, "value": null};
}
});

cljs.core.ES6EntriesIterator.cljs$lang$type = true;

cljs.core.ES6EntriesIterator.cljs$lang$ctorStr = "cljs.core/ES6EntriesIterator";

cljs.core.ES6EntriesIterator.cljs$lang$ctorPrWriter = (function (this__24859__auto__,writer__24860__auto__,opt__24861__auto__){
return cljs.core._write(writer__24860__auto__,"cljs.core/ES6EntriesIterator");
});

cljs.core.__GT_ES6EntriesIterator = (function __GT_ES6EntriesIterator(s){
return (new cljs.core.ES6EntriesIterator(s));
});

cljs.core.es6_entries_iterator = (function es6_entries_iterator(coll){
return (new cljs.core.ES6EntriesIterator(cljs.core.seq(coll)));
});

/**
* @constructor
*/
cljs.core.ES6SetEntriesIterator = (function (s){
this.s = s;
})
cljs.core.ES6SetEntriesIterator.prototype.next = (function (){
var self__ = this;
var _ = this;
if(!((self__.s == null))){
var x = cljs.core.first(self__.s);
self__.s = cljs.core.next(self__.s);

return {"done": false, "value": [x,x]};
} else {
return {"done": true, "value": null};
}
});

cljs.core.ES6SetEntriesIterator.cljs$lang$type = true;

cljs.core.ES6SetEntriesIterator.cljs$lang$ctorStr = "cljs.core/ES6SetEntriesIterator";

cljs.core.ES6SetEntriesIterator.cljs$lang$ctorPrWriter = (function (this__24859__auto__,writer__24860__auto__,opt__24861__auto__){
return cljs.core._write(writer__24860__auto__,"cljs.core/ES6SetEntriesIterator");
});

cljs.core.__GT_ES6SetEntriesIterator = (function __GT_ES6SetEntriesIterator(s){
return (new cljs.core.ES6SetEntriesIterator(s));
});

cljs.core.es6_set_entries_iterator = (function es6_set_entries_iterator(coll){
return (new cljs.core.ES6SetEntriesIterator(cljs.core.seq(coll)));
});
cljs.core.array_map_index_of_nil_QMARK_ = (function array_map_index_of_nil_QMARK_(arr,m,k){
var len = arr.length;
var i = (0);
while(true){
if((len <= i)){
return (-1);
} else {
if(((arr[i]) == null)){
return i;
} else {
var G__35726 = (i + (2));
i = G__35726;
continue;

}
}
break;
}
});
cljs.core.array_map_index_of_keyword_QMARK_ = (function array_map_index_of_keyword_QMARK_(arr,m,k){
var len = arr.length;
var kstr = k.fqn;
var i = (0);
while(true){
if((len <= i)){
return (-1);
} else {
if((function (){var k_SINGLEQUOTE_ = (arr[i]);
return ((k_SINGLEQUOTE_ instanceof cljs.core.Keyword)) && ((kstr === k_SINGLEQUOTE_.fqn));
})()){
return i;
} else {
var G__35727 = (i + (2));
i = G__35727;
continue;

}
}
break;
}
});
cljs.core.array_map_index_of_symbol_QMARK_ = (function array_map_index_of_symbol_QMARK_(arr,m,k){
var len = arr.length;
var kstr = k.str;
var i = (0);
while(true){
if((len <= i)){
return (-1);
} else {
if((function (){var k_SINGLEQUOTE_ = (arr[i]);
return ((k_SINGLEQUOTE_ instanceof cljs.core.Symbol)) && ((kstr === k_SINGLEQUOTE_.str));
})()){
return i;
} else {
var G__35728 = (i + (2));
i = G__35728;
continue;

}
}
break;
}
});
cljs.core.array_map_index_of_identical_QMARK_ = (function array_map_index_of_identical_QMARK_(arr,m,k){
var len = arr.length;
var i = (0);
while(true){
if((len <= i)){
return (-1);
} else {
if((k === (arr[i]))){
return i;
} else {
var G__35729 = (i + (2));
i = G__35729;
continue;

}
}
break;
}
});
cljs.core.array_map_index_of_equiv_QMARK_ = (function array_map_index_of_equiv_QMARK_(arr,m,k){
var len = arr.length;
var i = (0);
while(true){
if((len <= i)){
return (-1);
} else {
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(k,(arr[i]))){
return i;
} else {
var G__35730 = (i + (2));
i = G__35730;
continue;

}
}
break;
}
});
cljs.core.array_map_index_of = (function array_map_index_of(m,k){
var arr = m.arr;
if((k instanceof cljs.core.Keyword)){
return cljs.core.array_map_index_of_keyword_QMARK_(arr,m,k);
} else {
if(cljs.core.truth_((function (){var or__24272__auto__ = (function (){var G__35734 = k;
return goog.isString(G__35734);
})();
if(cljs.core.truth_(or__24272__auto__)){
return or__24272__auto__;
} else {
return typeof k === 'number';
}
})())){
return cljs.core.array_map_index_of_identical_QMARK_(arr,m,k);
} else {
if((k instanceof cljs.core.Symbol)){
return cljs.core.array_map_index_of_symbol_QMARK_(arr,m,k);
} else {
if((k == null)){
return cljs.core.array_map_index_of_nil_QMARK_(arr,m,k);
} else {
return cljs.core.array_map_index_of_equiv_QMARK_(arr,m,k);

}
}
}
}
});
cljs.core.array_map_extend_kv = (function array_map_extend_kv(m,k,v){
var arr = m.arr;
var l = arr.length;
var narr = (new Array((l + (2))));
var i_35735 = (0);
while(true){
if((i_35735 < l)){
(narr[i_35735] = (arr[i_35735]));

var G__35736 = (i_35735 + (1));
i_35735 = G__35736;
continue;
} else {
}
break;
}

(narr[l] = k);

(narr[(l + (1))] = v);

return narr;
});

/**
* @constructor
*/
cljs.core.PersistentArrayMapSeq = (function (arr,i,_meta){
this.arr = arr;
this.i = i;
this._meta = _meta;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32374990;
})
cljs.core.PersistentArrayMapSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentArrayMapSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__._meta;
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.i < (self__.arr.length - (2)))){
return (new cljs.core.PersistentArrayMapSeq(self__.arr,(self__.i + (2)),self__._meta));
} else {
return null;
}
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return ((self__.arr.length - self__.i) / (2));
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.hash_ordered_coll(coll__$1);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__._meta);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(self__.arr[self__.i]),(self__.arr[(self__.i + (1))])], null);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.i < (self__.arr.length - (2)))){
return (new cljs.core.PersistentArrayMapSeq(self__.arr,(self__.i + (2)),self__._meta));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,new_meta){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentArrayMapSeq(self__.arr,self__.i,new_meta));
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.PersistentArrayMapSeq.cljs$lang$type = true;

cljs.core.PersistentArrayMapSeq.cljs$lang$ctorStr = "cljs.core/PersistentArrayMapSeq";

cljs.core.PersistentArrayMapSeq.cljs$lang$ctorPrWriter = (function (this__24859__auto__,writer__24860__auto__,opt__24861__auto__){
return cljs.core._write(writer__24860__auto__,"cljs.core/PersistentArrayMapSeq");
});

cljs.core.__GT_PersistentArrayMapSeq = (function __GT_PersistentArrayMapSeq(arr,i,_meta){
return (new cljs.core.PersistentArrayMapSeq(arr,i,_meta));
});

(cljs.core.PersistentArrayMapSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__25250__auto__ = this;
return cljs.core.es6_iterator(this__25250__auto__);
}));
cljs.core.persistent_array_map_seq = (function persistent_array_map_seq(arr,i,_meta){
if((i <= (arr.length - (2)))){
return (new cljs.core.PersistentArrayMapSeq(arr,i,_meta));
} else {
return null;
}
});


/**
* @constructor
*/
cljs.core.PersistentArrayMapIterator = (function (arr,i,cnt){
this.arr = arr;
this.i = i;
this.cnt = cnt;
})
cljs.core.PersistentArrayMapIterator.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
return (self__.i < self__.cnt);
});

cljs.core.PersistentArrayMapIterator.prototype.next = (function (){
var self__ = this;
var _ = this;
var ret = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(self__.arr[self__.i]),(self__.arr[(self__.i + (1))])], null);
self__.i = (self__.i + (2));

return ret;
});

cljs.core.PersistentArrayMapIterator.cljs$lang$type = true;

cljs.core.PersistentArrayMapIterator.cljs$lang$ctorStr = "cljs.core/PersistentArrayMapIterator";

cljs.core.PersistentArrayMapIterator.cljs$lang$ctorPrWriter = (function (this__24859__auto__,writer__24860__auto__,opt__24861__auto__){
return cljs.core._write(writer__24860__auto__,"cljs.core/PersistentArrayMapIterator");
});

cljs.core.__GT_PersistentArrayMapIterator = (function __GT_PersistentArrayMapIterator(arr,i,cnt){
return (new cljs.core.PersistentArrayMapIterator(arr,i,cnt));
});


/**
* @constructor
*/
cljs.core.PersistentArrayMap = (function (meta,cnt,arr,__hash){
this.meta = meta;
this.cnt = cnt;
this.arr = arr;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 16647951;
this.cljs$lang$protocol_mask$partition1$ = 8196;
})
cljs.core.PersistentArrayMap.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentArrayMap.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentArrayMap.prototype.keys = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator((function (){var G__35738 = coll;
return (cljs.core.keys.cljs$core$IFn$_invoke$arity$1 ? cljs.core.keys.cljs$core$IFn$_invoke$arity$1(G__35738) : cljs.core.keys.call(null,G__35738));
})());
});

cljs.core.PersistentArrayMap.prototype.entries = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_entries_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentArrayMap.prototype.values = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator((function (){var G__35739 = coll;
return (cljs.core.vals.cljs$core$IFn$_invoke$arity$1 ? cljs.core.vals.cljs$core$IFn$_invoke$arity$1(G__35739) : cljs.core.vals.call(null,G__35739));
})());
});

cljs.core.PersistentArrayMap.prototype.has = (function (k){
var self__ = this;
var coll = this;
return cljs.core.contains_QMARK_(coll,k);
});

cljs.core.PersistentArrayMap.prototype.get = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentArrayMap.prototype.forEach = (function (f){
var self__ = this;
var coll = this;
var seq__35740 = cljs.core.seq(coll);
var chunk__35741 = null;
var count__35742 = (0);
var i__35743 = (0);
while(true){
if((i__35743 < count__35742)){
var vec__35744 = chunk__35741.cljs$core$IIndexed$_nth$arity$2(null,i__35743);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__35744,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__35744,(1),null);
var G__35745_35758 = v;
var G__35746_35759 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__35745_35758,G__35746_35759) : f.call(null,G__35745_35758,G__35746_35759));

var G__35760 = seq__35740;
var G__35761 = chunk__35741;
var G__35762 = count__35742;
var G__35763 = (i__35743 + (1));
seq__35740 = G__35760;
chunk__35741 = G__35761;
count__35742 = G__35762;
i__35743 = G__35763;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__35740);
if(temp__4126__auto__){
var seq__35740__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__35740__$1)){
var c__25059__auto__ = cljs.core.chunk_first(seq__35740__$1);
var G__35764 = cljs.core.chunk_rest(seq__35740__$1);
var G__35765 = c__25059__auto__;
var G__35766 = cljs.core.count(c__25059__auto__);
var G__35767 = (0);
seq__35740 = G__35764;
chunk__35741 = G__35765;
count__35742 = G__35766;
i__35743 = G__35767;
continue;
} else {
var vec__35747 = cljs.core.first(seq__35740__$1);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__35747,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__35747,(1),null);
var G__35748_35768 = v;
var G__35749_35769 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__35748_35768,G__35749_35769) : f.call(null,G__35748_35768,G__35749_35769));

var G__35770 = cljs.core.next(seq__35740__$1);
var G__35771 = null;
var G__35772 = (0);
var G__35773 = (0);
seq__35740 = G__35770;
chunk__35741 = G__35771;
count__35742 = G__35772;
i__35743 = G__35773;
continue;
}
} else {
return null;
}
}
break;
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.PersistentArrayMap.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
var idx = cljs.core.array_map_index_of(coll__$1,k);
if((idx === (-1))){
return not_found;
} else {
return (self__.arr[(idx + (1))]);
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = (function (coll,f,init){
var self__ = this;
var coll__$1 = this;
var len = self__.arr.length;
var i = (0);
var init__$1 = init;
while(true){
if((i < len)){
var init__$2 = (function (){var G__35750 = init__$1;
var G__35751 = (self__.arr[i]);
var G__35752 = (self__.arr[(i + (1))]);
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__35750,G__35751,G__35752) : f.call(null,G__35750,G__35751,G__35752));
})();
if(cljs.core.reduced_QMARK_(init__$2)){
var G__35753 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__35753) : cljs.core.deref.call(null,G__35753));
} else {
var G__35774 = (i + (2));
var G__35775 = init__$2;
i = G__35774;
init__$1 = G__35775;
continue;
}
} else {
return init__$1;
}
break;
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IIterable$ = true;

cljs.core.PersistentArrayMap.prototype.cljs$core$IIterable$_iterator$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return (new cljs.core.PersistentArrayMapIterator(self__.arr,(0),(self__.cnt * (2))));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentArrayMap.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.PersistentArrayMap(self__.meta,self__.cnt,self__.arr,self__.__hash));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.cnt;
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__24693__auto__ = self__.__hash;
if(!((h__24693__auto__ == null))){
return h__24693__auto__;
} else {
var h__24693__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
self__.__hash = h__24693__auto____$1;

return h__24693__auto____$1;
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
if((function (){var G__35754 = other;
if(G__35754){
var bit__24946__auto__ = (G__35754.cljs$lang$protocol_mask$partition0$ & (1024));
if((bit__24946__auto__) || (G__35754.cljs$core$IMap$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
var alen = self__.arr.length;
var other__$1 = other;
if((self__.cnt === other__$1.cljs$core$ICounted$_count$arity$1(null))){
var i = (0);
while(true){
if((i < alen)){
var v = other__$1.cljs$core$ILookup$_lookup$arity$3(null,(self__.arr[i]),cljs.core.lookup_sentinel);
if(!((v === cljs.core.lookup_sentinel))){
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2((self__.arr[(i + (1))]),v)){
var G__35776 = (i + (2));
i = G__35776;
continue;
} else {
return false;
}
} else {
return false;
}
} else {
return true;
}
break;
}
} else {
return false;
}
} else {
return cljs.core.equiv_map(coll__$1,other);
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.TransientArrayMap((function (){var obj35756 = {};
return obj35756;
})(),self__.arr.length,cljs.core.aclone(self__.arr)));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._with_meta(cljs.core.PersistentArrayMap.EMPTY,self__.meta);
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IMap$_dissoc$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
var idx = cljs.core.array_map_index_of(coll__$1,k);
if((idx >= (0))){
var len = self__.arr.length;
var new_len = (len - (2));
if((new_len === (0))){
return cljs.core._empty(coll__$1);
} else {
var new_arr = (new Array(new_len));
var s = (0);
var d = (0);
while(true){
if((s >= len)){
return (new cljs.core.PersistentArrayMap(self__.meta,(self__.cnt - (1)),new_arr,null));
} else {
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(k,(self__.arr[s]))){
var G__35777 = (s + (2));
var G__35778 = d;
s = G__35777;
d = G__35778;
continue;
} else {
(new_arr[d] = (self__.arr[s]));

(new_arr[(d + (1))] = (self__.arr[(s + (1))]));

var G__35779 = (s + (2));
var G__35780 = (d + (2));
s = G__35779;
d = G__35780;
continue;

}
}
break;
}
}
} else {
return coll__$1;
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (coll,k,v){
var self__ = this;
var coll__$1 = this;
var idx = cljs.core.array_map_index_of(coll__$1,k);
if((idx === (-1))){
if((self__.cnt < cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD)){
var arr__$1 = cljs.core.array_map_extend_kv(coll__$1,k,v);
return (new cljs.core.PersistentArrayMap(self__.meta,(self__.cnt + (1)),arr__$1,null));
} else {
return cljs.core._with_meta(cljs.core._assoc(cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentHashMap.EMPTY,coll__$1),k,v),self__.meta);
}
} else {
if((v === (self__.arr[(idx + (1))]))){
return coll__$1;
} else {
var arr__$1 = (function (){var G__35757 = cljs.core.aclone(self__.arr);
(G__35757[(idx + (1))] = v);

return G__35757;
})();
return (new cljs.core.PersistentArrayMap(self__.meta,self__.cnt,arr__$1,null));

}
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return !((cljs.core.array_map_index_of(coll__$1,k) === (-1)));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.persistent_array_map_seq(self__.arr,(0),null);
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentArrayMap(meta__$1,self__.cnt,self__.arr,self__.__hash));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,entry){
var self__ = this;
var coll__$1 = this;
if(cljs.core.vector_QMARK_(entry)){
return cljs.core._assoc(coll__$1,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(1)));
} else {
var ret = coll__$1;
var es = cljs.core.seq(entry);
while(true){
if((es == null)){
return ret;
} else {
var e = cljs.core.first(es);
if(cljs.core.vector_QMARK_(e)){
var G__35781 = cljs.core._assoc(ret,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e,(1)));
var G__35782 = cljs.core.next(es);
ret = G__35781;
es = G__35782;
continue;
} else {
throw (new Error("conj on a map takes map entries or seqables of map entries"));
}
}
break;
}
}
});

cljs.core.PersistentArrayMap.prototype.call = (function() {
var G__35783 = null;
var G__35783__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__35783__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__35783 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__35783__2.call(this,self__,k);
case 3:
return G__35783__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__35783.cljs$core$IFn$_invoke$arity$2 = G__35783__2;
G__35783.cljs$core$IFn$_invoke$arity$3 = G__35783__3;
return G__35783;
})()
;

cljs.core.PersistentArrayMap.prototype.apply = (function (self__,args35737){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args35737)));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.PersistentArrayMap.cljs$lang$type = true;

cljs.core.PersistentArrayMap.cljs$lang$ctorStr = "cljs.core/PersistentArrayMap";

cljs.core.PersistentArrayMap.cljs$lang$ctorPrWriter = (function (this__24859__auto__,writer__24860__auto__,opt__24861__auto__){
return cljs.core._write(writer__24860__auto__,"cljs.core/PersistentArrayMap");
});

cljs.core.__GT_PersistentArrayMap = (function __GT_PersistentArrayMap(meta,cnt,arr,__hash){
return (new cljs.core.PersistentArrayMap(meta,cnt,arr,__hash));
});

cljs.core.PersistentArrayMap.EMPTY = (new cljs.core.PersistentArrayMap(null,(0),[],null));
cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD = (8);
cljs.core.PersistentArrayMap.fromArray = (function (arr,no_clone,no_check){
var arr__$1 = ((no_clone)?arr:cljs.core.aclone(arr));
if(no_check){
var cnt = (arr__$1.length / (2));
return (new cljs.core.PersistentArrayMap(null,cnt,arr__$1,null));
} else {
var len = arr__$1.length;
var i = (0);
var ret = cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY);
while(true){
if((i < len)){
var G__35784 = (i + (2));
var G__35785 = cljs.core._assoc_BANG_(ret,(arr__$1[i]),(arr__$1[(i + (1))]));
i = G__35784;
ret = G__35785;
continue;
} else {
return cljs.core._persistent_BANG_(ret);
}
break;
}
}
});
(cljs.core.PersistentArrayMap.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__25250__auto__ = this;
return cljs.core.es6_iterator(this__25250__auto__);
}));

/**
* @constructor
*/
cljs.core.TransientArrayMap = (function (editable_QMARK_,len,arr){
this.editable_QMARK_ = editable_QMARK_;
this.len = len;
this.arr = arr;
this.cljs$lang$protocol_mask$partition1$ = 56;
this.cljs$lang$protocol_mask$partition0$ = 258;
})
cljs.core.TransientArrayMap.prototype.cljs$core$ITransientMap$_dissoc_BANG_$arity$2 = (function (tcoll,key){
var self__ = this;
var tcoll__$1 = this;
if(cljs.core.truth_(self__.editable_QMARK_)){
var idx = cljs.core.array_map_index_of(tcoll__$1,key);
if((idx >= (0))){
(self__.arr[idx] = (self__.arr[(self__.len - (2))]));

(self__.arr[(idx + (1))] = (self__.arr[(self__.len - (1))]));

var G__35786_35794 = self__.arr;
G__35786_35794.pop();

G__35786_35794.pop();


self__.len = (self__.len - (2));
} else {
}

return tcoll__$1;
} else {
throw (new Error("dissoc! after persistent!"));
}
});

cljs.core.TransientArrayMap.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = (function (tcoll,key,val){
var self__ = this;
var tcoll__$1 = this;
if(cljs.core.truth_(self__.editable_QMARK_)){
var idx = cljs.core.array_map_index_of(tcoll__$1,key);
if((idx === (-1))){
if(((self__.len + (2)) <= ((2) * cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD))){
self__.len = (self__.len + (2));

self__.arr.push(key);

self__.arr.push(val);

return tcoll__$1;
} else {
return cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3((function (){var G__35787 = self__.len;
var G__35788 = self__.arr;
return (cljs.core.array__GT_transient_hash_map.cljs$core$IFn$_invoke$arity$2 ? cljs.core.array__GT_transient_hash_map.cljs$core$IFn$_invoke$arity$2(G__35787,G__35788) : cljs.core.array__GT_transient_hash_map.call(null,G__35787,G__35788));
})(),key,val);
}
} else {
if((val === (self__.arr[(idx + (1))]))){
return tcoll__$1;
} else {
(self__.arr[(idx + (1))] = val);

return tcoll__$1;
}
}
} else {
throw (new Error("assoc! after persistent!"));
}
});

cljs.core.TransientArrayMap.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = (function (tcoll,o){
var self__ = this;
var tcoll__$1 = this;
if(cljs.core.truth_(self__.editable_QMARK_)){
if((function (){var G__35789 = o;
if(G__35789){
var bit__24953__auto__ = (G__35789.cljs$lang$protocol_mask$partition0$ & (2048));
if((bit__24953__auto__) || (G__35789.cljs$core$IMapEntry$)){
return true;
} else {
if((!G__35789.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IMapEntry,G__35789);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IMapEntry,G__35789);
}
})()){
return cljs.core._assoc_BANG_(tcoll__$1,(function (){var G__35790 = o;
return (cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__35790) : cljs.core.key.call(null,G__35790));
})(),(function (){var G__35791 = o;
return (cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(G__35791) : cljs.core.val.call(null,G__35791));
})());
} else {
var es = cljs.core.seq(o);
var tcoll__$2 = tcoll__$1;
while(true){
var temp__4124__auto__ = cljs.core.first(es);
if(cljs.core.truth_(temp__4124__auto__)){
var e = temp__4124__auto__;
var G__35795 = cljs.core.next(es);
var G__35796 = cljs.core._assoc_BANG_(tcoll__$2,(function (){var G__35792 = e;
return (cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__35792) : cljs.core.key.call(null,G__35792));
})(),(function (){var G__35793 = e;
return (cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(G__35793) : cljs.core.val.call(null,G__35793));
})());
es = G__35795;
tcoll__$2 = G__35796;
continue;
} else {
return tcoll__$2;
}
break;
}
}
} else {
throw (new Error("conj! after persistent!"));
}
});

cljs.core.TransientArrayMap.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
if(cljs.core.truth_(self__.editable_QMARK_)){
self__.editable_QMARK_ = false;

return (new cljs.core.PersistentArrayMap(null,cljs.core.quot(self__.len,(2)),self__.arr,null));
} else {
throw (new Error("persistent! called twice"));
}
});

cljs.core.TransientArrayMap.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (tcoll,k){
var self__ = this;
var tcoll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(tcoll__$1,k,null);
});

cljs.core.TransientArrayMap.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (tcoll,k,not_found){
var self__ = this;
var tcoll__$1 = this;
if(cljs.core.truth_(self__.editable_QMARK_)){
var idx = cljs.core.array_map_index_of(tcoll__$1,k);
if((idx === (-1))){
return not_found;
} else {
return (self__.arr[(idx + (1))]);
}
} else {
throw (new Error("lookup after persistent!"));
}
});

cljs.core.TransientArrayMap.prototype.cljs$core$ICounted$_count$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
if(cljs.core.truth_(self__.editable_QMARK_)){
return cljs.core.quot(self__.len,(2));
} else {
throw (new Error("count after persistent!"));
}
});

cljs.core.TransientArrayMap.cljs$lang$type = true;

cljs.core.TransientArrayMap.cljs$lang$ctorStr = "cljs.core/TransientArrayMap";

cljs.core.TransientArrayMap.cljs$lang$ctorPrWriter = (function (this__24859__auto__,writer__24860__auto__,opt__24861__auto__){
return cljs.core._write(writer__24860__auto__,"cljs.core/TransientArrayMap");
});

cljs.core.__GT_TransientArrayMap = (function __GT_TransientArrayMap(editable_QMARK_,len,arr){
return (new cljs.core.TransientArrayMap(editable_QMARK_,len,arr));
});


cljs.core.array__GT_transient_hash_map = (function array__GT_transient_hash_map(len,arr){
var out = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
var i = (0);
while(true){
if((i < len)){
var G__35797 = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(out,(arr[i]),(arr[(i + (1))]));
var G__35798 = (i + (2));
out = G__35797;
i = G__35798;
continue;
} else {
return out;
}
break;
}
});

/**
* @constructor
*/
cljs.core.Box = (function (val){
this.val = val;
})

cljs.core.Box.cljs$lang$type = true;

cljs.core.Box.cljs$lang$ctorStr = "cljs.core/Box";

cljs.core.Box.cljs$lang$ctorPrWriter = (function (this__24859__auto__,writer__24860__auto__,opt__24861__auto__){
return cljs.core._write(writer__24860__auto__,"cljs.core/Box");
});

cljs.core.__GT_Box = (function __GT_Box(val){
return (new cljs.core.Box(val));
});






cljs.core.key_test = (function key_test(key,other){
if((key === other)){
return true;
} else {
if(cljs.core.keyword_identical_QMARK_(key,other)){
return true;
} else {
return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(key,other);

}
}
});
cljs.core.mask = (function mask(hash,shift){
return ((hash >>> shift) & (31));
});
cljs.core.clone_and_set = (function() {
var clone_and_set = null;
var clone_and_set__3 = (function (arr,i,a){
var G__35801 = cljs.core.aclone(arr);
(G__35801[i] = a);

return G__35801;
});
var clone_and_set__5 = (function (arr,i,a,j,b){
var G__35802 = cljs.core.aclone(arr);
(G__35802[i] = a);

(G__35802[j] = b);

return G__35802;
});
clone_and_set = function(arr,i,a,j,b){
switch(arguments.length){
case 3:
return clone_and_set__3.call(this,arr,i,a);
case 5:
return clone_and_set__5.call(this,arr,i,a,j,b);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
clone_and_set.cljs$core$IFn$_invoke$arity$3 = clone_and_set__3;
clone_and_set.cljs$core$IFn$_invoke$arity$5 = clone_and_set__5;
return clone_and_set;
})()
;
cljs.core.remove_pair = (function remove_pair(arr,i){
var new_arr = (new Array((arr.length - (2))));
cljs.core.array_copy(arr,(0),new_arr,(0),((2) * i));

cljs.core.array_copy(arr,((2) * (i + (1))),new_arr,((2) * i),(new_arr.length - ((2) * i)));

return new_arr;
});
cljs.core.bitmap_indexed_node_index = (function bitmap_indexed_node_index(bitmap,bit){
return cljs.core.bit_count((bitmap & (bit - (1))));
});
cljs.core.bitpos = (function bitpos(hash,shift){
return ((1) << ((hash >>> shift) & 0x01f));
});
cljs.core.edit_and_set = (function() {
var edit_and_set = null;
var edit_and_set__4 = (function (inode,edit,i,a){
var editable = inode.ensure_editable(edit);
(editable.arr[i] = a);

return editable;
});
var edit_and_set__6 = (function (inode,edit,i,a,j,b){
var editable = inode.ensure_editable(edit);
(editable.arr[i] = a);

(editable.arr[j] = b);

return editable;
});
edit_and_set = function(inode,edit,i,a,j,b){
switch(arguments.length){
case 4:
return edit_and_set__4.call(this,inode,edit,i,a);
case 6:
return edit_and_set__6.call(this,inode,edit,i,a,j,b);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
edit_and_set.cljs$core$IFn$_invoke$arity$4 = edit_and_set__4;
edit_and_set.cljs$core$IFn$_invoke$arity$6 = edit_and_set__6;
return edit_and_set;
})()
;
cljs.core.inode_kv_reduce = (function inode_kv_reduce(arr,f,init){
var len = arr.length;
var i = (0);
var init__$1 = init;
while(true){
if((i < len)){
var init__$2 = (function (){var k = (arr[i]);
if(!((k == null))){
var G__35807 = init__$1;
var G__35808 = k;
var G__35809 = (arr[(i + (1))]);
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__35807,G__35808,G__35809) : f.call(null,G__35807,G__35808,G__35809));
} else {
var node = (arr[(i + (1))]);
if(!((node == null))){
return node.kv_reduce(f,init__$1);
} else {
return init__$1;
}
}
})();
if(cljs.core.reduced_QMARK_(init__$2)){
var G__35810 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__35810) : cljs.core.deref.call(null,G__35810));
} else {
var G__35811 = (i + (2));
var G__35812 = init__$2;
i = G__35811;
init__$1 = G__35812;
continue;
}
} else {
return init__$1;
}
break;
}
});

/**
* @constructor
*/
cljs.core.BitmapIndexedNode = (function (edit,bitmap,arr){
this.edit = edit;
this.bitmap = bitmap;
this.arr = arr;
})
cljs.core.BitmapIndexedNode.prototype.ensure_editable = (function (e){
var self__ = this;
var inode = this;
if((e === self__.edit)){
return inode;
} else {
var n = cljs.core.bit_count(self__.bitmap);
var new_arr = (new Array((((n < (0)))?(4):((2) * (n + (1))))));
cljs.core.array_copy(self__.arr,(0),new_arr,(0),((2) * n));

return (new cljs.core.BitmapIndexedNode(e,self__.bitmap,new_arr));
}
});

cljs.core.BitmapIndexedNode.prototype.inode_without_BANG_ = (function (edit__$1,shift,hash,key,removed_leaf_QMARK_){
var self__ = this;
var inode = this;
var bit = (1 << ((hash >>> shift) & 0x01f));
if(((self__.bitmap & bit) === (0))){
return inode;
} else {
var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap,bit);
var key_or_nil = (self__.arr[((2) * idx)]);
var val_or_node = (self__.arr[(((2) * idx) + (1))]);
if((key_or_nil == null)){
var n = val_or_node.inode_without_BANG_(edit__$1,(shift + (5)),hash,key,removed_leaf_QMARK_);
if((n === val_or_node)){
return inode;
} else {
if(!((n == null))){
return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,(((2) * idx) + (1)),n);
} else {
if((self__.bitmap === bit)){
return null;
} else {
return inode.edit_and_remove_pair(edit__$1,bit,idx);

}
}
}
} else {
if(cljs.core.key_test(key,key_or_nil)){
(removed_leaf_QMARK_[(0)] = true);

return inode.edit_and_remove_pair(edit__$1,bit,idx);
} else {
return inode;

}
}
}
});

cljs.core.BitmapIndexedNode.prototype.edit_and_remove_pair = (function (e,bit,i){
var self__ = this;
var inode = this;
if((self__.bitmap === bit)){
return null;
} else {
var editable = inode.ensure_editable(e);
var earr = editable.arr;
var len = earr.length;
editable.bitmap = (bit ^ editable.bitmap);

cljs.core.array_copy(earr,((2) * (i + (1))),earr,((2) * i),(len - ((2) * (i + (1)))));

(earr[(len - (2))] = null);

(earr[(len - (1))] = null);

return editable;
}
});

cljs.core.BitmapIndexedNode.prototype.inode_seq = (function (){
var self__ = this;
var inode = this;
var G__35813 = self__.arr;
return (cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1 ? cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1(G__35813) : cljs.core.create_inode_seq.call(null,G__35813));
});

cljs.core.BitmapIndexedNode.prototype.kv_reduce = (function (f,init){
var self__ = this;
var inode = this;
return cljs.core.inode_kv_reduce(self__.arr,f,init);
});

cljs.core.BitmapIndexedNode.prototype.inode_lookup = (function (shift,hash,key,not_found){
var self__ = this;
var inode = this;
var bit = (1 << ((hash >>> shift) & 0x01f));
if(((self__.bitmap & bit) === (0))){
return not_found;
} else {
var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap,bit);
var key_or_nil = (self__.arr[((2) * idx)]);
var val_or_node = (self__.arr[(((2) * idx) + (1))]);
if((key_or_nil == null)){
return val_or_node.inode_lookup((shift + (5)),hash,key,not_found);
} else {
if(cljs.core.key_test(key,key_or_nil)){
return val_or_node;
} else {
return not_found;

}
}
}
});

cljs.core.BitmapIndexedNode.prototype.inode_assoc_BANG_ = (function (edit__$1,shift,hash,key,val,added_leaf_QMARK_){
var self__ = this;
var inode = this;
var bit = (1 << ((hash >>> shift) & 0x01f));
var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap,bit);
if(((self__.bitmap & bit) === (0))){
var n = cljs.core.bit_count(self__.bitmap);
if((((2) * n) < self__.arr.length)){
var editable = inode.ensure_editable(edit__$1);
var earr = editable.arr;
added_leaf_QMARK_.val = true;

cljs.core.array_copy_downward(earr,((2) * idx),earr,((2) * (idx + (1))),((2) * (n - idx)));

(earr[((2) * idx)] = key);

(earr[(((2) * idx) + (1))] = val);

editable.bitmap = (editable.bitmap | bit);

return editable;
} else {
if((n >= (16))){
var nodes = [null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null];
var jdx = ((hash >>> shift) & 0x01f);
(nodes[jdx] = cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit__$1,(shift + (5)),hash,key,val,added_leaf_QMARK_));

var i_35827 = (0);
var j_35828 = (0);
while(true){
if((i_35827 < (32))){
if((((self__.bitmap >>> i_35827) & (1)) === (0))){
var G__35829 = (i_35827 + (1));
var G__35830 = j_35828;
i_35827 = G__35829;
j_35828 = G__35830;
continue;
} else {
(nodes[i_35827] = ((!(((self__.arr[j_35828]) == null)))?cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit__$1,(shift + (5)),cljs.core.hash((self__.arr[j_35828])),(self__.arr[j_35828]),(self__.arr[(j_35828 + (1))]),added_leaf_QMARK_):(self__.arr[(j_35828 + (1))])));

var G__35831 = (i_35827 + (1));
var G__35832 = (j_35828 + (2));
i_35827 = G__35831;
j_35828 = G__35832;
continue;
}
} else {
}
break;
}

return (new cljs.core.ArrayNode(edit__$1,(n + (1)),nodes));
} else {
var new_arr = (new Array(((2) * (n + (4)))));
cljs.core.array_copy(self__.arr,(0),new_arr,(0),((2) * idx));

(new_arr[((2) * idx)] = key);

(new_arr[(((2) * idx) + (1))] = val);

cljs.core.array_copy(self__.arr,((2) * idx),new_arr,((2) * (idx + (1))),((2) * (n - idx)));

added_leaf_QMARK_.val = true;

var editable = inode.ensure_editable(edit__$1);
editable.arr = new_arr;

editable.bitmap = (editable.bitmap | bit);

return editable;

}
}
} else {
var key_or_nil = (self__.arr[((2) * idx)]);
var val_or_node = (self__.arr[(((2) * idx) + (1))]);
if((key_or_nil == null)){
var n = val_or_node.inode_assoc_BANG_(edit__$1,(shift + (5)),hash,key,val,added_leaf_QMARK_);
if((n === val_or_node)){
return inode;
} else {
return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,(((2) * idx) + (1)),n);
}
} else {
if(cljs.core.key_test(key,key_or_nil)){
if((val === val_or_node)){
return inode;
} else {
return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,(((2) * idx) + (1)),val);
}
} else {
added_leaf_QMARK_.val = true;

return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$6(inode,edit__$1,((2) * idx),null,(((2) * idx) + (1)),(function (){var G__35814 = edit__$1;
var G__35815 = (shift + (5));
var G__35816 = key_or_nil;
var G__35817 = val_or_node;
var G__35818 = hash;
var G__35819 = key;
var G__35820 = val;
return (cljs.core.create_node.cljs$core$IFn$_invoke$arity$7 ? cljs.core.create_node.cljs$core$IFn$_invoke$arity$7(G__35814,G__35815,G__35816,G__35817,G__35818,G__35819,G__35820) : cljs.core.create_node.call(null,G__35814,G__35815,G__35816,G__35817,G__35818,G__35819,G__35820));
})());

}
}
}
});

cljs.core.BitmapIndexedNode.prototype.inode_assoc = (function (shift,hash,key,val,added_leaf_QMARK_){
var self__ = this;
var inode = this;
var bit = (1 << ((hash >>> shift) & 0x01f));
var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap,bit);
if(((self__.bitmap & bit) === (0))){
var n = cljs.core.bit_count(self__.bitmap);
if((n >= (16))){
var nodes = [null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null];
var jdx = ((hash >>> shift) & 0x01f);
(nodes[jdx] = cljs.core.BitmapIndexedNode.EMPTY.inode_assoc((shift + (5)),hash,key,val,added_leaf_QMARK_));

var i_35833 = (0);
var j_35834 = (0);
while(true){
if((i_35833 < (32))){
if((((self__.bitmap >>> i_35833) & (1)) === (0))){
var G__35835 = (i_35833 + (1));
var G__35836 = j_35834;
i_35833 = G__35835;
j_35834 = G__35836;
continue;
} else {
(nodes[i_35833] = ((!(((self__.arr[j_35834]) == null)))?cljs.core.BitmapIndexedNode.EMPTY.inode_assoc((shift + (5)),cljs.core.hash((self__.arr[j_35834])),(self__.arr[j_35834]),(self__.arr[(j_35834 + (1))]),added_leaf_QMARK_):(self__.arr[(j_35834 + (1))])));

var G__35837 = (i_35833 + (1));
var G__35838 = (j_35834 + (2));
i_35833 = G__35837;
j_35834 = G__35838;
continue;
}
} else {
}
break;
}

return (new cljs.core.ArrayNode(null,(n + (1)),nodes));
} else {
var new_arr = (new Array(((2) * (n + (1)))));
cljs.core.array_copy(self__.arr,(0),new_arr,(0),((2) * idx));

(new_arr[((2) * idx)] = key);

(new_arr[(((2) * idx) + (1))] = val);

cljs.core.array_copy(self__.arr,((2) * idx),new_arr,((2) * (idx + (1))),((2) * (n - idx)));

added_leaf_QMARK_.val = true;

return (new cljs.core.BitmapIndexedNode(null,(self__.bitmap | bit),new_arr));
}
} else {
var key_or_nil = (self__.arr[((2) * idx)]);
var val_or_node = (self__.arr[(((2) * idx) + (1))]);
if((key_or_nil == null)){
var n = val_or_node.inode_assoc((shift + (5)),hash,key,val,added_leaf_QMARK_);
if((n === val_or_node)){
return inode;
} else {
return (new cljs.core.BitmapIndexedNode(null,self__.bitmap,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,(((2) * idx) + (1)),n)));
}
} else {
if(cljs.core.key_test(key,key_or_nil)){
if((val === val_or_node)){
return inode;
} else {
return (new cljs.core.BitmapIndexedNode(null,self__.bitmap,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,(((2) * idx) + (1)),val)));
}
} else {
added_leaf_QMARK_.val = true;

return (new cljs.core.BitmapIndexedNode(null,self__.bitmap,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$5(self__.arr,((2) * idx),null,(((2) * idx) + (1)),(function (){var G__35821 = (shift + (5));
var G__35822 = key_or_nil;
var G__35823 = val_or_node;
var G__35824 = hash;
var G__35825 = key;
var G__35826 = val;
return (cljs.core.create_node.cljs$core$IFn$_invoke$arity$6 ? cljs.core.create_node.cljs$core$IFn$_invoke$arity$6(G__35821,G__35822,G__35823,G__35824,G__35825,G__35826) : cljs.core.create_node.call(null,G__35821,G__35822,G__35823,G__35824,G__35825,G__35826));
})())));

}
}
}
});

cljs.core.BitmapIndexedNode.prototype.inode_find = (function (shift,hash,key,not_found){
var self__ = this;
var inode = this;
var bit = (1 << ((hash >>> shift) & 0x01f));
if(((self__.bitmap & bit) === (0))){
return not_found;
} else {
var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap,bit);
var key_or_nil = (self__.arr[((2) * idx)]);
var val_or_node = (self__.arr[(((2) * idx) + (1))]);
if((key_or_nil == null)){
return val_or_node.inode_find((shift + (5)),hash,key,not_found);
} else {
if(cljs.core.key_test(key,key_or_nil)){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [key_or_nil,val_or_node], null);
} else {
return not_found;

}
}
}
});

cljs.core.BitmapIndexedNode.prototype.inode_without = (function (shift,hash,key){
var self__ = this;
var inode = this;
var bit = (1 << ((hash >>> shift) & 0x01f));
if(((self__.bitmap & bit) === (0))){
return inode;
} else {
var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap,bit);
var key_or_nil = (self__.arr[((2) * idx)]);
var val_or_node = (self__.arr[(((2) * idx) + (1))]);
if((key_or_nil == null)){
var n = val_or_node.inode_without((shift + (5)),hash,key);
if((n === val_or_node)){
return inode;
} else {
if(!((n == null))){
return (new cljs.core.BitmapIndexedNode(null,self__.bitmap,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,(((2) * idx) + (1)),n)));
} else {
if((self__.bitmap === bit)){
return null;
} else {
return (new cljs.core.BitmapIndexedNode(null,(self__.bitmap ^ bit),cljs.core.remove_pair(self__.arr,idx)));

}
}
}
} else {
if(cljs.core.key_test(key,key_or_nil)){
return (new cljs.core.BitmapIndexedNode(null,(self__.bitmap ^ bit),cljs.core.remove_pair(self__.arr,idx)));
} else {
return inode;

}
}
}
});

cljs.core.BitmapIndexedNode.cljs$lang$type = true;

cljs.core.BitmapIndexedNode.cljs$lang$ctorStr = "cljs.core/BitmapIndexedNode";

cljs.core.BitmapIndexedNode.cljs$lang$ctorPrWriter = (function (this__24859__auto__,writer__24860__auto__,opt__24861__auto__){
return cljs.core._write(writer__24860__auto__,"cljs.core/BitmapIndexedNode");
});

cljs.core.__GT_BitmapIndexedNode = (function __GT_BitmapIndexedNode(edit,bitmap,arr){
return (new cljs.core.BitmapIndexedNode(edit,bitmap,arr));
});

cljs.core.BitmapIndexedNode.EMPTY = (new cljs.core.BitmapIndexedNode(null,(0),[]));
cljs.core.pack_array_node = (function pack_array_node(array_node,edit,idx){
var arr = array_node.arr;
var len = arr.length;
var new_arr = (new Array(((2) * (array_node.cnt - (1)))));
var i = (0);
var j = (1);
var bitmap = (0);
while(true){
if((i < len)){
if((!((i === idx))) && (!(((arr[i]) == null)))){
(new_arr[j] = (arr[i]));

var G__35839 = (i + (1));
var G__35840 = (j + (2));
var G__35841 = (bitmap | ((1) << i));
i = G__35839;
j = G__35840;
bitmap = G__35841;
continue;
} else {
var G__35842 = (i + (1));
var G__35843 = j;
var G__35844 = bitmap;
i = G__35842;
j = G__35843;
bitmap = G__35844;
continue;
}
} else {
return (new cljs.core.BitmapIndexedNode(edit,bitmap,new_arr));
}
break;
}
});

/**
* @constructor
*/
cljs.core.ArrayNode = (function (edit,cnt,arr){
this.edit = edit;
this.cnt = cnt;
this.arr = arr;
})
cljs.core.ArrayNode.prototype.ensure_editable = (function (e){
var self__ = this;
var inode = this;
if((e === self__.edit)){
return inode;
} else {
return (new cljs.core.ArrayNode(e,self__.cnt,cljs.core.aclone(self__.arr)));
}
});

cljs.core.ArrayNode.prototype.inode_without_BANG_ = (function (edit__$1,shift,hash,key,removed_leaf_QMARK_){
var self__ = this;
var inode = this;
var idx = ((hash >>> shift) & 0x01f);
var node = (self__.arr[idx]);
if((node == null)){
return inode;
} else {
var n = node.inode_without_BANG_(edit__$1,(shift + (5)),hash,key,removed_leaf_QMARK_);
if((n === node)){
return inode;
} else {
if((n == null)){
if((self__.cnt <= (8))){
return cljs.core.pack_array_node(inode,edit__$1,idx);
} else {
var editable = cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,idx,n);
editable.cnt = (editable.cnt - (1));

return editable;
}
} else {
return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,idx,n);

}
}
}
});

cljs.core.ArrayNode.prototype.inode_seq = (function (){
var self__ = this;
var inode = this;
var G__35845 = self__.arr;
return (cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$1 ? cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$1(G__35845) : cljs.core.create_array_node_seq.call(null,G__35845));
});

cljs.core.ArrayNode.prototype.kv_reduce = (function (f,init){
var self__ = this;
var inode = this;
var len = self__.arr.length;
var i = (0);
var init__$1 = init;
while(true){
if((i < len)){
var node = (self__.arr[i]);
if(!((node == null))){
var init__$2 = node.kv_reduce(f,init__$1);
if(cljs.core.reduced_QMARK_(init__$2)){
var G__35846 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__35846) : cljs.core.deref.call(null,G__35846));
} else {
var G__35847 = (i + (1));
var G__35848 = init__$2;
i = G__35847;
init__$1 = G__35848;
continue;
}
} else {
var G__35849 = (i + (1));
var G__35850 = init__$1;
i = G__35849;
init__$1 = G__35850;
continue;
}
} else {
return init__$1;
}
break;
}
});

cljs.core.ArrayNode.prototype.inode_lookup = (function (shift,hash,key,not_found){
var self__ = this;
var inode = this;
var idx = ((hash >>> shift) & 0x01f);
var node = (self__.arr[idx]);
if(!((node == null))){
return node.inode_lookup((shift + (5)),hash,key,not_found);
} else {
return not_found;
}
});

cljs.core.ArrayNode.prototype.inode_assoc_BANG_ = (function (edit__$1,shift,hash,key,val,added_leaf_QMARK_){
var self__ = this;
var inode = this;
var idx = ((hash >>> shift) & 0x01f);
var node = (self__.arr[idx]);
if((node == null)){
var editable = cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,idx,cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit__$1,(shift + (5)),hash,key,val,added_leaf_QMARK_));
editable.cnt = (editable.cnt + (1));

return editable;
} else {
var n = node.inode_assoc_BANG_(edit__$1,(shift + (5)),hash,key,val,added_leaf_QMARK_);
if((n === node)){
return inode;
} else {
return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,idx,n);
}
}
});

cljs.core.ArrayNode.prototype.inode_assoc = (function (shift,hash,key,val,added_leaf_QMARK_){
var self__ = this;
var inode = this;
var idx = ((hash >>> shift) & 0x01f);
var node = (self__.arr[idx]);
if((node == null)){
return (new cljs.core.ArrayNode(null,(self__.cnt + (1)),cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,idx,cljs.core.BitmapIndexedNode.EMPTY.inode_assoc((shift + (5)),hash,key,val,added_leaf_QMARK_))));
} else {
var n = node.inode_assoc((shift + (5)),hash,key,val,added_leaf_QMARK_);
if((n === node)){
return inode;
} else {
return (new cljs.core.ArrayNode(null,self__.cnt,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,idx,n)));
}
}
});

cljs.core.ArrayNode.prototype.inode_find = (function (shift,hash,key,not_found){
var self__ = this;
var inode = this;
var idx = ((hash >>> shift) & 0x01f);
var node = (self__.arr[idx]);
if(!((node == null))){
return node.inode_find((shift + (5)),hash,key,not_found);
} else {
return not_found;
}
});

cljs.core.ArrayNode.prototype.inode_without = (function (shift,hash,key){
var self__ = this;
var inode = this;
var idx = ((hash >>> shift) & 0x01f);
var node = (self__.arr[idx]);
if(!((node == null))){
var n = node.inode_without((shift + (5)),hash,key);
if((n === node)){
return inode;
} else {
if((n == null)){
if((self__.cnt <= (8))){
return cljs.core.pack_array_node(inode,null,idx);
} else {
return (new cljs.core.ArrayNode(null,(self__.cnt - (1)),cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,idx,n)));
}
} else {
return (new cljs.core.ArrayNode(null,self__.cnt,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,idx,n)));

}
}
} else {
return inode;
}
});

cljs.core.ArrayNode.cljs$lang$type = true;

cljs.core.ArrayNode.cljs$lang$ctorStr = "cljs.core/ArrayNode";

cljs.core.ArrayNode.cljs$lang$ctorPrWriter = (function (this__24859__auto__,writer__24860__auto__,opt__24861__auto__){
return cljs.core._write(writer__24860__auto__,"cljs.core/ArrayNode");
});

cljs.core.__GT_ArrayNode = (function __GT_ArrayNode(edit,cnt,arr){
return (new cljs.core.ArrayNode(edit,cnt,arr));
});

cljs.core.hash_collision_node_find_index = (function hash_collision_node_find_index(arr,cnt,key){
var lim = ((2) * cnt);
var i = (0);
while(true){
if((i < lim)){
if(cljs.core.key_test(key,(arr[i]))){
return i;
} else {
var G__35851 = (i + (2));
i = G__35851;
continue;
}
} else {
return (-1);
}
break;
}
});

/**
* @constructor
*/
cljs.core.HashCollisionNode = (function (edit,collision_hash,cnt,arr){
this.edit = edit;
this.collision_hash = collision_hash;
this.cnt = cnt;
this.arr = arr;
})
cljs.core.HashCollisionNode.prototype.ensure_editable = (function (e){
var self__ = this;
var inode = this;
if((e === self__.edit)){
return inode;
} else {
var new_arr = (new Array(((2) * (self__.cnt + (1)))));
cljs.core.array_copy(self__.arr,(0),new_arr,(0),((2) * self__.cnt));

return (new cljs.core.HashCollisionNode(e,self__.collision_hash,self__.cnt,new_arr));
}
});

cljs.core.HashCollisionNode.prototype.inode_without_BANG_ = (function (edit__$1,shift,hash,key,removed_leaf_QMARK_){
var self__ = this;
var inode = this;
var idx = cljs.core.hash_collision_node_find_index(self__.arr,self__.cnt,key);
if((idx === (-1))){
return inode;
} else {
(removed_leaf_QMARK_[(0)] = true);

if((self__.cnt === (1))){
return null;
} else {
var editable = inode.ensure_editable(edit__$1);
var earr = editable.arr;
(earr[idx] = (earr[(((2) * self__.cnt) - (2))]));

(earr[(idx + (1))] = (earr[(((2) * self__.cnt) - (1))]));

(earr[(((2) * self__.cnt) - (1))] = null);

(earr[(((2) * self__.cnt) - (2))] = null);

editable.cnt = (editable.cnt - (1));

return editable;
}
}
});

cljs.core.HashCollisionNode.prototype.inode_seq = (function (){
var self__ = this;
var inode = this;
var G__35852 = self__.arr;
return (cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1 ? cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1(G__35852) : cljs.core.create_inode_seq.call(null,G__35852));
});

cljs.core.HashCollisionNode.prototype.kv_reduce = (function (f,init){
var self__ = this;
var inode = this;
return cljs.core.inode_kv_reduce(self__.arr,f,init);
});

cljs.core.HashCollisionNode.prototype.inode_lookup = (function (shift,hash,key,not_found){
var self__ = this;
var inode = this;
var idx = cljs.core.hash_collision_node_find_index(self__.arr,self__.cnt,key);
if((idx < (0))){
return not_found;
} else {
if(cljs.core.key_test(key,(self__.arr[idx]))){
return (self__.arr[(idx + (1))]);
} else {
return not_found;

}
}
});

cljs.core.HashCollisionNode.prototype.inode_assoc_BANG_ = (function (edit__$1,shift,hash,key,val,added_leaf_QMARK_){
var self__ = this;
var inode = this;
if((hash === self__.collision_hash)){
var idx = cljs.core.hash_collision_node_find_index(self__.arr,self__.cnt,key);
if((idx === (-1))){
if((self__.arr.length > ((2) * self__.cnt))){
var editable = cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$6(inode,edit__$1,((2) * self__.cnt),key,(((2) * self__.cnt) + (1)),val);
added_leaf_QMARK_.val = true;

editable.cnt = (editable.cnt + (1));

return editable;
} else {
var len = self__.arr.length;
var new_arr = (new Array((len + (2))));
cljs.core.array_copy(self__.arr,(0),new_arr,(0),len);

(new_arr[len] = key);

(new_arr[(len + (1))] = val);

added_leaf_QMARK_.val = true;

return inode.ensure_editable_array(edit__$1,(self__.cnt + (1)),new_arr);
}
} else {
if(((self__.arr[(idx + (1))]) === val)){
return inode;
} else {
return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,(idx + (1)),val);
}
}
} else {
return (new cljs.core.BitmapIndexedNode(edit__$1,(1 << ((self__.collision_hash >>> shift) & 0x01f)),[null,inode,null,null])).inode_assoc_BANG_(edit__$1,shift,hash,key,val,added_leaf_QMARK_);
}
});

cljs.core.HashCollisionNode.prototype.inode_assoc = (function (shift,hash,key,val,added_leaf_QMARK_){
var self__ = this;
var inode = this;
if((hash === self__.collision_hash)){
var idx = cljs.core.hash_collision_node_find_index(self__.arr,self__.cnt,key);
if((idx === (-1))){
var len = ((2) * self__.cnt);
var new_arr = (new Array((len + (2))));
cljs.core.array_copy(self__.arr,(0),new_arr,(0),len);

(new_arr[len] = key);

(new_arr[(len + (1))] = val);

added_leaf_QMARK_.val = true;

return (new cljs.core.HashCollisionNode(null,self__.collision_hash,(self__.cnt + (1)),new_arr));
} else {
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2((self__.arr[idx]),val)){
return inode;
} else {
return (new cljs.core.HashCollisionNode(null,self__.collision_hash,self__.cnt,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,(idx + (1)),val)));
}
}
} else {
return (new cljs.core.BitmapIndexedNode(null,(1 << ((self__.collision_hash >>> shift) & 0x01f)),[null,inode])).inode_assoc(shift,hash,key,val,added_leaf_QMARK_);
}
});

cljs.core.HashCollisionNode.prototype.ensure_editable_array = (function (e,count,array){
var self__ = this;
var inode = this;
if((e === self__.edit)){
self__.arr = array;

self__.cnt = count;

return inode;
} else {
return (new cljs.core.HashCollisionNode(self__.edit,self__.collision_hash,count,array));
}
});

cljs.core.HashCollisionNode.prototype.inode_find = (function (shift,hash,key,not_found){
var self__ = this;
var inode = this;
var idx = cljs.core.hash_collision_node_find_index(self__.arr,self__.cnt,key);
if((idx < (0))){
return not_found;
} else {
if(cljs.core.key_test(key,(self__.arr[idx]))){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(self__.arr[idx]),(self__.arr[(idx + (1))])], null);
} else {
return not_found;

}
}
});

cljs.core.HashCollisionNode.prototype.inode_without = (function (shift,hash,key){
var self__ = this;
var inode = this;
var idx = cljs.core.hash_collision_node_find_index(self__.arr,self__.cnt,key);
if((idx === (-1))){
return inode;
} else {
if((self__.cnt === (1))){
return null;
} else {
return (new cljs.core.HashCollisionNode(null,self__.collision_hash,(self__.cnt - (1)),cljs.core.remove_pair(self__.arr,cljs.core.quot(idx,(2)))));

}
}
});

cljs.core.HashCollisionNode.cljs$lang$type = true;

cljs.core.HashCollisionNode.cljs$lang$ctorStr = "cljs.core/HashCollisionNode";

cljs.core.HashCollisionNode.cljs$lang$ctorPrWriter = (function (this__24859__auto__,writer__24860__auto__,opt__24861__auto__){
return cljs.core._write(writer__24860__auto__,"cljs.core/HashCollisionNode");
});

cljs.core.__GT_HashCollisionNode = (function __GT_HashCollisionNode(edit,collision_hash,cnt,arr){
return (new cljs.core.HashCollisionNode(edit,collision_hash,cnt,arr));
});

cljs.core.create_node = (function() {
var create_node = null;
var create_node__6 = (function (shift,key1,val1,key2hash,key2,val2){
var key1hash = cljs.core.hash(key1);
if((key1hash === key2hash)){
return (new cljs.core.HashCollisionNode(null,key1hash,(2),[key1,val1,key2,val2]));
} else {
var added_leaf_QMARK_ = (new cljs.core.Box(false));
return cljs.core.BitmapIndexedNode.EMPTY.inode_assoc(shift,key1hash,key1,val1,added_leaf_QMARK_).inode_assoc(shift,key2hash,key2,val2,added_leaf_QMARK_);
}
});
var create_node__7 = (function (edit,shift,key1,val1,key2hash,key2,val2){
var key1hash = cljs.core.hash(key1);
if((key1hash === key2hash)){
return (new cljs.core.HashCollisionNode(null,key1hash,(2),[key1,val1,key2,val2]));
} else {
var added_leaf_QMARK_ = (new cljs.core.Box(false));
return cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit,shift,key1hash,key1,val1,added_leaf_QMARK_).inode_assoc_BANG_(edit,shift,key2hash,key2,val2,added_leaf_QMARK_);
}
});
create_node = function(edit,shift,key1,val1,key2hash,key2,val2){
switch(arguments.length){
case 6:
return create_node__6.call(this,edit,shift,key1,val1,key2hash,key2);
case 7:
return create_node__7.call(this,edit,shift,key1,val1,key2hash,key2,val2);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
create_node.cljs$core$IFn$_invoke$arity$6 = create_node__6;
create_node.cljs$core$IFn$_invoke$arity$7 = create_node__7;
return create_node;
})()
;

/**
* @constructor
*/
cljs.core.NodeSeq = (function (meta,nodes,i,s,__hash){
this.meta = meta;
this.nodes = nodes;
this.i = i;
this.s = s;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32374860;
})
cljs.core.NodeSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.NodeSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.NodeSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.NodeSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__24693__auto__ = self__.__hash;
if(!((h__24693__auto__ == null))){
return h__24693__auto__;
} else {
var h__24693__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__24693__auto____$1;

return h__24693__auto____$1;
}
});

cljs.core.NodeSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.NodeSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.NodeSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.NodeSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.NodeSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.s == null)){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(self__.nodes[self__.i]),(self__.nodes[(self__.i + (1))])], null);
} else {
return cljs.core.first(self__.s);
}
});

cljs.core.NodeSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.s == null)){
var G__35853 = self__.nodes;
var G__35854 = (self__.i + (2));
var G__35855 = null;
return (cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3 ? cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3(G__35853,G__35854,G__35855) : cljs.core.create_inode_seq.call(null,G__35853,G__35854,G__35855));
} else {
var G__35856 = self__.nodes;
var G__35857 = self__.i;
var G__35858 = cljs.core.next(self__.s);
return (cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3 ? cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3(G__35856,G__35857,G__35858) : cljs.core.create_inode_seq.call(null,G__35856,G__35857,G__35858));
}
});

cljs.core.NodeSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return this$__$1;
});

cljs.core.NodeSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.NodeSeq(meta__$1,self__.nodes,self__.i,self__.s,self__.__hash));
});

cljs.core.NodeSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.NodeSeq.cljs$lang$type = true;

cljs.core.NodeSeq.cljs$lang$ctorStr = "cljs.core/NodeSeq";

cljs.core.NodeSeq.cljs$lang$ctorPrWriter = (function (this__24859__auto__,writer__24860__auto__,opt__24861__auto__){
return cljs.core._write(writer__24860__auto__,"cljs.core/NodeSeq");
});

cljs.core.__GT_NodeSeq = (function __GT_NodeSeq(meta,nodes,i,s,__hash){
return (new cljs.core.NodeSeq(meta,nodes,i,s,__hash));
});

(cljs.core.NodeSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__25250__auto__ = this;
return cljs.core.es6_iterator(this__25250__auto__);
}));
cljs.core.create_inode_seq = (function() {
var create_inode_seq = null;
var create_inode_seq__1 = (function (nodes){
return create_inode_seq.cljs$core$IFn$_invoke$arity$3(nodes,(0),null);
});
var create_inode_seq__3 = (function (nodes,i,s){
if((s == null)){
var len = nodes.length;
var j = i;
while(true){
if((j < len)){
if(!(((nodes[j]) == null))){
return (new cljs.core.NodeSeq(null,nodes,j,null,null));
} else {
var temp__4124__auto__ = (nodes[(j + (1))]);
if(cljs.core.truth_(temp__4124__auto__)){
var node = temp__4124__auto__;
var temp__4124__auto____$1 = node.inode_seq();
if(cljs.core.truth_(temp__4124__auto____$1)){
var node_seq = temp__4124__auto____$1;
return (new cljs.core.NodeSeq(null,nodes,(j + (2)),node_seq,null));
} else {
var G__35862 = (j + (2));
j = G__35862;
continue;
}
} else {
var G__35863 = (j + (2));
j = G__35863;
continue;
}
}
} else {
return null;
}
break;
}
} else {
return (new cljs.core.NodeSeq(null,nodes,i,s,null));
}
});
create_inode_seq = function(nodes,i,s){
switch(arguments.length){
case 1:
return create_inode_seq__1.call(this,nodes);
case 3:
return create_inode_seq__3.call(this,nodes,i,s);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
create_inode_seq.cljs$core$IFn$_invoke$arity$1 = create_inode_seq__1;
create_inode_seq.cljs$core$IFn$_invoke$arity$3 = create_inode_seq__3;
return create_inode_seq;
})()
;

/**
* @constructor
*/
cljs.core.ArrayNodeSeq = (function (meta,nodes,i,s,__hash){
this.meta = meta;
this.nodes = nodes;
this.i = i;
this.s = s;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32374860;
})
cljs.core.ArrayNodeSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.ArrayNodeSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__24693__auto__ = self__.__hash;
if(!((h__24693__auto__ == null))){
return h__24693__auto__;
} else {
var h__24693__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__24693__auto____$1;

return h__24693__auto____$1;
}
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.first(self__.s);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var G__35864 = null;
var G__35865 = self__.nodes;
var G__35866 = self__.i;
var G__35867 = cljs.core.next(self__.s);
return (cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$4(G__35864,G__35865,G__35866,G__35867) : cljs.core.create_array_node_seq.call(null,G__35864,G__35865,G__35866,G__35867));
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return this$__$1;
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.ArrayNodeSeq(meta__$1,self__.nodes,self__.i,self__.s,self__.__hash));
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.ArrayNodeSeq.cljs$lang$type = true;

cljs.core.ArrayNodeSeq.cljs$lang$ctorStr = "cljs.core/ArrayNodeSeq";

cljs.core.ArrayNodeSeq.cljs$lang$ctorPrWriter = (function (this__24859__auto__,writer__24860__auto__,opt__24861__auto__){
return cljs.core._write(writer__24860__auto__,"cljs.core/ArrayNodeSeq");
});

cljs.core.__GT_ArrayNodeSeq = (function __GT_ArrayNodeSeq(meta,nodes,i,s,__hash){
return (new cljs.core.ArrayNodeSeq(meta,nodes,i,s,__hash));
});

(cljs.core.ArrayNodeSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__25250__auto__ = this;
return cljs.core.es6_iterator(this__25250__auto__);
}));
cljs.core.create_array_node_seq = (function() {
var create_array_node_seq = null;
var create_array_node_seq__1 = (function (nodes){
return create_array_node_seq.cljs$core$IFn$_invoke$arity$4(null,nodes,(0),null);
});
var create_array_node_seq__4 = (function (meta,nodes,i,s){
if((s == null)){
var len = nodes.length;
var j = i;
while(true){
if((j < len)){
var temp__4124__auto__ = (nodes[j]);
if(cljs.core.truth_(temp__4124__auto__)){
var nj = temp__4124__auto__;
var temp__4124__auto____$1 = nj.inode_seq();
if(cljs.core.truth_(temp__4124__auto____$1)){
var ns = temp__4124__auto____$1;
return (new cljs.core.ArrayNodeSeq(meta,nodes,(j + (1)),ns,null));
} else {
var G__35872 = (j + (1));
j = G__35872;
continue;
}
} else {
var G__35873 = (j + (1));
j = G__35873;
continue;
}
} else {
return null;
}
break;
}
} else {
return (new cljs.core.ArrayNodeSeq(meta,nodes,i,s,null));
}
});
create_array_node_seq = function(meta,nodes,i,s){
switch(arguments.length){
case 1:
return create_array_node_seq__1.call(this,meta);
case 4:
return create_array_node_seq__4.call(this,meta,nodes,i,s);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
create_array_node_seq.cljs$core$IFn$_invoke$arity$1 = create_array_node_seq__1;
create_array_node_seq.cljs$core$IFn$_invoke$arity$4 = create_array_node_seq__4;
return create_array_node_seq;
})()
;

/**
* @constructor
*/
cljs.core.PersistentHashMap = (function (meta,cnt,root,has_nil_QMARK_,nil_val,__hash){
this.meta = meta;
this.cnt = cnt;
this.root = root;
this.has_nil_QMARK_ = has_nil_QMARK_;
this.nil_val = nil_val;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 16123663;
this.cljs$lang$protocol_mask$partition1$ = 8196;
})
cljs.core.PersistentHashMap.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentHashMap.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentHashMap.prototype.keys = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator((function (){var G__35875 = coll;
return (cljs.core.keys.cljs$core$IFn$_invoke$arity$1 ? cljs.core.keys.cljs$core$IFn$_invoke$arity$1(G__35875) : cljs.core.keys.call(null,G__35875));
})());
});

cljs.core.PersistentHashMap.prototype.entries = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_entries_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentHashMap.prototype.values = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator((function (){var G__35876 = coll;
return (cljs.core.vals.cljs$core$IFn$_invoke$arity$1 ? cljs.core.vals.cljs$core$IFn$_invoke$arity$1(G__35876) : cljs.core.vals.call(null,G__35876));
})());
});

cljs.core.PersistentHashMap.prototype.has = (function (k){
var self__ = this;
var coll = this;
return cljs.core.contains_QMARK_(coll,k);
});

cljs.core.PersistentHashMap.prototype.get = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentHashMap.prototype.forEach = (function (f){
var self__ = this;
var coll = this;
var seq__35877 = cljs.core.seq(coll);
var chunk__35878 = null;
var count__35879 = (0);
var i__35880 = (0);
while(true){
if((i__35880 < count__35879)){
var vec__35881 = chunk__35878.cljs$core$IIndexed$_nth$arity$2(null,i__35880);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__35881,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__35881,(1),null);
var G__35882_35893 = v;
var G__35883_35894 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__35882_35893,G__35883_35894) : f.call(null,G__35882_35893,G__35883_35894));

var G__35895 = seq__35877;
var G__35896 = chunk__35878;
var G__35897 = count__35879;
var G__35898 = (i__35880 + (1));
seq__35877 = G__35895;
chunk__35878 = G__35896;
count__35879 = G__35897;
i__35880 = G__35898;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__35877);
if(temp__4126__auto__){
var seq__35877__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__35877__$1)){
var c__25059__auto__ = cljs.core.chunk_first(seq__35877__$1);
var G__35899 = cljs.core.chunk_rest(seq__35877__$1);
var G__35900 = c__25059__auto__;
var G__35901 = cljs.core.count(c__25059__auto__);
var G__35902 = (0);
seq__35877 = G__35899;
chunk__35878 = G__35900;
count__35879 = G__35901;
i__35880 = G__35902;
continue;
} else {
var vec__35884 = cljs.core.first(seq__35877__$1);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__35884,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__35884,(1),null);
var G__35885_35903 = v;
var G__35886_35904 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__35885_35903,G__35886_35904) : f.call(null,G__35885_35903,G__35886_35904));

var G__35905 = cljs.core.next(seq__35877__$1);
var G__35906 = null;
var G__35907 = (0);
var G__35908 = (0);
seq__35877 = G__35905;
chunk__35878 = G__35906;
count__35879 = G__35907;
i__35880 = G__35908;
continue;
}
} else {
return null;
}
}
break;
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.PersistentHashMap.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
if((k == null)){
if(self__.has_nil_QMARK_){
return self__.nil_val;
} else {
return not_found;
}
} else {
if((self__.root == null)){
return not_found;
} else {
return self__.root.inode_lookup((0),cljs.core.hash(k),k,not_found);

}
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = (function (coll,f,init){
var self__ = this;
var coll__$1 = this;
var init__$1 = ((self__.has_nil_QMARK_)?(function (){var G__35887 = init;
var G__35888 = null;
var G__35889 = self__.nil_val;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__35887,G__35888,G__35889) : f.call(null,G__35887,G__35888,G__35889));
})():init);
if(cljs.core.reduced_QMARK_(init__$1)){
var G__35890 = init__$1;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__35890) : cljs.core.deref.call(null,G__35890));
} else {
if(!((self__.root == null))){
return self__.root.kv_reduce(f,init__$1);
} else {
return init__$1;

}
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentHashMap.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.PersistentHashMap(self__.meta,self__.cnt,self__.root,self__.has_nil_QMARK_,self__.nil_val,self__.__hash));
});

cljs.core.PersistentHashMap.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.cnt;
});

cljs.core.PersistentHashMap.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__24693__auto__ = self__.__hash;
if(!((h__24693__auto__ == null))){
return h__24693__auto__;
} else {
var h__24693__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
self__.__hash = h__24693__auto____$1;

return h__24693__auto____$1;
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_map(coll__$1,other);
});

cljs.core.PersistentHashMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.TransientHashMap((function (){var obj35892 = {};
return obj35892;
})(),self__.root,self__.cnt,self__.has_nil_QMARK_,self__.nil_val));
});

cljs.core.PersistentHashMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._with_meta(cljs.core.PersistentHashMap.EMPTY,self__.meta);
});

cljs.core.PersistentHashMap.prototype.cljs$core$IMap$_dissoc$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
if((k == null)){
if(self__.has_nil_QMARK_){
return (new cljs.core.PersistentHashMap(self__.meta,(self__.cnt - (1)),self__.root,false,null,null));
} else {
return coll__$1;
}
} else {
if((self__.root == null)){
return coll__$1;
} else {
var new_root = self__.root.inode_without((0),cljs.core.hash(k),k);
if((new_root === self__.root)){
return coll__$1;
} else {
return (new cljs.core.PersistentHashMap(self__.meta,(self__.cnt - (1)),new_root,self__.has_nil_QMARK_,self__.nil_val,null));
}

}
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (coll,k,v){
var self__ = this;
var coll__$1 = this;
if((k == null)){
if((self__.has_nil_QMARK_) && ((v === self__.nil_val))){
return coll__$1;
} else {
return (new cljs.core.PersistentHashMap(self__.meta,((self__.has_nil_QMARK_)?self__.cnt:(self__.cnt + (1))),self__.root,true,v,null));
}
} else {
var added_leaf_QMARK_ = (new cljs.core.Box(false));
var new_root = (((self__.root == null))?cljs.core.BitmapIndexedNode.EMPTY:self__.root).inode_assoc((0),cljs.core.hash(k),k,v,added_leaf_QMARK_);
if((new_root === self__.root)){
return coll__$1;
} else {
return (new cljs.core.PersistentHashMap(self__.meta,((added_leaf_QMARK_.val)?(self__.cnt + (1)):self__.cnt),new_root,self__.has_nil_QMARK_,self__.nil_val,null));
}
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
if((k == null)){
return self__.has_nil_QMARK_;
} else {
if((self__.root == null)){
return false;
} else {
return !((self__.root.inode_lookup((0),cljs.core.hash(k),k,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel));

}
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
var s = ((!((self__.root == null)))?self__.root.inode_seq():null);
if(self__.has_nil_QMARK_){
return cljs.core.cons(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null,self__.nil_val], null),s);
} else {
return s;
}
} else {
return null;
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentHashMap(meta__$1,self__.cnt,self__.root,self__.has_nil_QMARK_,self__.nil_val,self__.__hash));
});

cljs.core.PersistentHashMap.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,entry){
var self__ = this;
var coll__$1 = this;
if(cljs.core.vector_QMARK_(entry)){
return cljs.core._assoc(coll__$1,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(1)));
} else {
var ret = coll__$1;
var es = cljs.core.seq(entry);
while(true){
if((es == null)){
return ret;
} else {
var e = cljs.core.first(es);
if(cljs.core.vector_QMARK_(e)){
var G__35909 = cljs.core._assoc(ret,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e,(1)));
var G__35910 = cljs.core.next(es);
ret = G__35909;
es = G__35910;
continue;
} else {
throw (new Error("conj on a map takes map entries or seqables of map entries"));
}
}
break;
}
}
});

cljs.core.PersistentHashMap.prototype.call = (function() {
var G__35911 = null;
var G__35911__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__35911__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__35911 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__35911__2.call(this,self__,k);
case 3:
return G__35911__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__35911.cljs$core$IFn$_invoke$arity$2 = G__35911__2;
G__35911.cljs$core$IFn$_invoke$arity$3 = G__35911__3;
return G__35911;
})()
;

cljs.core.PersistentHashMap.prototype.apply = (function (self__,args35874){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args35874)));
});

cljs.core.PersistentHashMap.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentHashMap.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.PersistentHashMap.cljs$lang$type = true;

cljs.core.PersistentHashMap.cljs$lang$ctorStr = "cljs.core/PersistentHashMap";

cljs.core.PersistentHashMap.cljs$lang$ctorPrWriter = (function (this__24859__auto__,writer__24860__auto__,opt__24861__auto__){
return cljs.core._write(writer__24860__auto__,"cljs.core/PersistentHashMap");
});

cljs.core.__GT_PersistentHashMap = (function __GT_PersistentHashMap(meta,cnt,root,has_nil_QMARK_,nil_val,__hash){
return (new cljs.core.PersistentHashMap(meta,cnt,root,has_nil_QMARK_,nil_val,__hash));
});

cljs.core.PersistentHashMap.EMPTY = (new cljs.core.PersistentHashMap(null,(0),null,false,null,(0)));
cljs.core.PersistentHashMap.fromArrays = (function (ks,vs){
var len = ks.length;
var i = (0);
var out = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
while(true){
if((i < len)){
var G__35912 = (i + (1));
var G__35913 = out.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3(null,(ks[i]),(vs[i]));
i = G__35912;
out = G__35913;
continue;
} else {
return cljs.core.persistent_BANG_(out);
}
break;
}
});
(cljs.core.PersistentHashMap.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__25250__auto__ = this;
return cljs.core.es6_iterator(this__25250__auto__);
}));

/**
* @constructor
*/
cljs.core.TransientHashMap = (function (edit,root,count,has_nil_QMARK_,nil_val){
this.edit = edit;
this.root = root;
this.count = count;
this.has_nil_QMARK_ = has_nil_QMARK_;
this.nil_val = nil_val;
this.cljs$lang$protocol_mask$partition1$ = 56;
this.cljs$lang$protocol_mask$partition0$ = 258;
})
cljs.core.TransientHashMap.prototype.cljs$core$ITransientMap$_dissoc_BANG_$arity$2 = (function (tcoll,key){
var self__ = this;
var tcoll__$1 = this;
return tcoll__$1.without_BANG_(key);
});

cljs.core.TransientHashMap.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = (function (tcoll,key,val){
var self__ = this;
var tcoll__$1 = this;
return tcoll__$1.assoc_BANG_(key,val);
});

cljs.core.TransientHashMap.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = (function (tcoll,val){
var self__ = this;
var tcoll__$1 = this;
return tcoll__$1.conj_BANG_(val);
});

cljs.core.TransientHashMap.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
return tcoll__$1.persistent_BANG_();
});

cljs.core.TransientHashMap.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (tcoll,k){
var self__ = this;
var tcoll__$1 = this;
if((k == null)){
if(self__.has_nil_QMARK_){
return self__.nil_val;
} else {
return null;
}
} else {
if((self__.root == null)){
return null;
} else {
return self__.root.inode_lookup((0),cljs.core.hash(k),k);
}
}
});

cljs.core.TransientHashMap.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (tcoll,k,not_found){
var self__ = this;
var tcoll__$1 = this;
if((k == null)){
if(self__.has_nil_QMARK_){
return self__.nil_val;
} else {
return not_found;
}
} else {
if((self__.root == null)){
return not_found;
} else {
return self__.root.inode_lookup((0),cljs.core.hash(k),k,not_found);
}
}
});

cljs.core.TransientHashMap.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if(self__.edit){
return self__.count;
} else {
throw (new Error("count after persistent!"));
}
});

cljs.core.TransientHashMap.prototype.conj_BANG_ = (function (o){
var self__ = this;
var tcoll = this;
if(self__.edit){
if((function (){var G__35914 = o;
if(G__35914){
var bit__24953__auto__ = (G__35914.cljs$lang$protocol_mask$partition0$ & (2048));
if((bit__24953__auto__) || (G__35914.cljs$core$IMapEntry$)){
return true;
} else {
if((!G__35914.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IMapEntry,G__35914);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IMapEntry,G__35914);
}
})()){
return tcoll.assoc_BANG_((function (){var G__35915 = o;
return (cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__35915) : cljs.core.key.call(null,G__35915));
})(),(function (){var G__35916 = o;
return (cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(G__35916) : cljs.core.val.call(null,G__35916));
})());
} else {
var es = cljs.core.seq(o);
var tcoll__$1 = tcoll;
while(true){
var temp__4124__auto__ = cljs.core.first(es);
if(cljs.core.truth_(temp__4124__auto__)){
var e = temp__4124__auto__;
var G__35919 = cljs.core.next(es);
var G__35920 = tcoll__$1.assoc_BANG_((function (){var G__35917 = e;
return (cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__35917) : cljs.core.key.call(null,G__35917));
})(),(function (){var G__35918 = e;
return (cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(G__35918) : cljs.core.val.call(null,G__35918));
})());
es = G__35919;
tcoll__$1 = G__35920;
continue;
} else {
return tcoll__$1;
}
break;
}
}
} else {
throw (new Error("conj! after persistent"));
}
});

cljs.core.TransientHashMap.prototype.assoc_BANG_ = (function (k,v){
var self__ = this;
var tcoll = this;
if(self__.edit){
if((k == null)){
if((self__.nil_val === v)){
} else {
self__.nil_val = v;
}

if(self__.has_nil_QMARK_){
} else {
self__.count = (self__.count + (1));

self__.has_nil_QMARK_ = true;
}

return tcoll;
} else {
var added_leaf_QMARK_ = (new cljs.core.Box(false));
var node = (((self__.root == null))?cljs.core.BitmapIndexedNode.EMPTY:self__.root).inode_assoc_BANG_(self__.edit,(0),cljs.core.hash(k),k,v,added_leaf_QMARK_);
if((node === self__.root)){
} else {
self__.root = node;
}

if(added_leaf_QMARK_.val){
self__.count = (self__.count + (1));
} else {
}

return tcoll;
}
} else {
throw (new Error("assoc! after persistent!"));
}
});

cljs.core.TransientHashMap.prototype.without_BANG_ = (function (k){
var self__ = this;
var tcoll = this;
if(self__.edit){
if((k == null)){
if(self__.has_nil_QMARK_){
self__.has_nil_QMARK_ = false;

self__.nil_val = null;

self__.count = (self__.count - (1));

return tcoll;
} else {
return tcoll;
}
} else {
if((self__.root == null)){
return tcoll;
} else {
var removed_leaf_QMARK_ = (new cljs.core.Box(false));
var node = self__.root.inode_without_BANG_(self__.edit,(0),cljs.core.hash(k),k,removed_leaf_QMARK_);
if((node === self__.root)){
} else {
self__.root = node;
}

if(cljs.core.truth_((removed_leaf_QMARK_[(0)]))){
self__.count = (self__.count - (1));
} else {
}

return tcoll;
}
}
} else {
throw (new Error("dissoc! after persistent!"));
}
});

cljs.core.TransientHashMap.prototype.persistent_BANG_ = (function (){
var self__ = this;
var tcoll = this;
if(self__.edit){
self__.edit = null;

return (new cljs.core.PersistentHashMap(null,self__.count,self__.root,self__.has_nil_QMARK_,self__.nil_val,null));
} else {
throw (new Error("persistent! called twice"));
}
});

cljs.core.TransientHashMap.cljs$lang$type = true;

cljs.core.TransientHashMap.cljs$lang$ctorStr = "cljs.core/TransientHashMap";

cljs.core.TransientHashMap.cljs$lang$ctorPrWriter = (function (this__24859__auto__,writer__24860__auto__,opt__24861__auto__){
return cljs.core._write(writer__24860__auto__,"cljs.core/TransientHashMap");
});

cljs.core.__GT_TransientHashMap = (function __GT_TransientHashMap(edit,root,count,has_nil_QMARK_,nil_val){
return (new cljs.core.TransientHashMap(edit,root,count,has_nil_QMARK_,nil_val));
});

cljs.core.tree_map_seq_push = (function tree_map_seq_push(node,stack,ascending_QMARK_){
var t = node;
var stack__$1 = stack;
while(true){
if(!((t == null))){
var G__35921 = ((ascending_QMARK_)?t.left:t.right);
var G__35922 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(stack__$1,t);
t = G__35921;
stack__$1 = G__35922;
continue;
} else {
return stack__$1;
}
break;
}
});

/**
* @constructor
*/
cljs.core.PersistentTreeMapSeq = (function (meta,stack,ascending_QMARK_,cnt,__hash){
this.meta = meta;
this.stack = stack;
this.ascending_QMARK_ = ascending_QMARK_;
this.cnt = cnt;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32374862;
})
cljs.core.PersistentTreeMapSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentTreeMapSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt < (0))){
return (cljs.core.count(cljs.core.next(coll__$1)) + (1));
} else {
return self__.cnt;
}
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__24693__auto__ = self__.__hash;
if(!((h__24693__auto__ == null))){
return h__24693__auto__;
} else {
var h__24693__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__24693__auto____$1;

return h__24693__auto____$1;
}
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return cljs.core.peek(self__.stack);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
var t = cljs.core.first(self__.stack);
var next_stack = cljs.core.tree_map_seq_push(((self__.ascending_QMARK_)?t.right:t.left),cljs.core.next(self__.stack),self__.ascending_QMARK_);
if(!((next_stack == null))){
return (new cljs.core.PersistentTreeMapSeq(null,next_stack,self__.ascending_QMARK_,(self__.cnt - (1)),null));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return this$__$1;
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeMapSeq(meta__$1,self__.stack,self__.ascending_QMARK_,self__.cnt,self__.__hash));
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.PersistentTreeMapSeq.cljs$lang$type = true;

cljs.core.PersistentTreeMapSeq.cljs$lang$ctorStr = "cljs.core/PersistentTreeMapSeq";

cljs.core.PersistentTreeMapSeq.cljs$lang$ctorPrWriter = (function (this__24859__auto__,writer__24860__auto__,opt__24861__auto__){
return cljs.core._write(writer__24860__auto__,"cljs.core/PersistentTreeMapSeq");
});

cljs.core.__GT_PersistentTreeMapSeq = (function __GT_PersistentTreeMapSeq(meta,stack,ascending_QMARK_,cnt,__hash){
return (new cljs.core.PersistentTreeMapSeq(meta,stack,ascending_QMARK_,cnt,__hash));
});

(cljs.core.PersistentTreeMapSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__25250__auto__ = this;
return cljs.core.es6_iterator(this__25250__auto__);
}));
cljs.core.create_tree_map_seq = (function create_tree_map_seq(tree,ascending_QMARK_,cnt){
return (new cljs.core.PersistentTreeMapSeq(null,cljs.core.tree_map_seq_push(tree,null,ascending_QMARK_),ascending_QMARK_,cnt,null));
});

cljs.core.balance_left = (function balance_left(key,val,ins,right){
if((ins instanceof cljs.core.RedNode)){
if((ins.left instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(ins.key,ins.val,ins.left.blacken(),(new cljs.core.BlackNode(key,val,ins.right,right,null)),null));
} else {
if((ins.right instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(ins.right.key,ins.right.val,(new cljs.core.BlackNode(ins.key,ins.val,ins.left,ins.right.left,null)),(new cljs.core.BlackNode(key,val,ins.right.right,right,null)),null));
} else {
return (new cljs.core.BlackNode(key,val,ins,right,null));

}
}
} else {
return (new cljs.core.BlackNode(key,val,ins,right,null));
}
});
cljs.core.balance_right = (function balance_right(key,val,left,ins){
if((ins instanceof cljs.core.RedNode)){
if((ins.right instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(ins.key,ins.val,(new cljs.core.BlackNode(key,val,left,ins.left,null)),ins.right.blacken(),null));
} else {
if((ins.left instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(ins.left.key,ins.left.val,(new cljs.core.BlackNode(key,val,left,ins.left.left,null)),(new cljs.core.BlackNode(ins.key,ins.val,ins.left.right,ins.right,null)),null));
} else {
return (new cljs.core.BlackNode(key,val,left,ins,null));

}
}
} else {
return (new cljs.core.BlackNode(key,val,left,ins,null));
}
});
cljs.core.balance_left_del = (function balance_left_del(key,val,del,right){
if((del instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(key,val,del.blacken(),right,null));
} else {
if((right instanceof cljs.core.BlackNode)){
return cljs.core.balance_right(key,val,del,right.redden());
} else {
if(((right instanceof cljs.core.RedNode)) && ((right.left instanceof cljs.core.BlackNode))){
return (new cljs.core.RedNode(right.left.key,right.left.val,(new cljs.core.BlackNode(key,val,del,right.left.left,null)),cljs.core.balance_right(right.key,right.val,right.left.right,right.right.redden()),null));
} else {
throw (new Error("red-black tree invariant violation"));

}
}
}
});
cljs.core.balance_right_del = (function balance_right_del(key,val,left,del){
if((del instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(key,val,left,del.blacken(),null));
} else {
if((left instanceof cljs.core.BlackNode)){
return cljs.core.balance_left(key,val,left.redden(),del);
} else {
if(((left instanceof cljs.core.RedNode)) && ((left.right instanceof cljs.core.BlackNode))){
return (new cljs.core.RedNode(left.right.key,left.right.val,cljs.core.balance_left(left.key,left.val,left.left.redden(),left.right.left),(new cljs.core.BlackNode(key,val,left.right.right,del,null)),null));
} else {
throw (new Error("red-black tree invariant violation"));

}
}
}
});
cljs.core.tree_map_kv_reduce = (function tree_map_kv_reduce(node,f,init){
var init__$1 = ((!((node.left == null)))?tree_map_kv_reduce(node.left,f,init):init);
if(cljs.core.reduced_QMARK_(init__$1)){
var G__35935 = init__$1;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__35935) : cljs.core.deref.call(null,G__35935));
} else {
var init__$2 = (function (){var G__35936 = init__$1;
var G__35937 = node.key;
var G__35938 = node.val;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__35936,G__35937,G__35938) : f.call(null,G__35936,G__35937,G__35938));
})();
if(cljs.core.reduced_QMARK_(init__$2)){
var G__35939 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__35939) : cljs.core.deref.call(null,G__35939));
} else {
var init__$3 = ((!((node.right == null)))?tree_map_kv_reduce(node.right,f,init__$2):init__$2);
if(cljs.core.reduced_QMARK_(init__$3)){
var G__35940 = init__$3;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__35940) : cljs.core.deref.call(null,G__35940));
} else {
return init__$3;
}
}
}
});

/**
* @constructor
*/
cljs.core.BlackNode = (function (key,val,left,right,__hash){
this.key = key;
this.val = val;
this.left = left;
this.right = right;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32402207;
})
cljs.core.BlackNode.prototype.add_right = (function (ins){
var self__ = this;
var node = this;
return ins.balance_right(node);
});

cljs.core.BlackNode.prototype.redden = (function (){
var self__ = this;
var node = this;
return (new cljs.core.RedNode(self__.key,self__.val,self__.left,self__.right,null));
});

cljs.core.BlackNode.prototype.blacken = (function (){
var self__ = this;
var node = this;
return node;
});

cljs.core.BlackNode.prototype.add_left = (function (ins){
var self__ = this;
var node = this;
return ins.balance_left(node);
});

cljs.core.BlackNode.prototype.replace = (function (key__$1,val__$1,left__$1,right__$1){
var self__ = this;
var node = this;
return (new cljs.core.BlackNode(key__$1,val__$1,left__$1,right__$1,null));
});

cljs.core.BlackNode.prototype.balance_left = (function (parent){
var self__ = this;
var node = this;
return (new cljs.core.BlackNode(parent.key,parent.val,node,parent.right,null));
});

cljs.core.BlackNode.prototype.balance_right = (function (parent){
var self__ = this;
var node = this;
return (new cljs.core.BlackNode(parent.key,parent.val,parent.left,node,null));
});

cljs.core.BlackNode.prototype.remove_left = (function (del){
var self__ = this;
var node = this;
return cljs.core.balance_left_del(self__.key,self__.val,del,self__.right);
});

cljs.core.BlackNode.prototype.kv_reduce = (function (f,init){
var self__ = this;
var node = this;
return cljs.core.tree_map_kv_reduce(node,f,init);
});

cljs.core.BlackNode.prototype.remove_right = (function (del){
var self__ = this;
var node = this;
return cljs.core.balance_right_del(self__.key,self__.val,self__.left,del);
});

cljs.core.BlackNode.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (node,k){
var self__ = this;
var node__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(node__$1,k,null);
});

cljs.core.BlackNode.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (node,k,not_found){
var self__ = this;
var node__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(node__$1,k,not_found);
});

cljs.core.BlackNode.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (node,n){
var self__ = this;
var node__$1 = this;
if((n === (0))){
return self__.key;
} else {
if((n === (1))){
return self__.val;
} else {
return null;

}
}
});

cljs.core.BlackNode.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (node,n,not_found){
var self__ = this;
var node__$1 = this;
if((n === (0))){
return self__.key;
} else {
if((n === (1))){
return self__.val;
} else {
return not_found;

}
}
});

cljs.core.BlackNode.prototype.cljs$core$IVector$_assoc_n$arity$3 = (function (node,n,v){
var self__ = this;
var node__$1 = this;
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val], null).cljs$core$IVector$_assoc_n$arity$3(null,n,v);
});

cljs.core.BlackNode.prototype.cljs$core$IMeta$_meta$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return null;
});

cljs.core.BlackNode.prototype.cljs$core$ICounted$_count$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return (2);
});

cljs.core.BlackNode.prototype.cljs$core$IMapEntry$_key$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return self__.key;
});

cljs.core.BlackNode.prototype.cljs$core$IMapEntry$_val$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return self__.val;
});

cljs.core.BlackNode.prototype.cljs$core$IStack$_peek$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return self__.val;
});

cljs.core.BlackNode.prototype.cljs$core$IStack$_pop$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key], null);
});

cljs.core.BlackNode.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__24693__auto__ = self__.__hash;
if(!((h__24693__auto__ == null))){
return h__24693__auto__;
} else {
var h__24693__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__24693__auto____$1;

return h__24693__auto____$1;
}
});

cljs.core.BlackNode.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.BlackNode.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return cljs.core.PersistentVector.EMPTY;
});

cljs.core.BlackNode.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (node,f){
var self__ = this;
var node__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(node__$1,f);
});

cljs.core.BlackNode.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (node,f,start){
var self__ = this;
var node__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3(node__$1,f,start);
});

cljs.core.BlackNode.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (node,k,v){
var self__ = this;
var node__$1 = this;
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val], null),k,v);
});

cljs.core.BlackNode.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return cljs.core._conj(cljs.core._conj(cljs.core.List.EMPTY,self__.val),self__.key);
});

cljs.core.BlackNode.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (node,meta){
var self__ = this;
var node__$1 = this;
return cljs.core.with_meta(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val], null),meta);
});

cljs.core.BlackNode.prototype.cljs$core$ICollection$_conj$arity$2 = (function (node,o){
var self__ = this;
var node__$1 = this;
return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val,o], null);
});

cljs.core.BlackNode.prototype.call = (function() {
var G__35942 = null;
var G__35942__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var node = self____$1;
return node.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__35942__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var node = self____$1;
return node.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__35942 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__35942__2.call(this,self__,k);
case 3:
return G__35942__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__35942.cljs$core$IFn$_invoke$arity$2 = G__35942__2;
G__35942.cljs$core$IFn$_invoke$arity$3 = G__35942__3;
return G__35942;
})()
;

cljs.core.BlackNode.prototype.apply = (function (self__,args35941){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args35941)));
});

cljs.core.BlackNode.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var node = this;
return node.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.BlackNode.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var node = this;
return node.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.BlackNode.cljs$lang$type = true;

cljs.core.BlackNode.cljs$lang$ctorStr = "cljs.core/BlackNode";

cljs.core.BlackNode.cljs$lang$ctorPrWriter = (function (this__24859__auto__,writer__24860__auto__,opt__24861__auto__){
return cljs.core._write(writer__24860__auto__,"cljs.core/BlackNode");
});

cljs.core.__GT_BlackNode = (function __GT_BlackNode(key,val,left,right,__hash){
return (new cljs.core.BlackNode(key,val,left,right,__hash));
});

(cljs.core.BlackNode.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__25250__auto__ = this;
return cljs.core.es6_iterator(this__25250__auto__);
}));

/**
* @constructor
*/
cljs.core.RedNode = (function (key,val,left,right,__hash){
this.key = key;
this.val = val;
this.left = left;
this.right = right;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32402207;
})
cljs.core.RedNode.prototype.add_right = (function (ins){
var self__ = this;
var node = this;
return (new cljs.core.RedNode(self__.key,self__.val,self__.left,ins,null));
});

cljs.core.RedNode.prototype.redden = (function (){
var self__ = this;
var node = this;
throw (new Error("red-black tree invariant violation"));
});

cljs.core.RedNode.prototype.blacken = (function (){
var self__ = this;
var node = this;
return (new cljs.core.BlackNode(self__.key,self__.val,self__.left,self__.right,null));
});

cljs.core.RedNode.prototype.add_left = (function (ins){
var self__ = this;
var node = this;
return (new cljs.core.RedNode(self__.key,self__.val,ins,self__.right,null));
});

cljs.core.RedNode.prototype.replace = (function (key__$1,val__$1,left__$1,right__$1){
var self__ = this;
var node = this;
return (new cljs.core.RedNode(key__$1,val__$1,left__$1,right__$1,null));
});

cljs.core.RedNode.prototype.balance_left = (function (parent){
var self__ = this;
var node = this;
if((self__.left instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(self__.key,self__.val,self__.left.blacken(),(new cljs.core.BlackNode(parent.key,parent.val,self__.right,parent.right,null)),null));
} else {
if((self__.right instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(self__.right.key,self__.right.val,(new cljs.core.BlackNode(self__.key,self__.val,self__.left,self__.right.left,null)),(new cljs.core.BlackNode(parent.key,parent.val,self__.right.right,parent.right,null)),null));
} else {
return (new cljs.core.BlackNode(parent.key,parent.val,node,parent.right,null));

}
}
});

cljs.core.RedNode.prototype.balance_right = (function (parent){
var self__ = this;
var node = this;
if((self__.right instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(self__.key,self__.val,(new cljs.core.BlackNode(parent.key,parent.val,parent.left,self__.left,null)),self__.right.blacken(),null));
} else {
if((self__.left instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(self__.left.key,self__.left.val,(new cljs.core.BlackNode(parent.key,parent.val,parent.left,self__.left.left,null)),(new cljs.core.BlackNode(self__.key,self__.val,self__.left.right,self__.right,null)),null));
} else {
return (new cljs.core.BlackNode(parent.key,parent.val,parent.left,node,null));

}
}
});

cljs.core.RedNode.prototype.remove_left = (function (del){
var self__ = this;
var node = this;
return (new cljs.core.RedNode(self__.key,self__.val,del,self__.right,null));
});

cljs.core.RedNode.prototype.kv_reduce = (function (f,init){
var self__ = this;
var node = this;
return cljs.core.tree_map_kv_reduce(node,f,init);
});

cljs.core.RedNode.prototype.remove_right = (function (del){
var self__ = this;
var node = this;
return (new cljs.core.RedNode(self__.key,self__.val,self__.left,del,null));
});

cljs.core.RedNode.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (node,k){
var self__ = this;
var node__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(node__$1,k,null);
});

cljs.core.RedNode.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (node,k,not_found){
var self__ = this;
var node__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(node__$1,k,not_found);
});

cljs.core.RedNode.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (node,n){
var self__ = this;
var node__$1 = this;
if((n === (0))){
return self__.key;
} else {
if((n === (1))){
return self__.val;
} else {
return null;

}
}
});

cljs.core.RedNode.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (node,n,not_found){
var self__ = this;
var node__$1 = this;
if((n === (0))){
return self__.key;
} else {
if((n === (1))){
return self__.val;
} else {
return not_found;

}
}
});

cljs.core.RedNode.prototype.cljs$core$IVector$_assoc_n$arity$3 = (function (node,n,v){
var self__ = this;
var node__$1 = this;
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val], null).cljs$core$IVector$_assoc_n$arity$3(null,n,v);
});

cljs.core.RedNode.prototype.cljs$core$IMeta$_meta$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return null;
});

cljs.core.RedNode.prototype.cljs$core$ICounted$_count$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return (2);
});

cljs.core.RedNode.prototype.cljs$core$IMapEntry$_key$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return self__.key;
});

cljs.core.RedNode.prototype.cljs$core$IMapEntry$_val$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return self__.val;
});

cljs.core.RedNode.prototype.cljs$core$IStack$_peek$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return self__.val;
});

cljs.core.RedNode.prototype.cljs$core$IStack$_pop$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key], null);
});

cljs.core.RedNode.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__24693__auto__ = self__.__hash;
if(!((h__24693__auto__ == null))){
return h__24693__auto__;
} else {
var h__24693__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__24693__auto____$1;

return h__24693__auto____$1;
}
});

cljs.core.RedNode.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.RedNode.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return cljs.core.PersistentVector.EMPTY;
});

cljs.core.RedNode.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (node,f){
var self__ = this;
var node__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(node__$1,f);
});

cljs.core.RedNode.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (node,f,start){
var self__ = this;
var node__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3(node__$1,f,start);
});

cljs.core.RedNode.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (node,k,v){
var self__ = this;
var node__$1 = this;
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val], null),k,v);
});

cljs.core.RedNode.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return cljs.core._conj(cljs.core._conj(cljs.core.List.EMPTY,self__.val),self__.key);
});

cljs.core.RedNode.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (node,meta){
var self__ = this;
var node__$1 = this;
return cljs.core.with_meta(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val], null),meta);
});

cljs.core.RedNode.prototype.cljs$core$ICollection$_conj$arity$2 = (function (node,o){
var self__ = this;
var node__$1 = this;
return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val,o], null);
});

cljs.core.RedNode.prototype.call = (function() {
var G__35944 = null;
var G__35944__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var node = self____$1;
return node.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__35944__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var node = self____$1;
return node.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__35944 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__35944__2.call(this,self__,k);
case 3:
return G__35944__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__35944.cljs$core$IFn$_invoke$arity$2 = G__35944__2;
G__35944.cljs$core$IFn$_invoke$arity$3 = G__35944__3;
return G__35944;
})()
;

cljs.core.RedNode.prototype.apply = (function (self__,args35943){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args35943)));
});

cljs.core.RedNode.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var node = this;
return node.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.RedNode.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var node = this;
return node.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.RedNode.cljs$lang$type = true;

cljs.core.RedNode.cljs$lang$ctorStr = "cljs.core/RedNode";

cljs.core.RedNode.cljs$lang$ctorPrWriter = (function (this__24859__auto__,writer__24860__auto__,opt__24861__auto__){
return cljs.core._write(writer__24860__auto__,"cljs.core/RedNode");
});

cljs.core.__GT_RedNode = (function __GT_RedNode(key,val,left,right,__hash){
return (new cljs.core.RedNode(key,val,left,right,__hash));
});

(cljs.core.RedNode.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__25250__auto__ = this;
return cljs.core.es6_iterator(this__25250__auto__);
}));
cljs.core.tree_map_add = (function tree_map_add(comp,tree,k,v,found){
if((tree == null)){
return (new cljs.core.RedNode(k,v,null,null,null));
} else {
var c = (function (){var G__35957 = k;
var G__35958 = tree.key;
return (comp.cljs$core$IFn$_invoke$arity$2 ? comp.cljs$core$IFn$_invoke$arity$2(G__35957,G__35958) : comp.call(null,G__35957,G__35958));
})();
if((c === (0))){
(found[(0)] = tree);

return null;
} else {
if((c < (0))){
var ins = tree_map_add(comp,tree.left,k,v,found);
if(!((ins == null))){
return tree.add_left(ins);
} else {
return null;
}
} else {
var ins = tree_map_add(comp,tree.right,k,v,found);
if(!((ins == null))){
return tree.add_right(ins);
} else {
return null;
}

}
}
}
});
cljs.core.tree_map_append = (function tree_map_append(left,right){
if((left == null)){
return right;
} else {
if((right == null)){
return left;
} else {
if((left instanceof cljs.core.RedNode)){
if((right instanceof cljs.core.RedNode)){
var app = tree_map_append(left.right,right.left);
if((app instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(app.key,app.val,(new cljs.core.RedNode(left.key,left.val,left.left,app.left,null)),(new cljs.core.RedNode(right.key,right.val,app.right,right.right,null)),null));
} else {
return (new cljs.core.RedNode(left.key,left.val,left.left,(new cljs.core.RedNode(right.key,right.val,app,right.right,null)),null));
}
} else {
return (new cljs.core.RedNode(left.key,left.val,left.left,tree_map_append(left.right,right),null));
}
} else {
if((right instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(right.key,right.val,tree_map_append(left,right.left),right.right,null));
} else {
var app = tree_map_append(left.right,right.left);
if((app instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(app.key,app.val,(new cljs.core.BlackNode(left.key,left.val,left.left,app.left,null)),(new cljs.core.BlackNode(right.key,right.val,app.right,right.right,null)),null));
} else {
return cljs.core.balance_left_del(left.key,left.val,left.left,(new cljs.core.BlackNode(right.key,right.val,app,right.right,null)));
}

}
}
}
}
});
cljs.core.tree_map_remove = (function tree_map_remove(comp,tree,k,found){
if(!((tree == null))){
var c = (function (){var G__35977 = k;
var G__35978 = tree.key;
return (comp.cljs$core$IFn$_invoke$arity$2 ? comp.cljs$core$IFn$_invoke$arity$2(G__35977,G__35978) : comp.call(null,G__35977,G__35978));
})();
if((c === (0))){
(found[(0)] = tree);

return cljs.core.tree_map_append(tree.left,tree.right);
} else {
if((c < (0))){
var del = tree_map_remove(comp,tree.left,k,found);
if((!((del == null))) || (!(((found[(0)]) == null)))){
if((tree.left instanceof cljs.core.BlackNode)){
return cljs.core.balance_left_del(tree.key,tree.val,del,tree.right);
} else {
return (new cljs.core.RedNode(tree.key,tree.val,del,tree.right,null));
}
} else {
return null;
}
} else {
var del = tree_map_remove(comp,tree.right,k,found);
if((!((del == null))) || (!(((found[(0)]) == null)))){
if((tree.right instanceof cljs.core.BlackNode)){
return cljs.core.balance_right_del(tree.key,tree.val,tree.left,del);
} else {
return (new cljs.core.RedNode(tree.key,tree.val,tree.left,del,null));
}
} else {
return null;
}

}
}
} else {
return null;
}
});
cljs.core.tree_map_replace = (function tree_map_replace(comp,tree,k,v){
var tk = tree.key;
var c = (function (){var G__35989 = k;
var G__35990 = tk;
return (comp.cljs$core$IFn$_invoke$arity$2 ? comp.cljs$core$IFn$_invoke$arity$2(G__35989,G__35990) : comp.call(null,G__35989,G__35990));
})();
if((c === (0))){
return tree.replace(tk,v,tree.left,tree.right);
} else {
if((c < (0))){
return tree.replace(tk,tree.val,tree_map_replace(comp,tree.left,k,v),tree.right);
} else {
return tree.replace(tk,tree.val,tree.left,tree_map_replace(comp,tree.right,k,v));

}
}
});

/**
* @constructor
*/
cljs.core.PersistentTreeMap = (function (comp,tree,cnt,meta,__hash){
this.comp = comp;
this.tree = tree;
this.cnt = cnt;
this.meta = meta;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 418776847;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.PersistentTreeMap.prototype.forEach = (function (f){
var self__ = this;
var coll = this;
var seq__35992 = cljs.core.seq(coll);
var chunk__35993 = null;
var count__35994 = (0);
var i__35995 = (0);
while(true){
if((i__35995 < count__35994)){
var vec__35996 = chunk__35993.cljs$core$IIndexed$_nth$arity$2(null,i__35995);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__35996,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__35996,(1),null);
var G__35997_36009 = v;
var G__35998_36010 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__35997_36009,G__35998_36010) : f.call(null,G__35997_36009,G__35998_36010));

var G__36011 = seq__35992;
var G__36012 = chunk__35993;
var G__36013 = count__35994;
var G__36014 = (i__35995 + (1));
seq__35992 = G__36011;
chunk__35993 = G__36012;
count__35994 = G__36013;
i__35995 = G__36014;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__35992);
if(temp__4126__auto__){
var seq__35992__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__35992__$1)){
var c__25059__auto__ = cljs.core.chunk_first(seq__35992__$1);
var G__36015 = cljs.core.chunk_rest(seq__35992__$1);
var G__36016 = c__25059__auto__;
var G__36017 = cljs.core.count(c__25059__auto__);
var G__36018 = (0);
seq__35992 = G__36015;
chunk__35993 = G__36016;
count__35994 = G__36017;
i__35995 = G__36018;
continue;
} else {
var vec__35999 = cljs.core.first(seq__35992__$1);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__35999,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__35999,(1),null);
var G__36000_36019 = v;
var G__36001_36020 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__36000_36019,G__36001_36020) : f.call(null,G__36000_36019,G__36001_36020));

var G__36021 = cljs.core.next(seq__35992__$1);
var G__36022 = null;
var G__36023 = (0);
var G__36024 = (0);
seq__35992 = G__36021;
chunk__35993 = G__36022;
count__35994 = G__36023;
i__35995 = G__36024;
continue;
}
} else {
return null;
}
}
break;
}
});

cljs.core.PersistentTreeMap.prototype.get = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentTreeMap.prototype.entries = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_entries_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentTreeMap.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentTreeMap.prototype.keys = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator((function (){var G__36002 = coll;
return (cljs.core.keys.cljs$core$IFn$_invoke$arity$1 ? cljs.core.keys.cljs$core$IFn$_invoke$arity$1(G__36002) : cljs.core.keys.call(null,G__36002));
})());
});

cljs.core.PersistentTreeMap.prototype.values = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator((function (){var G__36003 = coll;
return (cljs.core.vals.cljs$core$IFn$_invoke$arity$1 ? cljs.core.vals.cljs$core$IFn$_invoke$arity$1(G__36003) : cljs.core.vals.call(null,G__36003));
})());
});

cljs.core.PersistentTreeMap.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentTreeMap.prototype.entry_at = (function (k){
var self__ = this;
var coll = this;
var t = self__.tree;
while(true){
if(!((t == null))){
var c = (function (){var G__36004 = k;
var G__36005 = t.key;
return (self__.comp.cljs$core$IFn$_invoke$arity$2 ? self__.comp.cljs$core$IFn$_invoke$arity$2(G__36004,G__36005) : self__.comp.call(null,G__36004,G__36005));
})();
if((c === (0))){
return t;
} else {
if((c < (0))){
var G__36025 = t.left;
t = G__36025;
continue;
} else {
var G__36026 = t.right;
t = G__36026;
continue;

}
}
} else {
return null;
}
break;
}
});

cljs.core.PersistentTreeMap.prototype.has = (function (k){
var self__ = this;
var coll = this;
return cljs.core.contains_QMARK_(coll,k);
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
var n = coll__$1.entry_at(k);
if(!((n == null))){
return n.val;
} else {
return not_found;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = (function (coll,f,init){
var self__ = this;
var coll__$1 = this;
if(!((self__.tree == null))){
return cljs.core.tree_map_kv_reduce(self__.tree,f,init);
} else {
return init;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.PersistentTreeMap(self__.comp,self__.tree,self__.cnt,self__.meta,self__.__hash));
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.cnt;
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IReversible$_rseq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
return cljs.core.create_tree_map_seq(self__.tree,false,self__.cnt);
} else {
return null;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__24693__auto__ = self__.__hash;
if(!((h__24693__auto__ == null))){
return h__24693__auto__;
} else {
var h__24693__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
self__.__hash = h__24693__auto____$1;

return h__24693__auto____$1;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_map(coll__$1,other);
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeMap(self__.comp,null,(0),self__.meta,(0)));
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IMap$_dissoc$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
var found = [null];
var t = cljs.core.tree_map_remove(self__.comp,self__.tree,k,found);
if((t == null)){
if((cljs.core.nth.cljs$core$IFn$_invoke$arity$2(found,(0)) == null)){
return coll__$1;
} else {
return (new cljs.core.PersistentTreeMap(self__.comp,null,(0),self__.meta,null));
}
} else {
return (new cljs.core.PersistentTreeMap(self__.comp,t.blacken(),(self__.cnt - (1)),self__.meta,null));
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (coll,k,v){
var self__ = this;
var coll__$1 = this;
var found = [null];
var t = cljs.core.tree_map_add(self__.comp,self__.tree,k,v,found);
if((t == null)){
var found_node = cljs.core.nth.cljs$core$IFn$_invoke$arity$2(found,(0));
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(v,found_node.val)){
return coll__$1;
} else {
return (new cljs.core.PersistentTreeMap(self__.comp,cljs.core.tree_map_replace(self__.comp,self__.tree,k,v),self__.cnt,self__.meta,null));
}
} else {
return (new cljs.core.PersistentTreeMap(self__.comp,t.blacken(),(self__.cnt + (1)),self__.meta,null));
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return !((coll__$1.entry_at(k) == null));
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
return cljs.core.create_tree_map_seq(self__.tree,true,self__.cnt);
} else {
return null;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeMap(self__.comp,self__.tree,self__.cnt,meta__$1,self__.__hash));
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,entry){
var self__ = this;
var coll__$1 = this;
if(cljs.core.vector_QMARK_(entry)){
return cljs.core._assoc(coll__$1,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(1)));
} else {
var ret = coll__$1;
var es = cljs.core.seq(entry);
while(true){
if((es == null)){
return ret;
} else {
var e = cljs.core.first(es);
if(cljs.core.vector_QMARK_(e)){
var G__36027 = cljs.core._assoc(ret,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e,(1)));
var G__36028 = cljs.core.next(es);
ret = G__36027;
es = G__36028;
continue;
} else {
throw (new Error("conj on a map takes map entries or seqables of map entries"));
}
}
break;
}
}
});

cljs.core.PersistentTreeMap.prototype.call = (function() {
var G__36029 = null;
var G__36029__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__36029__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__36029 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__36029__2.call(this,self__,k);
case 3:
return G__36029__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__36029.cljs$core$IFn$_invoke$arity$2 = G__36029__2;
G__36029.cljs$core$IFn$_invoke$arity$3 = G__36029__3;
return G__36029;
})()
;

cljs.core.PersistentTreeMap.prototype.apply = (function (self__,args35991){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args35991)));
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_sorted_seq$arity$2 = (function (coll,ascending_QMARK_){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
return cljs.core.create_tree_map_seq(self__.tree,ascending_QMARK_,self__.cnt);
} else {
return null;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_sorted_seq_from$arity$3 = (function (coll,k,ascending_QMARK_){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
var stack = null;
var t = self__.tree;
while(true){
if(!((t == null))){
var c = (function (){var G__36006 = k;
var G__36007 = t.key;
return (self__.comp.cljs$core$IFn$_invoke$arity$2 ? self__.comp.cljs$core$IFn$_invoke$arity$2(G__36006,G__36007) : self__.comp.call(null,G__36006,G__36007));
})();
if((c === (0))){
return (new cljs.core.PersistentTreeMapSeq(null,cljs.core.conj.cljs$core$IFn$_invoke$arity$2(stack,t),ascending_QMARK_,(-1),null));
} else {
if(cljs.core.truth_(ascending_QMARK_)){
if((c < (0))){
var G__36030 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(stack,t);
var G__36031 = t.left;
stack = G__36030;
t = G__36031;
continue;
} else {
var G__36032 = stack;
var G__36033 = t.right;
stack = G__36032;
t = G__36033;
continue;
}
} else {
if((c > (0))){
var G__36034 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(stack,t);
var G__36035 = t.right;
stack = G__36034;
t = G__36035;
continue;
} else {
var G__36036 = stack;
var G__36037 = t.left;
stack = G__36036;
t = G__36037;
continue;
}

}
}
} else {
if((stack == null)){
return null;
} else {
return (new cljs.core.PersistentTreeMapSeq(null,stack,ascending_QMARK_,(-1),null));
}
}
break;
}
} else {
return null;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_entry_key$arity$2 = (function (coll,entry){
var self__ = this;
var coll__$1 = this;
var G__36008 = entry;
return (cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__36008) : cljs.core.key.call(null,G__36008));
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_comparator$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.comp;
});

cljs.core.PersistentTreeMap.cljs$lang$type = true;

cljs.core.PersistentTreeMap.cljs$lang$ctorStr = "cljs.core/PersistentTreeMap";

cljs.core.PersistentTreeMap.cljs$lang$ctorPrWriter = (function (this__24859__auto__,writer__24860__auto__,opt__24861__auto__){
return cljs.core._write(writer__24860__auto__,"cljs.core/PersistentTreeMap");
});

cljs.core.__GT_PersistentTreeMap = (function __GT_PersistentTreeMap(comp,tree,cnt,meta,__hash){
return (new cljs.core.PersistentTreeMap(comp,tree,cnt,meta,__hash));
});

cljs.core.PersistentTreeMap.EMPTY = (new cljs.core.PersistentTreeMap(cljs.core.compare,null,(0),null,(0)));
(cljs.core.PersistentTreeMap.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__25250__auto__ = this;
return cljs.core.es6_iterator(this__25250__auto__);
}));
/**
* keyval => key val
* Returns a new hash map with supplied mappings.
* @param {...*} var_args
*/
cljs.core.hash_map = (function() { 
var hash_map__delegate = function (keyvals){
var in$ = cljs.core.seq(keyvals);
var out = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
while(true){
if(in$){
var G__36038 = cljs.core.nnext(in$);
var G__36039 = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(out,cljs.core.first(in$),cljs.core.second(in$));
in$ = G__36038;
out = G__36039;
continue;
} else {
return cljs.core.persistent_BANG_(out);
}
break;
}
};
var hash_map = function (var_args){
var keyvals = null;
if (arguments.length > 0) {
var G__36040__i = 0, G__36040__a = new Array(arguments.length -  0);
while (G__36040__i < G__36040__a.length) {G__36040__a[G__36040__i] = arguments[G__36040__i + 0]; ++G__36040__i;}
  keyvals = new cljs.core.IndexedSeq(G__36040__a,0);
} 
return hash_map__delegate.call(this,keyvals);};
hash_map.cljs$lang$maxFixedArity = 0;
hash_map.cljs$lang$applyTo = (function (arglist__36041){
var keyvals = cljs.core.seq(arglist__36041);
return hash_map__delegate(keyvals);
});
hash_map.cljs$core$IFn$_invoke$arity$variadic = hash_map__delegate;
return hash_map;
})()
;
/**
* keyval => key val
* Returns a new array map with supplied mappings.
* @param {...*} var_args
*/
cljs.core.array_map = (function() { 
var array_map__delegate = function (keyvals){
return cljs.core.PersistentArrayMap.fromArray(cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.array,keyvals),true,false);
};
var array_map = function (var_args){
var keyvals = null;
if (arguments.length > 0) {
var G__36042__i = 0, G__36042__a = new Array(arguments.length -  0);
while (G__36042__i < G__36042__a.length) {G__36042__a[G__36042__i] = arguments[G__36042__i + 0]; ++G__36042__i;}
  keyvals = new cljs.core.IndexedSeq(G__36042__a,0);
} 
return array_map__delegate.call(this,keyvals);};
array_map.cljs$lang$maxFixedArity = 0;
array_map.cljs$lang$applyTo = (function (arglist__36043){
var keyvals = cljs.core.seq(arglist__36043);
return array_map__delegate(keyvals);
});
array_map.cljs$core$IFn$_invoke$arity$variadic = array_map__delegate;
return array_map;
})()
;
/**
* keyval => key val
* Returns a new object map with supplied mappings.
* @param {...*} var_args
*/
cljs.core.obj_map = (function() { 
var obj_map__delegate = function (keyvals){
var ks = [];
var obj = (function (){var obj36047 = {};
return obj36047;
})();
var kvs = cljs.core.seq(keyvals);
while(true){
if(kvs){
ks.push(cljs.core.first(kvs));

(obj[cljs.core.first(kvs)] = cljs.core.second(kvs));

var G__36048 = cljs.core.nnext(kvs);
kvs = G__36048;
continue;
} else {
return cljs.core.ObjMap.fromObject(ks,obj);
}
break;
}
};
var obj_map = function (var_args){
var keyvals = null;
if (arguments.length > 0) {
var G__36049__i = 0, G__36049__a = new Array(arguments.length -  0);
while (G__36049__i < G__36049__a.length) {G__36049__a[G__36049__i] = arguments[G__36049__i + 0]; ++G__36049__i;}
  keyvals = new cljs.core.IndexedSeq(G__36049__a,0);
} 
return obj_map__delegate.call(this,keyvals);};
obj_map.cljs$lang$maxFixedArity = 0;
obj_map.cljs$lang$applyTo = (function (arglist__36050){
var keyvals = cljs.core.seq(arglist__36050);
return obj_map__delegate(keyvals);
});
obj_map.cljs$core$IFn$_invoke$arity$variadic = obj_map__delegate;
return obj_map;
})()
;
/**
* keyval => key val
* Returns a new sorted map with supplied mappings.
* @param {...*} var_args
*/
cljs.core.sorted_map = (function() { 
var sorted_map__delegate = function (keyvals){
var in$ = cljs.core.seq(keyvals);
var out = cljs.core.PersistentTreeMap.EMPTY;
while(true){
if(in$){
var G__36051 = cljs.core.nnext(in$);
var G__36052 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(out,cljs.core.first(in$),cljs.core.second(in$));
in$ = G__36051;
out = G__36052;
continue;
} else {
return out;
}
break;
}
};
var sorted_map = function (var_args){
var keyvals = null;
if (arguments.length > 0) {
var G__36053__i = 0, G__36053__a = new Array(arguments.length -  0);
while (G__36053__i < G__36053__a.length) {G__36053__a[G__36053__i] = arguments[G__36053__i + 0]; ++G__36053__i;}
  keyvals = new cljs.core.IndexedSeq(G__36053__a,0);
} 
return sorted_map__delegate.call(this,keyvals);};
sorted_map.cljs$lang$maxFixedArity = 0;
sorted_map.cljs$lang$applyTo = (function (arglist__36054){
var keyvals = cljs.core.seq(arglist__36054);
return sorted_map__delegate(keyvals);
});
sorted_map.cljs$core$IFn$_invoke$arity$variadic = sorted_map__delegate;
return sorted_map;
})()
;
/**
* keyval => key val
* Returns a new sorted map with supplied mappings, using the supplied comparator.
* @param {...*} var_args
*/
cljs.core.sorted_map_by = (function() { 
var sorted_map_by__delegate = function (comparator,keyvals){
var in$ = cljs.core.seq(keyvals);
var out = (new cljs.core.PersistentTreeMap(cljs.core.fn__GT_comparator(comparator),null,(0),null,(0)));
while(true){
if(in$){
var G__36055 = cljs.core.nnext(in$);
var G__36056 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(out,cljs.core.first(in$),cljs.core.second(in$));
in$ = G__36055;
out = G__36056;
continue;
} else {
return out;
}
break;
}
};
var sorted_map_by = function (comparator,var_args){
var keyvals = null;
if (arguments.length > 1) {
var G__36057__i = 0, G__36057__a = new Array(arguments.length -  1);
while (G__36057__i < G__36057__a.length) {G__36057__a[G__36057__i] = arguments[G__36057__i + 1]; ++G__36057__i;}
  keyvals = new cljs.core.IndexedSeq(G__36057__a,0);
} 
return sorted_map_by__delegate.call(this,comparator,keyvals);};
sorted_map_by.cljs$lang$maxFixedArity = 1;
sorted_map_by.cljs$lang$applyTo = (function (arglist__36058){
var comparator = cljs.core.first(arglist__36058);
var keyvals = cljs.core.rest(arglist__36058);
return sorted_map_by__delegate(comparator,keyvals);
});
sorted_map_by.cljs$core$IFn$_invoke$arity$variadic = sorted_map_by__delegate;
return sorted_map_by;
})()
;

/**
* @constructor
*/
cljs.core.KeySeq = (function (mseq,_meta){
this.mseq = mseq;
this._meta = _meta;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32374988;
})
cljs.core.KeySeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.KeySeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.KeySeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__._meta;
});

cljs.core.KeySeq.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var nseq = (((function (){var G__36059 = self__.mseq;
if(G__36059){
var bit__24953__auto__ = (G__36059.cljs$lang$protocol_mask$partition0$ & (128));
if((bit__24953__auto__) || (G__36059.cljs$core$INext$)){
return true;
} else {
if((!G__36059.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__36059);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__36059);
}
})())?self__.mseq.cljs$core$INext$_next$arity$1(null):cljs.core.next(self__.mseq));
if((nseq == null)){
return null;
} else {
return (new cljs.core.KeySeq(nseq,self__._meta));
}
});

cljs.core.KeySeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.hash_ordered_coll(coll__$1);
});

cljs.core.KeySeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.KeySeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__._meta);
});

cljs.core.KeySeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.KeySeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.KeySeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var me = self__.mseq.cljs$core$ISeq$_first$arity$1(null);
return me.cljs$core$IMapEntry$_key$arity$1(null);
});

cljs.core.KeySeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var nseq = (((function (){var G__36060 = self__.mseq;
if(G__36060){
var bit__24953__auto__ = (G__36060.cljs$lang$protocol_mask$partition0$ & (128));
if((bit__24953__auto__) || (G__36060.cljs$core$INext$)){
return true;
} else {
if((!G__36060.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__36060);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__36060);
}
})())?self__.mseq.cljs$core$INext$_next$arity$1(null):cljs.core.next(self__.mseq));
if(!((nseq == null))){
return (new cljs.core.KeySeq(nseq,self__._meta));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.KeySeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.KeySeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,new_meta){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.KeySeq(self__.mseq,new_meta));
});

cljs.core.KeySeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.KeySeq.cljs$lang$type = true;

cljs.core.KeySeq.cljs$lang$ctorStr = "cljs.core/KeySeq";

cljs.core.KeySeq.cljs$lang$ctorPrWriter = (function (this__24859__auto__,writer__24860__auto__,opt__24861__auto__){
return cljs.core._write(writer__24860__auto__,"cljs.core/KeySeq");
});

cljs.core.__GT_KeySeq = (function __GT_KeySeq(mseq,_meta){
return (new cljs.core.KeySeq(mseq,_meta));
});

(cljs.core.KeySeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__25250__auto__ = this;
return cljs.core.es6_iterator(this__25250__auto__);
}));
/**
* Returns a sequence of the map's keys.
*/
cljs.core.keys = (function keys(hash_map){
var temp__4126__auto__ = cljs.core.seq(hash_map);
if(temp__4126__auto__){
var mseq = temp__4126__auto__;
return (new cljs.core.KeySeq(mseq,null));
} else {
return null;
}
});
/**
* Returns the key of the map entry.
*/
cljs.core.key = (function key(map_entry){
return cljs.core._key(map_entry);
});

/**
* @constructor
*/
cljs.core.ValSeq = (function (mseq,_meta){
this.mseq = mseq;
this._meta = _meta;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32374988;
})
cljs.core.ValSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.ValSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.ValSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__._meta;
});

cljs.core.ValSeq.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var nseq = (((function (){var G__36061 = self__.mseq;
if(G__36061){
var bit__24953__auto__ = (G__36061.cljs$lang$protocol_mask$partition0$ & (128));
if((bit__24953__auto__) || (G__36061.cljs$core$INext$)){
return true;
} else {
if((!G__36061.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__36061);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__36061);
}
})())?self__.mseq.cljs$core$INext$_next$arity$1(null):cljs.core.next(self__.mseq));
if((nseq == null)){
return null;
} else {
return (new cljs.core.ValSeq(nseq,self__._meta));
}
});

cljs.core.ValSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.hash_ordered_coll(coll__$1);
});

cljs.core.ValSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.ValSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__._meta);
});

cljs.core.ValSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.ValSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.ValSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var me = self__.mseq.cljs$core$ISeq$_first$arity$1(null);
return me.cljs$core$IMapEntry$_val$arity$1(null);
});

cljs.core.ValSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var nseq = (((function (){var G__36062 = self__.mseq;
if(G__36062){
var bit__24953__auto__ = (G__36062.cljs$lang$protocol_mask$partition0$ & (128));
if((bit__24953__auto__) || (G__36062.cljs$core$INext$)){
return true;
} else {
if((!G__36062.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__36062);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__36062);
}
})())?self__.mseq.cljs$core$INext$_next$arity$1(null):cljs.core.next(self__.mseq));
if(!((nseq == null))){
return (new cljs.core.ValSeq(nseq,self__._meta));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.ValSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.ValSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,new_meta){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.ValSeq(self__.mseq,new_meta));
});

cljs.core.ValSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.ValSeq.cljs$lang$type = true;

cljs.core.ValSeq.cljs$lang$ctorStr = "cljs.core/ValSeq";

cljs.core.ValSeq.cljs$lang$ctorPrWriter = (function (this__24859__auto__,writer__24860__auto__,opt__24861__auto__){
return cljs.core._write(writer__24860__auto__,"cljs.core/ValSeq");
});

cljs.core.__GT_ValSeq = (function __GT_ValSeq(mseq,_meta){
return (new cljs.core.ValSeq(mseq,_meta));
});

(cljs.core.ValSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__25250__auto__ = this;
return cljs.core.es6_iterator(this__25250__auto__);
}));
/**
* Returns a sequence of the map's values.
*/
cljs.core.vals = (function vals(hash_map){
var temp__4126__auto__ = cljs.core.seq(hash_map);
if(temp__4126__auto__){
var mseq = temp__4126__auto__;
return (new cljs.core.ValSeq(mseq,null));
} else {
return null;
}
});
/**
* Returns the value in the map entry.
*/
cljs.core.val = (function val(map_entry){
return cljs.core._val(map_entry);
});
/**
* Returns a map that consists of the rest of the maps conj-ed onto
* the first.  If a key occurs in more than one map, the mapping from
* the latter (left-to-right) will be the mapping in the result.
* @param {...*} var_args
*/
cljs.core.merge = (function() { 
var merge__delegate = function (maps){
if(cljs.core.truth_(cljs.core.some(cljs.core.identity,maps))){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$2((function (p1__36063_SHARP_,p2__36064_SHARP_){
return cljs.core.conj.cljs$core$IFn$_invoke$arity$2((function (){var or__24272__auto__ = p1__36063_SHARP_;
if(cljs.core.truth_(or__24272__auto__)){
return or__24272__auto__;
} else {
return cljs.core.PersistentArrayMap.EMPTY;
}
})(),p2__36064_SHARP_);
}),maps);
} else {
return null;
}
};
var merge = function (var_args){
var maps = null;
if (arguments.length > 0) {
var G__36065__i = 0, G__36065__a = new Array(arguments.length -  0);
while (G__36065__i < G__36065__a.length) {G__36065__a[G__36065__i] = arguments[G__36065__i + 0]; ++G__36065__i;}
  maps = new cljs.core.IndexedSeq(G__36065__a,0);
} 
return merge__delegate.call(this,maps);};
merge.cljs$lang$maxFixedArity = 0;
merge.cljs$lang$applyTo = (function (arglist__36066){
var maps = cljs.core.seq(arglist__36066);
return merge__delegate(maps);
});
merge.cljs$core$IFn$_invoke$arity$variadic = merge__delegate;
return merge;
})()
;
/**
* Returns a map that consists of the rest of the maps conj-ed onto
* the first.  If a key occurs in more than one map, the mapping(s)
* from the latter (left-to-right) will be combined with the mapping in
* the result by calling (f val-in-result val-in-latter).
* @param {...*} var_args
*/
cljs.core.merge_with = (function() { 
var merge_with__delegate = function (f,maps){
if(cljs.core.truth_(cljs.core.some(cljs.core.identity,maps))){
var merge_entry = (function (m,e){
var k = cljs.core.first(e);
var v = cljs.core.second(e);
if(cljs.core.contains_QMARK_(m,k)){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__36069 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__36070 = v;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__36069,G__36070) : f.call(null,G__36069,G__36070));
})());
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,v);
}
});
var merge2 = ((function (merge_entry){
return (function (m1,m2){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(merge_entry,(function (){var or__24272__auto__ = m1;
if(cljs.core.truth_(or__24272__auto__)){
return or__24272__auto__;
} else {
return cljs.core.PersistentArrayMap.EMPTY;
}
})(),cljs.core.seq(m2));
});})(merge_entry))
;
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$2(merge2,maps);
} else {
return null;
}
};
var merge_with = function (f,var_args){
var maps = null;
if (arguments.length > 1) {
var G__36071__i = 0, G__36071__a = new Array(arguments.length -  1);
while (G__36071__i < G__36071__a.length) {G__36071__a[G__36071__i] = arguments[G__36071__i + 1]; ++G__36071__i;}
  maps = new cljs.core.IndexedSeq(G__36071__a,0);
} 
return merge_with__delegate.call(this,f,maps);};
merge_with.cljs$lang$maxFixedArity = 1;
merge_with.cljs$lang$applyTo = (function (arglist__36072){
var f = cljs.core.first(arglist__36072);
var maps = cljs.core.rest(arglist__36072);
return merge_with__delegate(f,maps);
});
merge_with.cljs$core$IFn$_invoke$arity$variadic = merge_with__delegate;
return merge_with;
})()
;
/**
* Returns a map containing only those entries in map whose key is in keys
*/
cljs.core.select_keys = (function select_keys(map,keyseq){
var ret = cljs.core.PersistentArrayMap.EMPTY;
var keys = cljs.core.seq(keyseq);
while(true){
if(keys){
var key = cljs.core.first(keys);
var entry = cljs.core.get.cljs$core$IFn$_invoke$arity$3(map,key,new cljs.core.Keyword("cljs.core","not-found","cljs.core/not-found",-1572889185));
var G__36073 = ((cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2(entry,new cljs.core.Keyword("cljs.core","not-found","cljs.core/not-found",-1572889185)))?cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(ret,key,entry):ret);
var G__36074 = cljs.core.next(keys);
ret = G__36073;
keys = G__36074;
continue;
} else {
return cljs.core.with_meta(ret,cljs.core.meta(map));
}
break;
}
});

/**
* @constructor
*/
cljs.core.PersistentHashSet = (function (meta,hash_map,__hash){
this.meta = meta;
this.hash_map = hash_map;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 15077647;
this.cljs$lang$protocol_mask$partition1$ = 8196;
})
cljs.core.PersistentHashSet.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentHashSet.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentHashSet.prototype.keys = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentHashSet.prototype.entries = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_set_entries_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentHashSet.prototype.values = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentHashSet.prototype.has = (function (k){
var self__ = this;
var coll = this;
return cljs.core.contains_QMARK_(coll,k);
});

cljs.core.PersistentHashSet.prototype.forEach = (function (f){
var self__ = this;
var coll = this;
var seq__36077 = cljs.core.seq(coll);
var chunk__36078 = null;
var count__36079 = (0);
var i__36080 = (0);
while(true){
if((i__36080 < count__36079)){
var vec__36081 = chunk__36078.cljs$core$IIndexed$_nth$arity$2(null,i__36080);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__36081,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__36081,(1),null);
var G__36082_36087 = v;
var G__36083_36088 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__36082_36087,G__36083_36088) : f.call(null,G__36082_36087,G__36083_36088));

var G__36089 = seq__36077;
var G__36090 = chunk__36078;
var G__36091 = count__36079;
var G__36092 = (i__36080 + (1));
seq__36077 = G__36089;
chunk__36078 = G__36090;
count__36079 = G__36091;
i__36080 = G__36092;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__36077);
if(temp__4126__auto__){
var seq__36077__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__36077__$1)){
var c__25059__auto__ = cljs.core.chunk_first(seq__36077__$1);
var G__36093 = cljs.core.chunk_rest(seq__36077__$1);
var G__36094 = c__25059__auto__;
var G__36095 = cljs.core.count(c__25059__auto__);
var G__36096 = (0);
seq__36077 = G__36093;
chunk__36078 = G__36094;
count__36079 = G__36095;
i__36080 = G__36096;
continue;
} else {
var vec__36084 = cljs.core.first(seq__36077__$1);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__36084,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__36084,(1),null);
var G__36085_36097 = v;
var G__36086_36098 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__36085_36097,G__36086_36098) : f.call(null,G__36085_36097,G__36086_36098));

var G__36099 = cljs.core.next(seq__36077__$1);
var G__36100 = null;
var G__36101 = (0);
var G__36102 = (0);
seq__36077 = G__36099;
chunk__36078 = G__36100;
count__36079 = G__36101;
i__36080 = G__36102;
continue;
}
} else {
return null;
}
}
break;
}
});

cljs.core.PersistentHashSet.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,v){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,v,null);
});

cljs.core.PersistentHashSet.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,v,not_found){
var self__ = this;
var coll__$1 = this;
if(cljs.core._contains_key_QMARK_(self__.hash_map,v)){
return v;
} else {
return not_found;
}
});

cljs.core.PersistentHashSet.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentHashSet.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.PersistentHashSet(self__.meta,self__.hash_map,self__.__hash));
});

cljs.core.PersistentHashSet.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._count(self__.hash_map);
});

cljs.core.PersistentHashSet.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__24693__auto__ = self__.__hash;
if(!((h__24693__auto__ == null))){
return h__24693__auto__;
} else {
var h__24693__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
self__.__hash = h__24693__auto____$1;

return h__24693__auto____$1;
}
});

cljs.core.PersistentHashSet.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return (cljs.core.set_QMARK_(other)) && ((cljs.core.count(coll__$1) === cljs.core.count(other))) && (cljs.core.every_QMARK_(((function (coll__$1){
return (function (p1__36075_SHARP_){
return cljs.core.contains_QMARK_(coll__$1,p1__36075_SHARP_);
});})(coll__$1))
,other));
});

cljs.core.PersistentHashSet.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.TransientHashSet(cljs.core._as_transient(self__.hash_map)));
});

cljs.core.PersistentHashSet.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.PersistentHashSet.EMPTY,self__.meta);
});

cljs.core.PersistentHashSet.prototype.cljs$core$ISet$_disjoin$arity$2 = (function (coll,v){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentHashSet(self__.meta,cljs.core._dissoc(self__.hash_map,v),null));
});

cljs.core.PersistentHashSet.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.keys(self__.hash_map);
});

cljs.core.PersistentHashSet.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentHashSet(meta__$1,self__.hash_map,self__.__hash));
});

cljs.core.PersistentHashSet.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentHashSet(self__.meta,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.hash_map,o,null),null));
});

cljs.core.PersistentHashSet.prototype.call = (function() {
var G__36103 = null;
var G__36103__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__36103__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__36103 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__36103__2.call(this,self__,k);
case 3:
return G__36103__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__36103.cljs$core$IFn$_invoke$arity$2 = G__36103__2;
G__36103.cljs$core$IFn$_invoke$arity$3 = G__36103__3;
return G__36103;
})()
;

cljs.core.PersistentHashSet.prototype.apply = (function (self__,args36076){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args36076)));
});

cljs.core.PersistentHashSet.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentHashSet.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.PersistentHashSet.cljs$lang$type = true;

cljs.core.PersistentHashSet.cljs$lang$ctorStr = "cljs.core/PersistentHashSet";

cljs.core.PersistentHashSet.cljs$lang$ctorPrWriter = (function (this__24859__auto__,writer__24860__auto__,opt__24861__auto__){
return cljs.core._write(writer__24860__auto__,"cljs.core/PersistentHashSet");
});

cljs.core.__GT_PersistentHashSet = (function __GT_PersistentHashSet(meta,hash_map,__hash){
return (new cljs.core.PersistentHashSet(meta,hash_map,__hash));
});

cljs.core.PersistentHashSet.EMPTY = (new cljs.core.PersistentHashSet(null,cljs.core.PersistentArrayMap.EMPTY,(0)));
cljs.core.PersistentHashSet.fromArray = (function (items,no_clone){
var len = items.length;
if((len <= cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD)){
var arr = ((no_clone)?items:cljs.core.aclone(items));
var i = (0);
var out = cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY);
while(true){
if((i < len)){
var G__36104 = (i + (1));
var G__36105 = cljs.core._assoc_BANG_(out,(items[i]),null);
i = G__36104;
out = G__36105;
continue;
} else {
return (new cljs.core.PersistentHashSet(null,cljs.core._persistent_BANG_(out),null));
}
break;
}
} else {
var i = (0);
var out = cljs.core.transient$(cljs.core.PersistentHashSet.EMPTY);
while(true){
if((i < len)){
var G__36106 = (i + (1));
var G__36107 = cljs.core._conj_BANG_(out,(items[i]));
i = G__36106;
out = G__36107;
continue;
} else {
return cljs.core._persistent_BANG_(out);
}
break;
}
}
});
(cljs.core.PersistentHashSet.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__25250__auto__ = this;
return cljs.core.es6_iterator(this__25250__auto__);
}));

/**
* @constructor
*/
cljs.core.TransientHashSet = (function (transient_map){
this.transient_map = transient_map;
this.cljs$lang$protocol_mask$partition0$ = 259;
this.cljs$lang$protocol_mask$partition1$ = 136;
})
cljs.core.TransientHashSet.prototype.call = (function() {
var G__36109 = null;
var G__36109__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var tcoll = self____$1;
if((cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map,k,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel)){
return null;
} else {
return k;
}
});
var G__36109__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var tcoll = self____$1;
if((cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map,k,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel)){
return not_found;
} else {
return k;
}
});
G__36109 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__36109__2.call(this,self__,k);
case 3:
return G__36109__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__36109.cljs$core$IFn$_invoke$arity$2 = G__36109__2;
G__36109.cljs$core$IFn$_invoke$arity$3 = G__36109__3;
return G__36109;
})()
;

cljs.core.TransientHashSet.prototype.apply = (function (self__,args36108){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args36108)));
});

cljs.core.TransientHashSet.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var tcoll = this;
if((cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map,k,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel)){
return null;
} else {
return k;
}
});

cljs.core.TransientHashSet.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var tcoll = this;
if((cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map,k,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel)){
return not_found;
} else {
return k;
}
});

cljs.core.TransientHashSet.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (tcoll,v){
var self__ = this;
var tcoll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(tcoll__$1,v,null);
});

cljs.core.TransientHashSet.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (tcoll,v,not_found){
var self__ = this;
var tcoll__$1 = this;
if((cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map,v,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel)){
return not_found;
} else {
return v;
}
});

cljs.core.TransientHashSet.prototype.cljs$core$ICounted$_count$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
return cljs.core.count(self__.transient_map);
});

cljs.core.TransientHashSet.prototype.cljs$core$ITransientSet$_disjoin_BANG_$arity$2 = (function (tcoll,v){
var self__ = this;
var tcoll__$1 = this;
self__.transient_map = cljs.core.dissoc_BANG_.cljs$core$IFn$_invoke$arity$2(self__.transient_map,v);

return tcoll__$1;
});

cljs.core.TransientHashSet.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = (function (tcoll,o){
var self__ = this;
var tcoll__$1 = this;
self__.transient_map = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(self__.transient_map,o,null);

return tcoll__$1;
});

cljs.core.TransientHashSet.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
return (new cljs.core.PersistentHashSet(null,cljs.core.persistent_BANG_(self__.transient_map),null));
});

cljs.core.TransientHashSet.cljs$lang$type = true;

cljs.core.TransientHashSet.cljs$lang$ctorStr = "cljs.core/TransientHashSet";

cljs.core.TransientHashSet.cljs$lang$ctorPrWriter = (function (this__24859__auto__,writer__24860__auto__,opt__24861__auto__){
return cljs.core._write(writer__24860__auto__,"cljs.core/TransientHashSet");
});

cljs.core.__GT_TransientHashSet = (function __GT_TransientHashSet(transient_map){
return (new cljs.core.TransientHashSet(transient_map));
});


/**
* @constructor
*/
cljs.core.PersistentTreeSet = (function (meta,tree_map,__hash){
this.meta = meta;
this.tree_map = tree_map;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 417730831;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.PersistentTreeSet.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentTreeSet.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentTreeSet.prototype.keys = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentTreeSet.prototype.entries = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_set_entries_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentTreeSet.prototype.values = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentTreeSet.prototype.has = (function (k){
var self__ = this;
var coll = this;
return cljs.core.contains_QMARK_(coll,k);
});

cljs.core.PersistentTreeSet.prototype.forEach = (function (f){
var self__ = this;
var coll = this;
var seq__36112 = cljs.core.seq(coll);
var chunk__36113 = null;
var count__36114 = (0);
var i__36115 = (0);
while(true){
if((i__36115 < count__36114)){
var vec__36116 = chunk__36113.cljs$core$IIndexed$_nth$arity$2(null,i__36115);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__36116,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__36116,(1),null);
var G__36117_36122 = v;
var G__36118_36123 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__36117_36122,G__36118_36123) : f.call(null,G__36117_36122,G__36118_36123));

var G__36124 = seq__36112;
var G__36125 = chunk__36113;
var G__36126 = count__36114;
var G__36127 = (i__36115 + (1));
seq__36112 = G__36124;
chunk__36113 = G__36125;
count__36114 = G__36126;
i__36115 = G__36127;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__36112);
if(temp__4126__auto__){
var seq__36112__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__36112__$1)){
var c__25059__auto__ = cljs.core.chunk_first(seq__36112__$1);
var G__36128 = cljs.core.chunk_rest(seq__36112__$1);
var G__36129 = c__25059__auto__;
var G__36130 = cljs.core.count(c__25059__auto__);
var G__36131 = (0);
seq__36112 = G__36128;
chunk__36113 = G__36129;
count__36114 = G__36130;
i__36115 = G__36131;
continue;
} else {
var vec__36119 = cljs.core.first(seq__36112__$1);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__36119,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__36119,(1),null);
var G__36120_36132 = v;
var G__36121_36133 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__36120_36132,G__36121_36133) : f.call(null,G__36120_36132,G__36121_36133));

var G__36134 = cljs.core.next(seq__36112__$1);
var G__36135 = null;
var G__36136 = (0);
var G__36137 = (0);
seq__36112 = G__36134;
chunk__36113 = G__36135;
count__36114 = G__36136;
i__36115 = G__36137;
continue;
}
} else {
return null;
}
}
break;
}
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,v){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,v,null);
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,v,not_found){
var self__ = this;
var coll__$1 = this;
var n = self__.tree_map.entry_at(v);
if(!((n == null))){
return n.key;
} else {
return not_found;
}
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.PersistentTreeSet(self__.meta,self__.tree_map,self__.__hash));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.count(self__.tree_map);
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IReversible$_rseq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((cljs.core.count(self__.tree_map) > (0))){
return cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.key,cljs.core.rseq(self__.tree_map));
} else {
return null;
}
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__24693__auto__ = self__.__hash;
if(!((h__24693__auto__ == null))){
return h__24693__auto__;
} else {
var h__24693__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
self__.__hash = h__24693__auto____$1;

return h__24693__auto____$1;
}
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return (cljs.core.set_QMARK_(other)) && ((cljs.core.count(coll__$1) === cljs.core.count(other))) && (cljs.core.every_QMARK_(((function (coll__$1){
return (function (p1__36110_SHARP_){
return cljs.core.contains_QMARK_(coll__$1,p1__36110_SHARP_);
});})(coll__$1))
,other));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeSet(self__.meta,cljs.core._empty(self__.tree_map),(0)));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ISet$_disjoin$arity$2 = (function (coll,v){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeSet(self__.meta,cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(self__.tree_map,v),null));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.keys(self__.tree_map);
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeSet(meta__$1,self__.tree_map,self__.__hash));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeSet(self__.meta,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.tree_map,o,null),null));
});

cljs.core.PersistentTreeSet.prototype.call = (function() {
var G__36138 = null;
var G__36138__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__36138__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__36138 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__36138__2.call(this,self__,k);
case 3:
return G__36138__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__36138.cljs$core$IFn$_invoke$arity$2 = G__36138__2;
G__36138.cljs$core$IFn$_invoke$arity$3 = G__36138__3;
return G__36138;
})()
;

cljs.core.PersistentTreeSet.prototype.apply = (function (self__,args36111){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args36111)));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_sorted_seq$arity$2 = (function (coll,ascending_QMARK_){
var self__ = this;
var coll__$1 = this;
return cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.key,cljs.core._sorted_seq(self__.tree_map,ascending_QMARK_));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_sorted_seq_from$arity$3 = (function (coll,k,ascending_QMARK_){
var self__ = this;
var coll__$1 = this;
return cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.key,cljs.core._sorted_seq_from(self__.tree_map,k,ascending_QMARK_));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_entry_key$arity$2 = (function (coll,entry){
var self__ = this;
var coll__$1 = this;
return entry;
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_comparator$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._comparator(self__.tree_map);
});

cljs.core.PersistentTreeSet.cljs$lang$type = true;

cljs.core.PersistentTreeSet.cljs$lang$ctorStr = "cljs.core/PersistentTreeSet";

cljs.core.PersistentTreeSet.cljs$lang$ctorPrWriter = (function (this__24859__auto__,writer__24860__auto__,opt__24861__auto__){
return cljs.core._write(writer__24860__auto__,"cljs.core/PersistentTreeSet");
});

cljs.core.__GT_PersistentTreeSet = (function __GT_PersistentTreeSet(meta,tree_map,__hash){
return (new cljs.core.PersistentTreeSet(meta,tree_map,__hash));
});

cljs.core.PersistentTreeSet.EMPTY = (new cljs.core.PersistentTreeSet(null,cljs.core.PersistentTreeMap.EMPTY,(0)));
(cljs.core.PersistentTreeSet.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__25250__auto__ = this;
return cljs.core.es6_iterator(this__25250__auto__);
}));
cljs.core.set_from_indexed_seq = (function set_from_indexed_seq(iseq){
var arr = iseq.arr;
var ret = (function (){var a__25153__auto__ = arr;
var i = (0);
var res = cljs.core._as_transient(cljs.core.PersistentHashSet.EMPTY);
while(true){
if((i < a__25153__auto__.length)){
var G__36139 = (i + (1));
var G__36140 = res.cljs$core$ITransientCollection$_conj_BANG_$arity$2(null,(arr[i]));
i = G__36139;
res = G__36140;
continue;
} else {
return res;
}
break;
}
})();
return ret.cljs$core$ITransientCollection$_persistent_BANG_$arity$1(null);
});
/**
* Returns a set of the distinct elements of coll.
*/
cljs.core.set = (function set(coll){
var in$ = cljs.core.seq(coll);
if((in$ == null)){
return cljs.core.PersistentHashSet.EMPTY;
} else {
if(((in$ instanceof cljs.core.IndexedSeq)) && ((in$.i === (0)))){
return cljs.core.set_from_indexed_seq(in$);
} else {
var in$__$1 = in$;
var out = cljs.core._as_transient(cljs.core.PersistentHashSet.EMPTY);
while(true){
if(!((in$__$1 == null))){
var G__36141 = in$__$1.cljs$core$INext$_next$arity$1(null);
var G__36142 = out.cljs$core$ITransientCollection$_conj_BANG_$arity$2(null,in$__$1.cljs$core$ISeq$_first$arity$1(null));
in$__$1 = G__36141;
out = G__36142;
continue;
} else {
return out.cljs$core$ITransientCollection$_persistent_BANG_$arity$1(null);
}
break;
}

}
}
});
/**
* @param {...*} var_args
*/
cljs.core.hash_set = (function() {
var hash_set = null;
var hash_set__0 = (function (){
return cljs.core.PersistentHashSet.EMPTY;
});
var hash_set__1 = (function() { 
var G__36143__delegate = function (keys){
return cljs.core.set(keys);
};
var G__36143 = function (var_args){
var keys = null;
if (arguments.length > 0) {
var G__36144__i = 0, G__36144__a = new Array(arguments.length -  0);
while (G__36144__i < G__36144__a.length) {G__36144__a[G__36144__i] = arguments[G__36144__i + 0]; ++G__36144__i;}
  keys = new cljs.core.IndexedSeq(G__36144__a,0);
} 
return G__36143__delegate.call(this,keys);};
G__36143.cljs$lang$maxFixedArity = 0;
G__36143.cljs$lang$applyTo = (function (arglist__36145){
var keys = cljs.core.seq(arglist__36145);
return G__36143__delegate(keys);
});
G__36143.cljs$core$IFn$_invoke$arity$variadic = G__36143__delegate;
return G__36143;
})()
;
hash_set = function(var_args){
var keys = var_args;
switch(arguments.length){
case 0:
return hash_set__0.call(this);
default:
var G__36146 = null;
if (arguments.length > 0) {
var G__36147__i = 0, G__36147__a = new Array(arguments.length -  0);
while (G__36147__i < G__36147__a.length) {G__36147__a[G__36147__i] = arguments[G__36147__i + 0]; ++G__36147__i;}
G__36146 = new cljs.core.IndexedSeq(G__36147__a,0);
}
return hash_set__1.cljs$core$IFn$_invoke$arity$variadic(G__36146);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
hash_set.cljs$lang$maxFixedArity = 0;
hash_set.cljs$lang$applyTo = hash_set__1.cljs$lang$applyTo;
hash_set.cljs$core$IFn$_invoke$arity$0 = hash_set__0;
hash_set.cljs$core$IFn$_invoke$arity$variadic = hash_set__1.cljs$core$IFn$_invoke$arity$variadic;
return hash_set;
})()
;
/**
* Returns a new sorted set with supplied keys.
* @param {...*} var_args
*/
cljs.core.sorted_set = (function() { 
var sorted_set__delegate = function (keys){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj,cljs.core.PersistentTreeSet.EMPTY,keys);
};
var sorted_set = function (var_args){
var keys = null;
if (arguments.length > 0) {
var G__36148__i = 0, G__36148__a = new Array(arguments.length -  0);
while (G__36148__i < G__36148__a.length) {G__36148__a[G__36148__i] = arguments[G__36148__i + 0]; ++G__36148__i;}
  keys = new cljs.core.IndexedSeq(G__36148__a,0);
} 
return sorted_set__delegate.call(this,keys);};
sorted_set.cljs$lang$maxFixedArity = 0;
sorted_set.cljs$lang$applyTo = (function (arglist__36149){
var keys = cljs.core.seq(arglist__36149);
return sorted_set__delegate(keys);
});
sorted_set.cljs$core$IFn$_invoke$arity$variadic = sorted_set__delegate;
return sorted_set;
})()
;
/**
* Returns a new sorted set with supplied keys, using the supplied comparator.
* @param {...*} var_args
*/
cljs.core.sorted_set_by = (function() { 
var sorted_set_by__delegate = function (comparator,keys){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj,(new cljs.core.PersistentTreeSet(null,cljs.core.sorted_map_by(comparator),(0))),keys);
};
var sorted_set_by = function (comparator,var_args){
var keys = null;
if (arguments.length > 1) {
var G__36150__i = 0, G__36150__a = new Array(arguments.length -  1);
while (G__36150__i < G__36150__a.length) {G__36150__a[G__36150__i] = arguments[G__36150__i + 1]; ++G__36150__i;}
  keys = new cljs.core.IndexedSeq(G__36150__a,0);
} 
return sorted_set_by__delegate.call(this,comparator,keys);};
sorted_set_by.cljs$lang$maxFixedArity = 1;
sorted_set_by.cljs$lang$applyTo = (function (arglist__36151){
var comparator = cljs.core.first(arglist__36151);
var keys = cljs.core.rest(arglist__36151);
return sorted_set_by__delegate(comparator,keys);
});
sorted_set_by.cljs$core$IFn$_invoke$arity$variadic = sorted_set_by__delegate;
return sorted_set_by;
})()
;
/**
* Given a map of replacement pairs and a vector/collection, returns a
* vector/seq with any elements = a key in smap replaced with the
* corresponding val in smap.  Returns a transducer when no collection
* is provided.
*/
cljs.core.replace = (function() {
var replace = null;
var replace__1 = (function (smap){
return cljs.core.map.cljs$core$IFn$_invoke$arity$1((function (p1__36152_SHARP_){
var temp__4124__auto__ = cljs.core.find(smap,p1__36152_SHARP_);
if(cljs.core.truth_(temp__4124__auto__)){
var e = temp__4124__auto__;
return cljs.core.val(e);
} else {
return p1__36152_SHARP_;
}
}));
});
var replace__2 = (function (smap,coll){
if(cljs.core.vector_QMARK_(coll)){
var n = cljs.core.count(coll);
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (n){
return (function (v,i){
var temp__4124__auto__ = cljs.core.find(smap,cljs.core.nth.cljs$core$IFn$_invoke$arity$2(v,i));
if(cljs.core.truth_(temp__4124__auto__)){
var e = temp__4124__auto__;
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(v,i,cljs.core.second(e));
} else {
return v;
}
});})(n))
,coll,cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,cljs.core.iterate(cljs.core.inc,(0))));
} else {
return cljs.core.map.cljs$core$IFn$_invoke$arity$2((function (p1__36153_SHARP_){
var temp__4124__auto__ = cljs.core.find(smap,p1__36153_SHARP_);
if(cljs.core.truth_(temp__4124__auto__)){
var e = temp__4124__auto__;
return cljs.core.second(e);
} else {
return p1__36153_SHARP_;
}
}),coll);
}
});
replace = function(smap,coll){
switch(arguments.length){
case 1:
return replace__1.call(this,smap);
case 2:
return replace__2.call(this,smap,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
replace.cljs$core$IFn$_invoke$arity$1 = replace__1;
replace.cljs$core$IFn$_invoke$arity$2 = replace__2;
return replace;
})()
;
/**
* Returns a lazy sequence of the elements of coll with duplicates removed
*/
cljs.core.distinct = (function distinct(coll){
var step = (function step(xs,seen){
return (new cljs.core.LazySeq(null,(function (){
return (function (p__36164,seen__$1){
while(true){
var vec__36165 = p__36164;
var f = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__36165,(0),null);
var xs__$1 = vec__36165;
var temp__4126__auto__ = cljs.core.seq(xs__$1);
if(temp__4126__auto__){
var s = temp__4126__auto__;
if(cljs.core.contains_QMARK_(seen__$1,f)){
var G__36166 = cljs.core.rest(s);
var G__36167 = seen__$1;
p__36164 = G__36166;
seen__$1 = G__36167;
continue;
} else {
return cljs.core.cons(f,step(cljs.core.rest(s),cljs.core.conj.cljs$core$IFn$_invoke$arity$2(seen__$1,f)));
}
} else {
return null;
}
break;
}
}).call(null,xs,seen);
}),null,null));
});
return step(coll,cljs.core.PersistentHashSet.EMPTY);
});
cljs.core.butlast = (function butlast(s){
var ret = cljs.core.PersistentVector.EMPTY;
var s__$1 = s;
while(true){
if(cljs.core.next(s__$1)){
var G__36168 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(ret,cljs.core.first(s__$1));
var G__36169 = cljs.core.next(s__$1);
ret = G__36168;
s__$1 = G__36169;
continue;
} else {
return cljs.core.seq(ret);
}
break;
}
});
/**
* Returns the name String of a string, symbol or keyword.
*/
cljs.core.name = (function name(x){
if((function (){var G__36171 = x;
if(G__36171){
var bit__24946__auto__ = (G__36171.cljs$lang$protocol_mask$partition1$ & (4096));
if((bit__24946__auto__) || (G__36171.cljs$core$INamed$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return x.cljs$core$INamed$_name$arity$1(null);
} else {
if(typeof x === 'string'){
return x;
} else {
throw (new Error([cljs.core.str("Doesn't support name: "),cljs.core.str(x)].join('')));
}
}
});
/**
* Returns a map with the keys mapped to the corresponding vals.
*/
cljs.core.zipmap = (function zipmap(keys,vals){
var map = cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY);
var ks = cljs.core.seq(keys);
var vs = cljs.core.seq(vals);
while(true){
if((ks) && (vs)){
var G__36172 = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(map,cljs.core.first(ks),cljs.core.first(vs));
var G__36173 = cljs.core.next(ks);
var G__36174 = cljs.core.next(vs);
map = G__36172;
ks = G__36173;
vs = G__36174;
continue;
} else {
return cljs.core.persistent_BANG_(map);
}
break;
}
});
/**
* Returns the x for which (k x), a number, is greatest.
* @param {...*} var_args
*/
cljs.core.max_key = (function() {
var max_key = null;
var max_key__2 = (function (k,x){
return x;
});
var max_key__3 = (function (k,x,y){
if(((function (){var G__36185 = x;
return (k.cljs$core$IFn$_invoke$arity$1 ? k.cljs$core$IFn$_invoke$arity$1(G__36185) : k.call(null,G__36185));
})() > (function (){var G__36186 = y;
return (k.cljs$core$IFn$_invoke$arity$1 ? k.cljs$core$IFn$_invoke$arity$1(G__36186) : k.call(null,G__36186));
})())){
return x;
} else {
return y;
}
});
var max_key__4 = (function() { 
var G__36187__delegate = function (k,x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (p1__36175_SHARP_,p2__36176_SHARP_){
return max_key.cljs$core$IFn$_invoke$arity$3(k,p1__36175_SHARP_,p2__36176_SHARP_);
}),max_key.cljs$core$IFn$_invoke$arity$3(k,x,y),more);
};
var G__36187 = function (k,x,y,var_args){
var more = null;
if (arguments.length > 3) {
var G__36188__i = 0, G__36188__a = new Array(arguments.length -  3);
while (G__36188__i < G__36188__a.length) {G__36188__a[G__36188__i] = arguments[G__36188__i + 3]; ++G__36188__i;}
  more = new cljs.core.IndexedSeq(G__36188__a,0);
} 
return G__36187__delegate.call(this,k,x,y,more);};
G__36187.cljs$lang$maxFixedArity = 3;
G__36187.cljs$lang$applyTo = (function (arglist__36189){
var k = cljs.core.first(arglist__36189);
arglist__36189 = cljs.core.next(arglist__36189);
var x = cljs.core.first(arglist__36189);
arglist__36189 = cljs.core.next(arglist__36189);
var y = cljs.core.first(arglist__36189);
var more = cljs.core.rest(arglist__36189);
return G__36187__delegate(k,x,y,more);
});
G__36187.cljs$core$IFn$_invoke$arity$variadic = G__36187__delegate;
return G__36187;
})()
;
max_key = function(k,x,y,var_args){
var more = var_args;
switch(arguments.length){
case 2:
return max_key__2.call(this,k,x);
case 3:
return max_key__3.call(this,k,x,y);
default:
var G__36190 = null;
if (arguments.length > 3) {
var G__36191__i = 0, G__36191__a = new Array(arguments.length -  3);
while (G__36191__i < G__36191__a.length) {G__36191__a[G__36191__i] = arguments[G__36191__i + 3]; ++G__36191__i;}
G__36190 = new cljs.core.IndexedSeq(G__36191__a,0);
}
return max_key__4.cljs$core$IFn$_invoke$arity$variadic(k,x,y, G__36190);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
max_key.cljs$lang$maxFixedArity = 3;
max_key.cljs$lang$applyTo = max_key__4.cljs$lang$applyTo;
max_key.cljs$core$IFn$_invoke$arity$2 = max_key__2;
max_key.cljs$core$IFn$_invoke$arity$3 = max_key__3;
max_key.cljs$core$IFn$_invoke$arity$variadic = max_key__4.cljs$core$IFn$_invoke$arity$variadic;
return max_key;
})()
;
/**
* Returns the x for which (k x), a number, is least.
* @param {...*} var_args
*/
cljs.core.min_key = (function() {
var min_key = null;
var min_key__2 = (function (k,x){
return x;
});
var min_key__3 = (function (k,x,y){
if(((function (){var G__36202 = x;
return (k.cljs$core$IFn$_invoke$arity$1 ? k.cljs$core$IFn$_invoke$arity$1(G__36202) : k.call(null,G__36202));
})() < (function (){var G__36203 = y;
return (k.cljs$core$IFn$_invoke$arity$1 ? k.cljs$core$IFn$_invoke$arity$1(G__36203) : k.call(null,G__36203));
})())){
return x;
} else {
return y;
}
});
var min_key__4 = (function() { 
var G__36204__delegate = function (k,x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (p1__36192_SHARP_,p2__36193_SHARP_){
return min_key.cljs$core$IFn$_invoke$arity$3(k,p1__36192_SHARP_,p2__36193_SHARP_);
}),min_key.cljs$core$IFn$_invoke$arity$3(k,x,y),more);
};
var G__36204 = function (k,x,y,var_args){
var more = null;
if (arguments.length > 3) {
var G__36205__i = 0, G__36205__a = new Array(arguments.length -  3);
while (G__36205__i < G__36205__a.length) {G__36205__a[G__36205__i] = arguments[G__36205__i + 3]; ++G__36205__i;}
  more = new cljs.core.IndexedSeq(G__36205__a,0);
} 
return G__36204__delegate.call(this,k,x,y,more);};
G__36204.cljs$lang$maxFixedArity = 3;
G__36204.cljs$lang$applyTo = (function (arglist__36206){
var k = cljs.core.first(arglist__36206);
arglist__36206 = cljs.core.next(arglist__36206);
var x = cljs.core.first(arglist__36206);
arglist__36206 = cljs.core.next(arglist__36206);
var y = cljs.core.first(arglist__36206);
var more = cljs.core.rest(arglist__36206);
return G__36204__delegate(k,x,y,more);
});
G__36204.cljs$core$IFn$_invoke$arity$variadic = G__36204__delegate;
return G__36204;
})()
;
min_key = function(k,x,y,var_args){
var more = var_args;
switch(arguments.length){
case 2:
return min_key__2.call(this,k,x);
case 3:
return min_key__3.call(this,k,x,y);
default:
var G__36207 = null;
if (arguments.length > 3) {
var G__36208__i = 0, G__36208__a = new Array(arguments.length -  3);
while (G__36208__i < G__36208__a.length) {G__36208__a[G__36208__i] = arguments[G__36208__i + 3]; ++G__36208__i;}
G__36207 = new cljs.core.IndexedSeq(G__36208__a,0);
}
return min_key__4.cljs$core$IFn$_invoke$arity$variadic(k,x,y, G__36207);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
min_key.cljs$lang$maxFixedArity = 3;
min_key.cljs$lang$applyTo = min_key__4.cljs$lang$applyTo;
min_key.cljs$core$IFn$_invoke$arity$2 = min_key__2;
min_key.cljs$core$IFn$_invoke$arity$3 = min_key__3;
min_key.cljs$core$IFn$_invoke$arity$variadic = min_key__4.cljs$core$IFn$_invoke$arity$variadic;
return min_key;
})()
;

/**
* @constructor
*/
cljs.core.ArrayList = (function (arr){
this.arr = arr;
})
cljs.core.ArrayList.prototype.add = (function (x){
var self__ = this;
var _ = this;
return self__.arr.push(x);
});

cljs.core.ArrayList.prototype.size = (function (){
var self__ = this;
var _ = this;
return self__.arr.length;
});

cljs.core.ArrayList.prototype.clear = (function (){
var self__ = this;
var _ = this;
return self__.arr = [];
});

cljs.core.ArrayList.prototype.isEmpty = (function (){
var self__ = this;
var _ = this;
return (self__.arr.length === (0));
});

cljs.core.ArrayList.prototype.toArray = (function (){
var self__ = this;
var _ = this;
return self__.arr;
});

cljs.core.ArrayList.cljs$lang$type = true;

cljs.core.ArrayList.cljs$lang$ctorStr = "cljs.core/ArrayList";

cljs.core.ArrayList.cljs$lang$ctorPrWriter = (function (this__24859__auto__,writer__24860__auto__,opt__24861__auto__){
return cljs.core._write(writer__24860__auto__,"cljs.core/ArrayList");
});

cljs.core.__GT_ArrayList = (function __GT_ArrayList(arr){
return (new cljs.core.ArrayList(arr));
});

cljs.core.array_list = (function array_list(){
return (new cljs.core.ArrayList([]));
});
/**
* Returns a lazy sequence of lists like partition, but may include
* partitions with fewer than n items at the end.  Returns a stateful
* transducer when no collection is provided.
*/
cljs.core.partition_all = (function() {
var partition_all = null;
var partition_all__1 = (function (n){
return (function (rf){
var a = cljs.core.array_list();
return ((function (a){
return (function() {
var G__36225 = null;
var G__36225__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__36225__1 = (function (result){
var result__$1 = (cljs.core.truth_(a.isEmpty())?result:(function (){var v = cljs.core.vec(a.toArray());
a.clear();

return cljs.core.unreduced((function (){var G__36220 = result;
var G__36221 = v;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__36220,G__36221) : rf.call(null,G__36220,G__36221));
})());
})());
var G__36222 = result__$1;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__36222) : rf.call(null,G__36222));
});
var G__36225__2 = (function (result,input){
a.add(input);

if((n === a.size())){
var v = cljs.core.vec(a.toArray());
a.clear();

var G__36223 = result;
var G__36224 = v;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__36223,G__36224) : rf.call(null,G__36223,G__36224));
} else {
return result;
}
});
G__36225 = function(result,input){
switch(arguments.length){
case 0:
return G__36225__0.call(this);
case 1:
return G__36225__1.call(this,result);
case 2:
return G__36225__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__36225.cljs$core$IFn$_invoke$arity$0 = G__36225__0;
G__36225.cljs$core$IFn$_invoke$arity$1 = G__36225__1;
G__36225.cljs$core$IFn$_invoke$arity$2 = G__36225__2;
return G__36225;
})()
;})(a))
});
});
var partition_all__2 = (function (n,coll){
return partition_all.cljs$core$IFn$_invoke$arity$3(n,n,coll);
});
var partition_all__3 = (function (n,step,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
return cljs.core.cons(cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,s),partition_all.cljs$core$IFn$_invoke$arity$3(n,step,cljs.core.drop.cljs$core$IFn$_invoke$arity$2(step,s)));
} else {
return null;
}
}),null,null));
});
partition_all = function(n,step,coll){
switch(arguments.length){
case 1:
return partition_all__1.call(this,n);
case 2:
return partition_all__2.call(this,n,step);
case 3:
return partition_all__3.call(this,n,step,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
partition_all.cljs$core$IFn$_invoke$arity$1 = partition_all__1;
partition_all.cljs$core$IFn$_invoke$arity$2 = partition_all__2;
partition_all.cljs$core$IFn$_invoke$arity$3 = partition_all__3;
return partition_all;
})()
;
/**
* Returns a lazy sequence of successive items from coll while
* (pred item) returns true. pred must be free of side-effects.
* Returns a transducer when no collection is provided.
*/
cljs.core.take_while = (function() {
var take_while = null;
var take_while__1 = (function (pred){
return (function (rf){
return (function() {
var G__36238 = null;
var G__36238__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__36238__1 = (function (result){
var G__36233 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__36233) : rf.call(null,G__36233));
});
var G__36238__2 = (function (result,input){
if(cljs.core.truth_((function (){var G__36234 = input;
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__36234) : pred.call(null,G__36234));
})())){
var G__36235 = result;
var G__36236 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__36235,G__36236) : rf.call(null,G__36235,G__36236));
} else {
return cljs.core.reduced(result);
}
});
G__36238 = function(result,input){
switch(arguments.length){
case 0:
return G__36238__0.call(this);
case 1:
return G__36238__1.call(this,result);
case 2:
return G__36238__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__36238.cljs$core$IFn$_invoke$arity$0 = G__36238__0;
G__36238.cljs$core$IFn$_invoke$arity$1 = G__36238__1;
G__36238.cljs$core$IFn$_invoke$arity$2 = G__36238__2;
return G__36238;
})()
});
});
var take_while__2 = (function (pred,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
if(cljs.core.truth_((function (){var G__36237 = cljs.core.first(s);
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__36237) : pred.call(null,G__36237));
})())){
return cljs.core.cons(cljs.core.first(s),take_while.cljs$core$IFn$_invoke$arity$2(pred,cljs.core.rest(s)));
} else {
return null;
}
} else {
return null;
}
}),null,null));
});
take_while = function(pred,coll){
switch(arguments.length){
case 1:
return take_while__1.call(this,pred);
case 2:
return take_while__2.call(this,pred,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
take_while.cljs$core$IFn$_invoke$arity$1 = take_while__1;
take_while.cljs$core$IFn$_invoke$arity$2 = take_while__2;
return take_while;
})()
;
cljs.core.mk_bound_fn = (function mk_bound_fn(sc,test,key){
return (function (e){
var comp = cljs.core._comparator(sc);
var G__36243 = (function (){var G__36245 = cljs.core._entry_key(sc,e);
var G__36246 = key;
return (comp.cljs$core$IFn$_invoke$arity$2 ? comp.cljs$core$IFn$_invoke$arity$2(G__36245,G__36246) : comp.call(null,G__36245,G__36246));
})();
var G__36244 = (0);
return (test.cljs$core$IFn$_invoke$arity$2 ? test.cljs$core$IFn$_invoke$arity$2(G__36243,G__36244) : test.call(null,G__36243,G__36244));
});
});
/**
* sc must be a sorted collection, test(s) one of <, <=, > or
* >=. Returns a seq of those entries with keys ek for
* which (test (.. sc comparator (compare ek key)) 0) is true
*/
cljs.core.subseq = (function() {
var subseq = null;
var subseq__3 = (function (sc,test,key){
var include = cljs.core.mk_bound_fn(sc,test,key);
if(cljs.core.truth_(cljs.core.PersistentHashSet.fromArray([cljs.core._GT_,cljs.core._GT__EQ_], true).call(null,test))){
var temp__4126__auto__ = cljs.core._sorted_seq_from(sc,key,true);
if(cljs.core.truth_(temp__4126__auto__)){
var vec__36250 = temp__4126__auto__;
var e = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__36250,(0),null);
var s = vec__36250;
if(cljs.core.truth_((function (){var G__36251 = e;
return (include.cljs$core$IFn$_invoke$arity$1 ? include.cljs$core$IFn$_invoke$arity$1(G__36251) : include.call(null,G__36251));
})())){
return s;
} else {
return cljs.core.next(s);
}
} else {
return null;
}
} else {
return cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(include,cljs.core._sorted_seq(sc,true));
}
});
var subseq__5 = (function (sc,start_test,start_key,end_test,end_key){
var temp__4126__auto__ = cljs.core._sorted_seq_from(sc,start_key,true);
if(cljs.core.truth_(temp__4126__auto__)){
var vec__36252 = temp__4126__auto__;
var e = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__36252,(0),null);
var s = vec__36252;
return cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(cljs.core.mk_bound_fn(sc,end_test,end_key),(cljs.core.truth_(cljs.core.mk_bound_fn(sc,start_test,start_key).call(null,e))?s:cljs.core.next(s)));
} else {
return null;
}
});
subseq = function(sc,start_test,start_key,end_test,end_key){
switch(arguments.length){
case 3:
return subseq__3.call(this,sc,start_test,start_key);
case 5:
return subseq__5.call(this,sc,start_test,start_key,end_test,end_key);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
subseq.cljs$core$IFn$_invoke$arity$3 = subseq__3;
subseq.cljs$core$IFn$_invoke$arity$5 = subseq__5;
return subseq;
})()
;
/**
* sc must be a sorted collection, test(s) one of <, <=, > or
* >=. Returns a reverse seq of those entries with keys ek for
* which (test (.. sc comparator (compare ek key)) 0) is true
*/
cljs.core.rsubseq = (function() {
var rsubseq = null;
var rsubseq__3 = (function (sc,test,key){
var include = cljs.core.mk_bound_fn(sc,test,key);
if(cljs.core.truth_(cljs.core.PersistentHashSet.fromArray([cljs.core._LT_,cljs.core._LT__EQ_], true).call(null,test))){
var temp__4126__auto__ = cljs.core._sorted_seq_from(sc,key,false);
if(cljs.core.truth_(temp__4126__auto__)){
var vec__36256 = temp__4126__auto__;
var e = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__36256,(0),null);
var s = vec__36256;
if(cljs.core.truth_((function (){var G__36257 = e;
return (include.cljs$core$IFn$_invoke$arity$1 ? include.cljs$core$IFn$_invoke$arity$1(G__36257) : include.call(null,G__36257));
})())){
return s;
} else {
return cljs.core.next(s);
}
} else {
return null;
}
} else {
return cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(include,cljs.core._sorted_seq(sc,false));
}
});
var rsubseq__5 = (function (sc,start_test,start_key,end_test,end_key){
var temp__4126__auto__ = cljs.core._sorted_seq_from(sc,end_key,false);
if(cljs.core.truth_(temp__4126__auto__)){
var vec__36258 = temp__4126__auto__;
var e = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__36258,(0),null);
var s = vec__36258;
return cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(cljs.core.mk_bound_fn(sc,start_test,start_key),(cljs.core.truth_(cljs.core.mk_bound_fn(sc,end_test,end_key).call(null,e))?s:cljs.core.next(s)));
} else {
return null;
}
});
rsubseq = function(sc,start_test,start_key,end_test,end_key){
switch(arguments.length){
case 3:
return rsubseq__3.call(this,sc,start_test,start_key);
case 5:
return rsubseq__5.call(this,sc,start_test,start_key,end_test,end_key);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
rsubseq.cljs$core$IFn$_invoke$arity$3 = rsubseq__3;
rsubseq.cljs$core$IFn$_invoke$arity$5 = rsubseq__5;
return rsubseq;
})()
;

/**
* @constructor
*/
cljs.core.RangeIterator = (function (i,end,step){
this.i = i;
this.end = end;
this.step = step;
})
cljs.core.RangeIterator.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
if((self__.step > (0))){
return (self__.i < self__.end);
} else {
return (self__.i > self__.end);
}
});

cljs.core.RangeIterator.prototype.next = (function (){
var self__ = this;
var _ = this;
var ret = self__.i;
self__.i = (self__.i + self__.step);

return ret;
});

cljs.core.RangeIterator.cljs$lang$type = true;

cljs.core.RangeIterator.cljs$lang$ctorStr = "cljs.core/RangeIterator";

cljs.core.RangeIterator.cljs$lang$ctorPrWriter = (function (this__24859__auto__,writer__24860__auto__,opt__24861__auto__){
return cljs.core._write(writer__24860__auto__,"cljs.core/RangeIterator");
});

cljs.core.__GT_RangeIterator = (function __GT_RangeIterator(i,end,step){
return (new cljs.core.RangeIterator(i,end,step));
});


/**
* @constructor
*/
cljs.core.Range = (function (meta,start,end,step,__hash){
this.meta = meta;
this.start = start;
this.end = end;
this.step = step;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 32375006;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.Range.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.Range.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.Range.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (rng,n){
var self__ = this;
var rng__$1 = this;
if((n < cljs.core._count(rng__$1))){
return (self__.start + (n * self__.step));
} else {
if(((self__.start > self__.end)) && ((self__.step === (0)))){
return self__.start;
} else {
throw (new Error("Index out of bounds"));
}
}
});

cljs.core.Range.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (rng,n,not_found){
var self__ = this;
var rng__$1 = this;
if((n < cljs.core._count(rng__$1))){
return (self__.start + (n * self__.step));
} else {
if(((self__.start > self__.end)) && ((self__.step === (0)))){
return self__.start;
} else {
return not_found;
}
}
});

cljs.core.Range.prototype.cljs$core$IIterable$ = true;

cljs.core.Range.prototype.cljs$core$IIterable$_iterator$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.RangeIterator(self__.start,self__.end,self__.step));
});

cljs.core.Range.prototype.cljs$core$IMeta$_meta$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
return self__.meta;
});

cljs.core.Range.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.Range(self__.meta,self__.start,self__.end,self__.step,self__.__hash));
});

cljs.core.Range.prototype.cljs$core$INext$_next$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
if((self__.step > (0))){
if(((self__.start + self__.step) < self__.end)){
return (new cljs.core.Range(self__.meta,(self__.start + self__.step),self__.end,self__.step,null));
} else {
return null;
}
} else {
if(((self__.start + self__.step) > self__.end)){
return (new cljs.core.Range(self__.meta,(self__.start + self__.step),self__.end,self__.step,null));
} else {
return null;
}
}
});

cljs.core.Range.prototype.cljs$core$ICounted$_count$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
if(cljs.core.not(cljs.core._seq(rng__$1))){
return (0);
} else {
var G__36259 = ((self__.end - self__.start) / self__.step);
return (Math.ceil.cljs$core$IFn$_invoke$arity$1 ? Math.ceil.cljs$core$IFn$_invoke$arity$1(G__36259) : Math.ceil.call(null,G__36259));
}
});

cljs.core.Range.prototype.cljs$core$IHash$_hash$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
var h__24693__auto__ = self__.__hash;
if(!((h__24693__auto__ == null))){
return h__24693__auto__;
} else {
var h__24693__auto____$1 = cljs.core.hash_ordered_coll(rng__$1);
self__.__hash = h__24693__auto____$1;

return h__24693__auto____$1;
}
});

cljs.core.Range.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (rng,other){
var self__ = this;
var rng__$1 = this;
return cljs.core.equiv_sequential(rng__$1,other);
});

cljs.core.Range.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.Range.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (rng,f){
var self__ = this;
var rng__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(rng__$1,f);
});

cljs.core.Range.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (rng,f,init){
var self__ = this;
var rng__$1 = this;
var i = self__.start;
var ret = init;
while(true){
if((((self__.step > (0)))?(i < self__.end):(i > self__.end))){
var ret__$1 = (function (){var G__36260 = ret;
var G__36261 = i;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__36260,G__36261) : f.call(null,G__36260,G__36261));
})();
if(cljs.core.reduced_QMARK_(ret__$1)){
var G__36262 = ret__$1;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__36262) : cljs.core.deref.call(null,G__36262));
} else {
var G__36263 = (i + self__.step);
var G__36264 = ret__$1;
i = G__36263;
ret = G__36264;
continue;
}
} else {
return ret;
}
break;
}
});

cljs.core.Range.prototype.cljs$core$ISeq$_first$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
if((cljs.core._seq(rng__$1) == null)){
return null;
} else {
return self__.start;
}
});

cljs.core.Range.prototype.cljs$core$ISeq$_rest$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
if(!((cljs.core._seq(rng__$1) == null))){
return (new cljs.core.Range(self__.meta,(self__.start + self__.step),self__.end,self__.step,null));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.Range.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
if((self__.step > (0))){
if((self__.start < self__.end)){
return rng__$1;
} else {
return null;
}
} else {
if((self__.start > self__.end)){
return rng__$1;
} else {
return null;
}
}
});

cljs.core.Range.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (rng,meta__$1){
var self__ = this;
var rng__$1 = this;
return (new cljs.core.Range(meta__$1,self__.start,self__.end,self__.step,self__.__hash));
});

cljs.core.Range.prototype.cljs$core$ICollection$_conj$arity$2 = (function (rng,o){
var self__ = this;
var rng__$1 = this;
return cljs.core.cons(o,rng__$1);
});

cljs.core.Range.cljs$lang$type = true;

cljs.core.Range.cljs$lang$ctorStr = "cljs.core/Range";

cljs.core.Range.cljs$lang$ctorPrWriter = (function (this__24859__auto__,writer__24860__auto__,opt__24861__auto__){
return cljs.core._write(writer__24860__auto__,"cljs.core/Range");
});

cljs.core.__GT_Range = (function __GT_Range(meta,start,end,step,__hash){
return (new cljs.core.Range(meta,start,end,step,__hash));
});

(cljs.core.Range.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__25250__auto__ = this;
return cljs.core.es6_iterator(this__25250__auto__);
}));
/**
* Returns a lazy seq of nums from start (inclusive) to end
* (exclusive), by step, where start defaults to 0, step to 1,
* and end to infinity.
*/
cljs.core.range = (function() {
var range = null;
var range__0 = (function (){
return range.cljs$core$IFn$_invoke$arity$3((0),Number.MAX_VALUE,(1));
});
var range__1 = (function (end){
return range.cljs$core$IFn$_invoke$arity$3((0),end,(1));
});
var range__2 = (function (start,end){
return range.cljs$core$IFn$_invoke$arity$3(start,end,(1));
});
var range__3 = (function (start,end,step){
return (new cljs.core.Range(null,start,end,step,null));
});
range = function(start,end,step){
switch(arguments.length){
case 0:
return range__0.call(this);
case 1:
return range__1.call(this,start);
case 2:
return range__2.call(this,start,end);
case 3:
return range__3.call(this,start,end,step);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
range.cljs$core$IFn$_invoke$arity$0 = range__0;
range.cljs$core$IFn$_invoke$arity$1 = range__1;
range.cljs$core$IFn$_invoke$arity$2 = range__2;
range.cljs$core$IFn$_invoke$arity$3 = range__3;
return range;
})()
;
/**
* Returns a lazy seq of every nth item in coll.  Returns a stateful
* transducer when no collection is provided.
*/
cljs.core.take_nth = (function() {
var take_nth = null;
var take_nth__1 = (function (n){
return (function (rf){
var ia = cljs.core.volatile_BANG_((-1));
return ((function (ia){
return (function() {
var G__36282 = null;
var G__36282__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__36282__1 = (function (result){
var G__36279 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__36279) : rf.call(null,G__36279));
});
var G__36282__2 = (function (result,input){
var i = ia.cljs$core$IVolatile$_vreset_BANG_$arity$2(null,(ia.cljs$core$IDeref$_deref$arity$1(null) + (1)));
if((cljs.core.rem(i,n) === (0))){
var G__36280 = result;
var G__36281 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__36280,G__36281) : rf.call(null,G__36280,G__36281));
} else {
return result;
}
});
G__36282 = function(result,input){
switch(arguments.length){
case 0:
return G__36282__0.call(this);
case 1:
return G__36282__1.call(this,result);
case 2:
return G__36282__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__36282.cljs$core$IFn$_invoke$arity$0 = G__36282__0;
G__36282.cljs$core$IFn$_invoke$arity$1 = G__36282__1;
G__36282.cljs$core$IFn$_invoke$arity$2 = G__36282__2;
return G__36282;
})()
;})(ia))
});
});
var take_nth__2 = (function (n,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
return cljs.core.cons(cljs.core.first(s),take_nth.cljs$core$IFn$_invoke$arity$2(n,cljs.core.drop.cljs$core$IFn$_invoke$arity$2(n,s)));
} else {
return null;
}
}),null,null));
});
take_nth = function(n,coll){
switch(arguments.length){
case 1:
return take_nth__1.call(this,n);
case 2:
return take_nth__2.call(this,n,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
take_nth.cljs$core$IFn$_invoke$arity$1 = take_nth__1;
take_nth.cljs$core$IFn$_invoke$arity$2 = take_nth__2;
return take_nth;
})()
;
/**
* Returns a vector of [(take-while pred coll) (drop-while pred coll)]
*/
cljs.core.split_with = (function split_with(pred,coll){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(pred,coll),cljs.core.drop_while.cljs$core$IFn$_invoke$arity$2(pred,coll)], null);
});
/**
* Applies f to each value in coll, splitting it each time f returns a
* new value.  Returns a lazy seq of partitions.  Returns a stateful
* transducer when no collection is provided.
*/
cljs.core.partition_by = (function() {
var partition_by = null;
var partition_by__1 = (function (f){
return (function (rf){
var a = cljs.core.array_list();
var pa = cljs.core.volatile_BANG_(new cljs.core.Keyword("cljs.core","none","cljs.core/none",926646439));
return ((function (a,pa){
return (function() {
var G__36304 = null;
var G__36304__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__36304__1 = (function (result){
var result__$1 = (cljs.core.truth_(a.isEmpty())?result:(function (){var v = cljs.core.vec(a.toArray());
a.clear();

return cljs.core.unreduced((function (){var G__36295 = result;
var G__36296 = v;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__36295,G__36296) : rf.call(null,G__36295,G__36296));
})());
})());
var G__36297 = result__$1;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__36297) : rf.call(null,G__36297));
});
var G__36304__2 = (function (result,input){
var pval = (function (){var G__36298 = pa;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__36298) : cljs.core.deref.call(null,G__36298));
})();
var val = (function (){var G__36299 = input;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__36299) : f.call(null,G__36299));
})();
cljs.core.vreset_BANG_(pa,val);

if((cljs.core.keyword_identical_QMARK_(pval,new cljs.core.Keyword("cljs.core","none","cljs.core/none",926646439))) || (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(val,pval))){
a.add(input);

return result;
} else {
var v = cljs.core.vec(a.toArray());
a.clear();

var ret = (function (){var G__36300 = result;
var G__36301 = v;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__36300,G__36301) : rf.call(null,G__36300,G__36301));
})();
if(cljs.core.reduced_QMARK_(ret)){
} else {
a.add(input);
}

return ret;
}
});
G__36304 = function(result,input){
switch(arguments.length){
case 0:
return G__36304__0.call(this);
case 1:
return G__36304__1.call(this,result);
case 2:
return G__36304__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__36304.cljs$core$IFn$_invoke$arity$0 = G__36304__0;
G__36304.cljs$core$IFn$_invoke$arity$1 = G__36304__1;
G__36304.cljs$core$IFn$_invoke$arity$2 = G__36304__2;
return G__36304;
})()
;})(a,pa))
});
});
var partition_by__2 = (function (f,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
var fst = cljs.core.first(s);
var fv = (function (){var G__36302 = fst;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__36302) : f.call(null,G__36302));
})();
var run = cljs.core.cons(fst,cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(((function (fst,fv,s,temp__4126__auto__){
return (function (p1__36283_SHARP_){
return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(fv,(function (){var G__36303 = p1__36283_SHARP_;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__36303) : f.call(null,G__36303));
})());
});})(fst,fv,s,temp__4126__auto__))
,cljs.core.next(s)));
return cljs.core.cons(run,partition_by.cljs$core$IFn$_invoke$arity$2(f,cljs.core.seq(cljs.core.drop.cljs$core$IFn$_invoke$arity$2(cljs.core.count(run),s))));
} else {
return null;
}
}),null,null));
});
partition_by = function(f,coll){
switch(arguments.length){
case 1:
return partition_by__1.call(this,f);
case 2:
return partition_by__2.call(this,f,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
partition_by.cljs$core$IFn$_invoke$arity$1 = partition_by__1;
partition_by.cljs$core$IFn$_invoke$arity$2 = partition_by__2;
return partition_by;
})()
;
/**
* Returns a map from distinct items in coll to the number of times
* they appear.
*/
cljs.core.frequencies = (function frequencies(coll){
return cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (counts,x){
return cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(counts,x,(cljs.core.get.cljs$core$IFn$_invoke$arity$3(counts,x,(0)) + (1)));
}),cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY),coll));
});
/**
* Returns a lazy seq of the intermediate values of the reduction (as
* per reduce) of coll by f, starting with init.
*/
cljs.core.reductions = (function() {
var reductions = null;
var reductions__2 = (function (f,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4124__auto__ = cljs.core.seq(coll);
if(temp__4124__auto__){
var s = temp__4124__auto__;
return reductions.cljs$core$IFn$_invoke$arity$3(f,cljs.core.first(s),cljs.core.rest(s));
} else {
return cljs.core._conj(cljs.core.List.EMPTY,(function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})());
}
}),null,null));
});
var reductions__3 = (function (f,init,coll){
return cljs.core.cons(init,(new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
return reductions.cljs$core$IFn$_invoke$arity$3(f,(function (){var G__36313 = init;
var G__36314 = cljs.core.first(s);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__36313,G__36314) : f.call(null,G__36313,G__36314));
})(),cljs.core.rest(s));
} else {
return null;
}
}),null,null)));
});
reductions = function(f,init,coll){
switch(arguments.length){
case 2:
return reductions__2.call(this,f,init);
case 3:
return reductions__3.call(this,f,init,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
reductions.cljs$core$IFn$_invoke$arity$2 = reductions__2;
reductions.cljs$core$IFn$_invoke$arity$3 = reductions__3;
return reductions;
})()
;
/**
* Takes a set of functions and returns a fn that is the juxtaposition
* of those fns.  The returned fn takes a variable number of args, and
* returns a vector containing the result of applying each fn to the
* args (left-to-right).
* ((juxt a b c) x) => [(a x) (b x) (c x)]
* @param {...*} var_args
*/
cljs.core.juxt = (function() {
var juxt = null;
var juxt__1 = (function (f){
return (function() {
var G__36409 = null;
var G__36409__0 = (function (){
return (new cljs.core.PersistentVector(null,1,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})()],null));
});
var G__36409__1 = (function (x){
return (new cljs.core.PersistentVector(null,1,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__36367 = x;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__36367) : f.call(null,G__36367));
})()],null));
});
var G__36409__2 = (function (x,y){
return (new cljs.core.PersistentVector(null,1,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__36368 = x;
var G__36369 = y;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__36368,G__36369) : f.call(null,G__36368,G__36369));
})()],null));
});
var G__36409__3 = (function (x,y,z){
return (new cljs.core.PersistentVector(null,1,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__36370 = x;
var G__36371 = y;
var G__36372 = z;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__36370,G__36371,G__36372) : f.call(null,G__36370,G__36371,G__36372));
})()],null));
});
var G__36409__4 = (function() { 
var G__36410__delegate = function (x,y,z,args){
return (new cljs.core.PersistentVector(null,1,(5),cljs.core.PersistentVector.EMPTY_NODE,[cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,x,y,z,args)],null));
};
var G__36410 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__36411__i = 0, G__36411__a = new Array(arguments.length -  3);
while (G__36411__i < G__36411__a.length) {G__36411__a[G__36411__i] = arguments[G__36411__i + 3]; ++G__36411__i;}
  args = new cljs.core.IndexedSeq(G__36411__a,0);
} 
return G__36410__delegate.call(this,x,y,z,args);};
G__36410.cljs$lang$maxFixedArity = 3;
G__36410.cljs$lang$applyTo = (function (arglist__36412){
var x = cljs.core.first(arglist__36412);
arglist__36412 = cljs.core.next(arglist__36412);
var y = cljs.core.first(arglist__36412);
arglist__36412 = cljs.core.next(arglist__36412);
var z = cljs.core.first(arglist__36412);
var args = cljs.core.rest(arglist__36412);
return G__36410__delegate(x,y,z,args);
});
G__36410.cljs$core$IFn$_invoke$arity$variadic = G__36410__delegate;
return G__36410;
})()
;
G__36409 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__36409__0.call(this);
case 1:
return G__36409__1.call(this,x);
case 2:
return G__36409__2.call(this,x,y);
case 3:
return G__36409__3.call(this,x,y,z);
default:
var G__36413 = null;
if (arguments.length > 3) {
var G__36414__i = 0, G__36414__a = new Array(arguments.length -  3);
while (G__36414__i < G__36414__a.length) {G__36414__a[G__36414__i] = arguments[G__36414__i + 3]; ++G__36414__i;}
G__36413 = new cljs.core.IndexedSeq(G__36414__a,0);
}
return G__36409__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__36413);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__36409.cljs$lang$maxFixedArity = 3;
G__36409.cljs$lang$applyTo = G__36409__4.cljs$lang$applyTo;
G__36409.cljs$core$IFn$_invoke$arity$0 = G__36409__0;
G__36409.cljs$core$IFn$_invoke$arity$1 = G__36409__1;
G__36409.cljs$core$IFn$_invoke$arity$2 = G__36409__2;
G__36409.cljs$core$IFn$_invoke$arity$3 = G__36409__3;
G__36409.cljs$core$IFn$_invoke$arity$variadic = G__36409__4.cljs$core$IFn$_invoke$arity$variadic;
return G__36409;
})()
});
var juxt__2 = (function (f,g){
return (function() {
var G__36415 = null;
var G__36415__0 = (function (){
return (new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})(),(function (){return (g.cljs$core$IFn$_invoke$arity$0 ? g.cljs$core$IFn$_invoke$arity$0() : g.call(null));
})()],null));
});
var G__36415__1 = (function (x){
return (new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__36373 = x;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__36373) : f.call(null,G__36373));
})(),(function (){var G__36374 = x;
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__36374) : g.call(null,G__36374));
})()],null));
});
var G__36415__2 = (function (x,y){
return (new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__36375 = x;
var G__36376 = y;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__36375,G__36376) : f.call(null,G__36375,G__36376));
})(),(function (){var G__36377 = x;
var G__36378 = y;
return (g.cljs$core$IFn$_invoke$arity$2 ? g.cljs$core$IFn$_invoke$arity$2(G__36377,G__36378) : g.call(null,G__36377,G__36378));
})()],null));
});
var G__36415__3 = (function (x,y,z){
return (new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__36379 = x;
var G__36380 = y;
var G__36381 = z;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__36379,G__36380,G__36381) : f.call(null,G__36379,G__36380,G__36381));
})(),(function (){var G__36382 = x;
var G__36383 = y;
var G__36384 = z;
return (g.cljs$core$IFn$_invoke$arity$3 ? g.cljs$core$IFn$_invoke$arity$3(G__36382,G__36383,G__36384) : g.call(null,G__36382,G__36383,G__36384));
})()],null));
});
var G__36415__4 = (function() { 
var G__36416__delegate = function (x,y,z,args){
return (new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,x,y,z,args),cljs.core.apply.cljs$core$IFn$_invoke$arity$5(g,x,y,z,args)],null));
};
var G__36416 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__36417__i = 0, G__36417__a = new Array(arguments.length -  3);
while (G__36417__i < G__36417__a.length) {G__36417__a[G__36417__i] = arguments[G__36417__i + 3]; ++G__36417__i;}
  args = new cljs.core.IndexedSeq(G__36417__a,0);
} 
return G__36416__delegate.call(this,x,y,z,args);};
G__36416.cljs$lang$maxFixedArity = 3;
G__36416.cljs$lang$applyTo = (function (arglist__36418){
var x = cljs.core.first(arglist__36418);
arglist__36418 = cljs.core.next(arglist__36418);
var y = cljs.core.first(arglist__36418);
arglist__36418 = cljs.core.next(arglist__36418);
var z = cljs.core.first(arglist__36418);
var args = cljs.core.rest(arglist__36418);
return G__36416__delegate(x,y,z,args);
});
G__36416.cljs$core$IFn$_invoke$arity$variadic = G__36416__delegate;
return G__36416;
})()
;
G__36415 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__36415__0.call(this);
case 1:
return G__36415__1.call(this,x);
case 2:
return G__36415__2.call(this,x,y);
case 3:
return G__36415__3.call(this,x,y,z);
default:
var G__36419 = null;
if (arguments.length > 3) {
var G__36420__i = 0, G__36420__a = new Array(arguments.length -  3);
while (G__36420__i < G__36420__a.length) {G__36420__a[G__36420__i] = arguments[G__36420__i + 3]; ++G__36420__i;}
G__36419 = new cljs.core.IndexedSeq(G__36420__a,0);
}
return G__36415__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__36419);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__36415.cljs$lang$maxFixedArity = 3;
G__36415.cljs$lang$applyTo = G__36415__4.cljs$lang$applyTo;
G__36415.cljs$core$IFn$_invoke$arity$0 = G__36415__0;
G__36415.cljs$core$IFn$_invoke$arity$1 = G__36415__1;
G__36415.cljs$core$IFn$_invoke$arity$2 = G__36415__2;
G__36415.cljs$core$IFn$_invoke$arity$3 = G__36415__3;
G__36415.cljs$core$IFn$_invoke$arity$variadic = G__36415__4.cljs$core$IFn$_invoke$arity$variadic;
return G__36415;
})()
});
var juxt__3 = (function (f,g,h){
return (function() {
var G__36421 = null;
var G__36421__0 = (function (){
return (new cljs.core.PersistentVector(null,3,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})(),(function (){return (g.cljs$core$IFn$_invoke$arity$0 ? g.cljs$core$IFn$_invoke$arity$0() : g.call(null));
})(),(function (){return (h.cljs$core$IFn$_invoke$arity$0 ? h.cljs$core$IFn$_invoke$arity$0() : h.call(null));
})()],null));
});
var G__36421__1 = (function (x){
return (new cljs.core.PersistentVector(null,3,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__36385 = x;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__36385) : f.call(null,G__36385));
})(),(function (){var G__36386 = x;
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__36386) : g.call(null,G__36386));
})(),(function (){var G__36387 = x;
return (h.cljs$core$IFn$_invoke$arity$1 ? h.cljs$core$IFn$_invoke$arity$1(G__36387) : h.call(null,G__36387));
})()],null));
});
var G__36421__2 = (function (x,y){
return (new cljs.core.PersistentVector(null,3,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__36388 = x;
var G__36389 = y;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__36388,G__36389) : f.call(null,G__36388,G__36389));
})(),(function (){var G__36390 = x;
var G__36391 = y;
return (g.cljs$core$IFn$_invoke$arity$2 ? g.cljs$core$IFn$_invoke$arity$2(G__36390,G__36391) : g.call(null,G__36390,G__36391));
})(),(function (){var G__36392 = x;
var G__36393 = y;
return (h.cljs$core$IFn$_invoke$arity$2 ? h.cljs$core$IFn$_invoke$arity$2(G__36392,G__36393) : h.call(null,G__36392,G__36393));
})()],null));
});
var G__36421__3 = (function (x,y,z){
return (new cljs.core.PersistentVector(null,3,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__36394 = x;
var G__36395 = y;
var G__36396 = z;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__36394,G__36395,G__36396) : f.call(null,G__36394,G__36395,G__36396));
})(),(function (){var G__36397 = x;
var G__36398 = y;
var G__36399 = z;
return (g.cljs$core$IFn$_invoke$arity$3 ? g.cljs$core$IFn$_invoke$arity$3(G__36397,G__36398,G__36399) : g.call(null,G__36397,G__36398,G__36399));
})(),(function (){var G__36400 = x;
var G__36401 = y;
var G__36402 = z;
return (h.cljs$core$IFn$_invoke$arity$3 ? h.cljs$core$IFn$_invoke$arity$3(G__36400,G__36401,G__36402) : h.call(null,G__36400,G__36401,G__36402));
})()],null));
});
var G__36421__4 = (function() { 
var G__36422__delegate = function (x,y,z,args){
return (new cljs.core.PersistentVector(null,3,(5),cljs.core.PersistentVector.EMPTY_NODE,[cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,x,y,z,args),cljs.core.apply.cljs$core$IFn$_invoke$arity$5(g,x,y,z,args),cljs.core.apply.cljs$core$IFn$_invoke$arity$5(h,x,y,z,args)],null));
};
var G__36422 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__36423__i = 0, G__36423__a = new Array(arguments.length -  3);
while (G__36423__i < G__36423__a.length) {G__36423__a[G__36423__i] = arguments[G__36423__i + 3]; ++G__36423__i;}
  args = new cljs.core.IndexedSeq(G__36423__a,0);
} 
return G__36422__delegate.call(this,x,y,z,args);};
G__36422.cljs$lang$maxFixedArity = 3;
G__36422.cljs$lang$applyTo = (function (arglist__36424){
var x = cljs.core.first(arglist__36424);
arglist__36424 = cljs.core.next(arglist__36424);
var y = cljs.core.first(arglist__36424);
arglist__36424 = cljs.core.next(arglist__36424);
var z = cljs.core.first(arglist__36424);
var args = cljs.core.rest(arglist__36424);
return G__36422__delegate(x,y,z,args);
});
G__36422.cljs$core$IFn$_invoke$arity$variadic = G__36422__delegate;
return G__36422;
})()
;
G__36421 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__36421__0.call(this);
case 1:
return G__36421__1.call(this,x);
case 2:
return G__36421__2.call(this,x,y);
case 3:
return G__36421__3.call(this,x,y,z);
default:
var G__36425 = null;
if (arguments.length > 3) {
var G__36426__i = 0, G__36426__a = new Array(arguments.length -  3);
while (G__36426__i < G__36426__a.length) {G__36426__a[G__36426__i] = arguments[G__36426__i + 3]; ++G__36426__i;}
G__36425 = new cljs.core.IndexedSeq(G__36426__a,0);
}
return G__36421__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__36425);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__36421.cljs$lang$maxFixedArity = 3;
G__36421.cljs$lang$applyTo = G__36421__4.cljs$lang$applyTo;
G__36421.cljs$core$IFn$_invoke$arity$0 = G__36421__0;
G__36421.cljs$core$IFn$_invoke$arity$1 = G__36421__1;
G__36421.cljs$core$IFn$_invoke$arity$2 = G__36421__2;
G__36421.cljs$core$IFn$_invoke$arity$3 = G__36421__3;
G__36421.cljs$core$IFn$_invoke$arity$variadic = G__36421__4.cljs$core$IFn$_invoke$arity$variadic;
return G__36421;
})()
});
var juxt__4 = (function() { 
var G__36427__delegate = function (f,g,h,fs){
var fs__$1 = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(f,g,h,fs);
return ((function (fs__$1){
return (function() {
var G__36428 = null;
var G__36428__0 = (function (){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (fs__$1){
return (function (p1__36315_SHARP_,p2__36316_SHARP_){
return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__36315_SHARP_,(function (){return (p2__36316_SHARP_.cljs$core$IFn$_invoke$arity$0 ? p2__36316_SHARP_.cljs$core$IFn$_invoke$arity$0() : p2__36316_SHARP_.call(null));
})());
});})(fs__$1))
,cljs.core.PersistentVector.EMPTY,fs__$1);
});
var G__36428__1 = (function (x){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (fs__$1){
return (function (p1__36317_SHARP_,p2__36318_SHARP_){
return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__36317_SHARP_,(function (){var G__36403 = x;
return (p2__36318_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p2__36318_SHARP_.cljs$core$IFn$_invoke$arity$1(G__36403) : p2__36318_SHARP_.call(null,G__36403));
})());
});})(fs__$1))
,cljs.core.PersistentVector.EMPTY,fs__$1);
});
var G__36428__2 = (function (x,y){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (fs__$1){
return (function (p1__36319_SHARP_,p2__36320_SHARP_){
return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__36319_SHARP_,(function (){var G__36404 = x;
var G__36405 = y;
return (p2__36320_SHARP_.cljs$core$IFn$_invoke$arity$2 ? p2__36320_SHARP_.cljs$core$IFn$_invoke$arity$2(G__36404,G__36405) : p2__36320_SHARP_.call(null,G__36404,G__36405));
})());
});})(fs__$1))
,cljs.core.PersistentVector.EMPTY,fs__$1);
});
var G__36428__3 = (function (x,y,z){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (fs__$1){
return (function (p1__36321_SHARP_,p2__36322_SHARP_){
return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__36321_SHARP_,(function (){var G__36406 = x;
var G__36407 = y;
var G__36408 = z;
return (p2__36322_SHARP_.cljs$core$IFn$_invoke$arity$3 ? p2__36322_SHARP_.cljs$core$IFn$_invoke$arity$3(G__36406,G__36407,G__36408) : p2__36322_SHARP_.call(null,G__36406,G__36407,G__36408));
})());
});})(fs__$1))
,cljs.core.PersistentVector.EMPTY,fs__$1);
});
var G__36428__4 = (function() { 
var G__36429__delegate = function (x,y,z,args){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (fs__$1){
return (function (p1__36323_SHARP_,p2__36324_SHARP_){
return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__36323_SHARP_,cljs.core.apply.cljs$core$IFn$_invoke$arity$5(p2__36324_SHARP_,x,y,z,args));
});})(fs__$1))
,cljs.core.PersistentVector.EMPTY,fs__$1);
};
var G__36429 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__36430__i = 0, G__36430__a = new Array(arguments.length -  3);
while (G__36430__i < G__36430__a.length) {G__36430__a[G__36430__i] = arguments[G__36430__i + 3]; ++G__36430__i;}
  args = new cljs.core.IndexedSeq(G__36430__a,0);
} 
return G__36429__delegate.call(this,x,y,z,args);};
G__36429.cljs$lang$maxFixedArity = 3;
G__36429.cljs$lang$applyTo = (function (arglist__36431){
var x = cljs.core.first(arglist__36431);
arglist__36431 = cljs.core.next(arglist__36431);
var y = cljs.core.first(arglist__36431);
arglist__36431 = cljs.core.next(arglist__36431);
var z = cljs.core.first(arglist__36431);
var args = cljs.core.rest(arglist__36431);
return G__36429__delegate(x,y,z,args);
});
G__36429.cljs$core$IFn$_invoke$arity$variadic = G__36429__delegate;
return G__36429;
})()
;
G__36428 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__36428__0.call(this);
case 1:
return G__36428__1.call(this,x);
case 2:
return G__36428__2.call(this,x,y);
case 3:
return G__36428__3.call(this,x,y,z);
default:
var G__36432 = null;
if (arguments.length > 3) {
var G__36433__i = 0, G__36433__a = new Array(arguments.length -  3);
while (G__36433__i < G__36433__a.length) {G__36433__a[G__36433__i] = arguments[G__36433__i + 3]; ++G__36433__i;}
G__36432 = new cljs.core.IndexedSeq(G__36433__a,0);
}
return G__36428__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__36432);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__36428.cljs$lang$maxFixedArity = 3;
G__36428.cljs$lang$applyTo = G__36428__4.cljs$lang$applyTo;
G__36428.cljs$core$IFn$_invoke$arity$0 = G__36428__0;
G__36428.cljs$core$IFn$_invoke$arity$1 = G__36428__1;
G__36428.cljs$core$IFn$_invoke$arity$2 = G__36428__2;
G__36428.cljs$core$IFn$_invoke$arity$3 = G__36428__3;
G__36428.cljs$core$IFn$_invoke$arity$variadic = G__36428__4.cljs$core$IFn$_invoke$arity$variadic;
return G__36428;
})()
;})(fs__$1))
};
var G__36427 = function (f,g,h,var_args){
var fs = null;
if (arguments.length > 3) {
var G__36434__i = 0, G__36434__a = new Array(arguments.length -  3);
while (G__36434__i < G__36434__a.length) {G__36434__a[G__36434__i] = arguments[G__36434__i + 3]; ++G__36434__i;}
  fs = new cljs.core.IndexedSeq(G__36434__a,0);
} 
return G__36427__delegate.call(this,f,g,h,fs);};
G__36427.cljs$lang$maxFixedArity = 3;
G__36427.cljs$lang$applyTo = (function (arglist__36435){
var f = cljs.core.first(arglist__36435);
arglist__36435 = cljs.core.next(arglist__36435);
var g = cljs.core.first(arglist__36435);
arglist__36435 = cljs.core.next(arglist__36435);
var h = cljs.core.first(arglist__36435);
var fs = cljs.core.rest(arglist__36435);
return G__36427__delegate(f,g,h,fs);
});
G__36427.cljs$core$IFn$_invoke$arity$variadic = G__36427__delegate;
return G__36427;
})()
;
juxt = function(f,g,h,var_args){
var fs = var_args;
switch(arguments.length){
case 1:
return juxt__1.call(this,f);
case 2:
return juxt__2.call(this,f,g);
case 3:
return juxt__3.call(this,f,g,h);
default:
var G__36436 = null;
if (arguments.length > 3) {
var G__36437__i = 0, G__36437__a = new Array(arguments.length -  3);
while (G__36437__i < G__36437__a.length) {G__36437__a[G__36437__i] = arguments[G__36437__i + 3]; ++G__36437__i;}
G__36436 = new cljs.core.IndexedSeq(G__36437__a,0);
}
return juxt__4.cljs$core$IFn$_invoke$arity$variadic(f,g,h, G__36436);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
juxt.cljs$lang$maxFixedArity = 3;
juxt.cljs$lang$applyTo = juxt__4.cljs$lang$applyTo;
juxt.cljs$core$IFn$_invoke$arity$1 = juxt__1;
juxt.cljs$core$IFn$_invoke$arity$2 = juxt__2;
juxt.cljs$core$IFn$_invoke$arity$3 = juxt__3;
juxt.cljs$core$IFn$_invoke$arity$variadic = juxt__4.cljs$core$IFn$_invoke$arity$variadic;
return juxt;
})()
;
/**
* When lazy sequences are produced via functions that have side
* effects, any effects other than those needed to produce the first
* element in the seq do not occur until the seq is consumed. dorun can
* be used to force any effects. Walks through the successive nexts of
* the seq, does not retain the head and returns nil.
*/
cljs.core.dorun = (function() {
var dorun = null;
var dorun__1 = (function (coll){
while(true){
if(cljs.core.seq(coll)){
var G__36438 = cljs.core.next(coll);
coll = G__36438;
continue;
} else {
return null;
}
break;
}
});
var dorun__2 = (function (n,coll){
while(true){
if((cljs.core.seq(coll)) && ((n > (0)))){
var G__36439 = (n - (1));
var G__36440 = cljs.core.next(coll);
n = G__36439;
coll = G__36440;
continue;
} else {
return null;
}
break;
}
});
dorun = function(n,coll){
switch(arguments.length){
case 1:
return dorun__1.call(this,n);
case 2:
return dorun__2.call(this,n,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
dorun.cljs$core$IFn$_invoke$arity$1 = dorun__1;
dorun.cljs$core$IFn$_invoke$arity$2 = dorun__2;
return dorun;
})()
;
/**
* When lazy sequences are produced via functions that have side
* effects, any effects other than those needed to produce the first
* element in the seq do not occur until the seq is consumed. doall can
* be used to force any effects. Walks through the successive nexts of
* the seq, retains the head and returns it, thus causing the entire
* seq to reside in memory at one time.
*/
cljs.core.doall = (function() {
var doall = null;
var doall__1 = (function (coll){
cljs.core.dorun.cljs$core$IFn$_invoke$arity$1(coll);

return coll;
});
var doall__2 = (function (n,coll){
cljs.core.dorun.cljs$core$IFn$_invoke$arity$2(n,coll);

return coll;
});
doall = function(n,coll){
switch(arguments.length){
case 1:
return doall__1.call(this,n);
case 2:
return doall__2.call(this,n,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
doall.cljs$core$IFn$_invoke$arity$1 = doall__1;
doall.cljs$core$IFn$_invoke$arity$2 = doall__2;
return doall;
})()
;
cljs.core.regexp_QMARK_ = (function regexp_QMARK_(o){
return (o instanceof RegExp);
});
/**
* Returns the result of (re-find re s) if re fully matches s.
*/
cljs.core.re_matches = (function re_matches(re,s){
if(typeof s === 'string'){
var matches = re.exec(s);
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.first(matches),s)){
if((cljs.core.count(matches) === (1))){
return cljs.core.first(matches);
} else {
return cljs.core.vec(matches);
}
} else {
return null;
}
} else {
throw (new TypeError("re-matches must match against a string."));
}
});
/**
* Returns the first regex match, if any, of s to re, using
* re.exec(s). Returns a vector, containing first the matching
* substring, then any capturing groups if the regular expression contains
* capturing groups.
*/
cljs.core.re_find = (function re_find(re,s){
if(typeof s === 'string'){
var matches = re.exec(s);
if((matches == null)){
return null;
} else {
if((cljs.core.count(matches) === (1))){
return cljs.core.first(matches);
} else {
return cljs.core.vec(matches);
}
}
} else {
throw (new TypeError("re-find must match against a string."));
}
});
/**
* Returns a lazy sequence of successive matches of re in s.
*/
cljs.core.re_seq = (function re_seq(re,s){
var match_data = cljs.core.re_find(re,s);
var match_idx = s.search(re);
var match_str = ((cljs.core.coll_QMARK_(match_data))?cljs.core.first(match_data):match_data);
var post_match = cljs.core.subs.cljs$core$IFn$_invoke$arity$2(s,(match_idx + cljs.core.count(match_str)));
if(cljs.core.truth_(match_data)){
return (new cljs.core.LazySeq(null,((function (match_data,match_idx,match_str,post_match){
return (function (){
return cljs.core.cons(match_data,((cljs.core.seq(post_match))?re_seq(re,post_match):null));
});})(match_data,match_idx,match_str,post_match))
,null,null));
} else {
return null;
}
});
/**
* Returns an instance of RegExp which has compiled the provided string.
*/
cljs.core.re_pattern = (function re_pattern(s){
if((s instanceof RegExp)){
return s;
} else {
var vec__36444 = cljs.core.re_find(/^(?:\(\?([idmsux]*)\))?(.*)/,s);
var _ = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__36444,(0),null);
var flags = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__36444,(1),null);
var pattern = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__36444,(2),null);
return (new RegExp(pattern,flags));
}
});
cljs.core.pr_sequential_writer = (function pr_sequential_writer(writer,print_one,begin,sep,end,opts,coll){
var _STAR_print_level_STAR_36452 = cljs.core._STAR_print_level_STAR_;
try{cljs.core._STAR_print_level_STAR_ = (((cljs.core._STAR_print_level_STAR_ == null))?null:(cljs.core._STAR_print_level_STAR_ - (1)));

if((!((cljs.core._STAR_print_level_STAR_ == null))) && ((cljs.core._STAR_print_level_STAR_ < (0)))){
return cljs.core._write(writer,"#");
} else {
cljs.core._write(writer,begin);

if(cljs.core.seq(coll)){
var G__36453_36459 = cljs.core.first(coll);
var G__36454_36460 = writer;
var G__36455_36461 = opts;
(print_one.cljs$core$IFn$_invoke$arity$3 ? print_one.cljs$core$IFn$_invoke$arity$3(G__36453_36459,G__36454_36460,G__36455_36461) : print_one.call(null,G__36453_36459,G__36454_36460,G__36455_36461));
} else {
}

var coll_36462__$1 = cljs.core.next(coll);
var n_36463 = (new cljs.core.Keyword(null,"print-length","print-length",1931866356).cljs$core$IFn$_invoke$arity$1(opts) - (1));
while(true){
if((coll_36462__$1) && (((n_36463 == null)) || (!((n_36463 === (0)))))){
cljs.core._write(writer,sep);

var G__36456_36464 = cljs.core.first(coll_36462__$1);
var G__36457_36465 = writer;
var G__36458_36466 = opts;
(print_one.cljs$core$IFn$_invoke$arity$3 ? print_one.cljs$core$IFn$_invoke$arity$3(G__36456_36464,G__36457_36465,G__36458_36466) : print_one.call(null,G__36456_36464,G__36457_36465,G__36458_36466));

var G__36467 = cljs.core.next(coll_36462__$1);
var G__36468 = (n_36463 - (1));
coll_36462__$1 = G__36467;
n_36463 = G__36468;
continue;
} else {
if((cljs.core.seq(coll_36462__$1)) && ((n_36463 === (0)))){
cljs.core._write(writer,sep);

cljs.core._write(writer,"...");
} else {
}
}
break;
}

return cljs.core._write(writer,end);
}
}finally {cljs.core._STAR_print_level_STAR_ = _STAR_print_level_STAR_36452;
}});
/**
* @param {...*} var_args
*/
cljs.core.write_all = (function() { 
var write_all__delegate = function (writer,ss){
var seq__36473 = cljs.core.seq(ss);
var chunk__36474 = null;
var count__36475 = (0);
var i__36476 = (0);
while(true){
if((i__36476 < count__36475)){
var s = chunk__36474.cljs$core$IIndexed$_nth$arity$2(null,i__36476);
cljs.core._write(writer,s);

var G__36477 = seq__36473;
var G__36478 = chunk__36474;
var G__36479 = count__36475;
var G__36480 = (i__36476 + (1));
seq__36473 = G__36477;
chunk__36474 = G__36478;
count__36475 = G__36479;
i__36476 = G__36480;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__36473);
if(temp__4126__auto__){
var seq__36473__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__36473__$1)){
var c__25059__auto__ = cljs.core.chunk_first(seq__36473__$1);
var G__36481 = cljs.core.chunk_rest(seq__36473__$1);
var G__36482 = c__25059__auto__;
var G__36483 = cljs.core.count(c__25059__auto__);
var G__36484 = (0);
seq__36473 = G__36481;
chunk__36474 = G__36482;
count__36475 = G__36483;
i__36476 = G__36484;
continue;
} else {
var s = cljs.core.first(seq__36473__$1);
cljs.core._write(writer,s);

var G__36485 = cljs.core.next(seq__36473__$1);
var G__36486 = null;
var G__36487 = (0);
var G__36488 = (0);
seq__36473 = G__36485;
chunk__36474 = G__36486;
count__36475 = G__36487;
i__36476 = G__36488;
continue;
}
} else {
return null;
}
}
break;
}
};
var write_all = function (writer,var_args){
var ss = null;
if (arguments.length > 1) {
var G__36489__i = 0, G__36489__a = new Array(arguments.length -  1);
while (G__36489__i < G__36489__a.length) {G__36489__a[G__36489__i] = arguments[G__36489__i + 1]; ++G__36489__i;}
  ss = new cljs.core.IndexedSeq(G__36489__a,0);
} 
return write_all__delegate.call(this,writer,ss);};
write_all.cljs$lang$maxFixedArity = 1;
write_all.cljs$lang$applyTo = (function (arglist__36490){
var writer = cljs.core.first(arglist__36490);
var ss = cljs.core.rest(arglist__36490);
return write_all__delegate(writer,ss);
});
write_all.cljs$core$IFn$_invoke$arity$variadic = write_all__delegate;
return write_all;
})()
;
cljs.core.string_print = (function string_print(x){
(cljs.core._STAR_print_fn_STAR_.cljs$core$IFn$_invoke$arity$1 ? cljs.core._STAR_print_fn_STAR_.cljs$core$IFn$_invoke$arity$1(x) : cljs.core._STAR_print_fn_STAR_.call(null,x));

return null;
});
cljs.core.flush = (function flush(){
return null;
});
cljs.core.char_escapes = (function (){var obj36492 = {"\"":"\\\"","\\":"\\\\","\b":"\\b","\f":"\\f","\n":"\\n","\r":"\\r","\t":"\\t"};
return obj36492;
})();
cljs.core.quote_string = (function quote_string(s){
return [cljs.core.str("\""),cljs.core.str(s.replace((function (){var G__36495 = "[\\\\\"\b\f\n\r\t]";
var G__36496 = "g";
return RegExp(G__36495,G__36496);
})(),(function (match){
return (cljs.core.char_escapes[match]);
}))),cljs.core.str("\"")].join('');
});
/**
* Prefer this to pr-seq, because it makes the printing function
* configurable, allowing efficient implementations such as appending
* to a StringBuffer.
*/
cljs.core.pr_writer = (function pr_writer(obj,writer,opts){
if((obj == null)){
return cljs.core._write(writer,"nil");
} else {
if((void 0 === obj)){
return cljs.core._write(writer,"#<undefined>");
} else {
if(cljs.core.truth_((function (){var and__24260__auto__ = cljs.core.get.cljs$core$IFn$_invoke$arity$2(opts,new cljs.core.Keyword(null,"meta","meta",1499536964));
if(cljs.core.truth_(and__24260__auto__)){
var and__24260__auto____$1 = (function (){var G__36510 = obj;
if(G__36510){
var bit__24953__auto__ = (G__36510.cljs$lang$protocol_mask$partition0$ & (131072));
if((bit__24953__auto__) || (G__36510.cljs$core$IMeta$)){
return true;
} else {
if((!G__36510.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IMeta,G__36510);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IMeta,G__36510);
}
})();
if(and__24260__auto____$1){
return cljs.core.meta(obj);
} else {
return and__24260__auto____$1;
}
} else {
return and__24260__auto__;
}
})())){
cljs.core._write(writer,"^");

pr_writer(cljs.core.meta(obj),writer,opts);

cljs.core._write(writer," ");
} else {
}

if((obj == null)){
return cljs.core._write(writer,"nil");
} else {
if(obj.cljs$lang$type){
return obj.cljs$lang$ctorPrWriter(obj,writer,opts);
} else {
if((function (){var G__36511 = obj;
if(G__36511){
var bit__24946__auto__ = (G__36511.cljs$lang$protocol_mask$partition0$ & (2147483648));
if((bit__24946__auto__) || (G__36511.cljs$core$IPrintWithWriter$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return obj.cljs$core$IPrintWithWriter$_pr_writer$arity$3(null,writer,opts);
} else {
if(((cljs.core.type(obj) === Boolean)) || (typeof obj === 'number')){
return cljs.core._write(writer,[cljs.core.str(obj)].join(''));
} else {
if(cljs.core.object_QMARK_(obj)){
cljs.core._write(writer,"#js ");

var G__36512 = cljs.core.map.cljs$core$IFn$_invoke$arity$2((function (k){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.keyword.cljs$core$IFn$_invoke$arity$1(k),(obj[k])], null);
}),cljs.core.js_keys(obj));
var G__36513 = pr_writer;
var G__36514 = writer;
var G__36515 = opts;
return (cljs.core.print_map.cljs$core$IFn$_invoke$arity$4 ? cljs.core.print_map.cljs$core$IFn$_invoke$arity$4(G__36512,G__36513,G__36514,G__36515) : cljs.core.print_map.call(null,G__36512,G__36513,G__36514,G__36515));
} else {
if(obj instanceof Array){
return cljs.core.pr_sequential_writer(writer,pr_writer,"#js ["," ","]",opts,obj);
} else {
if(cljs.core.truth_((function (){var G__36516 = obj;
return goog.isString(G__36516);
})())){
if(cljs.core.truth_(new cljs.core.Keyword(null,"readably","readably",1129599760).cljs$core$IFn$_invoke$arity$1(opts))){
return cljs.core._write(writer,cljs.core.quote_string(obj));
} else {
return cljs.core._write(writer,obj);
}
} else {
if(cljs.core.fn_QMARK_(obj)){
return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(writer,cljs.core.array_seq(["#<",[cljs.core.str(obj)].join(''),">"], 0));
} else {
if((obj instanceof Date)){
var normalize = (function (n,len){
var ns = [cljs.core.str(n)].join('');
while(true){
if((cljs.core.count(ns) < len)){
var G__36518 = [cljs.core.str("0"),cljs.core.str(ns)].join('');
ns = G__36518;
continue;
} else {
return ns;
}
break;
}
});
return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(writer,cljs.core.array_seq(["#inst \"",[cljs.core.str(obj.getUTCFullYear())].join(''),"-",normalize((obj.getUTCMonth() + (1)),(2)),"-",normalize(obj.getUTCDate(),(2)),"T",normalize(obj.getUTCHours(),(2)),":",normalize(obj.getUTCMinutes(),(2)),":",normalize(obj.getUTCSeconds(),(2)),".",normalize(obj.getUTCMilliseconds(),(3)),"-","00:00\""], 0));
} else {
if(cljs.core.regexp_QMARK_(obj)){
return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(writer,cljs.core.array_seq(["#\"",obj.source,"\""], 0));
} else {
if((function (){var G__36517 = obj;
if(G__36517){
var bit__24953__auto__ = (G__36517.cljs$lang$protocol_mask$partition0$ & (2147483648));
if((bit__24953__auto__) || (G__36517.cljs$core$IPrintWithWriter$)){
return true;
} else {
if((!G__36517.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IPrintWithWriter,G__36517);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IPrintWithWriter,G__36517);
}
})()){
return cljs.core._pr_writer(obj,writer,opts);
} else {
return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(writer,cljs.core.array_seq(["#<",[cljs.core.str(obj)].join(''),">"], 0));

}
}
}
}
}
}
}
}
}
}
}

}
}
});
cljs.core.pr_seq_writer = (function pr_seq_writer(objs,writer,opts){
cljs.core.pr_writer(cljs.core.first(objs),writer,opts);

var seq__36523 = cljs.core.seq(cljs.core.next(objs));
var chunk__36524 = null;
var count__36525 = (0);
var i__36526 = (0);
while(true){
if((i__36526 < count__36525)){
var obj = chunk__36524.cljs$core$IIndexed$_nth$arity$2(null,i__36526);
cljs.core._write(writer," ");

cljs.core.pr_writer(obj,writer,opts);

var G__36527 = seq__36523;
var G__36528 = chunk__36524;
var G__36529 = count__36525;
var G__36530 = (i__36526 + (1));
seq__36523 = G__36527;
chunk__36524 = G__36528;
count__36525 = G__36529;
i__36526 = G__36530;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__36523);
if(temp__4126__auto__){
var seq__36523__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__36523__$1)){
var c__25059__auto__ = cljs.core.chunk_first(seq__36523__$1);
var G__36531 = cljs.core.chunk_rest(seq__36523__$1);
var G__36532 = c__25059__auto__;
var G__36533 = cljs.core.count(c__25059__auto__);
var G__36534 = (0);
seq__36523 = G__36531;
chunk__36524 = G__36532;
count__36525 = G__36533;
i__36526 = G__36534;
continue;
} else {
var obj = cljs.core.first(seq__36523__$1);
cljs.core._write(writer," ");

cljs.core.pr_writer(obj,writer,opts);

var G__36535 = cljs.core.next(seq__36523__$1);
var G__36536 = null;
var G__36537 = (0);
var G__36538 = (0);
seq__36523 = G__36535;
chunk__36524 = G__36536;
count__36525 = G__36537;
i__36526 = G__36538;
continue;
}
} else {
return null;
}
}
break;
}
});
cljs.core.pr_sb_with_opts = (function pr_sb_with_opts(objs,opts){
var sb = (new goog.string.StringBuffer());
var writer = (new cljs.core.StringBufferWriter(sb));
cljs.core.pr_seq_writer(objs,writer,opts);

writer.cljs$core$IWriter$_flush$arity$1(null);

return sb;
});
/**
* Prints a sequence of objects to a string, observing all the
* options given in opts
*/
cljs.core.pr_str_with_opts = (function pr_str_with_opts(objs,opts){
if(cljs.core.empty_QMARK_(objs)){
return "";
} else {
return [cljs.core.str(cljs.core.pr_sb_with_opts(objs,opts))].join('');
}
});
/**
* Same as pr-str-with-opts followed by (newline)
*/
cljs.core.prn_str_with_opts = (function prn_str_with_opts(objs,opts){
if(cljs.core.empty_QMARK_(objs)){
return "\n";
} else {
var sb = cljs.core.pr_sb_with_opts(objs,opts);
sb.append("\n");

return [cljs.core.str(sb)].join('');
}
});
/**
* Prints a sequence of objects using string-print, observing all
* the options given in opts
*/
cljs.core.pr_with_opts = (function pr_with_opts(objs,opts){
return cljs.core.string_print(cljs.core.pr_str_with_opts(objs,opts));
});
cljs.core.newline = (function newline(opts){
cljs.core.string_print("\n");

if(cljs.core.truth_(cljs.core.get.cljs$core$IFn$_invoke$arity$2(opts,new cljs.core.Keyword(null,"flush-on-newline","flush-on-newline",-151457939)))){
return cljs.core.flush();
} else {
return null;
}
});
/**
* pr to a string, returning it. Fundamental entrypoint to IPrintWithWriter.
* @param {...*} var_args
*/
cljs.core.pr_str = (function() { 
var pr_str__delegate = function (objs){
return cljs.core.pr_str_with_opts(objs,cljs.core.pr_opts());
};
var pr_str = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__36539__i = 0, G__36539__a = new Array(arguments.length -  0);
while (G__36539__i < G__36539__a.length) {G__36539__a[G__36539__i] = arguments[G__36539__i + 0]; ++G__36539__i;}
  objs = new cljs.core.IndexedSeq(G__36539__a,0);
} 
return pr_str__delegate.call(this,objs);};
pr_str.cljs$lang$maxFixedArity = 0;
pr_str.cljs$lang$applyTo = (function (arglist__36540){
var objs = cljs.core.seq(arglist__36540);
return pr_str__delegate(objs);
});
pr_str.cljs$core$IFn$_invoke$arity$variadic = pr_str__delegate;
return pr_str;
})()
;
/**
* Same as pr-str followed by (newline)
* @param {...*} var_args
*/
cljs.core.prn_str = (function() { 
var prn_str__delegate = function (objs){
return cljs.core.prn_str_with_opts(objs,cljs.core.pr_opts());
};
var prn_str = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__36541__i = 0, G__36541__a = new Array(arguments.length -  0);
while (G__36541__i < G__36541__a.length) {G__36541__a[G__36541__i] = arguments[G__36541__i + 0]; ++G__36541__i;}
  objs = new cljs.core.IndexedSeq(G__36541__a,0);
} 
return prn_str__delegate.call(this,objs);};
prn_str.cljs$lang$maxFixedArity = 0;
prn_str.cljs$lang$applyTo = (function (arglist__36542){
var objs = cljs.core.seq(arglist__36542);
return prn_str__delegate(objs);
});
prn_str.cljs$core$IFn$_invoke$arity$variadic = prn_str__delegate;
return prn_str;
})()
;
/**
* Prints the object(s) using string-print.  Prints the
* object(s), separated by spaces if there is more than one.
* By default, pr and prn print in a way that objects can be
* read by the reader
* @param {...*} var_args
*/
cljs.core.pr = (function() { 
var pr__delegate = function (objs){
return cljs.core.pr_with_opts(objs,cljs.core.pr_opts());
};
var pr = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__36543__i = 0, G__36543__a = new Array(arguments.length -  0);
while (G__36543__i < G__36543__a.length) {G__36543__a[G__36543__i] = arguments[G__36543__i + 0]; ++G__36543__i;}
  objs = new cljs.core.IndexedSeq(G__36543__a,0);
} 
return pr__delegate.call(this,objs);};
pr.cljs$lang$maxFixedArity = 0;
pr.cljs$lang$applyTo = (function (arglist__36544){
var objs = cljs.core.seq(arglist__36544);
return pr__delegate(objs);
});
pr.cljs$core$IFn$_invoke$arity$variadic = pr__delegate;
return pr;
})()
;
/**
* Prints the object(s) using string-print.
* print and println produce output for human consumption.
* @param {...*} var_args
*/
cljs.core.print = (function() { 
var cljs_core_print__delegate = function (objs){
return cljs.core.pr_with_opts(objs,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.pr_opts(),new cljs.core.Keyword(null,"readably","readably",1129599760),false));
};
var cljs_core_print = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__36545__i = 0, G__36545__a = new Array(arguments.length -  0);
while (G__36545__i < G__36545__a.length) {G__36545__a[G__36545__i] = arguments[G__36545__i + 0]; ++G__36545__i;}
  objs = new cljs.core.IndexedSeq(G__36545__a,0);
} 
return cljs_core_print__delegate.call(this,objs);};
cljs_core_print.cljs$lang$maxFixedArity = 0;
cljs_core_print.cljs$lang$applyTo = (function (arglist__36546){
var objs = cljs.core.seq(arglist__36546);
return cljs_core_print__delegate(objs);
});
cljs_core_print.cljs$core$IFn$_invoke$arity$variadic = cljs_core_print__delegate;
return cljs_core_print;
})()
;
/**
* print to a string, returning it
* @param {...*} var_args
*/
cljs.core.print_str = (function() { 
var print_str__delegate = function (objs){
return cljs.core.pr_str_with_opts(objs,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.pr_opts(),new cljs.core.Keyword(null,"readably","readably",1129599760),false));
};
var print_str = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__36547__i = 0, G__36547__a = new Array(arguments.length -  0);
while (G__36547__i < G__36547__a.length) {G__36547__a[G__36547__i] = arguments[G__36547__i + 0]; ++G__36547__i;}
  objs = new cljs.core.IndexedSeq(G__36547__a,0);
} 
return print_str__delegate.call(this,objs);};
print_str.cljs$lang$maxFixedArity = 0;
print_str.cljs$lang$applyTo = (function (arglist__36548){
var objs = cljs.core.seq(arglist__36548);
return print_str__delegate(objs);
});
print_str.cljs$core$IFn$_invoke$arity$variadic = print_str__delegate;
return print_str;
})()
;
/**
* Same as print followed by (newline)
* @param {...*} var_args
*/
cljs.core.println = (function() { 
var println__delegate = function (objs){
cljs.core.pr_with_opts(objs,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.pr_opts(),new cljs.core.Keyword(null,"readably","readably",1129599760),false));

if(cljs.core.truth_(cljs.core._STAR_print_newline_STAR_)){
return cljs.core.newline(cljs.core.pr_opts());
} else {
return null;
}
};
var println = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__36549__i = 0, G__36549__a = new Array(arguments.length -  0);
while (G__36549__i < G__36549__a.length) {G__36549__a[G__36549__i] = arguments[G__36549__i + 0]; ++G__36549__i;}
  objs = new cljs.core.IndexedSeq(G__36549__a,0);
} 
return println__delegate.call(this,objs);};
println.cljs$lang$maxFixedArity = 0;
println.cljs$lang$applyTo = (function (arglist__36550){
var objs = cljs.core.seq(arglist__36550);
return println__delegate(objs);
});
println.cljs$core$IFn$_invoke$arity$variadic = println__delegate;
return println;
})()
;
/**
* println to a string, returning it
* @param {...*} var_args
*/
cljs.core.println_str = (function() { 
var println_str__delegate = function (objs){
return cljs.core.prn_str_with_opts(objs,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.pr_opts(),new cljs.core.Keyword(null,"readably","readably",1129599760),false));
};
var println_str = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__36551__i = 0, G__36551__a = new Array(arguments.length -  0);
while (G__36551__i < G__36551__a.length) {G__36551__a[G__36551__i] = arguments[G__36551__i + 0]; ++G__36551__i;}
  objs = new cljs.core.IndexedSeq(G__36551__a,0);
} 
return println_str__delegate.call(this,objs);};
println_str.cljs$lang$maxFixedArity = 0;
println_str.cljs$lang$applyTo = (function (arglist__36552){
var objs = cljs.core.seq(arglist__36552);
return println_str__delegate(objs);
});
println_str.cljs$core$IFn$_invoke$arity$variadic = println_str__delegate;
return println_str;
})()
;
/**
* Same as pr followed by (newline).
* @param {...*} var_args
*/
cljs.core.prn = (function() { 
var prn__delegate = function (objs){
cljs.core.pr_with_opts(objs,cljs.core.pr_opts());

if(cljs.core.truth_(cljs.core._STAR_print_newline_STAR_)){
return cljs.core.newline(cljs.core.pr_opts());
} else {
return null;
}
};
var prn = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__36553__i = 0, G__36553__a = new Array(arguments.length -  0);
while (G__36553__i < G__36553__a.length) {G__36553__a[G__36553__i] = arguments[G__36553__i + 0]; ++G__36553__i;}
  objs = new cljs.core.IndexedSeq(G__36553__a,0);
} 
return prn__delegate.call(this,objs);};
prn.cljs$lang$maxFixedArity = 0;
prn.cljs$lang$applyTo = (function (arglist__36554){
var objs = cljs.core.seq(arglist__36554);
return prn__delegate(objs);
});
prn.cljs$core$IFn$_invoke$arity$variadic = prn__delegate;
return prn;
})()
;
cljs.core.print_map = (function print_map(m,print_one,writer,opts){
return cljs.core.pr_sequential_writer(writer,(function (e,w,opts__$1){
var G__36561_36567 = cljs.core.key(e);
var G__36562_36568 = w;
var G__36563_36569 = opts__$1;
(print_one.cljs$core$IFn$_invoke$arity$3 ? print_one.cljs$core$IFn$_invoke$arity$3(G__36561_36567,G__36562_36568,G__36563_36569) : print_one.call(null,G__36561_36567,G__36562_36568,G__36563_36569));

cljs.core._write(w," ");

var G__36564 = cljs.core.val(e);
var G__36565 = w;
var G__36566 = opts__$1;
return (print_one.cljs$core$IFn$_invoke$arity$3 ? print_one.cljs$core$IFn$_invoke$arity$3(G__36564,G__36565,G__36566) : print_one.call(null,G__36564,G__36565,G__36566));
}),"{",", ","}",opts,cljs.core.seq(m));
});
cljs.core.Volatile.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.Volatile.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (a,writer,opts){
var a__$1 = this;
cljs.core._write(writer,"#<Volatile: ");

cljs.core.pr_writer(a__$1.state,writer,opts);

return cljs.core._write(writer,">");
});

cljs.core.Var.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.Var.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (a,writer,opts){
var a__$1 = this;
cljs.core._write(writer,"#'");

return cljs.core.pr_writer(a__$1.sym,writer,opts);
});

cljs.core.IndexedSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.IndexedSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.LazySeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.LazySeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.NodeSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.NodeSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.BlackNode.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.BlackNode.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"["," ","]",opts,coll__$1);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.ES6IteratorSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ES6IteratorSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentTreeSet.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"#{"," ","}",opts,coll__$1);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ChunkedSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.ObjMap.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ObjMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.print_map(coll__$1,cljs.core.pr_writer,writer,opts);
});

cljs.core.Cons.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.Cons.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.RSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.RSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.PersistentHashMap.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentHashMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.print_map(coll__$1,cljs.core.pr_writer,writer,opts);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ArrayNodeSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.Subvec.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.Subvec.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"["," ","]",opts,coll__$1);
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentTreeMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.print_map(coll__$1,cljs.core.pr_writer,writer,opts);
});

cljs.core.PersistentHashSet.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentHashSet.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"#{"," ","}",opts,coll__$1);
});

cljs.core.ChunkedCons.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ChunkedCons.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.Atom.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.Atom.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (a,writer,opts){
var a__$1 = this;
cljs.core._write(writer,"#<Atom: ");

cljs.core.pr_writer(a__$1.state,writer,opts);

return cljs.core._write(writer,">");
});

cljs.core.ValSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ValSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.RedNode.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.RedNode.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"["," ","]",opts,coll__$1);
});

cljs.core.PersistentVector.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentVector.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"["," ","]",opts,coll__$1);
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentQueueSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.EmptyList.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.EmptyList.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core._write(writer,"()");
});

cljs.core.LazyTransformer.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.LazyTransformer.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.PersistentQueue.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentQueue.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"#queue ["," ","]",opts,cljs.core.seq(coll__$1));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentArrayMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.print_map(coll__$1,cljs.core.pr_writer,writer,opts);
});

cljs.core.Range.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.Range.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.KeySeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.KeySeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.List.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.List.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});
cljs.core.PersistentVector.prototype.cljs$core$IComparable$ = true;

cljs.core.PersistentVector.prototype.cljs$core$IComparable$_compare$arity$2 = (function (x,y){
var x__$1 = this;
return cljs.core.compare_indexed.cljs$core$IFn$_invoke$arity$2(x__$1,y);
});

cljs.core.Subvec.prototype.cljs$core$IComparable$ = true;

cljs.core.Subvec.prototype.cljs$core$IComparable$_compare$arity$2 = (function (x,y){
var x__$1 = this;
return cljs.core.compare_indexed.cljs$core$IFn$_invoke$arity$2(x__$1,y);
});

cljs.core.Keyword.prototype.cljs$core$IComparable$ = true;

cljs.core.Keyword.prototype.cljs$core$IComparable$_compare$arity$2 = (function (x,y){
var x__$1 = this;
return cljs.core.compare_keywords(x__$1,y);
});

cljs.core.Symbol.prototype.cljs$core$IComparable$ = true;

cljs.core.Symbol.prototype.cljs$core$IComparable$_compare$arity$2 = (function (x,y){
var x__$1 = this;
return cljs.core.compare_symbols(x__$1,y);
});
/**
* Atomically sets the metadata for a namespace/var/ref/agent/atom to be:
* 
* (apply f its-current-meta args)
* 
* f must be free of side-effects
* @param {...*} var_args
*/
cljs.core.alter_meta_BANG_ = (function() { 
var alter_meta_BANG___delegate = function (iref,f,args){
return iref.meta = cljs.core.apply.cljs$core$IFn$_invoke$arity$3(f,iref.meta,args);
};
var alter_meta_BANG_ = function (iref,f,var_args){
var args = null;
if (arguments.length > 2) {
var G__36570__i = 0, G__36570__a = new Array(arguments.length -  2);
while (G__36570__i < G__36570__a.length) {G__36570__a[G__36570__i] = arguments[G__36570__i + 2]; ++G__36570__i;}
  args = new cljs.core.IndexedSeq(G__36570__a,0);
} 
return alter_meta_BANG___delegate.call(this,iref,f,args);};
alter_meta_BANG_.cljs$lang$maxFixedArity = 2;
alter_meta_BANG_.cljs$lang$applyTo = (function (arglist__36571){
var iref = cljs.core.first(arglist__36571);
arglist__36571 = cljs.core.next(arglist__36571);
var f = cljs.core.first(arglist__36571);
var args = cljs.core.rest(arglist__36571);
return alter_meta_BANG___delegate(iref,f,args);
});
alter_meta_BANG_.cljs$core$IFn$_invoke$arity$variadic = alter_meta_BANG___delegate;
return alter_meta_BANG_;
})()
;
/**
* Atomically resets the metadata for an atom
*/
cljs.core.reset_meta_BANG_ = (function reset_meta_BANG_(iref,m){
return iref.meta = m;
});
/**
* Alpha - subject to change.
* 
* Adds a watch function to an atom reference. The watch fn must be a
* fn of 4 args: a key, the reference, its old-state, its
* new-state. Whenever the reference's state might have been changed,
* any registered watches will have their functions called. The watch
* fn will be called synchronously. Note that an atom's state
* may have changed again prior to the fn call, so use old/new-state
* rather than derefing the reference. Keys must be unique per
* reference, and can be used to remove the watch with remove-watch,
* but are otherwise considered opaque by the watch mechanism.  Bear in
* mind that regardless of the result or action of the watch fns the
* atom's value will change.  Example:
* 
* (def a (atom 0))
* (add-watch a :inc (fn [k r o n] (assert (== 0 n))))
* (swap! a inc)
* ;; Assertion Error
* (deref a)
* ;=> 1
*/
cljs.core.add_watch = (function add_watch(iref,key,f){
cljs.core._add_watch(iref,key,f);

return iref;
});
/**
* Alpha - subject to change.
* 
* Removes a watch (set by add-watch) from a reference
*/
cljs.core.remove_watch = (function remove_watch(iref,key){
cljs.core._remove_watch(iref,key);

return iref;
});
cljs.core.gensym_counter = null;
/**
* Returns a new symbol with a unique name. If a prefix string is
* supplied, the name is prefix# where # is some unique number. If
* prefix is not supplied, the prefix is 'G__'.
*/
cljs.core.gensym = (function() {
var gensym = null;
var gensym__0 = (function (){
return gensym.cljs$core$IFn$_invoke$arity$1("G__");
});
var gensym__1 = (function (prefix_string){
if((cljs.core.gensym_counter == null)){
cljs.core.gensym_counter = (function (){var G__36574 = (0);
return (cljs.core.atom.cljs$core$IFn$_invoke$arity$1 ? cljs.core.atom.cljs$core$IFn$_invoke$arity$1(G__36574) : cljs.core.atom.call(null,G__36574));
})();
} else {
}

return cljs.core.symbol.cljs$core$IFn$_invoke$arity$1([cljs.core.str(prefix_string),cljs.core.str(cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(cljs.core.gensym_counter,cljs.core.inc))].join(''));
});
gensym = function(prefix_string){
switch(arguments.length){
case 0:
return gensym__0.call(this);
case 1:
return gensym__1.call(this,prefix_string);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
gensym.cljs$core$IFn$_invoke$arity$0 = gensym__0;
gensym.cljs$core$IFn$_invoke$arity$1 = gensym__1;
return gensym;
})()
;
cljs.core.fixture1 = (1);
cljs.core.fixture2 = (2);

/**
* @constructor
*/
cljs.core.Delay = (function (f,value){
this.f = f;
this.value = value;
this.cljs$lang$protocol_mask$partition1$ = 1;
this.cljs$lang$protocol_mask$partition0$ = 32768;
})
cljs.core.Delay.prototype.cljs$core$IPending$_realized_QMARK_$arity$1 = (function (d){
var self__ = this;
var d__$1 = this;
return cljs.core.not(self__.f);
});

cljs.core.Delay.prototype.cljs$core$IDeref$_deref$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
if(cljs.core.truth_(self__.f)){
self__.value = (function (){return (self__.f.cljs$core$IFn$_invoke$arity$0 ? self__.f.cljs$core$IFn$_invoke$arity$0() : self__.f.call(null));
})();

self__.f = null;
} else {
}

return self__.value;
});

cljs.core.Delay.cljs$lang$type = true;

cljs.core.Delay.cljs$lang$ctorStr = "cljs.core/Delay";

cljs.core.Delay.cljs$lang$ctorPrWriter = (function (this__24859__auto__,writer__24860__auto__,opt__24861__auto__){
return cljs.core._write(writer__24860__auto__,"cljs.core/Delay");
});

cljs.core.__GT_Delay = (function __GT_Delay(f,value){
return (new cljs.core.Delay(f,value));
});

/**
* returns true if x is a Delay created with delay
*/
cljs.core.delay_QMARK_ = (function delay_QMARK_(x){
return (x instanceof cljs.core.Delay);
});
/**
* If x is a Delay, returns the (possibly cached) value of its expression, else returns x
*/
cljs.core.force = (function force(x){
if(cljs.core.delay_QMARK_(x)){
var G__36576 = x;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__36576) : cljs.core.deref.call(null,G__36576));
} else {
return x;
}
});
/**
* Returns true if a value has been produced for a promise, delay, future or lazy sequence.
*/
cljs.core.realized_QMARK_ = (function realized_QMARK_(d){
return cljs.core._realized_QMARK_(d);
});
cljs.core.preserving_reduced = (function preserving_reduced(rf){
return (function (p1__36577_SHARP_,p2__36578_SHARP_){
var ret = (function (){var G__36581 = p1__36577_SHARP_;
var G__36582 = p2__36578_SHARP_;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__36581,G__36582) : rf.call(null,G__36581,G__36582));
})();
if(cljs.core.reduced_QMARK_(ret)){
return cljs.core.reduced(ret);
} else {
return ret;
}
});
});
/**
* A transducer which concatenates the contents of each input, which must be a
* collection, into the reduction.
*/
cljs.core.cat = (function cat(rf){
var rf1 = cljs.core.preserving_reduced(rf);
return ((function (rf1){
return (function() {
var G__36585 = null;
var G__36585__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__36585__1 = (function (result){
var G__36584 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__36584) : rf.call(null,G__36584));
});
var G__36585__2 = (function (result,input){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(rf1,result,input);
});
G__36585 = function(result,input){
switch(arguments.length){
case 0:
return G__36585__0.call(this);
case 1:
return G__36585__1.call(this,result);
case 2:
return G__36585__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__36585.cljs$core$IFn$_invoke$arity$0 = G__36585__0;
G__36585.cljs$core$IFn$_invoke$arity$1 = G__36585__1;
G__36585.cljs$core$IFn$_invoke$arity$2 = G__36585__2;
return G__36585;
})()
;})(rf1))
});
/**
* Returns a lazy sequence removing consecutive duplicates in coll.
* Returns a transducer when no collection is provided.
*/
cljs.core.dedupe = (function() {
var dedupe = null;
var dedupe__0 = (function (){
return (function (rf){
var pa = cljs.core.volatile_BANG_(new cljs.core.Keyword("cljs.core","none","cljs.core/none",926646439));
return ((function (pa){
return (function() {
var G__36594 = null;
var G__36594__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__36594__1 = (function (result){
var G__36590 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__36590) : rf.call(null,G__36590));
});
var G__36594__2 = (function (result,input){
var prior = (function (){var G__36591 = pa;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__36591) : cljs.core.deref.call(null,G__36591));
})();
cljs.core.vreset_BANG_(pa,input);

if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(prior,input)){
return result;
} else {
var G__36592 = result;
var G__36593 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__36592,G__36593) : rf.call(null,G__36592,G__36593));
}
});
G__36594 = function(result,input){
switch(arguments.length){
case 0:
return G__36594__0.call(this);
case 1:
return G__36594__1.call(this,result);
case 2:
return G__36594__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__36594.cljs$core$IFn$_invoke$arity$0 = G__36594__0;
G__36594.cljs$core$IFn$_invoke$arity$1 = G__36594__1;
G__36594.cljs$core$IFn$_invoke$arity$2 = G__36594__2;
return G__36594;
})()
;})(pa))
});
});
var dedupe__1 = (function (coll){
return cljs.core.sequence.cljs$core$IFn$_invoke$arity$2(dedupe.cljs$core$IFn$_invoke$arity$0(),coll);
});
dedupe = function(coll){
switch(arguments.length){
case 0:
return dedupe__0.call(this);
case 1:
return dedupe__1.call(this,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
dedupe.cljs$core$IFn$_invoke$arity$0 = dedupe__0;
dedupe.cljs$core$IFn$_invoke$arity$1 = dedupe__1;
return dedupe;
})()
;
/**
* Returns items from coll with random probability of prob (0.0 -
* 1.0).  Returns a transducer when no collection is provided.
*/
cljs.core.random_sample = (function() {
var random_sample = null;
var random_sample__1 = (function (prob){
return cljs.core.filter.cljs$core$IFn$_invoke$arity$1((function (_){
return ((function (){return (cljs.core.rand.cljs$core$IFn$_invoke$arity$0 ? cljs.core.rand.cljs$core$IFn$_invoke$arity$0() : cljs.core.rand.call(null));
})() < prob);
}));
});
var random_sample__2 = (function (prob,coll){
return cljs.core.filter.cljs$core$IFn$_invoke$arity$2((function (_){
return ((function (){return (cljs.core.rand.cljs$core$IFn$_invoke$arity$0 ? cljs.core.rand.cljs$core$IFn$_invoke$arity$0() : cljs.core.rand.call(null));
})() < prob);
}),coll);
});
random_sample = function(prob,coll){
switch(arguments.length){
case 1:
return random_sample__1.call(this,prob);
case 2:
return random_sample__2.call(this,prob,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
random_sample.cljs$core$IFn$_invoke$arity$1 = random_sample__1;
random_sample.cljs$core$IFn$_invoke$arity$2 = random_sample__2;
return random_sample;
})()
;

/**
* @constructor
*/
cljs.core.Eduction = (function (xform,coll){
this.xform = xform;
this.coll = coll;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 2173173760;
})
cljs.core.Eduction.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll__$1,writer,opts){
var self__ = this;
var coll__$2 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$2);
});

cljs.core.Eduction.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (_,f,init){
var self__ = this;
var ___$1 = this;
return cljs.core.transduce.cljs$core$IFn$_invoke$arity$4(self__.xform,f,init,self__.coll);
});

cljs.core.Eduction.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return cljs.core.seq(cljs.core.sequence.cljs$core$IFn$_invoke$arity$2(self__.xform,self__.coll));
});

cljs.core.Eduction.cljs$lang$type = true;

cljs.core.Eduction.cljs$lang$ctorStr = "cljs.core/Eduction";

cljs.core.Eduction.cljs$lang$ctorPrWriter = (function (this__24859__auto__,writer__24860__auto__,opt__24861__auto__){
return cljs.core._write(writer__24860__auto__,"cljs.core/Eduction");
});

cljs.core.__GT_Eduction = (function __GT_Eduction(xform,coll){
return (new cljs.core.Eduction(xform,coll));
});

(cljs.core.Eduction.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__25250__auto__ = this;
return cljs.core.es6_iterator(this__25250__auto__);
}));
/**
* Returns a reducible/iterable/seqable application of
* the transducer to the items in coll. Note that these applications
* will be performed every time iterator/seq/reduce is called.
*/
cljs.core.eduction = (function eduction(xform,coll){
return (new cljs.core.Eduction(xform,coll));
});
/**
* Runs the supplied procedure (via reduce), for purposes of side
* effects, on successive items in the collection. Returns nil
*/
cljs.core.run_BANG_ = (function run_BANG_(proc,coll){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (p1__36596_SHARP_,p2__36595_SHARP_){
var G__36598 = p2__36595_SHARP_;
return (proc.cljs$core$IFn$_invoke$arity$1 ? proc.cljs$core$IFn$_invoke$arity$1(G__36598) : proc.call(null,G__36598));
}),null,coll);
});

cljs.core.IEncodeJS = (function (){var obj36600 = {};
return obj36600;
})();

cljs.core._clj__GT_js = (function _clj__GT_js(x){
if((function (){var and__24260__auto__ = x;
if(and__24260__auto__){
return x.cljs$core$IEncodeJS$_clj__GT_js$arity$1;
} else {
return and__24260__auto__;
}
})()){
return x.cljs$core$IEncodeJS$_clj__GT_js$arity$1(x);
} else {
var x__24916__auto__ = (((x == null))?null:x);
return (function (){var or__24272__auto__ = (cljs.core._clj__GT_js[(function (){var G__36604 = x__24916__auto__;
return goog.typeOf(G__36604);
})()]);
if(or__24272__auto__){
return or__24272__auto__;
} else {
var or__24272__auto____$1 = (cljs.core._clj__GT_js["_"]);
if(or__24272__auto____$1){
return or__24272__auto____$1;
} else {
throw cljs.core.missing_protocol("IEncodeJS.-clj->js",x);
}
}
})().call(null,x);
}
});

cljs.core._key__GT_js = (function _key__GT_js(x){
if((function (){var and__24260__auto__ = x;
if(and__24260__auto__){
return x.cljs$core$IEncodeJS$_key__GT_js$arity$1;
} else {
return and__24260__auto__;
}
})()){
return x.cljs$core$IEncodeJS$_key__GT_js$arity$1(x);
} else {
var x__24916__auto__ = (((x == null))?null:x);
return (function (){var or__24272__auto__ = (cljs.core._key__GT_js[(function (){var G__36608 = x__24916__auto__;
return goog.typeOf(G__36608);
})()]);
if(or__24272__auto__){
return or__24272__auto__;
} else {
var or__24272__auto____$1 = (cljs.core._key__GT_js["_"]);
if(or__24272__auto____$1){
return or__24272__auto____$1;
} else {
throw cljs.core.missing_protocol("IEncodeJS.-key->js",x);
}
}
})().call(null,x);
}
});

cljs.core.key__GT_js = (function key__GT_js(k){
if((function (){var G__36611 = k;
if(G__36611){
var bit__24953__auto__ = null;
if(cljs.core.truth_((function (){var or__24272__auto__ = bit__24953__auto__;
if(cljs.core.truth_(or__24272__auto__)){
return or__24272__auto__;
} else {
return G__36611.cljs$core$IEncodeJS$;
}
})())){
return true;
} else {
if((!G__36611.cljs$lang$protocol_mask$partition$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeJS,G__36611);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeJS,G__36611);
}
})()){
return cljs.core._clj__GT_js(k);
} else {
if((typeof k === 'string') || (typeof k === 'number') || ((k instanceof cljs.core.Keyword)) || ((k instanceof cljs.core.Symbol))){
var G__36612 = k;
return (cljs.core.clj__GT_js.cljs$core$IFn$_invoke$arity$1 ? cljs.core.clj__GT_js.cljs$core$IFn$_invoke$arity$1(G__36612) : cljs.core.clj__GT_js.call(null,G__36612));
} else {
return cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([k], 0));
}
}
});
/**
* Recursively transforms ClojureScript values to JavaScript.
* sets/vectors/lists become Arrays, Keywords and Symbol become Strings,
* Maps become Objects. Arbitrary keys are encoded to by key->js.
*/
cljs.core.clj__GT_js = (function clj__GT_js(x){
if((x == null)){
return null;
} else {
if((function (){var G__36628 = x;
if(G__36628){
var bit__24953__auto__ = null;
if(cljs.core.truth_((function (){var or__24272__auto__ = bit__24953__auto__;
if(cljs.core.truth_(or__24272__auto__)){
return or__24272__auto__;
} else {
return G__36628.cljs$core$IEncodeJS$;
}
})())){
return true;
} else {
if((!G__36628.cljs$lang$protocol_mask$partition$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeJS,G__36628);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeJS,G__36628);
}
})()){
return cljs.core._clj__GT_js(x);
} else {
if((x instanceof cljs.core.Keyword)){
return cljs.core.name(x);
} else {
if((x instanceof cljs.core.Symbol)){
return [cljs.core.str(x)].join('');
} else {
if(cljs.core.map_QMARK_(x)){
var m = (function (){var obj36630 = {};
return obj36630;
})();
var seq__36631_36641 = cljs.core.seq(x);
var chunk__36632_36642 = null;
var count__36633_36643 = (0);
var i__36634_36644 = (0);
while(true){
if((i__36634_36644 < count__36633_36643)){
var vec__36635_36645 = chunk__36632_36642.cljs$core$IIndexed$_nth$arity$2(null,i__36634_36644);
var k_36646 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__36635_36645,(0),null);
var v_36647 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__36635_36645,(1),null);
(m[cljs.core.key__GT_js(k_36646)] = clj__GT_js(v_36647));

var G__36648 = seq__36631_36641;
var G__36649 = chunk__36632_36642;
var G__36650 = count__36633_36643;
var G__36651 = (i__36634_36644 + (1));
seq__36631_36641 = G__36648;
chunk__36632_36642 = G__36649;
count__36633_36643 = G__36650;
i__36634_36644 = G__36651;
continue;
} else {
var temp__4126__auto___36652 = cljs.core.seq(seq__36631_36641);
if(temp__4126__auto___36652){
var seq__36631_36653__$1 = temp__4126__auto___36652;
if(cljs.core.chunked_seq_QMARK_(seq__36631_36653__$1)){
var c__25059__auto___36654 = cljs.core.chunk_first(seq__36631_36653__$1);
var G__36655 = cljs.core.chunk_rest(seq__36631_36653__$1);
var G__36656 = c__25059__auto___36654;
var G__36657 = cljs.core.count(c__25059__auto___36654);
var G__36658 = (0);
seq__36631_36641 = G__36655;
chunk__36632_36642 = G__36656;
count__36633_36643 = G__36657;
i__36634_36644 = G__36658;
continue;
} else {
var vec__36636_36659 = cljs.core.first(seq__36631_36653__$1);
var k_36660 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__36636_36659,(0),null);
var v_36661 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__36636_36659,(1),null);
(m[cljs.core.key__GT_js(k_36660)] = clj__GT_js(v_36661));

var G__36662 = cljs.core.next(seq__36631_36653__$1);
var G__36663 = null;
var G__36664 = (0);
var G__36665 = (0);
seq__36631_36641 = G__36662;
chunk__36632_36642 = G__36663;
count__36633_36643 = G__36664;
i__36634_36644 = G__36665;
continue;
}
} else {
}
}
break;
}

return m;
} else {
if(cljs.core.coll_QMARK_(x)){
var arr = [];
var seq__36637_36666 = cljs.core.seq(cljs.core.map.cljs$core$IFn$_invoke$arity$2(clj__GT_js,x));
var chunk__36638_36667 = null;
var count__36639_36668 = (0);
var i__36640_36669 = (0);
while(true){
if((i__36640_36669 < count__36639_36668)){
var x_36670__$1 = chunk__36638_36667.cljs$core$IIndexed$_nth$arity$2(null,i__36640_36669);
arr.push(x_36670__$1);

var G__36671 = seq__36637_36666;
var G__36672 = chunk__36638_36667;
var G__36673 = count__36639_36668;
var G__36674 = (i__36640_36669 + (1));
seq__36637_36666 = G__36671;
chunk__36638_36667 = G__36672;
count__36639_36668 = G__36673;
i__36640_36669 = G__36674;
continue;
} else {
var temp__4126__auto___36675 = cljs.core.seq(seq__36637_36666);
if(temp__4126__auto___36675){
var seq__36637_36676__$1 = temp__4126__auto___36675;
if(cljs.core.chunked_seq_QMARK_(seq__36637_36676__$1)){
var c__25059__auto___36677 = cljs.core.chunk_first(seq__36637_36676__$1);
var G__36678 = cljs.core.chunk_rest(seq__36637_36676__$1);
var G__36679 = c__25059__auto___36677;
var G__36680 = cljs.core.count(c__25059__auto___36677);
var G__36681 = (0);
seq__36637_36666 = G__36678;
chunk__36638_36667 = G__36679;
count__36639_36668 = G__36680;
i__36640_36669 = G__36681;
continue;
} else {
var x_36682__$1 = cljs.core.first(seq__36637_36676__$1);
arr.push(x_36682__$1);

var G__36683 = cljs.core.next(seq__36637_36676__$1);
var G__36684 = null;
var G__36685 = (0);
var G__36686 = (0);
seq__36637_36666 = G__36683;
chunk__36638_36667 = G__36684;
count__36639_36668 = G__36685;
i__36640_36669 = G__36686;
continue;
}
} else {
}
}
break;
}

return arr;
} else {
return x;

}
}
}
}
}
}
});

cljs.core.IEncodeClojure = (function (){var obj36688 = {};
return obj36688;
})();

cljs.core._js__GT_clj = (function _js__GT_clj(x,options){
if((function (){var and__24260__auto__ = x;
if(and__24260__auto__){
return x.cljs$core$IEncodeClojure$_js__GT_clj$arity$2;
} else {
return and__24260__auto__;
}
})()){
return x.cljs$core$IEncodeClojure$_js__GT_clj$arity$2(x,options);
} else {
var x__24916__auto__ = (((x == null))?null:x);
return (function (){var or__24272__auto__ = (cljs.core._js__GT_clj[(function (){var G__36692 = x__24916__auto__;
return goog.typeOf(G__36692);
})()]);
if(or__24272__auto__){
return or__24272__auto__;
} else {
var or__24272__auto____$1 = (cljs.core._js__GT_clj["_"]);
if(or__24272__auto____$1){
return or__24272__auto____$1;
} else {
throw cljs.core.missing_protocol("IEncodeClojure.-js->clj",x);
}
}
})().call(null,x,options);
}
});

/**
* Recursively transforms JavaScript arrays into ClojureScript
* vectors, and JavaScript objects into ClojureScript maps.  With
* option ':keywordize-keys true' will convert object fields from
* strings to keywords.
* @param {...*} var_args
*/
cljs.core.js__GT_clj = (function() {
var js__GT_clj = null;
var js__GT_clj__1 = (function (x){
return js__GT_clj.cljs$core$IFn$_invoke$arity$variadic(x,cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,"keywordize-keys","keywordize-keys",1310784252),false], null)], 0));
});
var js__GT_clj__2 = (function() { 
var G__36749__delegate = function (x,opts){
var map__36722 = opts;
var map__36722__$1 = ((cljs.core.seq_QMARK_(map__36722))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__36722):map__36722);
var keywordize_keys = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__36722__$1,new cljs.core.Keyword(null,"keywordize-keys","keywordize-keys",1310784252));
var keyfn = (cljs.core.truth_(keywordize_keys)?cljs.core.keyword:cljs.core.str);
var f = ((function (map__36722,map__36722__$1,keywordize_keys,keyfn){
return (function thisfn(x__$1){
if((function (){var G__36738 = x__$1;
if(G__36738){
var bit__24953__auto__ = null;
if(cljs.core.truth_((function (){var or__24272__auto__ = bit__24953__auto__;
if(cljs.core.truth_(or__24272__auto__)){
return or__24272__auto__;
} else {
return G__36738.cljs$core$IEncodeClojure$;
}
})())){
return true;
} else {
if((!G__36738.cljs$lang$protocol_mask$partition$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeClojure,G__36738);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeClojure,G__36738);
}
})()){
return cljs.core._js__GT_clj(x__$1,cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.array_map,opts));
} else {
if(cljs.core.seq_QMARK_(x__$1)){
return cljs.core.doall.cljs$core$IFn$_invoke$arity$1(cljs.core.map.cljs$core$IFn$_invoke$arity$2(thisfn,x__$1));
} else {
if(cljs.core.coll_QMARK_(x__$1)){
return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.empty(x__$1),cljs.core.map.cljs$core$IFn$_invoke$arity$2(thisfn,x__$1));
} else {
if(x__$1 instanceof Array){
return cljs.core.vec(cljs.core.map.cljs$core$IFn$_invoke$arity$2(thisfn,x__$1));
} else {
if((cljs.core.type(x__$1) === Object)){
return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentArrayMap.EMPTY,(function (){var iter__25028__auto__ = ((function (map__36722,map__36722__$1,keywordize_keys,keyfn){
return (function iter__36739(s__36740){
return (new cljs.core.LazySeq(null,((function (map__36722,map__36722__$1,keywordize_keys,keyfn){
return (function (){
var s__36740__$1 = s__36740;
while(true){
var temp__4126__auto__ = cljs.core.seq(s__36740__$1);
if(temp__4126__auto__){
var s__36740__$2 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(s__36740__$2)){
var c__25026__auto__ = cljs.core.chunk_first(s__36740__$2);
var size__25027__auto__ = cljs.core.count(c__25026__auto__);
var b__36742 = cljs.core.chunk_buffer(size__25027__auto__);
if((function (){var i__36741 = (0);
while(true){
if((i__36741 < size__25027__auto__)){
var k = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c__25026__auto__,i__36741);
cljs.core.chunk_append(b__36742,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__36747 = k;
return (keyfn.cljs$core$IFn$_invoke$arity$1 ? keyfn.cljs$core$IFn$_invoke$arity$1(G__36747) : keyfn.call(null,G__36747));
})(),thisfn((x__$1[k]))], null));

var G__36750 = (i__36741 + (1));
i__36741 = G__36750;
continue;
} else {
return true;
}
break;
}
})()){
return cljs.core.chunk_cons(cljs.core.chunk(b__36742),iter__36739(cljs.core.chunk_rest(s__36740__$2)));
} else {
return cljs.core.chunk_cons(cljs.core.chunk(b__36742),null);
}
} else {
var k = cljs.core.first(s__36740__$2);
return cljs.core.cons(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__36748 = k;
return (keyfn.cljs$core$IFn$_invoke$arity$1 ? keyfn.cljs$core$IFn$_invoke$arity$1(G__36748) : keyfn.call(null,G__36748));
})(),thisfn((x__$1[k]))], null),iter__36739(cljs.core.rest(s__36740__$2)));
}
} else {
return null;
}
break;
}
});})(map__36722,map__36722__$1,keywordize_keys,keyfn))
,null,null));
});})(map__36722,map__36722__$1,keywordize_keys,keyfn))
;
return iter__25028__auto__(cljs.core.js_keys(x__$1));
})());
} else {
return x__$1;

}
}
}
}
}
});})(map__36722,map__36722__$1,keywordize_keys,keyfn))
;
return f(x);
};
var G__36749 = function (x,var_args){
var opts = null;
if (arguments.length > 1) {
var G__36751__i = 0, G__36751__a = new Array(arguments.length -  1);
while (G__36751__i < G__36751__a.length) {G__36751__a[G__36751__i] = arguments[G__36751__i + 1]; ++G__36751__i;}
  opts = new cljs.core.IndexedSeq(G__36751__a,0);
} 
return G__36749__delegate.call(this,x,opts);};
G__36749.cljs$lang$maxFixedArity = 1;
G__36749.cljs$lang$applyTo = (function (arglist__36752){
var x = cljs.core.first(arglist__36752);
var opts = cljs.core.rest(arglist__36752);
return G__36749__delegate(x,opts);
});
G__36749.cljs$core$IFn$_invoke$arity$variadic = G__36749__delegate;
return G__36749;
})()
;
js__GT_clj = function(x,var_args){
var opts = var_args;
switch(arguments.length){
case 1:
return js__GT_clj__1.call(this,x);
default:
var G__36753 = null;
if (arguments.length > 1) {
var G__36754__i = 0, G__36754__a = new Array(arguments.length -  1);
while (G__36754__i < G__36754__a.length) {G__36754__a[G__36754__i] = arguments[G__36754__i + 1]; ++G__36754__i;}
G__36753 = new cljs.core.IndexedSeq(G__36754__a,0);
}
return js__GT_clj__2.cljs$core$IFn$_invoke$arity$variadic(x, G__36753);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
js__GT_clj.cljs$lang$maxFixedArity = 1;
js__GT_clj.cljs$lang$applyTo = js__GT_clj__2.cljs$lang$applyTo;
js__GT_clj.cljs$core$IFn$_invoke$arity$1 = js__GT_clj__1;
js__GT_clj.cljs$core$IFn$_invoke$arity$variadic = js__GT_clj__2.cljs$core$IFn$_invoke$arity$variadic;
return js__GT_clj;
})()
;
/**
* Returns a memoized version of a referentially transparent function. The
* memoized version of the function keeps a cache of the mapping from arguments
* to results and, when calls with the same arguments are repeated often, has
* higher performance at the expense of higher memory use.
*/
cljs.core.memoize = (function memoize(f){
var mem = (function (){var G__36757 = cljs.core.PersistentArrayMap.EMPTY;
return (cljs.core.atom.cljs$core$IFn$_invoke$arity$1 ? cljs.core.atom.cljs$core$IFn$_invoke$arity$1(G__36757) : cljs.core.atom.call(null,G__36757));
})();
return ((function (mem){
return (function() { 
var G__36759__delegate = function (args){
var v = cljs.core.get.cljs$core$IFn$_invoke$arity$3((function (){var G__36758 = mem;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__36758) : cljs.core.deref.call(null,G__36758));
})(),args,cljs.core.lookup_sentinel);
if((v === cljs.core.lookup_sentinel)){
var ret = cljs.core.apply.cljs$core$IFn$_invoke$arity$2(f,args);
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(mem,cljs.core.assoc,args,ret);

return ret;
} else {
return v;
}
};
var G__36759 = function (var_args){
var args = null;
if (arguments.length > 0) {
var G__36760__i = 0, G__36760__a = new Array(arguments.length -  0);
while (G__36760__i < G__36760__a.length) {G__36760__a[G__36760__i] = arguments[G__36760__i + 0]; ++G__36760__i;}
  args = new cljs.core.IndexedSeq(G__36760__a,0);
} 
return G__36759__delegate.call(this,args);};
G__36759.cljs$lang$maxFixedArity = 0;
G__36759.cljs$lang$applyTo = (function (arglist__36761){
var args = cljs.core.seq(arglist__36761);
return G__36759__delegate(args);
});
G__36759.cljs$core$IFn$_invoke$arity$variadic = G__36759__delegate;
return G__36759;
})()
;
;})(mem))
});
/**
* trampoline can be used to convert algorithms requiring mutual
* recursion without stack consumption. Calls f with supplied args, if
* any. If f returns a fn, calls that fn with no arguments, and
* continues to repeat, until the return value is not a fn, then
* returns that non-fn value. Note that if you want to return a fn as a
* final value, you must wrap it in some data structure and unpack it
* after trampoline returns.
* @param {...*} var_args
*/
cljs.core.trampoline = (function() {
var trampoline = null;
var trampoline__1 = (function (f){
while(true){
var ret = (function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})();
if(cljs.core.fn_QMARK_(ret)){
var G__36763 = ret;
f = G__36763;
continue;
} else {
return ret;
}
break;
}
});
var trampoline__2 = (function() { 
var G__36764__delegate = function (f,args){
return trampoline.cljs$core$IFn$_invoke$arity$1((function (){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$2(f,args);
}));
};
var G__36764 = function (f,var_args){
var args = null;
if (arguments.length > 1) {
var G__36765__i = 0, G__36765__a = new Array(arguments.length -  1);
while (G__36765__i < G__36765__a.length) {G__36765__a[G__36765__i] = arguments[G__36765__i + 1]; ++G__36765__i;}
  args = new cljs.core.IndexedSeq(G__36765__a,0);
} 
return G__36764__delegate.call(this,f,args);};
G__36764.cljs$lang$maxFixedArity = 1;
G__36764.cljs$lang$applyTo = (function (arglist__36766){
var f = cljs.core.first(arglist__36766);
var args = cljs.core.rest(arglist__36766);
return G__36764__delegate(f,args);
});
G__36764.cljs$core$IFn$_invoke$arity$variadic = G__36764__delegate;
return G__36764;
})()
;
trampoline = function(f,var_args){
var args = var_args;
switch(arguments.length){
case 1:
return trampoline__1.call(this,f);
default:
var G__36767 = null;
if (arguments.length > 1) {
var G__36768__i = 0, G__36768__a = new Array(arguments.length -  1);
while (G__36768__i < G__36768__a.length) {G__36768__a[G__36768__i] = arguments[G__36768__i + 1]; ++G__36768__i;}
G__36767 = new cljs.core.IndexedSeq(G__36768__a,0);
}
return trampoline__2.cljs$core$IFn$_invoke$arity$variadic(f, G__36767);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
trampoline.cljs$lang$maxFixedArity = 1;
trampoline.cljs$lang$applyTo = trampoline__2.cljs$lang$applyTo;
trampoline.cljs$core$IFn$_invoke$arity$1 = trampoline__1;
trampoline.cljs$core$IFn$_invoke$arity$variadic = trampoline__2.cljs$core$IFn$_invoke$arity$variadic;
return trampoline;
})()
;
/**
* Returns a random floating point number between 0 (inclusive) and
* n (default 1) (exclusive).
*/
cljs.core.rand = (function() {
var rand = null;
var rand__0 = (function (){
return rand.cljs$core$IFn$_invoke$arity$1((1));
});
var rand__1 = (function (n){
return ((function (){return (Math.random.cljs$core$IFn$_invoke$arity$0 ? Math.random.cljs$core$IFn$_invoke$arity$0() : Math.random.call(null));
})() * n);
});
rand = function(n){
switch(arguments.length){
case 0:
return rand__0.call(this);
case 1:
return rand__1.call(this,n);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
rand.cljs$core$IFn$_invoke$arity$0 = rand__0;
rand.cljs$core$IFn$_invoke$arity$1 = rand__1;
return rand;
})()
;
/**
* Returns a random integer between 0 (inclusive) and n (exclusive).
*/
cljs.core.rand_int = (function rand_int(n){
var G__36771 = ((function (){return (Math.random.cljs$core$IFn$_invoke$arity$0 ? Math.random.cljs$core$IFn$_invoke$arity$0() : Math.random.call(null));
})() * n);
return (Math.floor.cljs$core$IFn$_invoke$arity$1 ? Math.floor.cljs$core$IFn$_invoke$arity$1(G__36771) : Math.floor.call(null,G__36771));
});
/**
* Return a random element of the (sequential) collection. Will have
* the same performance characteristics as nth for the given
* collection.
*/
cljs.core.rand_nth = (function rand_nth(coll){
return cljs.core.nth.cljs$core$IFn$_invoke$arity$2(coll,cljs.core.rand_int(cljs.core.count(coll)));
});
/**
* Returns a map of the elements of coll keyed by the result of
* f on each element. The value at each key will be a vector of the
* corresponding elements, in the order they appeared in coll.
*/
cljs.core.group_by = (function group_by(f,coll){
return cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (ret,x){
var k = (function (){var G__36773 = x;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__36773) : f.call(null,G__36773));
})();
return cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(ret,k,cljs.core.conj.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$3(ret,k,cljs.core.PersistentVector.EMPTY),x));
}),cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY),coll));
});
/**
* Creates a hierarchy object for use with derive, isa? etc.
*/
cljs.core.make_hierarchy = (function make_hierarchy(){
return new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,"parents","parents",-2027538891),cljs.core.PersistentArrayMap.EMPTY,new cljs.core.Keyword(null,"descendants","descendants",1824886031),cljs.core.PersistentArrayMap.EMPTY,new cljs.core.Keyword(null,"ancestors","ancestors",-776045424),cljs.core.PersistentArrayMap.EMPTY], null);
});
cljs.core._global_hierarchy = null;
cljs.core.get_global_hierarchy = (function get_global_hierarchy(){
if((cljs.core._global_hierarchy == null)){
cljs.core._global_hierarchy = (function (){var G__36775 = cljs.core.make_hierarchy();
return (cljs.core.atom.cljs$core$IFn$_invoke$arity$1 ? cljs.core.atom.cljs$core$IFn$_invoke$arity$1(G__36775) : cljs.core.atom.call(null,G__36775));
})();
} else {
}

return cljs.core._global_hierarchy;
});
/**
* @param {...*} var_args
*/
cljs.core.swap_global_hierarchy_BANG_ = (function() { 
var swap_global_hierarchy_BANG___delegate = function (f,args){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$4(cljs.core.swap_BANG_,cljs.core.get_global_hierarchy(),f,args);
};
var swap_global_hierarchy_BANG_ = function (f,var_args){
var args = null;
if (arguments.length > 1) {
var G__36776__i = 0, G__36776__a = new Array(arguments.length -  1);
while (G__36776__i < G__36776__a.length) {G__36776__a[G__36776__i] = arguments[G__36776__i + 1]; ++G__36776__i;}
  args = new cljs.core.IndexedSeq(G__36776__a,0);
} 
return swap_global_hierarchy_BANG___delegate.call(this,f,args);};
swap_global_hierarchy_BANG_.cljs$lang$maxFixedArity = 1;
swap_global_hierarchy_BANG_.cljs$lang$applyTo = (function (arglist__36777){
var f = cljs.core.first(arglist__36777);
var args = cljs.core.rest(arglist__36777);
return swap_global_hierarchy_BANG___delegate(f,args);
});
swap_global_hierarchy_BANG_.cljs$core$IFn$_invoke$arity$variadic = swap_global_hierarchy_BANG___delegate;
return swap_global_hierarchy_BANG_;
})()
;
/**
* Returns true if (= child parent), or child is directly or indirectly derived from
* parent, either via a JavaScript type inheritance relationship or a
* relationship established via derive. h must be a hierarchy obtained
* from make-hierarchy, if not supplied defaults to the global
* hierarchy
*/
cljs.core.isa_QMARK_ = (function() {
var isa_QMARK_ = null;
var isa_QMARK___2 = (function (child,parent){
return isa_QMARK_.cljs$core$IFn$_invoke$arity$3((function (){var G__36842 = cljs.core.get_global_hierarchy();
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__36842) : cljs.core.deref.call(null,G__36842));
})(),child,parent);
});
var isa_QMARK___3 = (function (h,child,parent){
var or__24272__auto__ = cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(child,parent);
if(or__24272__auto__){
return or__24272__auto__;
} else {
var or__24272__auto____$1 = cljs.core.contains_QMARK_(new cljs.core.Keyword(null,"ancestors","ancestors",-776045424).cljs$core$IFn$_invoke$arity$1(h).call(null,child),parent);
if(or__24272__auto____$1){
return or__24272__auto____$1;
} else {
var and__24260__auto__ = cljs.core.vector_QMARK_(parent);
if(and__24260__auto__){
var and__24260__auto____$1 = cljs.core.vector_QMARK_(child);
if(and__24260__auto____$1){
var and__24260__auto____$2 = (cljs.core.count(parent) === cljs.core.count(child));
if(and__24260__auto____$2){
var ret = true;
var i = (0);
while(true){
if((!(ret)) || ((i === cljs.core.count(parent)))){
return ret;
} else {
var G__36867 = isa_QMARK_.cljs$core$IFn$_invoke$arity$3(h,(function (){var G__36865 = i;
return (child.cljs$core$IFn$_invoke$arity$1 ? child.cljs$core$IFn$_invoke$arity$1(G__36865) : child.call(null,G__36865));
})(),(function (){var G__36866 = i;
return (parent.cljs$core$IFn$_invoke$arity$1 ? parent.cljs$core$IFn$_invoke$arity$1(G__36866) : parent.call(null,G__36866));
})());
var G__36868 = (i + (1));
ret = G__36867;
i = G__36868;
continue;
}
break;
}
} else {
return and__24260__auto____$2;
}
} else {
return and__24260__auto____$1;
}
} else {
return and__24260__auto__;
}
}
}
});
isa_QMARK_ = function(h,child,parent){
switch(arguments.length){
case 2:
return isa_QMARK___2.call(this,h,child);
case 3:
return isa_QMARK___3.call(this,h,child,parent);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
isa_QMARK_.cljs$core$IFn$_invoke$arity$2 = isa_QMARK___2;
isa_QMARK_.cljs$core$IFn$_invoke$arity$3 = isa_QMARK___3;
return isa_QMARK_;
})()
;
/**
* Returns the immediate parents of tag, either via a JavaScript type
* inheritance relationship or a relationship established via derive. h
* must be a hierarchy obtained from make-hierarchy, if not supplied
* defaults to the global hierarchy
*/
cljs.core.parents = (function() {
var parents = null;
var parents__1 = (function (tag){
return parents.cljs$core$IFn$_invoke$arity$2((function (){var G__36872 = cljs.core.get_global_hierarchy();
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__36872) : cljs.core.deref.call(null,G__36872));
})(),tag);
});
var parents__2 = (function (h,tag){
return cljs.core.not_empty(cljs.core.get.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,"parents","parents",-2027538891).cljs$core$IFn$_invoke$arity$1(h),tag));
});
parents = function(h,tag){
switch(arguments.length){
case 1:
return parents__1.call(this,h);
case 2:
return parents__2.call(this,h,tag);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
parents.cljs$core$IFn$_invoke$arity$1 = parents__1;
parents.cljs$core$IFn$_invoke$arity$2 = parents__2;
return parents;
})()
;
/**
* Returns the immediate and indirect parents of tag, either via a JavaScript type
* inheritance relationship or a relationship established via derive. h
* must be a hierarchy obtained from make-hierarchy, if not supplied
* defaults to the global hierarchy
*/
cljs.core.ancestors = (function() {
var ancestors = null;
var ancestors__1 = (function (tag){
return ancestors.cljs$core$IFn$_invoke$arity$2((function (){var G__36876 = cljs.core.get_global_hierarchy();
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__36876) : cljs.core.deref.call(null,G__36876));
})(),tag);
});
var ancestors__2 = (function (h,tag){
return cljs.core.not_empty(cljs.core.get.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,"ancestors","ancestors",-776045424).cljs$core$IFn$_invoke$arity$1(h),tag));
});
ancestors = function(h,tag){
switch(arguments.length){
case 1:
return ancestors__1.call(this,h);
case 2:
return ancestors__2.call(this,h,tag);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
ancestors.cljs$core$IFn$_invoke$arity$1 = ancestors__1;
ancestors.cljs$core$IFn$_invoke$arity$2 = ancestors__2;
return ancestors;
})()
;
/**
* Returns the immediate and indirect children of tag, through a
* relationship established via derive. h must be a hierarchy obtained
* from make-hierarchy, if not supplied defaults to the global
* hierarchy. Note: does not work on JavaScript type inheritance
* relationships.
*/
cljs.core.descendants = (function() {
var descendants = null;
var descendants__1 = (function (tag){
return descendants.cljs$core$IFn$_invoke$arity$2((function (){var G__36880 = cljs.core.get_global_hierarchy();
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__36880) : cljs.core.deref.call(null,G__36880));
})(),tag);
});
var descendants__2 = (function (h,tag){
return cljs.core.not_empty(cljs.core.get.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,"descendants","descendants",1824886031).cljs$core$IFn$_invoke$arity$1(h),tag));
});
descendants = function(h,tag){
switch(arguments.length){
case 1:
return descendants__1.call(this,h);
case 2:
return descendants__2.call(this,h,tag);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
descendants.cljs$core$IFn$_invoke$arity$1 = descendants__1;
descendants.cljs$core$IFn$_invoke$arity$2 = descendants__2;
return descendants;
})()
;
/**
* Establishes a parent/child relationship between parent and
* tag. Parent must be a namespace-qualified symbol or keyword and
* child can be either a namespace-qualified symbol or keyword or a
* class. h must be a hierarchy obtained from make-hierarchy, if not
* supplied defaults to, and modifies, the global hierarchy.
*/
cljs.core.derive = (function() {
var derive = null;
var derive__2 = (function (tag,parent){
if(cljs.core.truth_(cljs.core.namespace(parent))){
} else {
throw (new Error([cljs.core.str("Assert failed: "),cljs.core.str(cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.list(new cljs.core.Symbol(null,"namespace","namespace",1263021155,null),new cljs.core.Symbol(null,"parent","parent",761652748,null))], 0)))].join('')));
}

cljs.core.swap_global_hierarchy_BANG_.cljs$core$IFn$_invoke$arity$variadic(derive,cljs.core.array_seq([tag,parent], 0));

return null;
});
var derive__3 = (function (h,tag,parent){
if(cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2(tag,parent)){
} else {
throw (new Error([cljs.core.str("Assert failed: "),cljs.core.str(cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.list(new cljs.core.Symbol(null,"not=","not=",1466536204,null),new cljs.core.Symbol(null,"tag","tag",350170304,null),new cljs.core.Symbol(null,"parent","parent",761652748,null))], 0)))].join('')));
}

var tp = new cljs.core.Keyword(null,"parents","parents",-2027538891).cljs$core$IFn$_invoke$arity$1(h);
var td = new cljs.core.Keyword(null,"descendants","descendants",1824886031).cljs$core$IFn$_invoke$arity$1(h);
var ta = new cljs.core.Keyword(null,"ancestors","ancestors",-776045424).cljs$core$IFn$_invoke$arity$1(h);
var tf = ((function (tp,td,ta){
return (function (m,source,sources,target,targets){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (tp,td,ta){
return (function (ret,k){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(ret,k,cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.conj,cljs.core.get.cljs$core$IFn$_invoke$arity$3(targets,k,cljs.core.PersistentHashSet.EMPTY),cljs.core.cons(target,(function (){var G__36889 = target;
return (targets.cljs$core$IFn$_invoke$arity$1 ? targets.cljs$core$IFn$_invoke$arity$1(G__36889) : targets.call(null,G__36889));
})())));
});})(tp,td,ta))
,m,cljs.core.cons(source,(function (){var G__36890 = source;
return (sources.cljs$core$IFn$_invoke$arity$1 ? sources.cljs$core$IFn$_invoke$arity$1(G__36890) : sources.call(null,G__36890));
})()));
});})(tp,td,ta))
;
var or__24272__auto__ = ((cljs.core.contains_QMARK_((function (){var G__36894 = tag;
return (tp.cljs$core$IFn$_invoke$arity$1 ? tp.cljs$core$IFn$_invoke$arity$1(G__36894) : tp.call(null,G__36894));
})(),parent))?null:(function (){
if(cljs.core.contains_QMARK_((function (){var G__36895 = tag;
return (ta.cljs$core$IFn$_invoke$arity$1 ? ta.cljs$core$IFn$_invoke$arity$1(G__36895) : ta.call(null,G__36895));
})(),parent)){
throw (new Error([cljs.core.str(tag),cljs.core.str("already has"),cljs.core.str(parent),cljs.core.str("as ancestor")].join('')));
} else {
}

if(cljs.core.contains_QMARK_((function (){var G__36896 = parent;
return (ta.cljs$core$IFn$_invoke$arity$1 ? ta.cljs$core$IFn$_invoke$arity$1(G__36896) : ta.call(null,G__36896));
})(),tag)){
throw (new Error([cljs.core.str("Cyclic derivation:"),cljs.core.str(parent),cljs.core.str("has"),cljs.core.str(tag),cljs.core.str("as ancestor")].join('')));
} else {
}

return new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,"parents","parents",-2027538891),cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(new cljs.core.Keyword(null,"parents","parents",-2027538891).cljs$core$IFn$_invoke$arity$1(h),tag,cljs.core.conj.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$3(tp,tag,cljs.core.PersistentHashSet.EMPTY),parent)),new cljs.core.Keyword(null,"ancestors","ancestors",-776045424),tf(new cljs.core.Keyword(null,"ancestors","ancestors",-776045424).cljs$core$IFn$_invoke$arity$1(h),tag,td,parent,ta),new cljs.core.Keyword(null,"descendants","descendants",1824886031),tf(new cljs.core.Keyword(null,"descendants","descendants",1824886031).cljs$core$IFn$_invoke$arity$1(h),parent,ta,tag,td)], null);
})()
);
if(cljs.core.truth_(or__24272__auto__)){
return or__24272__auto__;
} else {
return h;
}
});
derive = function(h,tag,parent){
switch(arguments.length){
case 2:
return derive__2.call(this,h,tag);
case 3:
return derive__3.call(this,h,tag,parent);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
derive.cljs$core$IFn$_invoke$arity$2 = derive__2;
derive.cljs$core$IFn$_invoke$arity$3 = derive__3;
return derive;
})()
;
/**
* Removes a parent/child relationship between parent and
* tag. h must be a hierarchy obtained from make-hierarchy, if not
* supplied defaults to, and modifies, the global hierarchy.
*/
cljs.core.underive = (function() {
var underive = null;
var underive__2 = (function (tag,parent){
cljs.core.swap_global_hierarchy_BANG_.cljs$core$IFn$_invoke$arity$variadic(underive,cljs.core.array_seq([tag,parent], 0));

return null;
});
var underive__3 = (function (h,tag,parent){
var parentMap = new cljs.core.Keyword(null,"parents","parents",-2027538891).cljs$core$IFn$_invoke$arity$1(h);
var childsParents = (cljs.core.truth_((function (){var G__36903 = tag;
return (parentMap.cljs$core$IFn$_invoke$arity$1 ? parentMap.cljs$core$IFn$_invoke$arity$1(G__36903) : parentMap.call(null,G__36903));
})())?cljs.core.disj.cljs$core$IFn$_invoke$arity$2((function (){var G__36904 = tag;
return (parentMap.cljs$core$IFn$_invoke$arity$1 ? parentMap.cljs$core$IFn$_invoke$arity$1(G__36904) : parentMap.call(null,G__36904));
})(),parent):cljs.core.PersistentHashSet.EMPTY);
var newParents = (cljs.core.truth_(cljs.core.not_empty(childsParents))?cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(parentMap,tag,childsParents):cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(parentMap,tag));
var deriv_seq = cljs.core.flatten(cljs.core.map.cljs$core$IFn$_invoke$arity$2(((function (parentMap,childsParents,newParents){
return (function (p1__36897_SHARP_){
return cljs.core.cons(cljs.core.first(p1__36897_SHARP_),cljs.core.interpose(cljs.core.first(p1__36897_SHARP_),cljs.core.second(p1__36897_SHARP_)));
});})(parentMap,childsParents,newParents))
,cljs.core.seq(newParents)));
if(cljs.core.contains_QMARK_((function (){var G__36905 = tag;
return (parentMap.cljs$core$IFn$_invoke$arity$1 ? parentMap.cljs$core$IFn$_invoke$arity$1(G__36905) : parentMap.call(null,G__36905));
})(),parent)){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (parentMap,childsParents,newParents,deriv_seq){
return (function (p1__36898_SHARP_,p2__36899_SHARP_){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$3(cljs.core.derive,p1__36898_SHARP_,p2__36899_SHARP_);
});})(parentMap,childsParents,newParents,deriv_seq))
,cljs.core.make_hierarchy(),cljs.core.partition.cljs$core$IFn$_invoke$arity$2((2),deriv_seq));
} else {
return h;
}
});
underive = function(h,tag,parent){
switch(arguments.length){
case 2:
return underive__2.call(this,h,tag);
case 3:
return underive__3.call(this,h,tag,parent);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
underive.cljs$core$IFn$_invoke$arity$2 = underive__2;
underive.cljs$core$IFn$_invoke$arity$3 = underive__3;
return underive;
})()
;
cljs.core.reset_cache = (function reset_cache(method_cache,method_table,cached_hierarchy,hierarchy){
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(method_cache,(function (_){
var G__36908 = method_table;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__36908) : cljs.core.deref.call(null,G__36908));
}));

return cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(cached_hierarchy,(function (_){
var G__36909 = hierarchy;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__36909) : cljs.core.deref.call(null,G__36909));
}));
});
cljs.core.prefers_STAR_ = (function prefers_STAR_(x,y,prefer_table){
var xprefs = (function (){var G__36925 = prefer_table;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__36925) : cljs.core.deref.call(null,G__36925));
})().call(null,x);
var or__24272__auto__ = (cljs.core.truth_((function (){var and__24260__auto__ = xprefs;
if(cljs.core.truth_(and__24260__auto__)){
var G__36927 = y;
return (xprefs.cljs$core$IFn$_invoke$arity$1 ? xprefs.cljs$core$IFn$_invoke$arity$1(G__36927) : xprefs.call(null,G__36927));
} else {
return and__24260__auto__;
}
})())?true:null);
if(cljs.core.truth_(or__24272__auto__)){
return or__24272__auto__;
} else {
var or__24272__auto____$1 = (function (){var ps = cljs.core.parents.cljs$core$IFn$_invoke$arity$1(y);
while(true){
if((cljs.core.count(ps) > (0))){
if(cljs.core.truth_(prefers_STAR_(x,cljs.core.first(ps),prefer_table))){
} else {
}

var G__36928 = cljs.core.rest(ps);
ps = G__36928;
continue;
} else {
return null;
}
break;
}
})();
if(cljs.core.truth_(or__24272__auto____$1)){
return or__24272__auto____$1;
} else {
var or__24272__auto____$2 = (function (){var ps = cljs.core.parents.cljs$core$IFn$_invoke$arity$1(x);
while(true){
if((cljs.core.count(ps) > (0))){
if(cljs.core.truth_(prefers_STAR_(cljs.core.first(ps),y,prefer_table))){
} else {
}

var G__36929 = cljs.core.rest(ps);
ps = G__36929;
continue;
} else {
return null;
}
break;
}
})();
if(cljs.core.truth_(or__24272__auto____$2)){
return or__24272__auto____$2;
} else {
return false;
}
}
}
});
cljs.core.dominates = (function dominates(x,y,prefer_table){
var or__24272__auto__ = cljs.core.prefers_STAR_(x,y,prefer_table);
if(cljs.core.truth_(or__24272__auto__)){
return or__24272__auto__;
} else {
return cljs.core.isa_QMARK_.cljs$core$IFn$_invoke$arity$2(x,y);
}
});
cljs.core.find_and_cache_best_method = (function find_and_cache_best_method(name,dispatch_val,hierarchy,method_table,prefer_table,method_cache,cached_hierarchy){
var best_entry = cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (be,p__36943){
var vec__36944 = p__36943;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__36944,(0),null);
var _ = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__36944,(1),null);
var e = vec__36944;
if(cljs.core.isa_QMARK_.cljs$core$IFn$_invoke$arity$3((function (){var G__36945 = hierarchy;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__36945) : cljs.core.deref.call(null,G__36945));
})(),dispatch_val,k)){
var be2 = (cljs.core.truth_((function (){var or__24272__auto__ = (be == null);
if(or__24272__auto__){
return or__24272__auto__;
} else {
return cljs.core.dominates(k,cljs.core.first(be),prefer_table);
}
})())?e:be);
if(cljs.core.truth_(cljs.core.dominates(cljs.core.first(be2),k,prefer_table))){
} else {
throw (new Error([cljs.core.str("Multiple methods in multimethod '"),cljs.core.str(name),cljs.core.str("' match dispatch value: "),cljs.core.str(dispatch_val),cljs.core.str(" -> "),cljs.core.str(k),cljs.core.str(" and "),cljs.core.str(cljs.core.first(be2)),cljs.core.str(", and neither is preferred")].join('')));
}

return be2;
} else {
return be;
}
}),null,(function (){var G__36946 = method_table;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__36946) : cljs.core.deref.call(null,G__36946));
})());
if(cljs.core.truth_(best_entry)){
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2((function (){var G__36947 = cached_hierarchy;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__36947) : cljs.core.deref.call(null,G__36947));
})(),(function (){var G__36948 = hierarchy;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__36948) : cljs.core.deref.call(null,G__36948));
})())){
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(method_cache,cljs.core.assoc,dispatch_val,cljs.core.second(best_entry));

return cljs.core.second(best_entry);
} else {
cljs.core.reset_cache(method_cache,method_table,cached_hierarchy,hierarchy);

return find_and_cache_best_method(name,dispatch_val,hierarchy,method_table,prefer_table,method_cache,cached_hierarchy);
}
} else {
return null;
}
});

cljs.core.IMultiFn = (function (){var obj36950 = {};
return obj36950;
})();

cljs.core._reset = (function _reset(mf){
if((function (){var and__24260__auto__ = mf;
if(and__24260__auto__){
return mf.cljs$core$IMultiFn$_reset$arity$1;
} else {
return and__24260__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_reset$arity$1(mf);
} else {
var x__24916__auto__ = (((mf == null))?null:mf);
return (function (){var or__24272__auto__ = (cljs.core._reset[(function (){var G__36954 = x__24916__auto__;
return goog.typeOf(G__36954);
})()]);
if(or__24272__auto__){
return or__24272__auto__;
} else {
var or__24272__auto____$1 = (cljs.core._reset["_"]);
if(or__24272__auto____$1){
return or__24272__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-reset",mf);
}
}
})().call(null,mf);
}
});

cljs.core._add_method = (function _add_method(mf,dispatch_val,method){
if((function (){var and__24260__auto__ = mf;
if(and__24260__auto__){
return mf.cljs$core$IMultiFn$_add_method$arity$3;
} else {
return and__24260__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_add_method$arity$3(mf,dispatch_val,method);
} else {
var x__24916__auto__ = (((mf == null))?null:mf);
return (function (){var or__24272__auto__ = (cljs.core._add_method[(function (){var G__36958 = x__24916__auto__;
return goog.typeOf(G__36958);
})()]);
if(or__24272__auto__){
return or__24272__auto__;
} else {
var or__24272__auto____$1 = (cljs.core._add_method["_"]);
if(or__24272__auto____$1){
return or__24272__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-add-method",mf);
}
}
})().call(null,mf,dispatch_val,method);
}
});

cljs.core._remove_method = (function _remove_method(mf,dispatch_val){
if((function (){var and__24260__auto__ = mf;
if(and__24260__auto__){
return mf.cljs$core$IMultiFn$_remove_method$arity$2;
} else {
return and__24260__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_remove_method$arity$2(mf,dispatch_val);
} else {
var x__24916__auto__ = (((mf == null))?null:mf);
return (function (){var or__24272__auto__ = (cljs.core._remove_method[(function (){var G__36962 = x__24916__auto__;
return goog.typeOf(G__36962);
})()]);
if(or__24272__auto__){
return or__24272__auto__;
} else {
var or__24272__auto____$1 = (cljs.core._remove_method["_"]);
if(or__24272__auto____$1){
return or__24272__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-remove-method",mf);
}
}
})().call(null,mf,dispatch_val);
}
});

cljs.core._prefer_method = (function _prefer_method(mf,dispatch_val,dispatch_val_y){
if((function (){var and__24260__auto__ = mf;
if(and__24260__auto__){
return mf.cljs$core$IMultiFn$_prefer_method$arity$3;
} else {
return and__24260__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_prefer_method$arity$3(mf,dispatch_val,dispatch_val_y);
} else {
var x__24916__auto__ = (((mf == null))?null:mf);
return (function (){var or__24272__auto__ = (cljs.core._prefer_method[(function (){var G__36966 = x__24916__auto__;
return goog.typeOf(G__36966);
})()]);
if(or__24272__auto__){
return or__24272__auto__;
} else {
var or__24272__auto____$1 = (cljs.core._prefer_method["_"]);
if(or__24272__auto____$1){
return or__24272__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-prefer-method",mf);
}
}
})().call(null,mf,dispatch_val,dispatch_val_y);
}
});

cljs.core._get_method = (function _get_method(mf,dispatch_val){
if((function (){var and__24260__auto__ = mf;
if(and__24260__auto__){
return mf.cljs$core$IMultiFn$_get_method$arity$2;
} else {
return and__24260__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_get_method$arity$2(mf,dispatch_val);
} else {
var x__24916__auto__ = (((mf == null))?null:mf);
return (function (){var or__24272__auto__ = (cljs.core._get_method[(function (){var G__36970 = x__24916__auto__;
return goog.typeOf(G__36970);
})()]);
if(or__24272__auto__){
return or__24272__auto__;
} else {
var or__24272__auto____$1 = (cljs.core._get_method["_"]);
if(or__24272__auto____$1){
return or__24272__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-get-method",mf);
}
}
})().call(null,mf,dispatch_val);
}
});

cljs.core._methods = (function _methods(mf){
if((function (){var and__24260__auto__ = mf;
if(and__24260__auto__){
return mf.cljs$core$IMultiFn$_methods$arity$1;
} else {
return and__24260__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_methods$arity$1(mf);
} else {
var x__24916__auto__ = (((mf == null))?null:mf);
return (function (){var or__24272__auto__ = (cljs.core._methods[(function (){var G__36974 = x__24916__auto__;
return goog.typeOf(G__36974);
})()]);
if(or__24272__auto__){
return or__24272__auto__;
} else {
var or__24272__auto____$1 = (cljs.core._methods["_"]);
if(or__24272__auto____$1){
return or__24272__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-methods",mf);
}
}
})().call(null,mf);
}
});

cljs.core._prefers = (function _prefers(mf){
if((function (){var and__24260__auto__ = mf;
if(and__24260__auto__){
return mf.cljs$core$IMultiFn$_prefers$arity$1;
} else {
return and__24260__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_prefers$arity$1(mf);
} else {
var x__24916__auto__ = (((mf == null))?null:mf);
return (function (){var or__24272__auto__ = (cljs.core._prefers[(function (){var G__36978 = x__24916__auto__;
return goog.typeOf(G__36978);
})()]);
if(or__24272__auto__){
return or__24272__auto__;
} else {
var or__24272__auto____$1 = (cljs.core._prefers["_"]);
if(or__24272__auto____$1){
return or__24272__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-prefers",mf);
}
}
})().call(null,mf);
}
});

cljs.core.throw_no_method_error = (function throw_no_method_error(name,dispatch_val){
throw (new Error([cljs.core.str("No method in multimethod '"),cljs.core.str(name),cljs.core.str("' for dispatch value: "),cljs.core.str(dispatch_val)].join('')));
});

/**
* @constructor
*/
cljs.core.MultiFn = (function (name,dispatch_fn,default_dispatch_val,hierarchy,method_table,prefer_table,method_cache,cached_hierarchy){
this.name = name;
this.dispatch_fn = dispatch_fn;
this.default_dispatch_val = default_dispatch_val;
this.hierarchy = hierarchy;
this.method_table = method_table;
this.prefer_table = prefer_table;
this.method_cache = method_cache;
this.cached_hierarchy = cached_hierarchy;
this.cljs$lang$protocol_mask$partition0$ = 4194305;
this.cljs$lang$protocol_mask$partition1$ = 4352;
})
cljs.core.MultiFn.prototype.cljs$core$IHash$_hash$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
var G__36980 = this$__$1;
return goog.getUid(G__36980);
});

cljs.core.MultiFn.prototype.cljs$core$INamed$_name$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return cljs.core._name(self__.name);
});

cljs.core.MultiFn.prototype.cljs$core$INamed$_namespace$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return cljs.core._namespace(self__.name);
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_reset$arity$1 = (function (mf){
var self__ = this;
var mf__$1 = this;
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.method_table,((function (mf__$1){
return (function (mf__$2){
return cljs.core.PersistentArrayMap.EMPTY;
});})(mf__$1))
);

cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.method_cache,((function (mf__$1){
return (function (mf__$2){
return cljs.core.PersistentArrayMap.EMPTY;
});})(mf__$1))
);

cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.prefer_table,((function (mf__$1){
return (function (mf__$2){
return cljs.core.PersistentArrayMap.EMPTY;
});})(mf__$1))
);

cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.cached_hierarchy,((function (mf__$1){
return (function (mf__$2){
return null;
});})(mf__$1))
);

return mf__$1;
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_add_method$arity$3 = (function (mf,dispatch_val,method){
var self__ = this;
var mf__$1 = this;
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(self__.method_table,cljs.core.assoc,dispatch_val,method);

cljs.core.reset_cache(self__.method_cache,self__.method_table,self__.cached_hierarchy,self__.hierarchy);

return mf__$1;
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_remove_method$arity$2 = (function (mf,dispatch_val){
var self__ = this;
var mf__$1 = this;
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$3(self__.method_table,cljs.core.dissoc,dispatch_val);

cljs.core.reset_cache(self__.method_cache,self__.method_table,self__.cached_hierarchy,self__.hierarchy);

return mf__$1;
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_get_method$arity$2 = (function (mf,dispatch_val){
var self__ = this;
var mf__$1 = this;
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2((function (){var G__36981 = self__.cached_hierarchy;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__36981) : cljs.core.deref.call(null,G__36981));
})(),(function (){var G__36982 = self__.hierarchy;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__36982) : cljs.core.deref.call(null,G__36982));
})())){
} else {
cljs.core.reset_cache(self__.method_cache,self__.method_table,self__.cached_hierarchy,self__.hierarchy);
}

var temp__4124__auto__ = (function (){var G__36983 = self__.method_cache;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__36983) : cljs.core.deref.call(null,G__36983));
})().call(null,dispatch_val);
if(cljs.core.truth_(temp__4124__auto__)){
var target_fn = temp__4124__auto__;
return target_fn;
} else {
var temp__4124__auto____$1 = cljs.core.find_and_cache_best_method(self__.name,dispatch_val,self__.hierarchy,self__.method_table,self__.prefer_table,self__.method_cache,self__.cached_hierarchy);
if(cljs.core.truth_(temp__4124__auto____$1)){
var target_fn = temp__4124__auto____$1;
return target_fn;
} else {
return (function (){var G__36984 = self__.method_table;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__36984) : cljs.core.deref.call(null,G__36984));
})().call(null,self__.default_dispatch_val);
}
}
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_prefer_method$arity$3 = (function (mf,dispatch_val_x,dispatch_val_y){
var self__ = this;
var mf__$1 = this;
if(cljs.core.truth_(cljs.core.prefers_STAR_(dispatch_val_x,dispatch_val_y,self__.prefer_table))){
throw (new Error([cljs.core.str("Preference conflict in multimethod '"),cljs.core.str(self__.name),cljs.core.str("': "),cljs.core.str(dispatch_val_y),cljs.core.str(" is already preferred to "),cljs.core.str(dispatch_val_x)].join('')));
} else {
}

cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.prefer_table,((function (mf__$1){
return (function (old){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(old,dispatch_val_x,cljs.core.conj.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$3(old,dispatch_val_x,cljs.core.PersistentHashSet.EMPTY),dispatch_val_y));
});})(mf__$1))
);

return cljs.core.reset_cache(self__.method_cache,self__.method_table,self__.cached_hierarchy,self__.hierarchy);
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_methods$arity$1 = (function (mf){
var self__ = this;
var mf__$1 = this;
var G__36985 = self__.method_table;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__36985) : cljs.core.deref.call(null,G__36985));
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_prefers$arity$1 = (function (mf){
var self__ = this;
var mf__$1 = this;
var G__36986 = self__.prefer_table;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__36986) : cljs.core.deref.call(null,G__36986));
});

cljs.core.MultiFn.prototype.call = (function() {
var G__37827 = null;
var G__37827__1 = (function (self__){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$0 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$0() : self__.dispatch_fn.call(null));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

return (target_fn.cljs$core$IFn$_invoke$arity$0 ? target_fn.cljs$core$IFn$_invoke$arity$0() : target_fn.call(null));
});
var G__37827__2 = (function (self__,a){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__36987 = a;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$1 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$1(G__36987) : self__.dispatch_fn.call(null,G__36987));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__36988 = a;
return (target_fn.cljs$core$IFn$_invoke$arity$1 ? target_fn.cljs$core$IFn$_invoke$arity$1(G__36988) : target_fn.call(null,G__36988));
});
var G__37827__3 = (function (self__,a,b){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__36989 = a;
var G__36990 = b;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$2 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$2(G__36989,G__36990) : self__.dispatch_fn.call(null,G__36989,G__36990));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__36991 = a;
var G__36992 = b;
return (target_fn.cljs$core$IFn$_invoke$arity$2 ? target_fn.cljs$core$IFn$_invoke$arity$2(G__36991,G__36992) : target_fn.call(null,G__36991,G__36992));
});
var G__37827__4 = (function (self__,a,b,c){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__36993 = a;
var G__36994 = b;
var G__36995 = c;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$3 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$3(G__36993,G__36994,G__36995) : self__.dispatch_fn.call(null,G__36993,G__36994,G__36995));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__36996 = a;
var G__36997 = b;
var G__36998 = c;
return (target_fn.cljs$core$IFn$_invoke$arity$3 ? target_fn.cljs$core$IFn$_invoke$arity$3(G__36996,G__36997,G__36998) : target_fn.call(null,G__36996,G__36997,G__36998));
});
var G__37827__5 = (function (self__,a,b,c,d){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__36999 = a;
var G__37000 = b;
var G__37001 = c;
var G__37002 = d;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$4 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$4(G__36999,G__37000,G__37001,G__37002) : self__.dispatch_fn.call(null,G__36999,G__37000,G__37001,G__37002));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__37003 = a;
var G__37004 = b;
var G__37005 = c;
var G__37006 = d;
return (target_fn.cljs$core$IFn$_invoke$arity$4 ? target_fn.cljs$core$IFn$_invoke$arity$4(G__37003,G__37004,G__37005,G__37006) : target_fn.call(null,G__37003,G__37004,G__37005,G__37006));
});
var G__37827__6 = (function (self__,a,b,c,d,e){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__37007 = a;
var G__37008 = b;
var G__37009 = c;
var G__37010 = d;
var G__37011 = e;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$5 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$5(G__37007,G__37008,G__37009,G__37010,G__37011) : self__.dispatch_fn.call(null,G__37007,G__37008,G__37009,G__37010,G__37011));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__37012 = a;
var G__37013 = b;
var G__37014 = c;
var G__37015 = d;
var G__37016 = e;
return (target_fn.cljs$core$IFn$_invoke$arity$5 ? target_fn.cljs$core$IFn$_invoke$arity$5(G__37012,G__37013,G__37014,G__37015,G__37016) : target_fn.call(null,G__37012,G__37013,G__37014,G__37015,G__37016));
});
var G__37827__7 = (function (self__,a,b,c,d,e,f){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__37017 = a;
var G__37018 = b;
var G__37019 = c;
var G__37020 = d;
var G__37021 = e;
var G__37022 = f;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$6 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$6(G__37017,G__37018,G__37019,G__37020,G__37021,G__37022) : self__.dispatch_fn.call(null,G__37017,G__37018,G__37019,G__37020,G__37021,G__37022));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__37023 = a;
var G__37024 = b;
var G__37025 = c;
var G__37026 = d;
var G__37027 = e;
var G__37028 = f;
return (target_fn.cljs$core$IFn$_invoke$arity$6 ? target_fn.cljs$core$IFn$_invoke$arity$6(G__37023,G__37024,G__37025,G__37026,G__37027,G__37028) : target_fn.call(null,G__37023,G__37024,G__37025,G__37026,G__37027,G__37028));
});
var G__37827__8 = (function (self__,a,b,c,d,e,f,g){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__37029 = a;
var G__37030 = b;
var G__37031 = c;
var G__37032 = d;
var G__37033 = e;
var G__37034 = f;
var G__37035 = g;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$7 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$7(G__37029,G__37030,G__37031,G__37032,G__37033,G__37034,G__37035) : self__.dispatch_fn.call(null,G__37029,G__37030,G__37031,G__37032,G__37033,G__37034,G__37035));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__37036 = a;
var G__37037 = b;
var G__37038 = c;
var G__37039 = d;
var G__37040 = e;
var G__37041 = f;
var G__37042 = g;
return (target_fn.cljs$core$IFn$_invoke$arity$7 ? target_fn.cljs$core$IFn$_invoke$arity$7(G__37036,G__37037,G__37038,G__37039,G__37040,G__37041,G__37042) : target_fn.call(null,G__37036,G__37037,G__37038,G__37039,G__37040,G__37041,G__37042));
});
var G__37827__9 = (function (self__,a,b,c,d,e,f,g,h){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__37043 = a;
var G__37044 = b;
var G__37045 = c;
var G__37046 = d;
var G__37047 = e;
var G__37048 = f;
var G__37049 = g;
var G__37050 = h;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$8 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$8(G__37043,G__37044,G__37045,G__37046,G__37047,G__37048,G__37049,G__37050) : self__.dispatch_fn.call(null,G__37043,G__37044,G__37045,G__37046,G__37047,G__37048,G__37049,G__37050));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__37051 = a;
var G__37052 = b;
var G__37053 = c;
var G__37054 = d;
var G__37055 = e;
var G__37056 = f;
var G__37057 = g;
var G__37058 = h;
return (target_fn.cljs$core$IFn$_invoke$arity$8 ? target_fn.cljs$core$IFn$_invoke$arity$8(G__37051,G__37052,G__37053,G__37054,G__37055,G__37056,G__37057,G__37058) : target_fn.call(null,G__37051,G__37052,G__37053,G__37054,G__37055,G__37056,G__37057,G__37058));
});
var G__37827__10 = (function (self__,a,b,c,d,e,f,g,h,i){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__37059 = a;
var G__37060 = b;
var G__37061 = c;
var G__37062 = d;
var G__37063 = e;
var G__37064 = f;
var G__37065 = g;
var G__37066 = h;
var G__37067 = i;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$9 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$9(G__37059,G__37060,G__37061,G__37062,G__37063,G__37064,G__37065,G__37066,G__37067) : self__.dispatch_fn.call(null,G__37059,G__37060,G__37061,G__37062,G__37063,G__37064,G__37065,G__37066,G__37067));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__37068 = a;
var G__37069 = b;
var G__37070 = c;
var G__37071 = d;
var G__37072 = e;
var G__37073 = f;
var G__37074 = g;
var G__37075 = h;
var G__37076 = i;
return (target_fn.cljs$core$IFn$_invoke$arity$9 ? target_fn.cljs$core$IFn$_invoke$arity$9(G__37068,G__37069,G__37070,G__37071,G__37072,G__37073,G__37074,G__37075,G__37076) : target_fn.call(null,G__37068,G__37069,G__37070,G__37071,G__37072,G__37073,G__37074,G__37075,G__37076));
});
var G__37827__11 = (function (self__,a,b,c,d,e,f,g,h,i,j){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__37077 = a;
var G__37078 = b;
var G__37079 = c;
var G__37080 = d;
var G__37081 = e;
var G__37082 = f;
var G__37083 = g;
var G__37084 = h;
var G__37085 = i;
var G__37086 = j;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$10 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$10(G__37077,G__37078,G__37079,G__37080,G__37081,G__37082,G__37083,G__37084,G__37085,G__37086) : self__.dispatch_fn.call(null,G__37077,G__37078,G__37079,G__37080,G__37081,G__37082,G__37083,G__37084,G__37085,G__37086));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__37087 = a;
var G__37088 = b;
var G__37089 = c;
var G__37090 = d;
var G__37091 = e;
var G__37092 = f;
var G__37093 = g;
var G__37094 = h;
var G__37095 = i;
var G__37096 = j;
return (target_fn.cljs$core$IFn$_invoke$arity$10 ? target_fn.cljs$core$IFn$_invoke$arity$10(G__37087,G__37088,G__37089,G__37090,G__37091,G__37092,G__37093,G__37094,G__37095,G__37096) : target_fn.call(null,G__37087,G__37088,G__37089,G__37090,G__37091,G__37092,G__37093,G__37094,G__37095,G__37096));
});
var G__37827__12 = (function (self__,a,b,c,d,e,f,g,h,i,j,k){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__37097 = a;
var G__37098 = b;
var G__37099 = c;
var G__37100 = d;
var G__37101 = e;
var G__37102 = f;
var G__37103 = g;
var G__37104 = h;
var G__37105 = i;
var G__37106 = j;
var G__37107 = k;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$11 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$11(G__37097,G__37098,G__37099,G__37100,G__37101,G__37102,G__37103,G__37104,G__37105,G__37106,G__37107) : self__.dispatch_fn.call(null,G__37097,G__37098,G__37099,G__37100,G__37101,G__37102,G__37103,G__37104,G__37105,G__37106,G__37107));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__37108 = a;
var G__37109 = b;
var G__37110 = c;
var G__37111 = d;
var G__37112 = e;
var G__37113 = f;
var G__37114 = g;
var G__37115 = h;
var G__37116 = i;
var G__37117 = j;
var G__37118 = k;
return (target_fn.cljs$core$IFn$_invoke$arity$11 ? target_fn.cljs$core$IFn$_invoke$arity$11(G__37108,G__37109,G__37110,G__37111,G__37112,G__37113,G__37114,G__37115,G__37116,G__37117,G__37118) : target_fn.call(null,G__37108,G__37109,G__37110,G__37111,G__37112,G__37113,G__37114,G__37115,G__37116,G__37117,G__37118));
});
var G__37827__13 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__37119 = a;
var G__37120 = b;
var G__37121 = c;
var G__37122 = d;
var G__37123 = e;
var G__37124 = f;
var G__37125 = g;
var G__37126 = h;
var G__37127 = i;
var G__37128 = j;
var G__37129 = k;
var G__37130 = l;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$12 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$12(G__37119,G__37120,G__37121,G__37122,G__37123,G__37124,G__37125,G__37126,G__37127,G__37128,G__37129,G__37130) : self__.dispatch_fn.call(null,G__37119,G__37120,G__37121,G__37122,G__37123,G__37124,G__37125,G__37126,G__37127,G__37128,G__37129,G__37130));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__37131 = a;
var G__37132 = b;
var G__37133 = c;
var G__37134 = d;
var G__37135 = e;
var G__37136 = f;
var G__37137 = g;
var G__37138 = h;
var G__37139 = i;
var G__37140 = j;
var G__37141 = k;
var G__37142 = l;
return (target_fn.cljs$core$IFn$_invoke$arity$12 ? target_fn.cljs$core$IFn$_invoke$arity$12(G__37131,G__37132,G__37133,G__37134,G__37135,G__37136,G__37137,G__37138,G__37139,G__37140,G__37141,G__37142) : target_fn.call(null,G__37131,G__37132,G__37133,G__37134,G__37135,G__37136,G__37137,G__37138,G__37139,G__37140,G__37141,G__37142));
});
var G__37827__14 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__37143 = a;
var G__37144 = b;
var G__37145 = c;
var G__37146 = d;
var G__37147 = e;
var G__37148 = f;
var G__37149 = g;
var G__37150 = h;
var G__37151 = i;
var G__37152 = j;
var G__37153 = k;
var G__37154 = l;
var G__37155 = m;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$13 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$13(G__37143,G__37144,G__37145,G__37146,G__37147,G__37148,G__37149,G__37150,G__37151,G__37152,G__37153,G__37154,G__37155) : self__.dispatch_fn.call(null,G__37143,G__37144,G__37145,G__37146,G__37147,G__37148,G__37149,G__37150,G__37151,G__37152,G__37153,G__37154,G__37155));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__37156 = a;
var G__37157 = b;
var G__37158 = c;
var G__37159 = d;
var G__37160 = e;
var G__37161 = f;
var G__37162 = g;
var G__37163 = h;
var G__37164 = i;
var G__37165 = j;
var G__37166 = k;
var G__37167 = l;
var G__37168 = m;
return (target_fn.cljs$core$IFn$_invoke$arity$13 ? target_fn.cljs$core$IFn$_invoke$arity$13(G__37156,G__37157,G__37158,G__37159,G__37160,G__37161,G__37162,G__37163,G__37164,G__37165,G__37166,G__37167,G__37168) : target_fn.call(null,G__37156,G__37157,G__37158,G__37159,G__37160,G__37161,G__37162,G__37163,G__37164,G__37165,G__37166,G__37167,G__37168));
});
var G__37827__15 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__37169 = a;
var G__37170 = b;
var G__37171 = c;
var G__37172 = d;
var G__37173 = e;
var G__37174 = f;
var G__37175 = g;
var G__37176 = h;
var G__37177 = i;
var G__37178 = j;
var G__37179 = k;
var G__37180 = l;
var G__37181 = m;
var G__37182 = n;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$14 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$14(G__37169,G__37170,G__37171,G__37172,G__37173,G__37174,G__37175,G__37176,G__37177,G__37178,G__37179,G__37180,G__37181,G__37182) : self__.dispatch_fn.call(null,G__37169,G__37170,G__37171,G__37172,G__37173,G__37174,G__37175,G__37176,G__37177,G__37178,G__37179,G__37180,G__37181,G__37182));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__37183 = a;
var G__37184 = b;
var G__37185 = c;
var G__37186 = d;
var G__37187 = e;
var G__37188 = f;
var G__37189 = g;
var G__37190 = h;
var G__37191 = i;
var G__37192 = j;
var G__37193 = k;
var G__37194 = l;
var G__37195 = m;
var G__37196 = n;
return (target_fn.cljs$core$IFn$_invoke$arity$14 ? target_fn.cljs$core$IFn$_invoke$arity$14(G__37183,G__37184,G__37185,G__37186,G__37187,G__37188,G__37189,G__37190,G__37191,G__37192,G__37193,G__37194,G__37195,G__37196) : target_fn.call(null,G__37183,G__37184,G__37185,G__37186,G__37187,G__37188,G__37189,G__37190,G__37191,G__37192,G__37193,G__37194,G__37195,G__37196));
});
var G__37827__16 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__37197 = a;
var G__37198 = b;
var G__37199 = c;
var G__37200 = d;
var G__37201 = e;
var G__37202 = f;
var G__37203 = g;
var G__37204 = h;
var G__37205 = i;
var G__37206 = j;
var G__37207 = k;
var G__37208 = l;
var G__37209 = m;
var G__37210 = n;
var G__37211 = o;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$15 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$15(G__37197,G__37198,G__37199,G__37200,G__37201,G__37202,G__37203,G__37204,G__37205,G__37206,G__37207,G__37208,G__37209,G__37210,G__37211) : self__.dispatch_fn.call(null,G__37197,G__37198,G__37199,G__37200,G__37201,G__37202,G__37203,G__37204,G__37205,G__37206,G__37207,G__37208,G__37209,G__37210,G__37211));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__37212 = a;
var G__37213 = b;
var G__37214 = c;
var G__37215 = d;
var G__37216 = e;
var G__37217 = f;
var G__37218 = g;
var G__37219 = h;
var G__37220 = i;
var G__37221 = j;
var G__37222 = k;
var G__37223 = l;
var G__37224 = m;
var G__37225 = n;
var G__37226 = o;
return (target_fn.cljs$core$IFn$_invoke$arity$15 ? target_fn.cljs$core$IFn$_invoke$arity$15(G__37212,G__37213,G__37214,G__37215,G__37216,G__37217,G__37218,G__37219,G__37220,G__37221,G__37222,G__37223,G__37224,G__37225,G__37226) : target_fn.call(null,G__37212,G__37213,G__37214,G__37215,G__37216,G__37217,G__37218,G__37219,G__37220,G__37221,G__37222,G__37223,G__37224,G__37225,G__37226));
});
var G__37827__17 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__37227 = a;
var G__37228 = b;
var G__37229 = c;
var G__37230 = d;
var G__37231 = e;
var G__37232 = f;
var G__37233 = g;
var G__37234 = h;
var G__37235 = i;
var G__37236 = j;
var G__37237 = k;
var G__37238 = l;
var G__37239 = m;
var G__37240 = n;
var G__37241 = o;
var G__37242 = p;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$16 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$16(G__37227,G__37228,G__37229,G__37230,G__37231,G__37232,G__37233,G__37234,G__37235,G__37236,G__37237,G__37238,G__37239,G__37240,G__37241,G__37242) : self__.dispatch_fn.call(null,G__37227,G__37228,G__37229,G__37230,G__37231,G__37232,G__37233,G__37234,G__37235,G__37236,G__37237,G__37238,G__37239,G__37240,G__37241,G__37242));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__37243 = a;
var G__37244 = b;
var G__37245 = c;
var G__37246 = d;
var G__37247 = e;
var G__37248 = f;
var G__37249 = g;
var G__37250 = h;
var G__37251 = i;
var G__37252 = j;
var G__37253 = k;
var G__37254 = l;
var G__37255 = m;
var G__37256 = n;
var G__37257 = o;
var G__37258 = p;
return (target_fn.cljs$core$IFn$_invoke$arity$16 ? target_fn.cljs$core$IFn$_invoke$arity$16(G__37243,G__37244,G__37245,G__37246,G__37247,G__37248,G__37249,G__37250,G__37251,G__37252,G__37253,G__37254,G__37255,G__37256,G__37257,G__37258) : target_fn.call(null,G__37243,G__37244,G__37245,G__37246,G__37247,G__37248,G__37249,G__37250,G__37251,G__37252,G__37253,G__37254,G__37255,G__37256,G__37257,G__37258));
});
var G__37827__18 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__37259 = a;
var G__37260 = b;
var G__37261 = c;
var G__37262 = d;
var G__37263 = e;
var G__37264 = f;
var G__37265 = g;
var G__37266 = h;
var G__37267 = i;
var G__37268 = j;
var G__37269 = k;
var G__37270 = l;
var G__37271 = m;
var G__37272 = n;
var G__37273 = o;
var G__37274 = p;
var G__37275 = q;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$17 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$17(G__37259,G__37260,G__37261,G__37262,G__37263,G__37264,G__37265,G__37266,G__37267,G__37268,G__37269,G__37270,G__37271,G__37272,G__37273,G__37274,G__37275) : self__.dispatch_fn.call(null,G__37259,G__37260,G__37261,G__37262,G__37263,G__37264,G__37265,G__37266,G__37267,G__37268,G__37269,G__37270,G__37271,G__37272,G__37273,G__37274,G__37275));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__37276 = a;
var G__37277 = b;
var G__37278 = c;
var G__37279 = d;
var G__37280 = e;
var G__37281 = f;
var G__37282 = g;
var G__37283 = h;
var G__37284 = i;
var G__37285 = j;
var G__37286 = k;
var G__37287 = l;
var G__37288 = m;
var G__37289 = n;
var G__37290 = o;
var G__37291 = p;
var G__37292 = q;
return (target_fn.cljs$core$IFn$_invoke$arity$17 ? target_fn.cljs$core$IFn$_invoke$arity$17(G__37276,G__37277,G__37278,G__37279,G__37280,G__37281,G__37282,G__37283,G__37284,G__37285,G__37286,G__37287,G__37288,G__37289,G__37290,G__37291,G__37292) : target_fn.call(null,G__37276,G__37277,G__37278,G__37279,G__37280,G__37281,G__37282,G__37283,G__37284,G__37285,G__37286,G__37287,G__37288,G__37289,G__37290,G__37291,G__37292));
});
var G__37827__19 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__37293 = a;
var G__37294 = b;
var G__37295 = c;
var G__37296 = d;
var G__37297 = e;
var G__37298 = f;
var G__37299 = g;
var G__37300 = h;
var G__37301 = i;
var G__37302 = j;
var G__37303 = k;
var G__37304 = l;
var G__37305 = m;
var G__37306 = n;
var G__37307 = o;
var G__37308 = p;
var G__37309 = q;
var G__37310 = r;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$18 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$18(G__37293,G__37294,G__37295,G__37296,G__37297,G__37298,G__37299,G__37300,G__37301,G__37302,G__37303,G__37304,G__37305,G__37306,G__37307,G__37308,G__37309,G__37310) : self__.dispatch_fn.call(null,G__37293,G__37294,G__37295,G__37296,G__37297,G__37298,G__37299,G__37300,G__37301,G__37302,G__37303,G__37304,G__37305,G__37306,G__37307,G__37308,G__37309,G__37310));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__37311 = a;
var G__37312 = b;
var G__37313 = c;
var G__37314 = d;
var G__37315 = e;
var G__37316 = f;
var G__37317 = g;
var G__37318 = h;
var G__37319 = i;
var G__37320 = j;
var G__37321 = k;
var G__37322 = l;
var G__37323 = m;
var G__37324 = n;
var G__37325 = o;
var G__37326 = p;
var G__37327 = q;
var G__37328 = r;
return (target_fn.cljs$core$IFn$_invoke$arity$18 ? target_fn.cljs$core$IFn$_invoke$arity$18(G__37311,G__37312,G__37313,G__37314,G__37315,G__37316,G__37317,G__37318,G__37319,G__37320,G__37321,G__37322,G__37323,G__37324,G__37325,G__37326,G__37327,G__37328) : target_fn.call(null,G__37311,G__37312,G__37313,G__37314,G__37315,G__37316,G__37317,G__37318,G__37319,G__37320,G__37321,G__37322,G__37323,G__37324,G__37325,G__37326,G__37327,G__37328));
});
var G__37827__20 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__37329 = a;
var G__37330 = b;
var G__37331 = c;
var G__37332 = d;
var G__37333 = e;
var G__37334 = f;
var G__37335 = g;
var G__37336 = h;
var G__37337 = i;
var G__37338 = j;
var G__37339 = k;
var G__37340 = l;
var G__37341 = m;
var G__37342 = n;
var G__37343 = o;
var G__37344 = p;
var G__37345 = q;
var G__37346 = r;
var G__37347 = s;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$19 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$19(G__37329,G__37330,G__37331,G__37332,G__37333,G__37334,G__37335,G__37336,G__37337,G__37338,G__37339,G__37340,G__37341,G__37342,G__37343,G__37344,G__37345,G__37346,G__37347) : self__.dispatch_fn.call(null,G__37329,G__37330,G__37331,G__37332,G__37333,G__37334,G__37335,G__37336,G__37337,G__37338,G__37339,G__37340,G__37341,G__37342,G__37343,G__37344,G__37345,G__37346,G__37347));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__37348 = a;
var G__37349 = b;
var G__37350 = c;
var G__37351 = d;
var G__37352 = e;
var G__37353 = f;
var G__37354 = g;
var G__37355 = h;
var G__37356 = i;
var G__37357 = j;
var G__37358 = k;
var G__37359 = l;
var G__37360 = m;
var G__37361 = n;
var G__37362 = o;
var G__37363 = p;
var G__37364 = q;
var G__37365 = r;
var G__37366 = s;
return (target_fn.cljs$core$IFn$_invoke$arity$19 ? target_fn.cljs$core$IFn$_invoke$arity$19(G__37348,G__37349,G__37350,G__37351,G__37352,G__37353,G__37354,G__37355,G__37356,G__37357,G__37358,G__37359,G__37360,G__37361,G__37362,G__37363,G__37364,G__37365,G__37366) : target_fn.call(null,G__37348,G__37349,G__37350,G__37351,G__37352,G__37353,G__37354,G__37355,G__37356,G__37357,G__37358,G__37359,G__37360,G__37361,G__37362,G__37363,G__37364,G__37365,G__37366));
});
var G__37827__21 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__37367 = a;
var G__37368 = b;
var G__37369 = c;
var G__37370 = d;
var G__37371 = e;
var G__37372 = f;
var G__37373 = g;
var G__37374 = h;
var G__37375 = i;
var G__37376 = j;
var G__37377 = k;
var G__37378 = l;
var G__37379 = m;
var G__37380 = n;
var G__37381 = o;
var G__37382 = p;
var G__37383 = q;
var G__37384 = r;
var G__37385 = s;
var G__37386 = t;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$20 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$20(G__37367,G__37368,G__37369,G__37370,G__37371,G__37372,G__37373,G__37374,G__37375,G__37376,G__37377,G__37378,G__37379,G__37380,G__37381,G__37382,G__37383,G__37384,G__37385,G__37386) : self__.dispatch_fn.call(null,G__37367,G__37368,G__37369,G__37370,G__37371,G__37372,G__37373,G__37374,G__37375,G__37376,G__37377,G__37378,G__37379,G__37380,G__37381,G__37382,G__37383,G__37384,G__37385,G__37386));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__37387 = a;
var G__37388 = b;
var G__37389 = c;
var G__37390 = d;
var G__37391 = e;
var G__37392 = f;
var G__37393 = g;
var G__37394 = h;
var G__37395 = i;
var G__37396 = j;
var G__37397 = k;
var G__37398 = l;
var G__37399 = m;
var G__37400 = n;
var G__37401 = o;
var G__37402 = p;
var G__37403 = q;
var G__37404 = r;
var G__37405 = s;
var G__37406 = t;
return (target_fn.cljs$core$IFn$_invoke$arity$20 ? target_fn.cljs$core$IFn$_invoke$arity$20(G__37387,G__37388,G__37389,G__37390,G__37391,G__37392,G__37393,G__37394,G__37395,G__37396,G__37397,G__37398,G__37399,G__37400,G__37401,G__37402,G__37403,G__37404,G__37405,G__37406) : target_fn.call(null,G__37387,G__37388,G__37389,G__37390,G__37391,G__37392,G__37393,G__37394,G__37395,G__37396,G__37397,G__37398,G__37399,G__37400,G__37401,G__37402,G__37403,G__37404,G__37405,G__37406));
});
var G__37827__22 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(self__.dispatch_fn,a,b,c,d,cljs.core.array_seq([e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest], 0));
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(target_fn,a,b,c,d,cljs.core.array_seq([e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest], 0));
});
G__37827 = function(self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
switch(arguments.length){
case 1:
return G__37827__1.call(this,self__);
case 2:
return G__37827__2.call(this,self__,a);
case 3:
return G__37827__3.call(this,self__,a,b);
case 4:
return G__37827__4.call(this,self__,a,b,c);
case 5:
return G__37827__5.call(this,self__,a,b,c,d);
case 6:
return G__37827__6.call(this,self__,a,b,c,d,e);
case 7:
return G__37827__7.call(this,self__,a,b,c,d,e,f);
case 8:
return G__37827__8.call(this,self__,a,b,c,d,e,f,g);
case 9:
return G__37827__9.call(this,self__,a,b,c,d,e,f,g,h);
case 10:
return G__37827__10.call(this,self__,a,b,c,d,e,f,g,h,i);
case 11:
return G__37827__11.call(this,self__,a,b,c,d,e,f,g,h,i,j);
case 12:
return G__37827__12.call(this,self__,a,b,c,d,e,f,g,h,i,j,k);
case 13:
return G__37827__13.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l);
case 14:
return G__37827__14.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m);
case 15:
return G__37827__15.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
case 16:
return G__37827__16.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
case 17:
return G__37827__17.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
case 18:
return G__37827__18.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
case 19:
return G__37827__19.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
case 20:
return G__37827__20.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
case 21:
return G__37827__21.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
case 22:
return G__37827__22.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__37827.cljs$core$IFn$_invoke$arity$1 = G__37827__1;
G__37827.cljs$core$IFn$_invoke$arity$2 = G__37827__2;
G__37827.cljs$core$IFn$_invoke$arity$3 = G__37827__3;
G__37827.cljs$core$IFn$_invoke$arity$4 = G__37827__4;
G__37827.cljs$core$IFn$_invoke$arity$5 = G__37827__5;
G__37827.cljs$core$IFn$_invoke$arity$6 = G__37827__6;
G__37827.cljs$core$IFn$_invoke$arity$7 = G__37827__7;
G__37827.cljs$core$IFn$_invoke$arity$8 = G__37827__8;
G__37827.cljs$core$IFn$_invoke$arity$9 = G__37827__9;
G__37827.cljs$core$IFn$_invoke$arity$10 = G__37827__10;
G__37827.cljs$core$IFn$_invoke$arity$11 = G__37827__11;
G__37827.cljs$core$IFn$_invoke$arity$12 = G__37827__12;
G__37827.cljs$core$IFn$_invoke$arity$13 = G__37827__13;
G__37827.cljs$core$IFn$_invoke$arity$14 = G__37827__14;
G__37827.cljs$core$IFn$_invoke$arity$15 = G__37827__15;
G__37827.cljs$core$IFn$_invoke$arity$16 = G__37827__16;
G__37827.cljs$core$IFn$_invoke$arity$17 = G__37827__17;
G__37827.cljs$core$IFn$_invoke$arity$18 = G__37827__18;
G__37827.cljs$core$IFn$_invoke$arity$19 = G__37827__19;
G__37827.cljs$core$IFn$_invoke$arity$20 = G__37827__20;
G__37827.cljs$core$IFn$_invoke$arity$21 = G__37827__21;
G__37827.cljs$core$IFn$_invoke$arity$22 = G__37827__22;
return G__37827;
})()
;

cljs.core.MultiFn.prototype.apply = (function (self__,args36979){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args36979)));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$0 = (function (){
var self__ = this;
var mf = this;
var dispatch_val = (function (){return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$0 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$0() : self__.dispatch_fn.call(null));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

return (target_fn.cljs$core$IFn$_invoke$arity$0 ? target_fn.cljs$core$IFn$_invoke$arity$0() : target_fn.call(null));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$1 = (function (a){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__37407 = a;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$1 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$1(G__37407) : self__.dispatch_fn.call(null,G__37407));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__37408 = a;
return (target_fn.cljs$core$IFn$_invoke$arity$1 ? target_fn.cljs$core$IFn$_invoke$arity$1(G__37408) : target_fn.call(null,G__37408));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$2 = (function (a,b){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__37409 = a;
var G__37410 = b;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$2 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$2(G__37409,G__37410) : self__.dispatch_fn.call(null,G__37409,G__37410));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__37411 = a;
var G__37412 = b;
return (target_fn.cljs$core$IFn$_invoke$arity$2 ? target_fn.cljs$core$IFn$_invoke$arity$2(G__37411,G__37412) : target_fn.call(null,G__37411,G__37412));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$3 = (function (a,b,c){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__37413 = a;
var G__37414 = b;
var G__37415 = c;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$3 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$3(G__37413,G__37414,G__37415) : self__.dispatch_fn.call(null,G__37413,G__37414,G__37415));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__37416 = a;
var G__37417 = b;
var G__37418 = c;
return (target_fn.cljs$core$IFn$_invoke$arity$3 ? target_fn.cljs$core$IFn$_invoke$arity$3(G__37416,G__37417,G__37418) : target_fn.call(null,G__37416,G__37417,G__37418));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$4 = (function (a,b,c,d){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__37419 = a;
var G__37420 = b;
var G__37421 = c;
var G__37422 = d;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$4 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$4(G__37419,G__37420,G__37421,G__37422) : self__.dispatch_fn.call(null,G__37419,G__37420,G__37421,G__37422));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__37423 = a;
var G__37424 = b;
var G__37425 = c;
var G__37426 = d;
return (target_fn.cljs$core$IFn$_invoke$arity$4 ? target_fn.cljs$core$IFn$_invoke$arity$4(G__37423,G__37424,G__37425,G__37426) : target_fn.call(null,G__37423,G__37424,G__37425,G__37426));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$5 = (function (a,b,c,d,e){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__37427 = a;
var G__37428 = b;
var G__37429 = c;
var G__37430 = d;
var G__37431 = e;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$5 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$5(G__37427,G__37428,G__37429,G__37430,G__37431) : self__.dispatch_fn.call(null,G__37427,G__37428,G__37429,G__37430,G__37431));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__37432 = a;
var G__37433 = b;
var G__37434 = c;
var G__37435 = d;
var G__37436 = e;
return (target_fn.cljs$core$IFn$_invoke$arity$5 ? target_fn.cljs$core$IFn$_invoke$arity$5(G__37432,G__37433,G__37434,G__37435,G__37436) : target_fn.call(null,G__37432,G__37433,G__37434,G__37435,G__37436));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$6 = (function (a,b,c,d,e,f){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__37437 = a;
var G__37438 = b;
var G__37439 = c;
var G__37440 = d;
var G__37441 = e;
var G__37442 = f;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$6 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$6(G__37437,G__37438,G__37439,G__37440,G__37441,G__37442) : self__.dispatch_fn.call(null,G__37437,G__37438,G__37439,G__37440,G__37441,G__37442));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__37443 = a;
var G__37444 = b;
var G__37445 = c;
var G__37446 = d;
var G__37447 = e;
var G__37448 = f;
return (target_fn.cljs$core$IFn$_invoke$arity$6 ? target_fn.cljs$core$IFn$_invoke$arity$6(G__37443,G__37444,G__37445,G__37446,G__37447,G__37448) : target_fn.call(null,G__37443,G__37444,G__37445,G__37446,G__37447,G__37448));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$7 = (function (a,b,c,d,e,f,g){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__37449 = a;
var G__37450 = b;
var G__37451 = c;
var G__37452 = d;
var G__37453 = e;
var G__37454 = f;
var G__37455 = g;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$7 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$7(G__37449,G__37450,G__37451,G__37452,G__37453,G__37454,G__37455) : self__.dispatch_fn.call(null,G__37449,G__37450,G__37451,G__37452,G__37453,G__37454,G__37455));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__37456 = a;
var G__37457 = b;
var G__37458 = c;
var G__37459 = d;
var G__37460 = e;
var G__37461 = f;
var G__37462 = g;
return (target_fn.cljs$core$IFn$_invoke$arity$7 ? target_fn.cljs$core$IFn$_invoke$arity$7(G__37456,G__37457,G__37458,G__37459,G__37460,G__37461,G__37462) : target_fn.call(null,G__37456,G__37457,G__37458,G__37459,G__37460,G__37461,G__37462));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$8 = (function (a,b,c,d,e,f,g,h){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__37463 = a;
var G__37464 = b;
var G__37465 = c;
var G__37466 = d;
var G__37467 = e;
var G__37468 = f;
var G__37469 = g;
var G__37470 = h;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$8 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$8(G__37463,G__37464,G__37465,G__37466,G__37467,G__37468,G__37469,G__37470) : self__.dispatch_fn.call(null,G__37463,G__37464,G__37465,G__37466,G__37467,G__37468,G__37469,G__37470));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__37471 = a;
var G__37472 = b;
var G__37473 = c;
var G__37474 = d;
var G__37475 = e;
var G__37476 = f;
var G__37477 = g;
var G__37478 = h;
return (target_fn.cljs$core$IFn$_invoke$arity$8 ? target_fn.cljs$core$IFn$_invoke$arity$8(G__37471,G__37472,G__37473,G__37474,G__37475,G__37476,G__37477,G__37478) : target_fn.call(null,G__37471,G__37472,G__37473,G__37474,G__37475,G__37476,G__37477,G__37478));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$9 = (function (a,b,c,d,e,f,g,h,i){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__37479 = a;
var G__37480 = b;
var G__37481 = c;
var G__37482 = d;
var G__37483 = e;
var G__37484 = f;
var G__37485 = g;
var G__37486 = h;
var G__37487 = i;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$9 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$9(G__37479,G__37480,G__37481,G__37482,G__37483,G__37484,G__37485,G__37486,G__37487) : self__.dispatch_fn.call(null,G__37479,G__37480,G__37481,G__37482,G__37483,G__37484,G__37485,G__37486,G__37487));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__37488 = a;
var G__37489 = b;
var G__37490 = c;
var G__37491 = d;
var G__37492 = e;
var G__37493 = f;
var G__37494 = g;
var G__37495 = h;
var G__37496 = i;
return (target_fn.cljs$core$IFn$_invoke$arity$9 ? target_fn.cljs$core$IFn$_invoke$arity$9(G__37488,G__37489,G__37490,G__37491,G__37492,G__37493,G__37494,G__37495,G__37496) : target_fn.call(null,G__37488,G__37489,G__37490,G__37491,G__37492,G__37493,G__37494,G__37495,G__37496));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$10 = (function (a,b,c,d,e,f,g,h,i,j){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__37497 = a;
var G__37498 = b;
var G__37499 = c;
var G__37500 = d;
var G__37501 = e;
var G__37502 = f;
var G__37503 = g;
var G__37504 = h;
var G__37505 = i;
var G__37506 = j;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$10 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$10(G__37497,G__37498,G__37499,G__37500,G__37501,G__37502,G__37503,G__37504,G__37505,G__37506) : self__.dispatch_fn.call(null,G__37497,G__37498,G__37499,G__37500,G__37501,G__37502,G__37503,G__37504,G__37505,G__37506));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__37507 = a;
var G__37508 = b;
var G__37509 = c;
var G__37510 = d;
var G__37511 = e;
var G__37512 = f;
var G__37513 = g;
var G__37514 = h;
var G__37515 = i;
var G__37516 = j;
return (target_fn.cljs$core$IFn$_invoke$arity$10 ? target_fn.cljs$core$IFn$_invoke$arity$10(G__37507,G__37508,G__37509,G__37510,G__37511,G__37512,G__37513,G__37514,G__37515,G__37516) : target_fn.call(null,G__37507,G__37508,G__37509,G__37510,G__37511,G__37512,G__37513,G__37514,G__37515,G__37516));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$11 = (function (a,b,c,d,e,f,g,h,i,j,k){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__37517 = a;
var G__37518 = b;
var G__37519 = c;
var G__37520 = d;
var G__37521 = e;
var G__37522 = f;
var G__37523 = g;
var G__37524 = h;
var G__37525 = i;
var G__37526 = j;
var G__37527 = k;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$11 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$11(G__37517,G__37518,G__37519,G__37520,G__37521,G__37522,G__37523,G__37524,G__37525,G__37526,G__37527) : self__.dispatch_fn.call(null,G__37517,G__37518,G__37519,G__37520,G__37521,G__37522,G__37523,G__37524,G__37525,G__37526,G__37527));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__37528 = a;
var G__37529 = b;
var G__37530 = c;
var G__37531 = d;
var G__37532 = e;
var G__37533 = f;
var G__37534 = g;
var G__37535 = h;
var G__37536 = i;
var G__37537 = j;
var G__37538 = k;
return (target_fn.cljs$core$IFn$_invoke$arity$11 ? target_fn.cljs$core$IFn$_invoke$arity$11(G__37528,G__37529,G__37530,G__37531,G__37532,G__37533,G__37534,G__37535,G__37536,G__37537,G__37538) : target_fn.call(null,G__37528,G__37529,G__37530,G__37531,G__37532,G__37533,G__37534,G__37535,G__37536,G__37537,G__37538));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$12 = (function (a,b,c,d,e,f,g,h,i,j,k,l){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__37539 = a;
var G__37540 = b;
var G__37541 = c;
var G__37542 = d;
var G__37543 = e;
var G__37544 = f;
var G__37545 = g;
var G__37546 = h;
var G__37547 = i;
var G__37548 = j;
var G__37549 = k;
var G__37550 = l;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$12 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$12(G__37539,G__37540,G__37541,G__37542,G__37543,G__37544,G__37545,G__37546,G__37547,G__37548,G__37549,G__37550) : self__.dispatch_fn.call(null,G__37539,G__37540,G__37541,G__37542,G__37543,G__37544,G__37545,G__37546,G__37547,G__37548,G__37549,G__37550));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__37551 = a;
var G__37552 = b;
var G__37553 = c;
var G__37554 = d;
var G__37555 = e;
var G__37556 = f;
var G__37557 = g;
var G__37558 = h;
var G__37559 = i;
var G__37560 = j;
var G__37561 = k;
var G__37562 = l;
return (target_fn.cljs$core$IFn$_invoke$arity$12 ? target_fn.cljs$core$IFn$_invoke$arity$12(G__37551,G__37552,G__37553,G__37554,G__37555,G__37556,G__37557,G__37558,G__37559,G__37560,G__37561,G__37562) : target_fn.call(null,G__37551,G__37552,G__37553,G__37554,G__37555,G__37556,G__37557,G__37558,G__37559,G__37560,G__37561,G__37562));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$13 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__37563 = a;
var G__37564 = b;
var G__37565 = c;
var G__37566 = d;
var G__37567 = e;
var G__37568 = f;
var G__37569 = g;
var G__37570 = h;
var G__37571 = i;
var G__37572 = j;
var G__37573 = k;
var G__37574 = l;
var G__37575 = m;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$13 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$13(G__37563,G__37564,G__37565,G__37566,G__37567,G__37568,G__37569,G__37570,G__37571,G__37572,G__37573,G__37574,G__37575) : self__.dispatch_fn.call(null,G__37563,G__37564,G__37565,G__37566,G__37567,G__37568,G__37569,G__37570,G__37571,G__37572,G__37573,G__37574,G__37575));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__37576 = a;
var G__37577 = b;
var G__37578 = c;
var G__37579 = d;
var G__37580 = e;
var G__37581 = f;
var G__37582 = g;
var G__37583 = h;
var G__37584 = i;
var G__37585 = j;
var G__37586 = k;
var G__37587 = l;
var G__37588 = m;
return (target_fn.cljs$core$IFn$_invoke$arity$13 ? target_fn.cljs$core$IFn$_invoke$arity$13(G__37576,G__37577,G__37578,G__37579,G__37580,G__37581,G__37582,G__37583,G__37584,G__37585,G__37586,G__37587,G__37588) : target_fn.call(null,G__37576,G__37577,G__37578,G__37579,G__37580,G__37581,G__37582,G__37583,G__37584,G__37585,G__37586,G__37587,G__37588));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$14 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__37589 = a;
var G__37590 = b;
var G__37591 = c;
var G__37592 = d;
var G__37593 = e;
var G__37594 = f;
var G__37595 = g;
var G__37596 = h;
var G__37597 = i;
var G__37598 = j;
var G__37599 = k;
var G__37600 = l;
var G__37601 = m;
var G__37602 = n;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$14 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$14(G__37589,G__37590,G__37591,G__37592,G__37593,G__37594,G__37595,G__37596,G__37597,G__37598,G__37599,G__37600,G__37601,G__37602) : self__.dispatch_fn.call(null,G__37589,G__37590,G__37591,G__37592,G__37593,G__37594,G__37595,G__37596,G__37597,G__37598,G__37599,G__37600,G__37601,G__37602));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__37603 = a;
var G__37604 = b;
var G__37605 = c;
var G__37606 = d;
var G__37607 = e;
var G__37608 = f;
var G__37609 = g;
var G__37610 = h;
var G__37611 = i;
var G__37612 = j;
var G__37613 = k;
var G__37614 = l;
var G__37615 = m;
var G__37616 = n;
return (target_fn.cljs$core$IFn$_invoke$arity$14 ? target_fn.cljs$core$IFn$_invoke$arity$14(G__37603,G__37604,G__37605,G__37606,G__37607,G__37608,G__37609,G__37610,G__37611,G__37612,G__37613,G__37614,G__37615,G__37616) : target_fn.call(null,G__37603,G__37604,G__37605,G__37606,G__37607,G__37608,G__37609,G__37610,G__37611,G__37612,G__37613,G__37614,G__37615,G__37616));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$15 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__37617 = a;
var G__37618 = b;
var G__37619 = c;
var G__37620 = d;
var G__37621 = e;
var G__37622 = f;
var G__37623 = g;
var G__37624 = h;
var G__37625 = i;
var G__37626 = j;
var G__37627 = k;
var G__37628 = l;
var G__37629 = m;
var G__37630 = n;
var G__37631 = o;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$15 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$15(G__37617,G__37618,G__37619,G__37620,G__37621,G__37622,G__37623,G__37624,G__37625,G__37626,G__37627,G__37628,G__37629,G__37630,G__37631) : self__.dispatch_fn.call(null,G__37617,G__37618,G__37619,G__37620,G__37621,G__37622,G__37623,G__37624,G__37625,G__37626,G__37627,G__37628,G__37629,G__37630,G__37631));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__37632 = a;
var G__37633 = b;
var G__37634 = c;
var G__37635 = d;
var G__37636 = e;
var G__37637 = f;
var G__37638 = g;
var G__37639 = h;
var G__37640 = i;
var G__37641 = j;
var G__37642 = k;
var G__37643 = l;
var G__37644 = m;
var G__37645 = n;
var G__37646 = o;
return (target_fn.cljs$core$IFn$_invoke$arity$15 ? target_fn.cljs$core$IFn$_invoke$arity$15(G__37632,G__37633,G__37634,G__37635,G__37636,G__37637,G__37638,G__37639,G__37640,G__37641,G__37642,G__37643,G__37644,G__37645,G__37646) : target_fn.call(null,G__37632,G__37633,G__37634,G__37635,G__37636,G__37637,G__37638,G__37639,G__37640,G__37641,G__37642,G__37643,G__37644,G__37645,G__37646));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$16 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__37647 = a;
var G__37648 = b;
var G__37649 = c;
var G__37650 = d;
var G__37651 = e;
var G__37652 = f;
var G__37653 = g;
var G__37654 = h;
var G__37655 = i;
var G__37656 = j;
var G__37657 = k;
var G__37658 = l;
var G__37659 = m;
var G__37660 = n;
var G__37661 = o;
var G__37662 = p;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$16 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$16(G__37647,G__37648,G__37649,G__37650,G__37651,G__37652,G__37653,G__37654,G__37655,G__37656,G__37657,G__37658,G__37659,G__37660,G__37661,G__37662) : self__.dispatch_fn.call(null,G__37647,G__37648,G__37649,G__37650,G__37651,G__37652,G__37653,G__37654,G__37655,G__37656,G__37657,G__37658,G__37659,G__37660,G__37661,G__37662));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__37663 = a;
var G__37664 = b;
var G__37665 = c;
var G__37666 = d;
var G__37667 = e;
var G__37668 = f;
var G__37669 = g;
var G__37670 = h;
var G__37671 = i;
var G__37672 = j;
var G__37673 = k;
var G__37674 = l;
var G__37675 = m;
var G__37676 = n;
var G__37677 = o;
var G__37678 = p;
return (target_fn.cljs$core$IFn$_invoke$arity$16 ? target_fn.cljs$core$IFn$_invoke$arity$16(G__37663,G__37664,G__37665,G__37666,G__37667,G__37668,G__37669,G__37670,G__37671,G__37672,G__37673,G__37674,G__37675,G__37676,G__37677,G__37678) : target_fn.call(null,G__37663,G__37664,G__37665,G__37666,G__37667,G__37668,G__37669,G__37670,G__37671,G__37672,G__37673,G__37674,G__37675,G__37676,G__37677,G__37678));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$17 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__37679 = a;
var G__37680 = b;
var G__37681 = c;
var G__37682 = d;
var G__37683 = e;
var G__37684 = f;
var G__37685 = g;
var G__37686 = h;
var G__37687 = i;
var G__37688 = j;
var G__37689 = k;
var G__37690 = l;
var G__37691 = m;
var G__37692 = n;
var G__37693 = o;
var G__37694 = p;
var G__37695 = q;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$17 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$17(G__37679,G__37680,G__37681,G__37682,G__37683,G__37684,G__37685,G__37686,G__37687,G__37688,G__37689,G__37690,G__37691,G__37692,G__37693,G__37694,G__37695) : self__.dispatch_fn.call(null,G__37679,G__37680,G__37681,G__37682,G__37683,G__37684,G__37685,G__37686,G__37687,G__37688,G__37689,G__37690,G__37691,G__37692,G__37693,G__37694,G__37695));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__37696 = a;
var G__37697 = b;
var G__37698 = c;
var G__37699 = d;
var G__37700 = e;
var G__37701 = f;
var G__37702 = g;
var G__37703 = h;
var G__37704 = i;
var G__37705 = j;
var G__37706 = k;
var G__37707 = l;
var G__37708 = m;
var G__37709 = n;
var G__37710 = o;
var G__37711 = p;
var G__37712 = q;
return (target_fn.cljs$core$IFn$_invoke$arity$17 ? target_fn.cljs$core$IFn$_invoke$arity$17(G__37696,G__37697,G__37698,G__37699,G__37700,G__37701,G__37702,G__37703,G__37704,G__37705,G__37706,G__37707,G__37708,G__37709,G__37710,G__37711,G__37712) : target_fn.call(null,G__37696,G__37697,G__37698,G__37699,G__37700,G__37701,G__37702,G__37703,G__37704,G__37705,G__37706,G__37707,G__37708,G__37709,G__37710,G__37711,G__37712));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$18 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__37713 = a;
var G__37714 = b;
var G__37715 = c;
var G__37716 = d;
var G__37717 = e;
var G__37718 = f;
var G__37719 = g;
var G__37720 = h;
var G__37721 = i;
var G__37722 = j;
var G__37723 = k;
var G__37724 = l;
var G__37725 = m;
var G__37726 = n;
var G__37727 = o;
var G__37728 = p;
var G__37729 = q;
var G__37730 = r;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$18 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$18(G__37713,G__37714,G__37715,G__37716,G__37717,G__37718,G__37719,G__37720,G__37721,G__37722,G__37723,G__37724,G__37725,G__37726,G__37727,G__37728,G__37729,G__37730) : self__.dispatch_fn.call(null,G__37713,G__37714,G__37715,G__37716,G__37717,G__37718,G__37719,G__37720,G__37721,G__37722,G__37723,G__37724,G__37725,G__37726,G__37727,G__37728,G__37729,G__37730));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__37731 = a;
var G__37732 = b;
var G__37733 = c;
var G__37734 = d;
var G__37735 = e;
var G__37736 = f;
var G__37737 = g;
var G__37738 = h;
var G__37739 = i;
var G__37740 = j;
var G__37741 = k;
var G__37742 = l;
var G__37743 = m;
var G__37744 = n;
var G__37745 = o;
var G__37746 = p;
var G__37747 = q;
var G__37748 = r;
return (target_fn.cljs$core$IFn$_invoke$arity$18 ? target_fn.cljs$core$IFn$_invoke$arity$18(G__37731,G__37732,G__37733,G__37734,G__37735,G__37736,G__37737,G__37738,G__37739,G__37740,G__37741,G__37742,G__37743,G__37744,G__37745,G__37746,G__37747,G__37748) : target_fn.call(null,G__37731,G__37732,G__37733,G__37734,G__37735,G__37736,G__37737,G__37738,G__37739,G__37740,G__37741,G__37742,G__37743,G__37744,G__37745,G__37746,G__37747,G__37748));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$19 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__37749 = a;
var G__37750 = b;
var G__37751 = c;
var G__37752 = d;
var G__37753 = e;
var G__37754 = f;
var G__37755 = g;
var G__37756 = h;
var G__37757 = i;
var G__37758 = j;
var G__37759 = k;
var G__37760 = l;
var G__37761 = m;
var G__37762 = n;
var G__37763 = o;
var G__37764 = p;
var G__37765 = q;
var G__37766 = r;
var G__37767 = s;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$19 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$19(G__37749,G__37750,G__37751,G__37752,G__37753,G__37754,G__37755,G__37756,G__37757,G__37758,G__37759,G__37760,G__37761,G__37762,G__37763,G__37764,G__37765,G__37766,G__37767) : self__.dispatch_fn.call(null,G__37749,G__37750,G__37751,G__37752,G__37753,G__37754,G__37755,G__37756,G__37757,G__37758,G__37759,G__37760,G__37761,G__37762,G__37763,G__37764,G__37765,G__37766,G__37767));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__37768 = a;
var G__37769 = b;
var G__37770 = c;
var G__37771 = d;
var G__37772 = e;
var G__37773 = f;
var G__37774 = g;
var G__37775 = h;
var G__37776 = i;
var G__37777 = j;
var G__37778 = k;
var G__37779 = l;
var G__37780 = m;
var G__37781 = n;
var G__37782 = o;
var G__37783 = p;
var G__37784 = q;
var G__37785 = r;
var G__37786 = s;
return (target_fn.cljs$core$IFn$_invoke$arity$19 ? target_fn.cljs$core$IFn$_invoke$arity$19(G__37768,G__37769,G__37770,G__37771,G__37772,G__37773,G__37774,G__37775,G__37776,G__37777,G__37778,G__37779,G__37780,G__37781,G__37782,G__37783,G__37784,G__37785,G__37786) : target_fn.call(null,G__37768,G__37769,G__37770,G__37771,G__37772,G__37773,G__37774,G__37775,G__37776,G__37777,G__37778,G__37779,G__37780,G__37781,G__37782,G__37783,G__37784,G__37785,G__37786));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$20 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__37787 = a;
var G__37788 = b;
var G__37789 = c;
var G__37790 = d;
var G__37791 = e;
var G__37792 = f;
var G__37793 = g;
var G__37794 = h;
var G__37795 = i;
var G__37796 = j;
var G__37797 = k;
var G__37798 = l;
var G__37799 = m;
var G__37800 = n;
var G__37801 = o;
var G__37802 = p;
var G__37803 = q;
var G__37804 = r;
var G__37805 = s;
var G__37806 = t;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$20 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$20(G__37787,G__37788,G__37789,G__37790,G__37791,G__37792,G__37793,G__37794,G__37795,G__37796,G__37797,G__37798,G__37799,G__37800,G__37801,G__37802,G__37803,G__37804,G__37805,G__37806) : self__.dispatch_fn.call(null,G__37787,G__37788,G__37789,G__37790,G__37791,G__37792,G__37793,G__37794,G__37795,G__37796,G__37797,G__37798,G__37799,G__37800,G__37801,G__37802,G__37803,G__37804,G__37805,G__37806));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__37807 = a;
var G__37808 = b;
var G__37809 = c;
var G__37810 = d;
var G__37811 = e;
var G__37812 = f;
var G__37813 = g;
var G__37814 = h;
var G__37815 = i;
var G__37816 = j;
var G__37817 = k;
var G__37818 = l;
var G__37819 = m;
var G__37820 = n;
var G__37821 = o;
var G__37822 = p;
var G__37823 = q;
var G__37824 = r;
var G__37825 = s;
var G__37826 = t;
return (target_fn.cljs$core$IFn$_invoke$arity$20 ? target_fn.cljs$core$IFn$_invoke$arity$20(G__37807,G__37808,G__37809,G__37810,G__37811,G__37812,G__37813,G__37814,G__37815,G__37816,G__37817,G__37818,G__37819,G__37820,G__37821,G__37822,G__37823,G__37824,G__37825,G__37826) : target_fn.call(null,G__37807,G__37808,G__37809,G__37810,G__37811,G__37812,G__37813,G__37814,G__37815,G__37816,G__37817,G__37818,G__37819,G__37820,G__37821,G__37822,G__37823,G__37824,G__37825,G__37826));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$21 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
var self__ = this;
var mf = this;
var dispatch_val = cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(self__.dispatch_fn,a,b,c,d,cljs.core.array_seq([e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest], 0));
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(target_fn,a,b,c,d,cljs.core.array_seq([e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest], 0));
});

cljs.core.MultiFn.cljs$lang$type = true;

cljs.core.MultiFn.cljs$lang$ctorStr = "cljs.core/MultiFn";

cljs.core.MultiFn.cljs$lang$ctorPrWriter = (function (this__24859__auto__,writer__24860__auto__,opt__24861__auto__){
return cljs.core._write(writer__24860__auto__,"cljs.core/MultiFn");
});

cljs.core.__GT_MultiFn = (function __GT_MultiFn(name,dispatch_fn,default_dispatch_val,hierarchy,method_table,prefer_table,method_cache,cached_hierarchy){
return (new cljs.core.MultiFn(name,dispatch_fn,default_dispatch_val,hierarchy,method_table,prefer_table,method_cache,cached_hierarchy));
});

/**
* Removes all of the methods of multimethod.
*/
cljs.core.remove_all_methods = (function remove_all_methods(multifn){
return cljs.core._reset(multifn);
});
/**
* Removes the method of multimethod associated with dispatch-value.
*/
cljs.core.remove_method = (function remove_method(multifn,dispatch_val){
return cljs.core._remove_method(multifn,dispatch_val);
});
/**
* Causes the multimethod to prefer matches of dispatch-val-x over dispatch-val-y
* when there is a conflict
*/
cljs.core.prefer_method = (function prefer_method(multifn,dispatch_val_x,dispatch_val_y){
return cljs.core._prefer_method(multifn,dispatch_val_x,dispatch_val_y);
});
/**
* Given a multimethod, returns a map of dispatch values -> dispatch fns
*/
cljs.core.methods$ = (function methods$(multifn){
return cljs.core._methods(multifn);
});
/**
* Given a multimethod and a dispatch value, returns the dispatch fn
* that would apply to that value, or nil if none apply and no default
*/
cljs.core.get_method = (function get_method(multifn,dispatch_val){
return cljs.core._get_method(multifn,dispatch_val);
});
/**
* Given a multimethod, returns a map of preferred value -> set of other values
*/
cljs.core.prefers = (function prefers(multifn){
return cljs.core._prefers(multifn);
});

/**
* @constructor
*/
cljs.core.UUID = (function (uuid){
this.uuid = uuid;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 2153775104;
})
cljs.core.UUID.prototype.cljs$core$IHash$_hash$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
var G__37828 = cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([this$__$1], 0));
return goog.string.hashCode(G__37828);
});

cljs.core.UUID.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (_,writer,___$1){
var self__ = this;
var ___$2 = this;
return cljs.core._write(writer,[cljs.core.str("#uuid \""),cljs.core.str(self__.uuid),cljs.core.str("\"")].join(''));
});

cljs.core.UUID.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (_,other){
var self__ = this;
var ___$1 = this;
return ((other instanceof cljs.core.UUID)) && ((self__.uuid === other.uuid));
});

cljs.core.UUID.prototype.toString = (function (){
var self__ = this;
var _ = this;
return self__.uuid;
});

cljs.core.UUID.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.UUID.cljs$lang$type = true;

cljs.core.UUID.cljs$lang$ctorStr = "cljs.core/UUID";

cljs.core.UUID.cljs$lang$ctorPrWriter = (function (this__24859__auto__,writer__24860__auto__,opt__24861__auto__){
return cljs.core._write(writer__24860__auto__,"cljs.core/UUID");
});

cljs.core.__GT_UUID = (function __GT_UUID(uuid){
return (new cljs.core.UUID(uuid));
});


/**
* @constructor
*/
cljs.core.ExceptionInfo = (function (message,data,cause){
this.message = message;
this.data = data;
this.cause = cause;
})

cljs.core.ExceptionInfo.cljs$lang$type = true;

cljs.core.ExceptionInfo.cljs$lang$ctorStr = "cljs.core/ExceptionInfo";

cljs.core.ExceptionInfo.cljs$lang$ctorPrWriter = (function (this__24859__auto__,writer__24860__auto__,opt__24861__auto__){
return cljs.core._write(writer__24860__auto__,"cljs.core/ExceptionInfo");
});

cljs.core.__GT_ExceptionInfo = (function __GT_ExceptionInfo(message,data,cause){
return (new cljs.core.ExceptionInfo(message,data,cause));
});

cljs.core.ExceptionInfo.prototype = (new Error());
cljs.core.ExceptionInfo.prototype.constructor = cljs.core.ExceptionInfo;
/**
* Alpha - subject to change.
* Create an instance of ExceptionInfo, an Error type that carries a
* map of additional data.
*/
cljs.core.ex_info = (function() {
var ex_info = null;
var ex_info__2 = (function (msg,map){
return (new cljs.core.ExceptionInfo(msg,map,null));
});
var ex_info__3 = (function (msg,map,cause){
return (new cljs.core.ExceptionInfo(msg,map,cause));
});
ex_info = function(msg,map,cause){
switch(arguments.length){
case 2:
return ex_info__2.call(this,msg,map);
case 3:
return ex_info__3.call(this,msg,map,cause);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
ex_info.cljs$core$IFn$_invoke$arity$2 = ex_info__2;
ex_info.cljs$core$IFn$_invoke$arity$3 = ex_info__3;
return ex_info;
})()
;
/**
* Alpha - subject to change.
* Returns exception data (a map) if ex is an ExceptionInfo.
* Otherwise returns nil.
*/
cljs.core.ex_data = (function ex_data(ex){
if((ex instanceof cljs.core.ExceptionInfo)){
return ex.data;
} else {
return null;
}
});
/**
* Alpha - subject to change.
* Returns the message attached to the given Error / ExceptionInfo object.
* For non-Errors returns nil.
*/
cljs.core.ex_message = (function ex_message(ex){
if((ex instanceof Error)){
return ex.message;
} else {
return null;
}
});
/**
* Alpha - subject to change.
* Returns exception cause (an Error / ExceptionInfo) if ex is an
* ExceptionInfo.
* Otherwise returns nil.
*/
cljs.core.ex_cause = (function ex_cause(ex){
if((ex instanceof cljs.core.ExceptionInfo)){
return ex.cause;
} else {
return null;
}
});
/**
* Returns an JavaScript compatible comparator based upon pred.
*/
cljs.core.comparator = (function comparator(pred){
return (function (x,y){
if(cljs.core.truth_((function (){var G__37833 = x;
var G__37834 = y;
return (pred.cljs$core$IFn$_invoke$arity$2 ? pred.cljs$core$IFn$_invoke$arity$2(G__37833,G__37834) : pred.call(null,G__37833,G__37834));
})())){
return (-1);
} else {
if(cljs.core.truth_((function (){var G__37835 = y;
var G__37836 = x;
return (pred.cljs$core$IFn$_invoke$arity$2 ? pred.cljs$core$IFn$_invoke$arity$2(G__37835,G__37836) : pred.call(null,G__37835,G__37836));
})())){
return (1);
} else {
return (0);

}
}
});
});
cljs.core.special_symbol_QMARK_ = (function special_symbol_QMARK_(x){
return cljs.core.contains_QMARK_(new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 19, [new cljs.core.Symbol(null,"&","&",-2144855648,null),null,new cljs.core.Symbol(null,"defrecord*","defrecord*",-1936366207,null),null,new cljs.core.Symbol(null,"try","try",-1273693247,null),null,new cljs.core.Symbol(null,"loop*","loop*",615029416,null),null,new cljs.core.Symbol(null,"do","do",1686842252,null),null,new cljs.core.Symbol(null,"letfn*","letfn*",-110097810,null),null,new cljs.core.Symbol(null,"if","if",1181717262,null),null,new cljs.core.Symbol(null,"new","new",-444906321,null),null,new cljs.core.Symbol(null,"ns","ns",2082130287,null),null,new cljs.core.Symbol(null,"deftype*","deftype*",962659890,null),null,new cljs.core.Symbol(null,"let*","let*",1920721458,null),null,new cljs.core.Symbol(null,"js*","js*",-1134233646,null),null,new cljs.core.Symbol(null,"fn*","fn*",-752876845,null),null,new cljs.core.Symbol(null,"recur","recur",1202958259,null),null,new cljs.core.Symbol(null,"set!","set!",250714521,null),null,new cljs.core.Symbol(null,".",".",1975675962,null),null,new cljs.core.Symbol(null,"quote","quote",1377916282,null),null,new cljs.core.Symbol(null,"throw","throw",595905694,null),null,new cljs.core.Symbol(null,"def","def",597100991,null),null], null), null),x);
});
/**
* test [v] finds fn at key :test in var metadata and calls it,
* presuming failure will throw exception
*/
cljs.core.test = (function test(v){
var f = v.cljs$lang$test;
if(cljs.core.truth_(f)){
(f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));

return new cljs.core.Keyword(null,"ok","ok",967785236);
} else {
return new cljs.core.Keyword(null,"no-test","no-test",-1679482642);
}
});
